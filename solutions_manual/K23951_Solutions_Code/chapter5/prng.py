#!/usr/bin/env python3

import matplotlib.pyplot as pyplot

def lehmer(r, m, a):
    """Computes the next pseudorandom number using a Lehmer PRNG.
    
    Parameters:
        r: the seed or previous pseudorandom number
        m: a prime number
        a: an integer between 1 and m - 1
        
    Return value: the next pseudorandom number
    """
    
    return (a * r) % m

def randomSequence(length, seed):
    """Returns a list of Park-Miller pseudorandom numbers.
    
    Parameters:
        length: the number of pseudorandom numbers to generate
        seed: the initial seed
        
    Return value: a list of Park-Miller pseudorandom numbers
                  with the given length
    """
    
    r = seed
    m = 2**31 - 1
    a = 16807
    randList = [ ]
    for index in range(length):
        r = lehmer(r, m, a)
        randList.append(r / m)
    return randList
    
def histRandom(length):
    """Displays a histogram of pseudorandom numbers generated by 
       the Park-Miller PRNG.
    
    Parameter:
        length: the number of pseudorandom numbers to generate
        
    Return value: None
    """
    
    samples = randomSequence(length, 6)
    pyplot.hist(samples, 100)
    pyplot.show()

def main():
    histRandom(100000)
    
main()
