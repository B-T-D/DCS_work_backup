%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 005x004.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 285 187
%%HiResBoundingBox: 0 0 284.1792 186.4229
%%CropBox: 0 0 284.1792 186.4229
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 8532 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04FF7D27FD0652FD78FF7D277D522752275227FD047DA87D7D7D%A87D7D7DA87D7D7DA87D527DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA852%7D7DA87D7D7DA87D7D7DA87D7D7DA87D7D7D527D7D7DA87D7D7DA87D7D7D%A87D7D7DA87D527DA87D7D7DA87D7D7DA87D7D7DA87D7D7DA8527D7DA87D%7D7DA87D7D7DA87D7D7DA87D7D524CFD06FFFD047DA87DA8A87DFD12FF7D%FD12FFA8FD0FFF532EA827A8FD10FF7DFD12FFA8FD12FF52FD0EFF7DFD35%FF522F282828FD36FF7DFD0EFFA8FD35FF7D2E2F2753A8FD35FF7DFD0EFF%7DFD35FF525328282859FD35FF7DFD0EFFA8FD34FF7D2E2853285353FD35%FF7DFD0EFF7DFD33FF5328282E282828527DFD34FF7DFD0EFFA8FD33FF7E%285328532853287DFD34FF7DFD0EFF7DFD33FF532E282E2828282E28A8FD%33FFA8FD06FF7D7DA87DA87DA8A8A8FD33FF522853282F275328537DFD33%FF7DFD06FF5227274C275227527DFD33FF2728282F2828282F282EFD33FF%7DFD06FF7D275227FD05527DFD32FF2828532E2F27532E5328FD32FFA852%FD06FFA8FFFFFFA8FFA8FF7DFD32FF522728285328282853282828FD32FF%7DFD0EFFA8FD32FF2E2E28532853285328532853FD32FF7DFD0EFF7DFD31%FF532E0528282E2828282E28282EFD32FF7DFD0EFFA8FD31FF7D282E2853%2853285328532853FD32FF7DFD0EFF7DFD31FF532E272E282E2828282E28%28287DFD31FFA8FD0EFFA8FD30FF7D5328282853282F27532853275353FD%31FF7DFD0EFF7DFD30FF53282F2728282F2828282F28282853FD31FF7DFD%0EFFA8FD30FF53532E2828532E2F27532E5327532E7EFD30FF7DFD06FF52%52527D5252527D7DFD30FF53285327282853282828532828285253FD30FF%7DFD06FFA84BFD0652767DFD2FFF5353282E285328532853285328532853%A8FD2EFFA852FD06FF5277525252774B527DFD2FFF7D52282E0528282E28%28282E2828282E287DFD2FFF7DFD0EFFA8FD2FFF7E2853282E2853285328%532853285328537DFD2FFF7DFD0EFF7DFD2FFF5352282E272E282E282828%2E2828282E287DFD2FFFA8FD0EFFA8FD2FFF7D285328282853282F275328%53275328537DFD2FFF7DFD0EFF7DFD2FFF532E282F2728282F2828282F28%28282E28527DFD2EFF7DFD0EFFA8FD2FFF2E28532E2828532E2F27532E53%27532853287EFD2EFF7DFD0EFF7DFD2FFF272E2853272828532828285328%282852282F53FD2EFF7DFFFFA8A8FD0AFFA8FD2EFF7D2E2853282E285328%532853285328532853287DFD2EFF7DFFFF7D2727FD09FF7DFD2EFF53052E%282E0528282E2828282E2828282E282F28FD2EFF7DFFFF7DA87DFF7DFD07%52A8FD2EFF2E2E2853282E285328532853285328532853282EFD2EFF7DFF%FF52277DFFFD045227FD0452A8FD2DFF532752282E272E282E2828282E28%28282E282F27FD2DFF7D52FFFF7D52A8FF7D52FD057DA8A8FD2EFF532828%5328282853282F2753285327532853282EFD2EFF7DFFFF5252A8FD09FF7D%FD2DFF5253272E282F2728282F2828282F2828282E282E277EFD2DFF7DFF%FF7D277DFD09FFA8FD2CFF7E532E2828532E2828532E2F27532E53275328%53282E53FD2DFF7DFFFF7D27A8FD09FF7DFD2CFF532853272E2853272828%532828285328282852282F2753FD2DFF7DFFFFA84B7DFD09FFA8FD2CFF53%53282E2853282E28532853285328532853285328282EFD2DFF7DFFFF524C%A8FD09FF7DFD2CFF53282E052E282E0528282E2828282E2828282E282F27%2E52FD2CFF7DFFFF7D5252FD09FFA8FD2CFF5353282E2853282E28532853%28532853285328532828287DFD2CFF7DFFFF7D527DFD09FF7DFD2CFF5928%2E2752282E272E282E2828282E2828282E282F272E52FD2CFFA8FFFF5227%7DFFFD04A8FFFD04A8FD2BFF7D28532828285328282853282F2753285327%532853282E2859FD2CFF7DFFFF5252A8FF7D522752272727527DFD2BFF53%2E282F272E282F2728282F2828282F2828282E282E052E2853FD2BFF7DFF%FF7D27FFFFA827A82752275227527DFD2AFF7D28532E2828532E2828532E%2F27532E5327532853282E285353FD2AFFA852FFFF2752A8FFA87D7DFD05%A87DFD2AFF7D272E2853272E2853272828532828285328282852282F2752%282853FD2AFF7DFFFF7652A8FD09FFA8FD2AFF7D2E2853282E2853282E28%532853285328532853285328282853287DFD2AFF7DFD0EFF7DFD2AFF7D28%2E282E052E282E0528282E2828282E2828282E282F272E282F53FD2AFF7D%FD0EFFA8FD2AFF7D532853282E2853282E28532853285328532853285328%2828532E28FD2AFF7DFD0EFF7DFD2AFF7D2852282E2752282E272E282E28%28282E2828282E282F272E285327FD2AFFA8FD0EFFA8FD2AFF282E285328%28285328282853282F2753285327532853282E2853282EFD2AFF7DFD0EFF%7DFD2AFF28282E282F272E282F2728282F2828282F2828282E282E052E28%2E277EFD29FF7DFD0EFFA8FD29FFA8282E28532E2828532E2828532E2F27%532E5327532853282E2853282E53FD29FF7DFD06FFFD097DFD29FF282828%2E2853272E2853272828532828285328282852282F2752282E2753FD29FF%7DFD07FF52525276275227767DFD28FF53272E2853282E2853282E285328%5328532853285328532828285328282EFD28FFA852FD06FF7D274B52274C%4B527DFD29FF2E28282E282E052E282E0528282E2828282E2828282E282F%272E282F2753FD29FF7DFD0EFFA8FD28FF535327532853282E2853282E28%5328532853285328532853282828532E282853FD28FF7DFD0EFF7DFD28FF%5928282852282E2752282E272E282E2828282E2828282E282F272E285327%2E28FD28FFA8FD0EFFA8FD27FF7D2853282E28532828285328282853282F%2753285327532853282E2853282E285253FD27FF7DFD0EFF7DFD27FF522E%2828282E282F272E282F2728282F2828282F2828282E282E052E282E052E%2853FD27FF7DFD0EFFA8FD27FF7D2853282E28532E2828532E2828532E2F%27532E5327532853282E2853282E28532EA8FD26FF7DFD0EFF7DFD26FF7D%282E2828282E2853272E2853272828532828285328282852282F2752282E%2752282E53FD26FF7DFD0EFFA8FD26FF7D532853272E2853282E2853282E%2853285328532853285328532828285328282853287DFD26FF7DFD0EFF7D%FD26FF27282E2828282E282E052E282E0528282E2828282E2828282E282F%272E282F272E282F28FD26FF7DFD08FF52767D525252A8FD25FF7D275328%5327532853282E2853282E285328532853285328532853282828532E2828%532E2EFD26FF7DFD08FF52522752275252A8FD24FF2E2828522828285228%2E2752282E272E282E2828282E2828282E282F272E2853272E28532752FD%24FF7D52FD08FF76527D527D7DA8FD25FF5328532853282E285328282853%28282853282F2753285327532853282E2853282E2853282E28FD25FF7DFD%0EFF7DFD24FF522828282E2828282E282F272E282F2728282F2828282F28%28282E282E052E282E052E282E052F7DFD24FF7DFD0EFFA8FD23FFA82E53%28532853282E28532E2828532E2828532E2F27532E5327532853282E2853%282E2853282E28537DFD23FF7DFD0EFF7DFD23FF532E2828282E2828282E%2853272E2853272828532828285328282852282F2752282E2752282E272E%2853FD23FF7DFD0EFFA8FD22FF7E53285327532853272E2853282E285328%2E2853285328532853285328532828285328282853282828532EA8FD22FF%7DFD0EFF7DFD22FF2E282F2828282E2828282E282E052E282E0528282E28%28282E2828282E282F272E282F272E282F2728282F2853FD21FF7DFD0EFF%A8FD20FF537D27532E532753285327532853282E2853282E285328532853%285328532853282828532E2828532E2828532E2F28FD21FF7DFD0EFF7DFD%1EFFA82853282828532828285228282852282E2752282E272E282E282828%2E2828282E282F272E2853272E2853272828532828287EFD1FFFA8FD0EFF%A8FD1DFF532E5328532853285328532853282E2853282828532828285328%2F2753285327532853282E2853282E2853282E285328532853285353FD1D%FF7DFD0CFF275252FD12FF7DFD06FFA87D52280528282E2828282E272828%2E2828282E282F272E282F2728282F2827282F2828282E282E052E282E05%2E282E0528282E2828282E2828275252A9FD06FF52FD12FF52FD0CFFFD04%52A87DA87DA87DA87DA87DA87DA87D7D527D527D527D52522E5252535253%525352535253525252535253525352535252525352525253525327535253%285352535253525352535253525328535253525352535253525352522E53%52535252535352A87DA87DA87DA87DA87DA87DA87D7D27FD0CFF7DA827FF%7D277DFD0DFF7D52FF7D27FD0EFF7D27FF5252FD0DFF527DFF27A8FD0EFF%27A87D277DFD0DFFA852FFA852FD0EFFA852FF5227FD09FF7D527D52FFA8%27A8FD0BFF7652A852FF52527DFD0BFF52765252A87D4BFD0DFF52527D7D%52FD0DFF7D7D52A84BA8FD0EFF52FF527D7DFD0EFF76FF7D27FD0BFFA827%7D5227A8FD0DFFA852527D27FD0EFF7D277D524CFD0DFF27767D277DFD0E%FF277D7D527DFD0DFFA8527D7D27A8FD0DFFA8277D5227FDC0FFA8A27DFF%FFA2FD7BFF275227524BA852277DFD77FF52522727522752277DFD35FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T17:21:40+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T17:21:40+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T17:21:40+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8fuvyb1q41W7v0XT&#xA;rZ7nVIdRtwjsyWzREh5Vi+rpHK0isRwYCn+/GoMU2h7T8jNdgmhJv7IpHdK/IJJyXg8L/X0FOIvW&#xA;9AqT0ox+LxVtnPlSz8x6loNrfX/mK9F3OGMyQxWAiVg5XjHytC3H4duRJxVNv0Fqn/Ux6j/yL0//&#xA;ALJMUO/QWqf9THqP/IvT/wDskxV36C1T/qY9R/5F6f8A9kmKqV1oOv8ApL9U8x3vq+pHy9WOw4+n&#xA;6i+rTjafa9Plx/yqV2xVV/QWqf8AUx6j/wAi9P8A+yTFXfoLVP8AqY9R/wCRen/9kmKu/QWqf9TH&#xA;qP8AyL0//skxV36C1T/qY9R/5F6f/wBkmKqTaDr/ANci4+Y736n6cnrVjsPU9Tknp8f9E48ePPlX&#xA;298VVf0Fqn/Ux6j/AMi9P/7JMVd+gtU/6mPUf+Ren/8AZJirv0Fqn/Ux6j/yL0//ALJMVYn+ZHmK&#xA;+8j6VYanPqup30F3fw2MqR/o6N0SVXdpFDWZDsoj2Qla/wAwyePGZmgiUgBZYv5B/NO480+crrRP&#xA;03qS2lzwbQ5kt7BW4LC8ky3XK3NGBjPHgtPfocnLCRHi/H42QJgmnqn6C1T/AKmPUf8AkXp//ZJl&#xA;LJ36C1T/AKmPUf8AkXp//ZJirv0Fqn/Ux6j/AMi9P/7JMVUrzQdf+pz/AFPzHe/XPTf6t60dh6fq&#xA;cTw58bTlx5daYqq/oLVP+pj1H/kXp/8A2SYq79Bap/1Meo/8i9P/AOyTFXfoLVP+pj1H/kXp/wD2&#xA;SYq79Bap/wBTHqP/ACL0/wD7JMVUp9B1/wBW39DzHe+l6h+tc47Dl6fpvT06Wn2vU4df2a98VVf0&#xA;Fqn/AFMeo/8AIvT/APskxV36C1T/AKmPUf8AkXp//ZJirv0Fqn/Ux6j/AMi9P/7JMVd+gtU/6mPU&#xA;f+Ren/8AZJiqF8uNrEeva3Y3uoyajaWwtTaPcJAsqNKjtIp+rxQKV+zxqCeuKsjxV2KuxVIvI/8A&#xA;yi9l/wA9f+Tr4pKe4odirsVdirsVdirsVdirsVdirsVdir52/wCcivzB07U57bylZR+q2nX9vcXl&#xA;3V0KTr60Rg9N41DfCwbmrkdsztHjPEJeY+/9jRnkKI8i8l8n6jcadr2mXkFy9m8VxByuEcxFUYyB&#xA;6sCPhKkhu1MukLxn4fdJgD6/x5PuCGaGeGOeCRZYZVDxSoQysrCqsrDYgjoc1blL8VdirsVdirsV&#xA;dirsVdirsVdirsVdiqRaR/ylHmD/AKM/+TRxSnuKGC3P5yeU7W8u7O4ju0nsbk212qxxyiMICXmd&#xA;oZJFVEH2gTzFRVd8U01D+c/k6Z0VFu+LyBfUMBCLbsyIt4xrtbs8yKG61PTFaT7yP/yi9l/z1/5O&#xA;vipT3FDsVdirsVdirsVdirsVdirsVdirsVfEfnTXLXXvNuoaxaxyRW19fRTRRzBRIFaR6BgjOtfk&#xA;xzb4BUY++P3lw8p3PuP6Ejg+wnzj/wCZuGHL5f75Eufz/Q+sPyF83y+YPJEVtcyW31zRxDZehbkh&#xA;1t1t4/ReVGd2BejfFsDQ0G2azNDhl8vtFuVCVh6RlTN2KuxV2KuxV2KuxV2KuxV2KuxV2KpFpH/K&#xA;UeYP+jP/AJNHFKe4oYpcfld5KuZnuLqzmubmWRZZLme8u5ZW4AqsbSPKzGLixHpk8D3GK2ti/Kny&#xA;JE8bppzBo5hOpNxcmpBVhG1ZPihBiQiE/u9h8OK2i/IFra2/le2+rwpD6ryyS+moXk5lYFmoNzQA&#xA;VxSWRYodirsVdirsVdirsVdirsVdirsVYP8AnF5rPl3yXcSW16bLVbuSKDTnQEuXMqGQD4WA/dct&#xA;z+vLsEOKYB5WwySqJL4/QkiEnqZbav8Awb5tMfT3x/S4k+vul+h0H2E+cf8AzNyMOXy/3yZc/n+h&#xA;6d/zjvreq2n5gQaXbz+nYalFH9eg4ofU9CzneP4mUuvFt/hI98x9VEGN93D9o/Y2YjvXv+99VZr3&#xA;JdirsVdirsVdirsVdirsVdirsVdirHdBtbW380eY/QhSH1XtZJPTULydomLM1BuSTUnFLIsUOxV2&#xA;KpF5H/5Rey/56/8AJ18UlPcUOxV2KuxV2KuxV2KuxV2KuxV2KvAv+cmvMEDXmjeXhE/rx8NQM9Rw&#xA;4SSmEJTrWsZOZuij67933ho1B9P47ngkf2YP+Mtt/wATfM3H098f0tE+vul+h0H2E+cf/M3Iw5fL&#xA;/fJlz+f6GQfl75hvfL/nDT9Ts0jknja3jCTBihWaCSJvsshrxc0365HLHiiR/V/3JZQNS/033h9s&#xA;ZqXLdirsVdirsVdirsVdirsVdirsVdiqRaR/ylHmD/oz/wCTRxSnuKHj1x+ZnmwXEjWt3aXllDrC&#xA;2gEdrJFdzwbLKkMBeYHjI1EZmUsoLdKEqaUbP80vzFluLdJtOjQPdLEVFjdKXmMkCvp1WeiSIk0j&#xA;esfh+Dp1xWnovkCaSXyvbc4Hg4PKq+oUPMCVjzXgz7b0+Kh9sVLIsUOxV2KuxV2KuxV2KuxV2Kux&#xA;V2Kvlr/nIXWNN1L8xLdbGcTGxtYbS7oGHCeO7kLpuBWnIdNs2OiBFe8fe42c7fA/c8sj+zB/xltv&#xA;+JvmTj6e+P6WqfX3S/Q6D7CfOP8A5m5GHL5f75Mufz/Q3C7pKGRijj6qVZSQQfTbcEbjCRt/pP8A&#xA;clRz/wBN977G/KXzbB5n8kWF0n1hp7KOGyvZbogvLcRW8TSScg8hYMXrybc9xmpyQMTRcuJsMxyD&#xA;J2KuxV2KuxV2KuxV2KuxV2KuxVjugzSSeaPMfOB4OD2qr6hQ8wImAdeDPs3UVofEYpZFih2KuxVI&#xA;vI//ACi9l/z1/wCTr4pKe4odirsVdirsVdirsVdirsVdirsVfF/5j/8Akxtc/wC2jN/1GNm20/KH&#xA;w/3ZcPL/ABfj+Fi8f2YP+Mtt/wATfLMfT3x/Sxn190v0Og+wnzj/AOZuRhy+X++TLn8/0NJ9v6LX&#xA;/k22H/jn+5KP+Pfe+mf+cZr+xbyXdWK3ERvkuzM9qHUyrG1tAquUryCkggGlM1+q+r4R+4OTi5fE&#xA;/e9gzGbXYq7FXYq7FXYq7FXYq7FXYq7FUi0j/lKPMH/Rn/yaOKUPpP5i+VtS8x3fluO5MOuWcskT&#xA;2Uy8S/p1PKN1LRtVVLceXMDcqMUMlxV2KpF5H/5Rey/56/8AJ18UlPcUOxV2KuxV2KuxV2KuxV2K&#xA;uxVK/M/mOx8uaFc61fJJJa2vD1EhCtIfUkWNeIZkH2nHU5KEDIgDmUE0LL4btSSbck1JK1J/5iTm&#xA;3x84/D/dlwp/xfj+F0f2YP8AjLbf8TfDj6e+P6Vn190v0Og+wnzj/wCZuRhy+X++TLn8/wBDSfb+&#xA;i1/5Nth/45/uSj/j33vZv+cZLyzh8039vNPHHPc2Ua20LuqvIyqjsEUmrEKpY07ZiavkPh/uQ34e&#xA;v46l9J5gt7sVdirsVdirsVdirsVdirsVdiqRaR/ylHmD/oz/AOTRxSw78u57i787a/DLcBrHTLvU&#xA;BY2TfDIss19I008qVYM1WZIpBSkR4kbnFUrufyk82XUk8oOnaa02oPcxwWdxOIIE4BIbiJBBHW6i&#xA;48izV5sx+JQAMVtRsPyZ83280DPqFpxiullDrLPyR1kgdtRUGMBrt1gZCh+Gjn4j3Vt6N5AW6Xyv&#xA;bfWJEkq8pi9NCnFPVaitV35Gtd9vlipZFih2KuxV2KuxV2KuxV2KuxV2KsB/PK9soPy51GCe4jin&#xA;untktondVeVluomZY1JqxCipp2zI0v8Aex94a830H3PkS0/49/mv/USc2OPnH4f7suLPlL8fwtx/&#xA;Zg/4y23/ABN8OPp74/pWfX3S/Q6D7CfOP/mbkYcvl/vky5/P9DSfb+i1/wCTbYf+Of7ko/4997Ov&#xA;yRvbOy/MzRbi8njtrdVcNNM6xoC9hIqgsxA3YgD3yjU/R/pfubcXP5/e+v8ANa5LsVdirsVdirsV&#xA;dirsVdirsVdirHdBW6XzR5j9eRJKvamP00KUT0m4q1XfkQOp2r4DFLCvy30+6tfzO82uYZ5LKae7&#xA;niuy05iSWW4QSQsZrO0DORErIElkVFFAxryKr1fFDsVSLyP/AMovZf8APX/k6+KSnuKHYq7FXYq7&#xA;FXYq7FXYq7FXYq+bf+cmLy7PnTSrIzObNLKCZLfkfTEj3Uis4XpyKoAT7Zn6Eb35j7w4+oO3wP3P&#xA;GLT/AI9/mv8A1EnMrHzj8P8Adlpnyl+P4W4/swf8Zbb/AIm+HH098f0rPr7pfodB9hPnH/zNyMOX&#xA;y/3yZc/n+hpPt/Ra/wDJtsP/ABz/AHJR/wAe+9Ut2VZo2Y0VUQk+wtzg/wCJ/wB4n9f++fdunajY&#xA;6lYwX9jMtxZ3KCSCZPssp6EZpyHNRGKuxV2KuxV2KuxV2KuxV2KuxVItI/5SjzB/0Z/8mjil57+W&#xA;egW7fmZ5m1htFeEQ3mpRWmpyxQ8CXu6u0c6QQvK0kjTKayOYlX0ycVZlqP5oeVdOmaC8eeGZdTbR&#xA;vTeFlJulhS42rSqNFKjK3Qg7YopDt+cHkcSGP6zOWWYxGltMQIwxU3NeNPQDKR6nTFNJx5H/AOUX&#xA;sv8Anr/ydfFSnuKHYq7FXYq7FXYq7FXYq7FXYq+Svzt80HXvzCmH1b6t+iSNNB9T1PU+r3kg9T7K&#xA;ceXL7O/zzZ6SHDR76P2uLmld+V/c87tP+Pf5r/1EnLsfOPw/3Za58pfj+FuP7MH/ABltv+Jvhx9P&#xA;fH9Kz6+6X6HQfYT5x/8AM3Iw5fL/AHyZc/n+hpPt/Ra/8m2w/wDHP9yUf8e+9tf+ZS/9Qxx/4n/e&#xA;L+v/AHz6+/JPWrDVPy805LRmLaeDZ3IZStJUAkIFeo4yLvmrzAiZcyB2DOsqZOxV2KuxV2KuxV2K&#xA;uxV2KuxVItI/5SjzB/0Z/wDJo4pY9+WXk3zN5fnvptei0yS7vP3kuo2LSetLK3EyGVWhhT43DSFt&#xA;zVvDFUyvPy00C8fU/rFxfvDrN2t7qdt9blEUzqgj4FQdk9NEWi02VfDFFoaT8nfIryGQ204YzeqQ&#xA;tzOAY+RY21OdPQLMT6fTFNpn5AtbW38r231eFIfVeWSX01C8nMrAs1BuaACuKlkWKHYq7FXYq7FX&#xA;Yq7FXYq7FUDrtzNa6JqF1A3CeC2mliegNHSMspoajqMI5q+Ib7ULzUdUe/vZfWvLqb1riWiryke6&#xA;ZmbigVRUnsM3OONGI93+7LgyNg/j+FBWn/Hv81/6iTgx84/D/dlZ8pfj+FuP7MH/ABltv+Jvhx9P&#xA;fH9Kz6+6X6HQfYT5x/8AM3Iw5fL/AHyZc/n+hpPt/Ra/8m2w/wDHP9yUf8e+9tf+ZS/9Qxx/4n/e&#xA;L+v/AHz3D/nGXzBqC6xf6C9yBprxSXcVqQgJuALdCytTmf3ddq070zD1cBsfxyH63IxHp+Or6IzC&#xA;bnYq7FXYq7FXYq7FXYq7FXYqx3QbW1t/NHmP0IUh9V7WST01C8naJizNQbkk1JxSyLFDsVdiqReR&#xA;/wDlF7L/AJ6/8nXxSU9xQ7FXYq7FXYq7FXYq7FXYqxf8ztdGheQtZ1IwfWOEAh9Llwr9ZdbevKjf&#xA;Z9Xl07ZOAsgIJoPjNP72L/WX/qJbNxH6h+P4y4J5H8fwqVp/x7/Nf+ok5HHzj8P92Uz5S/H8Lcf2&#xA;YP8AjLbf8TfDj6e+P6Vn190v0Og+wnzj/wCZuRhy+X++TLn8/wBDSfb+i1/5Nth/45/uSj/j33tr&#xA;/wAyl/6hjj/xP+8X9f8Avmcfkvd2dn+Z+g3N5NHbwJJdhppmVEBawZVBZiAKsQBlOp/u/j+iLZi+&#xA;r4frfYGaxynYq7FXYq7FXYq7FXYq7FXYqkWkf8pR5g/6M/8Ak0cUp7ih5Rr/AOa+uafNrNtZNp97&#xA;Ppmry2UbJHIwaFdOS7gtmRJmIuZrn1LZZKheaN8Farimks/5XP509d0Gm2pVbswf3NxX1Q7oNO2k&#xA;P+lMFDB/s/5GK09I8gTSS+V7bnA8HB5VX1Ch5gSsea8GfbenxUPtipZFih2KuxV2KuxV2KuxV2Ku&#xA;xV4f/wA5QahfwaXo1nDcSRWl2bg3UCOypL6clsU9RQaNxLEiuZWliDZ7h+kNWUkV+Oj57T+9i/1l&#xA;/wCols2MfqH4/jLinkfx/CpWn/Hv81/6iTkcfOPw/wB2Uz5S/H8Lcf2YP+Mtt/xN8OPp74/pWfX3&#xA;S/Q6D7CfOP8A5m5GHL5f75Mufz/Q0n2/otf+TbYf+Of7ko/4997a/wDMpf8AqGOP/E/7xf1/75Ui&#xA;/wB6bf8A4ySf9Q64nl/pv9wnr8v90+9M0zmuxV2KuxV2KuxV2KuxV2KuxVjugzSSeaPMfOB4OD2q&#xA;r6hQ8wImAdeDPs3UVofEYpZFih2KuxVIvI//ACi9l/z1/wCTr4pKe4odirsVdirsVdirsVdirsVf&#xA;If51eZn13z9qnwPFFprPp6RtIXUm2nVGkUUAXmd6ZsdNCoHz/XFxspuQ/HQsHT+9i/1l/wColsyo&#xA;/UPx/GWk8j+P4VK0/wCPf5r/ANRJyOPnH4f7spnyl+P4W4/swf8AGW2/4m+HH098f0rPr7pfodB9&#xA;hPnH/wAzcjDl8v8AfJlz+f6Gk+39Fr/ybbD/AMc/3JR/x7721/5lL/1DHH/if94v6/8AfOk3KfOb&#xA;/qGGHp/pv9wF6/L/AHT6y/ILXRqv5d20Qg9AaXM9jXly58VSYP0Xj/fUpv0zV541IuXA2Ho2Us3Y&#xA;q7FXYq7FXYq7FXYq7FUi0j/lKPMH/Rn/AMmjilPcUOxV2KpF5H/5Rey/56/8nXxSU9xQ7FXYq7FX&#xA;Yq7FXYq7FUh8+eYYvLvk7V9Zkn+rNaWzmCfgZOM7j04PhAetZXUbinjthAsq+L9Svru/1G/vryT1&#xA;bu6mmmuJaKvKR50ZmooVRUnsM2/CI2B0/wCKi4XFdH8ciop/exf6y/8AUS2Tj9Q/H8ZYnkfx/CpW&#xA;n/Hv81/6iTkcfOPw/wB2Uz5S/H8Lcf2YP+Mtt/xN8OPp74/pWfX3S/Q6D7CfOP8A5m5GHL5f75Mu&#xA;fz/Q0n2/otf+TbYf+Of7ko/4997a/wDMpf8AqGOP/E/7xf1/75z9U+c3/UMMPT/Tf7gL+z/dPYf+&#xA;ca9d+rearnTbnUTDa3VtIbaxlnKxSXNbbeOJmCtLwr0HKntmHqojhB63+gN+I7kfjq+l8wW92Kux&#xA;V2KuxV2KuxV2KuxVItI/5SjzB/0Z/wDJo4pT3FDD/wAxPLOs65+hzpXAXNheJc+pNKqQqFIqZYjD&#xA;MZgV5ABWQg0+IdQpDB7b8qvzFjlid9SiPG7EzML25qJQ8TPqNDHRpXWN19I/D8XXritvRvIC3S+V&#xA;7b6xIklXlMXpoU4p6rUVqu/I1rvt8sVLIsUOxV2KuxV2KuxV2KuxV8+/85QeaIXS18v2d9Ms0MUs&#xA;uqWKGVImV2gaAybCKShUlevH2zK08LEie79IasktwPN4ZJ/eXH+tJ/yejzYS5y+P+6DjR5D8dC2n&#xA;97F/rL/1Ethj9Q/H8ZQeR/H8Klaf8e/zX/qJORx84/D/AHZTPlL8fwtx/Zg/4y23/E3w4+nvj+lZ&#xA;9fdL9DoPsJ84/wDmbkYcvl/vky5/P9DSfb+i1/5Nth/45/uSj/j33tr/AMyl/wCoY4/8T/vF/X/v&#xA;nP1T5zf9Qww9P9N/uAv7P90jtG1jUNG1G11PT5vQvLV2khlKq/EiOPfi4ZT9IyvJG40fP7osompf&#xA;jvL7ltbu1vLdLm0mjuLaUVjmiYOjDpVWUkHNS5irirsVdirsVdirsVdirsVY7oK3S+aPMfryJJV7&#xA;Ux+mhSiek3FWq78iB1O1fAYpZFih2KuxVIvI/wDyi9l/z1/5Ovikp7ih2KuxV2KuxV2KuxVLPMvm&#xA;TSfLejXOsarL6VpbKWNKcnahKxoCQCzdFFcIFq+MfPWvSa95g1vVTJM8VzNcvbLctykSEzr6Uf2n&#xA;ChFoAoNB2zaQhwwI60fvi4kpXIH8cilcn95cf60n/J6PLZc5fH/dBhHkPx0Laf3sX+sv/US2GP1D&#xA;8fxlB5H8fwqVp/x7/Nf+ok5HHzj8P92Uz5S/H8Lcf2YP+Mtt/wATfDj6e+P6Vn190v0Og+wnzj/5&#xA;m5GHL5f75Mufz/Q0n2/otf8Ak22H/jn+5KP+Pfe2v/Mpf+oY4/8AE/7xf1/75z9U+c3/AFDDD0/0&#xA;3+4C/s/3Tn/uT8pP+TUeRl9Pz+6LIc/l95e+/wDOPX5iaba2195X1W79Bkubi5srm7uFWIIfRH1a&#xA;ISNUHkzPxXbqcw9ZjPGSO8tuCXpA8g97zDb3Yq7FXYq7FXYq7FXYqkWkf8pR5g/6M/8Ak0cUp7ih&#xA;2KpTrfmrQ9EuLK31KdoZNQf07fjHJIo+NI+cjIrCNBJNGpd6KCwqcVQ3kOSOXylp8kbBo3WRkYdC&#xA;DK5BGKSn+KHYq7FVk9xDAgeZxGhdIwzbDnIwRF+bMwAxVfiqBvdd0SwLLfahbWrIKuJ5o4yBStTy&#xA;Iptvirzrzr/zkJ5N0a3mh0aU6zqfCURNAvK1jkRQVMshaPmp5/7qLdDuNstjhkd+jEzAfPnm38wv&#xA;OHmWe+Oq6lK9tNLKDp8bMtqojVSgSGpUca9fteJOZ3gRh7wZfcHHGQy+xjt6Rwux3pN/ydTL8n8X&#xA;x/3Qa4fw/D7ivk/vLj/Wk/5PR4y5y+P+6Cx5D8dC2n97F/rL/wBRLYY/UPx/GUHkfx/CpWn/AB7/&#xA;ADX/AKiTkcfOPw/3ZTPlL8fwtx/Zg/4y23/E3w4+nvj+lZ9fdL9DrcgooB6NED90hyMOXy/3zKXP&#xA;5/oaT7f0Wv8AybbD/wAc/wByWP8Ax7721/5lL/1DHH/if94v6/8AfOfqnzm/6hhh6f6b/cBf2f7p&#xA;qQgQMT0Akr/yKjyMvp+f3RZDn8vvLc2zznrSa4O/siYcvX+tL9DHH090f0vc/J3/ADktdWaTW3nG&#xA;1e9SL1DFqVikazHjIFAmhLRRnZvtIR0+z3zCzaWieHkL+9yIZbAvq9j0D8xPJGvlU0rWbaediVW2&#xA;ZvRnJDcD+5lCS/a2+zmLKBHMNoIPJP47iCV5EikR3iPGVVYEqfBgOhyKXSXEMTxJI4V53McKnqzh&#xA;WfiPfijH6MVX4q7FXYq7FUg0eSM+bfMMYYeoq2TMvcBomAP08TilP8UOxVhvnLRbfWtUsVu9K1B4&#xA;rE1GpQS2i2hjd4pnjuY3uI55IRJbxs6qlTx2Pipeb3Gt6Iv5dQ3+n6boUPmEXc4ulGlosbwxzyov&#xA;pREEepJGkZRWk3r1xV63ZeUfKU1nBLJoFiryRo7rJZQRuCygkMnFuJ8RXbFCv/gvyd/1YtO/6RIP&#xA;+aMVd/gvyd/1YtO/6RIP+aMVef8Am7S/K2naHLqA8jabo7QXNsrSalp2m3CzxyShJEiFpPIyOFPL&#xA;k4pQdPBtKy80rybJ5+0rSLHynodxo14lJGOkxGR2X64tw6TELGi20lnCrAqeXq7fs1NoZt/yrH8t&#xA;q1/wno1f+2fa/wDVPG1b/wCVZ/lv/wBSpo//AHD7X/qnjZVD6h+Xn5fWtpJPB5J0y/lShW1t7CwW&#xA;V+RAPEz+jHsDU8nG3vtjZVhGoWHlK1846dYXPkXSdP0qe2M93Bc6Tay3ARUvJJ5fXtmmt1WH6pDV&#xA;ByJ9UdDQY2VpGeQfLPlDWNW8zW2oeWdCng0++ZNPlg0u2WMQM8npxtIVq8yIi+oOI4kjrXGytMz/&#xA;AOVZ/lv/ANSpo/8A3D7X/qnjZVw/LP8ALcdPKmj7dP8Acfa/9U8bKpB558m+RNF8tzahZ+VtDjkj&#xA;mto3uZdLt544IpbiOKWd4kWNmEMbs9Ae2+1cbK0xR7fy20/lOOPyRocMupx2p1e2bR42b6zO1p6s&#xA;ETUUQ+jb3b3BL8iVXjsQ2Nlaelf8qz/Lf/qVNG/7h9r2/wCeeNlXf8qz/Lf/AKlTR/8AuH2v/VPG&#xA;yrv+VZ/lv/1Kmj/9w+1/6p42VYT500TyfovmXQtOtfJ2h/Ub5l+sM+kxTNMDcQxSxxPGqrEYYJHu&#xA;GLg8gtB3xtaW+UdA8m6t5217TpvLOhXOk26Rzaa8GlW4EavQFJ5GQH1W+0F49N642VpnH/Ks/wAt&#xA;z/0ymj7/APavtf8AqnjZVpvyx/LZvteU9GPz0+1/6p42rl/LL8tlpx8p6MKdKafaj/mXjasIuLDy&#xA;Paap5qsF8saFd3OlwRyaJZQ6VEryTNBLJ6DkK/NuSKKrx69MFppOPy10Ly1q/l03t35b0dJPrEsM&#xA;dza6bHbRXMUTcUnWKQM6htxue2Kss/wX5O/6sWnf9IkH/NGKHf4L8nf9WLTv+kSD/mjFVG88oeUI&#xA;rSeUaNpkJSNmEslnC6JRSeTKApYDqQCPnirzZvOEWkfl/Y6t5ch0zTtevHil1mO1sRGZ0AuF4RRL&#xA;x5zNJFRFZ/HffFL2fFDsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeb+a/wA09T8ua/f6ZcWE&#xA;UkVjH+kmuGLxRtprokEXxgS8ZTfycCeJHBSePcKUHpv576dNEbi6sWSK6e3Glwow9WUTRWBkiSpp&#xA;LLG1+z/DSqKNu+K0yz8uvPUHnXy+dYhtTZhZ3gaEyLLuqq4PJQP2XFQQKH7yoZRirsVdirsVdirs&#xA;VdirsVdirsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:033B4F983D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:033B4F983D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:033B4F983D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T17:21:40+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -186.423 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 186.423 li
284.179 186.423 li
284.179 0 li
cp
clp
[1 0 0 1 0 0 ]ct
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
62.7964 169.601 mo
64.606 169.601 li
64.606 169.552 li
62.7964 169.552 li
62.7964 169.601 li
cp
.861 .686 .00199997 .000999987 cmyk
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
62.7964 169.601 mo
64.606 169.601 li
64.606 169.552 li
62.7964 169.552 li
62.7964 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
64.606 169.601 mo
66.4155 169.601 li
66.4155 169.552 li
64.606 169.552 li
64.606 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.606 169.601 mo
66.4155 169.601 li
66.4155 169.552 li
64.606 169.552 li
64.606 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
66.4155 169.601 mo
68.2251 169.601 li
68.2251 169.505 li
66.4155 169.505 li
66.4155 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
66.4155 169.601 mo
68.2251 169.601 li
68.2251 169.505 li
66.4155 169.505 li
66.4155 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
68.2251 169.601 mo
70.0347 169.601 li
70.0347 169.505 li
68.2251 169.505 li
68.2251 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
68.2251 169.601 mo
70.0347 169.601 li
70.0347 169.505 li
68.2251 169.505 li
68.2251 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
70.0347 169.601 mo
71.8442 169.601 li
71.8442 169.552 li
70.0347 169.552 li
70.0347 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
70.0347 169.601 mo
71.8442 169.601 li
71.8442 169.552 li
70.0347 169.552 li
70.0347 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
71.8442 169.601 mo
73.6538 169.601 li
71.8442 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
71.8442 169.601 mo
73.6538 169.601 li
71.8442 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
73.6538 169.601 mo
75.4634 169.601 li
75.4634 169.505 li
73.6538 169.505 li
73.6538 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
73.6538 169.601 mo
75.4634 169.601 li
75.4634 169.505 li
73.6538 169.505 li
73.6538 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
75.4634 169.601 mo
77.2729 169.601 li
77.2729 169.41 li
75.4634 169.41 li
75.4634 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.4634 169.601 mo
77.2729 169.601 li
77.2729 169.41 li
75.4634 169.41 li
75.4634 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
77.2729 169.601 mo
79.0825 169.601 li
79.0825 169.315 li
77.2729 169.315 li
77.2729 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
77.2729 169.601 mo
79.0825 169.601 li
79.0825 169.315 li
77.2729 169.315 li
77.2729 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
79.0825 169.601 mo
80.8921 169.601 li
80.8921 169.22 li
79.0825 169.22 li
79.0825 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
79.0825 169.601 mo
80.8921 169.601 li
80.8921 169.22 li
79.0825 169.22 li
79.0825 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
80.8921 169.601 mo
82.7017 169.601 li
82.7017 169.22 li
80.8921 169.22 li
80.8921 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
80.8921 169.601 mo
82.7017 169.601 li
82.7017 169.22 li
80.8921 169.22 li
80.8921 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
82.7017 169.601 mo
84.5112 169.601 li
84.5112 168.745 li
82.7017 168.745 li
82.7017 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
82.7017 169.601 mo
84.5112 169.601 li
84.5112 168.745 li
82.7017 168.745 li
82.7017 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
84.5117 169.601 mo
86.3213 169.601 li
86.3213 168.745 li
84.5117 168.745 li
84.5117 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
84.5117 169.601 mo
86.3213 169.601 li
86.3213 168.745 li
84.5117 168.745 li
84.5117 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
86.3208 169.601 mo
88.1304 169.601 li
88.1304 168.602 li
86.3208 168.602 li
86.3208 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
86.3208 169.601 mo
88.1304 169.601 li
88.1304 168.602 li
86.3208 168.602 li
86.3208 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
88.1309 169.601 mo
89.9404 169.601 li
89.9404 168.269 li
88.1309 168.269 li
88.1309 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
88.1309 169.601 mo
89.9404 169.601 li
89.9404 168.269 li
88.1309 168.269 li
88.1309 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
89.9399 169.601 mo
91.749 169.601 li
91.749 167.65 li
89.9399 167.65 li
89.9399 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
89.9399 169.601 mo
91.749 169.601 li
91.749 167.65 li
89.9399 167.65 li
89.9399 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
91.75 169.601 mo
93.5596 169.601 li
93.5596 166.89 li
91.75 166.89 li
91.75 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
91.75 169.601 mo
93.5596 169.601 li
93.5596 166.89 li
91.75 166.89 li
91.75 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
93.5586 169.601 mo
95.3682 169.601 li
95.3682 165.7 li
93.5586 165.7 li
93.5586 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
93.5586 169.601 mo
95.3682 169.601 li
95.3682 165.7 li
93.5586 165.7 li
93.5586 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
95.3691 169.601 mo
97.1787 169.601 li
97.1787 165.415 li
95.3691 165.415 li
95.3691 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
95.3691 169.601 mo
97.1787 169.601 li
97.1787 165.415 li
95.3691 165.415 li
95.3691 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
97.1787 169.601 mo
98.9883 169.601 li
98.9883 163.561 li
97.1787 163.561 li
97.1787 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
97.1787 169.601 mo
98.9883 169.601 li
98.9883 163.561 li
97.1787 163.561 li
97.1787 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
98.9883 169.601 mo
100.798 169.601 li
100.798 162.847 li
98.9883 162.847 li
98.9883 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
98.9883 169.601 mo
100.798 169.601 li
100.798 162.847 li
98.9883 162.847 li
98.9883 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
100.798 169.601 mo
102.607 169.601 li
102.607 161.515 li
100.798 161.515 li
100.798 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
100.798 169.601 mo
102.607 169.601 li
102.607 161.515 li
100.798 161.515 li
100.798 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
102.607 169.601 mo
104.417 169.601 li
104.417 162.039 li
102.607 162.039 li
102.607 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
102.607 169.601 mo
104.417 169.601 li
104.417 162.039 li
102.607 162.039 li
102.607 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
104.417 169.601 mo
106.226 169.601 li
106.226 158.757 li
104.417 158.757 li
104.417 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
104.417 169.601 mo
106.226 169.601 li
106.226 158.757 li
104.417 158.757 li
104.417 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
106.226 169.601 mo
108.036 169.601 li
108.036 156.902 li
106.226 156.902 li
106.226 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
106.226 169.601 mo
108.036 169.601 li
108.036 156.902 li
106.226 156.902 li
106.226 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
108.036 169.601 mo
109.845 169.601 li
109.845 152.669 li
108.036 152.669 li
108.036 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
108.036 169.601 mo
109.845 169.601 li
109.845 152.669 li
108.036 152.669 li
108.036 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
109.845 169.601 mo
111.655 169.601 li
111.655 148.913 li
109.845 148.913 li
109.845 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
109.845 169.601 mo
111.655 169.601 li
111.655 148.913 li
109.845 148.913 li
109.845 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
111.655 169.601 mo
113.464 169.601 li
113.464 143.491 li
111.655 143.491 li
111.655 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
111.655 169.601 mo
113.464 169.601 li
113.464 143.491 li
111.655 143.491 li
111.655 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
113.464 169.601 mo
115.274 169.601 li
115.274 140.399 li
113.464 140.399 li
113.464 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
113.464 169.601 mo
115.274 169.601 li
115.274 140.399 li
113.464 140.399 li
113.464 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
115.274 169.601 mo
117.083 169.601 li
117.083 135.787 li
115.274 135.787 li
115.274 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
115.274 169.601 mo
117.083 169.601 li
117.083 135.787 li
115.274 135.787 li
115.274 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
117.083 169.601 mo
118.893 169.601 li
118.893 129.604 li
117.083 129.604 li
117.083 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
117.083 169.601 mo
118.893 169.601 li
118.893 129.604 li
117.083 129.604 li
117.083 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
118.894 169.601 mo
120.704 169.601 li
120.704 125.323 li
118.894 125.323 li
118.894 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
118.894 169.601 mo
120.704 169.601 li
120.704 125.323 li
118.894 125.323 li
118.894 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
120.703 169.601 mo
122.512 169.601 li
122.512 117.143 li
120.703 117.143 li
120.703 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
120.703 169.601 mo
122.512 169.601 li
122.512 117.143 li
120.703 117.143 li
120.703 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
122.513 169.601 mo
124.323 169.601 li
124.323 111.816 li
122.513 111.816 li
122.513 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
122.513 169.601 mo
124.323 169.601 li
124.323 111.816 li
122.513 111.816 li
122.513 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
124.322 169.601 mo
126.131 169.601 li
126.131 100.26 li
124.322 100.26 li
124.322 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
124.322 169.601 mo
126.131 169.601 li
126.131 100.26 li
124.322 100.26 li
124.322 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
126.132 169.601 mo
127.941 169.601 li
127.941 93.6499 li
126.132 93.6499 li
126.132 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
126.132 169.601 mo
127.941 169.601 li
127.941 93.6499 li
126.132 93.6499 li
126.132 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
127.942 169.601 mo
129.751 169.601 li
129.751 81.9497 li
127.942 81.9497 li
127.942 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
127.942 169.601 mo
129.751 169.601 li
129.751 81.9497 li
127.942 81.9497 li
127.942 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
129.751 169.601 mo
131.561 169.601 li
131.561 79.2393 li
129.751 79.2393 li
129.751 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
129.751 169.601 mo
131.561 169.601 li
131.561 79.2393 li
129.751 79.2393 li
129.751 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
131.561 169.601 mo
133.37 169.601 li
133.37 68.5381 li
131.561 68.5381 li
131.561 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
131.561 169.601 mo
133.37 169.601 li
133.37 68.5381 li
131.561 68.5381 li
131.561 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
133.37 169.601 mo
135.18 169.601 li
135.18 62.8789 li
133.37 62.8789 li
133.37 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
133.37 169.601 mo
135.18 169.601 li
135.18 62.8789 li
133.37 62.8789 li
133.37 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
135.18 169.601 mo
136.989 169.601 li
136.989 51.9404 li
135.18 51.9404 li
135.18 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
135.18 169.601 mo
136.989 169.601 li
136.989 51.9404 li
135.18 51.9404 li
135.18 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
136.989 169.601 mo
138.799 169.601 li
138.799 41.1919 li
136.989 41.1919 li
136.989 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
136.989 169.601 mo
138.799 169.601 li
138.799 41.1919 li
136.989 41.1919 li
136.989 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
138.799 169.601 mo
140.608 169.601 li
140.608 34.0107 li
138.799 34.0107 li
138.799 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
138.799 169.601 mo
140.608 169.601 li
140.608 34.0107 li
138.799 34.0107 li
138.799 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
140.608 169.601 mo
142.418 169.601 li
142.418 28.9697 li
140.608 28.9697 li
140.608 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
140.608 169.601 mo
142.418 169.601 li
142.418 28.9697 li
140.608 28.9697 li
140.608 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
142.418 169.601 mo
144.228 169.601 li
144.228 23.5005 li
142.418 23.5005 li
142.418 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
142.418 169.601 mo
144.228 169.601 li
144.228 23.5005 li
142.418 23.5005 li
142.418 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
144.228 169.601 mo
146.037 169.601 li
146.037 15.7007 li
144.228 15.7007 li
144.228 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
144.228 169.601 mo
146.037 169.601 li
146.037 15.7007 li
144.228 15.7007 li
144.228 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
146.037 169.601 mo
147.847 169.601 li
147.847 13.5605 li
146.037 13.5605 li
146.037 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
146.037 169.601 mo
147.847 169.601 li
147.847 13.5605 li
146.037 13.5605 li
146.037 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
147.847 169.601 mo
149.656 169.601 li
149.656 4.80957 li
147.847 4.80957 li
147.847 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
147.847 169.601 mo
149.656 169.601 li
149.656 4.80957 li
147.847 4.80957 li
147.847 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
149.656 169.601 mo
151.466 169.601 li
151.466 6.09375 li
149.656 6.09375 li
149.656 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
149.656 169.601 mo
151.466 169.601 li
151.466 6.09375 li
149.656 6.09375 li
149.656 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
151.466 169.601 mo
153.276 169.601 li
153.276 7.09277 li
151.466 7.09277 li
151.466 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
151.466 169.601 mo
153.276 169.601 li
153.276 7.09277 li
151.466 7.09277 li
151.466 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
153.276 169.601 mo
155.085 169.601 li
155.085 4.19141 li
153.276 4.19141 li
153.276 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
153.276 169.601 mo
155.085 169.601 li
155.085 4.19141 li
153.276 4.19141 li
153.276 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
155.085 169.601 mo
156.895 169.601 li
156.895 6.18896 li
155.085 6.18896 li
155.085 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
155.085 169.601 mo
156.895 169.601 li
156.895 6.18896 li
155.085 6.18896 li
155.085 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
156.895 169.601 mo
158.705 169.601 li
158.705 10.6118 li
156.895 10.6118 li
156.895 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
156.895 169.601 mo
158.705 169.601 li
158.705 10.6118 li
156.895 10.6118 li
156.895 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
158.705 169.601 mo
160.514 169.601 li
160.514 17.3652 li
158.705 17.3652 li
158.705 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
158.705 169.601 mo
160.514 169.601 li
160.514 17.3652 li
158.705 17.3652 li
158.705 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
160.514 169.601 mo
162.324 169.601 li
162.324 21.2651 li
160.514 21.2651 li
160.514 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
160.514 169.601 mo
162.324 169.601 li
162.324 21.2651 li
160.514 21.2651 li
160.514 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
162.324 169.601 mo
164.133 169.601 li
164.133 25.9258 li
162.324 25.9258 li
162.324 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
162.324 169.601 mo
164.133 169.601 li
164.133 25.9258 li
162.324 25.9258 li
162.324 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
164.133 169.601 mo
165.943 169.601 li
165.943 29.2549 li
164.133 29.2549 li
164.133 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
164.133 169.601 mo
165.943 169.601 li
165.943 29.2549 li
164.133 29.2549 li
164.133 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
165.943 169.601 mo
167.752 169.601 li
167.752 39.3369 li
165.943 39.3369 li
165.943 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
165.943 169.601 mo
167.752 169.601 li
167.752 39.3369 li
165.943 39.3369 li
165.943 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
167.752 169.601 mo
169.562 169.601 li
169.562 45.9951 li
167.752 45.9951 li
167.752 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
167.752 169.601 mo
169.562 169.601 li
169.562 45.9951 li
167.752 45.9951 li
167.752 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
169.562 169.601 mo
171.372 169.601 li
171.372 50.2759 li
169.562 50.2759 li
169.562 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
169.562 169.601 mo
171.372 169.601 li
171.372 50.2759 li
169.562 50.2759 li
169.562 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
171.372 169.601 mo
173.181 169.601 li
173.181 61.4043 li
171.372 61.4043 li
171.372 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
171.372 169.601 mo
173.181 169.601 li
173.181 61.4043 li
171.372 61.4043 li
171.372 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
173.181 169.601 mo
174.991 169.601 li
174.991 70.3931 li
173.181 70.3931 li
173.181 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
173.181 169.601 mo
174.991 169.601 li
174.991 70.3931 li
173.181 70.3931 li
173.181 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
174.991 169.601 mo
176.8 169.601 li
176.8 79.5244 li
174.991 79.5244 li
174.991 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
174.991 169.601 mo
176.8 169.601 li
176.8 79.5244 li
174.991 79.5244 li
174.991 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
176.8 169.601 mo
178.61 169.601 li
178.61 87.6567 li
176.8 87.6567 li
176.8 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
176.8 169.601 mo
178.61 169.601 li
178.61 87.6567 li
176.8 87.6567 li
176.8 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
178.61 169.601 mo
180.42 169.601 li
180.42 95.5039 li
178.61 95.5039 li
178.61 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
178.61 169.601 mo
180.42 169.601 li
180.42 95.5039 li
178.61 95.5039 li
178.61 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
180.419 169.601 mo
182.229 169.601 li
182.229 100.308 li
180.419 100.308 li
180.419 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
180.419 169.601 mo
182.229 169.601 li
182.229 100.308 li
180.419 100.308 li
180.419 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
182.229 169.601 mo
184.039 169.601 li
184.039 106.681 li
182.229 106.681 li
182.229 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
182.229 169.601 mo
184.039 169.601 li
184.039 106.681 li
182.229 106.681 li
182.229 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
184.039 169.601 mo
185.848 169.601 li
185.848 115.289 li
184.039 115.289 li
184.039 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
184.039 169.601 mo
185.848 169.601 li
185.848 115.289 li
184.039 115.289 li
184.039 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
185.848 169.601 mo
187.659 169.601 li
187.659 124.705 li
185.848 124.705 li
185.848 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
185.848 169.601 mo
187.659 169.601 li
187.659 124.705 li
185.848 124.705 li
185.848 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
187.659 169.601 mo
189.468 169.601 li
189.468 129.556 li
187.659 129.556 li
187.659 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
187.659 169.601 mo
189.468 169.601 li
189.468 129.556 li
187.659 129.556 li
187.659 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
189.467 169.601 mo
191.277 169.601 li
191.277 134.502 li
189.467 134.502 li
189.467 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
189.467 169.601 mo
191.277 169.601 li
191.277 134.502 li
189.467 134.502 li
189.467 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
191.277 169.601 mo
193.086 169.601 li
193.086 141.255 li
191.277 141.255 li
191.277 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
191.277 169.601 mo
193.086 169.601 li
193.086 141.255 li
191.277 141.255 li
191.277 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
193.086 169.601 mo
194.897 169.601 li
194.897 144.917 li
193.086 144.917 li
193.086 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
193.086 169.601 mo
194.897 169.601 li
194.897 144.917 li
193.086 144.917 li
193.086 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
194.897 169.601 mo
196.707 169.601 li
196.707 150.72 li
194.897 150.72 li
194.897 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
194.897 169.601 mo
196.707 169.601 li
196.707 150.72 li
194.897 150.72 li
194.897 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
196.707 169.601 mo
198.516 169.601 li
198.516 152.432 li
196.707 152.432 li
196.707 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
196.707 169.601 mo
198.516 169.601 li
198.516 152.432 li
196.707 152.432 li
196.707 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
198.515 169.601 mo
200.325 169.601 li
200.325 156.569 li
198.515 156.569 li
198.515 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
198.515 169.601 mo
200.325 169.601 li
200.325 156.569 li
198.515 156.569 li
198.515 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
200.325 169.601 mo
202.135 169.601 li
202.135 159.185 li
200.325 159.185 li
200.325 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
200.325 169.601 mo
202.135 169.601 li
202.135 159.185 li
200.325 159.185 li
200.325 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
202.135 169.601 mo
203.945 169.601 li
203.945 159.755 li
202.135 159.755 li
202.135 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
202.135 169.601 mo
203.945 169.601 li
203.945 159.755 li
202.135 159.755 li
202.135 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
203.945 169.601 mo
205.754 169.601 li
205.754 162.562 li
203.945 162.562 li
203.945 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
203.945 169.601 mo
205.754 169.601 li
205.754 162.562 li
203.945 162.562 li
203.945 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
205.754 169.601 mo
207.564 169.601 li
207.564 163.37 li
205.754 163.37 li
205.754 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
205.754 169.601 mo
207.564 169.601 li
207.564 163.37 li
205.754 163.37 li
205.754 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
207.564 169.601 mo
209.374 169.601 li
209.374 164.654 li
207.564 164.654 li
207.564 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
207.564 169.601 mo
209.374 169.601 li
209.374 164.654 li
207.564 164.654 li
207.564 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
209.374 169.601 mo
211.182 169.601 li
211.182 165.652 li
209.374 165.652 li
209.374 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
209.374 169.601 mo
211.182 169.601 li
211.182 165.652 li
209.374 165.652 li
209.374 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
211.182 169.601 mo
212.993 169.601 li
212.993 166.177 li
211.182 166.177 li
211.182 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
211.182 169.601 mo
212.993 169.601 li
212.993 166.177 li
211.182 166.177 li
211.182 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
212.993 169.601 mo
214.802 169.601 li
214.802 166.795 li
212.993 166.795 li
212.993 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
212.993 169.601 mo
214.802 169.601 li
214.802 166.795 li
212.993 166.795 li
212.993 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
214.801 169.601 mo
216.612 169.601 li
216.612 167.698 li
214.801 167.698 li
214.801 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
214.801 169.601 mo
216.612 169.601 li
216.612 167.698 li
214.801 167.698 li
214.801 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
216.612 169.601 mo
218.42 169.601 li
218.42 168.078 li
216.612 168.078 li
216.612 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
216.612 169.601 mo
218.42 169.601 li
218.42 168.078 li
216.612 168.078 li
216.612 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
218.42 169.601 mo
220.231 169.601 li
220.231 168.697 li
218.42 168.697 li
218.42 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
218.42 169.601 mo
220.231 169.601 li
220.231 168.697 li
218.42 168.697 li
218.42 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
220.23 169.601 mo
222.041 169.601 li
222.041 169.029 li
220.23 169.029 li
220.23 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
220.23 169.601 mo
222.041 169.601 li
222.041 169.029 li
220.23 169.029 li
220.23 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
222.041 169.601 mo
223.85 169.601 li
223.85 169.125 li
222.041 169.125 li
222.041 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
222.041 169.601 mo
223.85 169.601 li
223.85 169.125 li
222.041 169.125 li
222.041 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
223.849 169.601 mo
225.659 169.601 li
225.659 168.792 li
223.849 168.792 li
223.849 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
223.849 169.601 mo
225.659 169.601 li
225.659 168.792 li
223.849 168.792 li
223.849 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
225.659 169.601 mo
227.468 169.601 li
227.468 169.22 li
225.659 169.22 li
225.659 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
225.659 169.601 mo
227.468 169.601 li
227.468 169.22 li
225.659 169.22 li
225.659 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
227.468 169.601 mo
229.279 169.601 li
229.279 169.267 li
227.468 169.267 li
227.468 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
227.468 169.601 mo
229.279 169.601 li
229.279 169.267 li
227.468 169.267 li
227.468 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
229.279 169.601 mo
231.088 169.601 li
231.088 169.505 li
229.279 169.505 li
229.279 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
229.279 169.601 mo
231.088 169.601 li
231.088 169.505 li
229.279 169.505 li
229.279 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
231.088 169.601 mo
232.898 169.601 li
232.898 169.41 li
231.088 169.41 li
231.088 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
231.088 169.601 mo
232.898 169.601 li
232.898 169.41 li
231.088 169.41 li
231.088 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
232.897 169.601 mo
234.707 169.601 li
234.707 169.505 li
232.897 169.505 li
232.897 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
232.897 169.601 mo
234.707 169.601 li
234.707 169.505 li
232.897 169.505 li
232.897 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
234.707 169.601 mo
236.517 169.601 li
234.707 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
234.708 169.601 mo
236.517 169.601 li
234.708 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
236.517 169.601 mo
238.327 169.601 li
238.327 169.505 li
236.517 169.505 li
236.517 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
236.517 169.601 mo
238.327 169.601 li
238.327 169.505 li
236.517 169.505 li
236.517 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
238.327 169.601 mo
240.136 169.601 li
240.136 169.552 li
238.327 169.552 li
238.327 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
238.327 169.601 mo
240.136 169.601 li
240.136 169.552 li
238.327 169.552 li
238.327 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
240.136 169.601 mo
241.946 169.601 li
240.136 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
240.136 169.601 mo
241.946 169.601 li
240.136 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
241.945 169.601 mo
243.754 169.601 li
243.754 169.505 li
241.945 169.505 li
241.945 169.601 li
cp
f
gsave
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
27.6406 3.14502 li
27.6406 169.601 li
cp
clp
.5625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
241.945 169.601 mo
243.755 169.601 li
243.755 169.505 li
241.945 169.505 li
241.945 169.601 li
cp
.757 .71 .652 .806 cmyk
@
grestore
27.6406 169.601 mo
27.6406 167.351 li
27.6406 169.601 li
cp
.757 .71 .652 .806 cmyk
f
.28125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
27.6406 169.601 mo
27.6406 167.351 li
@
27.6406 5.39502 mo
27.6406 3.14502 li
27.6406 5.39502 li
cp
f
27.6406 3.14502 mo
27.6406 5.39502 li
@
26.5835 176.423 mo
27.6699 176.423 li
27.6699 172.669 li
26.4888 172.905 li
26.4888 172.298 li
27.6636 172.062 li
28.3315 172.062 li
28.3315 176.423 li
29.4185 176.423 li
29.4185 176.983 li
26.5835 176.983 li
26.5835 176.423 li
cp
f
30.7617 176.146 mo
31.457 176.146 li
31.457 176.982 li
30.7617 176.982 li
30.7617 176.146 li
cp
f
32.915 172.062 mo
35.5273 172.062 li
35.5273 172.622 li
33.5225 172.622 li
33.5225 173.831 li
33.6172 173.797 33.7183 173.77 33.813 173.757 cv
33.9072 173.743 34.0088 173.729 34.103 173.729 cv
34.6499 173.729 35.082 173.885 35.4058 174.183 cv
35.73 174.485 35.8921 174.89 35.8921 175.403 cv
35.8921 175.937 35.7231 176.349 35.3926 176.64 cv
35.0615 176.929 34.5957 177.07 34.002 177.07 cv
33.7925 177.07 33.5835 177.05 33.3672 177.023 cv
33.1514 176.99 32.9355 176.942 32.7061 176.868 cv
32.7061 176.2 li
32.9019 176.308 33.104 176.389 33.3203 176.442 cv
33.5293 176.497 33.752 176.517 33.9883 176.517 cv
34.3662 176.517 34.6699 176.423 34.8931 176.221 cv
35.1089 176.018 35.2236 175.748 35.2236 175.403 cv
35.2236 175.065 35.1089 174.796 34.8931 174.593 cv
34.6699 174.392 34.3662 174.29 33.9883 174.29 cv
33.813 174.29 33.6304 174.31 33.4551 174.351 cv
33.2798 174.392 33.0972 174.452 32.915 174.533 cv
32.915 172.062 li
f
20.8062 175.147 mo
25.0317 175.147 li
25.0317 174.587 li
20.8062 174.587 li
20.8062 175.147 li
cp
f
69.4907 169.601 mo
69.4907 167.351 li
69.4907 169.601 li
cp
f
69.4907 169.601 mo
69.4907 167.351 li
@
69.4907 5.39502 mo
69.4907 3.14502 li
69.4907 5.39502 li
cp
f
69.4907 3.14502 mo
69.4907 5.39502 li
@
68.3633 176.423 mo
69.4502 176.423 li
69.4502 172.669 li
68.269 172.905 li
68.269 172.298 li
69.4434 172.062 li
70.1113 172.062 li
70.1113 176.423 li
71.1982 176.423 li
71.1982 176.983 li
68.3633 176.983 li
68.3633 176.423 li
cp
f
72.5415 176.146 mo
73.2368 176.146 li
73.2368 176.982 li
72.5415 176.982 li
72.5415 176.146 li
cp
f
76.1123 172.501 mo
75.7681 172.501 75.5117 172.67 75.3359 173.007 cv
75.1606 173.345 75.0796 173.851 75.0796 174.526 cv
75.0796 175.201 75.1606 175.707 75.3359 176.045 cv
75.5117 176.382 75.7681 176.551 76.1123 176.551 cv
76.4565 176.551 76.7129 176.382 76.8887 176.045 cv
77.0571 175.707 77.145 175.201 77.145 174.526 cv
77.145 173.851 77.0571 173.345 76.8887 173.007 cv
76.7129 172.67 76.4565 172.501 76.1123 172.501 cv
76.1123 171.975 mo
76.6592 171.975 77.0776 172.197 77.3745 172.63 cv
77.6646 173.067 77.8135 173.702 77.8135 174.526 cv
77.8135 175.356 77.6646 175.991 77.3745 176.423 cv
77.0776 176.854 76.6592 177.071 76.1123 177.071 cv
75.5586 177.071 75.1333 176.854 74.8433 176.423 cv
74.5532 175.991 74.4111 175.356 74.4111 174.526 cv
74.4111 173.702 74.5532 173.067 74.8433 172.63 cv
75.1333 172.197 75.5586 171.975 76.1123 171.975 cv
f
62.5859 175.147 mo
66.8115 175.147 li
66.8115 174.587 li
62.5859 174.587 li
62.5859 175.147 li
cp
f
111.34 169.601 mo
111.34 167.351 li
111.34 169.601 li
cp
f
111.34 169.601 mo
111.34 167.351 li
@
111.34 5.39502 mo
111.34 3.14502 li
111.34 5.39502 li
cp
f
111.34 3.14502 mo
111.34 5.39502 li
@
111.593 172.501 mo
111.249 172.501 110.992 172.67 110.817 173.007 cv
110.641 173.345 110.561 173.851 110.561 174.526 cv
110.561 175.201 110.641 175.707 110.817 176.045 cv
110.992 176.382 111.249 176.551 111.593 176.551 cv
111.938 176.551 112.194 176.382 112.37 176.045 cv
112.538 175.707 112.626 175.201 112.626 174.526 cv
112.626 173.851 112.538 173.345 112.37 173.007 cv
112.194 172.67 111.938 172.501 111.593 172.501 cv
111.593 171.975 mo
112.14 171.975 112.558 172.197 112.855 172.63 cv
113.146 173.067 113.294 173.702 113.294 174.526 cv
113.294 175.356 113.146 175.991 112.855 176.423 cv
112.558 176.854 112.14 177.071 111.593 177.071 cv
111.04 177.071 110.614 176.854 110.324 176.423 cv
110.034 175.991 109.892 175.356 109.892 174.526 cv
109.892 173.702 110.034 173.067 110.324 172.63 cv
110.614 172.197 111.04 171.975 111.593 171.975 cv
f
114.462 176.146 mo
115.157 176.146 li
115.157 176.982 li
114.462 176.982 li
114.462 176.146 li
cp
f
116.615 172.062 mo
119.227 172.062 li
119.227 172.622 li
117.223 172.622 li
117.223 173.831 li
117.317 173.797 117.418 173.77 117.513 173.757 cv
117.607 173.743 117.708 173.729 117.803 173.729 cv
118.35 173.729 118.782 173.885 119.106 174.183 cv
119.43 174.485 119.592 174.89 119.592 175.403 cv
119.592 175.937 119.423 176.349 119.092 176.64 cv
118.762 176.929 118.296 177.07 117.702 177.07 cv
117.493 177.07 117.283 177.05 117.067 177.023 cv
116.851 176.99 116.635 176.942 116.406 176.868 cv
116.406 176.2 li
116.602 176.308 116.804 176.389 117.02 176.442 cv
117.229 176.497 117.452 176.517 117.688 176.517 cv
118.066 176.517 118.37 176.423 118.593 176.221 cv
118.809 176.018 118.923 175.748 118.923 175.403 cv
118.923 175.065 118.809 174.796 118.593 174.593 cv
118.37 174.392 118.066 174.29 117.688 174.29 cv
117.513 174.29 117.331 174.31 117.155 174.351 cv
116.979 174.392 116.797 174.452 116.615 174.533 cv
116.615 172.062 li
f
104.506 175.147 mo
108.732 175.147 li
108.732 174.587 li
104.506 174.587 li
104.506 175.147 li
cp
f
153.19 169.601 mo
153.19 167.351 li
153.19 169.601 li
cp
f
153.191 169.601 mo
153.191 167.351 li
@
153.19 5.39502 mo
153.19 3.14502 li
153.19 5.39502 li
cp
f
153.191 3.14502 mo
153.191 5.39502 li
@
150.415 172.501 mo
150.071 172.501 149.815 172.67 149.639 173.007 cv
149.464 173.345 149.382 173.851 149.382 174.526 cv
149.382 175.201 149.464 175.707 149.639 176.045 cv
149.815 176.382 150.071 176.551 150.415 176.551 cv
150.759 176.551 151.016 176.382 151.191 176.045 cv
151.36 175.707 151.448 175.201 151.448 174.526 cv
151.448 173.851 151.36 173.345 151.191 173.007 cv
151.016 172.67 150.759 172.501 150.415 172.501 cv
150.415 171.975 mo
150.962 171.975 151.381 172.197 151.677 172.63 cv
151.968 173.067 152.116 173.702 152.116 174.526 cv
152.116 175.356 151.968 175.991 151.677 176.423 cv
151.381 176.854 150.962 177.071 150.415 177.071 cv
149.862 177.071 149.437 176.854 149.146 176.423 cv
148.856 175.991 148.714 175.356 148.714 174.526 cv
148.714 173.702 148.856 173.067 149.146 172.63 cv
149.437 172.197 149.862 171.975 150.415 171.975 cv
f
153.284 176.146 mo
153.979 176.146 li
153.979 176.982 li
153.284 176.982 li
153.284 176.146 li
cp
f
156.854 172.501 mo
156.51 172.501 156.254 172.67 156.079 173.007 cv
155.903 173.345 155.822 173.851 155.822 174.526 cv
155.822 175.201 155.903 175.707 156.079 176.045 cv
156.254 176.382 156.51 176.551 156.854 176.551 cv
157.199 176.551 157.456 176.382 157.631 176.045 cv
157.799 175.707 157.887 175.201 157.887 174.526 cv
157.887 173.851 157.799 173.345 157.631 173.007 cv
157.456 172.67 157.199 172.501 156.854 172.501 cv
156.854 171.975 mo
157.401 171.975 157.82 172.197 158.117 172.63 cv
158.407 173.067 158.555 173.702 158.555 174.526 cv
158.555 175.356 158.407 175.991 158.117 176.423 cv
157.82 176.854 157.401 177.071 156.854 177.071 cv
156.302 177.071 155.876 176.854 155.585 176.423 cv
155.296 175.991 155.154 175.356 155.154 174.526 cv
155.154 173.702 155.296 173.067 155.585 172.63 cv
155.876 172.197 156.302 171.975 156.854 171.975 cv
f
195.041 169.601 mo
195.041 167.351 li
f
195.041 169.601 mo
195.041 167.351 li
@
195.041 3.14502 mo
195.041 5.39502 li
f
195.041 3.14502 mo
195.041 5.39502 li
@
192.335 172.501 mo
191.991 172.501 191.735 172.67 191.559 173.007 cv
191.383 173.345 191.303 173.851 191.303 174.526 cv
191.303 175.201 191.383 175.707 191.559 176.045 cv
191.735 176.382 191.991 176.551 192.335 176.551 cv
192.68 176.551 192.936 176.382 193.112 176.045 cv
193.281 175.707 193.369 175.201 193.369 174.526 cv
193.369 173.851 193.281 173.345 193.112 173.007 cv
192.936 172.67 192.68 172.501 192.335 172.501 cv
192.335 171.975 mo
192.882 171.975 193.3 172.197 193.598 172.63 cv
193.888 173.067 194.037 173.702 194.037 174.526 cv
194.037 175.356 193.888 175.991 193.598 176.423 cv
193.3 176.854 192.882 177.071 192.335 177.071 cv
191.782 177.071 191.357 176.854 191.067 176.423 cv
190.776 175.991 190.634 175.356 190.634 174.526 cv
190.634 173.702 190.776 173.067 191.067 172.63 cv
191.357 172.197 191.782 171.975 192.335 171.975 cv
f
195.205 176.146 mo
195.9 176.146 li
195.9 176.982 li
195.205 176.982 li
195.205 176.146 li
cp
f
197.357 172.062 mo
199.97 172.062 li
199.97 172.622 li
197.965 172.622 li
197.965 173.831 li
198.059 173.797 198.161 173.77 198.255 173.757 cv
198.35 173.743 198.451 173.729 198.545 173.729 cv
199.092 173.729 199.525 173.885 199.848 174.183 cv
200.172 174.485 200.334 174.89 200.334 175.403 cv
200.334 175.937 200.166 176.349 199.834 176.64 cv
199.503 176.929 199.039 177.07 198.445 177.07 cv
198.236 177.07 198.026 177.05 197.81 177.023 cv
197.593 176.99 197.377 176.942 197.148 176.868 cv
197.148 176.2 li
197.344 176.308 197.546 176.389 197.763 176.442 cv
197.971 176.497 198.195 176.517 198.43 176.517 cv
198.809 176.517 199.113 176.423 199.335 176.221 cv
199.551 176.018 199.666 175.748 199.666 175.403 cv
199.666 175.065 199.551 174.796 199.335 174.593 cv
199.113 174.392 198.809 174.29 198.43 174.29 cv
198.255 174.29 198.073 174.31 197.897 174.351 cv
197.722 174.392 197.54 174.452 197.357 174.533 cv
197.357 172.062 li
f
236.89 169.601 mo
236.89 167.351 li
f
236.89 169.601 mo
236.89 167.351 li
@
236.89 3.14502 mo
236.89 5.39502 li
f
236.89 3.14502 mo
236.89 5.39502 li
@
232.951 176.423 mo
234.038 176.423 li
234.038 172.669 li
232.856 172.905 li
232.856 172.298 li
234.031 172.062 li
234.699 172.062 li
234.699 176.423 li
235.786 176.423 li
235.786 176.983 li
232.951 176.983 li
232.951 176.423 li
cp
f
237.129 176.146 mo
237.825 176.146 li
237.825 176.982 li
237.129 176.982 li
237.129 176.146 li
cp
f
240.7 172.501 mo
240.356 172.501 240.099 172.67 239.923 173.007 cv
239.749 173.345 239.667 173.851 239.667 174.526 cv
239.667 175.201 239.749 175.707 239.923 176.045 cv
240.099 176.382 240.356 176.551 240.7 176.551 cv
241.043 176.551 241.3 176.382 241.476 176.045 cv
241.645 175.707 241.732 175.201 241.732 174.526 cv
241.732 173.851 241.645 173.345 241.476 173.007 cv
241.3 172.67 241.043 172.501 240.7 172.501 cv
240.7 171.975 mo
241.247 171.975 241.665 172.197 241.961 172.63 cv
242.252 173.067 242.401 173.702 242.401 174.526 cv
242.401 175.356 242.252 175.991 241.961 176.423 cv
241.665 176.854 241.247 177.071 240.7 177.071 cv
240.147 177.071 239.721 176.854 239.43 176.423 cv
239.141 175.991 239 175.356 239 174.526 cv
239 173.702 239.141 173.067 239.43 172.63 cv
239.721 172.197 240.147 171.975 240.7 171.975 cv
f
278.741 169.601 mo
278.741 167.351 li
f
278.741 169.601 mo
278.741 167.351 li
@
278.741 3.14502 mo
278.741 5.39502 li
f
278.741 3.14502 mo
278.741 5.39502 li
@
274.871 176.423 mo
275.958 176.423 li
275.958 172.669 li
274.776 172.905 li
274.776 172.298 li
275.951 172.062 li
276.619 172.062 li
276.619 176.423 li
277.706 176.423 li
277.706 176.983 li
274.871 176.983 li
274.871 176.423 li
cp
f
279.049 176.146 mo
279.744 176.146 li
279.744 176.982 li
279.049 176.982 li
279.049 176.146 li
cp
f
281.203 172.062 mo
283.815 172.062 li
283.815 172.622 li
281.81 172.622 li
281.81 173.831 li
281.905 173.797 282.006 173.77 282.101 173.757 cv
282.195 173.743 282.295 173.729 282.39 173.729 cv
282.937 173.729 283.37 173.885 283.694 174.183 cv
284.018 174.485 284.179 174.89 284.179 175.403 cv
284.179 175.937 284.01 176.349 283.679 176.64 cv
283.349 176.929 282.883 177.07 282.29 177.07 cv
282.081 177.07 281.871 177.05 281.655 177.023 cv
281.439 176.99 281.222 176.942 280.993 176.868 cv
280.993 176.2 li
281.189 176.308 281.392 176.389 281.608 176.442 cv
281.817 176.497 282.04 176.517 282.276 176.517 cv
282.654 176.517 282.958 176.423 283.18 176.221 cv
283.396 176.018 283.511 175.748 283.511 175.403 cv
283.511 175.065 283.396 174.796 283.18 174.593 cv
282.958 174.392 282.654 174.29 282.276 174.29 cv
282.101 174.29 281.917 174.31 281.743 174.351 cv
281.567 174.392 281.384 174.452 281.203 174.533 cv
281.203 172.062 li
f
146.042 186.335 mo
144.166 181.413 li
144.861 181.413 li
146.42 185.558 li
147.979 181.413 li
148.674 181.413 li
146.798 186.335 li
146.042 186.335 li
cp
f
151.044 184.479 mo
150.551 184.479 150.213 184.539 150.024 184.647 cv
149.835 184.762 149.741 184.95 149.741 185.221 cv
149.741 185.437 149.809 185.612 149.951 185.733 cv
150.092 185.862 150.288 185.923 150.531 185.923 cv
150.868 185.923 151.138 185.808 151.34 185.565 cv
151.543 185.329 151.644 185.012 151.644 184.613 cv
151.644 184.479 li
151.044 184.479 li
152.251 184.229 mo
152.251 186.335 li
151.644 186.335 li
151.644 185.774 li
151.502 186.004 151.328 186.166 151.125 186.267 cv
150.922 186.368 150.666 186.423 150.369 186.423 cv
149.991 186.423 149.687 186.321 149.464 186.112 cv
149.242 185.902 149.134 185.619 149.134 185.261 cv
149.134 184.85 149.269 184.539 149.552 184.323 cv
149.829 184.114 150.24 184.006 150.794 184.006 cv
151.644 184.006 li
151.644 183.944 li
151.644 183.669 151.55 183.452 151.367 183.297 cv
151.186 183.148 150.929 183.067 150.599 183.067 cv
150.382 183.067 150.18 183.095 149.978 183.148 cv
149.774 183.202 149.585 183.276 149.404 183.371 cv
149.404 182.812 li
149.62 182.729 149.835 182.663 150.045 182.622 cv
150.254 182.581 150.457 182.555 150.659 182.555 cv
151.192 182.555 151.591 182.696 151.854 182.974 cv
152.117 183.25 152.251 183.669 152.251 184.229 cv
f
153.5 181.204 mo
154.108 181.204 li
154.108 186.335 li
153.5 186.335 li
153.5 181.204 li
cp
f
155.316 184.876 mo
155.316 182.642 li
155.924 182.642 li
155.924 184.856 li
155.924 185.207 155.992 185.464 156.126 185.64 cv
156.262 185.815 156.464 185.902 156.741 185.902 cv
157.064 185.902 157.328 185.802 157.517 185.592 cv
157.706 185.383 157.8 185.099 157.8 184.735 cv
157.8 182.642 li
158.408 182.642 li
158.408 186.335 li
157.8 186.335 li
157.8 185.768 li
157.652 185.997 157.476 186.159 157.288 186.267 cv
157.091 186.368 156.869 186.423 156.612 186.423 cv
156.187 186.423 155.863 186.294 155.647 186.03 cv
155.424 185.774 155.316 185.39 155.316 184.876 cv
f
162.816 184.337 mo
162.816 184.634 li
160.028 184.634 li
160.055 185.052 160.176 185.376 160.406 185.592 cv
160.628 185.808 160.939 185.916 161.344 185.916 cv
161.574 185.916 161.803 185.89 162.019 185.835 cv
162.235 185.781 162.458 185.693 162.674 185.571 cv
162.674 186.146 li
162.458 186.24 162.235 186.314 162.005 186.354 cv
161.776 186.396 161.54 186.423 161.31 186.423 cv
160.716 186.423 160.25 186.253 159.907 185.916 cv
159.562 185.579 159.393 185.112 159.393 184.525 cv
159.393 183.925 159.555 183.445 159.879 183.088 cv
160.203 182.737 160.649 182.555 161.203 182.555 cv
161.702 182.555 162.093 182.716 162.383 183.034 cv
162.667 183.358 162.816 183.79 162.816 184.337 cv
162.208 184.161 mo
162.202 183.83 162.107 183.567 161.931 183.364 cv
161.75 183.169 161.506 183.067 161.209 183.067 cv
160.872 183.067 160.601 183.169 160.399 183.358 cv
160.197 183.547 160.076 183.817 160.048 184.161 cv
162.208 184.161 li
f
27.6406 169.601 mo
29.8906 169.601 li
f
27.6406 169.601 mo
29.8906 169.601 li
@
278.741 169.601 mo
276.491 169.601 li
f
278.741 169.601 mo
276.491 169.601 li
@
24.1357 166.981 mo
23.7915 166.981 23.5347 167.15 23.3594 167.487 cv
23.1841 167.825 23.103 168.331 23.103 169.007 cv
23.103 169.682 23.1841 170.188 23.3594 170.525 cv
23.5347 170.862 23.7915 171.031 24.1357 171.031 cv
24.48 171.031 24.7363 170.862 24.9116 170.525 cv
25.0806 170.188 25.1685 169.682 25.1685 169.007 cv
25.1685 168.331 25.0806 167.825 24.9116 167.487 cv
24.7363 167.15 24.48 166.981 24.1357 166.981 cv
24.1357 166.455 mo
24.6821 166.455 25.1011 166.678 25.3979 167.11 cv
25.688 167.548 25.8364 168.183 25.8364 169.007 cv
25.8364 169.837 25.688 170.472 25.3979 170.903 cv
25.1011 171.335 24.6821 171.552 24.1357 171.552 cv
23.582 171.552 23.1567 171.335 22.8667 170.903 cv
22.5762 170.472 22.4346 169.837 22.4346 169.007 cv
22.4346 168.183 22.5762 167.548 22.8667 167.11 cv
23.1567 166.678 23.582 166.455 24.1357 166.455 cv
f
27.6406 145.821 mo
29.8906 145.821 li
f
27.6406 145.821 mo
29.8906 145.821 li
@
278.741 145.821 mo
276.491 145.821 li
f
278.741 145.821 mo
276.491 145.821 li
@
14.1929 142.763 mo
16.8052 142.763 li
16.8052 143.323 li
14.8003 143.323 li
14.8003 144.532 li
14.8945 144.498 14.9961 144.471 15.0903 144.458 cv
15.1851 144.444 15.2861 144.431 15.3809 144.431 cv
15.9277 144.431 16.3594 144.585 16.6836 144.883 cv
17.0073 145.187 17.1694 145.591 17.1694 146.104 cv
17.1694 146.638 17.001 147.049 16.6699 147.34 cv
16.3394 147.63 15.8735 147.771 15.2793 147.771 cv
15.0703 147.771 14.8608 147.751 14.645 147.725 cv
14.4292 147.691 14.2129 147.644 13.9834 147.569 cv
13.9834 146.901 li
14.1792 147.009 14.3818 147.09 14.5977 147.144 cv
14.8071 147.198 15.0298 147.218 15.2661 147.218 cv
15.644 147.218 15.9478 147.124 16.1704 146.922 cv
16.3867 146.719 16.5015 146.449 16.5015 146.104 cv
16.5015 145.768 16.3867 145.497 16.1704 145.294 cv
15.9478 145.092 15.644 144.991 15.2661 144.991 cv
15.0903 144.991 14.9082 145.011 14.7329 145.051 cv
14.5571 145.092 14.375 145.153 14.1929 145.234 cv
14.1929 142.763 li
f
19.9033 143.202 mo
19.5591 143.202 19.3027 143.371 19.127 143.708 cv
18.9517 144.046 18.8706 144.552 18.8706 145.228 cv
18.8706 145.902 18.9517 146.408 19.127 146.746 cv
19.3027 147.083 19.5591 147.252 19.9033 147.252 cv
20.2476 147.252 20.5044 147.083 20.6797 146.746 cv
20.8486 146.408 20.936 145.902 20.936 145.228 cv
20.936 144.552 20.8486 144.046 20.6797 143.708 cv
20.5044 143.371 20.2476 143.202 19.9033 143.202 cv
19.9033 142.676 mo
20.4502 142.676 20.8687 142.898 21.1655 143.331 cv
21.4561 143.769 21.6045 144.403 21.6045 145.228 cv
21.6045 146.057 21.4561 146.692 21.1655 147.124 cv
20.8687 147.556 20.4502 147.772 19.9033 147.772 cv
19.3501 147.772 18.9248 147.556 18.6343 147.124 cv
18.3442 146.692 18.2026 146.057 18.2026 145.228 cv
18.2026 144.403 18.3442 143.769 18.6343 143.331 cv
18.9248 142.898 19.3501 142.676 19.9033 142.676 cv
f
24.1963 143.202 mo
23.8521 143.202 23.5957 143.371 23.4199 143.708 cv
23.2446 144.046 23.1636 144.552 23.1636 145.228 cv
23.1636 145.902 23.2446 146.408 23.4199 146.746 cv
23.5957 147.083 23.8521 147.252 24.1963 147.252 cv
24.5405 147.252 24.7974 147.083 24.9727 146.746 cv
25.1416 146.408 25.229 145.902 25.229 145.228 cv
25.229 144.552 25.1416 144.046 24.9727 143.708 cv
24.7974 143.371 24.5405 143.202 24.1963 143.202 cv
24.1963 142.676 mo
24.7432 142.676 25.1616 142.898 25.4585 143.331 cv
25.749 143.769 25.8975 144.403 25.8975 145.228 cv
25.8975 146.057 25.749 146.692 25.4585 147.124 cv
25.1616 147.556 24.7432 147.772 24.1963 147.772 cv
23.6431 147.772 23.2178 147.556 22.9272 147.124 cv
22.6372 146.692 22.4956 146.057 22.4956 145.228 cv
22.4956 144.403 22.6372 143.769 22.9272 143.331 cv
23.2178 142.898 23.6431 142.676 24.1963 142.676 cv
f
27.6406 122.041 mo
29.8906 122.041 li
f
27.6406 122.041 mo
29.8906 122.041 li
@
278.741 122.041 mo
276.491 122.041 li
f
278.741 122.041 mo
276.491 122.041 li
@
10.2227 123.345 mo
11.3091 123.345 li
11.3091 119.591 li
10.1279 119.828 li
10.1279 119.221 li
11.3027 118.984 li
11.9707 118.984 li
11.9707 123.345 li
13.0576 123.345 li
13.0576 123.904 li
10.2227 123.904 li
10.2227 123.345 li
cp
f
15.8252 119.423 mo
15.481 119.423 15.2246 119.591 15.0488 119.929 cv
14.8735 120.267 14.7925 120.772 14.7925 121.448 cv
14.7925 122.123 14.8735 122.629 15.0488 122.966 cv
15.2246 123.304 15.481 123.473 15.8252 123.473 cv
16.1694 123.473 16.4263 123.304 16.6016 122.966 cv
16.7705 122.629 16.8579 122.123 16.8579 121.448 cv
16.8579 120.772 16.7705 120.267 16.6016 119.929 cv
16.4263 119.591 16.1694 119.423 15.8252 119.423 cv
15.8252 118.896 mo
16.3721 118.896 16.7905 119.119 17.0874 119.552 cv
17.3779 119.99 17.5264 120.625 17.5264 121.448 cv
17.5264 122.278 17.3779 122.913 17.0874 123.345 cv
16.7905 123.776 16.3721 123.993 15.8252 123.993 cv
15.272 123.993 14.8467 123.776 14.5562 123.345 cv
14.2661 122.913 14.1245 122.278 14.1245 121.448 cv
14.1245 120.625 14.2661 119.99 14.5562 119.552 cv
14.8467 119.119 15.272 118.896 15.8252 118.896 cv
f
20.1182 119.423 mo
19.7739 119.423 19.5176 119.591 19.3418 119.929 cv
19.1665 120.267 19.0854 120.772 19.0854 121.448 cv
19.0854 122.123 19.1665 122.629 19.3418 122.966 cv
19.5176 123.304 19.7739 123.473 20.1182 123.473 cv
20.4624 123.473 20.7192 123.304 20.8945 122.966 cv
21.0635 122.629 21.1509 122.123 21.1509 121.448 cv
21.1509 120.772 21.0635 120.267 20.8945 119.929 cv
20.7192 119.591 20.4624 119.423 20.1182 119.423 cv
20.1182 118.896 mo
20.665 118.896 21.0835 119.119 21.3804 119.552 cv
21.6709 119.99 21.8193 120.625 21.8193 121.448 cv
21.8193 122.278 21.6709 122.913 21.3804 123.345 cv
21.0835 123.776 20.665 123.993 20.1182 123.993 cv
19.5649 123.993 19.1396 123.776 18.8491 123.345 cv
18.5591 122.913 18.4175 122.278 18.4175 121.448 cv
18.4175 120.625 18.5591 119.99 18.8491 119.552 cv
19.1396 119.119 19.5649 118.896 20.1182 118.896 cv
f
24.4111 119.423 mo
24.0669 119.423 23.8105 119.591 23.6348 119.929 cv
23.4595 120.267 23.3784 120.772 23.3784 121.448 cv
23.3784 122.123 23.4595 122.629 23.6348 122.966 cv
23.8105 123.304 24.0669 123.473 24.4111 123.473 cv
24.7554 123.473 25.0117 123.304 25.1875 122.966 cv
25.356 122.629 25.4438 122.123 25.4438 121.448 cv
25.4438 120.772 25.356 120.267 25.1875 119.929 cv
25.0117 119.591 24.7554 119.423 24.4111 119.423 cv
24.4111 118.896 mo
24.958 118.896 25.3765 119.119 25.6733 119.552 cv
25.9639 119.99 26.1123 120.625 26.1123 121.448 cv
26.1123 122.278 25.9639 122.913 25.6733 123.345 cv
25.3765 123.776 24.958 123.993 24.4111 123.993 cv
23.8574 123.993 23.4326 123.776 23.1421 123.345 cv
22.8521 122.913 22.71 122.278 22.71 121.448 cv
22.71 120.625 22.8521 119.99 23.1421 119.552 cv
23.4326 119.119 23.8574 118.896 24.4111 118.896 cv
f
27.6406 98.2627 mo
29.8906 98.2627 li
f
27.6406 98.2627 mo
29.8906 98.2627 li
@
278.741 98.2627 mo
276.491 98.2627 li
f
278.741 98.2627 mo
276.491 98.2627 li
@
10.2227 99.5654 mo
11.3091 99.5654 li
11.3091 95.8125 li
10.1279 96.0488 li
10.1279 95.4414 li
11.3027 95.2051 li
11.9707 95.2051 li
11.9707 99.5654 li
13.0576 99.5654 li
13.0576 100.126 li
10.2227 100.126 li
10.2227 99.5654 li
cp
f
14.4077 95.2051 mo
17.02 95.2051 li
17.02 95.7651 li
15.0151 95.7651 li
15.0151 96.9736 li
15.1099 96.9399 15.2109 96.9126 15.3057 96.8994 cv
15.3999 96.8853 15.5015 96.8721 15.5957 96.8721 cv
16.1426 96.8721 16.5747 97.0269 16.8984 97.3247 cv
17.2227 97.6284 17.3848 98.0327 17.3848 98.5459 cv
17.3848 99.0796 17.2158 99.4912 16.8853 99.7813 cv
16.5542 100.071 16.0884 100.213 15.4946 100.213 cv
15.2852 100.213 15.0762 100.193 14.8599 100.166 cv
14.644 100.132 14.4282 100.085 14.1987 100.011 cv
14.1987 99.3423 li
14.3945 99.4507 14.5967 99.5313 14.813 99.5859 cv
15.022 99.6396 15.2446 99.6602 15.481 99.6602 cv
15.8589 99.6602 16.1626 99.5654 16.3857 99.3633 cv
16.6016 99.1602 16.7163 98.8906 16.7163 98.5459 cv
16.7163 98.209 16.6016 97.9385 16.3857 97.7363 cv
16.1626 97.5337 15.8589 97.4326 15.481 97.4326 cv
15.3057 97.4326 15.1235 97.4526 14.9478 97.4927 cv
14.7725 97.5337 14.5898 97.5947 14.4077 97.6758 cv
14.4077 95.2051 li
f
20.1182 95.6436 mo
19.7739 95.6436 19.5176 95.8125 19.3418 96.1494 cv
19.1665 96.4873 19.0854 96.9932 19.0854 97.6689 cv
19.0854 98.3438 19.1665 98.8496 19.3418 99.1875 cv
19.5176 99.5244 19.7739 99.6934 20.1182 99.6934 cv
20.4624 99.6934 20.7192 99.5244 20.8945 99.1875 cv
21.0635 98.8496 21.1509 98.3438 21.1509 97.6689 cv
21.1509 96.9932 21.0635 96.4873 20.8945 96.1494 cv
20.7192 95.8125 20.4624 95.6436 20.1182 95.6436 cv
20.1182 95.1167 mo
20.665 95.1167 21.0835 95.3398 21.3804 95.772 cv
21.6709 96.2109 21.8193 96.8452 21.8193 97.6689 cv
21.8193 98.4985 21.6709 99.1328 21.3804 99.5654 cv
21.0835 99.9971 20.665 100.213 20.1182 100.213 cv
19.5649 100.213 19.1396 99.9971 18.8491 99.5654 cv
18.5591 99.1328 18.4175 98.4985 18.4175 97.6689 cv
18.4175 96.8452 18.5591 96.2109 18.8491 95.772 cv
19.1396 95.3398 19.5649 95.1167 20.1182 95.1167 cv
f
24.4111 95.6436 mo
24.0669 95.6436 23.8105 95.8125 23.6348 96.1494 cv
23.4595 96.4873 23.3784 96.9932 23.3784 97.6689 cv
23.3784 98.3438 23.4595 98.8496 23.6348 99.1875 cv
23.8105 99.5244 24.0669 99.6934 24.4111 99.6934 cv
24.7554 99.6934 25.0117 99.5244 25.1875 99.1875 cv
25.356 98.8496 25.4438 98.3438 25.4438 97.6689 cv
25.4438 96.9932 25.356 96.4873 25.1875 96.1494 cv
25.0117 95.8125 24.7554 95.6436 24.4111 95.6436 cv
24.4111 95.1167 mo
24.958 95.1167 25.3765 95.3398 25.6733 95.772 cv
25.9639 96.2109 26.1123 96.8452 26.1123 97.6689 cv
26.1123 98.4985 25.9639 99.1328 25.6733 99.5654 cv
25.3765 99.9971 24.958 100.213 24.4111 100.213 cv
23.8574 100.213 23.4326 99.9971 23.1421 99.5654 cv
22.8521 99.1328 22.71 98.4985 22.71 97.6689 cv
22.71 96.8452 22.8521 96.2109 23.1421 95.772 cv
23.4326 95.3398 23.8574 95.1167 24.4111 95.1167 cv
f
27.6406 74.4834 mo
29.8906 74.4834 li
f
27.6406 74.4834 mo
29.8906 74.4834 li
@
278.741 74.4834 mo
276.491 74.4834 li
f
278.741 74.4834 mo
276.491 74.4834 li
@
10.4355 75.7861 mo
12.7578 75.7861 li
12.7578 76.3462 li
9.63232 76.3462 li
9.63232 75.7861 li
9.88232 75.5298 10.2266 75.1787 10.665 74.7329 cv
11.0972 74.2944 11.374 74.0107 11.4888 73.8828 cv
11.7046 73.6465 11.853 73.4438 11.9341 73.2754 cv
12.0151 73.1133 12.0625 72.9443 12.0625 72.7822 cv
12.0625 72.5259 11.9678 72.3101 11.7856 72.1479 cv
11.6035 71.9858 11.3672 71.8979 11.0703 71.8979 cv
10.8608 71.8979 10.6382 71.9385 10.4087 72.0059 cv
10.1792 72.0806 9.92969 72.1885 9.66602 72.3369 cv
9.66602 71.6621 li
9.93604 71.5537 10.186 71.4727 10.4155 71.4189 cv
10.645 71.3647 10.8608 71.3379 11.0566 71.3379 cv
11.563 71.3379 11.9678 71.4663 12.2715 71.7227 cv
12.5757 71.979 12.731 72.3164 12.731 72.7417 cv
12.731 72.9443 12.6904 73.1401 12.6157 73.3154 cv
12.5415 73.498 12.4067 73.7139 12.2041 73.957 cv
12.1504 74.0244 11.9746 74.2065 11.6777 74.5103 cv
11.3809 74.814 10.9688 75.2393 10.4355 75.7861 cv
f
15.5791 71.8643 mo
15.2349 71.8643 14.9785 72.0332 14.8027 72.3706 cv
14.6274 72.708 14.5464 73.2144 14.5464 73.8892 cv
14.5464 74.5645 14.6274 75.0703 14.8027 75.4082 cv
14.9785 75.7456 15.2349 75.9141 15.5791 75.9141 cv
15.9233 75.9141 16.1802 75.7456 16.3555 75.4082 cv
16.5244 75.0703 16.6118 74.5645 16.6118 73.8892 cv
16.6118 73.2144 16.5244 72.708 16.3555 72.3706 cv
16.1802 72.0332 15.9233 71.8643 15.5791 71.8643 cv
15.5791 71.3379 mo
16.126 71.3379 16.5444 71.5605 16.8413 71.9927 cv
17.1318 72.4312 17.2803 73.0659 17.2803 73.8892 cv
17.2803 74.7197 17.1318 75.354 16.8413 75.7861 cv
16.5444 76.2178 16.126 76.4341 15.5791 76.4341 cv
15.0259 76.4341 14.6006 76.2178 14.3101 75.7861 cv
14.02 75.354 13.8784 74.7197 13.8784 73.8892 cv
13.8784 73.0659 14.02 72.4312 14.3101 71.9927 cv
14.6006 71.5605 15.0259 71.3379 15.5791 71.3379 cv
f
19.8721 71.8643 mo
19.5278 71.8643 19.2715 72.0332 19.0957 72.3706 cv
18.9204 72.708 18.8394 73.2144 18.8394 73.8892 cv
18.8394 74.5645 18.9204 75.0703 19.0957 75.4082 cv
19.2715 75.7456 19.5278 75.9141 19.8721 75.9141 cv
20.2163 75.9141 20.4731 75.7456 20.6484 75.4082 cv
20.8174 75.0703 20.9048 74.5645 20.9048 73.8892 cv
20.9048 73.2144 20.8174 72.708 20.6484 72.3706 cv
20.4731 72.0332 20.2163 71.8643 19.8721 71.8643 cv
19.8721 71.3379 mo
20.4189 71.3379 20.8374 71.5605 21.1343 71.9927 cv
21.4248 72.4312 21.5732 73.0659 21.5732 73.8892 cv
21.5732 74.7197 21.4248 75.354 21.1343 75.7861 cv
20.8374 76.2178 20.4189 76.4341 19.8721 76.4341 cv
19.3188 76.4341 18.8936 76.2178 18.603 75.7861 cv
18.313 75.354 18.1714 74.7197 18.1714 73.8892 cv
18.1714 73.0659 18.313 72.4312 18.603 71.9927 cv
18.8936 71.5605 19.3188 71.3379 19.8721 71.3379 cv
f
24.165 71.8643 mo
23.8208 71.8643 23.5645 72.0332 23.3887 72.3706 cv
23.2134 72.708 23.1323 73.2144 23.1323 73.8892 cv
23.1323 74.5645 23.2134 75.0703 23.3887 75.4082 cv
23.5645 75.7456 23.8208 75.9141 24.165 75.9141 cv
24.5093 75.9141 24.7656 75.7456 24.9414 75.4082 cv
25.1099 75.0703 25.1978 74.5645 25.1978 73.8892 cv
25.1978 73.2144 25.1099 72.708 24.9414 72.3706 cv
24.7656 72.0332 24.5093 71.8643 24.165 71.8643 cv
24.165 71.3379 mo
24.7119 71.3379 25.1304 71.5605 25.4272 71.9927 cv
25.7178 72.4312 25.8662 73.0659 25.8662 73.8892 cv
25.8662 74.7197 25.7178 75.354 25.4272 75.7861 cv
25.1304 76.2178 24.7119 76.4341 24.165 76.4341 cv
23.6113 76.4341 23.1865 76.2178 22.896 75.7861 cv
22.606 75.354 22.4639 74.7197 22.4639 73.8892 cv
22.4639 73.0659 22.606 72.4312 22.896 71.9927 cv
23.1865 71.5605 23.6113 71.3379 24.165 71.3379 cv
f
27.6406 50.7036 mo
29.8906 50.7036 li
f
27.6406 50.7036 mo
29.8906 50.7036 li
@
278.741 50.7036 mo
276.491 50.7036 li
f
278.741 50.7036 mo
276.491 50.7036 li
@
10.4355 52.0068 mo
12.7578 52.0068 li
12.7578 52.5669 li
9.63232 52.5669 li
9.63232 52.0068 li
9.88232 51.75 10.2266 51.3994 10.665 50.9536 cv
11.0972 50.5151 11.374 50.2314 11.4888 50.1035 cv
11.7046 49.8672 11.853 49.6646 11.9341 49.4956 cv
12.0151 49.334 12.0625 49.165 12.0625 49.0029 cv
12.0625 48.7466 11.9678 48.5303 11.7856 48.3687 cv
11.6035 48.2065 11.3672 48.1187 11.0703 48.1187 cv
10.8608 48.1187 10.6382 48.1592 10.4087 48.2266 cv
10.1792 48.3008 9.92969 48.4092 9.66602 48.5576 cv
9.66602 47.8823 li
9.93604 47.7744 10.186 47.6934 10.4155 47.6396 cv
10.645 47.5854 10.8608 47.5586 11.0566 47.5586 cv
11.563 47.5586 11.9678 47.6865 12.2715 47.9434 cv
12.5757 48.1997 12.731 48.5371 12.731 48.9624 cv
12.731 49.165 12.6904 49.3608 12.6157 49.5361 cv
12.5415 49.7188 12.4067 49.9346 12.2041 50.1777 cv
12.1504 50.2451 11.9746 50.4272 11.6777 50.731 cv
11.3809 51.0347 10.9688 51.46 10.4355 52.0068 cv
f
14.1616 47.6465 mo
16.7739 47.6465 li
16.7739 48.2065 li
14.769 48.2065 li
14.769 49.415 li
14.8638 49.3809 14.9648 49.354 15.0596 49.3403 cv
15.1538 49.3271 15.2554 49.3135 15.3496 49.3135 cv
15.8965 49.3135 16.3286 49.4688 16.6523 49.7656 cv
16.9766 50.0693 17.1387 50.4746 17.1387 50.9873 cv
17.1387 51.5205 16.9697 51.9326 16.6392 52.2227 cv
16.3081 52.5132 15.8423 52.6548 15.2485 52.6548 cv
15.0391 52.6548 14.8301 52.6348 14.6138 52.6074 cv
14.3979 52.5737 14.1821 52.5264 13.9526 52.4521 cv
13.9526 51.7842 li
14.1484 51.8921 14.3506 51.9731 14.5669 52.0269 cv
14.7759 52.0811 14.9985 52.1011 15.2349 52.1011 cv
15.6128 52.1011 15.9165 52.0068 16.1396 51.8042 cv
16.3555 51.6016 16.4702 51.332 16.4702 50.9873 cv
16.4702 50.6499 16.3555 50.3799 16.1396 50.1777 cv
15.9165 49.9751 15.6128 49.874 15.2349 49.874 cv
15.0596 49.874 14.8774 49.894 14.7017 49.9346 cv
14.5264 49.9751 14.3438 50.0356 14.1616 50.1167 cv
14.1616 47.6465 li
f
19.8721 48.085 mo
19.5278 48.085 19.2715 48.2539 19.0957 48.5913 cv
18.9204 48.9287 18.8394 49.4351 18.8394 50.1099 cv
18.8394 50.7852 18.9204 51.291 19.0957 51.6289 cv
19.2715 51.9663 19.5278 52.1348 19.8721 52.1348 cv
20.2163 52.1348 20.4731 51.9663 20.6484 51.6289 cv
20.8174 51.291 20.9048 50.7852 20.9048 50.1099 cv
20.9048 49.4351 20.8174 48.9287 20.6484 48.5913 cv
20.4731 48.2539 20.2163 48.085 19.8721 48.085 cv
19.8721 47.5586 mo
20.4189 47.5586 20.8374 47.7813 21.1343 48.2129 cv
21.4248 48.6519 21.5732 49.2861 21.5732 50.1099 cv
21.5732 50.9399 21.4248 51.5747 21.1343 52.0068 cv
20.8374 52.4385 20.4189 52.6548 19.8721 52.6548 cv
19.3188 52.6548 18.8936 52.4385 18.603 52.0068 cv
18.313 51.5747 18.1714 50.9399 18.1714 50.1099 cv
18.1714 49.2861 18.313 48.6519 18.603 48.2129 cv
18.8936 47.7813 19.3188 47.5586 19.8721 47.5586 cv
f
24.165 48.085 mo
23.8208 48.085 23.5645 48.2539 23.3887 48.5913 cv
23.2134 48.9287 23.1323 49.4351 23.1323 50.1099 cv
23.1323 50.7852 23.2134 51.291 23.3887 51.6289 cv
23.5645 51.9663 23.8208 52.1348 24.165 52.1348 cv
24.5093 52.1348 24.7656 51.9663 24.9414 51.6289 cv
25.1099 51.291 25.1978 50.7852 25.1978 50.1099 cv
25.1978 49.4351 25.1099 48.9287 24.9414 48.5913 cv
24.7656 48.2539 24.5093 48.085 24.165 48.085 cv
24.165 47.5586 mo
24.7119 47.5586 25.1304 47.7813 25.4272 48.2129 cv
25.7178 48.6519 25.8662 49.2861 25.8662 50.1099 cv
25.8662 50.9399 25.7178 51.5747 25.4272 52.0068 cv
25.1304 52.4385 24.7119 52.6548 24.165 52.6548 cv
23.6113 52.6548 23.1865 52.4385 22.896 52.0068 cv
22.606 51.5747 22.4639 50.9399 22.4639 50.1099 cv
22.4639 49.2861 22.606 48.6519 22.896 48.2129 cv
23.1865 47.7813 23.6113 47.5586 24.165 47.5586 cv
f
27.6406 26.9243 mo
29.8906 26.9243 li
f
27.6406 26.9243 mo
29.8906 26.9243 li
@
278.741 26.9243 mo
276.491 26.9243 li
f
278.741 26.9243 mo
276.491 26.9243 li
@
11.9063 26.1348 mo
12.2236 26.2026 12.4736 26.3442 12.6489 26.5605 cv
12.8247 26.7764 12.9189 27.0464 12.9189 27.3569 cv
12.9189 27.8428 12.75 28.2207 12.4194 28.4839 cv
12.082 28.7471 11.6094 28.8755 10.9951 28.8755 cv
10.7861 28.8755 10.5698 28.8555 10.354 28.8149 cv
10.1382 28.7813 9.90869 28.7202 9.6792 28.6392 cv
9.6792 27.998 li
9.86133 28.106 10.064 28.187 10.2866 28.2412 cv
10.5024 28.2949 10.7319 28.3223 10.9751 28.3223 cv
11.3936 28.3223 11.7109 28.2412 11.9268 28.0791 cv
12.1426 27.917 12.2573 27.6738 12.2573 27.3569 cv
12.2573 27.0732 12.1563 26.8438 11.9536 26.6816 cv
11.7515 26.5195 11.4678 26.4321 11.103 26.4321 cv
10.5293 26.4321 li
10.5293 25.8853 li
11.1304 25.8853 li
11.4541 25.8853 11.7041 25.8247 11.8794 25.6895 cv
12.0552 25.5615 12.1426 25.3721 12.1426 25.1226 cv
12.1426 24.873 12.0483 24.6768 11.8726 24.542 cv
11.6904 24.4072 11.4341 24.3394 11.103 24.3394 cv
10.9209 24.3394 10.7251 24.3599 10.5161 24.4004 cv
10.3066 24.4409 10.0771 24.5015 9.82764 24.5825 cv
9.82764 23.9883 li
10.0771 23.9209 10.3135 23.8672 10.5361 23.833 cv
10.7524 23.7998 10.9614 23.7793 11.1641 23.7793 cv
11.6636 23.7793 12.0615 23.894 12.3589 24.1235 cv
12.6558 24.353 12.8042 24.6636 12.8042 25.0552 cv
12.8042 25.3252 12.7231 25.5547 12.5679 25.7437 cv
12.4126 25.9326 12.1899 26.0674 11.9063 26.1348 cv
f
15.6055 24.3057 mo
15.2612 24.3057 15.0049 24.4746 14.8296 24.812 cv
14.6538 25.1494 14.5728 25.6558 14.5728 26.3311 cv
14.5728 27.0059 14.6538 27.5122 14.8296 27.8496 cv
15.0049 28.187 15.2612 28.356 15.6055 28.356 cv
15.9497 28.356 16.2065 28.187 16.3818 27.8496 cv
16.5508 27.5122 16.6382 27.0059 16.6382 26.3311 cv
16.6382 25.6558 16.5508 25.1494 16.3818 24.812 cv
16.2065 24.4746 15.9497 24.3057 15.6055 24.3057 cv
15.6055 23.7793 mo
16.1523 23.7793 16.5708 24.002 16.8677 24.4341 cv
17.1582 24.873 17.3066 25.5073 17.3066 26.3311 cv
17.3066 27.1611 17.1582 27.7954 16.8677 28.2275 cv
16.5708 28.6597 16.1523 28.8755 15.6055 28.8755 cv
15.0522 28.8755 14.627 28.6597 14.3364 28.2275 cv
14.0464 27.7954 13.9048 27.1611 13.9048 26.3311 cv
13.9048 25.5073 14.0464 24.873 14.3364 24.4341 cv
14.627 24.002 15.0522 23.7793 15.6055 23.7793 cv
f
19.8984 24.3057 mo
19.5542 24.3057 19.2979 24.4746 19.1221 24.812 cv
18.9468 25.1494 18.8657 25.6558 18.8657 26.3311 cv
18.8657 27.0059 18.9468 27.5122 19.1221 27.8496 cv
19.2979 28.187 19.5542 28.356 19.8984 28.356 cv
20.2427 28.356 20.499 28.187 20.6748 27.8496 cv
20.8433 27.5122 20.9312 27.0059 20.9312 26.3311 cv
20.9312 25.6558 20.8433 25.1494 20.6748 24.812 cv
20.499 24.4746 20.2427 24.3057 19.8984 24.3057 cv
19.8984 23.7793 mo
20.4453 23.7793 20.8638 24.002 21.1606 24.4341 cv
21.4512 24.873 21.5996 25.5073 21.5996 26.3311 cv
21.5996 27.1611 21.4512 27.7954 21.1606 28.2275 cv
20.8638 28.6597 20.4453 28.8755 19.8984 28.8755 cv
19.3452 28.8755 18.9199 28.6597 18.6294 28.2275 cv
18.3394 27.7954 18.1973 27.1611 18.1973 26.3311 cv
18.1973 25.5073 18.3394 24.873 18.6294 24.4341 cv
18.9199 24.002 19.3452 23.7793 19.8984 23.7793 cv
f
24.1914 24.3057 mo
23.8472 24.3057 23.5908 24.4746 23.415 24.812 cv
23.2397 25.1494 23.1587 25.6558 23.1587 26.3311 cv
23.1587 27.0059 23.2397 27.5122 23.415 27.8496 cv
23.5908 28.187 23.8472 28.356 24.1914 28.356 cv
24.5356 28.356 24.792 28.187 24.9678 27.8496 cv
25.1362 27.5122 25.2241 27.0059 25.2241 26.3311 cv
25.2241 25.6558 25.1362 25.1494 24.9678 24.812 cv
24.792 24.4746 24.5356 24.3057 24.1914 24.3057 cv
24.1914 23.7793 mo
24.7383 23.7793 25.1567 24.002 25.4536 24.4341 cv
25.7441 24.873 25.8926 25.5073 25.8926 26.3311 cv
25.8926 27.1611 25.7441 27.7954 25.4536 28.2275 cv
25.1567 28.6597 24.7383 28.8755 24.1914 28.8755 cv
23.6377 28.8755 23.2129 28.6597 22.9224 28.2275 cv
22.6323 27.7954 22.4902 27.1611 22.4902 26.3311 cv
22.4902 25.5073 22.6323 24.873 22.9224 24.4341 cv
23.2129 24.002 23.6377 23.7793 24.1914 23.7793 cv
f
27.6406 3.14502 mo
29.8906 3.14502 li
f
27.6406 3.14502 mo
29.8906 3.14502 li
@
278.741 3.14502 mo
276.491 3.14502 li
f
278.741 3.14502 mo
276.491 3.14502 li
@
11.9063 2.35547 mo
12.2236 2.42334 12.4736 2.56494 12.6489 2.78076 cv
12.8247 2.99707 12.9189 3.26709 12.9189 3.57715 cv
12.9189 4.06348 12.75 4.44141 12.4194 4.70459 cv
12.082 4.96777 11.6094 5.09619 10.9951 5.09619 cv
10.7861 5.09619 10.5698 5.07617 10.354 5.03516 cv
10.1382 5.00195 9.90869 4.94092 9.6792 4.85986 cv
9.6792 4.21875 li
9.86133 4.32666 10.064 4.40771 10.2866 4.46191 cv
10.5024 4.51563 10.7319 4.54248 10.9751 4.54248 cv
11.3936 4.54248 11.7109 4.46191 11.9268 4.2998 cv
12.1426 4.1377 12.2573 3.89453 12.2573 3.57715 cv
12.2573 3.29395 12.1563 3.06445 11.9536 2.90234 cv
11.7515 2.74023 11.4678 2.65283 11.103 2.65283 cv
10.5293 2.65283 li
10.5293 2.10596 li
11.1304 2.10596 li
11.4541 2.10596 11.7041 2.04492 11.8794 1.91016 cv
12.0552 1.78174 12.1426 1.59277 12.1426 1.34326 cv
12.1426 1.09326 12.0483 .897461 11.8726 .762695 cv
11.6904 .62793 11.4341 .560059 11.103 .560059 cv
10.9209 .560059 10.7251 .580566 10.5161 .621094 cv
10.3066 .661621 10.0771 .722168 9.82764 .803223 cv
9.82764 .208984 li
10.0771 .141602 10.3135 .0878906 10.5361 .0537109 cv
10.7524 .0200195 10.9614 0 11.1641 0 cv
11.6636 0 12.0615 .114746 12.3589 .344238 cv
12.6558 .57373 12.8042 .884277 12.8042 1.27588 cv
12.8042 1.5459 12.7231 1.77539 12.5679 1.96436 cv
12.4126 2.15332 12.1899 2.28809 11.9063 2.35547 cv
f
14.188 .0874023 mo
16.8003 .0874023 li
16.8003 .647949 li
14.7954 .647949 li
14.7954 1.85596 li
14.8901 1.82227 14.9912 1.79541 15.0859 1.78174 cv
15.1802 1.76855 15.2817 1.75488 15.376 1.75488 cv
15.9229 1.75488 16.355 1.91016 16.6787 2.20703 cv
17.0029 2.51074 17.165 2.91602 17.165 3.42871 cv
17.165 3.96191 16.9961 4.37402 16.6655 4.66406 cv
16.3345 4.9541 15.8687 5.09619 15.2749 5.09619 cv
15.0654 5.09619 14.8564 5.07568 14.6401 5.04883 cv
14.4243 5.01514 14.2085 4.96777 13.979 4.89355 cv
13.979 4.22559 li
14.1748 4.3335 14.377 4.41406 14.5933 4.46826 cv
14.8022 4.52246 15.0249 4.54248 15.2612 4.54248 cv
15.6392 4.54248 15.9429 4.44824 16.166 4.24561 cv
16.3818 4.04297 16.4966 3.77295 16.4966 3.42871 cv
16.4966 3.09131 16.3818 2.82129 16.166 2.61865 cv
15.9429 2.4165 15.6392 2.31494 15.2612 2.31494 cv
15.0859 2.31494 14.9038 2.33545 14.728 2.37598 cv
14.5527 2.4165 14.3701 2.47705 14.188 2.55811 cv
14.188 .0874023 li
f
19.8984 .526367 mo
19.5542 .526367 19.2979 .695313 19.1221 1.03271 cv
18.9468 1.37012 18.8657 1.87646 18.8657 2.55176 cv
18.8657 3.22656 18.9468 3.73291 19.1221 4.07031 cv
19.2979 4.40771 19.5542 4.57666 19.8984 4.57666 cv
20.2427 4.57666 20.499 4.40771 20.6748 4.07031 cv
20.8433 3.73291 20.9312 3.22656 20.9312 2.55176 cv
20.9312 1.87646 20.8433 1.37012 20.6748 1.03271 cv
20.499 .695313 20.2427 .526367 19.8984 .526367 cv
19.8984 0 mo
20.4453 0 20.8638 .222656 21.1606 .654785 cv
21.4512 1.09375 21.5996 1.72803 21.5996 2.55176 cv
21.5996 3.38184 21.4512 4.01611 21.1606 4.44824 cv
20.8638 4.88037 20.4453 5.09619 19.8984 5.09619 cv
19.3452 5.09619 18.9199 4.88037 18.6294 4.44824 cv
18.3394 4.01611 18.1973 3.38184 18.1973 2.55176 cv
18.1973 1.72803 18.3394 1.09375 18.6294 .654785 cv
18.9199 .222656 19.3452 0 19.8984 0 cv
f
24.1914 .526367 mo
23.8472 .526367 23.5908 .695313 23.415 1.03271 cv
23.2397 1.37012 23.1587 1.87646 23.1587 2.55176 cv
23.1587 3.22656 23.2397 3.73291 23.415 4.07031 cv
23.5908 4.40771 23.8472 4.57666 24.1914 4.57666 cv
24.5356 4.57666 24.792 4.40771 24.9678 4.07031 cv
25.1362 3.73291 25.2241 3.22656 25.2241 2.55176 cv
25.2241 1.87646 25.1362 1.37012 24.9678 1.03271 cv
24.792 .695313 24.5356 .526367 24.1914 .526367 cv
24.1914 0 mo
24.7383 0 25.1567 .222656 25.4536 .654785 cv
25.7441 1.09375 25.8926 1.72803 25.8926 2.55176 cv
25.8926 3.38184 25.7441 4.01611 25.4536 4.44824 cv
25.1567 4.88037 24.7383 5.09619 24.1914 5.09619 cv
23.6377 5.09619 23.2129 4.88037 22.9224 4.44824 cv
22.6323 4.01611 22.4902 3.38184 22.4902 2.55176 cv
22.4902 1.72803 22.6323 1.09375 22.9224 .654785 cv
23.2129 .222656 23.6377 0 24.1914 0 cv
f
0 102.731 mo
0 99.9028 li
.560059 99.9028 li
.560059 102.063 li
2.01172 102.063 li
2.01172 100.112 li
2.57178 100.112 li
2.57178 102.063 li
4.9209 102.063 li
4.9209 102.731 li
0 102.731 li
cp
f
1.79541 96.7373 mo
1.75488 96.8047 1.72803 96.8789 1.70752 96.96 cv
1.69434 97.041 1.68066 97.1284 1.68066 97.2231 cv
1.68066 97.5679 1.79541 97.8306 2.01807 98.0132 cv
2.24121 98.2017 2.55811 98.2896 2.97656 98.2896 cv
4.9209 98.2896 li
4.9209 98.897 li
1.22852 98.897 li
1.22852 98.2896 li
1.80225 98.2896 li
1.57959 98.168 1.41064 97.999 1.30273 97.7969 cv
1.19482 97.5942 1.14063 97.3447 1.14063 97.0474 cv
1.14063 97.0068 1.14746 96.96 1.14746 96.9058 cv
1.1543 96.8584 1.16113 96.8047 1.17432 96.7373 cv
1.79541 96.7373 li
f
2.92285 92.9434 mo
3.22021 92.9434 li
3.22021 95.7314 li
3.63867 95.7041 3.9624 95.5825 4.17822 95.353 cv
4.39453 95.1309 4.50244 94.8198 4.50244 94.415 cv
4.50244 94.1855 4.47559 93.9565 4.42139 93.7397 cv
4.36768 93.5239 4.27979 93.3018 4.1582 93.085 cv
4.73193 93.085 li
4.82666 93.3018 4.90088 93.5239 4.94141 93.7534 cv
4.98193 93.9834 5.00879 94.2197 5.00879 94.4492 cv
5.00879 95.0425 4.83984 95.5088 4.50244 95.8535 cv
4.16504 96.1968 3.69922 96.3657 3.11182 96.3657 cv
2.51123 96.3657 2.03174 96.2036 1.67432 95.8804 cv
1.32324 95.5562 1.14111 95.1108 1.14111 94.5566 cv
1.14111 94.0571 1.30273 93.6655 1.62012 93.376 cv
1.94434 93.0928 2.37646 92.9434 2.92285 92.9434 cv
2.74756 93.5508 mo
2.4165 93.5581 2.15332 93.6528 1.95117 93.8276 cv
1.75537 94.0098 1.65381 94.2529 1.65381 94.5498 cv
1.65381 94.8877 1.75537 95.1582 1.94434 95.3599 cv
2.1333 95.5625 2.40332 95.6841 2.74756 95.7109 cv
2.74756 93.5508 li
f
3.07813 91.5864 mo
3.52344 91.5864 3.87451 91.4995 4.13135 91.3174 cv
4.3877 91.1343 4.50928 90.8779 4.50928 90.5537 cv
4.50928 90.2373 4.3877 89.9868 4.13135 89.7979 cv
3.87451 89.6157 3.52344 89.521 3.07813 89.521 cv
2.63281 89.521 2.28857 89.6157 2.03174 89.7979 cv
1.77539 89.9868 1.64697 90.2373 1.64697 90.5537 cv
1.64697 90.8779 1.77539 91.1343 2.03174 91.3174 cv
2.28857 91.4995 2.63281 91.5864 3.07813 91.5864 cv
4.36719 89.521 mo
4.59033 89.6499 4.75195 89.812 4.85352 90.0073 cv
4.95459 90.2031 5.00879 90.4326 5.00879 90.7031 cv
5.00879 91.1484 4.83301 91.5122 4.48193 91.7959 cv
4.13135 92.0791 3.65869 92.2144 3.07813 92.2144 cv
2.49756 92.2144 2.03174 92.0791 1.67432 91.7959 cv
1.32324 91.5122 1.14111 91.1484 1.14111 90.7031 cv
1.14111 90.4326 1.19482 90.2031 1.30273 90.0073 cv
1.41113 89.812 1.57275 89.6499 1.78906 89.521 cv
1.22852 89.521 li
1.22852 88.9136 li
6.31836 88.9136 li
6.31836 89.521 li
4.36719 89.521 li
f
3.46289 87.7261 mo
1.22852 87.7261 li
1.22852 87.1187 li
3.44287 87.1187 li
3.79395 87.1187 4.05029 87.0513 4.22559 86.916 cv
4.40137 86.7813 4.48877 86.5786 4.48877 86.3018 cv
4.48877 85.978 4.3877 85.7148 4.17822 85.5254 cv
3.96924 85.3364 3.68555 85.2422 3.32129 85.2422 cv
1.22852 85.2422 li
1.22852 84.6348 li
4.9209 84.6348 li
4.9209 85.2422 li
4.354 85.2422 li
4.5835 85.3906 4.74561 85.5659 4.85352 85.7549 cv
4.95459 85.9507 5.00879 86.1738 5.00879 86.4302 cv
5.00879 86.8555 4.88037 87.1787 4.61719 87.3955 cv
4.36084 87.6182 3.97607 87.7261 3.46289 87.7261 cv
f
2.92285 80.2266 mo
3.22021 80.2266 li
3.22021 83.0146 li
3.63867 82.9873 3.9624 82.8662 4.17822 82.6367 cv
4.39453 82.4136 4.50244 82.1035 4.50244 81.6982 cv
4.50244 81.4688 4.47559 81.2393 4.42139 81.0234 cv
4.36768 80.8071 4.27979 80.5845 4.1582 80.3687 cv
4.73193 80.3687 li
4.82666 80.5845 4.90088 80.8071 4.94141 81.0366 cv
4.98193 81.2661 5.00879 81.5024 5.00879 81.7319 cv
5.00879 82.3262 4.83984 82.792 4.50244 83.1357 cv
4.16504 83.4805 3.69922 83.6489 3.11182 83.6489 cv
2.51123 83.6489 2.03174 83.4868 1.67432 83.1631 cv
1.32324 82.8389 1.14111 82.3936 1.14111 81.8398 cv
1.14111 81.3403 1.30273 80.9492 1.62012 80.6587 cv
1.94434 80.375 2.37646 80.2266 2.92285 80.2266 cv
2.74756 80.834 mo
2.4165 80.8408 2.15332 80.9355 1.95117 81.1108 cv
1.75537 81.2935 1.65381 81.5361 1.65381 81.833 cv
1.65381 82.1709 1.75537 82.4409 1.94434 82.6431 cv
2.1333 82.8457 2.40332 82.9673 2.74756 82.9941 cv
2.74756 80.834 li
f
2.69336 76.1631 mo
4.9209 76.1631 li
4.9209 76.7705 li
2.71338 76.7705 li
2.36279 76.7705 2.10596 76.8447 1.93066 76.98 cv
1.75488 77.1152 1.66748 77.3174 1.66748 77.5874 cv
1.66748 77.918 1.77539 78.1748 1.98438 78.3638 cv
2.19385 78.5527 2.47754 78.6475 2.83496 78.6475 cv
4.9209 78.6475 li
4.9209 79.2549 li
1.22852 79.2549 li
1.22852 78.6475 li
1.80225 78.6475 li
1.58643 78.5054 1.41748 78.3369 1.30957 78.1343 cv
1.20166 77.9385 1.14063 77.709 1.14063 77.4526 cv
1.14063 77.0342 1.27588 76.71 1.53906 76.4941 cv
1.80225 76.2778 2.18701 76.1631 2.69336 76.1631 cv
f
1.37012 72.2954 mo
1.9375 72.2954 li
1.84277 72.4707 1.77539 72.6396 1.72803 72.8154 cv
1.68066 72.9907 1.65381 73.1597 1.65381 73.335 cv
1.65381 73.7266 1.78223 74.0371 2.03174 74.2529 cv
2.28174 74.4688 2.63281 74.5771 3.07813 74.5771 cv
3.53027 74.5771 3.88135 74.4688 4.13135 74.2529 cv
4.38086 74.0371 4.50244 73.7266 4.50244 73.335 cv
4.50244 73.1597 4.48193 72.9907 4.43506 72.8154 cv
4.3877 72.6396 4.31348 72.4707 4.21875 72.2954 cv
4.7793 72.2954 li
4.85986 72.4707 4.9209 72.6465 4.95459 72.8218 cv
4.98828 73.0044 5.00879 73.2002 5.00879 73.4023 cv
5.00879 73.9561 4.83984 74.4014 4.48877 74.7256 cv
4.14453 75.0562 3.67188 75.2183 3.07813 75.2183 cv
2.47754 75.2183 2.00488 75.0562 1.66064 74.7256 cv
1.31641 74.3945 1.14063 73.9424 1.14063 73.3618 cv
1.14063 73.1729 1.16113 72.9907 1.20166 72.8154 cv
1.24219 72.6396 1.2959 72.4644 1.37012 72.2954 cv
f
5.2583 69.7036 mo
5.69043 69.8789 5.98047 70.0479 6.11572 70.21 cv
6.25049 70.3716 6.31836 70.5879 6.31836 70.8579 cv
6.31836 71.3438 li
5.81201 71.3438 li
5.81201 70.9858 li
5.81201 70.8242 5.77148 70.6958 5.69043 70.6011 cv
5.60938 70.5068 5.42725 70.4053 5.13037 70.291 cv
4.86035 70.1826 li
1.22852 71.6743 li
1.22852 71.0332 li
4.11768 69.8789 li
1.22852 68.7246 li
1.22852 68.0835 li
5.2583 69.7036 li
f
.5625 lw
27.6406 169.601 mo
27.6406 3.14502 li
@
27.6406 169.601 mo
278.741 169.601 li
278.741 3.14502 li
@
27.6406 3.14502 mo
278.741 3.14502 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (005x004.eps)%%CreationDate: 26/05/15 5:21 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6k?@14cnKc`+SQF>kW&!a%Oq%UBF@qL!*R+S,U!K+]Ka,G58m,%,tE.FPl9],cWU.u+W8JO1lXsLNKhV'e\>lQn$UcLqEIVU%7CTUlV.=^CcPhP%alR^&:TLU:)9G_q*=>E!Xm;pm-HV9bU/u/&QRrrc=0+W9Io^@PP@jd(g1hAfDS=_,aqjuYe?Xjp=7i;O]rnqa%rU9*=>C$4hj>M4AL[r&]/_?JaQ$-2*,T2,iqQTYkm_0ZhIm-l%93KMZ!3A?A.PFu(/lXEM-fEh7Zhs]!4[G?6?ZnZ]itab]*q8p1%C:fH26's&+ahm$05)UP8df3p.SQ9+T>O?%!rEc\`c-dr.ou:X@q12k=d=8$fAh?M!cd&S`%Cacg@NK6h+W1Pcr#'m[,nZ9LP\Qot%$=]J6,qP+]J9BDWhQ),ZATt/>QYM_'BX?AUHiK]fLd@A=nk#FCI_4.m7I@dJYgWU5&/H;;?`G_nb^[Co<aI3YW.Nrk'KE9Q?`S#h%oXao/ZnH!-Y6?2'K?CsZ-K-"&E87DCcKgf6b=,@=ZF40AruB_;_Z-W-(mS*_6?s"i_'c2uC4SFYat4m-'-s[>k54IkD9:'UWWnUE%G4YYY&>>q4D=W8JQYbf6a8;JOMJ-n:X#5bod]()l:ld/#LM*E6o/EIW[E:R?R%i;;>L2"/R4Y3B[:5t<6-M#>'a`rnm+/pgcn$(5%dkphV:&&fMpad+AW2@C<9nT@4##@+94=uoYD=X!,67LB:?`".+9G:$dB"@9Ykr;MZEM/9NJ?lst.-3Eb$GO>(PU[B?<1s;1((0Q,%:k1=_1-@.T9bZA9Qf35#9\pp0'7:*MUdahghXmCT8A3pp8c_ZU$)N/!O&GNW."Y5C!u/R!d-Yh)]F-R4-i=%'i"KiLHm1EM7IUV*%_d@oq:!b6G->=Po!F>1$A]eS7H1D![$',B/$('S6]LaM!fG!$HDPVEjglmk%K)C7!5TbA?9gjSdC@[<S%/rRBT[/fUi<jiHk^u\+%"k4.[_^E8?+Rf]6J3N`R;C#F4pe'7q(-NZ<bWYppA4H&5>_c41D]W6kjTKqGSDZii,rL&?+sjmO:^3li1_Zg?[gCUG.F8<l:l=Hq%cpr=IhM"`R"4Un&Sn<=tLN&9\5d]:p@8BreD$/"=V@[&&qLp:q_KUSPiAt\>n-q)G,i[3@E/.=tl_J^p5']p&&^3hm,hbq&:3]-@%.-#eFItQTQhT=ikhAZ#;O&(>p'CGMc50uN=44#.SV[$,n\/`Qj0_.10D[5(eE:r_ng*QET2\ed$s55Q8M@0<[WoQb@Qi)Ju$iU<Z%ahLNp0F/s!9E&'0q&TAZs(n2&[V`3bS,V0t,Ys$,jPSN(q&TAZs"_,oO[+N5jBnlSIKtAE5M?',loE,s5)EOdDsnM<Ms++4Jo6g2%Z<f.f7Fa`^9LCBJ/Xu[HMMA-7hZ$Et.W3s@&cP/8'`H&N2,sRapof6rJG9c<0@V>#o5,jle,(0;2K/f/JCrm\]4o/q\YuIB'r6ue%gSTs&TOMRO/oB=B"htci8d*K!0CVmm&\)G'4sOC"<?(p)&<f5-'(CWf@*Y*8$-UZs#UoeA'8W?VG&\OW_jA4.kd2+E'%$Z5k-aTA%_Y%RZH`3c/lV]HB&(QEW=f"g;X,[$!0$2UF$>P7/:^;rEP\6@mO0aMO?7Ugf\8FVrHmc>uR%(UEV-82]dn?lM"L[ch[f<g)Se/&e%G(!(CkaP+0Qu^I3\QXTNaV1DJjB[E`rWdp3D+_!(nZaP"b[9q*[dA&I=t9bs@K.]N3Gp<K>7a90_+KR`/b*c;q@u]!9j.fq9\]i;%Qkbo*]M56(:s"!b?nLR*p#Q@,TcGCs-.J)O[7qnqRpnnF62$4N$YgrSKqsD%=sX\(:HuXtJTTk7o_P5'GY9;6kYJ!RTIlYA^-sTI%AHGOW;d=.D":<BTCUHQPa2?!(-n^h"7J%)T_Ud7LV+Z'Y8g,T%n/q\-(pKAM\iF$4mkQ`XG'TLN[KZ'(E[Q!`GXj'@gU=]$Md$b6%5G4KdVpn9mV,X)mk\X,mCsWC[D6IeCX%<)_D9S+tkQ$#MduLEbUc=T@S*Kq]o/s7:5s8UuYg%/94sf+jOug%N&\Zqr]X%@%n45sG%ZTui"bQ=gXXdd7@GdYq]aMKg0Z-F<IBq7[D02&)i+\aQ+HYS],F.);NZ&lI#(rXF@F;%r<[N;!,imA6G75tPg)<7W(Gt."^Nuu4[%CIKtNS+nn;5)`VFH5*8_@Vb"4?G`./A0i5R8*]]J%AS+j\p_8E]%Qqqnq?N84_Njq.qc`6@_b4A5V,hN6`b^4Y$,LiFT?,b:),o@%A,1.)MD=H;M+I"T-:*V4eNT!'[7l^OaC6%F84ICABl),#L1;(r>?&'7[S3?T63"sS3%VdC/'EL1%0'04[RDGW@+J%FM&``@D"3rd%1]fKbnAT)lRm%Q-RZ#l0l#%UWgr^raUTekdPRnoRqCM0@r>#GdNj,7J0!!L!C>Shi\n9<EYllsRp6=3q(qgFGlXn5\;dN:l-e)r&%2o$,SHR0FpSoaH#cD)?$6t>FpE`f(u7t6dA[lfN;pou&@S/ulP_;e%u*a5>0<bk8;`E(OrNSIXiI_.rDMWHG:;W#cGFcomqK/%Ks%VGuEoFd)Bfek<\>MtCWNoLT"V*hQ.r6'7I&O8_hb,uR7k$US2%*tW$<R@N^T3lJel\JhZ`i:V?ciOIrghPU!K^srR9XQ9+`4/BhR%NZ:"e?P?XVc_f.i@>FL.@Vg'V+@FDK4'J[blH,7$(p'uqWQ3PAL6KA_*91gq^g*Ps'_;T)-`(d!AdEUE==0W7kqjHjXnk11'QkP5%6QQVfRqV^8BR=-V3=<"*B$qQC.>#$coUPH.]bYEH^G<LU*i?rM1OY7TQZVrYDYd-['CNhEHbh+(>L^@cMg8"rVX[l8H%NFhDsP+J%D3OM=MhlXXEd2Xg`maPIj$<+cj.&(.`fehC<$ht<pt6YEHg"hO?;:TBFGS6)_DDQh%<527H:\+QX_FIM'u[(2\nKj_7M9(B^3.dh%[&J.j_+LAqQhfZDU0cu%_Q,nW1L^,ZWfQ6qL#QDTm<ONKN+l6nhZ75<,:p4ZZ'+A"qnfe<6e6h4D8';MWCi"l(d^6*)56hmLSuT+%21g=Q0JO/+[mF]LV+A]sN+BYPhR-_]2$3N;U)st!&FUX@K]9uE9]F.r`>t8pMPcm/bEa&,%Pf)KVq!+PdIADf9FSR!AmZfu_8_!#%s+u^CreF>igNF&*a0@deq-OU0AmtZp*0jJd>nak:8jtsCM.Q8De_k@.'f_X[+>Fi)&"n^+W.Q0BTqtB<4HIddEGP_h9f/l#FUc'k%23>?fodme$A!of+*,d`0b)j(EI*8"7Og9)C]g]q;17D?7*;(k/cXHbFYThMHk_+^-WJAb;JI^/,C5^;>JSr71^HqCE2d"6$FVd_-%N96AM''M?'pL=<4#/]>l:2d87>V*rUEi44>kY51*g*435rWh4mgoG*khImtSXM#>aGWT!,]teLnnuYagK\\=6D]ctjZgQCOaYWrY%IWAJ+IlGH7')_XcW/aKbf3k(<jp42V+&:U0oOtj>s).2SIb-A3RkOH4CA,;CGt,cYa%q2bcgBEP$j?dkcG&2j<N5QGR#S5HlrKS*%/:!%X`]q/Oh;9hcJ(L0^_<V5-Wr5q?lOB^p+&])OA:IXKNUBf=\<U6oRDj-[k(EECd$"gr;,DH:92K?1fkMXaiE'u\:]iEUQq%H$%WjLZh>AgkBddl]N5C(0RXF#A.c`eRkRGDV,\)+FRot'Hjb<PQ5VdKpentXUP$%ARk>U'[BCl&o5\$Xh)O'F36FE@oSi@*;aW4;9m%CU;H6H[ceg+F*=`7%U5PXFEI,lL'#b1XIKRE`-V[hk/`iftXY4oeWa/i5Y6[g'^eHCu#//l^nX=o9hagX#-idcLtH[QTXji1`h_^%Ao6no@_D5Ra:m4Cf`'L)[PI[W>5dn.rfLL/bksfYYO_(hmq/p%UWR4,]9(.,]mhpO.C=o$4jM,j,N/n(G+.qZ(%,_I]o7"*l<j0n%%t48+5_!D]3I@.lFXLg/&GYNI"+(Q^?8?e8p6IMf4DG]2`>Be^!rTVBGuAX_8F\DM-Vp//h4oL!/(:c$o]/#RZK4%)eWklC#H0\L%D]L[m!klZIOi\iB=A[9B6c#^q&29i!MQ=4WQ&Oo;H1*[)-iA:?#&[D/s5MpnOj0M!.kWbA^ol"=6Ig2d812g;]RU@3;<>r<^"tmN%rOZ(+-1b2n#=nHR.^"85ie9:OFR6*bKHYj-T22qN$7s%a%I"mY:]1-oMYg*U38+3^,(k6trjP1cju8dS$6b;Ii3V.?]HCPQO+>Xt%!e44=n!,7:p-Q5X!K$jB3;f+J=:WJ9^V.64c"`6($2"Fu+<"IRmn_hX5]d#klI>.7Q<G$-PgIVQA&0K=M8pIiBeB;6("&GK>3c3G%WjNgDPegN$DoE:7cm]P(-lI$NhlV)#F&^9AIRU;IO':JmT0K>/h>($Nf;bUd+:ifbJ#kJ(2a"q[FJJ6f*G<tPUIQD!`A"\B7;!KL%99>6,4RK9.J,`jp!F,!hoD^1m5>9.$rO_l1`Q;j>8J@0U>P7sfXh42"fVYIFWp]\p,GOWJp77rQqu*Aies.f:eg8:Ue.Ep`,2YuB%^Ki:_l&a2H;=q'=3U*\i?C'bf;=fj)R\tHNq+h7GheeN2fU]NgI]Hcs*ND.,(m2WMND9Gra4e?=3!2L=#s_lu1c8L4r7g$"@O$S!%mB9+i&q0^l#;)Vt=[.Fgf/p8CQ.kPJjgCO?WAbs&c7(`%iM9Un<L\J<Zffkgg=aotHb8k@m_611jXZ,Qk07MGZAF2_SXr3)9^fCK%H`Q++r]R>>5=1@u[PjWBVg>3863C2<,:R8RgOE+NYI.0,mWnbqBKlpN1FMkH41'a7.c_o![`tmb3<o(!/rW`$frbFFflH*;<N>R1%[TW+<05Bt%8;*T"+0ih<7\2M66i,bAJ=4t;#s%mPU`ig/fnLl<qHqcb"6*ol7C:.W(.>q>Pu*I]JiiYfqu>/]43S8<R]<)\JVB#7%h:Z[H4`udfQ\<p.Q"OHH1tVmE;(XDKlHP@#QJD&UM/LsH'X"qoMl[qU/Wa!/VsX5cR%gLo.(62sd6+5VHZE-'=r8l>p0;Sd8X>&E%dT2m@mf:e&Q.gTN%;?h87Og[lU'c!*;$F2PLYQ8S;o2O::5UOHlOE"T.%^4Q0Ag"&`3,W</+%*L>?I!O?XnEYDXF:s:\h]Wl@NC<%Q*]as]gfCBfb25(9ed=Q"?I^,.CNq:P:Y:i^-mlpkYnoU*P?>),69RjlmD,&dJXC^F[3m>&Y`R14o=%sY/chYcdg:oX4t$9VBf,%%;?_HJL!"#n=u%Z8l3XMBS6[s^\a0,mAH1$fXSa8JLpk",C!QF@L7oK)"T,VdQ7[[DNAJtl-t@IpnJHW22f73-Xi(n^>)t!Nqo(,J%1Q!?tP0>n_+.Kn(DqFYEUJ"Pg;H!-DILpsOh](833lK;CaYp3'ka`LXdY;a%pYB#=rL:Do[c0:XcZ&(T)BE,dDCI@$^p+/%/$4!&%\bHtU!PS)(EJ&-Q#<4fu7\tZ.\)'?a?/5B,++>52?f&O^Zb^?-GFb=`aCd($(gu7*SIO?n:%e_k/K]JO)rL&L.7Wt.IrO^IHW50g%Y1h:9:g%,G&[J?b\)$d^2;;k)lQ;_5gpQ.>+C&DqGTTsjDdBRW41(S9;;G2i/5H^])XgQ0rJLL/$>ESB;/_4^I9'P$/(RB)]gh,F%`LdWVmUeDmgN=Ug:?`.se4-$W65DEr1VcZk]P0q1UK2mD5kQ<Ee\1cG=69-+<LHbPAu4'n<7&SIq-R+Uq[:j)rs?@#LtZ=#HUf8I%FrJK5MIY]Rd0nH5)7]ZNDn]1X3ea0M+4]+[*d^lIK8En5:]3l%%Xc6<4[c5\b]NQun=/8RLionp;(PtZ=[c8C<Y_iQ`g9)0E;e09%$Kp!\HfGDMS<*GS*bhEL?ue?OTd_BW`3MW%KM<5/odAC3Op17\3aX80B*rcL^e;+`]R@Aj3SE/Th6Z.CU7/[$W%P'TXP_=C1\^\Y%TjIctm^qDWLg/3M(CA?Pi&J$X0F/&t:!'$-4i)tdnR[iDM+Y7n,dcQ(INejk'#[+Y@#1h'.h1_pVC#9DN>rn@Mho:XAQmF+[BR^,%=f1.AHh1<!&uuelD^;phBo5M??9^Y"Hsg.VpMYmV\Io]s#.)naV;(Z4ij(1W-t5/r$R::&I0jC8AEkNe6#lWa]t5SQ7G_^t2d0+]%qH=1l0+io0hP&9B0h#?c7>A[=Y2jf//[`<bij8]C]XWs`n%'U-&CF71"ltTar6pbCc&+/>3t!,+UTk.u#/_N(p-g9ibJ=_`&`r;;%QgZO1>4FT&)pe2E%L%$3`-U_9[q[^f&QnM;N4pN8fqm>BZQ@$45_CLlP%mC"qFgK?\.m008(=d6o\TSK1r=Y%[dD$OA2G]7Z-DH@%Bed[rp\Si.Omfjb5@a%nUXA-`=I4TJeTPZs7cPd5'.EQ@B_0CnW#:kS0&\RjoE6h`\5I1p@TgSm7*<ua[SXPk.IV6>ARHLi'auXg%XfG;ffqgpN&M"VH`[I'JbbtfD-.]SPS`fh?h[eT*$l&noF9JY].f<1]]t`.0NV.f@G%TdSA^$#mZdCJ<f\af.Z&DC21,W!qp2qKD%=`/bK0L4Q15?4.lSJ'(&R4YVd"B/i$RpjKL)<-8'4BW8Zdun+a<3*Ien7tTd-lqEDA/M9:$o3(K@_QBFrll4JBY\N*pMY:>kh*<p%7bR6`XN+aO<d\=F$+d]_DfIUC8,1VUk@2W]H:624+q;,l'(9A*6)X6RDuNNV$].jip##IigJ)9YM3;<e+3Xa0[Bp*aV7R.-eJdch%IHe`nlDjlL-:ANqn&,;5=L9!QVA;+CCQ["+5uD7B,VlcV\L4u9-39jn"0U-gola$,`J(s$8#sU2$Xj9Y]tp\hebBXB.M1I;`*'D^%30e?n]eHn=-]CHq=M6$qI+Ot%']E#JT.+])7@C\A)]LM`:u9=k5?7HRgAG6)%bOA\G!t_5N8u4@][d&=H%5(;5FkgRWZIm3qRtig%2u34Q(NVqhPYTN0gWdkKbboGm)Mu="R<ANM')]mZOtc)8CYlU@UnVH[GI%Mc!/#qFBE9c#LKi^,_Cq`Q$bm=,'e9l$p6`k]c@^sF%<08sp^tDSb!$US.%8!1t+mB82_M!2S"Yl_,mPPPq`)NF`G]Xp/]iNdaFfc^dDJ.jB378:HK2AqNkle:$.o-uc5*C^p`!V8Q'.Fr"%/6Y0ZSO'>"V23HKJ_EY4$t/-ZbN&]L66ItjGuiSR[>eW19InUR^LfT3oBV`=Gr\*=\1k\sf%/cKWiu>&dej>7r,;AHZF55=hCAMJ%[Qep^:0/sbht$H/s&>Or4Z2-:B!n2[Z,QY5BdPbs^\4of2LBQ+N%M]UUIUB[V6TjbV6dF\_lMeLU3ro^q:4dKgq5@BR/N_feCGd0%Y5"]o+$ZoB>IJ.52s0;Jb2QpADZ/)GQf+jUo2%#LEm<b#lI4l^j(N@@heB4G4"EOlErAJB/2_?ajPio0qRjJP\b`DOD-AgNMDgl_%1rM+8>dLDj/R70$N\/tCp=T;LF9Y^t!%X$\4M2M@ZgT"(fPGp#*CuZ28^eJNjh-%clF0FmVmJSKge82M2Q/H5YB@_5Xa9;hI%r>9%Zk+-EeA0Ui'eTQ$2K(+\F@eQu^ZX4Wa//p89)4ddS]Rkgf8i]5YjKRd;qFIHg?$mco5;!]#`*Nb+]b@^kAU!4F_M?!VI3FG1QC6s%R)P`G9J4hrnO*1e7Q(%p]_cGN6o8(l1/BEYWi/c?rKdC\M5#,_GB0/pi^R"hVcqQ5onKEmk4bW-3V,(QHA`^gEabE%bOYL%7&/n_%UqQ]\&N?^shob'PXWO9,1V)(]\ZqA\IQoq0d40'1e.3`BS_cHT&#7d(dCam.pRoo:UraVc*ri5$N:o)S;6P17F_PlU2L7,A*KmCN%DJd"q;:N.J8jT6!/!jIac+D.HXRichN@m@2(GDt;@AERTk=:Yo>5@&ge%!e!0%;G8.dEb1V>6Fed1bhP^NqtD&2i11?Fs6+NFm40%=lX@BHE4V/U(sJM/XILR8D*-Nq:1orrD\hHNQU@p]/"7<CiYnDF!C?U4"NcW>*691*\YKlDTeNueJ[[6e0q_7c1])m3i2LqE@01L%erTIR>LI3Lp7ohhHF"e;=GmMC3nMdC::6+/C*n_)[2NIW%t<>6+rW<dXH/_=I8lt1q/GcI#rRTD+jKG(/T(E"*h<WW4^4N/+rf@A%SnW45UV@T+Z\R4Re;B@=rLN6$YFF2_@AB1<[F`Jhcea+IlPhYfXjC[hjidVBMR_%9/U((K=BQ@tg=R@*D"R:,Hb>?YI3G`5o$@"-%U:AUg[F2tkO1RJ^UNaa#]:h]6/%!tof>^HDU=!1L^2(9;i^T".1d6s@>8&pkYe,^-E[7d3gtDU-7&/?MEp<OD:Y;UoZoC7XEOT%:%N@oY<7aWV"=JbHkl[^tjUs4WTc0W\@AI^Z!:9Vq/n<>!8O)ms`d-*g:8Fu?6/!HH#p)_LVZ`D?T.;[P4<b\>rp%]/q@q_O--&leJ%/%`G;>\LPuf#F@[#rd`T@BIuGU.9!m*GT\FH"YnXNNOf/Md3$sgHn7lHGkeXP=pUX^<oNVr0=/u1b4>qD/ND?T)S/;L$c)6B5*8^%](A>sZ$3ieI68mp>IF$0L:dn(k@3_j^(`[?4h^igHsT9*I08Bm>P+.`IUmb_;\<pm),/9kEqJUgWYKhpg<,&'GO*-V5HVVY?Y+8?%c`NDeV;'(h[Q8X/)#a*/E^(R,%<9U^fMnbdSg3,VR'3Wmd8-BpIkQ_O@ZHiia5bKA3tZDc4&\3k(G54Mp[jdcWr$9)IJFD%Wf/Tb%T0DY5eNAiuSmN8r4YKb'oOmS@58O4i[^`[_4RM(ZA+&3BN-tLuqkUJ1q=N]Fh>/:@8icV@;-pkqH5i"DA(cZc\u4h/=-6:NCJSRJ%d2\VoS(bQHMgS^^4FF.u52B/ha-C=uD2tTZZV(mK)`r(SFj?b-BkBBtFT22.CRmX@81WY*\T@b[4gukdNr/1ujLXLaMk7*/C`KcW%dF=,C)&="N$K/fqs!e/81NmM6IP>6.AnlZ*B"iu(`BEB&c$]P]_hSB!o%6;!ZiD14Of<CK_&K;96"489H^3&3cYbY]e`kVJ762>8%3Hg'XS'[gdmsUA@%[rh@]d\GEf;?qPo'.0117IX((4WO_m7l[!=.a)eD&Y.EFD$^lenh,Q/*cG]LdoXGM2R,cM]MPEAmr3_M/3k8%6%>-?7cj40UGGcB[(jD,q(/6T)LZ$5e^#S17dZtQ1T&QdWMt`IdFQ6?oop?g[1IuB^*Z'oH&Z^R>beXWOc:RYY,\3cWAfk#%R.!u%Lqtch\;t=qqC\5bnT%:c`dOFZ4ElTt']omDi^R"h,Z1=]/r#iYR#Y]2p.-AH"b5U'PA/S;R`F<aoT?I[\9[n/01j=BIt-%\Q89o&%mRpX%XG)KZBtR<VU\8.)d<rPdcU=R\Nr(g-a[^]>q(I4VZ#N'G3SU2b3I!:Y5-_I+I&o2;?I%e7+31Dn;qDqo.h*hS";S!u4-P.J%%VsA`Y9G`+PnLI*Gr%VgJ[JC9IOlJiB`m"=p)44@6):V@8.dIPL5k%jriKAJq&cO4b^tS^Nr@s+BP!YZpMk--6i#^ErLAJ]h"R>Z%*TH[G!d-`s*-mEM@>OOGSrq4T%oCB?h,*reG"!fjEYPL.mqJT/LC<D>]"AtMCdN\Fb]NOGHYYiR\sVUK5uH8",c29Q&7PWL$0]8K%?0-9bB!:#:38r=F(J,].^))q&K:-s>$%i*?+V!h]/6Wd5(S-g?F'F.:h'u'lm)t=d\DOc-D;Tf]o0&;-o>if#l*9F@I311:h7@V"%H=Re0H=d9.6cXV.c[CWdXk'O09"2E,Q@YtuD^Nc/mM%QC&\P_/q<X*VAtcRs4t,m488kEW?8(l_Ou;"R?AW0;6IN#(^!`6:)Uc"c%bO`Vr7Y=sSpSS#[dg/p1o1>m\Sk)dZqAm^b_Q@(oq^)TGJl`?jIOF2.biA%(6LUok+f9sJ;OO'3l)'"DCk5V8A)p2#jPT7oX.JbS%RZ%>8@NI%nWr+hMZHDrk2qL(N=3@7DLEh[jqd!e2l8r%0'?\1GZ2bu]-nTPKTgLPrAXk4:7gd`Z-[[%V#!qTNh5J,SQm"!$<d+DY%7uG+kdF-keijH5ne.N@M1`8I6OK7c,I"rLR,EhjtOh>L#NcCIlV"#&_oS;7[F9j'R7XqN#jGU[=?gZKs.4j@)l#$SnG'FNU1b^6L%SmJjN3uoB.1.68;JN!e4pA/(u9#mhDRg>82fEFPjg84C0QUlSNAB<s&E%L!sISP@"G__=#&'`(V89"IeZQEad7V&IaX>VKOieA+U%a82b$3dq^*NalAm\o\p=BF]u2X@;H+@h!<#K%94T\@1#+7Yi)(dWieoBr6K[&U&!Vl>8*:`(&N4g[!l%l]k[U?]tdCb/EI-SS(uE%"l*6^p(*=,7taS`Vf#e$:\Di#[?a$.8)!%>V\$Ip45Gl_(IXo2KM(ea?8Ni\<ZmT!aqNX@9SWoD/p=gMqp<Q+5%<#hh1<rGYE5ae%F"u(tO=Y,N6133p7eNqW,Ve7ooPGC$^(_M0#rb,X)KbHYH%JV>)N=3:mQl&sn?UigN^o!&E&:0#h<+Tk%DZ72f-S_ZkZGIufM,iU%_Xqj>I73%9HDZU'c?Tc6nKk!=;82t#?!%[9R=N"FY,_\`D5D@+g.i^8ka[jc)'@<+2f2sHlKI0CfL6ur$+bAW113i=R)O8hD:87$%o3H_sgr4u21bQ?R&KsGD45Om,@4qo.#&=u:5)CX%T6n6N*Z6-[K!J7L:%q!nZ2AsQX5U;KHoNakZ**GAo>@lRO-NuQ*#N7_#@D5,%">Q@Xf.j<!&GQ"UK8&:M&6f:4=BELaMtMct!Lh>mI7rLYR=IAX.GuBZ]IU\c:%jXQc8<t%,f.FeY4R2$8k8Q@"M@t8Oc.7,(^@[`%A^iuDX^>2Zh)1qM0M)&`IX!"%M6tr,dPA@d<b]<YU7=Qr"&3\"LI](M#TD`Y]Z=2^X8uG<a;O4O!4N?)1?K`"VXMWn7D/-q\l_[%%k0(VNeMOmb"/nPjg!G\]f7$ddfLSRXhVO2e9_Hq=GR:[bd11N`W3S_.>G8(BY*[]d6`3M[8.j9LIWr@N\&^igWQ*t%Jn_$i];*Dm%"?fR\$h7V7lKMfT,,b[ipJ[-#Od5J&K9>"ZU6Q'V-WlbprQPE#iYpKkkc/=5\5r]L>tmQ=#j7ILR4>%<j,7I0TB[E7@3V'VZ-45(%d97Wu*>YdM0q[\cFsj\2LbTiU?0'GiS%H8qa.e83n>NXD=gX+&U@mq'6!QIM7>pR188\O6BNY+YBWTg3i[n=\Gs2,0^#F?Ieq4aH%B)HeA]WgSg!Xm8GnN&G3.)[YWMS0_8dEC9uLh8aiZ#P<a$a;e_\Um9>6q.GE1[rE'/o(L\oAb)=R+TKs--`oc@sr^s*a[IYd;,ol%-]M2o4jKmL\U`I%gR<FC$;_,nfWu1/FS3RiJI'd=[8R7\dlF8m"e2?VS(JJ4=I2-T=^3(B[!sWE1dpu\LIX]7>E&#2RH1,OAc,N;%73L->n*9(Dr-M<V58H`R=H_)$B@<c%-5WR([pSCuq[Rt.UmB-q58ljOnRH"5;%2'?d(bV\`GdtgqtEpFBIrf=qrpSfgTS,)fJ+/)%aAqS?ps?QL%'VRX!'r6"UZ'Wp_L5P&2@M>5GaI,O1I`W@.jKEB[LZZ#qDLQ.:>WUd;L,iA/s3jE.T,[&C:5S3&p<a4P=m/m8^tqY%G,[q*22Ilkq.(Dk4jo7N8uN?]cG^;eYY2)@/TqOr"XtAO<0K.]lg!RnHLGO1SSL>odAm7$j%Ie5n.(]!mC%_k]!'s9=hB6b1-'2l%H2h7P8mIIZ7.K?:[/jU"%nSm3;H;ctq)W]j/Z02;:f9Yri[Hh#P)^K?B5>Lq9fTKKq``;lCV>`[ep]`C6W=g[[<oub.j`H6o>N0&%TYmZ1$m:<X5(bJO)b^`I8#';n*O1q/kKq1\cp>+u+EH[:?]3("UGIhBF6MU>k\.D4h`5eq7f<`V;79jc3HXd/FPb[krT;JGB@$gm%DuJeE`FmPK*?.BV?._R8qk;!pQ0EAR3eoJ64#2hX6tHFj9UEB9T\2>0F<2"#'#3+R6Ri;:\G]>Dl5D"lQn#RS2a'TbR)1A1`N]Bs%Ptt96n#p1SepD`YHK8!Q`72?2ST$%,4Ul=TN`0&r5-re;RJ9`8]Z(1jG^l`[K@)'o5-48O-(uA20;bJ)=b#[0G2jfK;,$G=;EhHC%dL4MQ9&1[mEC`MFc$<<2:RT*]em2]WiI07UUOIG7^<fWd)'jY]87^(,*9g0/2D1i`$6mP+]j@5m45!?4'=,)X[kq;T,'+A5)Z>>h%r;<pLN6e,J1!s2kQt])<_;(t'RA#mb:=J-F&NhP6CGnuR=#W9<As4b,o[@-O31i%d#"gPCQn$4b14C(c3fFT>@Hg;,m1H[6f!5ql%cFgBT2^5GRfSr^p"MK4<TQD#kP$XC-eL_:_PQ_ieFS1a9pYB[S8s.0g'VGC\_$-s8;q&`rp:r%8Ne0X_D'B=`%49+F;*n3J4n'nD%&\MrO&PRa;Qrng^+G(Kq>Ge@#gDluAcfn/)=go*535##d;5gSN6mF^S6$RMP*/dT+:!'YX7j3!5==AN.lfreYhs.Q^R6?b`Qh>A4%+R5H#ZO=hKphVtj,`43SI#N9ciDI9ii8[\a\!_[)3s1u=^$bB@?-ue6ra[[fMJhRMUOnS]H/4<A*/0Z"MF>!oc:E-c4ig3-4AgMK%;V[E>)5?mTR_hM</#1eF/N$S9-6r$U&OB_"3>W-\fuh'_cP/PPj]E8PBr7<GR6De.a(]R\oV;3R36pgaB+Bi?g03mbnN<($[L9GN%W5nqk%J=t.5F.7($,\hJ8%W8\11ZF,#GV@:UsRGi:54u5,rG]qbg,1W%(&tGRFhp0I6`2FReI_U'H`I"3[6DPH]\o.#T\hZaR&R:%Ol7mNZ9L@:Ll=7&,Y]SA>pP6Ilj[D/&ZT;P!%EQT-_GgZVhAU;4X-(]P(qP36j?\mSM,C&N/:-Ol,\.2g["u5H@2&P\>@+_O[FDm%lfW,QGF&!8je9[SbNqe7gA8ed7%_WKfGB6`pmil@B.[eY8X):$LNHupA45/"9])XSGF.Rk4_Q7>O$uR*!eN2`oBQ092ls7p]5CM_%RuJ'0=T!'M7(W\T1&[o.ZEpA*fH=kZjLXhM]b=uue^n>^G$fX\0cr%HH%!Be_aU^S%5].:>3Rs`[<k)B_E<`?oATU0$SE[,kNn=e%I(5CYWBKC]M6d?jSIa?.=q2_ucM.0]:Xr!t&"!&2P.pMG"EO<:SJuZ7*.L;eQTN^kZ4>,hlT_]sL:<t:6c!M[<6,\%lZZ-8@/2JA%M=s>\bP9LRh!SFPMK8k,SJri#b!sGE/G/6d(IHjo@e.ILf/&L^0%e>Y3H%Z8(+K#gOB`SB&50Xq)*G+5:a[Of=;O7Km"Ujh1MHaj%Wiim+4g*0>,)T4MTXH1S2fL/2cPm+,-^cQ0n\tq=3=V?d$Pp?"@O:8&W0ZZ8PPFL)6En3J4Z86(>DPKV37Z=Cd#l-'ZNjDK0f-Gg%)8h'U1N#N2a;7LXQO;`%M&@.Ca&4!2*1)dk)1N3pOnOm!=rDf&"q8pkV#D?-7dBBm+>QigQ9f&W6GD(p1/ag;r\IHGQ>f<.e1o>+%o='0lbcePd$XbQuDDU:aiM)ta?H'smP4,jH-P]B5M@D`a/lF;(9n`u#JPS%@mkkhTbcsI3_Bk^Rp6c8S8W6V5WGik>,'lq:Mg#St%h!448`KbNm_A>NX,f2&Vl1=1ne"Y3H9dZ37bm#XjFAc2iSj;_.AlMo?iCT>Fg_%HOCJ!=u(N9^cP4R3Nk^$gYnF4qb>J`rq30;Ur%Xujr*::garN<$YS46%*pHUt(Dn-,4qa)B`#A`]UFna]s84-LWXjn#mDdRLr6>pu>K>M&X2oAWKD\Zr\TT'mE&Uut'Q/&)U]&=bVj%_'nK$A$@fP`+NT!jINE3rJJ>"c2Oti_FG=9A@L[`j$Pa&bVX(Ic/i!Gl;>Z@="tS9XmtsTT'[YoA@M04kR9P_<4`dnk[SF`h=dS\%1`F*SCh^WF2]>G7K<(mJ>7K6g0QJ8m9O+lm,"4CN^U!bTQ!n<#9RN8c[uhPOf>$>9c9C8Dm-<csU.2inp^X<B02WU1e[Sl$+'6jL%QB$E21NTfTK-tHgnj?BO5<;aMF][9Zr^QR.8K`G$alPoJlF.#gje*?Wms%/kd\69J'Y'lDa";eQiScW]/@>q![r&uls6"/<gZ2/-%lLB3Z15YU9&fouW6qu\/Z20>J.PXQnEUI-,>c#/+:?;A:Z#Ypbab^3iZB!`%d.O2^MVKDDDEgfL_2T\0K,K%)>E>,lM5nFman[X(%l9X%F7_jfDUelkHQb*I]:h%HC@bT(k0dq`"a*mTHm:qu'Lk<mSC^.gcZKXaoL0#&bc__B;dWO?5dW[U?.,a4C`AtGE3`.M8U6?s'%A^a)O<t7!T0$7?-2OgkQW-.*93mm"UTZMUodrA+ac)'ItrZJN27(IC`$e&H@SS6lM)0e'1.$r4dHQ?3H*H_e$>WQf4mGP;77(ID*%*+i%#F<]u/W:`E^l,9WsK?g>-Tp0!T),)rZ8:JF>NVgkq'BRZ]HV1t^dtt*IUo^YE2I407hEJ:1_Gu0,%uOle5%.'D--2rVcEVi(%ksW((AG'f$flWrn3q5pirFFB6.d5(okr5)l@>hm(&sY9$HT%G9GKtjP,jRO]:6\E'j^-=UZKXaiME.HDa)!f&>VDErft9)'*=:25%U0$2uc))-d'L'u0<AkkY;To7t-6neJ!")b3s6M'q\uEk(Bt)hSQ-"'O&BF3B?emb)bPlDReVUtt6/Pb1ptg\,pXLS7=_l>ZoD;pB%j\rE)moX\'W"X6;)kWdb(+%;i:NBH@de(i1.qk\6KtHiRWs91sjX^V8kcGQ`:kJZZ+9*%C9R]I<Y3`P_TlP"uBnXM)cM^7)_I.)\%\Vmo<HNQ>Hr,XO8Z(C\7`a3_Q3-N^$20XM!M7_t(ELKeT20\<Y-hhr3?0ILQnO7Zd_JXs@m^h:4&[>%ReMVR-=;cJ5?$Pn<q_`Rh%c\60$pDo[Neh<7-5JHd&!HC=iAl0nKe(r[FB-0=fA455<Cu:(kOZO(Pm'XiiFM/t8KsE[ZI:p@`MmdT#cUri%l'>q!\oh7q'3Wg*%WJEWmP$jI7'4DoNQk!aC_4dju)f67jpM?ILL?C3Q-AZft%A%#f'WN_3?K=MdTho;lG'(dn0?9As+IS:)n!N`i/6l!.3OQ@43oi_6%bCoOVDk]jH:Z<KLRe6#>*,&gK=a8Bu^,P#P2Q0OTTdkVC-ciJbP&Z)X9k)?ARjK>'m[Y_9,s.5'\.CseC3Hb$7M!%S]q5`Fc@-Zs%AkMjRA&5\_M,P9gAI%a.&LhTO7#t(U//!0=_9_l5qoa@\R`H%i`t6bLn#a,sb90Od+P4`S3UsrRo^;DAh([*MFIi.O`hkMe:1T`i%dc\7$j^>Z.k_?_+o./;FE(=,hmY1hSiJt!B7,N!NVAi"^E0i?OZ,_59_+f4RGJfF[meXFB0?%0Wp85LdDOC!L4*(3ooL\"I.LTlb%7,2b5D:_M!`7gjRgRFA[Z.lI2gmjD[[t,jVhL:/s!U0(I[D]PMa(IRW%NmDFeKX\$k6fhiAIats>#/MS-dPt>Cp*"_^R\Vr(Ulmh%I=D(AbX+fY>abt3-4BP?-0g4dWKNX%;)g`alorjc9Us&^hdErN'7E#GWoYS+.NH^ti)nF&c(VEg]eVWda`FPLi97[=o?+,0BhWM<%9FoChE>H$H0$!W7I1d4=Xc@Q6"ihqK<2l+B@FT^Q"f_NMFri0mhRC>_\6_\.f_GGJnf69IoLDhKT6#-<R-Pg,S+6cJj'%Q8OUF.:%>Xr@&3NaCW0HrBK"/X:!L]FCT>k^c65Tkd`$YU,,_/oPtj)&H%]_J07[dnc0M\FXSZf:iZg%fC]ESa+@[SKG3hplT>7@da(09Ukk%#Bj71H/H.h]VG-u[S\Y!Xu13EIDU`=pj:YZ$GW`2q/B#6;KNg`oD<N!M/6-DbB$OKJ*+\FFZOlic<g="XkW&m_sqb7Mf*W`ioVH7%.(9'14`%`+dVI>qCpPjqBdZAl5$VmWRVFU)XgLukj6Y"d0/k(4D)V+-\OnjQ&+<?f)8*_)'%*X<OjfAKO&>^l%l'&]:RYO<$"%fK%A)\i0;1"'kXUI.7)JYN']C>K;s"_15;X'q"96Cl=0)4=;$Kh*<C-GUWE3-CA<fe!E-pQ!/D'gZd34;e)Q\&WY;15R%G:iU521hO.%&2S`D:'OA$E=t"VR,qD%MFk9O-Fh$22*SFI,=3TqrZOIT1$-udBTrk@I;R3M/P/m1>3YdEMg^tQJ8VZp<Pg:9(tTGhK^?RRZS!3D%P%UU;fNOOs/$6u9bp</H<Q-S9FkP6u/aG%J/hM!R&VF''5-=H*i@N9RHE)BsE@?[=`'*aZHH[unMN-PkM3,7th6,#mk,QpTN1%st%;;Jhj((@h9Psnm>e9=,_06Z"U,F\U$=I9,BQg[RuTAO^;/Cf;kdIFKi+I9+t9/s3sHNm?AN6OhD6YJ7^(t7fP7AS&EKTkC@Rmt7&%XRm"7JK+bt*oJ$K;GJ;BNf*Eq_Hi+mPq!>A.<if-e"/\?a&M]7N`-`Xlt6"H9+r\9?,`@Tf):O5/etU[h^4SjBW'"rG1ZZcUmXp%%=HG,%jICkdm'aEf;%n37*)b1Rob/SPZI)Ofd>uBMV/l-BMKkDak>]7bQX5fSQs41^.Z;'n\1:lO7OhBgH*_Lo7!>Y5p/P8)>b3bl%l`tQ!Nal?q/lN@-T\i4ZX<V"1E\a-L7Qk@2kogEgBau9;.oU']G2aXi!T^o`e6.;V/'l>sabd;'PNDjg]n&>HMGuP"$$S`_c2p\.%""6@22ea%8;LXMCb2c]U8TOkFb`QD@!0cOFG$06OcN;lEfQ:"+^6F]F;</?#L2\SK=&&+G[?^)V^2>;q%-CGO@UXG8HmrFd^8)oX%aqo%^npiCT9,!$FrDLB!=_bjbP`Hd&L3>#<cr3QZ-Srbd`n5At)_0[WId,.4lLeIJejOZ;lIYX\:n`77i\rN6aa-^0Y?rhp1]?c@%g)J8h:l4W5lZtJ=5jn<'^XXu+IUsV3&;$FjT'l7b3UFSaI\Bui#-_fDFK8b%R9]!#.n4/lV7Y>4r`6eJn#rP]qXkZ69R<mLI+B<U%AH;K$`UDDS[R7J"]m`QE/,Qs1O6[;s))FTRmbqKe+E:16d)GfjC$tYPQXj&rg47W-l)fC@ir"Z$onspZP4!qiG->9DqtU$5H&oVg%YG_9m;@e'4qtU$PJO(l=m>bJW8o_%AGAB3pHi;sQ;b.&*s*O_(2\iPU)9I<^ldrsFmT.))\M,Nkh<sro^XZ,M0pMZD^Nat,>?9Hc%dQ?\q3O$.$nZ@8>qgQJsIdq<+n34Q-me%7CZHu>Bl0n;'YGKEjI#7=bMnddqArSHLhEs0g<^1E@#&pbQr2kF9>afOIIBR##XL*Oi%=gPU6-+.7=me,nl)c(d`?]t<]qS1W8r`6dUp[Rq1IDYaKom3e`?VC0]5B1:-qKr0/_6d/hl6Nsm07H6Ica=h0]mfL\qK84>-;TAW%^"&1S\[\hirDK3?eFUA&Tle6"H<0M/nYM(S`SSYeIkj."eZ[jn=5LW>&`IQ;Tn_u7l2+f%,\O%LJ$34,>`6@\X7pu>7-S3t>Y?c.%olRBEr3W$]*:Ei5^\DMi\6&BMYFgV\$$S_5\CWCm]X#k1r=\K=m/(,(%`a[Ce^&01c[5V<_$Y,R@nrN^lX%@$K\/u-a_ntBrSgmp%(ln93Y9/g,3&oTt%hlP+07Io7bNV9Kn+DUReW66Te,R+1*_PFF=L'9FriD?s?uWW4*#qKZmmWC,9\6`13_iYmYimr<DrZ9/4c+d/%`K37qScgdL[FGIkF/d>PS!r;+Yt(c70Lj>0=&!&C8).AAT[dkYXg^#AXR(qks#QU5o2d"L.0B<EA!;[`]959T)p:JGC?SjmD6JmX%k2&*_0'6a]5A-n'^:**nf;$TIYO=&am'cJZTl5u2PP4QkC$P3_ldY_+\Gg%WP5]8>QER*4WB"Q1D!R-dV]Q`@05$(&caWN2On!QS%;uJlTF)tA8rY[pbh9Y.GQJ@b+H?FY5p@VgAjdI,Go4[LRdJEL22R@8_IfJ-XSc+#,pncS\X%QR%34!\nir&.`9U``R(fOeV0'?<C%kmb29[D+#SIm<DDgZI""Zh`h/1gBZLe6cAmpZ>DtGkuRBVZNI9YN?XN9%nhPm\RVqaZ!G5Fgu85R1QRuEnR;42[9l=k4=W<R)u[h%0,M,oo(u;+c#%><m"q*`fn%4]:GnWqjB*t0D_m[ClH.!+c2$((XdM\"R8W_0mg8`"lihE$pUoS6Z1!C$IK]Pu%Vn$OEGVt/I\)`N%X"Oa%;Wf(o7]?2,dS:-8A<k/ua]Q[?Di)],L_FQ9Y4,`0.9E_BopLNGmF*TWW:2RVO`.GiD<+nSb@P>Gj.u<g6b>j)X0$6NQWLYa%guaVWp4V_Ar:6j6(MM)Bo,e_n1LAsW/0Bg.0ia^8on1iXrm.2Io;0X2*VbB14`Mc=g0GhbqDI<EM.]S(^-)RF&K]Z_*'%q.e)!#p%#02`9:TPK2C!GVL?Y",!)sHJM!re$GZ!U5tZQOOsQ1O+#H>''gGNASZ6LMHJZa79E/53fAA9&`cqm5W6Vd8g7bd.fik+DSWMsQ(C%X6MpjZO[t.=/H^dH*k9X"o/<lF"HZek/f-$[(nkMeR/4Z'#*7"fpUWW@7ZbbFr&7>*qt^01.B9&?`:aM`1flY.D/aQMO[2J!_JF\%P^t3oMk9?dcV\b*EZj<bGU#?IGq,k=XX=:#]YMiDQ(4R/VlcR9I>,,[fh#nD$L`9Wb5eqJ:mPgjf>eMA7GG+*Hb"Geqn)?0QB/L[%HbsB,)f$g"T@d):&]N+i*h$0*C/=HcX6mF=W3b1c3N1NA=C!Cm?;)q8(>c.k`od)/m3dhsNk4n!m_8TQqeKQ0ID1%%jDqC,.ZXGf%`YN.eN;HBU$[t==+=3=;&aYa(!=4A&P&HWUb=2=<Z2\X#I+u6[G$qhj<q!b(G4@M.deR^S$=4/iZAAB"[.83fSCd:J"\I(4`fEsP%Rks,0A[8O47Ij;QI;GKO!uL:[K3-mp.Q<)XbEKA`;25$oO#H3hH*^Vs=&u2a?>J"+jcu#.V^#o"qs"EWa-)K4DL"K1=CJVCr@8Bq%K&1?RRO&r-gRBQe#4M8dL1/0jRP/)s!c6)McQ0Li44cON=BWDe2tsN:M3,?bqZg%CCZueE'\7<hm^PGZqRLaY[l*J0iFi:6B<*:N%k9=[Z^2A1aFBq[CZZOKFN'9+(=!.%0LM^>QUX&Tg0'2!2:Srs?jVb$tHN*\[Y_@b"-EaKfEKh1=oN@^>N4?@u5F:MpWVEe(#&qDF%l7I>B;?iMAI6#r!,@Q-Pg\2?!(O#AC"ga.08_V!b<sjCIBZb\+56H7=^Q\o4p?3GYAE?kX+3Hnnf:XOqD.#^3Z`-l6XO_RdZLP:4%gtmfbRlL!g(\^tq1+ICIpf`#?KL>V&p?J/<hpFQP0?AMKaFI[:d3<:R]<MM,k7RQp/pB(]_W/[KPo@*u;l4H.mUP.e4'5mcqac0p%#DWGe*9k;Uc,FGP*1K+&EQ7.5V%*4P)I$%]8*&k"b0eYi_WCaafOB=+FDUrsp_5hR)dD+If&5S"CuOkuB5G$0>SpZ^H^k;J\."Uh%c<lYR>FgP#Q_#!i\h/F-mc$"g2;0HY*_RRo[BKMg`oZjWp#c)@T:+^,06;('m!E=aFdfVs/,NE+ZK9taonDmM!bjPYUP8I5<"lZ`%osIZSBjR,J(3V#_O'bru2U@<XAF]DTeg^=*>%;d*7JS62.g!alD^M^STGF/\fD/!5d[#@sInqpKQF'!K#nd17&0_pMa>!hLR]+4^%4Zqa,/V<*BBl^'O4kASr#(:?N?ms>rg9TK`f!^T72XW?2EmZQ^;m71LI-[SCfole]>CCsfgK;1<HRMLaO3PQ1e_3q'V?\[(2Oe2F%&^,s/@qukkF/=o<'fjbIq1iq)k2%IK.&6^U>hr.El%u6hduC2%omQ.9B')TtkN#q%ptEr1(3`"#>NMT[Csgq#?@57tpU!Y@jg:iP%Cju((ku_gJb9,!toq`a@'!q9p2&;X,V]m*pEZ3@d_NQJg^<Io`kt).f?XB42a6(Or@V99[3u*c3UN=lt.q8roN<:l0#;B`G7h6B)%?p)cT(1oLeV4H@E(gF?`mk_MZfln5Mf@l9iG[#p^l[[J12ks1%fgB$c8O$'bn&NXW<g!#-pK)R^&+/tnd\D*cQFO9qCgj%Dmb>0q%kOuh,S<R8T1q5-or[+n5\^slbF5KF$65Iq,N7m;<3=3@]hNkOP+W]n#X=#^eaAY\oMPhQ6Z-PXZVko_WX<2I;UVh:>->%B=EfgTb%<K0qaXm$m2Nhj3q'GL2A5'79nqsjYh)S8<_F$\_8R*<sC&c?*H99N:3Fh9ik>\M1tS'O<Zb/O%!@rHF^^,1i3H0m[MEI0h%pjM"$%/iE*hNXbaII^8`S3B>s;2qsO#O%8J<fpOPFb0K)49Asc,@V>N6F_r:cgQM3kV)l:R[iL?eH&$\,nZc1/N_Xhsf\ss=7&r0EIe1!n%Ieg=\>]lJWM#+A8lYG\UTN%ma9;S,EnMbc_(*eH:rN6,AJr40[at?2,dZu7.OWX+9$PG_K0APGoB*+&Gh;!k<&O!J%LIQcn77g\Y%M>ZFip78Lo]_?E7b_O#onkMSSmjXIdgMonpcgb=q6t:Eo,<,.aI]r6&LXYfU.CTODMP]m.FujJEJ'B3A#3%kc\"(R:T-pGDYJZle%UZSZl3`ZkZHqf&2oI9PP^5KuIMLaU^YJ+KHR9]J`"X!<GkB4/^e*s"7@3Bq36HJ'flUNY4>^s/ImS4641jGB,k[S03%29IGpuffB%@XA9<+PR-7i&NmOaLBdq2g:2g#n8h[BBZ6u?CIl1Q\lG0VEC+5-+O$V=p,&=hs"msga4%KqJ/*T1FF)p_UcbLmC"EGe#iD=2)MQ:%\)U,jOcA^[mE4].j<=u\Qja..3qAF<+,iKT4d0*O/_Y)9A0>a\bPRLBgZ%r#l3FUEg(u(UO"Z>8h2_qt=%6)JYN]%LP8dmH/@&jP%-RY7+:Rs#"9@^_%,WET#oq>k>Eas2be@k^_@k"ujO.@dja$eaaa3I-IO'T*ha8#&"pr.sHW<sf^UTsWaR>nIs="fUd4M:$scfq]g%[m,'J_)m6kP@Y$f*KSH/rjH6$V$,mV.q=Kac?0]r)eA0YpZg,lFhlCJO`Q`.%6@83CP8M,i_"Tg+6rs/=8"[Rm;\.KO>qrME$YD7%=Q!R60ee+A.282Mq5uI)T#:Q/5M^C./="5m9K^Ia+5CmG`9]@1.P\jYXC1mH+Gu5R/iBua>C<O'BU6urod`-N.6HSI<odLS1fGRp%@(Z1)l']EcfWWu(K1rKsE.6p)r(0"Q30gSnmU=D@9NTu&2s[UbDqeq`LM,f>*^8WUkHFKV1YClr7(8/QFtqQDkAE6)0E0`SS0d-4%jbGS_D0^]Nj-Us&12S95q6@YNQ6/<G\alV%q3.Iqj):lfq/U7ep!2;`<V_eGjup6%?q>mi@`S@SL+.?o68CsFA$NrH1/u)"Z,9j*%6P[8Catm;=A$Pd8`g90a6/Nc]i3CpC&'7WOO2VS@pjiaC3qht6q9],??k5BQ607RkLHXD9[2]SYZ^`Ko%JI1?B9(lGDfhT%(uC\E%m@;1+h#-G?l,@_&T;U>=n4:-rs"bK`e\_-GcJE#bTbCeqpRt[-@kM$*pX@5#j+C+_W-\pV(cJgKrTVX'0=X)lkj7u2%0oZHol@PL%D>.+.`>PY,-6aV)i6?1Na)Cc^>+PWIZ68OB7bPM*PsGpWYGBOff,TKnN6fD]hd@,]9?./ABZ@M#q3Um#D>]p)@'r61nD:d@H>pJl%L<kr`R%[f0q=Bi_l,W,=bO3=]+?BuCY5-8$AcfMJNRdVHZCS_?Fo@6_Q#AHSPGbl^AR+,ISc-3$P3O+/^;lno0u?ProkV_9=85rH%B-P,<i&eZn9!*G6f[(H^jAs8A4XTCgJ-gbN#BO?-^*8?:T\)<s=`>=a!4B-1rTi*K6Kjl;Kh*Nn/C6;(bfim!<7[*j(+clkh,(K3%0ifQ*R/dK*[A`M3c0kH[fX[3cs'16LJFjZWSgWt@1nqq>nHWWWqQ6uJn9fU#V$GJf^(RNtf,r5->^)%*?uuu\Oe;b<Y@O[V<sb_&%,$Y/_gk5&+6nV&X"Je>"c_ng7=\G2q<O*u-a=5VjDN-ZBL^^LK;NEdKb<N+'3Zn0HPU]ui&]_I`0uN9f7.60'gG='pg"4E=WaN6?%2[_FZl6TY';N7'[>3U#X\dB4.E#!q)7Z2>9l(\I2-WSCP_Gr:9fo'=c"BpXql)fh..qAA4oaK:C40%fC;Vijo4o)S,ebF0kJb$qE%o.;'9lap!(KK9l9eSG<1#<EW)7>-[IealpEa*R(AZUl`UTOXNm0KRbu)6Akk84Ji($#q(K(<.Q7LcdS$]_t-9:g<[A"`kj1a,J)2%3AD=`APsMb,P#(@gD>nQX-K8G#Y*klC!6`*EkL?<R4W#=T'LMe``'&*T5'rmc2<J8^"Mm;alSq$1\Jm$%pmE(8_qPl4)65PYHM_d%E_3V8+;"q:ob3JYpa7'81./hTWBt4W%c!P(>PpY_"Z,#+H2;Sr#/%gD7JcU@VcEZ/=DE1c9tR^'P&n\+Mlg-g_#oW\6q>@oeTp9h%P<$'P=:?7T)/j<&q;?f^\bs&'4U>U<OgsNHl<F=#H+.']?lh!RDsp;kc?%&hgu=8Nki[H0EQSk5#W&[NXImB%i<MpV75JqRq"42>%%oJ*($Y9814D?BE#qd4K8Uf.[i[RX9IcPJo7<r4s"bHVKkSl`=E4'ZbkfO$'bCkd]M:c7V\#=ofcC$4aF`r1CfaeF[DRn3]guc`M%mt9X!mat[(%nF2jQN.ek$+-PSmZ^e?Qr<DGr&@gOZ.Und-^3*J],UWioB^hp]l`jd!nhAP$IUXnlVbFn^>JDm:[^/:M9g=!aPsem%kOAHr)Q4F$'O[g31[jEMs$Uuoh9Eeq`BT-rpkb3IlL7O>^ZhPOddj;mIbrEi+.gZkrgUQeeorA9hj>Zs\?3]q+2-(Sgc+o2pb>?%%_oEk::WtZKjV[_C='BQTml-QobK5$A44<-t4mJ=E'RUHqJn*<]N&rJ%<1B=>#.EB^O6`Dlc+[-SD^nuZn5T^\0#6U>q=4$eONA7#%mFcNjFEhL);FPc:]#BED#Z(.XC!pMe@?qb-b4m$$AELQLaSqim,QSd5c#!i[jr*F@,(S4^H/^+J&M@MRo#/jrC1`cD^-"3XZ&#/a%@"`DokIRIGkg^?)RSdUZIdqW$qhNo(^>HF01Dh/uDE6oZ32mm6i;UBMn/Y5/8(IuZ6_[nDI"780GJ$u=1Wj:!ZNqG,00s&%Z6;lI%+RVUE6j;S1XUs?+?d.0$kI_k^j",56rqNLG5rk+,9nr$)4ADs55*iHf@LXGO+G\t\hHKql/S!JBRC*LYb2uL7h.lPkq>U4sb:[=k%1\o:$7CfA1eB?*Oot:,s]3'R^riF])fqiM6o;o1.CE(7XF8_r(`>=+DNtrDH+9N;efWb['E;KZl%4M4![Qep^:0/sbht$GDGdkJi%[^1k_.$4Th^\4p!nq@k9hVV^FJ2B1a]lXGr6,g)tq+ucB;0`'Q':$6c5AsR<+3SfmV^B0_rJPRf>?cO0>\G,ED<s?d21&utVc9hV%ka/..m>YA`.:8^6=#X3QEVM,*7VQhc#CAQqQO5SRM5*,YH3ofOa!Q^fT&_mTfH0C73$LF/d"?HfO*'f*U'Yg'qu:jF7aE*j>nE0[%jo!4)WB$0[7q^2emZTD$S":"H.+g-k]"a5@aY=Fqa`3mli37@s22Qcg.-/#FEb)u-0.hZup&QDeq0_*;i/&SH8T9(h0]pbuKh\oB%Re6%j9@f6tmppGEa')o%20,`fZ[;BVa508qeAcV']X[jE3p%IJE2E?$JBGGbm_]0-YNq(k*72L"f@)H7Ob$!KT.]]k!>YF..p7-Y%fUYIgIOTC6HFd20S6ZlOlD^M'hd1D0"VpFFkor-r!KIXW5HjYMh2bpKp[)9qV#R5cY90ik7l7klbh3I"A(h#FLZ7jn/*Ao#T4Xgm%1!8B+?'b#84R[nBUD9;VdCteA7\?Z[[-qR;>M5B0h^XNXm3O_oigJs&\,Y[a-nc>XUO?::RpB7,/f2P=bE%E=LHX$7nq8=#g9]n3%!!+H<GtU3tJRNX:`:VJW?.DS4\%XIRo'O!I]OU.UhU+6@FaS!-:?OnR<nDt`$[BjJVcdIf-.@LAP28oaX&IJ..d>b'4<g\F<78B-%AEbb<UQX2&#nEaFSW^p;]H&A4L7MrE#d006nf,'NN1o9cc#J46mP;/(#I%@>MM:e&W.Oi^jEcYcC7K:H20QM=6c[7!f!i>h`qiqR%WNe<e/dIkCG3%quOUkH2F`k"S=7AE6Do3j`T5;,A["R\?gZ:k@CAF3J"CGDaP;L@KLDU4#LI_Pkf6YfJML5'iU!<+u7Y5pqRSN__%dBuDhC=]C'XDl"5dN)ZQ6N1*-1>dJ]T4L3rijon/iM$^pU,=RN$5^<*P9LRW"G,\Q-N%Un:EC2=b,`R9_Tg9;\'g,;@9ET=-@uE>%NWBgU-5e/3(V]2$1>bd1R=;]5>q5;e74+X7V)+<n>OJ&Q@CV+pBEbCM>J]ZRYiVe'.cuoRJ3>2e(%\DNKV3p)d26l)2_l.IYu9(%%B;L(!aG4`M)iN.,+X^*d:^*Q"b?6->'jLnMZ_G0n3L7$r0?j*&*eMWr$iO7rKnY<i<n4##0btNLX,+QBXT0G8[icuY7biHKKs4I/%E1hVDQ4,cRh[ib[0O%.Z3"aUu(0%I=F!BgQXmtfW6AT.I\Y/"o9j9fT--Mo1=(=FNJr$?4F=b2R-Y)^E$F6J33YnWjq'6:[M$)^=%(DZ10L)eN3DjsE?)?!a0]GdbZ8UGhkl]/jmP5a`T@@gHG>Ve4>$FO6AUFn5FE\nQ:3(,8s#_ueU%V$[TW=^W?ggkFg)(me;eR:sY%4O$>/ZAfWVcHg@aDR.aJm@Q1F=qF@<9D;(0FRjQZXjPhde]4E\Yk,/NcZ/NAR-n-rGeQ^\En^B/3'QkQg5G,f9]J3Hn:?:(mctrs%Lk!hY!h/qJT6ICe3TF,/>Zl?jE=\E]hf$1(1Jek7cl%M\K0mjJA9FM-A9HitnIJdYB3%IZ3ec29hon2AG\;#:pWYpiFd>d2&'"S>%@uo:6A'q*o?[FhCc]?n"/BQrQ=+A'M81*YK46?R"nVBSKQ)FML?h]V,;WOgNJ0t:uoKD>.P2Cgu&mZM7$W,"WBE]B%ja$#+"),*g%2np'q'\Dog+!`+QEcor<nelL$-!5]7erjBll3L)Ye+*$W02#Jj;,1AkbjOiC:UF0b0:&*ig4b!_C#-JHciqFYZS=-4pFD&)4U12J%c@3NU"NU99>[Z.qG?1F+s-2^[ils(^C;>Zr#6![jW:\j=YBt;A5\[[t5ej;%##o!WK1".DRgl=d7`(WfeHbi!*:KplI%Siu+(qd)%D7a4dR?,NEJ,BO4F*;=abN$pR!gD[WZS(S"ckeb$1Da5geT0QZIdlMQ:O;i$HD/g<"Gdg1oNST[06>ua[,g?3Af.#t_YIKJk`.lG%St=h7Q_"sOIX3b4XG+qqp"(`!EIqrdq5H&<*nUe!OlrVH8#m-X"P(Tb;_trbStI!IIOZoGq^8>ns3Fk\)7@)W-kE0.$bJNgalO)p%XP3Yk5QTnRX8;[!4/i']D.]"`q+jK[_5HC*("LU0L4Odj!'PSLbi#d0AN"mc*2eSiB!YcjIr<$QCR+%sfd-W(*?JJP(:-Y:;YC-V%?-^_<Cubh#)EjOC29?)ViBp)[DPI07rm#nd5K=X%9E+h0a:o6Yn6bft%t48+5_!D]3I@.lFXLg/i5O0(@[WBfb">^@D98)<1]*Tf%<D,)A=UeaD!R*5+8MsK__>JM*Qn,-(+S.Z>9=BZgP"aUuT/*DN4r&aLW[O%,(cL-_Wb@Qh)EM(-%mpe8)#Gr$>X<ebrYHdP'ObDf%(2DO>W#1$f.ZrOWUAKSW)l@@\s8GeJC1X>+rY,:GAU\6+R3*:o4#<A>qFOX47Nu8EJUTu71kR0J!I<1M3T:B+QW>0F`b2ZT&Y]tq%[j4Do6e!nG7om#/7ki"!nL^jsL5aDkb9BV/:lhP0FG6WaJbdfN3T:B+QW>*Da(Vh+&uHDkY9L-;R`3\#_*%&!^?\pW:>Vh4aRCo&%Bo-rY$M:B^@;-->Y)k"[3M!+F0W4q0E%jrfd%sC(XkGmC%*\%dm(6Sr(@WS$Vh^>\BM0UE/'r3,MPK_`+U`?2`7-J:!9OW6QW><J%a(Vh+&uHE-[rE:GHk5:/ZD6&77juRrE\=IVL5jMm9-ZhR&FW/uU@:od!-9F)[Ytbf0ZY"!/Zg^]N6Z+[,"sG[?;i*_9g^r+!uOCR%Qm8bqF(rTJI#LNu+s"#lrL0Nt1@GeZ0F+;K.UeoVQn.6'8r<HN(lbslJ1cPb&/o:K&(C!b)#F2T)>_8DV3f9m0cFnc@(J\s>EZ'L%]S@B?O:dQdB+NX=.EiOVQX1lRa(Vh+K'4t#NMdkqV2iIBn%fuH;Dd/!G_4iG@'60:oF`$*7\_OI9Gd/-lDULmo6uZ0F+CNm*UlH-%@'60:oF`$*7O'Js9NRU1<RNI*+[(p^8-WhZk6RrV_H]BDWT>jVHq%<Y5ScR1eoaQl&N(R$*m@J-9=B5&fKR7@X=Lt4L5O2gb5l:^%9qHMA9l=h)htLQ8;THTj"n-ak=&<7M@146Qd?[=j<hS?5*80>b9-<<[P-(2hcP$Y,KtL&/Ol9e,g(F_@$M6E9CR2uhn%ftGRP]8\%:m`co?!<'n+/@5L8=3FG^OZSVe`6s2+6JrRm>r2f^_7&rKtL&/Ol9e,dLtf;($O7W_)Oit#=Gk5VQGSuJmkgDG:=j/+(-qZ&dd"o%oG`sf)n`rS_]20%FYjinGX>iAOEYCb145$M>9[KZJUUO<%"n:j4I@`GQ'6?GjbXLhKtL&/Ol9e,g(F_@$M<)9Aa6qkn%j,!O=\Y^%H(Ij"/*'u>M$tK$d?[=j<^a]ZfOO1Dig^8&AOk/h4iA!@F+q8"/!8e#1t!$$TG?Zl--b$9fW#2*'jYhoe)5K1_-A/P;G-"7^hC)$%&uHE-f-SD`q#(=:9NPV%eCJl9:m`co?!<'n+/@5L8=3GNhh3btYN`lF<L$6Xk'>t&>TrRa8n@]6NOD6lZi^2lA1K.uCO.[?"dl1X%4J=H1aLeel)*UNb/J4X+Zl@[dcFh;T/1='@1eG,u_rh;OdtbJcg="/Sf_CE61k7-BpG4B)etI@Rdt?nrJm-c+T-`],+6Epq9.u@b%@l2UH_/uZhT4r#&MQAL-5DA>_C=85]T-pWV^g'0RW?q*W?o6RM!P1Vp4=gTcTm8lOKB^Ib=*2Vu$$t,(\UrP`b@B3"N4(Qn.Y[UO%;6@8EVOkYHjK]o:C-G-%#3H9X9.u@b@l2mP!P/t/k&&e7C!"$>n%j,<Jo6[`K&4+'bSAWo?6[;-BXB&uVA7KsbEC0:,D#'E,:R/M%8&,T9EeRak.uRiq1=B&+;$h?FP%m(k+611ZfQUpg$H!;`iX.Z2;@5e1A[J9FVA!Xp-/!;5fX;%6@6IR90aXHo*m>Ai/ZgRYO3qW6%,YT`8Db.r2jS'720LJ<qfHb(FHe4%`6JeQ(aRCo&D2Ep["o9gh24L3@HS@gl,ZQQUN[Gml(%NuZ7#$cMBM0UE/(!aX/oQH`9aW[!%)9a8/D4`0sbSB\$X[Io)d:c/u9Iljp;'\lBGb<E:)6/=d\\tBSGX>iAOEYCb145$M=s=uo!rX%/f5fpcOJ1p["H_GQ5"@`&/*'r-%Gmk^cd?[7X;BR#XA!hXGgOgA)Cm?=/_;g=VE^b@K.uYXH1YT,?;[V$DP%C)pLZuV`4kQ_OE$X)8.H"H7E=<qad?[=j<hS?9$t(,H%5D9u0-5hhTEBNc!Y)mjA,r0k,7U%'F>!Fg3/5)FKE'B*h1CR:3?tkDV$&,oVhPHLYn1bhmM,:cMoW+/7K^#Bg_a$SbK%K#[GC>i/%W%Y8@rX4ZS>9[KZJUTGbKl)8Yr=ii\3m>*MSgP67$@.t=,/_H7ZmC=gdWtZua]<MTHia@bTIMpAjM0rs>X<5kjY:S!7U$cS8qD6:%\/HQ_J.*ICGTB.aq;Hm0&_GHg@]7A,[N%VU!pMDBeP)QX$8ZcmP4=Q`J/ndPMKkFf%RWZs[,hjr'@Es2P,e-:7en`*K;7aOp.N13%&*=5pQ<"j?a(V7pdQoD1Y=Z$n>!2`tAn\3?6eCLG6=I$YG:=j/+(-qZ&dd"ooV77[BZ$5KK*\#Wi,dQQSp2qjaLeel)*UNb/Wh`h%5eeb9QGWN`*m@G#8[`/hj,""^KtL&/Ol9e,g(F_@$M<)KbB*;SR%YXLTFe.En:\Y`+n*iOAG@"$[RA!>,5P;B;Y`aV%qNbiU`_b7%EQ!L?6I)Ema0>(OBk`5L"ldot<gJ"Idt?nF7J;NB*:Z=tLi4_r0l1r$>8CX>JU1%2'HSJ@VB_J0&;T0+L^/!TS4bAmiF=^u&dd"o%oG`U%%e!hP0\o&L3(T=rM$J*U]Lsc;iF=^u&dd"ooNMrK)L2kBKBX.*(8"OAn:\Y`+n*iOAG@"$[RA!>!r\.TC&CPJ5"mn8acSH?%j,""^KtL&/Ol9e,g(FFtCu3(Z'M6\hhS\tnY_?G-S:E!N>p&29l:WdmiF=^m''Z&(kXQ!"?OPnFF@20A29ZX>F+p,W.?C1_1YU7_%;$t8-P%F3>ZhZ:\f-Ef$#>+b3nNa75DeXn[A9::F(1BgdH;praTB>7Q+@FS?a_]VmL^/!TS4bAmiF=^u&dd"oo\5O@o;?m00UtFF%-jn!.&*=4EQW><Ja(Vh+!d'jCLT/I[ig@B6l+qI\l=JfFH"'qXbSAWo?6[;-BVZs&5qC<cU8RqB;*I[/Mj4^iiHX@u>TrQ69&r4P%BXB&uVA8=H,[3!K&(?0qMC.SJXR\KI0NZ?-Zk=6?7\_Pt0WdUT+dm_h[Kk5hI@Asf&9,R?\O+T<Q,g-!)/X)@-jAT^8_<a4eU/2R%puPV4_Jt6\>S5lA$=h0@N4(9f.Qp25,H3_Rc^PGtoC-S@EdWo*o=l]t("ARV*5fg1Zm??^("&'h\?`s>e.5psH9kP2Q7"l?(%NuZ%7#$cM85#b2<hNegj`TFtoO3c>\4QUdJ0u&n$@.t9,6%[5UFhT^X['WRR21:P=o`UPak$!A-k&m"bSB\$X[Io)d:c/u9InJ.9"N9>%WYWA]Xg3\"!T\KW@BP]9BdGN^N(."q@9S52>7*"eGp#UECaH.6!CnQ^'lkq/4GJjABM0R<.3dV:dor/(r[WN8PoGJGE#bPo=2_ST%_AG$h,;"f`8qD:WEYSL8[/bqP<Ah'Sb&RX&>Tr9.MW6q:BXB&uVA8;bSR#6?&(?:oMI\2IY@bQ`$?Lp69.Q.`@l2mP!P2gu___hE%d.m4,!Z9^`,s+:`i)L,)"gt1na0>(OD/"YP"mW58>m*>"OfGDUUa(mE)!2/cQW>0Fa(Vh+&uHE-LX"iV8R;f6XutZ&66NFmDeZ%&%>\ll6&r7m*^M-HLA;NN2b(hs>As$1mn/d:oK"BB'@^t'LZm7t[!p.Kn1`\c?)Sd=a[7QT2i!5"H!hQ6Q_bb=jD(,HZG)1=TF3d)O%F-)_tW'3F^1P!#fqU3Prp_]"!7)H;4rFY5aJH4ii3mR8KhE!:K?!<'n+/@5L8=3GNhj+tsk4b#D0JLId-Vni3It3?!BdGN^N(."q%@9O9A2E^(smc%W79]fRG],9Z;H'_PU_oHGd-.5(0d'$!K_Oo](_&S5TPoNR>i`?J3QVo%-!Cih9&Z'R#J?<t\)IPh%5-f*QqUeYL%H?fo<T@&sZf!0)-2C)R<O7.*X$q\WRW5+:/kFf06W,jUc!g$tbWm76E`PHrh@G^[bVirE@q)j%`7U%'F>(M,mOq%D$-Q\"=#kJ2:%>TrRa8n@]6NOD6lZm,>e-uUdV\O)m`j`HZO_OUU4^d1X]BN<nd4'1NHR+J7hGJ-2r;."'57q/8%0[b<bBG;^9jMclcT`F5j/ekD8%U5"+E@C(hE(DBa(g!E%I/0<[Y7`*Q7Z@\J6):'G?>d&DLQ$s&j9oQP))<;\n7<33MpStQ>=HUH1=;Y;GMN9NFGBFd!=E#QKaHRCl%$!u.980]'W'FPd^Hn25t`3a6r;8>pP9NO*@2X8bA@BP,5i3QlQa9^]sIoO?K`<'e:PE.'.7K>MX@8N^o>4LLH0NV'm[.945LY[Zq%&J,68k`W*<2Fhih6X7$=5YFCCkrM!P6Ni$$MMX1s_$nRF1!EU-4UVg"_c(lPHi]&"iIeKK"QK:(pcVh=Bdlt^E%+;r6A$:0pcYEC%.__:26Jt!9.2cI1pIi?-FUBR/5]M<fW^1Atd85_Xe)A;]^d1?4+<gep/,28,,uP6p,0QEBhkMkn]Hrd89HCaf.dET`Gu(1Z_.cOF%9ueT,Ua,SA=q$+"QDU&[V,u%H#iUZ;-k9V,f-&>B#_,hnF'Km_F-?9.$X\.3g/@uC"l'FTgI,3H!+adi`'BV7>KAKP<2FD>EME2,%]Y:5*bY_WQMKc:t08`IHWeRj^O]"R.cVuc<$A7DaX9KFdcZWjiSg.H?!$Q_fD8TmWBq]DT&:-R9.Nnp'.Mc0p$(dUQ&0WI5VI53o%3%><p`9G/r?*U_09k\.5+OZ\Oi/;JtC.GKp`>+$`8MN_8.[J6*7j1j)T'H3L$luNU_)2t7HYA^?'H#SOnt+i#.bc#K+,aDLQUs!h%)rZW1UEJdj#FTVp_B8Caduc33+I/l0_?0'Te;)S@_@CgXXl?+8\9B[O("<JS7th%N63f+GY[I+i/=1Ak9%Hhu;946P)*Jk)5C.L=%lP4>MoFt;o(iKf5J1Pm9K^+Zt0\MSDJbc&g]W9\n_2Oroa<*ReX"$&EW,T\?-:bn(AlT^Jhhm*7!L+g]%\TAg@0KTGWlY`4J?!Q`%MIC8d+NV@r!L.l]+$_pR,6R/b2gPTg/+I3iPMDZ&M.)-m(Nq28+?3O0&62$2:"X/L7o.=V:mVBR@2%5r03eSZf`j4%>-aj+&Ce[8%fqGVF0RTR%:_=[\A[7:m*^+-QKTNa"j5:cM@;%Bc/41>0^jA,$=)9&94&4))840-l.h[)$6a'pcLD)GHRV]931D$0:+6IX[YK5mi%h]0O++">?M%r4WU][R;0%P$-U.o3[=#3j,TXq'VCq(Q%s):G4V=9O518g6H)Q?<]I)a!Me;OBEEZAq9m,d9E4J0WbMWNo+"Vq&SJ%#H/.gNN(:l4IR]k0Hd-G%,*DfRlW3"$mD(4=XILse5VF0a?UN[<qtf"<QI""UeF0%*H!:b%"qJZ$M.EYfAq"pDi`kRO-S%2%rkr)%@F9X&k:W.l9a1nS85WqcB?)u3JP$Z#Qsr@'K]Cpb,@"kufDq<pq8!P'5)^B<3m+9>.2"M&I&-7<AOj61(6!2Qja+n8*T7-dSe3KB%(jY2+n>=h@(,uZMohFqc/]5%,kdP-f]I>a=:f<(R1+!unXm(cj$6Xn?ZS5k=JsrXs$^qI)@t9_T6Na\Y3u\_I(h:HL?C8VE63%,4%4.1s7aALB1@r0f]2<kKXS.Hg1f3ksgLdt\Mo2lQ'jKU.I/mr:A'OeM4[4dZHgjETO4:-s$lj5Reeegc.MW2/u(4fSVWGr+FcnK$`%0f'*0gPd<HIPW8H&7X"<3]s/RZkSnI!$BO;"ups!Q5-<1M%L/EFkBS!nq&^L'I/EK41m!HoeA!5.g.SKcR<5G=bs8`50W%P:m8qp%TY5l>!EL8V"3`orF@_GG@VgTi1p#F=j,/Cid3*(i(?_7mYeWC0h@88HNr"P@L96iSQ"?[/WX0IlS)!psJbbE:eMPC9dUJRch#Ng7%`)!-I!25Ms)VkB!dVA=oNG\a?:eb+#U)O(u?4;NioK>iIXXk.AJ.(`Bf17%mM-M4q5TJPZEj2Pt_$tp/\jHZX*8COMU!O)c%W64s%3ZD[=1q5hdnsfdfDW(4&l;Q'n#%//KTch"!&Q]AmlN]$J_$UkF+DfHImW,1h.]_&LL%#;&eZhj6Js,U-^ar-Ui=*]BKaa+M8E1Wh%TeRWR^;7Utp]c1E-/Ara2fR<I7Q[qc'+"0+8RjTi6$1#A5m[^=6)4aO_?;JF_(puVddRIV*8@^N;O2N4-oKWW0jlhK_AcVDGd^&9%)Z[*b$Gk+!#/\HFJ`5f^:_=.S0Wk/e%0e0uCgcb0@1.fN5IeOD^0cc;lYpM>I`n$P_\aZ+!W9>GgL4<=j82N%,n=cGIG5-HFEVjl%[%S\A6<=VcF8H@R;F`b1NIuM:+8`5(piY'k7L.gQ,!5]/'g=0fr&W#tFJ*RV$@d&:!))_Sq=lY(*s;*T^Wpl5ilsH3%'2D.c[hkW%BN3/rr".)\'kYaHYP1='_=L%P\)E^EY6$DICcA+1N@#lNC,AtM]cIC;&#C6SHVdC1`5uJWo0"f4--op+d.VjuJ@NDbF)3Z_.2lCt%fk&(Nfp\".2@Z3o:N]KP[g^7q70$98CrZ'V+eGG?^c]prW6"T.K'!-\00kD>IKA/oldm:?ht7AK"Kn@!H_+cfWPCB+]!pO+&VskK%k)OtI9cY#/ec8*==Q_>f0Q]*)i^O)/H*12p?JpnK=F"dgJ@XjsZ"!AG5Qikp4&jAM$mhhY<!N"1Rr&[DaE=`ehq#NE=48/@l50)B%W1/q-if'IV-^RXj7mboB8:]V.[@5Zs<'>kG"q^g+XQ>L&n(uTmWo1$pmH71`a%gHkE=Pt_X?Q3Kr'FY'*E+SDQBY=A^VEXCb.6r)%qol^u?SDJRn9YmEd/X;-f=5:+!HS>sr72=mp[)Bhg<0_-b1X';S.0SIpP8YL.0Qq@$7j$Hg>(/j15u14T&[sI[V\r1E%2u]`rXYS%_-=41_7L(*K9N,-*6;0O%tjJ=!EdW^H0JC1h@0fDmFcr+(DN7jB1<SOmkQ*C!V+Ptjui-fS58!Ii2.0a*-\]::0qSY<eg)[?Q"CE%]Rp%^8L$8Fk]<k!O9*Ur_nn[UC:[B]O_`U0WHrh_Y(G51cr6ja[FseFNP?f?f*+ir8i+Mk?sU4ncuphkla"n-L@_f(FKlP^h#[&n%3T`HnQCLb-?f7dnjW&KU_lVX7(KZ;o?LPHREm0r$qCZ"4)]JWTqac/QN>=n:AGHhkI^d.Cs32>+[cOt->46TOA+R5^TSi6gnjj2g%:Z!g?k/QPYR-8HWp!]LaNZ[<f9uLSU3%aBXEk4?uc6:;1VaInp?tXFkSZ@hI^&AbTY%RiQlJX1XX1sYe("]u*CmN+a/g<3bK,G1p%6cQ%Q?/VRnV&X]bI84*]cI]VuQa>!)heQqOe#3V1W,\B_#^u->RMCRSL1<W&6((.X7*,rPAi3u%@%<O!;*"TGV<:Zd$e1m*f!%-9%[aK#oXjumDR.hG$ap@U*]0@,4:QABt$Y#u(GsHu2.ct"*QCLn1?f7h\j]m#PI:cgKmoo%c8"AmV!9*n;[&tfX^lAHV5<\_dCMS#\%CHo,&nZPjb;CJ-L437Np=;QEJB:WDG4T5M#akU\0$Y@KQYY*q_5gn$:C&A?@Q4&ThrrQ)QrGLif(qL%D0@6`8-N@i[Z.:B:3!R0K%BQ7DjJ>#roZdb.N!0"n/>*3;Q=d:2*!L&%J!/rM/YVZ9tm[A%G)ZM!Yfi#N)T08RlCf*P&&*&q.7h:*3;_83qaPU_<_I#Ptf'&<P%^OUS`)<!5DrR+6Bn?Cp)D<U75iNIc7pkqB'7C8QS0-IY]0d7J7!n+!$j>?j)fiX;E<-+!El1j=8(i_FhQM;9#OY&7>?gS^`3M/_Z%M!C,C^W9eXLBYJD1n>H&^CCfeo0A7`Kk<1>'ftsU=!1':;LrWnCk]]Nq!/Q?rG#-kZBj('RF9h6*WRF;\Mp)Yp*;I<MXdmCgD9g8%YO8VcTYGiQH[!.jYTL9R^9Q(([B8end24ps&)(+Bf]Y9C\E-YT-VpFeW3(6>SfGfbBXfT%%?*gZ9n5?W7Xk0oCLsABcECZM=#3I_%JnY;22$cpLGs="N*P94eWp='ie&I-,4$<Dh_9W%%IX<uOGO:fNcKijIHr`#r-'?GgU^]j]M\o=4'q`h>:i<7*,DCX^&G;BL'*gN%%5fCV=4"[FcGe,tKUf1g4VUKADkS`#->&ir&pDUf8>LdlPD"]?RYEIJk6u5SY*G&[3]1JG7kN>0JC^5#an:llpVn9ji6^7*;ODP[%%DV!TV4b#I].nUA?#)HuH(:fdAq1P#$:*u!`"ZgsO3[`PJO?O>>0^O=Hjl[)@EHldk-KLlB%*_/K)5D1Lc",Y_l8b6:O9P;kX<eR:%=m\,0+[V=t@oTQXS48V0Lq(AaAkY09)5BrVLRX&KkIFM4k2i2J@'[M]E"Oa3r8:WHXc7ei1B%1RaDV[fZ*!(k)uX@eb9,b]!Aq6e%r,LU:#afNVpndkXZBYR6[hAN$F5:'!aR1SMCKTd9Vm>]*ODZ=P#eH#.%LUB@GdR=\M;ZL3hX=!P^jHe%^\(=^I=(=Wm$0Nm0XBM-%aVKCkUHP!V2#+0kdiW#djoClRO"'>U!*NG85j@F\Z@t/#lI(KX"&+\^F`W)o'V--bj\a2uh&Kh6i:pC,nhAS<!R`8%_qc;?91!U_%k2=XOB2+6OdET3522hX7D@Tmn[YDWE!Rd:rLT6t6Wk)[3F%H,eBhEfqLnAWrJ]!CqInXnHi8FW0NeH6)!EO$OKnI97YBmcT#H-]q%L$@C/$(*_4r8FEmZ#js;[U%hL#!`Odd(#2t32Ei^/;Xo:5lt4Lc0&W@(-EY+a>QZ)^R?n/)*AU/laSmh9!\B?\V0jl8!sna2ZX6V%(bg7qTdBAN6@\F^*2:sA#^!-5&k;$oc6`&XeQ.p/#qC%9JFp!)!:&JBX&H?:Zp-sD2!.7<-`FFu3:A^F$[H'$:D3B=JNGJe%LS+R%kl^oc7H"A7A&?TN(p+qVl)]7ND7e'65,e4"@uEOr5O[Ki"<k$f^O/;(+%*lAKG'6g.%HM"(,>iVB>hKjY@>2d$^2O1N+-V)i^H!O%gf<EVD^=pf@O"[N64BooaMH]68Vr1b!23%J/DC=#bpQJ:KOa&A:At!'0A0.QO\Rugk/f"W=Ok\m;bo^oO+;IIg`T[sI>#C?5`2@G%amU3bD91rmcQ>&!qikUB4kr>`6D*r#[;mg`AR$sSe<YJ\T-T%.WN:`"Nr2oDm02fRWAe;AO?![hTn\P_>E2kEeZ7(CUHoAm'6IbP%Hc)4k`*]EiUhAk;&e[*36Y*4*Lm7ce;-Y58:U):fVbIO4\qoXkjJ[OmnJc/q4,lp6-@;4%4F[:o_V/JdDZ188!_foE^uD5.dI3iD%F@qthTL*rC9#JS=-O2G\o)2:H&J#m:&S4p6o3c*SH@uMJ6!#s"7MZ(!Y15]0U.\^i+j:SL9rI8V!Fq_;l:BUIQ)77*"=@P#_`/q*%hBd]QlL.2H`dD@D?>OD@);8\3-\<*!!\Bc*@!g@6Q5plQDd,l#lA_0Q6Z72WRjAgWmAa/a79C!5X+DdAAPg2Sq:T@F3Z(qU2PbhZ%@6^&Dc@muISK=d4."=4#7jEo&)\EstEcUE21@sl8VSCs/!Au#X$?p?,WfP+32a+_*.eXX_YZUa?I8taRSg8(<7A;W,;-*&]/Rhr@%HK,0P*:26S^4I(["oWIOfaiUsY'qQEcdk$%gp6L?KSjarbZ%.h+6($I?V*\-2^/`o+nE7a_Vs[YI^XdojNA^KPjZ=D_?uAl>$CNb%`E]I8m4K"Eo#uP-*MJS@56WUB!Jq40I0C"BikPF/lU>,&`L6;Dh+=d5iC')c`Ed?'(feFq:BU57`OMi9OSRVIJ2H*k)'S$K1L@LD%s(\_Q]M""1Bj)a(Tm%*H+t!p@.^dL,*FG!%n0Ht`Cse7AT+W;=HRWEu0=E<onb>g5M@+_@YV3i",'@+m(o^*JZ$p3qI4@Si$+ABK%eM)'8991DGg9(H%Ac5*mQG!T@m0q_YJ<k&9Op,p1fP+CRD;*<6lE]<lNl.FnBh_=dSnn`1!NoVZkWXJM@WB2;(S`f)jYNL&]MP[P%=$ZIh/@M;nm#,7FXF]0t/FL=YfgK`>`"&PMJo=V=4k;Yp>j_6>9^`%'\"JYKBlXVkLbQFn2-p,18^JN%Ye?14q22hn+`SQ^Sk#Ic%(^//C^iM4]!]3AcKkRGV9nW\(B9(BkrUNnb@6u/HD#%4:-@8TcJ0:A\6:/R1)#"Ds"J1MZ5))^s2lapPin]4/E;I2LXjZ[0!q,N>%9cL-3D;^hm9h[9C\2#\>;upF9U\mllD0!lP_BkUKK4_OhDQKhcNFPg#8id,0;FhiU\?"hN*KcrbNEI3.Ml<.qPn;'"-*Am0!=XGl%.Dob=Hc,15`?iEmV`aFD>,,aQ(\>GER_(o-G=AFD[F+H&TNqT/p?j!qs+`#[qaS=`i<:%EpD,,2_M*qs\Z"BH"TcRT-@kF98eTVS%;HQk9,<R1KjX4I7)%rh&^.dWiUHq<[1du6B+EL[R2.508`]TlZ&:2AACT"q,1p&Lj<,ITkiLtXG[`g6]j"ghQ_bQh-r!FAm;[L.6%4j_<<GN^\sm;+p`Kj[Q5KGtIlVpJk'207D\SOI-/8VcCsp6h5uaYR`1q?o6fhq4Y?s+UR-AsE#$Fe)&Ed)LbrP@]tpkFq/1;&4%\%%?H^mK>_ak2PkT5BkS_"TqCa27s+ho7"Oq``t.-Md/=97._m\WE*95Jht5K3Ch>>`-)J5[)QA8q4BA91O\8j]4/9!12qCQ2TTO9I%Ct,&UGb)'X@c0mX9c:!DND#IF5J#_M1Q?kPH5E%AV<LKar74?P[JEb@;regWamP]kMBD@l&mbiCkj=*9&p`LJBk;c"+g0BuUk=4`%,3qO'PRX^I-R+,WJOm;-pMB_e86mcPZE^dm)8Y7U!SQdB(M)ld!=1><3$Q,,'u@cY<>0L!9c6B$2U_82/^#VuCKJ'i7ld>r$n`(8%\]E08h5qXTcAg^AL:HpQ,RkoOT,;SaKZ./G4M=sCN2]cYGrQWEh:nhR5g+rl=E>JC(\2Uk2<%[UGU*?5!lFOi,06RBh\?9JfNlq/%;T\LAYs")+TRKQMP5$NfkFVg1Hg&0,Hnq/:!A4kd82,l+oU[o+op\KAlU&M1?%.Qj4U6V]#(V>:Nd+GU"H_<4HQU"jIE7K?-BmeE%jq8TuU_OAUHZ&CS7kkSu'tjZOD+5XAB#*UgL5)uL(-:8KD5PE[=.(S<$COM1_3oV-K2Y0ekAmb55t$LLpa/7fXgK@SV:f\9d<k5?%[]_)^DH1:6Q$WH40s/dj(&^l*`XYA*Zco-HZ2uR+f&@O)m3&85UhuOWX7O4g37T*D4r/:j%-&aUE5e[R&KLtjK7nc*Zo.K"MXB*L%qt[/:;M)uUclHb*ABJV<d?+4&5W:P'MWLU3j;3iD$%h+dgg.!A[PT6YpZc[QkB;[8#`\jOpd*3p%VABo/K(<YItsSM.c^>ugumdA%p>"G[Ipo_X2e$flAf+ajPG@KRF?uM@pT6Ak=Fud#O^nUl,8p<=8VC3$s+WfMR8HG865,2%84#OF9+f:tR1X1q3^`jhMNd*SL2eXd%OoV[CI'hu,3&J##Of,h'Kgub"9hUH&5dhnGBE==EHTTLomk$6@Bl[5nfjQf,3E(ikY)A[O.CF0[.P*#4Yj=,2CFic&>33Sb93H7N%4>1876?'](eWHN+Nk)HA9<PAQhpJ#_Q0Hqph":)pmq=4FHpe^e=5.=>,AQOf(1usC[Z2U^/:f8jn?tlt!F^'S3=EJ;B9RNTR->kV%bFNIAQIj6:Sr*Kd<##W:85WA)$#1p1%jHd?h5\Tt:5uR#A$g9P2>l?%D30VQBgjo>FEQ*r&7eCVLc.[a6Ta"Zo88!H_^jB5SPACl%\$A>LHDIL^[J3"o,F>bu2UuN-At2$@=(%b$jK)CNI55-,lpK[+o\E*bQQ'Ac&,R]ghro:]-E"E77f4BghqI;'qBg&N<K(*<q$^IE%63bX<;=#lD;iLB.rq<>8q*5pOO/`A"aT7h.(0aO:P#j<h>\*.j=Qjse+sQ:o@o\D!^;Y(?p>pq3l$5HuJI5Pt]c\:YLe!aIoZAjK%A3qF-R*ZLl+L,L(9Et_5QEm0\dJ-_D%:9Pa8*#JJVOY`R*(h*RR+'ERbCt2cl&O8oq5hL%jUoO'Bs,'lrl@U,LcTj<LPE!/F0/e$%_;]#Qa6B\(4ae_.34W.Rl@@O6*:iWH6d?qF/TB-PEdg++4sR9&Ft>BJbObkR]h7e40t(3MO^WQ,*NO3X)b:9<!qD4A>j`j^g4&UO%80#'*H2GXS:-6P@SL&Hf)-S,'^P&=.0rdK\h7idPPS+Qo&?#;NeKh%>Zm;JEY26Tk1=qC?C"dMK4!6F>LR\D%O>G")$]K1jSD?q`%R#uaP?ECDlHB[AX;j$ZLUS\OP>@0[>2Ni'.2bFolT_4NlLBC[f1[=6kI.S!`WBUi[At89oI1AuS@nsN!ToUg>l]boXnC<b4@\KVA%098P=*L=P)g,^cPca>VQ2RO%*[X(<DXkm:/<i='Ie`h6oI@\!FXo=Z[Xiu1'Zuri[0(FL.QLZV<;\GIL,]3an8s!(DcF<tPEpjIJ%DKp@kK8_//1+1g60heV5lU$<+H%34rh5d@u@D(53Y,(2N';TA*;-tPg,ZZ)OJ2cOoZJGX5SKqjXPO3G^3cjc'-W^/(q?lP,N$oRf%n7n<(mTgc%TU3B10*mCK6!q#dAC+CJcKGA+qW\O#^3Xun?_&OmZ9u*8iYgS"=5)\_`NS4sjJ]8drHi9\G=g'S6PHJB_u)`@#K-i0%OE82VE\;WU1S-`Y:!RaVgLoVjm\9<KIl[@_X;E46*n`f:,tJPoQWA$IAKo-QK#i>W&_6OsB@m5_Z1iuX28$Pr5Xpq$fHJu@0M\T]%/+[B<]Y@W=QND"1dIY*?hPsg?#rKI#.[R^N`!5CdF2/`8/pVYlQVNcdg^3^8H(DJVI43T(h"KsnmMPZ851K$[qV=?bC$rJm5=jhD%2Yu5n'M<0ch(JP#L.*2a,B]iCb?sO;Eo^T3L!.*ULI*9_am&A_5/LdDjtD,db:)ZJG)q:.QOh*U(G9YLJM]+M=WAj@e[qc"/E9T]%UaK8DWfOD1H(eRjG)nan@U2cK;LrZnA>sF9nX]uIL,\bCUh4WR0j6D6%ikYCaqkR!P5VI=o<!6IEB`C!/0C.6QS21g/e)OYRFrQF%iD7KS'*H>1#Ci`Z''oN=A2A9N+<nRAXPc?q/Ksfl:9Poip$Qu7kh5>%3];<bnHL2Z`k[/$<J=(m+%cbMT&cgCp_Bf.2aMK4"-#U%%"UK![LfYh!/AQu]KTnNNW$5l&7B49;_24$iKM37(lfZEq(*[c=?IOOnQF_t):e(nS.1jSC-_+W0c^8cF.Hih,JV;/*1DqA]jq8ZJ%K(G+c+Nr/2;^/97;KA7;+^Fs\cN/SR>S4X\T2!5-Gc[<o5Lbg=4(E1Jl,3HSOp%U%lMV%>)e!pF)4Md1Rj.Oa/*%BWB^2V@JJf$j%/9'2L0'_\=cbQmJG?c)>@QtVnIBW!dXC]Bo:WK&M3G4'e7gP4Xe13N8&lnu?6(:[#nM3Qe_%hSlp?8!.[V7r>$q5N83J)=,.3(3g%B/:XCZ_l&(*5[bof^PUZR?r!/1/I,@AH#Kjcb1g+auqDUglX;)K..JH+m5&5(V&]t3R=78T9jc.pYJ(!aE&uoEmG/8=3*;+j"I*b%G14F_]IN8,aj-^GH!q<*3Yd`1mXRH+*A(t3MV(B/rILk<c]+/;Y^Y^Pr%kDVWN:GMM+%@pIO3:dBh:IbfUKEO:6W:r:3T*Xe10TC%Ya,ck[(FCQUZo#<kWZ?D3d4qPd"9QSUN:P.S=u^ajtT;q28AG?XSH2*ZOVZ9)g6>S)EKoph*mklU0Q0;E7[Q$?I2jLFO!tM%@rg/%B8ZYUB6C..n*<ef80"73`WU)@nB&8"gbb`8c].EM0<__VhF.f5le[XpL\a@j5OL<2.<EhX7FAe%(Y=:m@0]Iphc`)+@Jp?U;OUk:%S8-Zp32rd[mcq`o`#UljRF;js1Y:p=AFA'C4!6^Ja.*Ccdc$D_(V+6Z*M+53B3&@%mR&@]GCn#Nr$fO4fLbu=7_d\L43\dql3D&$%ejdEl8OMo^`<BKlNrMQjW"0_:L:uEqe)a+.-"=.#ILPb5?\kuV*AFWgi]D8q9>;!ffGKf-+?SC(ms\8C_W=5hHNckthOTiEV+9B(%XLp]&X8]9><^q(jc>Y<&f#c5pT+>T/C^=)IeI[#Ue!a!;'d>DA(8BFaDMVRh=#VKlF#*]G"d2/Ma&V(L"Q5X_88cU?f5S;+XQCcr%nW"n,)P>rFjP1XD$YN,<mc%<t=11MTR\%umrcn$5IOD[I\7:Kl#<=B7SPQ6uJ&_U8<@F43rX7IERnkGR:meFlAH(#PL]iGt6W%5d%,@/_"Ojm[Cr(I@%O`!NUlD,ZA.UJW)?UYa6b.p5ZEBh=c51Q`I?FR3`e+ZC2_*Fm[R1[7e$Ou&"9]pgK-k9#*kk'>R)$[qZCt`5D%%Ft#DP>oI(6=YpqAeeb2@$KR9@8.@"WIiF&9iOB&<.s!EU>AgC/1n+9BZlY0DU'[Q+bARBB%q/S\5$hJ_b^Y;n-WN11.GW(V9CsY%E>LHh$oQpVF0ZqkF#H[;m<HHc&1Nk_iCK72^`"7*XN4mHTqrsBUdKVm!-Rpf.T@-bEh'%l,B?`4m?R2j@dZ"'#j3_6i5Tqt>Sans%b8R6<1u[RH2Y0;F,@P\S3=ibKkEGWV\>_;Fa.6t;Q.NR)-b]AC]e\*3#JIdsA.ZF]TaN/`27C?b))S(0-_bcijd,%'ZW8.!bEZ-s%_Oqo";M?O+<:j2:dpH]6NVlIab/h'>5_bAkj_@s9Rj-kYZ^:/]e']&1V'aTXfH%iWAO`,W>\4Cd3tb$GR.J*tE^"bmJX]E!Z/"TP%8U6`6f99NG%SJJ/MUciUg:EVK>\,n#"(-pgSO'uOg<-KlQbn=.IlV906-eC!Al=+^1<hfW"oWG@>g&XXf0^Wed+0Yt28`MUO#*'R%d*R(nZ+I8j`gsusFiZlkeCB[8[uS#1H:tEDhHs)\,Kf]0l1TCJS\:C8X+*/+MOL.^lK^Re>1%$&PB9TA#odoK2TXk0CnI'.3c^3`%0pd6*a`YMu3st%*\X#8/Y),?NTW]b$cpmqJbJMDg^;<8T\%_DVWf*`#7>h6'NeGe?jui.!S58!Ii2.0!/9e\OUg+T-5*59XHL!(d%)d,9s/s$EBf;5[\JDFT)Psq&mIDoL[et]r?'(j^/f2ln4p!rq$$?W4%2*7%l-D'`JI>.Q%W'L=sm[!Ou:m.<j=*HW[BMi,,Or=@P%E(@e7*-3HO9?nsSYK%l%+j,)uFSi_`cJE\t:]BAM$4jg6q1o5J:R%NUnFW>ulRVRLF-K&KC/.W5%h_A!R*#;@a`QS8k6c<E1+bRu%RjO`3*IUB-.8!]I?hLCVJ[U5FqD5>Clu_O>A4;^mh2Y_aX-iLo>B2oQGCc5YPd0$.[Rkb4\;u4ImD4-Zjgo!hfT-4Krg?6j]Ct,r%cMd\`V=@b/rQZNP6Y-atb(Lmh@rDt6hK"nE[4PqY0rD\p@0BsYj_uc0!-3A7k@"K9gMH:4Mu\gIefI:ocecc5RjX-pK]Td?(]dI6%-]!<QO3P?O6ib):&OR,'Tk)%hq1K0,m-X!?WK5(\*+R)1GB&2,KUE&W>1s'.e%0$#!LPs+$mH6KXUl!e3"gfKf2iA)&?-h-!$KO!%`#&P1PSip-!iX%/P(sE92CacA&-@=3ZCH2D#bgct7@kl[d!/D!nJ;WX&<NVA*^TiR(FnHA=FJ=Z#`aQL_YM@Mb@28uSV@]+d)?D:%"CX"/7h#sL]KGFJC986YE(jnM6O8nb>WqWh!p#-GP<oNUR,/n6&40mWLceE<!=0^e&43$\G85.O&0UX]ScAik^NjN[`s;aND&W$[%6%Fit0$-2gk&,u74DrWhb]oF5,92`Wh&++0&fNa6%l'AUiHoB]]<mClZX=4?`*&!@@bg"8Xg6Go[oUm<@e7uXBge5CT^i@aM>K>a%qN=A`$6M.j!D+beNO+Ti#cj>NDhfNk>W0aOHb+GYMeko^i!ZN1s868LGsET)F"^;*kFlV5%HT$i,R\;E0qm!*V-KH7N#F/G``=Z/%D4_'[a@D^OI^FC4`EJ@sVq\<f=dR04;h)h<[Ht$ZWH^`e#9o@?2ahb/,/QrlT771b.Pgh=h9MGRP$c)aa,o8G.fX/C6m0]&Z"*U,%=RL?^>BU#'NV,hn,;PSp<UHun=FS8dQqhp29&jEL$M<.7.8Q.!.5JRb6D9f#Nqd,hD"!PK;eTl;+g96u:g#/\b%$Tcn0t[UL8Ti&%k?.7!UsjNVOs79;IEg-s$nbS6mYY82VY#nEf,1Ca:(Pb/l[$(P9/"AQe.@oObH(mJ\Ba8dU'07=ll8o5$.-D;kMJGZcr^H!V2.gU%%hbTLS.6l4SX/spQJ=fV2YS@E6)g+h'I3P>L^c"PP'Zl].gZ3/L,;MAFf2Kt6^5P/%cIXQ_`O5?iO!-So)8\PN@8;IPC7')Fme)i%-1I7ao+dO0bX2Bs[?Ydl"PacVVpI5g^l<?XG+oOQ<Cb=n'#q'+hQ(ZlT0c1<.WpIE\g.K6^]\p9VZK=Jb,`WNkL6G%#Y]oT1^4Lp%dR_4)T>hNG<>ooaPWKMt(GOs&\)a(MrW5<DWl&tS4O2/6IpWLW7'/<_s2]tL!KP`GXPhN1N@4q3eYkj^>"=1q3p'W3/\0G9ImK'a%-s&;Sh"B'M(UVb@r:#u)!CB-l/%E1>LdE4VUCMio8&Fa8F!c-)c7&!3Z;ZU#Q5eLi<aOtW?"bEsXZ?2I2CoDYjN!tu;9CGeE+IAU%%S'hMio>4+AH0#IqJl?n>3&YnXuYUHO(VXWes`(XIDn`BBM%4f=+;,g#ZPO!+].UJ-+8g_(VD'WPkQ!hBiH+U)s(^E?K^dp&4JmM%OmVPTBS'YW*2<6,7__#QELJu:KHI#[>9!P'@RG)PYuma1qp5_agQt7WG%)!LDNpGajC&g4P,`lmO[2?S[oapnQsMo0Ik:Frl$BZ%%aOAYYFA-&MTNg'8+M8F_!k(DjWM.C[0(um^Q,\?:-0"`1O5(!kJC<gr1rKsuo23!\qPm<3/<H_=F@P@`+tMD>4U^GY5<=NtC*""T%P!$OSq#FNG6N):@."dQODt3G.HTm:k;@a>iG6K2PN^*Wn8'$=#IQm(J'11Xp+FG14aJ11/gBVI'W'cL1^ck$i#AN_Z0L_YOR0GNo%R`kXX<7`@dqGn+MGn`?I(Z_#Wa6]R6:qVseL*t(i-G\nX)H9%\1PNrf3e_R0K#i3Nc^f44*;M/`W,isF/Rk.4r,ThD[Rc+d#Z$Q1%CllTC%%(2]AG&M:,7VtRJKG58eg=f1iDYjT_'?`74HYtL-`b7u:c0!/.$&KtT?OGS$m#k;BPL:N<39-i)$<);&c#h5n9bE8W)^U4%RUfA8])[H[ips^O.;HA5gf5=1!bO]h-6Xr&`KS5FLPiNL\3hr%KVcGbik)MhOuX)n$pd0pncbY7&.2Nc(`5mq9$lZs,hn-QnplON%qI[9&>#QhIY:lU%R!cdI<&,U+Sh#*5WdH[EOn"H8`f2[u;AV=1*m:(Q=ll>g=f89U2\#qIA_\tsJEIi*Y,6TZ"UHXL^0cR];@8&/%5!ht9@Edhl\qu`9ktfcdg/FomO,oF<1jTkSDA/(t\(A2'07)\]P(LEAV$G=?bh1foMXhTa=:OSXn;U94/$G!eXO$P#&\g>50k6rt%Q;CY`Xh-g2rY2<Rl;J\F*=:a6Qu^#IE_^n0,ppqD<JTm0q3dZ&q2:(YrYNS81c#;4A]NG47]Z^j9'D4B.NrXd$\%U@%PBe5,\:3_%+[[kg/[ZPfJNK/C,;-?V5\UV>4VA(Qkn0(pX#acUP,o?%Vhg(NqF^:Y[XE]J)euZ!?JXQMdh>;f)O*Hc3tfOK0]dgDjBV9D!\]N[%kI6ZBF7MA5mo*/0n*AD)PX2@:A1S2O](E4ug2lR2X0+T_B5q@6/#<Pf!(,3pJP>E+1Su(gZR8f$&sA9D);.LpD/`?\EO-i-=W3a=%'Gg@9kIg[2;KOWA/A7)V("SKeX0=U]$L9:S_Kp\t@?%:^YX\GVQIj6jWjgYg>[aO8YRA=!qf1Xo=B&:QR2Vo<;ptOhMaJQ8#kAmq%0QP-;p:VbN&+;.7O;$`Ek(L?%qXB*Z/ibis?S1X:/[bca\`ULgR(mnLU6\cb%s0lG7Mdc?JN)Y;o'QQ<SLE[3'-?;tT"U3M\348!%eIYOr;/'1m]3e07=Y'Eufd^3Ucrh?a`!n$nU%k*BY-ZuDl`BdP`*un:O=Qb5mE4W[$S'>h'dL]$Z4nDj/L@s^EqPdk#l5*d)-p*N%%h_>J0P,gEjBV9T8kbojWXcq+nhV_u;g2;_e%_9m,*()u<*9u2H_SZgZs(.CQ=]Pe<*@edSgfJ26p_nT`D#o"9<'#1];%]J-r[K?%\1-GUhGIFi4O_aWeOV.#QE7tgDO#nu[2)`-A_KaUfn3O-l^77Y)fe,fGCc5YPk3Z:pN_%T]as-fkEX%#W\Njqj$1<9kl9-'PSU:p%5oRMGdI3+qZn@K`)#n;tF_6@&:I@$4NWGf-9-<!8gEcjLRb_hgd*>*Ye[tlNE74KJ?f`,3><)_W<l>V8!MGEg/']+b#lnhDQIS;%%W8X+%L%p]11&M^!Om!;U6R;L1A7YS*7"<Q$=!A1T!&:rc@Qb1'!M?V)(p)fOY4td["jX$$p^[SA<X\GiVV1Al!7[)NSpCYB!J.(j%,!^m9&<MD&0d(90"G&i#UIR'X\7elWgn+"1X7?DlKnS\iXNA@@-OS@bR:pe)Ya)V.:E5oR&1"9r+Afrf7BI`s@7Ue.)&@iiXc%lT%UHjRQ0T]]j%KrTj'&l.qWCs8q=<+:0H)5]$5-<!YM[)MajNYs>a.bM^,RW&jG(W6b(^8UnUGah6Zn[kN32*!'Up,1'MBXbhjBm0\%#`)`.Z;;+dT&$2II!oD1oahH3<=%9MYRchn?BHAeR@X/2"JHZ#D`pL?;#2@"`?pEF!Pt^D/-sm-dNoZ^qmVUqRB[l%67aO6`)mTI%?Q,Gs=AYKG@`M:V\0C/W(?B0sd`=$dQ"7X.X@lQK'+9CcPVb`Y#a/,mV+r`\e8XSF=&t.]D'\'pk4^C3AJ\2qQ$:\`"i*9$a5/"p%oAWdJ&V)pWJp#^SQB3ll2D)0_hZ)U*)oa-5)PVtg*m#5=Sp*2*jAVd6q+3>8(/$$\lut%.5QH.&po;H\C"G5RnM5r,hH:L.IH<#L%b*39p>u-?^n_duQJCL^$dqZ'G<i\^3q!nI;iM)ZMQke*f#INnY<F"[UhP=VGF5K8cHErjHbOB(n]#$D)QdV2e17DP!Q>T*->':F#%5[mA";YZb_f]9?N=it"snc!IBYfij1%g,d6^Rn@KNg<bU>t1#e\<%@Q?CEVsJ`bJYQ)iJOs0.;TggmGIB#Urccgn^0"Wa(1ff`P5%JhYjTHdsWi8N+e!?@[0U71+^GTsSNNVTF2STeh*>c=0UQ^040FKIYN^r2??i@oGcagr*O665WrbR5%Fu(Y'[5a(*9q.[T9;qnot[%'$=:$[,.cqG*B;\cQ?hIHl@NQXK?Lt[WGP6$fk\USm$,3_ED-*Z6]iL:l%2r(8#!i#RWRm#W@7@:_ltQ^31Te_>Rlg9%)"B(Jo42%E0jAhX!lMq+?m0-6l)BaD_-K]R^"hJkf\QD:65^>SEPcRO\3Z1pnoFud-9ufnIT9e5'6[\][#:/YS)+%luFh^ACuasTO/Cn4`MOi%2QDa%JjHV%b"*\3KI+;o1!k$'gbHs#BW9/)o?^jPQb<K$B!i]&n\WZ%mqF'\j%AJb$fRVA/C5(-ZZ+9bb!JRQnppN1*-3`W9?o!T%0C[GiEiqLc@:ns'qc[AVBWT6f>Wt91F#6pM4],W>,'4N"K18@>%;8gK9SHGS]bsmRl`5[_K1_1Rg7_YlnI3Y7eRLE7NJ2:G1D]$X%I9@iZcstIt6ZYM?@#k'H]d7<QG;j!rP7luiG.N)c?>&YR9I]2+LLsd@4FH1Pj$B7Z?QKMo.J.;99BnfH/C3RJ8H!8E1un4Po]K%^%>';;Q9oRP9qWb>Rpm&d9:.lAaM>^R.kYPj\U-j2kK#fG(>k"&L;r1m>Vc2\^GKP>G?KWt2Pq"DgY[UCl$N\"2N)+6<_5t^p>4!hB%QZQFkU5p%Wq$<J\5UN]\G3d1Nph^VPmUJq)rpmlb=GF(D@e3Y-Y>B>q,;V^R@JPaMlkh1-LpEgAZ;bOIioi&dZW*_L4s<2PH)1E_%TD,pYX_5b)pLn8:DOQ-TD-.5CV-ji@fTsL>3ZYhdcB:,I]K&IL%/hS#jG[mXL6Vk5")A=WfX4*bA4dIUM>\!D^O=$WG3fUA]&^2&%Q>il=*?srJ!RYAHi0kohUA7cjQCe$@l,kTl5&_[A8R?h`,\`m,Q@,`R4!c"sMG\j^MH8H23]da5>nbOg*\JM+57e\g7%l1a0i1eW%<B#2lY9bVS8IWTiOCtd1=Oefp6gTRk,6;=tP7+@1KKW]K2*?c!QL5h+4<-,8NK.k^<5hpBg6OWh:nkR."CM^ua:fZ>71#enX%6%.%>-Mgip-Q9J0)r2O$J4J8"1FPU.=6#FWtjUo/$R8p+;K6](`mj=P6-E^#FAB:o>@0+]_kkX1BH"APsZE`N1jt2N#'LqV%I#q.hWjJ%0BRLFG_J\;VARHB->?_BY-Rh[!qh\tf]-iFZTMC@;2_UY8[s8-naVVXW>n8pX9kB3(nc!;$aG8HU?e.%;c,pJEiBd11qA[#^#ia-%<ShR:P,AWn01I%:(OYR^#*l@XA/qD6gDm_djjc$[S_T;qIBGtDgU!3QU)o;&+S>=H&`KbO\\:D$9e1@B/#8D6dBtN[OiVRG-BsL0%BPP.Za6`IgB[ZaG+;60,.%LMHmj05^;k")g3N#A%i'\f'fojnU;iuJ]fZ1Q<O[*V-R(uXl^M-,GRD@n?:ZJMHPmC08aSis7Kr>!P%lP`Cea[c0CeYb3;6]77"A3@Go"H8q@9J&k9oIf</%+cj-HI@pCM^Vh91*3EJK1aehSoqrG7MKH'FCr)]qaWiThN1NLkftR,B_!$^%Z30*=$^e682[sD`cZJ+,A+efNj,YJ^KNZ.)=k3c,\bd@j4N4I/E8eC?m"0I>*]8U8`56G"jl=U%kfDM\pJ[DO#"]g;1(]WNZC[c5%TZl/P7iujkI(1j>Us:RBASNY<\?"E+ZnSgr;][t1/PT2pY-G`u0YD3B:6f-8$'aa8_tXoXfkF1D^q\%G\2NEr'Y;2/mWD!nO<r^u%,i"M9]RVFE]Hq3TpD;Ir6oiSaDP*9Ifo$X<Ak&1j0EtiF9j)=,&L,,e@#ZFuX^u_;R>YR\4-"uGXG-aY*At.tA@3rs=M<ujp+/A)%P/C[Ic*")I((*$SH!X%-9h8j4YW\aAaM`TDODEL+8+u\F\R@jkE+NIVlr%ubD01o&>bBt?<&]NfDMV@jUV6L=b^NaVaO6_7\e\pm%NL0US(AB/OZTs="`>G2$j_ZI/$eIOZW@6HAXR:^S=noK@RhO)e=\'E/-NssAl@B[Y,>UqL%?!^ZB$@+6cU*=D':8G[p%\\?F:9l-%UD4-;F5Jf)FJ'b^mYG>+DM3@PZpG!aJRo%TF*+sQINb;s*3`[o$!-8'Q;VS3m6LWYC28EgTc7c1[:"`,UmAEK)%%LO'[9GnnU!'6%9_#9\)/<816[,<<4;Z7=G/Tus$jCdb-`cIkL@et*6Rrl2`*RC6WR7PW`._kNo*EH,E\g%uq*'E?\q)WmrY$5m%.PO&%6B5+ds5cV%4^8bULc22?d0>TF'H8m;/iG+k(i!lT%15F;MO"Uho$hq0gO(W_H??\YI#QFs\iodJ1(*2PanRAUkc"%pp+\mRA['QH2^?h6BS;t\%CpdnK[Z`6Wa^!Zc&6ji43MX\&b#90:d^hMLM@K)>O(eZ\CGXV9")#g+[OK`69MNgK"uU[S0@dYk:_/`?\g.0gKr*2$\6Md69^5!?%.p\#8.J?4(^<&-XMGZ[G<`*\qPg@@T\!t3ZjKiYnqm("q.%1nMP&.3#J\/*iD8;NhEjk3-aH^@4g/A-"C,,a?BbbumfX.U5?FV6>%.clgFR_H3T0c4BPgPmM\s48Ui1$66Y@#/5($u&M$n$\Z9NJ?X>=ZodG63*Gt)@XHY:i`9PHWZBD1l1,s+"`;rONls_Ao1^TcZ7bG%K%+C402jSC(WoU0Mbb^OV+B'SWHg.$$ikqRWFZH9P&)R>6sg045)c)@6<WP):2SI8.6Pm6EQ4PC,U>K1Rm'+*>76=i<rJR6HVZ0D%#)&/>U,4RnPLM*66_-Qks/?#6ZhBOt8="DNbe7.)U$%eiLA[dc]%/=\YP)SuBLtKsdD^?jr=pj/l;ZH*G:7Y\N%\S]"`ru>Vf7N"%?he?tgYmI@*0`-5HOhP]TD?qV@qi>%T2U++,lU]n'eRPm[aT%jgrD=3+f-IMPN2@e_<A'BGVgB)@#2t$*;5<4_rqh/=I+Y6[QfTk%K,[BFgSK$TEC]>`:B2RC7;#O_H/siQBE`1:<r;TnYXiK9dtcUa7is\;]j?#dok6"\L!ut46&A$"Z.B`L;@Y#_>Ukt:dj_9]dbG0Z%C5ZgcS:g(&a)E:IeVg>Z\Z;MQ"526Mk\>.=%nKkBq/527!IMcb0].)K`!"]^J@)m5&/HtNNIN/^Ho:#$(e\7d\Zr$-G,[A[jMW8O%B->/lp8'7lOMI.bMnQ\F*mD\.['\eVHf(GiciqV'p1jaq_<[h6kW6]s(u7u43o`oI5/Su*HoJMUH!gF8K1YpZbZO;V+aLOjPXOi#%m/<C"Mo=9Jps]*30E1(2s88KQr/E)V3qi85dOj2K-scW.02IXIs8&WXr2Y=rrl[P*q7jZBr-s1olTb<b:Oi/W^\dh&^]'#'rqtZg%r;,$;rq*[ls4=HHIfAr2s75oVs8M?afRN_hVn`6-\%ht)YJ5P_gOK+Drs#cY@\<\Z&-)ECs66H]$Y,"]\c~>%AI9_PrivateDataEnd