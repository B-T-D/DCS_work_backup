%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 004x001.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 361 309
%%HiResBoundingBox: 0 0 360.0161 308.6895
%%CropBox: 0 0 360.0161 308.6895
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 112 8%%BeginData: 10056 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD2EFF7D527D5276527D5276527D5276527D5276527D5276527D52%76527D5276527D527652FD5EFF527DFD04FFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFF527DFD5DFF7D7DFD1FFF52A8FD5DFF%52A1FD1FFF527DFD5DFF7D7DFD1FFF52A8FD5DFF52A8FFFFA8FD07FFA8FF%FFFFA8FFA8FD07FFA8FD06FF76A2FD5DFF7D7DFF7D7D527D527D7D7D527D%52FD047D527D7DA87D7D7D527D7D7D527DA8FF52A8FD5DFF527DFFA859A8%FD097DA87DA87DA87DA852A87D7D7DA87DA87DA9FF527DFD5DFF7D7DFD1F%FF52A8FD5DFF527DFD1FFF527DFD5DFF7D7DFD1FFF52A8FD5DFF527DFFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFF52%7DFD5DFFA8525252765252527652525276FD045227525276525252765252%52765252527652FD6EFFA852FD7FFF52FD7EFFA876FD7EFF52F8A8FD7DFF%52F8A8FD7EFF52FD6EFF7DFD0F5251FD1152A8FD5DFF7D7DFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF52A8FD5DFF%52A8FD1FFF76A1FD5DFF7D7DFD1FFF52A8FD5DFF527DFFFF7D7D847DFD06%A87DA87DA87D7DFD04A87DAFA8A87DA87DFFFF527DFD5DFF7D7DFFFF5952%7D287D52FF52A87E7D52527D7D59A8FD04527DA8527D527DFFFF52A8FD5D%FF527DFFFFA8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFFFFFA8FFA8FFA8A8A8%FFA8FFFF527DFD5DFF7D7DFD0BFFA8FFFFA8A8FF84FFA8FD0BFF52A8FD5D%FF52A1FD09FFA8277D527D27527D52525253FD0AFF527DFD5DFF7D7DFD09%FFA8A8FFFD04A8FFA8FFA8FD0BFF52A8FD5DFF52A8FD1FFF76A1FD5DFF7D%7DFD1FFF52A8FD5DFF7DFD06527D27FD12527DFD0652A8FD31FFA87DFFA8%FFA8FFA8FFA8A8FFA87DA8A8FFAFFFA8FFFFFFA8A8A8FFA8FFA8FD0FFFA8%FFA8FFA8FF7D52A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D52A8FFA8FFA8%FD12FF7D7DFFA8FFA8FFA8A8A8FFA8FFA8A8A8FFA8FFA8FFA8A8A8FFA8FF%A8FD06FF527D275227525227FD045227522752527D2852A8522752522728%522852F8A8FD12FFA852A8FD11FF7652FD16FF277D525227522752285252%2727525252277DA852275227525252275227FD05FFA87D847DA8A87D7DA8%7DA859A87D7D7DA87E7D7DFF7D7E7DA87DA8A87D7D7DA8FD12FF527DFD13%FF527DFD15FF7D7DA8527D7DA8A8A884A87DA884A87D7D7EFF7D7E7DA87D%A8FD047DFD0BFFAFFD29FF7D5252FD15FF4B52A8FD65FF27F8FD16FFA8F8%52FD64FFA8F87DFD16FFA85227FD48FF527D527D527D527D527D527D527D%527D527D527D527D527D527D527D5252767D527D527D527DFD08FFA87D52%7D527D527D7D52527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D76FD2AFF7D52FD1AA8A1FD09A84BA8FD07FF7D52FFFD23A852%A8FD29FFA87DFD24FF7DA8FD07FF7DA8FD24FF52FD2AFF7D7DFD24FF52A8%FD07FF7D7DFD24FF52A8FD29FFA852FD24FF7DA8FD07FF7D7DFD24FF52FD%2AFF7D7DFD08FFA8A8A8FD0DFFA8FFA8FD09FF52A8FD07FF7D7DFD05FFA8%A8FFFFA8FD13FFA8FD06FF52A8FD29FF7D52FD09FF527D7DA87DA853A8A8%7DA87D7DA8FD047DA8FD08FF7DA8FD07FF7D7DFD05FF7E52847D7E7D7D7D%FF7D7D7DFF7D7D59A87E7D527D7DA87D7DA8FD05FF52A8FD27FF5227277D%FD08FFA87D7D7D527E52527DA852AFFD047D527D7DFD09FF52A8FD07FF7D%7DFD05FF7D7D7D52597D277DA87D52A8A87D5252FD057D7E527D7DA8FD05%FF52F8277DFD25FF27F87D7DFD0EFFA8A8FD14FF76A8FD07FF7D7DFD0AFF%A8A8FD08FFA8FD0FFF7652F852FD23FFA8527DCA7D7DFD24FF52A8FD07FF%7D76FD24FF52A8A85252FD22FF527DFFFFA87DFD24FF7DA8FD07FF7D7DFD%24FF52FFFFFF5252FD20FF527DFFFFFF7D7DFD24FF52A8FD07FF7D7DFD24%FF52A8FFFFFF5252FD1EFF527DFD04FFA8277DFD0F5276FD1452FD08FF7D%FD25524BFD05FF527DFD1CFF5252FD07FFFD11A85276FFFD11A8FD09FFFD%11A8FF277DFD11A8FD07FF277DFD1AFF7D52FD19FF7DA8FD2DFF7DA8FD19%FF27FD1AFF27FD1AFF7D7DFD2DFF52A8FD19FF7D27FD18FF52A8FD1AFF27%52FD2DFF2752FD1AFF527DFD16FF7D52FD1AFFA8F827FD2DFFF827FD1AFF%A852A8FD15FF52A8FD1BFF527DFD2DFF527DFD1BFF7D7DFD14FF7D52FD09%FFA87D527D527D527D527D527D527D527D527D5252527D527D527D527D52%7D527D527D527D527D7DFD08FFA8527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D527D527D527DFD0AFF4BA8FD13FF%4BFD0AFFA852A87DA17DA87DA17DA87DA17DA87DA17DA87DA87DA87DA17D%A87DA17DA87DA17DA87DA87D52A8FD07FF7D527DA87DA17DA87DA17DA87D%A17DA87DA17DA87DA17DA87DA17DA87DA17DA87DA17DA87DA827FD0AFF7D%52FD12FF7D52FD0AFF7D7DFD24FF52A8FD07FF7D7DFD24FF52A8FD0AFF52%A8FD11FF52A8FD0AFFA852FD24FF7DA8FD07FF7D7DFD24FF52FD0BFF767D%FD10FFA852FD0BFF7D7DFF7DA8FFA8FFA8FF7DA8A9FFA8A8A8FFFD05A8FF%A8A8A8FFA8A8A8FFA8FFA8FFA8FF52A8FD07FF7D7DFD24FF52A8FD0AFFA8%4BFD10FF7D7DFD0BFFA87DFF527D7D7D537DA853527D847D527D7D59527D%A87E52FF7D5952527D52527D5253527DA87DA8FD07FF7D7DFD04FFA8FD1F%FF52FD0CFF52A8FD0FFF527DFD0BFF7D7DFFFD05A87DFFA8A87DFFFD06A8%7DFFA8A8FFA8A8A87DFF7EA8A8A87DA8A8FF52A8FD07FF7D76FFFFFF7D7D%7D847D7DA8A87DA87DA8527D7DA9A8A87D7D7DA87D7D7DA87DA852FD04FF%52A8FD0BFF527DFD0FFF52FD0CFFA877FD07FFA8FFFFFFA8A8FD0CFFA8FD%0AFF7DA8FD07FF7D7DFFFFFFA87D7D52A87D7EA87D7D7DA8A87D7D7DA852%7D527D527E7D847D537D7DFD04FF52FD0CFFA852FD0EFFA852FD0CFF7D7D%FD07FF7D7D7D277D277DA87DA87D52527D7D527D5253527DA8FD07FF52A8%FD07FF7D7DFD09FFA8FFFFFFA8FFAFFD05FFA8A8FD08FFAFFD04FF52A8FD%0BFFA852FD0EFFA852FD0CFFA852FD07FFA8FFA87D84A8A8FF7DFF7DA8A8%A87DA87DFD04A8FD08FF7DA8FD07FF7D7DFD24FF52FD0DFF52FD0EFF7D7D%FD0CFF7D7DFD24FF52A8FD07FF7D7DFD24FF52A8FD0CFF7DA8FD0DFF7D7D%FD0CFFA87DFD24FF7DA8FD07FF7D7DFD24FF52FD1CFFA8A8FD0CFF7D5252%7D527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D27FD08FF7D277D527D527D527D527D527D527D527D527D527D%527D527D527D527D527D527D527D527D5252A8FD2AFF7DA17DA87DA87DA8%7DA87DA87DA87DA87DA8527D7DA87DA87DA87DA87DA87DA87DA87DA87DA8%FD09FFA87DA87DA87DA87DA87DA87DA87DA87DA8A85252A87DA87DA87DA8%7DA87DA87DA87DA87DA8A8FD08FFA852FD04A87EA8A87DA8FD05FF7EFF7D%FFFFFFA8A87DFFA8FD1AFF7D7DFD2DFF52A8FD1AFFA87D597D7D7D527D52%7DA8FD04FF7D5253527D7D52A87D527D7DFD1AFF7DA8FD2DFF7DA8FD1BFF%A8FD0EFFA8A852A87DFD05A87DFD1AFF5252FD2DFF277DFD1AFFA8FF7DA8%7D7DA8A8A8FF7DFD2AFFF827FD2CFFA8F827FD1AFF525259527D527D527D%5252FD06FFA8527D7D7D52597DFD1CFF5252FD19FFA8FD13FF277DFD1AFF%A8FFA8A8A8FFA8FFA8A8A8FD06FFA8A87DA87D7D7DA8FD0AFFFD127D52FD%127DA8FD08FFA8FD267DFD09FFAFFFFFFFA8FD04FFA9A8FD16FF7D52FD08%7D77FD077D767D7D7D77FD077D777D7D7D777D7D7D27FD08FF7D527D777D%7D7D777D7D7D777D7D7D77FD077D777D7D7D777D7D7D777D7D7D777D7D52%A8FD05FF7DFD0452535352527D527D52527DFD08FF7DFD0CFFA87DFD24FF%7DA8FD07FF7DA8FD24FF52A8FD06FFA8A87DFFA8FFA8FFA8A8A8FFA8FD09%FF527DFD0BFF7D7DFD04FFFD097DA87D527D7EA87D7D847DA8527DA8A8FD%047DFD04FF52A8FD07FF7D76FD24FF52A8FD1CFF52A8FD0BFFA87DFD04FF%A87DA8527D527D7D537DA97D7D52FF7D7D527D537D52A87D527D7D7DFD04%FF7DA8FD07FF7D7DFD04FFA8FFA8FD07FFA8A8FD08FF7DFD05FFA8FD05FF%52FD0CFF7DA8FD0FFF7D52FD0BFF7D7DFD24FF52A8FD07FF7D7DFFFFFFA8%7D5253527D527D52527D7D277D52FF527D5253525252A87DFD0452FD04FF%52A8FD0BFF52A8FD0FFF7D7DFD0BFFA852FFFFA87EA97EA8A8A87DA8A8FF%A8A8A8AFA8FF7DA8A8A87DA8A8FF7DA8A8847DA8A8FFFF7DA8FD07FF7D7D%FD04FFA8AFFD05A8FF7DFFFD04A8FFA87DFD07A87DFFA8A8FD04FF52FD0C%FF76A8FD0FFFA852FD0BFF7D7DFFFFFD095253A87D597D5284A87D527D52%5227A87D52527D527D52A8FFFF52A8FD07FF7D7DFD07FFA8FFFFFFA8FD13%FFA8FD04FF52A8FD0AFFA852FD11FF52A8FD0AFFA852FD07FFA8FD05FFA8%FD0DFFA8FD08FF7DA8FD07FF7D7DFFFFFFA859847D7D7D7E527D7DFFFD05%7DFF7D7D527D7D7D52FD067DFFFFFF52FD0BFF7D7DFD11FF52A8FD0AFF7D%7DFD0CFFA8A87DA8AFA8A8A87DFFA8FD0DFF52A8FD07FF7D7DFFFFFFFD09%7D7EA87D7DA853A8A8FD047D7E7DA87EA87DA87DA8FFFFFF52A8FD0AFF7D%7DFD11FF7D7DFD0AFFA876FD0CFFFD04527D527D527D527D7DFD0CFF76A8%FD07FF7D7DFD0EFFA8FD15FF52FD0BFF52A8FD11FF7D52FD0AFF7D7DFD0C%FFA8A9A8FFA8A8A8FFA8FFA8FD0DFF52A8FD07FF7D7DFD24FF76A8FD09FF%A852FD13FF52FD0AFFA852FD247D52A8FD07FF7D52FD247D52FD0AFF7D76%FD13FF7D52FD09FFA8FD127D2752FD127DFD09FFFD117DA15252FD117DA8%FD0AFF51A8FD13FFA852FD1BFFA852FD2FFF52FD1BFFA852FD15FF527DFD%1AFF7D7DFD2FFF52A8FD1AFF527DFD16FF52FD1AFF7D7DFD2FFF52A8FD19%FFA852FD17FF7D52FD19FF7D7DFD2FFF52A8FD19FF27A8FD18FF527DFD18%FFA852FD2FFF52FD19FF527DFD19FFA852A8FFA8FD16FF52A8FD05FFA8FD%217DA8FFFFFFAFFF7752FD18FF7652FD1BFFA152FD18FF7D7DFD05FF7D52%FD1F7D27FD06FF52A8FD17FF7D52FD1DFF7D27A8FD17FF527DFD04FF52A8%FD1FFF527DFD04FF527DFD17FF7D52A8FD1EFF7D52A8FD17FF277DFFFFFF%7D7DFD1FFF52A8FFFFFF5252FD17FF7D52A8FD20FF7D4B7DFD17FF277DA8%FF52A1FD1FFF52A8FF7D5252FD17FF7652A8FD22FFA8527DFD17FF76F827%7D7DFD1FFF52A8F8277DFD17FF5252FD25FFA85252FD17FF272727A8FD06%FF52A8A8A87DFD05A8FFA8A8FFA8FF7D84A8FD06FF7D272752FD17FF277D%FD28FF7D52A8FD17FF7D7DFD05FFA87D7D7D537D527D52A852A87E53287D%527D527DFD06FF52A8FD17FFA8277DFD2AFFA8277DFD16FF527DFD06FFA8%A8A8FFFD07A8FFFD07A8FD06FF527DFD16FF5227A8FD2DFF5252A8FD14FF%7D7DFD1FFF52A8FD14FF7D5276FD30FF7D5252FD13FF527DFD1FFF527DFD%13FF5252A8FD33FF7D527DFD11FF7DA1FD1FFF52A8FD10FFA87D527DFD36%FFA8525252FD0FFF5252FD0B7DA17D7D52FD107D52A8FD0EFFA8525252FD%3AFFA87D527D7DFD0DFFFD0C7D5227275252522752527D7DA8FD097DFD0C%FFA87D7D527DCBFD3EFF7DFD04527D7DFD0EFFA87D7D5252527D7DFD04FF%CA7D7D525252A1A8FD0DFFA8CA7D7D5252527D7DFD44FFA27D5252527D52%52527D527D527D5252527D527D7DA8A8FD0BFFA8A1767D5252527D527D52%7D527D527D5252527D527DA8FD4CFFA8A87DA17DA87DA17DA8A8FFA8FD15%FFFD04A87DA17DA87DA87DA8A8FD28FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T16:38:06+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T16:38:06+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T16:38:06+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>220</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA3AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqwf807G21FfK2nXas9lea7DFdQq7pzT6pctxJQq1OSg9cVVf+VO/lx/1aP8Ap4uv+quK&#xA;u/5U7+XH/Vo/6eLr/qrirv8AlTv5cf8AVo/6eLr/AKq4q7/lTv5cf9Wj/p4uv+quKu/5U7+XH/Vo&#xA;/wCni6/6q4q7/lTv5cf9Wj/p4uv+quKu/wCVO/lx/wBWj/p4uv8AqrirHvzE/K7yLpn5f+Z9SsNO&#xA;a3vrLSb65tZ1uLnlHLFbO6OKykVVlBxV6pirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirD/wAwv97/ACZ/4EEP/UHdYqqeZ/NXmHS9WNnp2jy6irQxTQlIZ/TZv9J9ZHuU&#xA;WSOMj04eNVr8Wwbsqlv/ACsPzUlzKsvk+99FRaKhjErH1LhJWlq3ogFY2RBVQaA1bixCYVU0/Mbz&#xA;eJj63k67WFJGgZYxcyMzpJGrSI31dQYuLuVJA5cdvZVWtvPHnS6aBP8AC0tlLJZTXUnrGaSMTLC0&#xA;kNuHEUdDy4q5ZRueKhqEhVFeX/OXma7u7Kz1Xy5cWzXUs6SXsay+hHHGvOJnEiKylx8J5GlehJNA&#xA;ql1h+ZPmvUNFttRt/KNwi3ltDNE3OSQBrgzU+D0Y3ZUWJSx+H7XgVZlV9r+YPnF0g9XyjderdVWJ&#xA;eM0ccZVF3lkMTsquxJBaNSBsRyqMVX+dNU1DUvyd84XGoae2mXQ0bUle2ZmcUNk7AqzpCTs1D8Oz&#xA;AjelcCs9xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVh/5hf73+TP/&#xA;AAIIf+oO6xVmGKuxV2KuxV2KuxV2KsW/Nb/yV3nH/th6l/1CSYqynFXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUDrOg6HrdoLPWtOtdTsw4kFteQx3EYdQQG4SBlqATvi&#xA;qSf8qp/K7/qTtD/7htp/1TxV3/Kqfyu/6k7Q/wDuG2n/AFTxV3/Kqfyu/wCpO0P/ALhtp/1TxVin&#xA;5n/lr+XVl5OnuLPyro9tOLvTlE0NhaxuFk1CBHHJYwaMjFT4g0xVlf8Ayqn8rv8AqTtD/wC4baf9&#xA;U8Vd/wAqp/K7/qTtD/7htp/1TxV3/Kqfyu/6k7Q/+4baf9U8Vd/yqn8rv+pO0P8A7htp/wBU8VZT&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqV+YPMukeX7WG51N5VS5&#xA;mW2t47e3nu5ZJnVmVEhtkmlY8UY7L2xVKv8AlZPl3/lk1z/uAa3/ANkeKu/5WT5d/wCWTXP+4Brf&#xA;/ZHirv8AlZPl3/lk1z/uAa3/ANkeKvPfzvg8ufmL5Rh0iO31mC9tr23uba5by/rfwLz9Off6nWno&#xA;yM1O7AYqzux8+eU7Cyt7G00/W4bS1jSC3iXQNcokcahUUVs+yimKq/8Aysny7/yya5/3ANb/AOyP&#xA;FXf8rJ8u/wDLJrn/AHANb/7I8VUrr80/KdnazXd3FrFta26NLcXE2ha1HHHGgLO7u1mFVVUVJOwx&#xA;Vl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsP/ML/e/yZ/4EEP8A&#xA;1B3WKpn5p866B5YjjfV5WiEsU80QRS5cW4UuqgdWPMcR3xVQf8xvJSXN3bvq0CNYoZLlmaiqqyNE&#xA;2/8AkuoB/wBZafaGKo6881+X7OS6imvY/Xsrdby4hU8nW3c0EgA6j5e3iMVQg/MPyT9YhtzrFuss&#xA;8bTRh2KD00+05ZgAo/1j3HiMVU1/MfyYZrmN9RSIWqCSSWVXjjKmMS/CzAAkIw+Hr26g40qsnn7y&#xA;g97HZx6nC8ss31WJkYMrXFARErDq1Grttiq6489eUbe7ktJ9VgjuYXljliJNVaBFeQNttQOPmdhv&#xA;tiqUfmDqlpqv5OeaNRs2L2t1oGoywsRxJVrSShocVZpirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirD/zC/wB7/Jn/AIEEP/UHdYqn+seXND1n0/0pZRXnoh1i9UV4iTjy&#xA;p8+AxVLz+XnkgicHRbXjcmsw4bMaEdO1K7U6beAxVJfMeqeWNA8yxwp5fku9UvrIKZrVUH7lHVY4&#xA;3LMnFeUSjkdh8IwqxGfzD5Kj1iwv4vKl5cXM9zPbTNdQfYRlitJEijI5SssVrGoSnw1o3xGmKEyk&#xA;8zeU4F1G3l8pytZiK1aRLdBLzVrSTiWoVUFIhxFCTxq/QbKsr0Hyn5Lu7O3v4vL8NlNDcPJ9XdE5&#xA;RXNvIYm+wWQ8Xi+EjboRgSmP+CfKfq3Uv6Lg53rtJdnjtI7tzZmFaEs25xVKvzIsbSw/KLzXZ2cS&#xA;wWsGg6ikMS/ZVRaSUAxVmGKuxV2KuxV2KuxV2KuxV2KuxV2KuxVSuLu0tghuZo4RIwRDIwQMx6KK&#xA;kVJ8MVVcVdiqnJdW0cPrSSokNC3qswC0AJJ5HboK4qqAggEGoO4IxVaJYzI0QcGVQGZKjkFYkKSP&#xA;A8TT5Yq5pY1dY2dQ714KSAWpuaDvTFV2KuxV2KuxVhv5lLfInly/tbC51FdM1mK6uoLOP1ZhCLa4&#xA;jLKlRWjSLirX/Ky/+/U8xf8ASB/18xVC3P5waba3lpZXHl7Xory/Z1srdrICSUxLzk4L6lW4KKtT&#xA;piqI/wCVjReqZv8ACPmD1SoQyfo4cuINQtedaVOKrv8AlZf/AH6nmL/pA/6+Yq7/AJWX/wB+p5i/&#xA;6QP+vmKrLj804beCS4n8r+YY4YVaSWRrDZVUVYn952AxVZZfmxZ31pDe2XlvXrm0uEWS3uIbIPHI&#xA;jCqsjLIQQR3GKpT5686XmteSPMOjWXlTzB9c1PTLyztudjxT1Z7d405HmaDkwrir0/FXYq7FXYqo&#xA;Wl/Y3qM9ncxXKKeLNC6yAHrQlScVV8VWxSxyxpLE4kikAZHUgqykVBBHUHFW2dVpyIFTQVNKk9sV&#xA;aWWNnaNXUulOaggla7io7VxVxljEixFwJWBZUqORVSAxA8ByFfniq7FXYqxPz55EbzUdPZLyK1ay&#xA;MyulxaR30UkVwgWQenKVCuOIKPvTwOKsUH5Hai00jz+br6VGlnlRK3CUM8kDEsy3ILNwgZG6Keey&#xA;rTc2remfk15gh+u3F15quDe3l7LM4/ezQ/VjPK6rxklUrK6SLyZaBaUo32i2qFvPyAurqzmsX8zy&#xA;Gx+qm1srRrd2hg/dSQiTh9ZozcZnO1PiPh8ONqmOn/k1qdpdNcHzXeSMt011bCky8C0sb0NLijfA&#xA;jRnYKVI+H4d21VtL/KTWLTQ9Z0+4813Vze6taW1oupiN0mhFtc3NxsfWZmVvrZXjyGw677BUFffk&#xA;lq93DeRy+cLx5Lib1ormRJDMtSCyuy3CKQyrwb01jqlB74bVFJ+TuqQz20tv5svV9G4S4mWQ3DCU&#xA;oZgCeNylH4TKKj4SVqytWgbVlPkDyjP5U8uR6RPqc2rypI8jXlxz5EuegDvKQO/2upPTpgVkeKux&#xA;V2Ksa88/mJ5V8k2UF1r10YWvGeOxt0RpJZ5UjL8EVQdzQKCaCpAJ3xVC+S/LOpi+uPNnmUD/ABNq&#xA;cYjW1VucenWdeUdlE3QkbNM4+2/+SBirL8VdirsVdirzXUr+1/Ku/lvrl/S/LvUpWeZVUv8Aoq9k&#xA;JasaIGb6tctX4FB4SdBR9lXoOmalZ6nptpqVjIJrK+hjubWUAgPFModGod91YHFUTirsVdirsVeO&#xA;H8idctfLcOm6f5hhS4sbS7t7do4Lu3W4knthDE1yxvLinpuodTGlFbcL1DKpjp35I3NtewzXHmm/&#xA;u7aNYVe1d5wrCO6FzIgb1yRG9OCg1ZR+03TDaoSL8htRt9Lis7TzfeW0kdtHaNLEsyo0cdrJbECI&#xA;XPBal0fbpw964qjU/JW7jSLh5luWmgkhmieYTShZLdIo43VWuNmQJJxPi+9abtqiLD8o9VtvKd7o&#xA;kvmq7kvrt4GGsIjxzqtvKzoprM7MAjBPt9h8sVS/UPyO1a9Z2fzhdqxku3EgSX1Cl5c287Iz/WB0&#xA;Frx/d8B0NBx+IKipPyc1YXMMlv5uvoYklmnkj/fktJOzEyK31heLhCqDYpQH4d9jasx8keWZfLPl&#xA;m00WW/k1KS258ryXnyYu5c0DvMwA5bAucCp7irsVdirsVdirA4fMH5j6vq+uRaHFo8Wn6Tftp6G9&#xA;N0ZnZIYpWc+l8ND622Kon/kMn/fu/wDT9irv+Qyf9+7/ANP2Ku/5DJ/37v8A0/Yq7/kMn/fu/wDT&#xA;9irv+Qyf9+7/ANP2Ku/5DJ/37v8A0/YqxLzZ+V3nfzdr2mat5jg0DUl0hHWy02Zr02YeVlZ5XiAr&#xA;Ix4KKMxWg+zirLFX84lUKo8uKqiiqPrwAA7DFVKDX/zA0/zRoema/FpL2esyXEIksDc+qjQW0lwD&#xA;+9+Gh9OmKs5xVBa5qJ0zRdQ1IR+qbK2muRETx5elGX41oaV44qw/SdQ/ODUtKs9RiXy8kd7BFcIj&#xA;fXeSrKgcA07jliqE8z+VPzC806TJpHmCw8sajp8pDGCUX+zAEB0ZSHRwCaMpBxVZ5P8AK35q+VfL&#xA;ll5f0+XQ5rGwDpbNcveyShGkZwhYBahOXFdugGKpx/yGT/v3f+n7FXf8hk/793/p+xV3/IZP+/d/&#xA;6fsVd/yGT/v3f+n7FXf8hk/793/p+xV3/IZP+/d/6fsVRHlDzB5mu9c1rRPMMVkt3pcdnMk2nmX0&#xA;3S8EuxE3xVX0PxxVleKuxV2KuxV2KuxV2KuxV2KuxVh/5e/73+c//Agm/wCoO1xVmGKoTVtWsdJs&#xA;Xvr1nW3Ro0JiiknctNIsUarHCryMWdwNlxVBxeb/ACvLYxX0eqWxtp0WWFjIoZlkiMygIfj5GMFu&#xA;NK07Yqr2vmLy/d3b2drqdpcXkYcyW0U8byKI24vyRWLDi2zeBxVbN5n8tQR2sk2rWcUd8Stk73ES&#xA;icqQrCIlvjozAHjiqy482eWbaSGObVbVGuDMsX71CP8ARgxnJINFWL02Ds1ADsd6DFUfaXtteRNL&#xA;bvzjWSWFmoR+8gkaKQbgfZdCP1YqrYqw/wA3f8px5F/5jL//ALps+KswxVJvOv8Ayhuvf9s67/5M&#xA;PirvJX/KG6D/ANs60/5MJiqrrvmfRNBSKTVZ2gjmrxcRSyqApAZnMSOEReQqz0UeOKrp/M3l6BlW&#xA;XUrZWZmUKJUJqkhheoBNAkgKMTsp2OKrbfzT5Yube4ubfV7Ka2s1V7uaO5idIlcVVpGDEIGG4riq&#xA;tDr2hzxzSwajayxW831a4dJo2WOcsE9JyDRX5EDid64qoweavK87OsGsWUrRxieQJcxMViJAEjUb&#xA;ZasBy6b4qpp5z8ovdG0Gs2X1kSegIjcRhmlB4lEq3xMG+Eheh264qvfzZ5YSeK3Oq2jXEzpHFCky&#xA;O7NJJ6KUVSTvJ8FfHbFU1xVh+gf+TO83/wDMHo/6rvFWYYq7FXYq7FXYq7FXYq7FXYq8e/MC184f&#xA;mjGdP8iatNoeiafK0d15iSeWKK/fkI5oLdYaNLHEvKsteDOOA2qwVZF+T+i2Wh2nmXR7Hl9UsNae&#xA;3hMh5Oyx2NoOTttyZurHucVZ/iqF1PTLLU7NrO8VngZ45CEkeJg8MiyxsHiZHUq6A7HFWPxfld5G&#xA;hdWh04xhRGoRJ7hUpDEYU+ESca8GNT1PcnG1b0L8t/LekNcSIktzPcTtOZZnoUBikgSJFj9NFjji&#xA;ndFFO/stFVeL8vPJ8Wk22krYf6BaLcJbxGWYlVuyWn+MvzPNjXc/LFUNdflZ5Dugom0sEICFCyzK&#xA;N68DRXAJirSKv92NkoMVZDpmmWOmWa2djH6NsjO6x8majSu0jmrFju7k4qisVYf5u/5TjyL/AMxl&#xA;/wD902fFWYYqk3nX/lDde/7Z13/yYfFXeSv+UN0H/tnWn/JhMVVtc8s6LrsccWqQNPHHyAQSyxAq&#xA;5Usr+kyc1bgKq1Qe+KpHJ+VHkhhcenZPE1xE8B4zSlFWR/U+GJmaMUbp8NKADpjaqmmfll5VsdBb&#xA;RmiluYp4Y4b24lmkE0/pMHDSMjJuWWp40r06YqiD+Xnk/wDRj6Z+j6WcjrI6CWblzV3kDB+fMHlK&#xA;9aHetOmKoBPyj8jCW8ZrJ5Ir2JYngeedlTjK05dCX5LI0rli4PKtd9ziqYf8q88neoZP0cOZJYt6&#xA;s3Uq6H9v+WVv8wMbVbp35c+TdNaF7LT/AEWgdXhYTTkqY5PVQCrnZW6L0pt0xVkmKvD/AD/+W2re&#xA;c/Puvy6BrM2geYtLh0drPUoZJYv3E31lbmNvRKsaqoZfdQNgScVZ95G81TmRPJ/mENbebtLtk9YS&#xA;vzW/hQemL62lIX1VkpV9gyMaMMVZlirsVdirsVdirsVdirANcubzzvrlz5V0yZ4PLWmuI/NWpREq&#xA;08uzHS4JFIIqp/0l1NVU8OrGirOrS0tbO1htLSFLe1t0WKCCJQiIiCiqqjYADoMVYjb+U/Oum6nr&#xA;Fxouu6bDaavetqDQXmlz3MkbvFHEVEseoWqstIQfsYqiv0d+aP8A1MOh/wDcEu/+8tirv0d+aP8A&#xA;1MOh/wDcEu/+8tirv0d+aP8A1MOh/wDcEu/+8tiqXeY5vzR0by9qmsfpvQ5/0baT3fofoa7Tn6ET&#xA;ScOX6Ubjy40rQ4qidPg/NG7sLa7/AE9oafWIkl4foW7PHmoalf0qK0riqI/R35o/9TDof/cEu/8A&#xA;vLYq79Hfmj/1MOh/9wS7/wC8tirv0d+aP/Uw6H/3BLv/ALy2KqEflTzfd+Y9G1bXNb0+5g0aSeaK&#xA;2stNntHd57d7f4pZb67FFEldkxVmGKoPWtOGp6Pf6aZPSF9by23q05cfVQpy41FaculcVYxpfl78&#xA;y9N0y006DzFozQWUMdvEz6LdFykSBFLEaqBWg32xVFfo780f+ph0P/uCXf8A3lsVd+jvzR/6mHQ/&#xA;+4Jd/wDeWxV36O/NH/qYdD/7gl3/AN5bFUq1i7/NHTdR0Kz/AE1ocv6avnsfU/Q92vpcLG5vOdP0&#xA;oeVfqnCm32q12oVU1/R35o/9TDof/cEu/wDvLYq79Hfmj/1MOh/9wS7/AO8tirv0d+aP/Uw6H/3B&#xA;Lv8A7y2Ku/R35o/9TDof/cEu/wDvLYqqeWPLGtadrer61rOpW2oXuqx2kPGztJLOKNLQS8fhkubx&#xA;mLetv8Q6YqrecPKFp5jsoP3rWWrafJ9Z0bVogPWtbkCgda7MjfZkjb4XXY9iFVHyV5qudXju9M1e&#xA;FbPzPozLDrFmhJjJYEx3NuW3aCcAsldxup3U4qyXFXYq7FXYq7FWK/mBr+o2VnaaLojAeZPMEps9&#xA;LcjkIFC8ri8cfy20VX924r3xVN/LXl7TvLuiWuj6crC2tVIDuS0kjsS8ksjHdnkdi7HuTiqZ4q7F&#xA;XYq7FXYqwr86rrW7X8qvM8+jQxz3a2EwkilDEG3ZeNyw4snxJCzuvXcdMVTP8ubrWrvyJoN1rUUU&#xA;Gpz2UMk8EIdUQOgZFo5ZgwQqG3+1XFWRYq7FXYq7FXYq7FXYq7FXYq7FXlf5yat53sPNn5eJ5esr&#xA;a6t59YdJJbiOV/SnktZrcFzG6/B9WuZ5OlapXpUYq9UxV2KuxV2KuxV2KsM/MDSb+2e2856FAZtd&#xA;0JG9e1Q0a+05jyuLM06tt6kNekgH8xxVlOlapYarplrqenzC4sb2JLi2mXo8cihlb6QcVRWKuxV2&#xA;KuxVg/kofp/zNrfnKUB7ZZH0Xy+etLSzkK3UykGn+kXat/sY0xVnGKuxV5vonlx/Meteari+1rWI&#xA;fqesSWltBaajc28KQpbW7hVjjcKPikY4qnH/ACrKw/6v3mD/ALi95/zXirv+VZWH/V+8wf8AcXvP&#xA;+a8Vd/yrKw/6v3mD/uL3n/NeKrZPyu0ySNo5Nc1943BV0bVrwggihBBfcHFV3/KsrD/q/eYP+4ve&#xA;f814q7/lWVh/1fvMH/cXvP8AmvFXf8qysP8Aq/eYP+4vef8ANeKu/wCVZWH/AFfvMH/cXvP+a8VS&#xA;q40GTy7538pJZ6xq1zBqNxeQ3dve39xdROsdjNKtY5WZah1BxV6LiqVebbie28q6zc27mKeCxuZI&#xA;ZVNGV0hZlYHxBGKsS8teQIL/AMuaVfXOv6+bi7s7eeYjVrwAvJErtQc9tziqZf8AKsrD/q/eYP8A&#xA;uL3n/NeKu/5VlYf9X7zB/wBxe8/5rxV3/KsrD/q/eYP+4vef814qtb8rtMZkZtc19mjPJCdWvCVN&#xA;CtR8exoxGKrv+VZWH/V+8wf9xe8/5rxV3/KsrD/q/eYP+4vef814q7/lWVh/1fvMH/cXvP8AmvFX&#xA;f8qysP8Aq/eYP+4vef8ANeKobyTa3Gm+dPNGjfpC+vrK1t9Mmtxf3Mt26POLn1OLSliA3prt7Yqz&#xA;nFXYqwjyZXQfNWt+TWotl/x2tAX+W1u5CLqAClAILqpA7LIo7YqzfFXYq7FUg/MDXpdA8la1q8H+&#xA;9VraSGzG29y44QLvtvKyjFUV5V0KLQPLWl6JEQy6daxW5cfttGgDua9S7VYnxOKprirsVeZWOg32&#xA;u6f5402yuvqc0vmNyZjy+ytraEj4T38CCPbuFU5PlHzmbiCT/ErcYbhz8MXGtrJ6YMNCzbgIaMWr&#xA;Wh6k4VS698teZrtdLsp/NaL5g06G7kmeNjEZPVkQ28voj4WERCq1V/ap33VVpbPXJhb6Tc+cY11B&#xA;9SaZTblIZ5LNwH+rhfjqeHMg/s7Dtiq2/wDJ/wCYFzGlfNyh4p2l/uFVVJRfSqFpy9Nv2TQN1O+K&#xA;qsGh+aZdCSK080xJfyO8s94iBg5eBIl2Y1FJB2/m5dQBihbqWmai+rQahYea1tbS4lhgtYWkU+vL&#xA;HE0XBgR+8ZpUDEDsGxVCWPk38xTaWwfzYBeGBU1JlQM7MY3Cur70Klqjbfr+yBilHf4O8/FoYT5r&#xA;kFkHT1wqD1zGHheQLMVJ5PwcAkfCDQddlULcaZqOm+Y/IlrqN2b67OpatK9ySxqJrO6lCgN0Ch+I&#xA;A222wK9FxVJvOv8Ayhuvf9s67/5MPirvJX/KG6D/ANs60/5MJirGH/NX6pe38Ooac9LfUTp8UNus&#xA;rTIgd1WefnGkKpIsXqJxkJ4kbdThpUx0X8wn1C5FvNod9ZytBJdRqwjkLRQj95QIxPNXZE49y21R&#xA;vjSqVj+ZcV/qum6dBpdzDLeyMJmuR6axRCD1I5A3xKwlkPBN96H2q0qjpH5nNPLaW+o6Nd2819cw&#xA;28EkMZmhpccwjM43Xi8TBuQG3xdMaVR1L84dOsZbmI6Rft9WuZrNpHQRJzhZEBLSEACQyVTxAY9s&#xA;aVu9/NcJJPHaaBqTvZmRrpZoPSYJEsTcVDEVd/W+EdNqnalWlV/+VnkPa2zaBqAvrzaGDihTmWiV&#xA;QZeXEA+sCSfs9+oxpWReVtdbXdGj1M2z2glkmVIJNnCRzMiM4P2SyKGp74FSXQP/ACZ3m/8A5g9H&#xA;/Vd4qzDFXYqwzz5GbHX/ACj5jjB5WuojS7sjYG11dfq9D8roW5HyxVmeKuxV2KsO/M9+el6NYMKx&#xA;6jr2kwyjsUjvEuWB9mFvQ/dirMcVdirsVYf+Xv8Avf5z/wDAgm/6g7XFWYYqkGqeSdF1O/vL659X&#xA;6xe2UmnSsjBaRSFG5IaVDq0alTXFUks/yY8k2jWhiimK2JlNokjLIIzKhjUqXRmBiDfu6H4dvAYb&#xA;VMb/APLnQ75tYM010BrctvNdhZF+FrVucfpkoSu/v8qbYFQB/J7yiPUeL6xDcS+nyuo3RZqxSNKh&#xA;58K7Mw6/yr4YbVZH+TXlFLqO49S7Zo5YJgDKo+K2DCOjKgdR8bV4sOuNqnnlzyPoHl6QS6dGyy8H&#xA;iaVyGdkcoxUkAbBkqq9FqaDAqf4qw/zd/wApx5F/5jL/AP7ps+KswxVJvOv/AChuvf8AbOu/+TD4&#xA;q7yV/wAoboP/AGzrT/kwmKpziqn9Xt/rBuPST6wUEZm4jmUBJC8utKmtMVVMVdiq2SKKVQsqK6hl&#xA;cKwBHJGDKd+6sAR74quxV2KuxVh+gf8AkzvN/wDzB6P+q7xVmGKuxVjn5iaHqGt+TtQ07Tgrag3o&#xA;zWYYhR61tOk8dWPT4ohirI8VdirGPMP5g6NoOtQ6XfRzH1LWS6e4jXkiFamONt/tSrFKQeg4GtBv&#xA;iqSab+dPknUdM0+8n5xS3oE0Fqyh3UeqkQftQD1QeXzw0qPH5o6Ot7YQT2dzFDfabDqxuQqSLDDc&#xA;PwQSLGzt9rYkA7kfQFZLoWt6frmkW2q6e7PaXac4iylGFCVZWU9CrAg4qjsVYrf/AJYeS77UbrUZ&#xA;7Sdbu9k9a6eC9vbdXk4hORSGaNK8UA2GKqP/ACqXyP8A8s95/wBxPUv+yjFXf8ql8j/8s95/3E9S&#xA;/wCyjFXf8ql8j/8ALPef9xPUv+yjFUl86/lp5S07ybr2oWcd7FeWenXdxbSjUtRbhLFA7o1GuCDR&#xA;hXcYqjtH/KzyZcaTZTzQXrSy28TyN+k9RFWZASdrjxxVGf8AKpfI/wDyz3n/AHE9S/7KMVd/yqXy&#xA;P/yz3n/cT1L/ALKMVd/yqXyP/wAs95/3E9S/7KMVRWlflt5P0rVLfVLO1m+vWnP6tLPeXlwEMiGN&#xA;yqTzSJUoxFaYqybFVO6toLq2mtbhBLbzo0U0bdGRxxZT8wcVYjH+UPkOONY47W7SNAFRF1LUQAAK&#xA;AAC42AxVd/yqXyP/AMs95/3E9S/7KMVd/wAql8j/APLPef8AcT1L/soxV3/KpfI//LPef9xPUv8A&#xA;soxVj/mX8t/KlnrXlO3tkvY4dR1WW2vU/SWoH1IV0q+uAtTcEj97Ajbb7eFcVZB/yqXyP/yz3n/c&#xA;T1L/ALKMVd/yqXyP/wAs95/3E9S/7KMVd/yqXyP/AMs95/3E9S/7KMVd/wAql8j/APLPef8AcT1L&#xA;/soxVNvLvk7y75ca6fSbZ4ZL3h9allnnuHf0uQQF53lai82oAe+Kp1iqRec7XzBc6OsehyMlyLiF&#xA;51ilWCV7dXBlSOV0kVWI9vaoxVIhN+awNRJpa0QmKJ3MvJv3SESSKIKhAzuWSNaspHEKVwqh4Yvz&#xA;jNs1u7WSPISTdFlLKsiioCgEApJy8RxPiMUM604z/ULcXDc7kRqs7fDX1AKPXj8NeVemBK3Uhwsb&#xA;qVLYXMqROyQEV9RlU8U6H7XTFWCWWr+aIIlT/BMQlR7qTlC9EDI8ksZX1I1ass4L7dOQpucKoryd&#xA;r3m3UdTt4dX8tHSoktUeW9KCju6LJ6S94/Tk5Ch6+xxVnMUUUMaxRIscSCiIgCqAOwA6YFXYqxjU&#xA;vzP/AC/0zUJ9Pv8AXrS3vbVuFxbu/wASNQNRgBsaEYqhv+Vwflj/ANTHZ/8ABn+mKu/5XB+WP/Ux&#xA;2f8AwZ/pirv+Vwflj/1Mdn/wZ/pirEvzX87/AJfeavy81zRLDzTbQ6hc2zGyaOYxlpo/3iRlvh+G&#xA;Urwau1CcVR3kLz/+XPlzyZo2iXPmu2ubuxtY47qeSZpS85HKUh2FePMnj4CgxVP/APlcH5Y/9THZ&#xA;/wDBn+mKu/5XB+WP/Ux2f/Bn+mKu/wCVwflj/wBTHZ/8Gf6YqjNH/MjyJrOoxabpet2t3fz8jDbR&#xA;vV24KXagp2VScVZJiqy4uILeCS4nkWKCFWkllcgKqKKszE9AAMVYiPzh/LAgEeZLIg7ghz/TFW/+&#xA;Vwflj/1Mdn/wZ/pirv8AlcH5Y/8AUx2f/Bn+mKu/5XB+WP8A1Mdn/wAGf6Yq8z/NnVPIvm7zH5M1&#xA;Cw84QW1vpOoFtWSK5ki5WjIWZhxK/F8BiHHekp7Yq9M/5XB+WP8A1Mdn/wAGf6Yq7/lcH5Y/9THZ&#xA;/wDBn+mKu/5XB+WP/Ux2f/Bn+mKu/wCVwflj/wBTHZ/8Gf6YqnPl7zf5Y8xic6HqUGofVSouPQbk&#xA;U514ch25cTT5Yqm+KsM87/oq+uLTl5wTy+LE3CXUSXEcZkLRpzD8pE4tEjBtwePKuKsO1D8vvLVq&#xA;kbaj51RUQ28UayyVCyB0mHFWnbiG5K7d6HkzEb4UJrcaNo91aXGoW35hslvK05F39dR4UQrykT4Z&#xA;ljovqxuf5e3FWpillXkW40WHSI9Js9bi1m6ge4knuFdTLIz3DvJIVDMaeo5Xl0JwKyXFUi8+X+qa&#xA;d5J17UdJkEWp2On3N1ZuVVx6sETSKCrbGpWm+KpvY3kF7ZW95AeUFzGk0TbbpIoZTtUdDiqtirsV&#xA;Yf8Al7/vf5z/APAgm/6g7XFUz8z6xr2nfVzpOmjUmkDepGTIgDepEikyIsvEBZGb7Brx7dcVYxqf&#xA;5l+adPjvGbyjdOtqssq3LNJHbukZnIXmIpHDMsKKvw7s3SnDmVV5fPnnNXt0HlG5UXFf34MkiRhI&#xA;45HaVRGrry5sqAAkkeNVVVu/87+ddPvtURvK01/Z2ppYtZiT1JP3/CpDrwYekQ9UatainfFURrvn&#xA;jzNpmo3EEPlW7vrNPUFvdwF5ORjtEuPjjSNivKST0l48qlT3+HAqXXv5i+dkljNt5QuikNtLNexO&#xA;lwzGUORFFDIkXFiyBWNFb7VNuBqVTHVfPHme1mtIrTypc3RubGK7kflIqRTSMA9u7JDJ8ca8j+G1&#xA;a4FTTynr2t6tLqv6S0t9LitLr0bFZVcNLFwVvUJcKp+IkfBVdtieuKpf5u/5TjyL/wAxl/8A902f&#xA;FWYYqk3nX/lDde/7Z13/AMmHxV3kr/lDdB/7Z1p/yYTFV2oeb/LGnTzW9/qdvaXFuC0kMzhH4hA7&#xA;MitQuFVgSVrTviq+TzT5YjuY7WTV7JLqY0iga5iEjkM6UVS1T8cTrt3UjscVU5POXlRIzJ+lrV4x&#xA;by3nOOVZB9Xt0SWWSqFtljmR/wDVNRtiqtpfmTQNVjhfT9QguRP6ghVJF5sYaeoOBPKqc15Cm1RX&#xA;rirQ80+WTCJxq9kYGpxl+sRcDVDIKNyp9hS3yFcVUrbzh5XudUm0qHVLdtRt3SOS2MgDF5VLIqVo&#xA;JCQp+xWlDXFVV/NHllJpIX1eyWaESmWNriIMggFZSwLVHpjd69O+KozT7+01Cwtr+zkE1pdxJPbS&#xA;gEB45VDowBAO6mu+KsW0D/yZ3m//AJg9H/Vd4qzDFWK6l+WHk2/lmme0kguLiWS4kmt7ieI+pMQZ&#xA;WCq/AF6bkL1JIo2+KoTUfJX5cae0FjPpnAa/LHpsUETT8WaGJrlVCo9IwqWjMWWnTfqcVTJ/y68m&#xA;veR3h04fWYnaRJBLMPiehNQHow26HbG1RGi+SvLWiXYu9MtDbziAWgPrTOohVuQQI7sv2t60riqd&#xA;4qoX1nBfWNxZXArBdRPDKB3SRSrdfY4qxr8qLyW6/LrQRNX6zZ2o0+6rsfXsGNpMSP8AjJA2Kssx&#xA;V2KsP/L3/e/zn/4EE3/UHa4qgbnT/wA5mivFh1TTBI7ymycRlAi+sPSVw0cv+6pGr1pwXryY4qpP&#xA;pv5yALDb31jHB64kaWRy8notvJFvC1CKHgeXftTCqIji/NGz0Wdby9tHvDPaR2k0aqfTgdFiuXna&#xA;QIp9IkyggfEwpQKQoVXNa/mrHLELjUrFLIPG93dxhVeOJJ2M4CyRFfigPwkn4aUPI1cqql9afmUN&#xA;UuhZ6vai3nLtZwXCx/u6TqYwOMfNl9BW51JJ3AKmjKqgrPR/zeXV3a71Syk0qTUVnkjXmsotEe2P&#xA;GMhVCCkUo9Pf4WPJnY8sCoiSx/Nxry9ZdQso7Zprk2CIFYiB1pArloQQ8Z+IH4h/Ny6YVXaJo35m&#xA;Qw2ov9VgDSRQDUOB9ZhNHJHHKYWljoBJBEW3H22b4akMFUR5u/5TjyL/AMxl/wD902fArMMVSbzr&#xA;/wAobr3/AGzrv/kw+Ku8lf8AKG6D/wBs60/5MJirB9f82flXcXV9eajaXM1xE0sU8oEsRYwAQSFK&#xA;yRfZJiSo/adO5NChKY9R/JqAW0v1Oa2WC9MUVtDK7I5illjgLI0gYR0mZ1QAAdKEKMVTPRNU/K06&#xA;RqGuW2lXFuDbQWuqQAzMRHfxALGB6npt6jUQlNy+/cNilVs/MP5W2mp2M9jYz/pS2uBbWCpz9VpL&#xA;pXtzQPKBIOMIVi1eDMK0ctRQl+uXf5L6NfXNpc6ZcGa15QTRxNOsZ+qWhUmjzRoaQM68u571ZeSl&#xA;cNZ/KnTrqG8stNvWvYbixmLtJdCjTx/upXaSUrLwjZuvIEn/ACuWKGl1X8oleeWTSL5L69nubmSK&#xA;T6w0zzRRvFLKG9ZkU15Ivxj4hUdA2Ks+8jappV7oSQaTay2enaZ6dhaQzNycRRQRtHvykbZHC/Ea&#xA;7fTgSl+gf+TO83/8wej/AKrvFWYYq7FWGa5S+/NPyvZKf+OTZajqs9exkEdlD9LCeX7sVZnirsVd&#xA;irsVYX5MJ0rzf5r8tyfCklymu6byO7QaiCJwo/yLyGUn/XHjuqzTFXYq800HzjoflvW/NtnrP1u3&#xA;nuNakuYAtjezK8L2lsqurwwyIQSh74qnf/K2vI//AC0Xn/cM1L/snxV3/K2vI/8Ay0Xn/cM1L/sn&#xA;xVj3mrzZ5F8wT2EjaxqlktiZiY4NN1ELKZkCfGDb/s9vmcVpitwPy0sdGuIn806xa2RthDeySafq&#xA;JjaNX9R3f1IGozFEqwI2WhrXDa0jAfy+b6w7+ZNaeS6laVrj9G34lCklljVxa7JydywpQ17Y2tMm&#xA;8tedvIehQ3UUepalcrczNcH19O1NirP9qhMB64FTn/lbXkf/AJaLz/uGal/2T4q7/lbXkf8A5aLz&#xA;/uGal/2T4qk915r0fzJ578nro/1qf6lc3s128lld26Ro1hNGpZ54o13dgOuKvSMVSjzhDLN5S1uG&#xA;FGklksLpI40BZmZoWAVQNyScVYl5W/M/yfZeWNIs7mW9jubayt4Z4zpuoni8cSqy1FuRsR2xVMD+&#xA;aX5fkkmS6JNan9FajvWhP/Ht34jFVv8Ays/8u6U5XNKUp+itQ6f9I2KrLn8yPy3uYxFP9ZkjEkcv&#xA;A6VqNOcLB42I+rb8GUEYq65/N38t4TCbi5uIy8gSAvpmoCsrmoC1t/tMRird1+ZX5cXcckVz9Ymj&#xA;lHGVX0rUWDDbY1tt+gxVefzR/L49XuT066VqP7PT/j27Yq7/AJWj+Xx6vc7Go/3Faj1Na/8AHt7n&#xA;FV6fmv5DQEJNdqDuQNL1EdqdrbFUL5G1W11nzz5r1axWc6fNbaXDDPPbz2wd4hc+oFE6RsePNa7d&#xA;8VZ5irsVYX5NI1bzd5q8y/agWePQtOYj/dOm8jcMpHZryeVf9gMVZpirsVdirsVYX+YcMukzad54&#xA;tImkl8vmRNWijBLzaTccfrQCjd2gKJcKK/sEftYqzC2ube6torq2lWa2nRZYZoyGR0cclZWGxBBq&#xA;DiqpirsVdirsVdirC/zVCz6ToumS0Npqmu6ZbXaHo8S3AnaM+zmEKfY4qzTFXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FWG/nCn/ACDfW7lTxn0+JNQtXH2lnspVuYuH+VziAGKsyxV2KuxV2KuxV2Ksa8/eZLrR&#xA;dFWHTAsvmHVpBYaFbmh5XUwIEjAg/u4FrLJ/kqcVTHyt5etPLvl3T9EtWLxWEKxGVtmkfrJK25+K&#xA;RyXb3OKppirsVdirsVcQCCCKg7EHFXndhdL+XGqx6Jetw8kanPx0G+c/Dp1zMSTp8xP2YHbe3c/Z&#xA;r6Z/ZxV6JirsVdirsVdirHfzA0K/1ryrdW2mELrFs8N9pLMQB9cspVuIFJOwV3jCMfAnFUZ5V8y6&#xA;f5k0S31WyqokqlxbPtLb3EZ4zW8qmhWSJwVYfwxVC+cvM97oNvpv1DT11K91S+Swt7d5/qyB3ikl&#xA;5NJwloAIT+ziqX/p/wDM7/qULP8A7jA/7JMVd+n/AMzv+pQs/wDuMD/skxV36f8AzO/6lCz/AO4w&#xA;P+yTFXfp/wDM7/qULP8A7jA/7JMVd+n/AMzv+pQs/wDuMD/skxV36f8AzO/6lCz/AO4wP+yTFXfp&#xA;/wDM7/qULP8A7jA/7JMVQOued/zC0XRNQ1m98oWv1PTLaa8ueGrhn9KCMyPxH1UVPFTTFWfYqwb8&#xA;w5xrl9p3kK0/eT6nJFea2w6W+lW0qySFiOjXMiCBARvVj+zirOcVdirsVdirsVQOt63pWh6Vcarq&#xA;twtrY2q8ppmr40CqBUszE0VRuTsN8VYz5Q0fVtV1d/OvmS2NrfyxmDQtJkoW0+ycgsX8Lm4oGl/l&#xA;HFOzVVZpirsVdirsVdirsVQuqaXp2q6dcabqVtHd2F2hiuLaVQyOjdQQcVYNHf6v+XIFtqzT6p5G&#xA;Xa11ijS3Wlp2hvQOTy2yj7M4+JOj7fFirP7a5trq3iubWVJ7aZRJDNEwdHRhVWVlqCCOhGKqmKux&#xA;V2KuxVhPmDypqml6xdebvKDxxalOobWdHuGKWeorEtAxYV9C5VBRJaEHo4puFXnui/nfoH5jal5d&#xA;tILaTTNW0/zJGzabcMGka1+q3SpOCAB3AdRXie5BBxV7xiqCvdc0ewvLSyvbyG3u74lbSGRwrSFa&#xA;V4g+7AfMgdSMVRBvLQEgzxggVILL0pWvX2xVs3NuOsqDvuw8K/q3xVd6sXqenzX1OvCorvWm30Yq&#xA;h7jVtLtmhW4u4YWuHWOAPIq83enFVqdy3IUHeuKolWV1DKQysKqw3BB6EHFWL/mt/wCSu84/9sPU&#xA;v+oSTFWEP+ezeYfPV95F8jWkV5fxLwj165k/0GOWPkblgqVaYRrx4BSObV3CjkVXoflPylaeXrWc&#xA;+s9/q1+4n1bV7inr3U1KBm47IiD4Y41+FF2HclVPcVdirsVdiqTeaPN2i+WrOO41GR2muH9KxsIF&#xA;Mt1dTHpFbwr8Ujn7h3IGKpDonlnXNc1aDzL5zRYpLV/U0Py2jiS3sjSizzsPhmu6E/F9iP8AY3+L&#xA;FWb4q7FXYq7FXYq7FXYq7FXEAggioOxBxVgtx5M1ryzcSaj5CdBayyGW+8p3L8LGUk1ZrN6N9TlN&#xA;TsB6bHqo64qnPljzzo2vzTWKrLp+uWig3+h3yiK8gr0YpUrIh/ZkjZkPjirIcVdirsVdirDfzDjj&#xA;Op+S5CoMi6/EqvQVAazuiQD4HiMVZliqTaz5VsdV1G01CW4uree1R4T9VmaESwyPHI0UvHcqWhX7&#xA;JB6itCRirG7n8l/J8to8MSyRztBNbJcvwkdUuOPqU5L/AJH2RRRUilNsNqrf8qe8n8b1SLhkvoIr&#xA;Z0aUMI0ggNuhiqvwng7V7GpBHHbBaojVPys8ramsH1n6z6ttHbxRzrMRIUtY3jjDsQS+0jV5Vrv2&#xA;LAtqhD+TnlMqierecI1iCoZVZeUKxqHoyEBiIUrTbbphtWV6Dotnoej2uk2XM2tmgjiMh5NStdyA&#xA;B37DAqS/mt/5K7zj/wBsPUv+oSTFWTxRRRRrFEixxoKIigKoA7ADFV2KuxV2KuxVhOofmBdaneTa&#xA;R5EtY9a1GFvTvNVlYrpNmw2YSzpvNKv++Yan+YpiqP8ALHkS00m9k1nUrp9b8z3C8J9aulAZYya+&#xA;jaxCqW8Nf2E6/tFjirJ8VdirsVdirsVdirsVdirsVdirsVSXzL5O8v8AmSKIanbVubY87HUIWaC7&#xA;tpP54LiMrJGfkaHuDiqQrb/mf5dAS1lg846Whosd0yWOqonRR6yj6rcEAdWWMnucVVY/za8pwssW&#xA;vC78sXDNxEetW72sfhUXXx2jCv8ALMcVZVp+qaZqVuLnTruG9tzsJreRJUP+yQkYqicVYz570LXN&#xA;Vh0efRDa/XtJ1KPUFjvXkjidUhmiKloklYH99X7OKoX6x+b/APyweX/+ky9/7JcVQ1/rX5nafB69&#xA;/H5Zs4K09WfULuJK/wCs9sBirGZvzh8weu1tYy+XtYu1H+8+jz6nqb1/l/0OymVT/rEU74qjdI82&#xA;/nvq6FovJ+m6ZF1jn1S8liDgHcCKJJZlJ7c0XFULd/mP+cenXHp6t5Mgs7cbm+ie6v4KDqx+oRXU&#xA;qgf5UYxVV0v81de1NhHaal5R9cnj9Vm1K7guKnpWCa2jlH/A4qyZbr83WUMtl5eZWFVYXl6QQe4/&#xA;0XFUt8z6X+beveW9W0KW20CCPVrO4sXnW7vWZFuYmiLhTbCpXnWmKvQ8VdiqT635z8paFyGs6zZa&#xA;e6ivpXE8cchruAsZPNia7ADFUj/5WNc6l8HlTy9qGtcqFL64jOmWHEkAt692qSON/wDdUT4qpnyR&#xA;5i8xJ/zvGrLLZNTl5e0j1LayPtPOT9ZuB7VRD3Q4qzGwsLHT7OKysLeO0s7dQkFvCixxoo7KqgAD&#xA;FVfFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqsm9H0X9bj6PE+rzpx40+LlXalOuKvMfMP8A0Lp9&#xA;ZP6Q/QP1+vxfUvS+ude/1P8Af0r44qgk/wCVZ/Vz+hP8YU5Dj+jf8UenWgrTn/o32etd/pxVZ/uB&#xA;/wDMg/8Ac4xVUm/5VT6Cfpr/ABV0PL9K/wCKeFf2/wC8/cfPhtT2xVFaH/0Lh63+h/4f+uf8v3o/&#xA;Wuv/AC+fvuv44q9OtPqn1aP6n6f1an7r0ePp0/yeO2KquKuxVJvM3+Dvqqf4o/R31T4vT/Sfoen0&#xA;HLj6/wAPzxV5vc/9C2fWj9T+o+tt/wAo/wDWaV2+z+ivhr409/fFVWb/AARwi/Rn+OfTpt9W/wAT&#xA;8OG3Gn1v4KeHDFVL/nX/ANr/AJWDTv8A8drp/sd/uxVu8/5Uf6g/Tf6YrX/pe/4j40oev6Q+HjSv&#xA;Xbr74qy7yX/yqH1k/wAHfoL61xP/ABzfqv1ilPi5+l+9rT7XLfxxVmWKuxV2KuxV2KuxV2KuxV2K&#xA;v//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:F0E376F82D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F0E376F82D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F0E376F82D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T16:38:06+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -308.689 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 308.689 li
360.016 308.689 li
360.016 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 308.689 mo
360.016 308.689 li
360.016 0 li
0 0 li
0 308.689 li
cp
clp
0 308.689 mo
360.016 308.689 li
360.016 0 li
0 0 li
0 308.689 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
131.981 54.2588 mo
224.369 54.2588 li
224.369 87.2544 li
131.981 87.2544 li
131.981 54.2588 li
cp
f
1.46646 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
131.981 54.2588 mo
224.369 54.2588 li
224.369 87.2544 li
131.981 87.2544 li
131.981 54.2588 li
cp
.746 .676 .668 .898 cmyk
@
146.051 69.29 mo
146.051 64.0254 li
145.04 64.0254 li
143.543 68.4761 li
143.529 68.4761 li
142.026 64.0254 li
141.007 64.0254 li
141.007 69.29 li
141.696 69.29 li
141.696 66.1812 li
141.696 66.0273 141.681 65.3599 141.681 64.876 cv
141.696 64.876 li
143.177 69.29 li
143.881 69.29 li
145.362 64.8687 li
145.377 64.8687 li
145.377 65.3599 145.362 66.0273 145.362 66.1812 cv
145.362 69.29 li
146.051 69.29 li
cp
0 0 0 1 cmyk
f
147.628 66.6211 mo
147.672 66.3276 147.774 65.8804 148.508 65.8804 cv
149.116 65.8804 149.41 66.1006 149.41 66.5039 cv
149.41 66.8853 149.226 66.9438 149.072 66.9585 cv
148.009 67.0903 li
146.938 67.2222 146.843 67.9702 146.843 68.293 cv
146.843 68.9526 147.342 69.3999 148.046 69.3999 cv
148.793 69.3999 149.182 69.0483 149.432 68.7769 cv
149.454 69.0698 149.542 69.3633 150.113 69.3633 cv
150.26 69.3633 150.355 69.3193 150.465 69.29 cv
150.465 68.8208 li
150.392 68.8354 150.312 68.8501 150.253 68.8501 cv
150.121 68.8501 150.04 68.7842 150.04 68.6226 cv
150.04 66.4155 li
150.04 65.4331 148.926 65.3452 148.618 65.3452 cv
147.672 65.3452 147.063 65.7046 147.034 66.6211 cv
147.628 66.6211 li
cp
149.395 67.9629 mo
149.395 68.4761 148.808 68.8647 148.207 68.8647 cv
147.723 68.8647 147.51 68.6157 147.51 68.1978 cv
147.51 67.7134 148.017 67.6182 148.332 67.5742 cv
149.131 67.4717 149.292 67.4131 149.395 67.3325 cv
149.395 67.9629 li
cp
f
152.775 66.8853 mo
154.242 65.4551 li
153.42 65.4551 li
151.771 67.0757 li
151.771 64.0254 li
151.147 64.0254 li
151.147 69.29 li
151.771 69.29 li
151.771 67.8384 li
152.306 67.3545 li
153.501 69.29 li
154.33 69.29 li
152.775 66.8853 li
cp
f
157.409 68.0874 mo
157.387 68.3735 157.028 68.8428 156.419 68.8428 cv
155.679 68.8428 155.305 68.3809 155.305 67.5815 cv
158.105 67.5815 li
158.105 66.2251 157.563 65.3452 156.456 65.3452 cv
155.188 65.3452 154.616 66.291 154.616 67.479 cv
154.616 68.5864 155.253 69.3999 156.331 69.3999 cv
156.947 69.3999 157.196 69.2534 157.373 69.1362 cv
157.856 68.8135 158.032 68.271 158.054 68.0874 cv
157.409 68.0874 li
cp
155.305 67.0684 mo
155.305 66.4746 155.774 65.9243 156.368 65.9243 cv
157.152 65.9243 157.402 66.4746 157.438 67.0684 cv
155.305 67.0684 li
cp
f
161.486 66.6211 mo
161.53 66.3276 161.632 65.8804 162.366 65.8804 cv
162.974 65.8804 163.268 66.1006 163.268 66.5039 cv
163.268 66.8853 163.084 66.9438 162.93 66.9585 cv
161.867 67.0903 li
160.796 67.2222 160.701 67.9702 160.701 68.293 cv
160.701 68.9526 161.2 69.3999 161.904 69.3999 cv
162.652 69.3999 163.041 69.0483 163.29 68.7769 cv
163.312 69.0698 163.399 69.3633 163.972 69.3633 cv
164.118 69.3633 164.213 69.3193 164.323 69.29 cv
164.323 68.8208 li
164.25 68.8354 164.169 68.8501 164.111 68.8501 cv
163.979 68.8501 163.898 68.7842 163.898 68.6226 cv
163.898 66.4155 li
163.898 65.4331 162.784 65.3452 162.476 65.3452 cv
161.53 65.3452 160.921 65.7046 160.892 66.6211 cv
161.486 66.6211 li
cp
163.253 67.9629 mo
163.253 68.4761 162.667 68.8647 162.065 68.8647 cv
161.581 68.8647 161.369 68.6157 161.369 68.1978 cv
161.369 67.7134 161.875 67.6182 162.19 67.5742 cv
162.989 67.4717 163.15 67.4131 163.253 67.3325 cv
163.253 67.9629 li
cp
f
170.153 66.6797 mo
170.153 65.5874 169.405 65.3452 168.811 65.3452 cv
168.195 65.3452 167.872 65.7266 167.689 65.9683 cv
167.674 65.9683 li
167.674 64.0254 li
167.029 64.0254 li
167.029 69.29 li
167.674 69.29 li
167.674 67.2002 li
167.674 66.2324 168.217 65.9243 168.745 65.9243 cv
169.361 65.9243 169.507 66.2617 169.507 66.7822 cv
169.507 69.29 li
170.153 69.29 li
170.153 66.6797 li
cp
f
172.477 68.5786 mo
172.462 68.5786 li
171.443 65.4551 li
170.71 65.4551 li
172.132 69.3926 li
171.824 70.1846 171.788 70.2798 171.451 70.2798 cv
171.274 70.2798 171.143 70.2432 171.062 70.2139 cv
171.062 70.8003 li
171.165 70.8296 171.238 70.8589 171.333 70.8589 cv
172.162 70.8589 172.228 70.771 172.836 69.2168 cv
173.328 67.9629 173.768 66.709 174.215 65.4551 cv
173.503 65.4551 li
172.477 68.5786 li
cp
f
175.336 67.5522 mo
175.336 66.9292 175.439 65.9243 176.371 65.9243 cv
177.368 65.9243 177.419 66.8706 177.419 67.3618 cv
177.419 68.2046 177.089 68.8428 176.385 68.8428 cv
175.975 68.8428 175.336 68.5713 175.336 67.5522 cv
cp
174.721 70.8081 mo
175.366 70.8081 li
175.366 68.8867 li
175.38 68.8867 li
175.549 69.1582 175.886 69.3999 176.4 69.3999 cv
177.705 69.3999 178.086 68.1753 178.086 67.2593 cv
178.086 66.1812 177.507 65.3452 176.488 65.3452 cv
175.791 65.3452 175.498 65.7778 175.344 65.998 cv
175.329 65.998 li
175.329 65.4551 li
174.721 65.4551 li
174.721 70.8081 li
cp
f
178.629 67.3691 mo
178.629 68.3589 179.186 69.3926 180.411 69.3926 cv
181.635 69.3926 182.192 68.3589 182.192 67.3691 cv
182.192 66.3794 181.635 65.3452 180.411 65.3452 cv
179.186 65.3452 178.629 66.3794 178.629 67.3691 cv
cp
179.296 67.3691 mo
179.296 66.856 179.487 65.9023 180.411 65.9023 cv
181.334 65.9023 181.525 66.856 181.525 67.3691 cv
181.525 67.8823 181.334 68.8354 180.411 68.8354 cv
179.487 68.8354 179.296 67.8823 179.296 67.3691 cv
cp
f
184.333 65.9907 mo
184.333 65.4551 li
183.717 65.4551 li
183.717 64.3848 li
183.072 64.3848 li
183.072 65.4551 li
182.552 65.4551 li
182.552 65.9907 li
183.072 65.9907 li
183.072 68.52 li
183.072 68.9819 183.211 69.3413 183.849 69.3413 cv
183.916 69.3413 184.099 69.312 184.333 69.29 cv
184.333 68.7842 li
184.106 68.7842 li
183.974 68.7842 183.717 68.7842 183.717 68.4834 cv
183.717 65.9907 li
184.333 65.9907 li
cp
f
188.087 66.6797 mo
188.087 65.5874 187.339 65.3452 186.746 65.3452 cv
186.13 65.3452 185.807 65.7266 185.624 65.9683 cv
185.609 65.9683 li
185.609 64.0254 li
184.964 64.0254 li
184.964 69.29 li
185.609 69.29 li
185.609 67.2002 li
185.609 66.2324 186.152 65.9243 186.68 65.9243 cv
187.295 65.9243 187.442 66.2617 187.442 66.7822 cv
187.442 69.29 li
188.087 69.29 li
188.087 66.6797 li
cp
f
191.651 68.0874 mo
191.629 68.3735 191.27 68.8428 190.661 68.8428 cv
189.92 68.8428 189.546 68.3809 189.546 67.5815 cv
192.347 67.5815 li
192.347 66.2251 191.805 65.3452 190.698 65.3452 cv
189.429 65.3452 188.857 66.291 188.857 67.479 cv
188.857 68.5864 189.496 69.3999 190.573 69.3999 cv
191.189 69.3999 191.438 69.2534 191.614 69.1362 cv
192.098 68.8135 192.274 68.271 192.296 68.0874 cv
191.651 68.0874 li
cp
189.546 67.0684 mo
189.546 66.4746 190.016 65.9243 190.61 65.9243 cv
191.394 65.9243 191.644 66.4746 191.68 67.0684 cv
189.546 67.0684 li
cp
f
195.918 66.5479 mo
195.918 66.3569 195.823 65.3452 194.452 65.3452 cv
193.697 65.3452 193 65.7266 193 66.5698 cv
193 67.0977 193.352 67.3691 193.887 67.501 cv
194.635 67.6841 li
195.185 67.8237 195.398 67.9263 195.398 68.2344 cv
195.398 68.6597 194.98 68.8428 194.518 68.8428 cv
193.609 68.8428 193.521 68.3589 193.499 68.0581 cv
192.875 68.0581 li
192.897 68.52 193.007 69.3999 194.525 69.3999 cv
195.39 69.3999 196.043 68.9233 196.043 68.1313 cv
196.043 67.6108 195.764 67.3179 194.965 67.1196 cv
194.32 66.9585 li
193.821 66.8335 193.624 66.7603 193.624 66.4453 cv
193.624 65.9683 194.188 65.9023 194.386 65.9023 cv
195.2 65.9023 195.288 66.3057 195.295 66.5479 cv
195.918 66.5479 li
cp
f
197.444 65.4551 mo
196.798 65.4551 li
196.798 69.29 li
197.444 69.29 li
197.444 65.4551 li
cp
197.444 64.7588 mo
197.444 64.0254 li
196.798 64.0254 li
196.798 64.7588 li
197.444 64.7588 li
cp
f
201.212 66.5479 mo
201.212 66.3569 201.117 65.3452 199.746 65.3452 cv
198.991 65.3452 198.294 65.7266 198.294 66.5698 cv
198.294 67.0977 198.646 67.3691 199.181 67.501 cv
199.929 67.6841 li
200.479 67.8237 200.692 67.9263 200.692 68.2344 cv
200.692 68.6597 200.274 68.8428 199.812 68.8428 cv
198.903 68.8428 198.815 68.3589 198.792 68.0581 cv
198.169 68.0581 li
198.191 68.52 198.301 69.3999 199.819 69.3999 cv
200.684 69.3999 201.336 68.9233 201.336 68.1313 cv
201.336 67.6108 201.058 67.3179 200.259 67.1196 cv
199.614 66.9585 li
199.116 66.8335 198.917 66.7603 198.917 66.4453 cv
198.917 65.9683 199.482 65.9023 199.68 65.9023 cv
200.494 65.9023 200.582 66.3057 200.589 66.5479 cv
201.212 66.5479 li
cp
f
204.688 66.6211 mo
204.732 66.3276 204.834 65.8804 205.568 65.8804 cv
206.176 65.8804 206.469 66.1006 206.469 66.5039 cv
206.469 66.8853 206.287 66.9438 206.132 66.9585 cv
205.069 67.0903 li
203.999 67.2222 203.903 67.9702 203.903 68.293 cv
203.903 68.9526 204.402 69.3999 205.106 69.3999 cv
205.854 69.3999 206.243 69.0483 206.492 68.7769 cv
206.513 69.0698 206.601 69.3633 207.173 69.3633 cv
207.32 69.3633 207.416 69.3193 207.526 69.29 cv
207.526 68.8208 li
207.452 68.8354 207.372 68.8501 207.313 68.8501 cv
207.181 68.8501 207.1 68.7842 207.1 68.6226 cv
207.1 66.4155 li
207.1 65.4331 205.986 65.3452 205.677 65.3452 cv
204.732 65.3452 204.124 65.7046 204.094 66.6211 cv
204.688 66.6211 li
cp
206.455 67.9629 mo
206.455 68.4761 205.869 68.8647 205.267 68.8647 cv
204.783 68.8647 204.571 68.6157 204.571 68.1978 cv
204.571 67.7134 205.077 67.6182 205.392 67.5742 cv
206.191 67.4717 206.352 67.4131 206.455 67.3325 cv
206.455 67.9629 li
cp
f
211.316 66.6797 mo
211.316 65.5874 210.568 65.3452 209.974 65.3452 cv
209.315 65.3452 208.956 65.7925 208.816 65.998 cv
208.801 65.998 li
208.801 65.4551 li
208.193 65.4551 li
208.193 69.29 li
208.837 69.29 li
208.837 67.2002 li
208.837 66.1592 209.483 65.9243 209.85 65.9243 cv
210.48 65.9243 210.67 66.2617 210.67 66.9292 cv
210.67 69.29 li
211.316 69.29 li
211.316 66.6797 li
cp
f
215.452 64.0254 mo
214.806 64.0254 li
214.806 65.9468 li
214.792 65.998 li
214.637 65.7778 214.344 65.3452 213.648 65.3452 cv
212.628 65.3452 212.049 66.1812 212.049 67.2593 cv
212.049 68.1753 212.43 69.3999 213.736 69.3999 cv
214.11 69.3999 214.549 69.2827 214.829 68.7622 cv
214.843 68.7622 li
214.843 69.29 li
215.452 69.29 li
215.452 64.0254 li
cp
212.716 67.3618 mo
212.716 66.8706 212.768 65.9243 213.765 65.9243 cv
214.697 65.9243 214.799 66.9292 214.799 67.5522 cv
214.799 68.5713 214.161 68.8428 213.75 68.8428 cv
213.046 68.8428 212.716 68.2046 212.716 67.3618 cv
cp
f
163.319 76.3511 mo
163.319 75.728 163.421 74.7231 164.353 74.7231 cv
165.35 74.7231 165.401 75.6694 165.401 76.1606 cv
165.401 77.0034 165.071 77.6416 164.368 77.6416 cv
163.957 77.6416 163.319 77.3701 163.319 76.3511 cv
cp
162.703 79.6064 mo
163.348 79.6064 li
163.348 77.6855 li
163.363 77.6855 li
163.532 77.957 163.869 78.1987 164.382 78.1987 cv
165.687 78.1987 166.068 76.9741 166.068 76.0576 cv
166.068 74.98 165.489 74.144 164.47 74.144 cv
163.773 74.144 163.48 74.5767 163.326 74.7964 cv
163.312 74.7964 li
163.312 74.2539 li
162.703 74.2539 li
162.703 79.6064 li
cp
f
167.564 75.8599 mo
167.564 75.3027 167.946 74.8335 168.547 74.8335 cv
168.789 74.8335 li
168.789 74.166 li
168.737 74.1514 168.701 74.144 168.62 74.144 cv
168.136 74.144 167.799 74.4448 167.542 74.8921 cv
167.528 74.8921 li
167.528 74.2539 li
166.919 74.2539 li
166.919 78.0889 li
167.564 78.0889 li
167.564 75.8599 li
cp
f
171.883 76.8862 mo
171.861 77.1724 171.502 77.6416 170.893 77.6416 cv
170.153 77.6416 169.779 77.1797 169.779 76.3804 cv
172.58 76.3804 li
172.58 75.0239 172.037 74.144 170.93 74.144 cv
169.662 74.144 169.089 75.0898 169.089 76.2778 cv
169.089 77.3848 169.728 78.1987 170.805 78.1987 cv
171.421 78.1987 171.67 78.0522 171.846 77.9351 cv
172.331 77.6123 172.506 77.0698 172.528 76.8862 cv
171.883 76.8862 li
cp
169.779 75.8672 mo
169.779 75.2729 170.248 74.7231 170.842 74.7231 cv
171.626 74.7231 171.875 75.2729 171.913 75.8672 cv
169.779 75.8672 li
cp
f
176.532 72.8242 mo
175.886 72.8242 li
175.886 74.7451 li
175.872 74.7964 li
175.718 74.5767 175.424 74.144 174.728 74.144 cv
173.709 74.144 173.129 74.98 173.129 76.0576 cv
173.129 76.9741 173.511 78.1987 174.816 78.1987 cv
175.19 78.1987 175.63 78.0815 175.909 77.561 cv
175.923 77.561 li
175.923 78.0889 li
176.532 78.0889 li
176.532 72.8242 li
cp
173.797 76.1606 mo
173.797 75.6694 173.848 74.7231 174.845 74.7231 cv
175.776 74.7231 175.879 75.728 175.879 76.3511 cv
175.879 77.3701 175.241 77.6416 174.831 77.6416 cv
174.127 77.6416 173.797 77.0034 173.797 76.1606 cv
cp
f
178.086 74.2539 mo
177.441 74.2539 li
177.441 78.0889 li
178.086 78.0889 li
178.086 74.2539 li
cp
178.086 73.5576 mo
178.086 72.8242 li
177.441 72.8242 li
177.441 73.5576 li
178.086 73.5576 li
cp
f
182.075 75.5444 mo
182.023 74.8774 181.642 74.144 180.638 74.144 cv
179.369 74.144 178.797 75.0898 178.797 76.2778 cv
178.797 77.3848 179.435 78.1987 180.513 78.1987 cv
181.635 78.1987 182.009 77.3408 182.075 76.7324 cv
181.452 76.7324 li
181.342 77.3188 180.968 77.6416 180.535 77.6416 cv
179.648 77.6416 179.487 76.8276 179.487 76.1675 cv
179.487 75.4858 179.743 74.7231 180.542 74.7231 cv
181.085 74.7231 181.371 75.0313 181.452 75.5444 cv
182.075 75.5444 li
cp
f
184.128 74.7891 mo
184.128 74.2539 li
183.512 74.2539 li
183.512 73.1836 li
182.867 73.1836 li
182.867 74.2539 li
182.346 74.2539 li
182.346 74.7891 li
182.867 74.7891 li
182.867 77.3188 li
182.867 77.7808 183.006 78.1401 183.644 78.1401 cv
183.71 78.1401 183.894 78.1108 184.128 78.0889 cv
184.128 77.583 li
183.901 77.583 li
183.769 77.583 183.512 77.583 183.512 77.2822 cv
183.512 74.7891 li
184.128 74.7891 li
cp
f
185.418 74.2539 mo
184.773 74.2539 li
184.773 78.0889 li
185.418 78.0889 li
185.418 74.2539 li
cp
185.418 73.5576 mo
185.418 72.8242 li
184.773 72.8242 li
184.773 73.5576 li
185.418 73.5576 li
cp
f
186.167 76.1675 mo
186.167 77.1577 186.724 78.1914 187.948 78.1914 cv
189.172 78.1914 189.73 77.1577 189.73 76.1675 cv
189.73 75.1777 189.172 74.144 187.948 74.144 cv
186.724 74.144 186.167 75.1777 186.167 76.1675 cv
cp
186.833 76.1675 mo
186.833 75.6543 187.024 74.7012 187.948 74.7012 cv
188.872 74.7012 189.063 75.6543 189.063 76.1675 cv
189.063 76.6812 188.872 77.6343 187.948 77.6343 cv
187.024 77.6343 186.833 76.6812 186.833 76.1675 cv
cp
f
193.586 75.4785 mo
193.586 74.3862 192.838 74.144 192.245 74.144 cv
191.584 74.144 191.226 74.5913 191.086 74.7964 cv
191.072 74.7964 li
191.072 74.2539 li
190.463 74.2539 li
190.463 78.0889 li
191.108 78.0889 li
191.108 75.999 li
191.108 74.958 191.753 74.7231 192.121 74.7231 cv
192.75 74.7231 192.942 75.0605 192.942 75.728 cv
192.942 78.0889 li
193.586 78.0889 li
193.586 75.4785 li
cp
f
59.3916 107.051 mo
164.977 107.051 li
164.977 140.047 li
59.3916 140.047 li
59.3916 107.051 li
cp
0 0 0 0 cmyk
f
59.3916 107.051 mo
164.977 107.051 li
164.977 140.047 li
59.3916 140.047 li
59.3916 107.051 li
cp
.746 .676 .668 .898 cmyk
@
87.3047 126.482 mo
89.4092 126.482 li
91.1396 126.482 91.6528 124.957 91.6528 123.776 cv
91.6528 122.258 90.8096 121.217 89.4385 121.217 cv
87.3047 121.217 li
87.3047 126.482 li
cp
88.0161 121.826 mo
89.3433 121.826 li
90.311 121.826 90.9194 122.493 90.9194 123.82 cv
90.9194 125.147 90.3184 125.874 89.3945 125.874 cv
88.0161 125.874 li
88.0161 121.826 li
cp
0 0 0 1 cmyk
f
95.0918 125.279 mo
95.0698 125.565 94.7104 126.035 94.1021 126.035 cv
93.3613 126.035 92.9873 125.573 92.9873 124.773 cv
95.7881 124.773 li
95.7881 123.417 95.2456 122.537 94.1387 122.537 cv
92.8701 122.537 92.2979 123.483 92.2979 124.671 cv
92.2979 125.778 92.936 126.592 94.0137 126.592 cv
94.6299 126.592 94.8789 126.445 95.0552 126.328 cv
95.5391 126.005 95.7148 125.463 95.7368 125.279 cv
95.0918 125.279 li
cp
92.9873 124.26 mo
92.9873 123.667 93.4565 123.117 94.0503 123.117 cv
94.835 123.117 95.0845 123.667 95.1211 124.26 cv
92.9873 124.26 li
cp
f
99.3589 123.74 mo
99.3589 123.549 99.2637 122.537 97.8926 122.537 cv
97.1372 122.537 96.4409 122.918 96.4409 123.762 cv
96.4409 124.29 96.793 124.561 97.3281 124.693 cv
98.0757 124.876 li
98.626 125.016 98.8384 125.118 98.8384 125.426 cv
98.8384 125.852 98.4204 126.035 97.9585 126.035 cv
97.0493 126.035 96.9614 125.551 96.9395 125.25 cv
96.3159 125.25 li
96.3384 125.712 96.4482 126.592 97.9658 126.592 cv
98.8311 126.592 99.4839 126.115 99.4839 125.324 cv
99.4839 124.803 99.2051 124.51 98.4058 124.312 cv
97.7607 124.15 li
97.2622 124.026 97.064 123.952 97.064 123.637 cv
97.064 123.161 97.6284 123.094 97.8267 123.094 cv
98.6406 123.094 98.7285 123.498 98.7358 123.74 cv
99.3589 123.74 li
cp
f
100.884 122.647 mo
100.239 122.647 li
100.239 126.482 li
100.884 126.482 li
100.884 122.647 li
cp
100.884 121.951 mo
100.884 121.217 li
100.239 121.217 li
100.239 121.951 li
100.884 121.951 li
cp
f
102.336 124.554 mo
102.336 124.063 102.387 123.117 103.384 123.117 cv
104.316 123.117 104.418 124.121 104.418 124.744 cv
104.418 125.763 103.78 126.035 103.37 126.035 cv
102.666 126.035 102.336 125.397 102.336 124.554 cv
cp
105.034 122.647 mo
104.426 122.647 li
104.426 123.19 li
104.411 123.19 li
104.257 122.97 103.964 122.537 103.267 122.537 cv
102.248 122.537 101.669 123.373 101.669 124.451 cv
101.669 125.368 102.05 126.592 103.355 126.592 cv
103.869 126.592 104.206 126.35 104.375 126.079 cv
104.375 126.049 li
104.389 126.049 li
104.389 126.21 li
104.389 126.666 104.411 127.56 103.296 127.56 cv
103.143 127.56 102.549 127.56 102.431 126.951 cv
101.786 126.951 li
101.911 127.97 102.798 128.095 103.252 128.095 cv
105.027 128.095 105.034 126.717 105.034 126.167 cv
105.034 122.647 li
cp
f
109.052 123.872 mo
109.052 122.779 108.305 122.537 107.71 122.537 cv
107.051 122.537 106.691 122.984 106.552 123.19 cv
106.538 123.19 li
106.538 122.647 li
105.929 122.647 li
105.929 126.482 li
106.574 126.482 li
106.574 124.392 li
106.574 123.351 107.219 123.117 107.586 123.117 cv
108.216 123.117 108.407 123.454 108.407 124.121 cv
108.407 126.482 li
109.052 126.482 li
109.052 123.872 li
cp
f
112.616 123.813 mo
112.66 123.52 112.763 123.072 113.496 123.072 cv
114.104 123.072 114.397 123.292 114.397 123.696 cv
114.397 124.077 114.214 124.136 114.061 124.15 cv
112.997 124.282 li
111.927 124.415 111.832 125.162 111.832 125.485 cv
111.832 126.145 112.33 126.592 113.034 126.592 cv
113.782 126.592 114.17 126.24 114.419 125.969 cv
114.441 126.262 114.53 126.555 115.102 126.555 cv
115.248 126.555 115.343 126.511 115.454 126.482 cv
115.454 126.013 li
115.38 126.027 115.299 126.042 115.241 126.042 cv
115.109 126.042 115.028 125.976 115.028 125.815 cv
115.028 123.608 li
115.028 122.625 113.914 122.537 113.606 122.537 cv
112.66 122.537 112.051 122.896 112.022 123.813 cv
112.616 123.813 li
cp
114.383 125.155 mo
114.383 125.668 113.796 126.057 113.195 126.057 cv
112.711 126.057 112.499 125.808 112.499 125.39 cv
112.499 124.906 113.004 124.81 113.32 124.766 cv
114.119 124.664 114.28 124.605 114.383 124.524 cv
114.383 125.155 li
cp
f
118.159 126.482 mo
118.804 126.482 li
118.804 124.392 li
118.804 123.351 119.45 123.117 119.816 123.117 cv
120.293 123.117 120.417 123.505 120.417 123.828 cv
120.417 126.482 li
121.063 126.482 li
121.063 124.143 li
121.063 123.63 121.422 123.117 121.964 123.117 cv
122.515 123.117 122.676 123.476 122.676 124.003 cv
122.676 126.482 li
123.321 126.482 li
123.321 123.828 li
123.321 122.75 122.544 122.537 122.133 122.537 cv
121.539 122.537 121.283 122.801 120.96 123.161 cv
120.85 122.955 120.63 122.537 119.941 122.537 cv
119.251 122.537 118.921 122.984 118.782 123.19 cv
118.768 123.19 li
118.768 122.647 li
118.159 122.647 li
118.159 126.482 li
cp
f
124.047 124.561 mo
124.047 125.551 124.604 126.584 125.829 126.584 cv
127.053 126.584 127.61 125.551 127.61 124.561 cv
127.61 123.571 127.053 122.537 125.829 122.537 cv
124.604 122.537 124.047 123.571 124.047 124.561 cv
cp
124.714 124.561 mo
124.714 124.048 124.905 123.094 125.829 123.094 cv
126.752 123.094 126.943 124.048 126.943 124.561 cv
126.943 125.074 126.752 126.027 125.829 126.027 cv
124.905 126.027 124.714 125.074 124.714 124.561 cv
cp
f
131.526 121.217 mo
130.88 121.217 li
130.88 123.138 li
130.866 123.19 li
130.712 122.97 130.418 122.537 129.722 122.537 cv
128.703 122.537 128.124 123.373 128.124 124.451 cv
128.124 125.368 128.505 126.592 129.81 126.592 cv
130.184 126.592 130.624 126.475 130.903 125.954 cv
130.917 125.954 li
130.917 126.482 li
131.526 126.482 li
131.526 121.217 li
cp
128.791 124.554 mo
128.791 124.063 128.842 123.117 129.839 123.117 cv
130.771 123.117 130.873 124.121 130.873 124.744 cv
130.873 125.763 130.235 126.035 129.825 126.035 cv
129.121 126.035 128.791 125.397 128.791 124.554 cv
cp
f
135.031 125.279 mo
135.009 125.565 134.649 126.035 134.041 126.035 cv
133.3 126.035 132.926 125.573 132.926 124.773 cv
135.727 124.773 li
135.727 123.417 135.185 122.537 134.078 122.537 cv
132.809 122.537 132.237 123.483 132.237 124.671 cv
132.237 125.778 132.875 126.592 133.953 126.592 cv
134.569 126.592 134.818 126.445 134.994 126.328 cv
135.478 126.005 135.654 125.463 135.676 125.279 cv
135.031 125.279 li
cp
132.926 124.26 mo
132.926 123.667 133.396 123.117 133.99 123.117 cv
134.774 123.117 135.023 123.667 135.06 124.26 cv
132.926 124.26 li
cp
f
137.157 121.217 mo
136.512 121.217 li
136.512 126.482 li
137.157 126.482 li
137.157 121.217 li
cp
f
59.3916 159.844 mo
164.977 159.844 li
164.977 192.84 li
59.3916 192.84 li
59.3916 159.844 li
cp
0 0 0 0 cmyk
f
59.3916 159.844 mo
164.977 159.844 li
164.977 192.84 li
59.3916 192.84 li
59.3916 159.844 li
cp
.746 .676 .668 .898 cmyk
@
68.0859 171.15 mo
68.0566 170.571 67.873 169.471 66.0327 169.471 cv
64.7568 169.471 64.2217 170.278 64.2217 171.099 cv
64.2217 172.016 64.999 172.257 65.3433 172.338 cv
66.4214 172.587 li
67.2866 172.793 67.543 172.969 67.543 173.519 cv
67.543 174.274 66.6782 174.406 66.1646 174.406 cv
65.4902 174.406 64.7129 174.127 64.7129 173.174 cv
64.0459 173.174 li
64.0459 173.666 64.1338 174.105 64.5811 174.508 cv
64.8154 174.721 65.1968 175.015 66.1719 175.015 cv
67.0737 175.015 68.2324 174.67 68.2324 173.423 cv
68.2324 172.587 67.7192 172.177 67.0371 172.016 cv
65.5342 171.671 li
65.2261 171.598 64.9106 171.451 64.9106 171.004 cv
64.9106 170.205 65.666 170.08 66.1133 170.08 cv
66.7075 170.08 67.3818 170.336 67.4185 171.15 cv
68.0859 171.15 li
cp
0 0 0 1 cmyk
f
68.8335 172.954 mo
68.8335 173.944 69.3911 174.978 70.6152 174.978 cv
71.8398 174.978 72.397 173.944 72.397 172.954 cv
72.397 171.964 71.8398 170.93 70.6152 170.93 cv
69.3911 170.93 68.8335 171.964 68.8335 172.954 cv
cp
69.501 172.954 mo
69.501 172.441 69.6914 171.488 70.6152 171.488 cv
71.5391 171.488 71.73 172.441 71.73 172.954 cv
71.73 173.467 71.5391 174.42 70.6152 174.42 cv
69.6914 174.42 69.501 173.467 69.501 172.954 cv
cp
f
73.7905 169.611 mo
73.145 169.611 li
73.145 174.875 li
73.7905 174.875 li
73.7905 169.611 li
cp
f
76.1001 174.164 mo
76.0854 174.164 li
75.0879 171.041 li
74.3403 171.041 li
75.7407 174.875 li
76.4302 174.875 li
77.8892 171.041 li
77.1851 171.041 li
76.1001 174.164 li
cp
f
81.0347 173.673 mo
81.0127 173.958 80.6533 174.428 80.0449 174.428 cv
79.3042 174.428 78.9302 173.966 78.9302 173.167 cv
81.731 173.167 li
81.731 171.81 81.1885 170.93 80.0815 170.93 cv
78.813 170.93 78.2412 171.876 78.2412 173.064 cv
78.2412 174.171 78.8789 174.985 79.9565 174.985 cv
80.5728 174.985 80.8218 174.838 80.998 174.721 cv
81.4819 174.398 81.6577 173.856 81.6797 173.673 cv
81.0347 173.673 li
cp
78.9302 172.653 mo
78.9302 172.06 79.3994 171.51 79.9937 171.51 cv
80.7778 171.51 81.0273 172.06 81.064 172.653 cv
78.9302 172.653 li
cp
f
85.9473 171.576 mo
85.9473 171.041 li
85.3315 171.041 li
85.3315 169.97 li
84.686 169.97 li
84.686 171.041 li
84.1655 171.041 li
84.1655 171.576 li
84.686 171.576 li
84.686 174.105 li
84.686 174.567 84.8252 174.926 85.4634 174.926 cv
85.5293 174.926 85.7124 174.897 85.9473 174.875 cv
85.9473 174.369 li
85.7197 174.369 li
85.5879 174.369 85.3315 174.369 85.3315 174.069 cv
85.3315 171.576 li
85.9473 171.576 li
cp
f
89.7012 172.265 mo
89.7012 171.172 88.9536 170.93 88.3594 170.93 cv
87.7437 170.93 87.4209 171.312 87.2378 171.554 cv
87.2231 171.554 li
87.2231 169.611 li
86.5776 169.611 li
86.5776 174.875 li
87.2231 174.875 li
87.2231 172.786 li
87.2231 171.818 87.7656 171.51 88.2935 171.51 cv
88.9097 171.51 89.0562 171.847 89.0562 172.368 cv
89.0562 174.875 li
89.7012 174.875 li
89.7012 172.265 li
cp
f
93.2651 173.673 mo
93.2427 173.958 92.8838 174.428 92.2749 174.428 cv
91.5347 174.428 91.1606 173.966 91.1606 173.167 cv
93.9614 173.167 li
93.9614 171.81 93.4189 170.93 92.3115 170.93 cv
91.043 170.93 90.4712 171.876 90.4712 173.064 cv
90.4712 174.171 91.1094 174.985 92.187 174.985 cv
92.8027 174.985 93.0522 174.838 93.228 174.721 cv
93.7124 174.398 93.8882 173.856 93.9102 173.673 cv
93.2651 173.673 li
cp
91.1606 172.653 mo
91.1606 172.06 91.6299 171.51 92.2236 171.51 cv
93.0083 171.51 93.2573 172.06 93.2944 172.653 cv
91.1606 172.653 li
cp
f
96.7695 174.875 mo
97.415 174.875 li
97.415 172.786 li
97.415 171.744 98.0601 171.51 98.4268 171.51 cv
98.9033 171.51 99.0278 171.898 99.0278 172.221 cv
99.0278 174.875 li
99.6733 174.875 li
99.6733 172.536 li
99.6733 172.023 100.033 171.51 100.575 171.51 cv
101.125 171.51 101.287 171.869 101.287 172.397 cv
101.287 174.875 li
101.932 174.875 li
101.932 172.221 li
101.932 171.143 101.154 170.93 100.744 170.93 cv
100.15 170.93 99.8931 171.194 99.5708 171.554 cv
99.4604 171.348 99.2407 170.93 98.5513 170.93 cv
97.8623 170.93 97.5322 171.377 97.3931 171.583 cv
97.3784 171.583 li
97.3784 171.041 li
96.7695 171.041 li
96.7695 174.875 li
cp
f
102.658 172.954 mo
102.658 173.944 103.215 174.978 104.439 174.978 cv
105.664 174.978 106.221 173.944 106.221 172.954 cv
106.221 171.964 105.664 170.93 104.439 170.93 cv
103.215 170.93 102.658 171.964 102.658 172.954 cv
cp
103.325 172.954 mo
103.325 172.441 103.516 171.488 104.439 171.488 cv
105.363 171.488 105.554 172.441 105.554 172.954 cv
105.554 173.467 105.363 174.42 104.439 174.42 cv
103.516 174.42 103.325 173.467 103.325 172.954 cv
cp
f
110.137 169.611 mo
109.491 169.611 li
109.491 171.532 li
109.477 171.583 li
109.323 171.363 109.029 170.93 108.333 170.93 cv
107.313 170.93 106.734 171.766 106.734 172.844 cv
106.734 173.761 107.116 174.985 108.421 174.985 cv
108.795 174.985 109.235 174.868 109.513 174.347 cv
109.528 174.347 li
109.528 174.875 li
110.137 174.875 li
110.137 169.611 li
cp
107.401 172.947 mo
107.401 172.456 107.453 171.51 108.45 171.51 cv
109.381 171.51 109.484 172.514 109.484 173.137 cv
109.484 174.157 108.846 174.428 108.436 174.428 cv
107.731 174.428 107.401 173.79 107.401 172.947 cv
cp
f
113.641 173.673 mo
113.619 173.958 113.26 174.428 112.651 174.428 cv
111.911 174.428 111.537 173.966 111.537 173.167 cv
114.338 173.167 li
114.338 171.81 113.795 170.93 112.688 170.93 cv
111.419 170.93 110.848 171.876 110.848 173.064 cv
110.848 174.171 111.486 174.985 112.563 174.985 cv
113.179 174.985 113.429 174.838 113.604 174.721 cv
114.088 174.398 114.265 173.856 114.287 173.673 cv
113.641 173.673 li
cp
111.537 172.653 mo
111.537 172.06 112.006 171.51 112.6 171.51 cv
113.385 171.51 113.634 172.06 113.671 172.653 cv
111.537 172.653 li
cp
f
115.768 169.611 mo
115.123 169.611 li
115.123 174.875 li
115.768 174.875 li
115.768 169.611 li
cp
f
118.554 172.954 mo
118.554 173.944 119.111 174.978 120.336 174.978 cv
121.56 174.978 122.118 173.944 122.118 172.954 cv
122.118 171.964 121.56 170.93 120.336 170.93 cv
119.111 170.93 118.554 171.964 118.554 172.954 cv
cp
119.221 172.954 mo
119.221 172.441 119.412 171.488 120.336 171.488 cv
121.26 171.488 121.45 172.441 121.45 172.954 cv
121.45 173.467 121.26 174.42 120.336 174.42 cv
119.412 174.42 119.221 173.467 119.221 172.954 cv
cp
f
123.584 172.646 mo
123.584 172.089 123.965 171.62 124.566 171.62 cv
124.809 171.62 li
124.809 170.953 li
124.757 170.938 124.72 170.93 124.64 170.93 cv
124.156 170.93 123.818 171.231 123.562 171.678 cv
123.547 171.678 li
123.547 171.041 li
122.938 171.041 li
122.938 174.875 li
123.584 174.875 li
123.584 172.646 li
cp
f
127.991 171.041 mo
127.345 171.041 li
127.345 174.875 li
127.991 174.875 li
127.991 171.041 li
cp
127.991 170.344 mo
127.991 169.611 li
127.345 169.611 li
127.345 170.344 li
127.991 170.344 li
cp
f
128.958 174.875 mo
129.604 174.875 li
129.604 172.786 li
129.604 171.744 130.249 171.51 130.616 171.51 cv
131.092 171.51 131.217 171.898 131.217 172.221 cv
131.217 174.875 li
131.862 174.875 li
131.862 172.536 li
131.862 172.023 132.221 171.51 132.764 171.51 cv
133.314 171.51 133.475 171.869 133.475 172.397 cv
133.475 174.875 li
134.121 174.875 li
134.121 172.221 li
134.121 171.143 133.343 170.93 132.933 170.93 cv
132.339 170.93 132.082 171.194 131.759 171.554 cv
131.649 171.348 131.43 170.93 130.74 170.93 cv
130.051 170.93 129.721 171.377 129.582 171.583 cv
129.567 171.583 li
129.567 171.041 li
128.958 171.041 li
128.958 174.875 li
cp
f
135.631 173.137 mo
135.631 172.514 135.733 171.51 136.665 171.51 cv
137.662 171.51 137.713 172.456 137.713 172.947 cv
137.713 173.79 137.383 174.428 136.679 174.428 cv
136.269 174.428 135.631 174.157 135.631 173.137 cv
cp
135.015 176.393 mo
135.66 176.393 li
135.66 174.472 li
135.675 174.472 li
135.844 174.743 136.181 174.985 136.694 174.985 cv
138 174.985 138.38 173.761 138.38 172.844 cv
138.38 171.766 137.801 170.93 136.782 170.93 cv
136.085 170.93 135.792 171.363 135.638 171.583 cv
135.624 171.583 li
135.624 171.041 li
135.015 171.041 li
135.015 176.393 li
cp
f
139.803 169.611 mo
139.158 169.611 li
139.158 174.875 li
139.803 174.875 li
139.803 169.611 li
cp
f
143.381 173.673 mo
143.359 173.958 143 174.428 142.391 174.428 cv
141.651 174.428 141.277 173.966 141.277 173.167 cv
144.078 173.167 li
144.078 171.81 143.535 170.93 142.428 170.93 cv
141.16 170.93 140.587 171.876 140.587 173.064 cv
140.587 174.171 141.226 174.985 142.303 174.985 cv
142.919 174.985 143.168 174.838 143.344 174.721 cv
143.829 174.398 144.004 173.856 144.026 173.673 cv
143.381 173.673 li
cp
141.277 172.653 mo
141.277 172.06 141.746 171.51 142.34 171.51 cv
143.125 171.51 143.374 172.06 143.411 172.653 cv
141.277 172.653 li
cp
f
144.848 174.875 mo
145.493 174.875 li
145.493 172.786 li
145.493 171.744 146.138 171.51 146.505 171.51 cv
146.981 171.51 147.106 171.898 147.106 172.221 cv
147.106 174.875 li
147.751 174.875 li
147.751 172.536 li
147.751 172.023 148.11 171.51 148.653 171.51 cv
149.203 171.51 149.364 171.869 149.364 172.397 cv
149.364 174.875 li
150.01 174.875 li
150.01 172.221 li
150.01 171.143 149.232 170.93 148.822 170.93 cv
148.228 170.93 147.971 171.194 147.648 171.554 cv
147.539 171.348 147.319 170.93 146.629 170.93 cv
145.94 170.93 145.61 171.377 145.471 171.583 cv
145.456 171.583 li
145.456 171.041 li
144.848 171.041 li
144.848 174.875 li
cp
f
153.566 173.673 mo
153.543 173.958 153.185 174.428 152.576 174.428 cv
151.835 174.428 151.461 173.966 151.461 173.167 cv
154.262 173.167 li
154.262 171.81 153.72 170.93 152.613 170.93 cv
151.344 170.93 150.772 171.876 150.772 173.064 cv
150.772 174.171 151.41 174.985 152.488 174.985 cv
153.104 174.985 153.353 174.838 153.529 174.721 cv
154.013 174.398 154.189 173.856 154.211 173.673 cv
153.566 173.673 li
cp
151.461 172.653 mo
151.461 172.06 151.931 171.51 152.524 171.51 cv
153.309 171.51 153.559 172.06 153.595 172.653 cv
151.461 172.653 li
cp
f
158.156 172.265 mo
158.156 171.172 157.408 170.93 156.814 170.93 cv
156.154 170.93 155.795 171.377 155.655 171.583 cv
155.641 171.583 li
155.641 171.041 li
155.032 171.041 li
155.032 174.875 li
155.677 174.875 li
155.677 172.786 li
155.677 171.744 156.323 171.51 156.689 171.51 cv
157.32 171.51 157.51 171.847 157.51 172.514 cv
157.51 174.875 li
158.156 174.875 li
158.156 172.265 li
cp
f
160.517 171.576 mo
160.517 171.041 li
159.901 171.041 li
159.901 169.97 li
159.255 169.97 li
159.255 171.041 li
158.735 171.041 li
158.735 171.576 li
159.255 171.576 li
159.255 174.105 li
159.255 174.567 159.395 174.926 160.033 174.926 cv
160.099 174.926 160.282 174.897 160.517 174.875 cv
160.517 174.369 li
160.29 174.369 li
160.158 174.369 159.901 174.369 159.901 174.069 cv
159.901 171.576 li
160.517 171.576 li
cp
f
83.3662 179.84 mo
82.7212 179.84 li
82.7212 183.674 li
83.3662 183.674 li
83.3662 179.84 li
cp
83.3662 179.143 mo
83.3662 178.409 li
82.7212 178.409 li
82.7212 179.143 li
83.3662 179.143 li
cp
f
85.7417 180.375 mo
85.7417 179.84 li
85.126 179.84 li
85.126 178.769 li
84.481 178.769 li
84.481 179.84 li
83.9604 179.84 li
83.9604 180.375 li
84.481 180.375 li
84.481 182.904 li
84.481 183.365 84.6201 183.725 85.2578 183.725 cv
85.3242 183.725 85.5073 183.695 85.7417 183.674 cv
85.7417 183.168 li
85.5146 183.168 li
85.3828 183.168 85.126 183.168 85.126 182.867 cv
85.126 180.375 li
85.7417 180.375 li
cp
f
90.5591 180.705 mo
90.5737 180.705 li
91.3511 183.674 li
92.0186 183.674 li
93.1328 179.84 li
92.4878 179.84 li
91.7104 182.853 li
91.6958 182.853 li
90.9478 179.84 li
90.2295 179.84 li
89.4888 182.853 li
89.4741 182.853 li
88.7407 179.84 li
88.0371 179.84 li
89.144 183.674 li
89.8115 183.674 li
90.5591 180.705 li
cp
f
94.3647 179.84 mo
93.7192 179.84 li
93.7192 183.674 li
94.3647 183.674 li
94.3647 179.84 li
cp
94.3647 179.143 mo
94.3647 178.409 li
93.7192 178.409 li
93.7192 179.143 li
94.3647 179.143 li
cp
f
96.7402 180.375 mo
96.7402 179.84 li
96.1245 179.84 li
96.1245 178.769 li
95.479 178.769 li
95.479 179.84 li
94.9585 179.84 li
94.9585 180.375 li
95.479 180.375 li
95.479 182.904 li
95.479 183.365 95.6187 183.725 96.2563 183.725 cv
96.3223 183.725 96.5059 183.695 96.7402 183.674 cv
96.7402 183.168 li
96.5132 183.168 li
96.3813 183.168 96.1245 183.168 96.1245 182.867 cv
96.1245 180.375 li
96.7402 180.375 li
cp
f
100.495 181.063 mo
100.495 179.971 99.7466 179.729 99.1528 179.729 cv
98.5366 179.729 98.2144 180.11 98.0308 180.353 cv
98.0161 180.353 li
98.0161 178.409 li
97.3711 178.409 li
97.3711 183.674 li
98.0161 183.674 li
98.0161 181.584 li
98.0161 180.616 98.5586 180.309 99.0869 180.309 cv
99.7026 180.309 99.8491 180.646 99.8491 181.166 cv
99.8491 183.674 li
100.495 183.674 li
100.495 181.063 li
cp
f
104.058 181.005 mo
104.102 180.711 104.205 180.264 104.938 180.264 cv
105.546 180.264 105.84 180.484 105.84 180.888 cv
105.84 181.27 105.656 181.328 105.502 181.342 cv
104.439 181.475 li
103.369 181.605 103.273 182.354 103.273 182.677 cv
103.273 183.336 103.772 183.783 104.476 183.783 cv
105.224 183.783 105.612 183.432 105.862 183.16 cv
105.884 183.454 105.972 183.747 106.543 183.747 cv
106.69 183.747 106.786 183.703 106.896 183.674 cv
106.896 183.205 li
106.822 183.219 106.742 183.234 106.683 183.234 cv
106.551 183.234 106.47 183.168 106.47 183.007 cv
106.47 180.8 li
106.47 179.816 105.356 179.729 105.048 179.729 cv
104.102 179.729 103.494 180.088 103.464 181.005 cv
104.058 181.005 li
cp
105.825 182.347 mo
105.825 182.859 105.239 183.248 104.637 183.248 cv
104.153 183.248 103.941 183 103.941 182.582 cv
103.941 182.098 104.447 182.002 104.762 181.958 cv
105.561 181.855 105.723 181.797 105.825 181.717 cv
105.825 182.347 li
cp
f
112.402 180.932 mo
112.402 180.741 112.307 179.729 110.936 179.729 cv
110.181 179.729 109.484 180.11 109.484 180.953 cv
109.484 181.481 109.836 181.753 110.371 181.885 cv
111.119 182.068 li
111.669 182.207 111.881 182.311 111.881 182.618 cv
111.881 183.043 111.464 183.227 111.002 183.227 cv
110.092 183.227 110.004 182.742 109.982 182.441 cv
109.359 182.441 li
109.381 182.904 109.491 183.783 111.009 183.783 cv
111.875 183.783 112.527 183.307 112.527 182.516 cv
112.527 181.994 112.248 181.701 111.449 181.504 cv
110.804 181.342 li
110.305 181.218 110.107 181.145 110.107 180.829 cv
110.107 180.353 110.672 180.287 110.87 180.287 cv
111.684 180.287 111.771 180.689 111.779 180.932 cv
112.402 180.932 li
cp
f
113.927 179.84 mo
113.282 179.84 li
113.282 183.674 li
113.927 183.674 li
113.927 179.84 li
cp
113.927 179.143 mo
113.927 178.409 li
113.282 178.409 li
113.282 179.143 li
113.927 179.143 li
cp
f
114.895 183.674 mo
115.541 183.674 li
115.541 181.584 li
115.541 180.543 116.186 180.309 116.552 180.309 cv
117.029 180.309 117.153 180.697 117.153 181.02 cv
117.153 183.674 li
117.799 183.674 li
117.799 181.335 li
117.799 180.822 118.158 180.309 118.701 180.309 cv
119.25 180.309 119.412 180.668 119.412 181.195 cv
119.412 183.674 li
120.057 183.674 li
120.057 181.02 li
120.057 179.941 119.28 179.729 118.869 179.729 cv
118.275 179.729 118.019 179.993 117.696 180.353 cv
117.586 180.146 117.366 179.729 116.677 179.729 cv
115.988 179.729 115.658 180.176 115.519 180.382 cv
115.504 180.382 li
115.504 179.84 li
114.895 179.84 li
114.895 183.674 li
cp
f
124.112 183.674 mo
124.112 179.84 li
123.467 179.84 li
123.467 181.951 li
123.467 182.508 123.225 183.227 122.411 183.227 cv
121.993 183.227 121.67 183.014 121.67 182.383 cv
121.67 179.84 li
121.025 179.84 li
121.025 182.596 li
121.025 183.513 121.707 183.783 122.271 183.783 cv
122.887 183.783 123.217 183.549 123.489 183.102 cv
123.503 183.117 li
123.503 183.674 li
124.112 183.674 li
cp
f
125.74 178.409 mo
125.094 178.409 li
125.094 183.674 li
125.74 183.674 li
125.74 178.409 li
cp
f
127.279 181.005 mo
127.323 180.711 127.426 180.264 128.159 180.264 cv
128.768 180.264 129.061 180.484 129.061 180.888 cv
129.061 181.27 128.878 181.328 128.724 181.342 cv
127.661 181.475 li
126.59 181.605 126.495 182.354 126.495 182.677 cv
126.495 183.336 126.994 183.783 127.697 183.783 cv
128.445 183.783 128.834 183.432 129.083 183.16 cv
129.105 183.454 129.193 183.747 129.765 183.747 cv
129.912 183.747 130.007 183.703 130.117 183.674 cv
130.117 183.205 li
130.044 183.219 129.963 183.234 129.904 183.234 cv
129.772 183.234 129.692 183.168 129.692 183.007 cv
129.692 180.8 li
129.692 179.816 128.577 179.729 128.269 179.729 cv
127.323 179.729 126.715 180.088 126.686 181.005 cv
127.279 181.005 li
cp
129.046 182.347 mo
129.046 182.859 128.46 183.248 127.859 183.248 cv
127.375 183.248 127.162 183 127.162 182.582 cv
127.162 182.098 127.668 182.002 127.983 181.958 cv
128.783 181.855 128.944 181.797 129.046 181.717 cv
129.046 182.347 li
cp
f
132.192 180.375 mo
132.192 179.84 li
131.576 179.84 li
131.576 178.769 li
130.931 178.769 li
130.931 179.84 li
130.41 179.84 li
130.41 180.375 li
130.931 180.375 li
130.931 182.904 li
130.931 183.365 131.07 183.725 131.708 183.725 cv
131.774 183.725 131.958 183.695 132.192 183.674 cv
132.192 183.168 li
131.965 183.168 li
131.833 183.168 131.576 183.168 131.576 182.867 cv
131.576 180.375 li
132.192 180.375 li
cp
f
133.482 179.84 mo
132.837 179.84 li
132.837 183.674 li
133.482 183.674 li
133.482 179.84 li
cp
133.482 179.143 mo
133.482 178.409 li
132.837 178.409 li
132.837 179.143 li
133.482 179.143 li
cp
f
134.23 181.753 mo
134.23 182.742 134.788 183.776 136.012 183.776 cv
137.237 183.776 137.794 182.742 137.794 181.753 cv
137.794 180.764 137.237 179.729 136.012 179.729 cv
134.788 179.729 134.23 180.764 134.23 181.753 cv
cp
134.897 181.753 mo
134.897 181.24 135.088 180.287 136.012 180.287 cv
136.936 180.287 137.126 181.24 137.126 181.753 cv
137.126 182.266 136.936 183.219 136.012 183.219 cv
135.088 183.219 134.897 182.266 134.897 181.753 cv
cp
f
141.651 181.063 mo
141.651 179.971 140.903 179.729 140.309 179.729 cv
139.649 179.729 139.29 180.176 139.15 180.382 cv
139.136 180.382 li
139.136 179.84 li
138.527 179.84 li
138.527 183.674 li
139.172 183.674 li
139.172 181.584 li
139.172 180.543 139.818 180.309 140.184 180.309 cv
140.815 180.309 141.005 180.646 141.005 181.313 cv
141.005 183.674 li
141.651 183.674 li
141.651 181.063 li
cp
f
59.3916 212.637 mo
164.977 212.637 li
164.977 245.632 li
59.3916 245.632 li
59.3916 212.637 li
cp
0 0 0 0 cmyk
f
59.3916 212.637 mo
164.977 212.637 li
164.977 245.632 li
59.3916 245.632 li
59.3916 212.637 li
cp
.746 .676 .668 .898 cmyk
@
74.8423 218.004 mo
74.1313 218.004 li
74.1313 223.269 li
74.8423 223.269 li
74.8423 218.004 li
cp
0 0 0 1 cmyk
f
79.1025 220.658 mo
79.1025 219.565 78.3545 219.324 77.7607 219.324 cv
77.1011 219.324 76.7417 219.771 76.6021 219.977 cv
76.5874 219.977 li
76.5874 219.434 li
75.979 219.434 li
75.979 223.269 li
76.624 223.269 li
76.624 221.179 li
76.624 220.137 77.2695 219.902 77.6362 219.902 cv
78.2666 219.902 78.4575 220.24 78.4575 220.907 cv
78.4575 223.269 li
79.1025 223.269 li
79.1025 220.658 li
cp
f
81.4634 219.969 mo
81.4634 219.434 li
80.8477 219.434 li
80.8477 218.363 li
80.2026 218.363 li
80.2026 219.434 li
79.6816 219.434 li
79.6816 219.969 li
80.2026 219.969 li
80.2026 222.498 li
80.2026 222.961 80.3418 223.32 80.9795 223.32 cv
81.0454 223.32 81.229 223.291 81.4634 223.269 cv
81.4634 222.762 li
81.2363 222.762 li
81.1045 222.762 80.8477 222.762 80.8477 222.462 cv
80.8477 219.969 li
81.4634 219.969 li
cp
f
84.7046 222.066 mo
84.6826 222.352 84.3232 222.821 83.7144 222.821 cv
82.9741 222.821 82.6001 222.359 82.6001 221.561 cv
85.4009 221.561 li
85.4009 220.203 84.8584 219.324 83.7515 219.324 cv
82.4829 219.324 81.9106 220.27 81.9106 221.457 cv
81.9106 222.564 82.5488 223.379 83.6265 223.379 cv
84.2427 223.379 84.4917 223.232 84.668 223.114 cv
85.1519 222.791 85.3276 222.249 85.3496 222.066 cv
84.7046 222.066 li
cp
82.6001 221.047 mo
82.6001 220.453 83.0693 219.902 83.6631 219.902 cv
84.4478 219.902 84.6973 220.453 84.7339 221.047 cv
82.6001 221.047 li
cp
f
86.9043 221.039 mo
86.9043 220.482 87.2856 220.013 87.8867 220.013 cv
88.1284 220.013 li
88.1284 219.346 li
88.0771 219.331 88.0405 219.324 87.96 219.324 cv
87.4761 219.324 87.1387 219.624 86.8823 220.071 cv
86.8677 220.071 li
86.8677 219.434 li
86.2588 219.434 li
86.2588 223.269 li
86.9043 223.269 li
86.9043 221.039 li
cp
f
89.1772 221.531 mo
89.1772 220.907 89.2798 219.902 90.2109 219.902 cv
91.208 219.902 91.2593 220.849 91.2593 221.34 cv
91.2593 222.184 90.9297 222.821 90.2256 222.821 cv
89.8149 222.821 89.1772 222.55 89.1772 221.531 cv
cp
88.561 224.786 mo
89.2065 224.786 li
89.2065 222.865 li
89.2212 222.865 li
89.3896 223.137 89.7271 223.379 90.2402 223.379 cv
91.5454 223.379 91.9268 222.154 91.9268 221.237 cv
91.9268 220.16 91.3477 219.324 90.3281 219.324 cv
89.6318 219.324 89.3384 219.756 89.1846 219.977 cv
89.1699 219.977 li
89.1699 219.434 li
88.561 219.434 li
88.561 224.786 li
cp
f
93.4224 221.039 mo
93.4224 220.482 93.8037 220.013 94.4053 220.013 cv
94.647 220.013 li
94.647 219.346 li
94.5957 219.331 94.5591 219.324 94.4785 219.324 cv
93.9946 219.324 93.6572 219.624 93.4004 220.071 cv
93.3857 220.071 li
93.3857 219.434 li
92.7773 219.434 li
92.7773 223.269 li
93.4224 223.269 li
93.4224 221.039 li
cp
f
97.7412 222.066 mo
97.7192 222.352 97.3599 222.821 96.7515 222.821 cv
96.0107 222.821 95.6367 222.359 95.6367 221.561 cv
98.438 221.561 li
98.438 220.203 97.895 219.324 96.7881 219.324 cv
95.5195 219.324 94.9478 220.27 94.9478 221.457 cv
94.9478 222.564 95.5854 223.379 96.6636 223.379 cv
97.2793 223.379 97.5288 223.232 97.7046 223.114 cv
98.1885 222.791 98.3647 222.249 98.3867 222.066 cv
97.7412 222.066 li
cp
95.6367 221.047 mo
95.6367 220.453 96.106 219.902 96.7002 219.902 cv
97.4849 219.902 97.7339 220.453 97.7705 221.047 cv
95.6367 221.047 li
cp
f
100.616 219.969 mo
100.616 219.434 li
99.9995 219.434 li
99.9995 218.363 li
99.3545 218.363 li
99.3545 219.434 li
98.834 219.434 li
98.834 219.969 li
99.3545 219.969 li
99.3545 222.498 li
99.3545 222.961 99.4937 223.32 100.131 223.32 cv
100.198 223.32 100.381 223.291 100.616 223.269 cv
100.616 222.762 li
100.388 222.762 li
100.256 222.762 99.9995 222.762 99.9995 222.462 cv
99.9995 219.969 li
100.616 219.969 li
cp
f
104.692 219.969 mo
104.692 219.434 li
104.076 219.434 li
104.076 218.363 li
103.431 218.363 li
103.431 219.434 li
102.911 219.434 li
102.911 219.969 li
103.431 219.969 li
103.431 222.498 li
103.431 222.961 103.57 223.32 104.208 223.32 cv
104.274 223.32 104.458 223.291 104.692 223.269 cv
104.692 222.762 li
104.465 222.762 li
104.333 222.762 104.076 222.762 104.076 222.462 cv
104.076 219.969 li
104.692 219.969 li
cp
f
108.446 220.658 mo
108.446 219.565 107.699 219.324 107.104 219.324 cv
106.489 219.324 106.166 219.705 105.983 219.947 cv
105.968 219.947 li
105.968 218.004 li
105.323 218.004 li
105.323 223.269 li
105.968 223.269 li
105.968 221.179 li
105.968 220.211 106.511 219.902 107.039 219.902 cv
107.654 219.902 107.801 220.24 107.801 220.761 cv
107.801 223.269 li
108.446 223.269 li
108.446 220.658 li
cp
f
112.01 222.066 mo
111.988 222.352 111.628 222.821 111.02 222.821 cv
110.279 222.821 109.906 222.359 109.906 221.561 cv
112.707 221.561 li
112.707 220.203 112.164 219.324 111.057 219.324 cv
109.788 219.324 109.216 220.27 109.216 221.457 cv
109.216 222.564 109.854 223.379 110.932 223.379 cv
111.548 223.379 111.797 223.232 111.973 223.114 cv
112.457 222.791 112.633 222.249 112.655 222.066 cv
112.01 222.066 li
cp
109.906 221.047 mo
109.906 220.453 110.375 219.902 110.969 219.902 cv
111.753 219.902 112.002 220.453 112.039 221.047 cv
109.906 221.047 li
cp
f
116.248 221.039 mo
116.248 220.482 116.629 220.013 117.23 220.013 cv
117.473 220.013 li
117.473 219.346 li
117.421 219.331 117.384 219.324 117.304 219.324 cv
116.82 219.324 116.482 219.624 116.226 220.071 cv
116.211 220.071 li
116.211 219.434 li
115.603 219.434 li
115.603 223.269 li
116.248 223.269 li
116.248 221.039 li
cp
f
120.567 222.066 mo
120.545 222.352 120.186 222.821 119.577 222.821 cv
118.836 222.821 118.462 222.359 118.462 221.561 cv
121.263 221.561 li
121.263 220.203 120.721 219.324 119.613 219.324 cv
118.345 219.324 117.773 220.27 117.773 221.457 cv
117.773 222.564 118.411 223.379 119.489 223.379 cv
120.105 223.379 120.354 223.232 120.53 223.114 cv
121.014 222.791 121.19 222.249 121.212 222.066 cv
120.567 222.066 li
cp
118.462 221.047 mo
118.462 220.453 118.932 219.902 119.525 219.902 cv
120.31 219.902 120.56 220.453 120.596 221.047 cv
118.462 221.047 li
cp
f
124.834 220.525 mo
124.834 220.336 124.739 219.324 123.368 219.324 cv
122.612 219.324 121.916 219.705 121.916 220.548 cv
121.916 221.076 122.268 221.348 122.803 221.479 cv
123.551 221.662 li
124.101 221.802 124.313 221.904 124.313 222.213 cv
124.313 222.638 123.896 222.821 123.434 222.821 cv
122.524 222.821 122.437 222.338 122.415 222.037 cv
121.791 222.037 li
121.813 222.498 121.923 223.379 123.441 223.379 cv
124.306 223.379 124.958 222.902 124.958 222.109 cv
124.958 221.59 124.68 221.296 123.881 221.098 cv
123.236 220.937 li
122.737 220.813 122.539 220.738 122.539 220.424 cv
122.539 219.947 123.104 219.881 123.302 219.881 cv
124.116 219.881 124.204 220.284 124.211 220.525 cv
124.834 220.525 li
cp
f
128.808 223.269 mo
128.808 219.434 li
128.163 219.434 li
128.163 221.545 li
128.163 222.103 127.921 222.821 127.107 222.821 cv
126.689 222.821 126.367 222.608 126.367 221.979 cv
126.367 219.434 li
125.721 219.434 li
125.721 222.19 li
125.721 223.107 126.403 223.379 126.968 223.379 cv
127.583 223.379 127.914 223.144 128.185 222.696 cv
128.2 222.711 li
128.2 223.269 li
128.808 223.269 li
cp
f
130.436 218.004 mo
129.791 218.004 li
129.791 223.269 li
130.436 223.269 li
130.436 218.004 li
cp
f
132.812 219.969 mo
132.812 219.434 li
132.196 219.434 li
132.196 218.363 li
131.55 218.363 li
131.55 219.434 li
131.03 219.434 li
131.03 219.969 li
131.55 219.969 li
131.55 222.498 li
131.55 222.961 131.69 223.32 132.328 223.32 cv
132.394 223.32 132.577 223.291 132.812 223.269 cv
132.812 222.762 li
132.584 222.762 li
132.452 222.762 132.196 222.762 132.196 222.462 cv
132.196 219.969 li
132.812 219.969 li
cp
f
136.243 220.525 mo
136.243 220.336 136.148 219.324 134.777 219.324 cv
134.021 219.324 133.325 219.705 133.325 220.548 cv
133.325 221.076 133.677 221.348 134.212 221.479 cv
134.96 221.662 li
135.51 221.802 135.723 221.904 135.723 222.213 cv
135.723 222.638 135.305 222.821 134.843 222.821 cv
133.934 222.821 133.846 222.338 133.824 222.037 cv
133.2 222.037 li
133.222 222.498 133.332 223.379 134.85 223.379 cv
135.715 223.379 136.368 222.902 136.368 222.109 cv
136.368 221.59 136.089 221.296 135.29 221.098 cv
134.645 220.937 li
134.146 220.813 133.948 220.738 133.948 220.424 cv
133.948 219.947 134.513 219.881 134.711 219.881 cv
135.524 219.881 135.613 220.284 135.62 220.525 cv
136.243 220.525 li
cp
f
139.719 220.6 mo
139.763 220.307 139.865 219.859 140.599 219.859 cv
141.207 219.859 141.5 220.078 141.5 220.482 cv
141.5 220.863 141.317 220.922 141.163 220.937 cv
140.1 221.068 li
139.029 221.201 138.934 221.949 138.934 222.271 cv
138.934 222.932 139.433 223.379 140.137 223.379 cv
140.884 223.379 141.273 223.026 141.522 222.755 cv
141.544 223.049 141.632 223.342 142.204 223.342 cv
142.351 223.342 142.446 223.298 142.556 223.269 cv
142.556 222.799 li
142.483 222.814 142.402 222.828 142.344 222.828 cv
142.211 222.828 142.131 222.762 142.131 222.602 cv
142.131 220.395 li
142.131 219.412 141.017 219.324 140.708 219.324 cv
139.763 219.324 139.154 219.684 139.125 220.6 cv
139.719 220.6 li
cp
141.486 221.941 mo
141.486 222.455 140.899 222.844 140.298 222.844 cv
139.814 222.844 139.602 222.594 139.602 222.176 cv
139.602 221.691 140.107 221.597 140.422 221.553 cv
141.222 221.449 141.383 221.391 141.486 221.311 cv
141.486 221.941 li
cp
f
146.347 220.658 mo
146.347 219.565 145.599 219.324 145.005 219.324 cv
144.345 219.324 143.986 219.771 143.847 219.977 cv
143.832 219.977 li
143.832 219.434 li
143.224 219.434 li
143.224 223.269 li
143.869 223.269 li
143.869 221.179 li
143.869 220.137 144.514 219.902 144.88 219.902 cv
145.511 219.902 145.702 220.24 145.702 220.907 cv
145.702 223.269 li
146.347 223.269 li
146.347 220.658 li
cp
f
150.482 218.004 mo
149.837 218.004 li
149.837 219.925 li
149.823 219.977 li
149.668 219.756 149.375 219.324 148.679 219.324 cv
147.66 219.324 147.081 220.16 147.081 221.237 cv
147.081 222.154 147.461 223.379 148.767 223.379 cv
149.141 223.379 149.581 223.262 149.859 222.74 cv
149.874 222.74 li
149.874 223.269 li
150.482 223.269 li
150.482 218.004 li
cp
147.748 221.34 mo
147.748 220.849 147.799 219.902 148.796 219.902 cv
149.727 219.902 149.83 220.907 149.83 221.531 cv
149.83 222.55 149.192 222.821 148.781 222.821 cv
148.078 222.821 147.748 222.184 147.748 221.34 cv
cp
f
70.8389 230.865 mo
70.8169 231.15 70.4575 231.619 69.8491 231.619 cv
69.1084 231.619 68.7349 231.158 68.7349 230.359 cv
71.5356 230.359 li
71.5356 229.002 70.9932 228.123 69.8857 228.123 cv
68.6172 228.123 68.0454 229.068 68.0454 230.256 cv
68.0454 231.363 68.6831 232.178 69.7612 232.178 cv
70.377 232.178 70.6265 232.03 70.8022 231.913 cv
71.2861 231.59 71.4624 231.048 71.4844 230.865 cv
70.8389 230.865 li
cp
68.7349 229.846 mo
68.7349 229.252 69.2041 228.701 69.7979 228.701 cv
70.5825 228.701 70.8315 229.252 70.8682 229.846 cv
68.7349 229.846 li
cp
f
73.6475 231.355 mo
73.6328 231.355 li
72.6353 228.232 li
71.8877 228.232 li
73.2881 232.066 li
73.9771 232.066 li
75.4365 228.232 li
74.7324 228.232 li
73.6475 231.355 li
cp
f
76.5435 229.398 mo
76.5874 229.105 76.6904 228.658 77.4233 228.658 cv
78.0322 228.658 78.3252 228.877 78.3252 229.281 cv
78.3252 229.662 78.1421 229.721 77.9878 229.735 cv
76.9248 229.867 li
75.8545 230 75.7593 230.747 75.7593 231.07 cv
75.7593 231.73 76.2578 232.178 76.9614 232.178 cv
77.7095 232.178 78.0981 231.825 78.3472 231.554 cv
78.3691 231.848 78.4575 232.141 79.0293 232.141 cv
79.1758 232.141 79.271 232.096 79.3813 232.066 cv
79.3813 231.598 li
79.3081 231.612 79.2271 231.627 79.1685 231.627 cv
79.0366 231.627 78.9561 231.561 78.9561 231.4 cv
78.9561 229.193 li
78.9561 228.211 77.8413 228.123 77.5337 228.123 cv
76.5874 228.123 75.979 228.481 75.9497 229.398 cv
76.5435 229.398 li
cp
78.3105 230.74 mo
78.3105 231.254 77.7241 231.643 77.123 231.643 cv
76.6387 231.643 76.4263 231.393 76.4263 230.975 cv
76.4263 230.49 76.9321 230.396 77.2476 230.352 cv
78.0469 230.248 78.208 230.189 78.3105 230.109 cv
78.3105 230.74 li
cp
f
80.7085 226.803 mo
80.063 226.803 li
80.063 232.066 li
80.7085 232.066 li
80.7085 226.803 li
cp
f
84.7852 232.066 mo
84.7852 228.232 li
84.1396 228.232 li
84.1396 230.344 li
84.1396 230.901 83.8979 231.619 83.084 231.619 cv
82.666 231.619 82.3433 231.407 82.3433 230.777 cv
82.3433 228.232 li
81.6982 228.232 li
81.6982 230.989 li
81.6982 231.906 82.3799 232.178 82.9448 232.178 cv
83.5605 232.178 83.8906 231.942 84.1616 231.495 cv
84.1763 231.51 li
84.1763 232.066 li
84.7852 232.066 li
cp
f
86.3247 229.398 mo
86.3687 229.105 86.4717 228.658 87.2046 228.658 cv
87.8135 228.658 88.1064 228.877 88.1064 229.281 cv
88.1064 229.662 87.9233 229.721 87.7695 229.735 cv
86.7061 229.867 li
85.6357 230 85.5405 230.747 85.5405 231.07 cv
85.5405 231.73 86.0391 232.178 86.7427 232.178 cv
87.4907 232.178 87.8794 231.825 88.1284 231.554 cv
88.1504 231.848 88.2388 232.141 88.8105 232.141 cv
88.957 232.141 89.0522 232.096 89.1626 232.066 cv
89.1626 231.598 li
89.0894 231.612 89.0083 231.627 88.9497 231.627 cv
88.8179 231.627 88.7373 231.561 88.7373 231.4 cv
88.7373 229.193 li
88.7373 228.211 87.6226 228.123 87.3149 228.123 cv
86.3687 228.123 85.7603 228.481 85.731 229.398 cv
86.3247 229.398 li
cp
88.0918 230.74 mo
88.0918 231.254 87.5054 231.643 86.9043 231.643 cv
86.4204 231.643 86.2075 231.393 86.2075 230.975 cv
86.2075 230.49 86.7134 230.396 87.0288 230.352 cv
87.8281 230.248 87.9893 230.189 88.0918 230.109 cv
88.0918 230.74 li
cp
f
91.2373 228.768 mo
91.2373 228.232 li
90.6216 228.232 li
90.6216 227.162 li
89.9766 227.162 li
89.9766 228.232 li
89.4556 228.232 li
89.4556 228.768 li
89.9766 228.768 li
89.9766 231.297 li
89.9766 231.76 90.1157 232.119 90.7534 232.119 cv
90.8193 232.119 91.0029 232.09 91.2373 232.066 cv
91.2373 231.561 li
91.0103 231.561 li
90.8784 231.561 90.6216 231.561 90.6216 231.261 cv
90.6216 228.768 li
91.2373 228.768 li
cp
f
94.4785 230.865 mo
94.4565 231.15 94.0972 231.619 93.4888 231.619 cv
92.748 231.619 92.374 231.158 92.374 230.359 cv
95.1748 230.359 li
95.1748 229.002 94.6323 228.123 93.5254 228.123 cv
92.2568 228.123 91.6846 229.068 91.6846 230.256 cv
91.6846 231.363 92.3228 232.178 93.4004 232.178 cv
94.0166 232.178 94.2656 232.03 94.4419 231.913 cv
94.9258 231.59 95.1016 231.048 95.1235 230.865 cv
94.4785 230.865 li
cp
92.374 229.846 mo
92.374 229.252 92.8433 228.701 93.437 228.701 cv
94.2217 228.701 94.4712 229.252 94.5078 229.846 cv
92.374 229.846 li
cp
f
99.3545 231.355 mo
99.3398 231.355 li
98.3203 228.232 li
97.5874 228.232 li
99.0098 232.17 li
98.7017 232.961 98.665 233.057 98.3276 233.057 cv
98.1519 233.057 98.02 233.021 97.9395 232.99 cv
97.9395 233.578 li
98.042 233.607 98.1152 233.637 98.2104 233.637 cv
99.0391 233.637 99.105 233.549 99.7139 231.994 cv
100.205 230.74 100.645 229.486 101.092 228.232 cv
100.381 228.232 li
99.3545 231.355 li
cp
f
101.429 230.146 mo
101.429 231.136 101.987 232.17 103.211 232.17 cv
104.436 232.17 104.993 231.136 104.993 230.146 cv
104.993 229.156 104.436 228.123 103.211 228.123 cv
101.987 228.123 101.429 229.156 101.429 230.146 cv
cp
102.097 230.146 mo
102.097 229.633 102.287 228.68 103.211 228.68 cv
104.135 228.68 104.326 229.633 104.326 230.146 cv
104.326 230.659 104.135 231.612 103.211 231.612 cv
102.287 231.612 102.097 230.659 102.097 230.146 cv
cp
f
108.835 232.066 mo
108.835 228.232 li
108.19 228.232 li
108.19 230.344 li
108.19 230.901 107.948 231.619 107.134 231.619 cv
106.716 231.619 106.394 231.407 106.394 230.777 cv
106.394 228.232 li
105.748 228.232 li
105.748 230.989 li
105.748 231.906 106.43 232.178 106.995 232.178 cv
107.61 232.178 107.94 231.942 108.212 231.495 cv
108.227 231.51 li
108.227 232.066 li
108.835 232.066 li
cp
f
110.536 229.838 mo
110.536 229.281 110.917 228.812 111.519 228.812 cv
111.761 228.812 li
111.761 228.145 li
111.709 228.129 111.673 228.123 111.592 228.123 cv
111.108 228.123 110.771 228.423 110.514 228.87 cv
110.5 228.87 li
110.5 228.232 li
109.891 228.232 li
109.891 232.066 li
110.536 232.066 li
110.536 229.838 li
cp
f
114.283 232.066 mo
114.928 232.066 li
114.928 229.978 li
114.928 228.936 115.573 228.701 115.94 228.701 cv
116.417 228.701 116.542 229.09 116.542 229.412 cv
116.542 232.066 li
117.187 232.066 li
117.187 229.729 li
117.187 229.215 117.546 228.701 118.088 228.701 cv
118.638 228.701 118.8 229.061 118.8 229.589 cv
118.8 232.066 li
119.445 232.066 li
119.445 229.412 li
119.445 228.335 118.667 228.123 118.257 228.123 cv
117.663 228.123 117.407 228.387 117.084 228.746 cv
116.974 228.541 116.754 228.123 116.064 228.123 cv
115.375 228.123 115.045 228.57 114.906 228.775 cv
114.892 228.775 li
114.892 228.232 li
114.283 228.232 li
114.283 232.066 li
cp
f
120.171 230.146 mo
120.171 231.136 120.728 232.17 121.953 232.17 cv
123.177 232.17 123.734 231.136 123.734 230.146 cv
123.734 229.156 123.177 228.123 121.953 228.123 cv
120.728 228.123 120.171 229.156 120.171 230.146 cv
cp
120.838 230.146 mo
120.838 229.633 121.029 228.68 121.953 228.68 cv
122.876 228.68 123.067 229.633 123.067 230.146 cv
123.067 230.659 122.876 231.612 121.953 231.612 cv
121.029 231.612 120.838 230.659 120.838 230.146 cv
cp
f
127.65 226.803 mo
127.004 226.803 li
127.004 228.724 li
126.99 228.775 li
126.836 228.555 126.542 228.123 125.846 228.123 cv
124.827 228.123 124.248 228.958 124.248 230.036 cv
124.248 230.953 124.629 232.178 125.934 232.178 cv
126.308 232.178 126.748 232.06 127.026 231.539 cv
127.041 231.539 li
127.041 232.066 li
127.65 232.066 li
127.65 226.803 li
cp
124.915 230.139 mo
124.915 229.647 124.966 228.701 125.963 228.701 cv
126.895 228.701 126.997 229.706 126.997 230.33 cv
126.997 231.349 126.359 231.619 125.949 231.619 cv
125.245 231.619 124.915 230.982 124.915 230.139 cv
cp
f
131.155 230.865 mo
131.132 231.15 130.773 231.619 130.165 231.619 cv
129.424 231.619 129.05 231.158 129.05 230.359 cv
131.851 230.359 li
131.851 229.002 131.309 228.123 130.201 228.123 cv
128.933 228.123 128.361 229.068 128.361 230.256 cv
128.361 231.363 128.999 232.178 130.077 232.178 cv
130.692 232.178 130.942 232.03 131.118 231.913 cv
131.602 231.59 131.778 231.048 131.8 230.865 cv
131.155 230.865 li
cp
129.05 229.846 mo
129.05 229.252 129.52 228.701 130.113 228.701 cv
130.898 228.701 131.147 229.252 131.184 229.846 cv
129.05 229.846 li
cp
f
133.281 226.803 mo
132.636 226.803 li
132.636 232.066 li
133.281 232.066 li
133.281 226.803 li
cp
f
136.859 229.398 mo
136.903 229.105 137.006 228.658 137.739 228.658 cv
138.348 228.658 138.641 228.877 138.641 229.281 cv
138.641 229.662 138.458 229.721 138.304 229.735 cv
137.24 229.867 li
136.17 230 136.075 230.747 136.075 231.07 cv
136.075 231.73 136.573 232.178 137.277 232.178 cv
138.025 232.178 138.414 231.825 138.663 231.554 cv
138.685 231.848 138.773 232.141 139.345 232.141 cv
139.491 232.141 139.587 232.096 139.697 232.066 cv
139.697 231.598 li
139.624 231.612 139.542 231.627 139.484 231.627 cv
139.352 231.627 139.271 231.561 139.271 231.4 cv
139.271 229.193 li
139.271 228.211 138.157 228.123 137.849 228.123 cv
136.903 228.123 136.294 228.481 136.265 229.398 cv
136.859 229.398 li
cp
138.626 230.74 mo
138.626 231.254 138.04 231.643 137.438 231.643 cv
136.955 231.643 136.742 231.393 136.742 230.975 cv
136.742 230.49 137.248 230.396 137.563 230.352 cv
138.362 230.248 138.523 230.189 138.626 230.109 cv
138.626 230.74 li
cp
f
143.487 229.457 mo
143.487 228.364 142.74 228.123 142.146 228.123 cv
141.486 228.123 141.126 228.57 140.987 228.775 cv
140.973 228.775 li
140.973 228.232 li
140.364 228.232 li
140.364 232.066 li
141.009 232.066 li
141.009 229.978 li
141.009 228.936 141.654 228.701 142.021 228.701 cv
142.652 228.701 142.842 229.039 142.842 229.706 cv
142.842 232.066 li
143.487 232.066 li
143.487 229.457 li
cp
f
147.623 226.803 mo
146.978 226.803 li
146.978 228.724 li
146.963 228.775 li
146.809 228.555 146.516 228.123 145.819 228.123 cv
144.8 228.123 144.221 228.958 144.221 230.036 cv
144.221 230.953 144.602 232.178 145.907 232.178 cv
146.281 232.178 146.721 232.06 147 231.539 cv
147.014 231.539 li
147.014 232.066 li
147.623 232.066 li
147.623 226.803 li
cp
144.888 230.139 mo
144.888 229.647 144.939 228.701 145.937 228.701 cv
146.868 228.701 146.97 229.706 146.97 230.33 cv
146.97 231.349 146.333 231.619 145.922 231.619 cv
145.218 231.619 144.888 230.982 144.888 230.139 cv
cp
f
150.204 226.663 mo
149.72 226.663 li
147.916 232.207 li
148.408 232.207 li
150.204 226.663 li
cp
f
150.336 230.146 mo
150.336 231.136 150.893 232.17 152.118 232.17 cv
153.342 232.17 153.899 231.136 153.899 230.146 cv
153.899 229.156 153.342 228.123 152.118 228.123 cv
150.893 228.123 150.336 229.156 150.336 230.146 cv
cp
151.003 230.146 mo
151.003 229.633 151.194 228.68 152.118 228.68 cv
153.042 228.68 153.232 229.633 153.232 230.146 cv
153.232 230.659 153.042 231.612 152.118 231.612 cv
151.194 231.612 151.003 230.659 151.003 230.146 cv
cp
f
155.366 229.838 mo
155.366 229.281 155.747 228.812 156.348 228.812 cv
156.59 228.812 li
156.59 228.145 li
156.539 228.129 156.502 228.123 156.421 228.123 cv
155.938 228.123 155.601 228.423 155.344 228.87 cv
155.329 228.87 li
155.329 228.232 li
154.721 228.232 li
154.721 232.066 li
155.366 232.066 li
155.366 229.838 li
cp
f
98.9512 238.123 mo
98.9512 237.934 98.856 236.921 97.4849 236.921 cv
96.7295 236.921 96.0327 237.303 96.0327 238.146 cv
96.0327 238.674 96.3848 238.945 96.9199 239.076 cv
97.668 239.26 li
98.2178 239.399 98.4307 239.502 98.4307 239.811 cv
98.4307 240.235 98.0127 240.418 97.5508 240.418 cv
96.6416 240.418 96.5532 239.935 96.5313 239.635 cv
95.9082 239.635 li
95.9302 240.096 96.04 240.977 97.5581 240.977 cv
98.4233 240.977 99.0757 240.499 99.0757 239.707 cv
99.0757 239.188 98.7974 238.894 97.998 238.695 cv
97.3525 238.534 li
96.854 238.41 96.6563 238.336 96.6563 238.021 cv
96.6563 237.545 97.2207 237.479 97.4185 237.479 cv
98.2324 237.479 98.3203 237.882 98.3276 238.123 cv
98.9512 238.123 li
cp
f
100.476 237.031 mo
99.8311 237.031 li
99.8311 240.865 li
100.476 240.865 li
100.476 237.031 li
cp
100.476 236.334 mo
100.476 235.602 li
99.8311 235.602 li
99.8311 236.334 li
100.476 236.334 li
cp
f
101.444 240.865 mo
102.089 240.865 li
102.089 238.776 li
102.089 237.734 102.734 237.5 103.101 237.5 cv
103.578 237.5 103.703 237.889 103.703 238.211 cv
103.703 240.865 li
104.348 240.865 li
104.348 238.527 li
104.348 238.014 104.707 237.5 105.25 237.5 cv
105.799 237.5 105.961 237.859 105.961 238.388 cv
105.961 240.865 li
106.606 240.865 li
106.606 238.211 li
106.606 237.134 105.829 236.921 105.418 236.921 cv
104.824 236.921 104.568 237.186 104.245 237.545 cv
104.135 237.339 103.915 236.921 103.226 236.921 cv
102.537 236.921 102.207 237.368 102.067 237.574 cv
102.053 237.574 li
102.053 237.031 li
101.444 237.031 li
101.444 240.865 li
cp
f
110.661 240.865 mo
110.661 237.031 li
110.016 237.031 li
110.016 239.143 li
110.016 239.7 109.773 240.418 108.959 240.418 cv
108.542 240.418 108.219 240.206 108.219 239.575 cv
108.219 237.031 li
107.574 237.031 li
107.574 239.788 li
107.574 240.705 108.256 240.977 108.82 240.977 cv
109.436 240.977 109.766 240.741 110.038 240.294 cv
110.052 240.309 li
110.052 240.865 li
110.661 240.865 li
cp
f
112.289 235.602 mo
111.643 235.602 li
111.643 240.865 li
112.289 240.865 li
112.289 235.602 li
cp
f
113.828 238.197 mo
113.873 237.904 113.975 237.457 114.708 237.457 cv
115.317 237.457 115.61 237.676 115.61 238.08 cv
115.61 238.461 115.427 238.52 115.273 238.534 cv
114.209 238.666 li
113.139 238.799 113.044 239.546 113.044 239.869 cv
113.044 240.529 113.542 240.977 114.246 240.977 cv
114.994 240.977 115.383 240.624 115.632 240.353 cv
115.654 240.646 115.742 240.939 116.314 240.939 cv
116.46 240.939 116.556 240.895 116.666 240.865 cv
116.666 240.396 li
116.593 240.411 116.512 240.426 116.453 240.426 cv
116.321 240.426 116.241 240.359 116.241 240.199 cv
116.241 237.992 li
116.241 237.01 115.126 236.921 114.818 236.921 cv
113.873 236.921 113.264 237.28 113.234 238.197 cv
113.828 238.197 li
cp
115.595 239.539 mo
115.595 240.052 115.009 240.44 114.408 240.44 cv
113.924 240.44 113.711 240.191 113.711 239.773 cv
113.711 239.289 114.217 239.193 114.532 239.15 cv
115.332 239.047 115.493 238.988 115.595 238.908 cv
115.595 239.539 li
cp
f
118.741 237.566 mo
118.741 237.031 li
118.125 237.031 li
118.125 235.961 li
117.48 235.961 li
117.48 237.031 li
116.959 237.031 li
116.959 237.566 li
117.48 237.566 li
117.48 240.096 li
117.48 240.559 117.619 240.917 118.257 240.917 cv
118.323 240.917 118.506 240.888 118.741 240.865 cv
118.741 240.359 li
118.514 240.359 li
118.382 240.359 118.125 240.359 118.125 240.059 cv
118.125 237.566 li
118.741 237.566 li
cp
f
120.031 237.031 mo
119.386 237.031 li
119.386 240.865 li
120.031 240.865 li
120.031 237.031 li
cp
120.031 236.334 mo
120.031 235.602 li
119.386 235.602 li
119.386 236.334 li
120.031 236.334 li
cp
f
120.779 238.945 mo
120.779 239.935 121.336 240.969 122.561 240.969 cv
123.786 240.969 124.343 239.935 124.343 238.945 cv
124.343 237.955 123.786 236.921 122.561 236.921 cv
121.336 236.921 120.779 237.955 120.779 238.945 cv
cp
121.447 238.945 mo
121.447 238.432 121.637 237.479 122.561 237.479 cv
123.485 237.479 123.676 238.432 123.676 238.945 cv
123.676 239.458 123.485 240.411 122.561 240.411 cv
121.637 240.411 121.447 239.458 121.447 238.945 cv
cp
f
128.2 238.256 mo
128.2 237.163 127.452 236.921 126.858 236.921 cv
126.198 236.921 125.839 237.368 125.699 237.574 cv
125.685 237.574 li
125.685 237.031 li
125.076 237.031 li
125.076 240.865 li
125.721 240.865 li
125.721 238.776 li
125.721 237.734 126.367 237.5 126.733 237.5 cv
127.364 237.5 127.554 237.838 127.554 238.505 cv
127.554 240.865 li
128.2 240.865 li
128.2 238.256 li
cp
f
154.467 87.9873 mo
144.12 100.404 li
.746 .676 .668 .898 cmyk
@
140.74 104.459 mo
145.641 101.671 li
142.599 99.1362 li
140.74 104.459 li
cp
f
0 lc
0 lj
140.74 104.459 mo
145.641 101.671 li
142.599 99.1362 li
140.74 104.459 li
cp
@
1 lc
1 lj
112.184 140.78 mo
112.184 151.412 li
@
112.184 156.691 mo
114.164 151.412 li
110.205 151.412 li
112.184 156.691 li
cp
f
0 lc
0 lj
112.184 156.691 mo
114.164 151.412 li
110.205 151.412 li
112.184 156.691 li
cp
@
1 lc
1 lj
112.184 193.572 mo
112.184 204.205 li
@
112.184 209.484 mo
114.164 204.205 li
110.205 204.205 li
112.184 209.484 li
cp
f
0 lc
0 lj
112.184 209.484 mo
114.164 204.205 li
110.205 204.205 li
112.184 209.484 li
cp
@
191.373 107.051 mo
296.958 107.051 li
296.958 140.047 li
191.373 140.047 li
191.373 107.051 li
cp
0 0 0 0 cmyk
f
1 lc
1 lj
191.373 107.051 mo
296.958 107.051 li
296.958 140.047 li
191.373 140.047 li
191.373 107.051 li
cp
.746 .676 .668 .898 cmyk
@
209.097 126.482 mo
211.202 126.482 li
212.932 126.482 213.445 124.957 213.445 123.776 cv
213.445 122.259 212.602 121.217 211.231 121.217 cv
209.097 121.217 li
209.097 126.482 li
cp
209.808 121.826 mo
211.135 121.826 li
212.103 121.826 212.711 122.493 212.711 123.82 cv
212.711 125.147 212.111 125.874 211.186 125.874 cv
209.808 125.874 li
209.808 121.826 li
cp
0 0 0 1 cmyk
f
216.883 125.279 mo
216.862 125.565 216.502 126.035 215.894 126.035 cv
215.153 126.035 214.78 125.573 214.78 124.773 cv
217.581 124.773 li
217.581 123.417 217.038 122.537 215.93 122.537 cv
214.662 122.537 214.09 123.483 214.09 124.671 cv
214.09 125.778 214.728 126.592 215.806 126.592 cv
216.421 126.592 216.671 126.445 216.847 126.328 cv
217.331 126.005 217.507 125.463 217.529 125.279 cv
216.883 125.279 li
cp
214.78 124.26 mo
214.78 123.667 215.249 123.117 215.842 123.117 cv
216.627 123.117 216.876 123.667 216.913 124.26 cv
214.78 124.26 li
cp
f
221.151 123.74 mo
221.151 123.549 221.056 122.537 219.685 122.537 cv
218.929 122.537 218.233 122.918 218.233 123.762 cv
218.233 124.29 218.584 124.561 219.12 124.693 cv
219.868 124.876 li
220.417 125.016 220.63 125.118 220.63 125.426 cv
220.63 125.852 220.212 126.035 219.75 126.035 cv
218.841 126.035 218.753 125.551 218.731 125.25 cv
218.108 125.25 li
218.13 125.712 218.24 126.592 219.758 126.592 cv
220.624 126.592 221.276 126.115 221.276 125.324 cv
221.276 124.803 220.998 124.51 220.198 124.312 cv
219.552 124.15 li
219.054 124.026 218.856 123.952 218.856 123.637 cv
218.856 123.161 219.42 123.094 219.619 123.094 cv
220.432 123.094 220.521 123.498 220.528 123.74 cv
221.151 123.74 li
cp
f
222.676 122.647 mo
222.031 122.647 li
222.031 126.482 li
222.676 126.482 li
222.676 122.647 li
cp
222.676 121.951 mo
222.676 121.217 li
222.031 121.217 li
222.031 121.951 li
222.676 121.951 li
cp
f
224.128 124.554 mo
224.128 124.063 224.179 123.117 225.176 123.117 cv
226.108 123.117 226.21 124.121 226.21 124.744 cv
226.21 125.763 225.573 126.035 225.162 126.035 cv
224.458 126.035 224.128 125.397 224.128 124.554 cv
cp
226.827 122.647 mo
226.217 122.647 li
226.217 123.19 li
226.203 123.19 li
226.049 122.97 225.755 122.537 225.059 122.537 cv
224.04 122.537 223.46 123.373 223.46 124.451 cv
223.46 125.368 223.842 126.592 225.147 126.592 cv
225.661 126.592 225.998 126.35 226.167 126.079 cv
226.167 126.049 li
226.181 126.049 li
226.181 126.21 li
226.181 126.666 226.203 127.56 225.088 127.56 cv
224.935 127.56 224.34 127.56 224.223 126.951 cv
223.579 126.951 li
223.703 127.97 224.59 128.095 225.044 128.095 cv
226.819 128.095 226.827 126.717 226.827 126.167 cv
226.827 122.647 li
cp
f
230.844 123.872 mo
230.844 122.779 230.096 122.537 229.502 122.537 cv
228.842 122.537 228.484 122.984 228.344 123.19 cv
228.33 123.19 li
228.33 122.647 li
227.721 122.647 li
227.721 126.482 li
228.366 126.482 li
228.366 124.392 li
228.366 123.351 229.011 123.117 229.378 123.117 cv
230.008 123.117 230.199 123.454 230.199 124.121 cv
230.199 126.482 li
230.844 126.482 li
230.844 123.872 li
cp
f
234.408 123.813 mo
234.452 123.52 234.554 123.073 235.288 123.073 cv
235.896 123.073 236.19 123.292 236.19 123.696 cv
236.19 124.077 236.006 124.136 235.852 124.15 cv
234.79 124.282 li
233.718 124.415 233.624 125.162 233.624 125.485 cv
233.624 126.145 234.122 126.592 234.826 126.592 cv
235.574 126.592 235.962 126.24 236.211 125.969 cv
236.234 126.262 236.322 126.555 236.893 126.555 cv
237.041 126.555 237.135 126.511 237.246 126.482 cv
237.246 126.013 li
237.172 126.027 237.091 126.042 237.033 126.042 cv
236.901 126.042 236.82 125.976 236.82 125.815 cv
236.82 123.608 li
236.82 122.625 235.706 122.537 235.398 122.537 cv
234.452 122.537 233.843 122.896 233.814 123.813 cv
234.408 123.813 li
cp
236.175 125.155 mo
236.175 125.668 235.588 126.057 234.987 126.057 cv
234.503 126.057 234.291 125.808 234.291 125.39 cv
234.291 124.906 234.796 124.81 235.112 124.766 cv
235.911 124.664 236.073 124.605 236.175 124.524 cv
236.175 125.155 li
cp
f
241.037 123.872 mo
241.037 122.779 240.289 122.537 239.695 122.537 cv
239.035 122.537 238.675 122.984 238.536 123.19 cv
238.521 123.19 li
238.521 122.647 li
237.913 122.647 li
237.913 126.482 li
238.558 126.482 li
238.558 124.392 li
238.558 123.351 239.204 123.117 239.57 123.117 cv
240.201 123.117 240.391 123.454 240.391 124.121 cv
240.391 126.482 li
241.037 126.482 li
241.037 123.872 li
cp
f
246.638 125.279 mo
246.616 125.565 246.257 126.035 245.648 126.035 cv
244.908 126.035 244.534 125.573 244.534 124.773 cv
247.334 124.773 li
247.334 123.417 246.792 122.537 245.685 122.537 cv
244.417 122.537 243.844 123.483 243.844 124.671 cv
243.844 125.778 244.483 126.592 245.56 126.592 cv
246.176 126.592 246.425 126.445 246.601 126.328 cv
247.085 126.005 247.261 125.463 247.284 125.279 cv
246.638 125.279 li
cp
244.534 124.26 mo
244.534 123.667 245.003 123.117 245.597 123.117 cv
246.381 123.117 246.631 123.667 246.667 124.26 cv
244.534 124.26 li
cp
f
249.872 124.51 mo
251.169 122.647 li
250.377 122.647 li
249.491 123.997 li
248.603 122.647 li
247.775 122.647 li
249.058 124.51 li
247.708 126.482 li
248.523 126.482 li
249.447 125.038 li
250.4 126.482 li
251.221 126.482 li
249.872 124.51 li
cp
f
252.335 124.744 mo
252.335 124.121 252.438 123.117 253.37 123.117 cv
254.367 123.117 254.417 124.063 254.417 124.554 cv
254.417 125.397 254.087 126.035 253.384 126.035 cv
252.973 126.035 252.335 125.763 252.335 124.744 cv
cp
251.719 128 mo
252.365 128 li
252.365 126.079 li
252.379 126.079 li
252.548 126.35 252.885 126.592 253.399 126.592 cv
254.704 126.592 255.085 125.368 255.085 124.451 cv
255.085 123.373 254.505 122.537 253.487 122.537 cv
252.79 122.537 252.497 122.97 252.342 123.19 cv
252.328 123.19 li
252.328 122.647 li
251.719 122.647 li
251.719 128 li
cp
f
258.458 125.279 mo
258.436 125.565 258.077 126.035 257.468 126.035 cv
256.727 126.035 256.354 125.573 256.354 124.773 cv
259.155 124.773 li
259.155 123.417 258.612 122.537 257.504 122.537 cv
256.236 122.537 255.665 123.483 255.665 124.671 cv
255.665 125.778 256.302 126.592 257.38 126.592 cv
257.996 126.592 258.246 126.445 258.421 126.328 cv
258.905 126.005 259.082 125.463 259.103 125.279 cv
258.458 125.279 li
cp
256.354 124.26 mo
256.354 123.667 256.823 123.117 257.417 123.117 cv
258.202 123.117 258.451 123.667 258.487 124.26 cv
256.354 124.26 li
cp
f
260.658 124.253 mo
260.658 123.696 261.039 123.227 261.64 123.227 cv
261.882 123.227 li
261.882 122.559 li
261.831 122.544 261.794 122.537 261.713 122.537 cv
261.229 122.537 260.892 122.838 260.635 123.285 cv
260.621 123.285 li
260.621 122.647 li
260.012 122.647 li
260.012 126.482 li
260.658 126.482 li
260.658 124.253 li
cp
f
263.026 122.647 mo
262.38 122.647 li
262.38 126.482 li
263.026 126.482 li
263.026 122.647 li
cp
263.026 121.951 mo
263.026 121.217 li
262.38 121.217 li
262.38 121.951 li
263.026 121.951 li
cp
f
263.994 126.482 mo
264.639 126.482 li
264.639 124.392 li
264.639 123.351 265.285 123.117 265.651 123.117 cv
266.127 123.117 266.252 123.505 266.252 123.828 cv
266.252 126.482 li
266.897 126.482 li
266.897 124.143 li
266.897 123.63 267.256 123.117 267.799 123.117 cv
268.349 123.117 268.51 123.476 268.51 124.003 cv
268.51 126.482 li
269.156 126.482 li
269.156 123.828 li
269.156 122.75 268.378 122.537 267.968 122.537 cv
267.374 122.537 267.118 122.801 266.794 123.161 cv
266.685 122.955 266.464 122.537 265.776 122.537 cv
265.086 122.537 264.756 122.984 264.617 123.19 cv
264.602 123.19 li
264.602 122.647 li
263.994 122.647 li
263.994 126.482 li
cp
f
272.711 125.279 mo
272.69 125.565 272.331 126.035 271.722 126.035 cv
270.981 126.035 270.608 125.573 270.608 124.773 cv
273.409 124.773 li
273.409 123.417 272.866 122.537 271.758 122.537 cv
270.49 122.537 269.918 123.483 269.918 124.671 cv
269.918 125.778 270.556 126.592 271.634 126.592 cv
272.25 126.592 272.5 126.445 272.675 126.328 cv
273.159 126.005 273.335 125.463 273.357 125.279 cv
272.711 125.279 li
cp
270.608 124.26 mo
270.608 123.667 271.077 123.117 271.67 123.117 cv
272.456 123.117 272.705 123.667 272.741 124.26 cv
270.608 124.26 li
cp
f
277.302 123.872 mo
277.302 122.779 276.554 122.537 275.96 122.537 cv
275.3 122.537 274.941 122.984 274.801 123.19 cv
274.787 123.19 li
274.787 122.647 li
274.178 122.647 li
274.178 126.482 li
274.824 126.482 li
274.824 124.392 li
274.824 123.351 275.469 123.117 275.835 123.117 cv
276.466 123.117 276.657 123.454 276.657 124.121 cv
276.657 126.482 li
277.302 126.482 li
277.302 123.872 li
cp
f
279.663 123.183 mo
279.663 122.647 li
279.047 122.647 li
279.047 121.577 li
278.402 121.577 li
278.402 122.647 li
277.881 122.647 li
277.881 123.183 li
278.402 123.183 li
278.402 125.712 li
278.402 126.174 278.542 126.533 279.179 126.533 cv
279.245 126.533 279.428 126.504 279.663 126.482 cv
279.663 125.976 li
279.436 125.976 li
279.303 125.976 279.047 125.976 279.047 125.675 cv
279.047 123.183 li
279.663 123.183 li
cp
f
191.373 159.844 mo
296.958 159.844 li
296.958 192.84 li
191.373 192.84 li
191.373 159.844 li
cp
0 0 0 0 cmyk
f
191.373 159.844 mo
296.958 159.844 li
296.958 192.84 li
191.373 192.84 li
191.373 159.844 li
cp
.746 .676 .668 .898 cmyk
@
208.762 175.594 mo
208.66 174.714 207.956 173.871 206.599 173.871 cv
205.067 173.871 204.143 174.993 204.143 176.613 cv
204.143 178.637 205.316 179.414 206.511 179.414 cv
206.907 179.414 208.52 179.326 208.813 177.339 cv
208.125 177.339 li
207.882 178.563 207.083 178.783 206.621 178.783 cv
205.316 178.783 204.875 177.83 204.875 176.591 cv
204.875 175.205 205.646 174.501 206.599 174.501 cv
207.105 174.501 207.875 174.67 208.073 175.594 cv
208.762 175.594 li
cp
0 0 0 1 cmyk
f
210.163 176.605 mo
210.207 176.313 210.309 175.865 211.042 175.865 cv
211.651 175.865 211.944 176.085 211.944 176.488 cv
211.944 176.87 211.761 176.928 211.607 176.943 cv
210.543 177.075 li
209.473 177.207 209.377 177.955 209.377 178.277 cv
209.377 178.938 209.876 179.385 210.581 179.385 cv
211.329 179.385 211.717 179.033 211.966 178.762 cv
211.988 179.055 212.077 179.348 212.648 179.348 cv
212.794 179.348 212.89 179.304 213 179.274 cv
213 178.805 li
212.926 178.82 212.846 178.834 212.788 178.834 cv
212.656 178.834 212.575 178.769 212.575 178.607 cv
212.575 176.4 li
212.575 175.418 211.46 175.33 211.152 175.33 cv
210.207 175.33 209.598 175.689 209.569 176.605 cv
210.163 176.605 li
cp
211.929 177.947 mo
211.929 178.461 211.343 178.85 210.742 178.85 cv
210.257 178.85 210.045 178.6 210.045 178.182 cv
210.045 177.698 210.551 177.603 210.867 177.559 cv
211.666 177.456 211.827 177.397 211.929 177.317 cv
211.929 177.947 li
cp
f
214.401 177.045 mo
214.401 176.488 214.782 176.019 215.383 176.019 cv
215.625 176.019 li
215.625 175.352 li
215.574 175.337 215.537 175.33 215.457 175.33 cv
214.972 175.33 214.635 175.63 214.378 176.078 cv
214.364 176.078 li
214.364 175.44 li
213.755 175.44 li
213.755 179.274 li
214.401 179.274 li
214.401 177.045 li
cp
f
216.842 177.045 mo
216.842 176.488 217.223 176.019 217.825 176.019 cv
218.067 176.019 li
218.067 175.352 li
218.015 175.337 217.979 175.33 217.898 175.33 cv
217.415 175.33 217.077 175.63 216.82 176.078 cv
216.805 176.078 li
216.805 175.44 li
216.197 175.44 li
216.197 179.274 li
216.842 179.274 li
216.842 177.045 li
cp
f
219.921 178.563 mo
219.907 178.563 li
218.888 175.44 li
218.155 175.44 li
219.577 179.377 li
219.269 180.169 219.233 180.264 218.895 180.264 cv
218.719 180.264 218.587 180.229 218.506 180.198 cv
218.506 180.785 li
218.609 180.814 218.682 180.844 218.778 180.844 cv
219.606 180.844 219.672 180.756 220.281 179.201 cv
220.772 177.947 221.212 176.694 221.66 175.44 cv
220.948 175.44 li
219.921 178.563 li
cp
f
224.035 177.354 mo
224.035 178.344 224.592 179.377 225.817 179.377 cv
227.042 179.377 227.598 178.344 227.598 177.354 cv
227.598 176.364 227.042 175.33 225.817 175.33 cv
224.592 175.33 224.035 176.364 224.035 177.354 cv
cp
224.703 177.354 mo
224.703 176.84 224.893 175.887 225.817 175.887 cv
226.741 175.887 226.931 176.84 226.931 177.354 cv
226.931 177.867 226.741 178.82 225.817 178.82 cv
224.893 178.82 224.703 177.867 224.703 177.354 cv
cp
f
231.441 179.274 mo
231.441 175.44 li
230.795 175.44 li
230.795 177.551 li
230.795 178.109 230.553 178.827 229.74 178.827 cv
229.322 178.827 229 178.615 229 177.984 cv
229 175.44 li
228.354 175.44 li
228.354 178.197 li
228.354 179.113 229.036 179.385 229.6 179.385 cv
230.216 179.385 230.546 179.15 230.818 178.703 cv
230.833 178.717 li
230.833 179.274 li
231.441 179.274 li
cp
f
233.817 175.975 mo
233.817 175.44 li
233.201 175.44 li
233.201 174.369 li
232.555 174.369 li
232.555 175.44 li
232.035 175.44 li
232.035 175.975 li
232.555 175.975 li
232.555 178.504 li
232.555 178.967 232.695 179.326 233.333 179.326 cv
233.399 179.326 233.582 179.297 233.817 179.274 cv
233.817 178.769 li
233.589 178.769 li
233.458 178.769 233.201 178.769 233.201 178.469 cv
233.201 175.975 li
233.817 175.975 li
cp
f
237.893 175.975 mo
237.893 175.44 li
237.277 175.44 li
237.277 174.369 li
236.632 174.369 li
236.632 175.44 li
236.112 175.44 li
236.112 175.975 li
236.632 175.975 li
236.632 178.504 li
236.632 178.967 236.771 179.326 237.41 179.326 cv
237.475 179.326 237.659 179.297 237.893 179.274 cv
237.893 178.769 li
237.666 178.769 li
237.534 178.769 237.277 178.769 237.277 178.469 cv
237.277 175.975 li
237.893 175.975 li
cp
f
241.647 176.664 mo
241.647 175.572 240.899 175.33 240.305 175.33 cv
239.69 175.33 239.367 175.711 239.184 175.953 cv
239.169 175.953 li
239.169 174.01 li
238.524 174.01 li
238.524 179.274 li
239.169 179.274 li
239.169 177.185 li
239.169 176.217 239.711 175.909 240.24 175.909 cv
240.855 175.909 241.002 176.247 241.002 176.767 cv
241.002 179.274 li
241.647 179.274 li
241.647 176.664 li
cp
f
245.21 178.072 mo
245.189 178.357 244.83 178.827 244.221 178.827 cv
243.48 178.827 243.106 178.365 243.106 177.566 cv
245.908 177.566 li
245.908 176.209 245.365 175.33 244.257 175.33 cv
242.989 175.33 242.417 176.276 242.417 177.463 cv
242.417 178.57 243.055 179.385 244.133 179.385 cv
244.749 179.385 244.999 179.238 245.174 179.121 cv
245.658 178.798 245.834 178.256 245.856 178.072 cv
245.21 178.072 li
cp
243.106 177.053 mo
243.106 176.459 243.576 175.909 244.169 175.909 cv
244.955 175.909 245.204 176.459 245.24 177.053 cv
243.106 177.053 li
cp
f
251.326 178.072 mo
251.304 178.357 250.945 178.827 250.336 178.827 cv
249.595 178.827 249.221 178.365 249.221 177.566 cv
252.023 177.566 li
252.023 176.209 251.48 175.33 250.373 175.33 cv
249.104 175.33 248.533 176.276 248.533 177.463 cv
248.533 178.57 249.17 179.385 250.249 179.385 cv
250.864 179.385 251.114 179.238 251.29 179.121 cv
251.773 178.798 251.95 178.256 251.971 178.072 cv
251.326 178.072 li
cp
249.221 177.053 mo
249.221 176.459 249.691 175.909 250.285 175.909 cv
251.069 175.909 251.319 176.459 251.355 177.053 cv
249.221 177.053 li
cp
f
254.559 177.302 mo
255.857 175.44 li
255.065 175.44 li
254.178 176.789 li
253.292 175.44 li
252.462 175.44 li
253.746 177.302 li
252.397 179.274 li
253.21 179.274 li
254.134 177.83 li
255.087 179.274 li
255.909 179.274 li
254.559 177.302 li
cp
f
257.023 177.537 mo
257.023 176.914 257.125 175.909 258.057 175.909 cv
259.054 175.909 259.106 176.855 259.106 177.346 cv
259.106 178.189 258.776 178.827 258.072 178.827 cv
257.661 178.827 257.023 178.557 257.023 177.537 cv
cp
256.407 180.793 mo
257.052 180.793 li
257.052 178.871 li
257.067 178.871 li
257.236 179.143 257.573 179.385 258.086 179.385 cv
259.391 179.385 259.773 178.16 259.773 177.244 cv
259.773 176.166 259.194 175.33 258.174 175.33 cv
257.478 175.33 257.184 175.762 257.031 175.982 cv
257.016 175.982 li
257.016 175.44 li
256.407 175.44 li
256.407 180.793 li
cp
f
263.146 178.072 mo
263.124 178.357 262.764 178.827 262.156 178.827 cv
261.416 178.827 261.042 178.365 261.042 177.566 cv
263.842 177.566 li
263.842 176.209 263.299 175.33 262.193 175.33 cv
260.924 175.33 260.352 176.276 260.352 177.463 cv
260.352 178.57 260.99 179.385 262.068 179.385 cv
262.684 179.385 262.933 179.238 263.109 179.121 cv
263.593 178.798 263.769 178.256 263.791 178.072 cv
263.146 178.072 li
cp
261.042 177.053 mo
261.042 176.459 261.51 175.909 262.104 175.909 cv
262.889 175.909 263.138 176.459 263.175 177.053 cv
261.042 177.053 li
cp
f
265.345 177.045 mo
265.345 176.488 265.727 176.019 266.328 176.019 cv
266.57 176.019 li
266.57 175.352 li
266.518 175.337 266.482 175.33 266.401 175.33 cv
265.917 175.33 265.58 175.63 265.324 176.078 cv
265.309 176.078 li
265.309 175.44 li
264.7 175.44 li
264.7 179.274 li
265.345 179.274 li
265.345 177.045 li
cp
f
267.713 175.44 mo
267.069 175.44 li
267.069 179.274 li
267.713 179.274 li
267.713 175.44 li
cp
267.713 174.743 mo
267.713 174.01 li
267.069 174.01 li
267.069 174.743 li
267.713 174.743 li
cp
f
268.681 179.274 mo
269.327 179.274 li
269.327 177.185 li
269.327 176.144 269.972 175.909 270.338 175.909 cv
270.815 175.909 270.94 176.297 270.94 176.62 cv
270.94 179.274 li
271.585 179.274 li
271.585 176.936 li
271.585 176.422 271.945 175.909 272.487 175.909 cv
273.037 175.909 273.198 176.268 273.198 176.796 cv
273.198 179.274 li
273.843 179.274 li
273.843 176.62 li
273.843 175.542 273.066 175.33 272.656 175.33 cv
272.062 175.33 271.805 175.594 271.483 175.953 cv
271.373 175.748 271.153 175.33 270.463 175.33 cv
269.774 175.33 269.444 175.777 269.305 175.982 cv
269.291 175.982 li
269.291 175.44 li
268.681 175.44 li
268.681 179.274 li
cp
f
277.4 178.072 mo
277.377 178.357 277.018 178.827 276.41 178.827 cv
275.669 178.827 275.295 178.365 275.295 177.566 cv
278.096 177.566 li
278.096 176.209 277.553 175.33 276.447 175.33 cv
275.178 175.33 274.606 176.276 274.606 177.463 cv
274.606 178.57 275.244 179.385 276.322 179.385 cv
276.938 179.385 277.187 179.238 277.363 179.121 cv
277.847 178.798 278.023 178.256 278.044 178.072 cv
277.4 178.072 li
cp
275.295 177.053 mo
275.295 176.459 275.764 175.909 276.359 175.909 cv
277.143 175.909 277.392 176.459 277.429 177.053 cv
275.295 177.053 li
cp
f
281.99 176.664 mo
281.99 175.572 281.242 175.33 280.648 175.33 cv
279.988 175.33 279.628 175.777 279.49 175.982 cv
279.475 175.982 li
279.475 175.44 li
278.866 175.44 li
278.866 179.274 li
279.511 179.274 li
279.511 177.185 li
279.511 176.144 280.157 175.909 280.523 175.909 cv
281.154 175.909 281.344 176.247 281.344 176.914 cv
281.344 179.274 li
281.99 179.274 li
281.99 176.664 li
cp
f
284.351 175.975 mo
284.351 175.44 li
283.735 175.44 li
283.735 174.369 li
283.089 174.369 li
283.089 175.44 li
282.569 175.44 li
282.569 175.975 li
283.089 175.975 li
283.089 178.504 li
283.089 178.967 283.229 179.326 283.867 179.326 cv
283.933 179.326 284.116 179.297 284.351 179.274 cv
284.351 178.769 li
284.124 178.769 li
283.992 178.769 283.735 178.769 283.735 178.469 cv
283.735 175.975 li
284.351 175.975 li
cp
f
191.373 212.637 mo
296.958 212.637 li
296.958 245.632 li
191.373 245.632 li
191.373 212.637 li
cp
0 0 0 0 cmyk
f
191.373 212.637 mo
296.958 212.637 li
296.958 245.632 li
191.373 245.632 li
191.373 212.637 li
cp
.746 .676 .668 .898 cmyk
@
206.824 222.403 mo
206.113 222.403 li
206.113 227.668 li
206.824 227.668 li
206.824 222.403 li
cp
0 0 0 1 cmyk
f
211.083 225.058 mo
211.083 223.965 210.336 223.723 209.742 223.723 cv
209.083 223.723 208.723 224.17 208.583 224.375 cv
208.569 224.375 li
208.569 223.833 li
207.96 223.833 li
207.96 227.668 li
208.606 227.668 li
208.606 225.578 li
208.606 224.537 209.25 224.303 209.618 224.303 cv
210.249 224.303 210.439 224.64 210.439 225.307 cv
210.439 227.668 li
211.083 227.668 li
211.083 225.058 li
cp
f
213.445 224.368 mo
213.445 223.833 li
212.829 223.833 li
212.829 222.762 li
212.184 222.762 li
212.184 223.833 li
211.664 223.833 li
211.664 224.368 li
212.184 224.368 li
212.184 226.898 li
212.184 227.359 212.323 227.719 212.961 227.719 cv
213.027 227.719 213.21 227.689 213.445 227.668 cv
213.445 227.162 li
213.217 227.162 li
213.085 227.162 212.829 227.162 212.829 226.861 cv
212.829 224.368 li
213.445 224.368 li
cp
f
216.686 226.465 mo
216.664 226.751 216.304 227.221 215.696 227.221 cv
214.956 227.221 214.582 226.758 214.582 225.959 cv
217.382 225.959 li
217.382 224.604 216.839 223.723 215.733 223.723 cv
214.464 223.723 213.892 224.669 213.892 225.856 cv
213.892 226.964 214.53 227.777 215.608 227.777 cv
216.224 227.777 216.473 227.631 216.649 227.514 cv
217.133 227.191 217.309 226.648 217.331 226.465 cv
216.686 226.465 li
cp
214.582 225.445 mo
214.582 224.852 215.05 224.303 215.645 224.303 cv
216.429 224.303 216.678 224.852 216.715 225.445 cv
214.582 225.445 li
cp
f
218.885 225.439 mo
218.885 224.881 219.267 224.412 219.868 224.412 cv
220.11 224.412 li
220.11 223.745 li
220.059 223.73 220.022 223.723 219.941 223.723 cv
219.458 223.723 219.121 224.023 218.864 224.471 cv
218.849 224.471 li
218.849 223.833 li
218.241 223.833 li
218.241 227.668 li
218.885 227.668 li
218.885 225.439 li
cp
f
221.159 225.93 mo
221.159 225.307 221.261 224.303 222.192 224.303 cv
223.19 224.303 223.241 225.248 223.241 225.739 cv
223.241 226.582 222.911 227.221 222.208 227.221 cv
221.796 227.221 221.159 226.949 221.159 225.93 cv
cp
220.542 229.186 mo
221.188 229.186 li
221.188 227.265 li
221.203 227.265 li
221.372 227.535 221.708 227.777 222.222 227.777 cv
223.527 227.777 223.908 226.553 223.908 225.637 cv
223.908 224.559 223.329 223.723 222.31 223.723 cv
221.613 223.723 221.32 224.156 221.166 224.375 cv
221.151 224.375 li
221.151 223.833 li
220.542 223.833 li
220.542 229.186 li
cp
f
225.404 225.439 mo
225.404 224.881 225.786 224.412 226.386 224.412 cv
226.628 224.412 li
226.628 223.745 li
226.577 223.73 226.541 223.723 226.459 223.723 cv
225.976 223.723 225.638 224.023 225.382 224.471 cv
225.368 224.471 li
225.368 223.833 li
224.758 223.833 li
224.758 227.668 li
225.404 227.668 li
225.404 225.439 li
cp
f
229.723 226.465 mo
229.701 226.751 229.341 227.221 228.733 227.221 cv
227.993 227.221 227.619 226.758 227.619 225.959 cv
230.419 225.959 li
230.419 224.604 229.876 223.723 228.769 223.723 cv
227.5 223.723 226.929 224.669 226.929 225.856 cv
226.929 226.964 227.567 227.777 228.645 227.777 cv
229.26 227.777 229.51 227.631 229.686 227.514 cv
230.17 227.191 230.346 226.648 230.368 226.465 cv
229.723 226.465 li
cp
227.619 225.445 mo
227.619 224.852 228.087 224.303 228.681 224.303 cv
229.466 224.303 229.715 224.852 229.752 225.445 cv
227.619 225.445 li
cp
f
232.597 224.368 mo
232.597 223.833 li
231.981 223.833 li
231.981 222.762 li
231.335 222.762 li
231.335 223.833 li
230.815 223.833 li
230.815 224.368 li
231.335 224.368 li
231.335 226.898 li
231.335 227.359 231.475 227.719 232.113 227.719 cv
232.179 227.719 232.362 227.689 232.597 227.668 cv
232.597 227.162 li
232.37 227.162 li
232.238 227.162 231.981 227.162 231.981 226.861 cv
231.981 224.368 li
232.597 224.368 li
cp
f
236.673 224.368 mo
236.673 223.833 li
236.058 223.833 li
236.058 222.762 li
235.413 222.762 li
235.413 223.833 li
234.892 223.833 li
234.892 224.368 li
235.413 224.368 li
235.413 226.898 li
235.413 227.359 235.552 227.719 236.19 227.719 cv
236.255 227.719 236.439 227.689 236.673 227.668 cv
236.673 227.162 li
236.447 227.162 li
236.314 227.162 236.058 227.162 236.058 226.861 cv
236.058 224.368 li
236.673 224.368 li
cp
f
240.428 225.058 mo
240.428 223.965 239.68 223.723 239.086 223.723 cv
238.47 223.723 238.147 224.104 237.964 224.346 cv
237.95 224.346 li
237.95 222.403 li
237.304 222.403 li
237.304 227.668 li
237.95 227.668 li
237.95 225.578 li
237.95 224.61 238.492 224.303 239.02 224.303 cv
239.636 224.303 239.783 224.64 239.783 225.16 cv
239.783 227.668 li
240.428 227.668 li
240.428 225.058 li
cp
f
243.992 226.465 mo
243.969 226.751 243.61 227.221 243.001 227.221 cv
242.261 227.221 241.887 226.758 241.887 225.959 cv
244.688 225.959 li
244.688 224.604 244.145 223.723 243.039 223.723 cv
241.77 223.723 241.198 224.669 241.198 225.856 cv
241.198 226.964 241.835 227.777 242.914 227.777 cv
243.53 227.777 243.779 227.631 243.955 227.514 cv
244.439 227.191 244.615 226.648 244.636 226.465 cv
243.992 226.465 li
cp
241.887 225.445 mo
241.887 224.852 242.356 224.303 242.95 224.303 cv
243.735 224.303 243.984 224.852 244.021 225.445 cv
241.887 225.445 li
cp
f
248.229 225.439 mo
248.229 224.881 248.611 224.412 249.211 224.412 cv
249.454 224.412 li
249.454 223.745 li
249.403 223.73 249.366 223.723 249.286 223.723 cv
248.801 223.723 248.464 224.023 248.208 224.471 cv
248.193 224.471 li
248.193 223.833 li
247.584 223.833 li
247.584 227.668 li
248.229 227.668 li
248.229 225.439 li
cp
f
252.548 226.465 mo
252.526 226.751 252.167 227.221 251.558 227.221 cv
250.818 227.221 250.444 226.758 250.444 225.959 cv
253.245 225.959 li
253.245 224.604 252.702 223.723 251.595 223.723 cv
250.327 223.723 249.754 224.669 249.754 225.856 cv
249.754 226.964 250.392 227.777 251.47 227.777 cv
252.086 227.777 252.335 227.631 252.511 227.514 cv
252.996 227.191 253.171 226.648 253.194 226.465 cv
252.548 226.465 li
cp
250.444 225.445 mo
250.444 224.852 250.913 224.303 251.507 224.303 cv
252.292 224.303 252.541 224.852 252.578 225.445 cv
250.444 225.445 li
cp
f
256.816 224.926 mo
256.816 224.734 256.72 223.723 255.349 223.723 cv
254.594 223.723 253.897 224.104 253.897 224.947 cv
253.897 225.476 254.25 225.746 254.785 225.879 cv
255.533 226.063 li
256.083 226.201 256.294 226.304 256.294 226.611 cv
256.294 227.037 255.877 227.221 255.415 227.221 cv
254.505 227.221 254.417 226.736 254.396 226.436 cv
253.773 226.436 li
253.794 226.898 253.905 227.777 255.422 227.777 cv
256.288 227.777 256.94 227.301 256.94 226.51 cv
256.94 225.988 256.662 225.695 255.862 225.498 cv
255.217 225.336 li
254.718 225.211 254.52 225.139 254.52 224.822 cv
254.52 224.346 255.085 224.28 255.283 224.28 cv
256.097 224.28 256.185 224.684 256.192 224.926 cv
256.816 224.926 li
cp
f
260.79 227.668 mo
260.79 223.833 li
260.144 223.833 li
260.144 225.945 li
260.144 226.502 259.903 227.221 259.088 227.221 cv
258.67 227.221 258.348 227.008 258.348 226.377 cv
258.348 223.833 li
257.703 223.833 li
257.703 226.59 li
257.703 227.506 258.384 227.777 258.95 227.777 cv
259.565 227.777 259.895 227.543 260.167 227.096 cv
260.181 227.11 li
260.181 227.668 li
260.79 227.668 li
cp
f
262.417 222.403 mo
261.772 222.403 li
261.772 227.668 li
262.417 227.668 li
262.417 222.403 li
cp
f
264.793 224.368 mo
264.793 223.833 li
264.177 223.833 li
264.177 222.762 li
263.532 222.762 li
263.532 223.833 li
263.011 223.833 li
263.011 224.368 li
263.532 224.368 li
263.532 226.898 li
263.532 227.359 263.671 227.719 264.309 227.719 cv
264.375 227.719 264.558 227.689 264.793 227.668 cv
264.793 227.162 li
264.566 227.162 li
264.434 227.162 264.177 227.162 264.177 226.861 cv
264.177 224.368 li
264.793 224.368 li
cp
f
268.224 224.926 mo
268.224 224.734 268.129 223.723 266.758 223.723 cv
266.002 223.723 265.306 224.104 265.306 224.947 cv
265.306 225.476 265.659 225.746 266.194 225.879 cv
266.942 226.063 li
267.492 226.201 267.704 226.304 267.704 226.611 cv
267.704 227.037 267.286 227.221 266.824 227.221 cv
265.915 227.221 265.827 226.736 265.805 226.436 cv
265.182 226.436 li
265.204 226.898 265.314 227.777 266.832 227.777 cv
267.697 227.777 268.349 227.301 268.349 226.51 cv
268.349 225.988 268.071 225.695 267.271 225.498 cv
266.626 225.336 li
266.127 225.211 265.929 225.139 265.929 224.822 cv
265.929 224.346 266.495 224.28 266.692 224.28 cv
267.506 224.28 267.594 224.684 267.601 224.926 cv
268.224 224.926 li
cp
f
271.7 224.998 mo
271.744 224.705 271.847 224.258 272.58 224.258 cv
273.189 224.258 273.482 224.479 273.482 224.881 cv
273.482 225.263 273.298 225.321 273.145 225.336 cv
272.082 225.469 li
271.011 225.6 270.916 226.348 270.916 226.67 cv
270.916 227.33 271.415 227.777 272.118 227.777 cv
272.866 227.777 273.254 227.426 273.503 227.154 cv
273.526 227.447 273.614 227.741 274.186 227.741 cv
274.333 227.741 274.427 227.697 274.538 227.668 cv
274.538 227.198 li
274.464 227.213 274.383 227.229 274.325 227.229 cv
274.193 227.229 274.113 227.162 274.113 227 cv
274.113 224.793 li
274.113 223.811 272.998 223.723 272.69 223.723 cv
271.744 223.723 271.135 224.082 271.106 224.998 cv
271.7 224.998 li
cp
273.467 226.34 mo
273.467 226.854 272.88 227.242 272.28 227.242 cv
271.795 227.242 271.583 226.993 271.583 226.575 cv
271.583 226.092 272.088 225.996 272.404 225.952 cv
273.204 225.85 273.365 225.791 273.467 225.71 cv
273.467 226.34 li
cp
f
278.329 225.058 mo
278.329 223.965 277.581 223.723 276.987 223.723 cv
276.327 223.723 275.967 224.17 275.829 224.375 cv
275.814 224.375 li
275.814 223.833 li
275.205 223.833 li
275.205 227.668 li
275.85 227.668 li
275.85 225.578 li
275.85 224.537 276.496 224.303 276.862 224.303 cv
277.493 224.303 277.683 224.64 277.683 225.307 cv
277.683 227.668 li
278.329 227.668 li
278.329 225.058 li
cp
f
282.464 222.403 mo
281.819 222.403 li
281.819 224.324 li
281.804 224.375 li
281.65 224.156 281.357 223.723 280.661 223.723 cv
279.641 223.723 279.062 224.559 279.062 225.637 cv
279.062 226.553 279.443 227.777 280.749 227.777 cv
281.122 227.777 281.562 227.66 281.84 227.14 cv
281.855 227.14 li
281.855 227.668 li
282.464 227.668 li
282.464 222.403 li
cp
279.729 225.739 mo
279.729 225.248 279.78 224.303 280.778 224.303 cv
281.708 224.303 281.811 225.307 281.811 225.93 cv
281.811 226.949 281.173 227.221 280.763 227.221 cv
280.059 227.221 279.729 226.582 279.729 225.739 cv
cp
f
206.083 235.264 mo
206.061 235.55 205.702 236.02 205.093 236.02 cv
204.353 236.02 203.979 235.557 203.979 234.758 cv
206.78 234.758 li
206.78 233.401 206.237 232.521 205.13 232.521 cv
203.862 232.521 203.29 233.468 203.29 234.655 cv
203.29 235.763 203.927 236.576 205.005 236.576 cv
205.622 236.576 205.871 236.43 206.046 236.313 cv
206.531 235.99 206.707 235.447 206.729 235.264 cv
206.083 235.264 li
cp
203.979 234.244 mo
203.979 233.65 204.448 233.102 205.042 233.102 cv
205.827 233.102 206.076 233.65 206.113 234.244 cv
203.979 234.244 li
cp
f
208.891 235.756 mo
208.877 235.756 li
207.879 232.632 li
207.131 232.632 li
208.533 236.467 li
209.221 236.467 li
210.68 232.632 li
209.977 232.632 li
208.891 235.756 li
cp
f
211.788 233.797 mo
211.832 233.504 211.934 233.057 212.667 233.057 cv
213.276 233.057 213.57 233.277 213.57 233.68 cv
213.57 234.062 213.386 234.12 213.232 234.135 cv
212.169 234.267 li
211.098 234.398 211.003 235.146 211.003 235.469 cv
211.003 236.129 211.501 236.576 212.206 236.576 cv
212.954 236.576 213.342 236.225 213.591 235.953 cv
213.614 236.246 213.702 236.54 214.274 236.54 cv
214.42 236.54 214.515 236.496 214.625 236.467 cv
214.625 235.997 li
214.552 236.012 214.471 236.026 214.413 236.026 cv
214.281 236.026 214.2 235.961 214.2 235.799 cv
214.2 233.592 li
214.2 232.609 213.085 232.521 212.778 232.521 cv
211.832 232.521 211.223 232.881 211.194 233.797 cv
211.788 233.797 li
cp
213.555 235.139 mo
213.555 235.652 212.968 236.041 212.367 236.041 cv
211.883 236.041 211.67 235.792 211.67 235.374 cv
211.67 234.891 212.176 234.795 212.492 234.75 cv
213.291 234.648 213.453 234.59 213.555 234.509 cv
213.555 235.139 li
cp
f
215.953 231.201 mo
215.307 231.201 li
215.307 236.467 li
215.953 236.467 li
215.953 231.201 li
cp
f
220.03 236.467 mo
220.03 232.632 li
219.384 232.632 li
219.384 234.744 li
219.384 235.301 219.142 236.02 218.329 236.02 cv
217.911 236.02 217.587 235.807 217.587 235.176 cv
217.587 232.632 li
216.943 232.632 li
216.943 235.389 li
216.943 236.305 217.625 236.576 218.189 236.576 cv
218.805 236.576 219.135 236.342 219.406 235.895 cv
219.42 235.909 li
219.42 236.467 li
220.03 236.467 li
cp
f
221.569 233.797 mo
221.613 233.504 221.715 233.057 222.449 233.057 cv
223.057 233.057 223.351 233.277 223.351 233.68 cv
223.351 234.062 223.167 234.12 223.013 234.135 cv
221.951 234.267 li
220.879 234.398 220.785 235.146 220.785 235.469 cv
220.785 236.129 221.283 236.576 221.987 236.576 cv
222.735 236.576 223.124 236.225 223.373 235.953 cv
223.395 236.246 223.483 236.54 224.055 236.54 cv
224.202 236.54 224.296 236.496 224.407 236.467 cv
224.407 235.997 li
224.333 236.012 224.252 236.026 224.194 236.026 cv
224.062 236.026 223.982 235.961 223.982 235.799 cv
223.982 233.592 li
223.982 232.609 222.867 232.521 222.559 232.521 cv
221.613 232.521 221.004 232.881 220.975 233.797 cv
221.569 233.797 li
cp
223.336 235.139 mo
223.336 235.652 222.75 236.041 222.148 236.041 cv
221.665 236.041 221.452 235.792 221.452 235.374 cv
221.452 234.891 221.958 234.795 222.273 234.75 cv
223.073 234.648 223.234 234.59 223.336 234.509 cv
223.336 235.139 li
cp
f
226.482 233.167 mo
226.482 232.632 li
225.866 232.632 li
225.866 231.561 li
225.22 231.561 li
225.22 232.632 li
224.7 232.632 li
224.7 233.167 li
225.22 233.167 li
225.22 235.697 li
225.22 236.158 225.36 236.518 225.998 236.518 cv
226.064 236.518 226.248 236.488 226.482 236.467 cv
226.482 235.961 li
226.254 235.961 li
226.123 235.961 225.866 235.961 225.866 235.66 cv
225.866 233.167 li
226.482 233.167 li
cp
f
229.723 235.264 mo
229.701 235.55 229.341 236.02 228.733 236.02 cv
227.993 236.02 227.619 235.557 227.619 234.758 cv
230.419 234.758 li
230.419 233.401 229.876 232.521 228.769 232.521 cv
227.5 232.521 226.929 233.468 226.929 234.655 cv
226.929 235.763 227.567 236.576 228.645 236.576 cv
229.26 236.576 229.51 236.43 229.686 236.313 cv
230.17 235.99 230.346 235.447 230.368 235.264 cv
229.723 235.264 li
cp
227.619 234.244 mo
227.619 233.65 228.087 233.102 228.681 233.102 cv
229.466 233.102 229.715 233.65 229.752 234.244 cv
227.619 234.244 li
cp
f
234.598 235.756 mo
234.584 235.756 li
233.565 232.632 li
232.832 232.632 li
234.254 236.569 li
233.946 237.361 233.91 237.457 233.572 237.457 cv
233.396 237.457 233.264 237.42 233.183 237.391 cv
233.183 237.977 li
233.287 238.006 233.36 238.035 233.455 238.035 cv
234.284 238.035 234.349 237.947 234.958 236.393 cv
235.449 235.139 235.889 233.886 236.336 232.632 cv
235.625 232.632 li
234.598 235.756 li
cp
f
236.673 234.545 mo
236.673 235.535 237.231 236.569 238.456 236.569 cv
239.68 236.569 240.237 235.535 240.237 234.545 cv
240.237 233.556 239.68 232.521 238.456 232.521 cv
237.231 232.521 236.673 233.556 236.673 234.545 cv
cp
237.341 234.545 mo
237.341 234.032 237.532 233.079 238.456 233.079 cv
239.379 233.079 239.57 234.032 239.57 234.545 cv
239.57 235.059 239.379 236.012 238.456 236.012 cv
237.532 236.012 237.341 235.059 237.341 234.545 cv
cp
f
244.08 236.467 mo
244.08 232.632 li
243.434 232.632 li
243.434 234.744 li
243.434 235.301 243.192 236.02 242.378 236.02 cv
241.96 236.02 241.637 235.807 241.637 235.176 cv
241.637 232.632 li
240.993 232.632 li
240.993 235.389 li
240.993 236.305 241.674 236.576 242.239 236.576 cv
242.855 236.576 243.185 236.342 243.456 235.895 cv
243.471 235.909 li
243.471 236.467 li
244.08 236.467 li
cp
f
245.781 234.237 mo
245.781 233.68 246.162 233.211 246.763 233.211 cv
247.004 233.211 li
247.004 232.543 li
246.954 232.529 246.917 232.521 246.836 232.521 cv
246.352 232.521 246.015 232.822 245.758 233.27 cv
245.744 233.27 li
245.744 232.632 li
245.135 232.632 li
245.135 236.467 li
245.781 236.467 li
245.781 234.237 li
cp
f
252.137 235.264 mo
252.116 235.55 251.756 236.02 251.148 236.02 cv
250.407 236.02 250.033 235.557 250.033 234.758 cv
252.834 234.758 li
252.834 233.401 252.292 232.521 251.184 232.521 cv
249.916 232.521 249.344 233.468 249.344 234.655 cv
249.344 235.763 249.982 236.576 251.06 236.576 cv
251.675 236.576 251.925 236.43 252.101 236.313 cv
252.584 235.99 252.76 235.447 252.783 235.264 cv
252.137 235.264 li
cp
250.033 234.244 mo
250.033 233.65 250.502 233.102 251.096 233.102 cv
251.881 233.102 252.13 233.65 252.167 234.244 cv
250.033 234.244 li
cp
f
255.371 234.494 mo
256.668 232.632 li
255.877 232.632 li
254.99 233.98 li
254.102 232.632 li
253.274 232.632 li
254.557 234.494 li
253.208 236.467 li
254.022 236.467 li
254.946 235.021 li
255.899 236.467 li
256.72 236.467 li
255.371 234.494 li
cp
f
257.834 234.729 mo
257.834 234.105 257.937 233.102 258.869 233.102 cv
259.866 233.102 259.917 234.047 259.917 234.538 cv
259.917 235.381 259.587 236.02 258.883 236.02 cv
258.472 236.02 257.834 235.748 257.834 234.729 cv
cp
257.219 237.984 mo
257.864 237.984 li
257.864 236.063 li
257.878 236.063 li
258.047 236.334 258.384 236.576 258.898 236.576 cv
260.203 236.576 260.584 235.352 260.584 234.436 cv
260.584 233.357 260.005 232.521 258.986 232.521 cv
258.29 232.521 257.996 232.954 257.842 233.174 cv
257.828 233.174 li
257.828 232.632 li
257.219 232.632 li
257.219 237.984 li
cp
f
263.958 235.264 mo
263.935 235.55 263.576 236.02 262.967 236.02 cv
262.227 236.02 261.853 235.557 261.853 234.758 cv
264.654 234.758 li
264.654 233.401 264.111 232.521 263.004 232.521 cv
261.736 232.521 261.164 233.468 261.164 234.655 cv
261.164 235.763 261.801 236.576 262.879 236.576 cv
263.496 236.576 263.745 236.43 263.92 236.313 cv
264.405 235.99 264.581 235.447 264.602 235.264 cv
263.958 235.264 li
cp
261.853 234.244 mo
261.853 233.65 262.322 233.102 262.916 233.102 cv
263.701 233.102 263.95 233.65 263.987 234.244 cv
261.853 234.244 li
cp
f
266.157 234.237 mo
266.157 233.68 266.539 233.211 267.139 233.211 cv
267.381 233.211 li
267.381 232.543 li
267.33 232.529 267.293 232.521 267.212 232.521 cv
266.729 232.521 266.391 232.822 266.135 233.27 cv
266.121 233.27 li
266.121 232.632 li
265.511 232.632 li
265.511 236.467 li
266.157 236.467 li
266.157 234.237 li
cp
f
268.525 232.632 mo
267.88 232.632 li
267.88 236.467 li
268.525 236.467 li
268.525 232.632 li
cp
268.525 231.936 mo
268.525 231.201 li
267.88 231.201 li
267.88 231.936 li
268.525 231.936 li
cp
f
269.493 236.467 mo
270.138 236.467 li
270.138 234.377 li
270.138 233.336 270.784 233.102 271.15 233.102 cv
271.626 233.102 271.751 233.49 271.751 233.813 cv
271.751 236.467 li
272.397 236.467 li
272.397 234.127 li
272.397 233.614 272.756 233.102 273.298 233.102 cv
273.848 233.102 274.009 233.461 274.009 233.988 cv
274.009 236.467 li
274.655 236.467 li
274.655 233.813 li
274.655 232.734 273.877 232.521 273.467 232.521 cv
272.874 232.521 272.617 232.785 272.294 233.145 cv
272.184 232.939 271.964 232.521 271.275 232.521 cv
270.585 232.521 270.255 232.969 270.117 233.174 cv
270.102 233.174 li
270.102 232.632 li
269.493 232.632 li
269.493 236.467 li
cp
f
278.211 235.264 mo
278.189 235.55 277.83 236.02 277.221 236.02 cv
276.481 236.02 276.107 235.557 276.107 234.758 cv
278.908 234.758 li
278.908 233.401 278.365 232.521 277.258 232.521 cv
275.99 232.521 275.417 233.468 275.417 234.655 cv
275.417 235.763 276.055 236.576 277.133 236.576 cv
277.75 236.576 277.999 236.43 278.174 236.313 cv
278.659 235.99 278.834 235.447 278.856 235.264 cv
278.211 235.264 li
cp
276.107 234.244 mo
276.107 233.65 276.576 233.102 277.17 233.102 cv
277.955 233.102 278.204 233.65 278.241 234.244 cv
276.107 234.244 li
cp
f
282.801 233.855 mo
282.801 232.764 282.053 232.521 281.459 232.521 cv
280.799 232.521 280.44 232.969 280.301 233.174 cv
280.287 233.174 li
280.287 232.632 li
279.677 232.632 li
279.677 236.467 li
280.323 236.467 li
280.323 234.377 li
280.323 233.336 280.968 233.102 281.334 233.102 cv
281.965 233.102 282.156 233.438 282.156 234.105 cv
282.156 236.467 li
282.801 236.467 li
282.801 233.855 li
cp
f
285.163 233.167 mo
285.163 232.632 li
284.546 232.632 li
284.546 231.561 li
283.901 231.561 li
283.901 232.632 li
283.38 232.632 li
283.38 233.167 li
283.901 233.167 li
283.901 235.697 li
283.901 236.158 284.041 236.518 284.678 236.518 cv
284.745 236.518 284.927 236.488 285.163 236.467 cv
285.163 235.961 li
284.935 235.961 li
284.803 235.961 284.546 235.961 284.546 235.66 cv
284.546 233.167 li
285.163 233.167 li
cp
f
201.882 87.9873 mo
212.229 100.404 li
.746 .676 .668 .898 cmyk
@
215.609 104.459 mo
213.75 99.1362 li
210.708 101.671 li
215.609 104.459 li
cp
f
0 lc
0 lj
215.609 104.459 mo
213.75 99.1362 li
210.708 101.671 li
215.609 104.459 li
cp
@
1 lc
1 lj
244.166 140.78 mo
244.166 151.412 li
@
244.166 156.691 mo
246.145 151.412 li
242.186 151.412 li
244.166 156.691 li
cp
f
0 lc
0 lj
244.166 156.691 mo
246.145 151.412 li
242.186 151.412 li
244.166 156.691 li
cp
@
1 lc
1 lj
244.166 193.572 mo
244.166 204.205 li
@
244.166 209.484 mo
246.145 204.205 li
242.186 204.205 li
244.166 209.484 li
cp
f
0 lc
0 lj
244.166 209.484 mo
246.145 204.205 li
242.186 204.205 li
244.166 209.484 li
cp
@
131.981 265.43 mo
224.369 265.43 li
224.369 298.424 li
131.981 298.424 li
131.981 265.43 li
cp
0 0 0 0 cmyk
f
1 lc
1 lj
131.981 265.43 mo
224.369 265.43 li
224.369 298.424 li
131.981 298.424 li
131.981 265.43 li
cp
.746 .676 .668 .898 cmyk
@
156.222 281.179 mo
156.12 280.299 155.416 279.455 154.059 279.455 cv
152.527 279.455 151.603 280.578 151.603 282.198 cv
151.603 284.222 152.776 284.999 153.971 284.999 cv
154.367 284.999 155.98 284.911 156.273 282.924 cv
155.584 282.924 li
155.342 284.148 154.543 284.369 154.081 284.369 cv
152.776 284.369 152.336 283.415 152.336 282.176 cv
152.336 280.79 153.106 280.086 154.059 280.086 cv
154.565 280.086 155.335 280.255 155.533 281.179 cv
156.222 281.179 li
cp
0 0 0 1 cmyk
f
156.831 282.938 mo
156.831 283.928 157.388 284.963 158.612 284.963 cv
159.837 284.963 160.394 283.928 160.394 282.938 cv
160.394 281.949 159.837 280.915 158.612 280.915 cv
157.388 280.915 156.831 281.949 156.831 282.938 cv
cp
157.498 282.938 mo
157.498 282.426 157.688 281.473 158.612 281.473 cv
159.536 281.473 159.727 282.426 159.727 282.938 cv
159.727 283.451 159.536 284.405 158.612 284.405 cv
157.688 284.405 157.498 283.451 157.498 282.938 cv
cp
f
161.127 284.859 mo
161.773 284.859 li
161.773 282.77 li
161.773 281.729 162.418 281.494 162.785 281.494 cv
163.261 281.494 163.386 281.883 163.386 282.205 cv
163.386 284.859 li
164.031 284.859 li
164.031 282.521 li
164.031 282.008 164.39 281.494 164.933 281.494 cv
165.483 281.494 165.644 281.854 165.644 282.381 cv
165.644 284.859 li
166.29 284.859 li
166.29 282.205 li
166.29 281.127 165.512 280.915 165.102 280.915 cv
164.508 280.915 164.251 281.179 163.928 281.538 cv
163.818 281.333 163.599 280.915 162.909 280.915 cv
162.22 280.915 161.89 281.362 161.75 281.567 cv
161.736 281.567 li
161.736 281.025 li
161.127 281.025 li
161.127 284.859 li
cp
f
167.8 283.122 mo
167.8 282.498 167.902 281.494 168.833 281.494 cv
169.831 281.494 169.882 282.439 169.882 282.932 cv
169.882 283.774 169.552 284.412 168.848 284.412 cv
168.438 284.412 167.8 284.141 167.8 283.122 cv
cp
167.184 286.377 mo
167.829 286.377 li
167.829 284.457 li
167.844 284.457 li
168.013 284.728 168.35 284.97 168.863 284.97 cv
170.168 284.97 170.549 283.745 170.549 282.828 cv
170.549 281.751 169.97 280.915 168.951 280.915 cv
168.254 280.915 167.961 281.348 167.807 281.567 cv
167.792 281.567 li
167.792 281.025 li
167.184 281.025 li
167.184 286.377 li
cp
f
171.884 282.191 mo
171.928 281.897 172.031 281.45 172.764 281.45 cv
173.373 281.45 173.666 281.67 173.666 282.073 cv
173.666 282.455 173.482 282.514 173.329 282.527 cv
172.265 282.66 li
171.195 282.792 171.099 283.54 171.099 283.862 cv
171.099 284.522 171.598 284.97 172.302 284.97 cv
173.05 284.97 173.438 284.617 173.688 284.346 cv
173.709 284.64 173.798 284.934 174.37 284.934 cv
174.516 284.934 174.612 284.889 174.722 284.859 cv
174.722 284.391 li
174.648 284.405 174.567 284.42 174.509 284.42 cv
174.377 284.42 174.296 284.354 174.296 284.192 cv
174.296 281.985 li
174.296 281.003 173.182 280.915 172.874 280.915 cv
171.928 280.915 171.319 281.273 171.29 282.191 cv
171.884 282.191 li
cp
173.651 283.533 mo
173.651 284.046 173.064 284.435 172.463 284.435 cv
171.979 284.435 171.767 284.186 171.767 283.768 cv
171.767 283.283 172.272 283.188 172.588 283.145 cv
173.387 283.041 173.548 282.982 173.651 282.902 cv
173.651 283.533 li
cp
f
176.122 282.631 mo
176.122 282.073 176.503 281.604 177.104 281.604 cv
177.347 281.604 li
177.347 280.938 li
177.295 280.922 177.258 280.915 177.178 280.915 cv
176.694 280.915 176.356 281.215 176.1 281.662 cv
176.085 281.662 li
176.085 281.025 li
175.477 281.025 li
175.477 284.859 li
176.122 284.859 li
176.122 282.631 li
cp
f
180.441 283.657 mo
180.419 283.943 180.06 284.412 179.451 284.412 cv
178.71 284.412 178.336 283.951 178.336 283.151 cv
181.137 283.151 li
181.137 281.795 180.595 280.915 179.488 280.915 cv
178.219 280.915 177.647 281.861 177.647 283.049 cv
177.647 284.156 178.285 284.97 179.363 284.97 cv
179.979 284.97 180.228 284.822 180.404 284.705 cv
180.888 284.383 181.064 283.84 181.086 283.657 cv
180.441 283.657 li
cp
178.336 282.639 mo
178.336 282.044 178.806 281.494 179.399 281.494 cv
180.184 281.494 180.434 282.044 180.47 282.639 cv
178.336 282.639 li
cp
f
184.679 282.631 mo
184.679 282.073 185.06 281.604 185.661 281.604 cv
185.903 281.604 li
185.903 280.938 li
185.852 280.922 185.815 280.915 185.735 280.915 cv
185.25 280.915 184.914 281.215 184.657 281.662 cv
184.642 281.662 li
184.642 281.025 li
184.034 281.025 li
184.034 284.859 li
184.679 284.859 li
184.679 282.631 li
cp
f
188.998 283.657 mo
188.975 283.943 188.617 284.412 188.007 284.412 cv
187.267 284.412 186.893 283.951 186.893 283.151 cv
189.694 283.151 li
189.694 281.795 189.152 280.915 188.044 280.915 cv
186.776 280.915 186.204 281.861 186.204 283.049 cv
186.204 284.156 186.842 284.97 187.919 284.97 cv
188.536 284.97 188.785 284.822 188.96 284.705 cv
189.445 284.383 189.621 283.84 189.643 283.657 cv
188.998 283.657 li
cp
186.893 282.639 mo
186.893 282.044 187.362 281.494 187.957 281.494 cv
188.741 281.494 188.99 282.044 189.027 282.639 cv
186.893 282.639 li
cp
f
193.265 282.117 mo
193.265 281.927 193.169 280.915 191.798 280.915 cv
191.043 280.915 190.346 281.297 190.346 282.139 cv
190.346 282.668 190.699 282.938 191.234 283.07 cv
191.982 283.254 li
192.532 283.393 192.745 283.496 192.745 283.804 cv
192.745 284.229 192.327 284.412 191.865 284.412 cv
190.956 284.412 190.868 283.928 190.845 283.628 cv
190.222 283.628 li
190.244 284.09 190.354 284.97 191.872 284.97 cv
192.737 284.97 193.389 284.493 193.389 283.701 cv
193.389 283.181 193.111 282.887 192.312 282.689 cv
191.667 282.527 li
191.167 282.403 190.97 282.33 190.97 282.015 cv
190.97 281.538 191.535 281.473 191.733 281.473 cv
192.546 281.473 192.634 281.875 192.642 282.117 cv
193.265 282.117 li
cp
f
197.239 284.859 mo
197.239 281.025 li
196.594 281.025 li
196.594 283.137 li
196.594 283.693 196.352 284.412 195.538 284.412 cv
195.12 284.412 194.797 284.199 194.797 283.569 cv
194.797 281.025 li
194.152 281.025 li
194.152 283.781 li
194.152 284.698 194.834 284.97 195.399 284.97 cv
196.014 284.97 196.344 284.734 196.616 284.287 cv
196.63 284.303 li
196.63 284.859 li
197.239 284.859 li
cp
f
198.867 279.596 mo
198.221 279.596 li
198.221 284.859 li
198.867 284.859 li
198.867 279.596 li
cp
f
201.243 281.561 mo
201.243 281.025 li
200.626 281.025 li
200.626 279.955 li
199.981 279.955 li
199.981 281.025 li
199.46 281.025 li
199.46 281.561 li
199.981 281.561 li
199.981 284.09 li
199.981 284.552 200.121 284.911 200.758 284.911 cv
200.825 284.911 201.008 284.882 201.243 284.859 cv
201.243 284.354 li
201.015 284.354 li
200.883 284.354 200.626 284.354 200.626 284.053 cv
200.626 281.561 li
201.243 281.561 li
cp
f
204.674 282.117 mo
204.674 281.927 204.579 280.915 203.208 280.915 cv
202.453 280.915 201.755 281.297 201.755 282.139 cv
201.755 282.668 202.108 282.938 202.643 283.07 cv
203.391 283.254 li
203.941 283.393 204.154 283.496 204.154 283.804 cv
204.154 284.229 203.736 284.412 203.274 284.412 cv
202.365 284.412 202.276 283.928 202.254 283.628 cv
201.631 283.628 li
201.653 284.09 201.763 284.97 203.281 284.97 cv
204.146 284.97 204.798 284.493 204.798 283.701 cv
204.798 283.181 204.52 282.887 203.721 282.689 cv
203.076 282.527 li
202.577 282.403 202.379 282.33 202.379 282.015 cv
202.379 281.538 202.944 281.473 203.141 281.473 cv
203.956 281.473 204.043 281.875 204.05 282.117 cv
204.674 282.117 li
cp
f
gsave
0 308.689 mo
360.016 308.689 li
360.016 0 li
0 0 li
0 308.689 li
cp
clp
112.184 245.632 mo
112.184 245.632 106.576 255.146 112.184 265.43 cv
115.223 271 120.781 275.377 125.235 278.219 cv
.746 .676 .668 .898 cmyk
@
129.861 280.762 mo
126.188 276.483 li
124.281 279.953 li
129.861 280.762 li
cp
f
0 lc
0 lj
129.861 280.762 mo
126.188 276.483 li
124.281 279.953 li
129.861 280.762 li
cp
@
1 lc
1 lj
244.166 245.632 mo
244.166 245.632 249.774 255.146 244.166 265.43 cv
241.126 271 235.569 275.377 231.115 278.219 cv
@
226.489 280.762 mo
232.069 279.953 li
230.162 276.483 li
226.489 280.762 li
cp
f
0 lc
0 lj
226.489 280.762 mo
232.069 279.953 li
230.162 276.483 li
226.489 280.762 li
cp
@
1 lc
1 lj
178.175 298.424 mo
178.175 298.424 117.459 319.869 72.5898 291.825 cv
27.7202 263.782 23.5366 247.112 19.7974 199.438 cv
16.9463 163.092 41.4575 138.055 53.2656 128.21 cv
@
57.4658 125.014 mo
52.0654 126.635 li
54.4634 129.787 li
57.4658 125.014 li
cp
f
0 lc
0 lj
57.4658 125.014 mo
52.0654 126.635 li
54.4634 129.787 li
57.4658 125.014 li
cp
@
1 lc
1 lj
178.175 298.424 mo
178.175 298.424 238.891 319.869 283.76 291.825 cv
328.629 263.782 332.813 247.112 336.552 199.438 cv
339.403 163.092 314.893 138.055 303.084 128.21 cv
@
298.883 125.014 mo
301.887 129.787 li
304.284 126.635 li
298.883 125.014 li
cp
f
0 lc
0 lj
298.883 125.014 mo
301.887 129.787 li
304.284 126.635 li
298.883 125.014 li
cp
@
.0292969 191.861 mo
40.3569 191.861 li
40.3569 216.791 li
.0292969 216.791 li
.0292969 191.861 li
cp
0 0 0 0 cmyk
f
grestore
7.38574 201.328 mo
7.90674 202.86 li
8.68359 202.86 li
6.77734 197.596 li
5.9707 197.596 li
3.99121 202.86 li
4.72412 202.86 li
5.27441 201.328 li
7.38574 201.328 li
cp
5.49414 200.697 mo
6.3374 198.381 li
6.35205 198.381 li
7.12939 200.697 li
5.49414 200.697 li
cp
f
12.438 197.596 mo
11.7925 197.596 li
11.7925 199.518 li
11.7778 199.568 li
11.624 199.348 11.3306 198.916 10.6343 198.916 cv
9.61475 198.916 9.03564 199.752 9.03564 200.829 cv
9.03564 201.746 9.41699 202.971 10.7222 202.971 cv
11.0962 202.971 11.5361 202.854 11.8145 202.332 cv
11.8291 202.332 li
11.8291 202.86 li
12.438 202.86 li
12.438 197.596 li
cp
9.70313 200.932 mo
9.70313 200.441 9.75439 199.494 10.7515 199.494 cv
11.6826 199.494 11.7852 200.5 11.7852 201.123 cv
11.7852 202.142 11.1475 202.413 10.7368 202.413 cv
10.0327 202.413 9.70313 201.775 9.70313 200.932 cv
cp
f
13.9922 199.025 mo
13.3472 199.025 li
13.3472 203.352 li
13.3472 203.784 13.252 203.82 12.8706 203.82 cv
12.7383 203.82 li
12.7383 204.378 li
12.834 204.393 12.9219 204.4 13.0098 204.4 cv
13.9629 204.4 13.9922 203.755 13.9922 203.425 cv
13.9922 199.025 li
cp
13.9922 197.596 mo
13.3472 197.596 li
13.3472 198.329 li
13.9922 198.329 li
13.9922 197.596 li
cp
f
18.0688 202.86 mo
18.0688 199.025 li
17.4238 199.025 li
17.4238 201.137 li
17.4238 201.694 17.1816 202.413 16.3682 202.413 cv
15.9502 202.413 15.6274 202.201 15.6274 201.57 cv
15.6274 199.025 li
14.9819 199.025 li
14.9819 201.783 li
14.9819 202.699 15.6641 202.971 16.2285 202.971 cv
16.8447 202.971 17.1743 202.736 17.4458 202.289 cv
17.4604 202.303 li
17.4604 202.86 li
18.0688 202.86 li
cp
f
21.8379 200.118 mo
21.8379 199.928 21.7427 198.916 20.3716 198.916 cv
19.6162 198.916 18.9194 199.297 18.9194 200.141 cv
18.9194 200.668 19.2715 200.939 19.8066 201.071 cv
20.5547 201.254 li
21.1045 201.395 21.3174 201.496 21.3174 201.805 cv
21.3174 202.23 20.8994 202.413 20.4375 202.413 cv
19.5283 202.413 19.4404 201.93 19.4185 201.629 cv
18.7949 201.629 li
18.8169 202.09 18.9268 202.971 20.4448 202.971 cv
21.3101 202.971 21.9624 202.494 21.9624 201.701 cv
21.9624 201.182 21.6841 200.889 20.8848 200.689 cv
20.2393 200.529 li
19.7407 200.404 19.543 200.33 19.543 200.016 cv
19.543 199.539 20.1074 199.473 20.3052 199.473 cv
21.1191 199.473 21.2075 199.876 21.2148 200.118 cv
21.8379 200.118 li
cp
f
24.1108 199.561 mo
24.1108 199.025 li
23.4951 199.025 li
23.4951 197.955 li
22.8496 197.955 li
22.8496 199.025 li
22.3291 199.025 li
22.3291 199.561 li
22.8496 199.561 li
22.8496 202.09 li
22.8496 202.553 22.9893 202.912 23.627 202.912 cv
23.6929 202.912 23.8765 202.883 24.1108 202.86 cv
24.1108 202.354 li
23.8838 202.354 li
23.7515 202.354 23.4951 202.354 23.4951 202.054 cv
23.4951 199.561 li
24.1108 199.561 li
cp
f
28.1875 199.561 mo
28.1875 199.025 li
27.5718 199.025 li
27.5718 197.955 li
26.9263 197.955 li
26.9263 199.025 li
26.4058 199.025 li
26.4058 199.561 li
26.9263 199.561 li
26.9263 202.09 li
26.9263 202.553 27.0659 202.912 27.7036 202.912 cv
27.7695 202.912 27.9531 202.883 28.1875 202.86 cv
28.1875 202.354 li
27.9604 202.354 li
27.8286 202.354 27.5718 202.354 27.5718 202.054 cv
27.5718 199.561 li
28.1875 199.561 li
cp
f
31.9419 200.25 mo
31.9419 199.158 31.1938 198.916 30.6001 198.916 cv
29.9839 198.916 29.6616 199.297 29.478 199.539 cv
29.4634 199.539 li
29.4634 197.596 li
28.8184 197.596 li
28.8184 202.86 li
29.4634 202.86 li
29.4634 200.771 li
29.4634 199.803 30.0059 199.494 30.5342 199.494 cv
31.1499 199.494 31.2964 199.832 31.2964 200.353 cv
31.2964 202.86 li
31.9419 202.86 li
31.9419 200.25 li
cp
f
35.5054 201.658 mo
35.4834 201.943 35.124 202.413 34.5156 202.413 cv
33.7749 202.413 33.4009 201.951 33.4009 201.152 cv
36.2017 201.152 li
36.2017 199.795 35.6592 198.916 34.5522 198.916 cv
33.2837 198.916 32.7114 199.861 32.7114 201.049 cv
32.7114 202.156 33.3496 202.971 34.4272 202.971 cv
35.0435 202.971 35.2925 202.824 35.4688 202.707 cv
35.9526 202.384 36.1284 201.842 36.1504 201.658 cv
35.5054 201.658 li
cp
33.4009 200.639 mo
33.4009 200.045 33.8701 199.494 34.4639 199.494 cv
35.2485 199.494 35.498 200.045 35.5347 200.639 cv
33.4009 200.639 li
cp
f
10.6855 211.659 mo
11.3306 211.659 li
11.3306 209.569 li
11.3306 208.528 11.9761 208.293 12.3428 208.293 cv
12.8193 208.293 12.9438 208.682 12.9438 209.005 cv
12.9438 211.659 li
13.5889 211.659 li
13.5889 209.32 li
13.5889 208.807 13.9482 208.293 14.4907 208.293 cv
15.041 208.293 15.2021 208.652 15.2021 209.181 cv
15.2021 211.659 li
15.8472 211.659 li
15.8472 209.005 li
15.8472 207.927 15.0703 207.715 14.6597 207.715 cv
14.0654 207.715 13.8091 207.979 13.4863 208.338 cv
13.3765 208.133 13.1563 207.715 12.4673 207.715 cv
11.7778 207.715 11.4478 208.162 11.3086 208.367 cv
11.2939 208.367 li
11.2939 207.824 li
10.6855 207.824 li
10.6855 211.659 li
cp
f
16.5732 209.738 mo
16.5732 210.729 17.1304 211.762 18.355 211.762 cv
19.5796 211.762 20.1367 210.729 20.1367 209.738 cv
20.1367 208.748 19.5796 207.715 18.355 207.715 cv
17.1304 207.715 16.5732 208.748 16.5732 209.738 cv
cp
17.2407 209.738 mo
17.2407 209.225 17.4312 208.271 18.355 208.271 cv
19.2788 208.271 19.4697 209.225 19.4697 209.738 cv
19.4697 210.252 19.2788 211.205 18.355 211.205 cv
17.4312 211.205 17.2407 210.252 17.2407 209.738 cv
cp
f
24.0522 206.395 mo
23.4067 206.395 li
23.4067 208.315 li
23.3921 208.367 li
23.2383 208.146 22.9448 207.715 22.2485 207.715 cv
21.2295 207.715 20.6499 208.551 20.6499 209.628 cv
20.6499 210.545 21.0313 211.77 22.3364 211.77 cv
22.7104 211.77 23.1504 211.652 23.4292 211.131 cv
23.4438 211.131 li
23.4438 211.659 li
24.0522 211.659 li
24.0522 206.395 li
cp
21.3174 209.73 mo
21.3174 209.239 21.3687 208.293 22.3657 208.293 cv
23.2969 208.293 23.3999 209.299 23.3999 209.922 cv
23.3999 210.94 22.7617 211.212 22.3511 211.212 cv
21.6475 211.212 21.3174 210.574 21.3174 209.73 cv
cp
f
27.5571 210.457 mo
27.5352 210.742 27.1758 211.212 26.5674 211.212 cv
25.8267 211.212 25.4526 210.75 25.4526 209.951 cv
28.2534 209.951 li
28.2534 208.594 27.7109 207.715 26.604 207.715 cv
25.3354 207.715 24.7637 208.66 24.7637 209.848 cv
24.7637 210.955 25.4014 211.77 26.479 211.77 cv
27.0952 211.77 27.3442 211.623 27.5205 211.506 cv
28.0044 211.183 28.1802 210.641 28.2021 210.457 cv
27.5571 210.457 li
cp
25.4526 209.438 mo
25.4526 208.844 25.9219 208.293 26.5161 208.293 cv
27.3003 208.293 27.5498 208.844 27.5864 209.438 cv
25.4526 209.438 li
cp
f
29.6836 206.395 mo
29.0381 206.395 li
29.0381 211.659 li
29.6836 211.659 li
29.6836 206.395 li
cp
f
gsave
0 308.689 mo
360.016 308.689 li
360.016 0 li
0 0 li
0 308.689 li
cp
clp
312.294 187.853 mo
359.955 187.853 li
359.955 221.581 li
312.294 221.581 li
312.294 187.853 li
cp
0 0 0 0 cmyk
f
grestore
327.412 195.17 mo
327.309 194.291 326.605 193.447 325.249 193.447 cv
323.716 193.447 322.792 194.569 322.792 196.189 cv
322.792 198.213 323.965 198.99 325.161 198.99 cv
325.556 198.99 327.169 198.902 327.462 196.916 cv
326.773 196.916 li
326.532 198.141 325.732 198.359 325.27 198.359 cv
323.965 198.359 323.525 197.406 323.525 196.168 cv
323.525 194.781 324.295 194.078 325.249 194.078 cv
325.754 194.078 326.524 194.246 326.722 195.17 cv
327.412 195.17 li
cp
f
328.02 196.93 mo
328.02 197.92 328.577 198.953 329.801 198.953 cv
331.026 198.953 331.583 197.92 331.583 196.93 cv
331.583 195.94 331.026 194.906 329.801 194.906 cv
328.577 194.906 328.02 195.94 328.02 196.93 cv
cp
328.687 196.93 mo
328.687 196.417 328.877 195.464 329.801 195.464 cv
330.725 195.464 330.917 196.417 330.917 196.93 cv
330.917 197.443 330.725 198.396 329.801 198.396 cv
328.877 198.396 328.687 197.443 328.687 196.93 cv
cp
f
335.44 196.24 mo
335.44 195.148 334.692 194.906 334.098 194.906 cv
333.438 194.906 333.08 195.354 332.94 195.559 cv
332.925 195.559 li
332.925 195.017 li
332.317 195.017 li
332.317 198.852 li
332.961 198.852 li
332.961 196.762 li
332.961 195.721 333.607 195.486 333.974 195.486 cv
334.604 195.486 334.795 195.822 334.795 196.49 cv
334.795 198.852 li
335.44 198.852 li
335.44 196.24 li
cp
f
339.576 193.586 mo
338.93 193.586 li
338.93 195.508 li
338.916 195.559 li
338.762 195.339 338.468 194.906 337.772 194.906 cv
336.752 194.906 336.173 195.742 336.173 196.82 cv
336.173 197.736 336.555 198.961 337.86 198.961 cv
338.234 198.961 338.673 198.844 338.953 198.323 cv
338.967 198.323 li
338.967 198.852 li
339.576 198.852 li
339.576 193.586 li
cp
336.84 196.923 mo
336.84 196.432 336.892 195.486 337.889 195.486 cv
338.821 195.486 338.923 196.49 338.923 197.113 cv
338.923 198.133 338.285 198.404 337.875 198.404 cv
337.17 198.404 336.84 197.766 336.84 196.923 cv
cp
f
343.579 198.852 mo
343.579 195.017 li
342.934 195.017 li
342.934 197.128 li
342.934 197.686 342.692 198.404 341.878 198.404 cv
341.46 198.404 341.137 198.191 341.137 197.561 cv
341.137 195.017 li
340.492 195.017 li
340.492 197.773 li
340.492 198.689 341.174 198.961 341.739 198.961 cv
342.355 198.961 342.684 198.727 342.956 198.279 cv
342.97 198.294 li
342.97 198.852 li
343.579 198.852 li
cp
f
347.568 196.307 mo
347.516 195.64 347.135 194.906 346.13 194.906 cv
344.862 194.906 344.291 195.852 344.291 197.04 cv
344.291 198.147 344.928 198.961 346.006 198.961 cv
347.127 198.961 347.501 198.104 347.568 197.494 cv
346.945 197.494 li
346.834 198.082 346.46 198.404 346.028 198.404 cv
345.141 198.404 344.98 197.59 344.98 196.93 cv
344.98 196.248 345.236 195.486 346.036 195.486 cv
346.578 195.486 346.864 195.793 346.945 196.307 cv
347.568 196.307 li
cp
f
349.621 195.552 mo
349.621 195.017 li
349.005 195.017 li
349.005 193.945 li
348.36 193.945 li
348.36 195.017 li
347.839 195.017 li
347.839 195.552 li
348.36 195.552 li
348.36 198.082 li
348.36 198.543 348.499 198.902 349.137 198.902 cv
349.203 198.902 349.386 198.873 349.621 198.852 cv
349.621 198.346 li
349.393 198.346 li
349.261 198.346 349.005 198.346 349.005 198.045 cv
349.005 195.552 li
349.621 195.552 li
cp
f
321.479 204.98 mo
321.524 204.688 321.626 204.24 322.36 204.24 cv
322.968 204.24 323.261 204.461 323.261 204.863 cv
323.261 205.245 323.078 205.304 322.924 205.318 cv
321.861 205.45 li
320.791 205.582 320.695 206.33 320.695 206.652 cv
320.695 207.313 321.194 207.76 321.897 207.76 cv
322.645 207.76 323.034 207.408 323.284 207.137 cv
323.305 207.43 323.393 207.723 323.965 207.723 cv
324.112 207.723 324.208 207.68 324.317 207.65 cv
324.317 207.181 li
324.244 207.195 324.164 207.21 324.104 207.21 cv
323.972 207.21 323.892 207.145 323.892 206.982 cv
323.892 204.775 li
323.892 203.793 322.777 203.705 322.469 203.705 cv
321.524 203.705 320.915 204.064 320.885 204.98 cv
321.479 204.98 li
cp
323.247 206.322 mo
323.247 206.836 322.66 207.225 322.059 207.225 cv
321.575 207.225 321.362 206.976 321.362 206.558 cv
321.362 206.074 321.868 205.979 322.183 205.934 cv
322.983 205.832 323.144 205.773 323.247 205.692 cv
323.247 206.322 li
cp
f
328.167 202.385 mo
327.521 202.385 li
327.521 204.307 li
327.506 204.357 li
327.353 204.138 327.059 203.705 326.363 203.705 cv
325.343 203.705 324.764 204.541 324.764 205.619 cv
324.764 206.535 325.146 207.76 326.451 207.76 cv
326.825 207.76 327.265 207.643 327.543 207.122 cv
327.558 207.122 li
327.558 207.65 li
328.167 207.65 li
328.167 202.385 li
cp
325.431 205.722 mo
325.431 205.23 325.483 204.285 326.48 204.285 cv
327.412 204.285 327.514 205.289 327.514 205.912 cv
327.514 206.932 326.876 207.203 326.465 207.203 cv
325.761 207.203 325.431 206.564 325.431 205.722 cv
cp
f
332.244 202.385 mo
331.598 202.385 li
331.598 204.307 li
331.583 204.357 li
331.429 204.138 331.136 203.705 330.44 203.705 cv
329.42 203.705 328.841 204.541 328.841 205.619 cv
328.841 206.535 329.222 207.76 330.528 207.76 cv
330.902 207.76 331.341 207.643 331.62 207.122 cv
331.634 207.122 li
331.634 207.65 li
332.244 207.65 li
332.244 202.385 li
cp
329.508 205.722 mo
329.508 205.23 329.56 204.285 330.557 204.285 cv
331.488 204.285 331.59 205.289 331.59 205.912 cv
331.59 206.932 330.953 207.203 330.542 207.203 cv
329.838 207.203 329.508 206.564 329.508 205.722 cv
cp
f
333.797 203.814 mo
333.153 203.814 li
333.153 207.65 li
333.797 207.65 li
333.797 203.814 li
cp
333.797 203.119 mo
333.797 202.385 li
333.153 202.385 li
333.153 203.119 li
333.797 203.119 li
cp
f
336.173 204.351 mo
336.173 203.814 li
335.557 203.814 li
335.557 202.744 li
334.913 202.744 li
334.913 203.814 li
334.392 203.814 li
334.392 204.351 li
334.913 204.351 li
334.913 206.88 li
334.913 207.342 335.051 207.701 335.69 207.701 cv
335.755 207.701 335.939 207.672 336.173 207.65 cv
336.173 207.145 li
335.946 207.145 li
335.814 207.145 335.557 207.145 335.557 206.844 cv
335.557 204.351 li
336.173 204.351 li
cp
f
337.464 203.814 mo
336.819 203.814 li
336.819 207.65 li
337.464 207.65 li
337.464 203.814 li
cp
337.464 203.119 mo
337.464 202.385 li
336.819 202.385 li
336.819 203.119 li
337.464 203.119 li
cp
f
338.211 205.729 mo
338.211 206.719 338.769 207.752 339.994 207.752 cv
341.218 207.752 341.775 206.719 341.775 205.729 cv
341.775 204.739 341.218 203.705 339.994 203.705 cv
338.769 203.705 338.211 204.739 338.211 205.729 cv
cp
338.879 205.729 mo
338.879 205.216 339.07 204.262 339.994 204.262 cv
340.917 204.262 341.108 205.216 341.108 205.729 cv
341.108 206.242 340.917 207.195 339.994 207.195 cv
339.07 207.195 338.879 206.242 338.879 205.729 cv
cp
f
345.632 205.039 mo
345.632 203.947 344.884 203.705 344.291 203.705 cv
343.63 203.705 343.271 204.152 343.131 204.357 cv
343.117 204.357 li
343.117 203.814 li
342.508 203.814 li
342.508 207.65 li
343.154 207.65 li
343.154 205.561 li
343.154 204.52 343.799 204.285 344.166 204.285 cv
344.796 204.285 344.987 204.621 344.987 205.289 cv
344.987 207.65 li
345.632 207.65 li
345.632 205.039 li
cp
f
347.157 204.98 mo
347.202 204.688 347.304 204.24 348.037 204.24 cv
348.646 204.24 348.939 204.461 348.939 204.863 cv
348.939 205.245 348.755 205.304 348.602 205.318 cv
347.539 205.45 li
346.468 205.582 346.373 206.33 346.373 206.652 cv
346.373 207.313 346.872 207.76 347.575 207.76 cv
348.323 207.76 348.711 207.408 348.961 207.137 cv
348.983 207.43 349.071 207.723 349.643 207.723 cv
349.79 207.723 349.885 207.68 349.995 207.65 cv
349.995 207.181 li
349.921 207.195 349.84 207.21 349.782 207.21 cv
349.65 207.21 349.57 207.145 349.57 206.982 cv
349.57 204.775 li
349.57 203.793 348.455 203.705 348.147 203.705 cv
347.202 203.705 346.592 204.064 346.563 204.98 cv
347.157 204.98 li
cp
348.924 206.322 mo
348.924 206.836 348.337 207.225 347.737 207.225 cv
347.252 207.225 347.04 206.976 347.04 206.558 cv
347.04 206.074 347.545 205.979 347.861 205.934 cv
348.661 205.832 348.822 205.773 348.924 205.692 cv
348.924 206.322 li
cp
f
351.322 202.385 mo
350.676 202.385 li
350.676 207.65 li
351.322 207.65 li
351.322 202.385 li
cp
f
319.243 215.246 mo
319.221 215.532 318.862 216.002 318.253 216.002 cv
317.513 216.002 317.139 215.539 317.139 214.74 cv
319.94 214.74 li
319.94 213.384 319.397 212.504 318.29 212.504 cv
317.021 212.504 316.45 213.449 316.45 214.638 cv
316.45 215.744 317.087 216.559 318.166 216.559 cv
318.781 216.559 319.031 216.412 319.207 216.295 cv
319.69 215.973 319.867 215.43 319.888 215.246 cv
319.243 215.246 li
cp
317.139 214.227 mo
317.139 213.633 317.608 213.083 318.202 213.083 cv
318.987 213.083 319.236 213.633 319.273 214.227 cv
317.139 214.227 li
cp
f
322.477 214.477 mo
323.775 212.613 li
322.983 212.613 li
322.095 213.963 li
321.208 212.613 li
320.379 212.613 li
321.663 214.477 li
320.314 216.449 li
321.127 216.449 li
322.051 215.004 li
323.004 216.449 li
323.826 216.449 li
322.477 214.477 li
cp
f
324.94 214.711 mo
324.94 214.088 325.043 213.083 325.974 213.083 cv
326.971 213.083 327.023 214.029 327.023 214.521 cv
327.023 215.363 326.693 216.002 325.989 216.002 cv
325.579 216.002 324.94 215.73 324.94 214.711 cv
cp
324.325 217.967 mo
324.969 217.967 li
324.969 216.045 li
324.984 216.045 li
325.153 216.316 325.491 216.559 326.003 216.559 cv
327.309 216.559 327.69 215.334 327.69 214.418 cv
327.69 213.34 327.111 212.504 326.091 212.504 cv
325.395 212.504 325.102 212.937 324.948 213.156 cv
324.933 213.156 li
324.933 212.613 li
324.325 212.613 li
324.325 217.967 li
cp
f
331.063 215.246 mo
331.041 215.532 330.681 216.002 330.073 216.002 cv
329.333 216.002 328.958 215.539 328.958 214.74 cv
331.759 214.74 li
331.759 213.384 331.217 212.504 330.11 212.504 cv
328.841 212.504 328.269 213.449 328.269 214.638 cv
328.269 215.744 328.907 216.559 329.985 216.559 cv
330.601 216.559 330.85 216.412 331.026 216.295 cv
331.51 215.973 331.686 215.43 331.708 215.246 cv
331.063 215.246 li
cp
328.958 214.227 mo
328.958 213.633 329.427 213.083 330.022 213.083 cv
330.806 213.083 331.055 213.633 331.092 214.227 cv
328.958 214.227 li
cp
f
333.262 214.22 mo
333.262 213.662 333.644 213.193 334.245 213.193 cv
334.487 213.193 li
334.487 212.525 li
334.436 212.512 334.399 212.504 334.319 212.504 cv
333.834 212.504 333.498 212.805 333.241 213.252 cv
333.226 213.252 li
333.226 212.613 li
332.618 212.613 li
332.618 216.449 li
333.262 216.449 li
333.262 214.22 li
cp
f
335.631 212.613 mo
334.986 212.613 li
334.986 216.449 li
335.631 216.449 li
335.631 212.613 li
cp
335.631 211.918 mo
335.631 211.184 li
334.986 211.184 li
334.986 211.918 li
335.631 211.918 li
cp
f
336.599 216.449 mo
337.244 216.449 li
337.244 214.359 li
337.244 213.318 337.889 213.083 338.255 213.083 cv
338.732 213.083 338.857 213.472 338.857 213.795 cv
338.857 216.449 li
339.502 216.449 li
339.502 214.109 li
339.502 213.597 339.862 213.083 340.404 213.083 cv
340.954 213.083 341.116 213.442 341.116 213.971 cv
341.116 216.449 li
341.76 216.449 li
341.76 213.795 li
341.76 212.717 340.984 212.504 340.573 212.504 cv
339.979 212.504 339.722 212.768 339.4 213.127 cv
339.29 212.922 339.07 212.504 338.38 212.504 cv
337.691 212.504 337.361 212.951 337.222 213.156 cv
337.208 213.156 li
337.208 212.613 li
336.599 212.613 li
336.599 216.449 li
cp
f
345.317 215.246 mo
345.294 215.532 344.936 216.002 344.327 216.002 cv
343.586 216.002 343.212 215.539 343.212 214.74 cv
346.013 214.74 li
346.013 213.384 345.471 212.504 344.364 212.504 cv
343.095 212.504 342.523 213.449 342.523 214.638 cv
342.523 215.744 343.161 216.559 344.239 216.559 cv
344.855 216.559 345.104 216.412 345.28 216.295 cv
345.764 215.973 345.94 215.43 345.962 215.246 cv
345.317 215.246 li
cp
343.212 214.227 mo
343.212 213.633 343.682 213.083 344.276 213.083 cv
345.06 213.083 345.309 213.633 345.346 214.227 cv
343.212 214.227 li
cp
f
349.907 213.838 mo
349.907 212.746 349.159 212.504 348.565 212.504 cv
347.905 212.504 347.545 212.951 347.407 213.156 cv
347.392 213.156 li
347.392 212.613 li
346.784 212.613 li
346.784 216.449 li
347.428 216.449 li
347.428 214.359 li
347.428 213.318 348.074 213.083 348.44 213.083 cv
349.071 213.083 349.261 213.42 349.261 214.088 cv
349.261 216.449 li
349.907 216.449 li
349.907 213.838 li
cp
f
352.268 213.149 mo
352.268 212.613 li
351.652 212.613 li
351.652 211.543 li
351.006 211.543 li
351.006 212.613 li
350.486 212.613 li
350.486 213.149 li
351.006 213.149 li
351.006 215.679 li
351.006 216.141 351.146 216.5 351.784 216.5 cv
351.85 216.5 352.034 216.471 352.268 216.449 cv
352.268 215.943 li
352.041 215.943 li
351.909 215.943 351.652 215.943 351.652 215.643 cv
351.652 213.149 li
352.268 213.149 li
cp
f
355.7 213.707 mo
355.7 213.516 355.604 212.504 354.233 212.504 cv
353.478 212.504 352.781 212.885 352.781 213.729 cv
352.781 214.256 353.133 214.527 353.668 214.66 cv
354.417 214.843 li
354.966 214.982 355.179 215.085 355.179 215.393 cv
355.179 215.818 354.761 216.002 354.299 216.002 cv
353.39 216.002 353.301 215.518 353.28 215.217 cv
352.657 215.217 li
352.678 215.679 352.789 216.559 354.306 216.559 cv
355.171 216.559 355.824 216.082 355.824 215.29 cv
355.824 214.77 355.545 214.477 354.747 214.278 cv
354.101 214.117 li
353.602 213.992 353.405 213.919 353.405 213.604 cv
353.405 213.127 353.969 213.061 354.167 213.061 cv
354.981 213.061 355.069 213.465 355.076 213.707 cv
355.7 213.707 li
cp
f
274.516 89.5288 mo
270.257 89.5288 li
270.257 95.3198 li
274.653 95.3198 li
274.653 94.2954 li
271.443 94.2954 li
271.443 92.7954 li
274.266 92.7954 li
274.266 91.771 li
271.443 91.771 li
271.443 90.5532 li
274.516 90.5532 li
274.516 89.5288 li
cp
f
277.927 93.1338 mo
279.339 91.0288 li
278.008 91.0288 li
277.298 92.2788 li
276.573 91.0288 li
275.202 91.0288 li
276.605 93.1338 li
275.145 95.3198 li
276.508 95.3198 li
277.25 94.0293 li
277.992 95.3198 li
279.387 95.3198 li
277.927 93.1338 li
cp
f
281.089 93.271 mo
281.089 92.5854 281.275 91.8921 282.049 91.8921 cv
282.767 91.8921 283.008 92.5288 283.008 93.2065 cv
283.008 93.7148 282.807 94.5054 282.082 94.5054 cv
281.364 94.5054 281.089 93.9082 281.089 93.271 cv
cp
281.089 91.0288 mo
280.008 91.0288 li
280.008 96.9893 li
281.137 96.9893 li
281.137 94.7715 li
281.154 94.7715 li
281.291 95.0054 281.573 95.4326 282.364 95.4326 cv
283.638 95.4326 284.17 94.3032 284.17 93.126 cv
284.17 91.6421 283.332 90.916 282.388 90.916 cv
281.629 90.916 281.315 91.311 281.105 91.6499 cv
281.089 91.6499 li
281.089 91.0288 li
cp
f
287.485 94.0615 mo
287.396 94.3682 287.074 94.5293 286.759 94.5293 cv
285.848 94.5293 285.784 93.8032 285.751 93.481 cv
288.695 93.481 li
288.695 93.2793 li
288.695 91.3193 287.526 90.916 286.678 90.916 cv
284.799 90.916 284.622 92.5693 284.622 93.0854 cv
284.622 94.8521 285.549 95.4326 286.759 95.4326 cv
287.494 95.4326 288.348 95.0938 288.647 94.0615 cv
287.485 94.0615 li
cp
285.784 92.7466 mo
285.848 92.1821 286.13 91.8433 286.663 91.8433 cv
287.026 91.8433 287.469 92.0532 287.534 92.7466 cv
285.784 92.7466 li
cp
f
289.437 95.3198 mo
290.566 95.3198 li
290.566 93.0854 li
290.566 92.6099 290.727 92.061 291.607 92.061 cv
291.711 92.061 291.833 92.061 291.929 92.0776 cv
291.929 90.9321 li
291.857 90.9238 291.784 90.916 291.711 90.916 cv
291.026 90.916 290.768 91.3354 290.534 91.771 cv
290.518 91.771 li
290.518 91.0288 li
289.437 91.0288 li
289.437 95.3198 li
cp
f
292.615 91.0288 mo
292.615 95.3198 li
293.744 95.3198 li
293.744 91.0288 li
292.615 91.0288 li
cp
293.744 89.4722 mo
292.615 89.4722 li
292.615 90.521 li
293.744 90.521 li
293.744 89.4722 li
cp
f
300.962 92.3516 mo
300.962 91.4077 300.309 90.916 299.47 90.916 cv
298.785 90.916 298.47 91.3921 298.325 91.6016 cv
298.035 91.1416 297.752 90.916 297.131 90.916 cv
296.374 90.916 296.059 91.3755 295.914 91.6577 cv
295.897 91.6577 li
295.897 91.0288 li
294.817 91.0288 li
294.817 95.3198 li
295.946 95.3198 li
295.946 92.7065 li
295.946 92.2388 296.116 91.8677 296.648 91.8677 cv
297.325 91.8677 297.325 92.376 297.325 92.7388 cv
297.325 95.3198 li
298.455 95.3198 li
298.455 92.7466 li
298.455 92.2388 298.656 91.8677 299.22 91.8677 cv
299.551 91.8677 299.833 92.0776 299.833 92.7144 cv
299.833 95.3198 li
300.962 95.3198 li
300.962 92.3516 li
cp
f
304.52 94.0615 mo
304.431 94.3682 304.108 94.5293 303.793 94.5293 cv
302.882 94.5293 302.818 93.8032 302.786 93.481 cv
305.729 93.481 li
305.729 93.2793 li
305.729 91.3193 304.56 90.916 303.713 90.916 cv
301.833 90.916 301.657 92.5693 301.657 93.0854 cv
301.657 94.8521 302.583 95.4326 303.793 95.4326 cv
304.528 95.4326 305.382 95.0938 305.681 94.0615 cv
304.52 94.0615 li
cp
302.818 92.7466 mo
302.882 92.1821 303.165 91.8433 303.697 91.8433 cv
304.06 91.8433 304.503 92.0532 304.568 92.7466 cv
302.818 92.7466 li
cp
f
310.359 92.3516 mo
310.359 91.4077 309.706 90.916 308.867 90.916 cv
308.052 90.916 307.73 91.3999 307.577 91.6577 cv
307.56 91.6577 li
307.56 91.0288 li
306.479 91.0288 li
306.479 95.3198 li
307.609 95.3198 li
307.609 92.8599 li
307.609 92.2065 307.996 91.8677 308.496 91.8677 cv
309.213 91.8677 309.23 92.3999 309.23 92.7144 cv
309.23 95.3198 li
310.359 95.3198 li
310.359 92.3516 li
cp
f
312.673 89.8677 mo
311.544 89.8677 li
311.544 91.0288 li
310.963 91.0288 li
310.963 91.8354 li
311.544 91.8354 li
311.544 94.4404 li
311.544 94.9971 311.722 95.3682 312.698 95.3682 cv
312.843 95.3682 li
313.021 95.3682 313.198 95.3599 313.375 95.3521 cv
313.375 94.4971 li
313.294 94.5054 313.214 94.5132 313.141 94.5132 cv
312.682 94.5132 312.673 94.4165 312.673 94.1665 cv
312.673 91.8354 li
313.375 91.8354 li
313.375 91.0288 li
312.673 91.0288 li
312.673 89.8677 li
cp
f
317.57 92.1582 mo
317.57 91.1016 316.464 90.916 315.86 90.916 cv
314.981 90.916 314.069 91.1016 313.94 92.416 cv
315.029 92.416 li
315.061 92.166 315.158 91.8193 315.722 91.8193 cv
316.013 91.8193 316.464 91.8433 316.464 92.3193 cv
316.464 92.5615 316.247 92.6338 316.07 92.6582 cv
315.053 92.8115 li
314.335 92.916 313.803 93.3438 313.803 94.1826 cv
313.803 95.0698 314.464 95.4326 315.11 95.4326 cv
315.875 95.4326 316.239 95.0776 316.497 94.8115 cv
316.521 95.0537 316.538 95.1182 316.602 95.3198 cv
317.82 95.3198 li
317.82 95.1504 li
317.682 95.1021 317.57 94.9888 317.57 94.481 cv
317.57 92.1582 li
cp
316.464 93.7793 mo
316.464 94.3032 315.957 94.626 315.457 94.626 cv
315.239 94.626 314.932 94.5054 314.932 94.1099 cv
314.932 93.6421 315.279 93.5371 315.699 93.4648 cv
316.167 93.3921 316.352 93.3193 316.464 93.231 cv
316.464 93.7793 li
cp
f
319.739 89.5288 mo
318.61 89.5288 li
318.61 95.3198 li
319.739 95.3198 li
319.739 89.5288 li
cp
f
326.595 92.3354 mo
326.506 91.1255 325.506 90.916 324.667 90.916 cv
323.329 90.916 322.933 91.7227 322.933 92.3511 cv
322.933 93.9565 325.595 93.4155 325.595 94.1338 cv
325.595 94.2954 325.458 94.5776 324.876 94.5776 cv
324.167 94.5776 323.941 94.3115 323.941 93.9482 cv
322.78 93.9482 li
322.812 95.0938 323.869 95.4326 324.844 95.4326 cv
325.514 95.4326 326.724 95.2065 326.724 93.9565 cv
326.724 92.3755 324.038 92.8672 324.038 92.1899 cv
324.038 92.0044 324.119 91.771 324.732 91.771 cv
325.344 91.771 325.442 92.061 325.49 92.3354 cv
326.595 92.3354 li
cp
f
330.095 93.7549 mo
330.095 93.9565 329.902 94.5054 329.329 94.5054 cv
328.474 94.5054 328.458 93.5776 328.458 93.1099 cv
328.458 92.5776 328.643 91.8677 329.353 91.8677 cv
329.877 91.8354 330.055 92.2788 330.103 92.5615 cv
331.249 92.5615 li
331.144 91.2222 330.031 90.916 329.353 90.916 cv
327.902 90.916 327.296 91.9082 327.296 93.2954 cv
327.296 94.1987 327.667 95.4326 329.281 95.4326 cv
330.853 95.4326 331.201 94.1987 331.241 93.7549 cv
330.095 93.7549 li
cp
f
332.063 91.0288 mo
332.063 95.3198 li
333.193 95.3198 li
333.193 91.0288 li
332.063 91.0288 li
cp
333.193 89.4722 mo
332.063 89.4722 li
332.063 90.521 li
333.193 90.521 li
333.193 89.4722 li
cp
f
336.797 94.0615 mo
336.709 94.3682 336.386 94.5293 336.072 94.5293 cv
335.161 94.5293 335.096 93.8032 335.064 93.481 cv
338.007 93.481 li
338.007 93.2793 li
338.007 91.3193 336.838 90.916 335.991 90.916 cv
334.112 90.916 333.934 92.5693 333.934 93.0854 cv
333.934 94.8521 334.862 95.4326 336.072 95.4326 cv
336.806 95.4326 337.661 95.0938 337.959 94.0615 cv
336.797 94.0615 li
cp
335.096 92.7466 mo
335.161 92.1821 335.443 91.8433 335.975 91.8433 cv
336.338 91.8433 336.782 92.0532 336.846 92.7466 cv
335.096 92.7466 li
cp
f
342.637 92.3516 mo
342.637 91.4077 341.984 90.916 341.145 90.916 cv
340.331 90.916 340.008 91.3999 339.855 91.6577 cv
339.838 91.6577 li
339.838 91.0288 li
338.757 91.0288 li
338.757 95.3198 li
339.887 95.3198 li
339.887 92.8599 li
339.887 92.2065 340.274 91.8677 340.774 91.8677 cv
341.492 91.8677 341.508 92.3999 341.508 92.7144 cv
341.508 95.3198 li
342.637 95.3198 li
342.637 92.3516 li
cp
f
346.235 93.7549 mo
346.235 93.9565 346.041 94.5054 345.468 94.5054 cv
344.614 94.5054 344.597 93.5776 344.597 93.1099 cv
344.597 92.5776 344.783 91.8677 345.493 91.8677 cv
346.017 91.8354 346.194 92.2788 346.243 92.5615 cv
347.388 92.5615 li
347.283 91.2222 346.17 90.916 345.493 90.916 cv
344.041 90.916 343.436 91.9082 343.436 93.2954 cv
343.436 94.1987 343.807 95.4326 345.419 95.4326 cv
346.993 95.4326 347.339 94.1987 347.379 93.7549 cv
346.235 93.7549 li
cp
f
350.695 94.0615 mo
350.606 94.3682 350.284 94.5293 349.969 94.5293 cv
349.057 94.5293 348.993 93.8032 348.96 93.481 cv
351.905 93.481 li
351.905 93.2793 li
351.905 91.3193 350.735 90.916 349.888 90.916 cv
348.009 90.916 347.832 92.5693 347.832 93.0854 cv
347.832 94.8521 348.759 95.4326 349.969 95.4326 cv
350.703 95.4326 351.558 95.0938 351.856 94.0615 cv
350.695 94.0615 li
cp
348.993 92.7466 mo
349.057 92.1821 349.339 91.8433 349.872 91.8433 cv
350.235 91.8433 350.678 92.0532 350.743 92.7466 cv
348.993 92.7466 li
cp
f
11.2324 91.4243 mo
11.168 90.5693 10.4663 89.3755 8.73242 89.3755 cv
7.24023 89.3755 6.0708 90.4077 6.0708 92.4321 cv
6.0708 94.4326 7.17578 95.4731 8.71631 95.4731 cv
10.168 95.4731 10.9907 94.5938 11.2324 93.3354 cv
10.0229 93.3354 li
9.87744 94.0454 9.40967 94.4243 8.74023 94.4243 cv
7.71631 94.4243 7.30469 93.4888 7.30469 92.4482 cv
7.30469 90.811 8.15967 90.4238 8.74023 90.4238 cv
9.74072 90.4238 9.92627 91.0771 10.0229 91.4243 cv
11.2324 91.4243 li
cp
f
16.2012 93.1743 mo
16.2012 91.6255 15.1606 90.916 14.0073 90.916 cv
12.854 90.916 11.8135 91.6255 11.8135 93.1743 cv
11.8135 94.7231 12.854 95.4326 14.0073 95.4326 cv
15.1606 95.4326 16.2012 94.7231 16.2012 93.1743 cv
cp
15.0396 93.1743 mo
15.0396 93.7227 14.8784 94.481 14.0073 94.481 cv
13.1362 94.481 12.9746 93.7227 12.9746 93.1743 cv
12.9746 92.626 13.1362 91.8677 14.0073 91.8677 cv
14.8784 91.8677 15.0396 92.626 15.0396 93.1743 cv
cp
f
23.1294 92.3516 mo
23.1294 91.4077 22.4761 90.916 21.6372 90.916 cv
20.9517 90.916 20.6372 91.3921 20.4917 91.6016 cv
20.2017 91.1416 19.9194 90.916 19.2983 90.916 cv
18.54 90.916 18.2256 91.3755 18.0801 91.6577 cv
18.064 91.6577 li
18.064 91.0288 li
16.9834 91.0288 li
16.9834 95.3198 li
18.1128 95.3198 li
18.1128 92.7065 li
18.1128 92.2388 18.2817 91.8677 18.8145 91.8677 cv
19.4917 91.8677 19.4917 92.376 19.4917 92.7388 cv
19.4917 95.3198 li
20.6211 95.3198 li
20.6211 92.7466 li
20.6211 92.2388 20.8228 91.8677 21.3872 91.8677 cv
21.7178 91.8677 22 92.0776 22 92.7144 cv
22 95.3198 li
23.1294 95.3198 li
23.1294 92.3516 li
cp
f
25.2183 93.271 mo
25.2183 92.5854 25.4038 91.8921 26.1782 91.8921 cv
26.896 91.8921 27.1377 92.5288 27.1377 93.2065 cv
27.1377 93.7148 26.936 94.5054 26.2104 94.5054 cv
25.4927 94.5054 25.2183 93.9082 25.2183 93.271 cv
cp
25.2183 91.0288 mo
24.1377 91.0288 li
24.1377 96.9893 li
25.2666 96.9893 li
25.2666 94.7715 li
25.2827 94.7715 li
25.4199 95.0054 25.7021 95.4326 26.4927 95.4326 cv
27.7671 95.4326 28.2993 94.3032 28.2993 93.126 cv
28.2993 91.6421 27.4604 90.916 26.5166 90.916 cv
25.7588 90.916 25.4443 91.311 25.2344 91.6499 cv
25.2183 91.6499 li
25.2183 91.0288 li
cp
f
32.9614 91.0288 mo
31.832 91.0288 li
31.832 93.5049 li
31.832 94.271 31.332 94.481 30.9609 94.481 cv
30.6143 94.481 30.2271 94.3521 30.2271 93.6904 cv
30.2271 91.0288 li
29.0977 91.0288 li
29.0977 93.8521 li
29.0977 94.9487 29.7109 95.4326 30.5576 95.4326 cv
31.1543 95.4326 31.606 95.1743 31.8643 94.7148 cv
31.8804 94.7148 li
31.8804 95.3198 li
32.9614 95.3198 li
32.9614 91.0288 li
cp
f
35.2842 89.8677 mo
34.1548 89.8677 li
34.1548 91.0288 li
33.5742 91.0288 li
33.5742 91.8354 li
34.1548 91.8354 li
34.1548 94.4404 li
34.1548 94.9971 34.3325 95.3682 35.3081 95.3682 cv
35.4536 95.3682 li
35.6309 95.3682 35.8081 95.3599 35.9858 95.3521 cv
35.9858 94.4971 li
35.9053 94.5054 35.8247 94.5132 35.752 94.5132 cv
35.292 94.5132 35.2842 94.4165 35.2842 94.1665 cv
35.2842 91.8354 li
35.9858 91.8354 li
35.9858 91.0288 li
35.2842 91.0288 li
35.2842 89.8677 li
cp
f
40.1797 92.1582 mo
40.1797 91.1016 39.0747 90.916 38.4697 90.916 cv
37.5908 90.916 36.6792 91.1016 36.5503 92.416 cv
37.6392 92.416 li
37.6714 92.166 37.7681 91.8193 38.333 91.8193 cv
38.623 91.8193 39.0747 91.8433 39.0747 92.3193 cv
39.0747 92.5615 38.8569 92.6338 38.6797 92.6582 cv
37.6636 92.8115 li
36.9458 92.916 36.4131 93.3438 36.4131 94.1826 cv
36.4131 95.0698 37.0747 95.4326 37.7197 95.4326 cv
38.4858 95.4326 38.8491 95.0776 39.1069 94.8115 cv
39.1313 95.0537 39.1475 95.1182 39.2119 95.3198 cv
40.4297 95.3198 li
40.4297 95.1504 li
40.293 95.1021 40.1797 94.9888 40.1797 94.481 cv
40.1797 92.1582 li
cp
39.0747 93.7793 mo
39.0747 94.3032 38.5669 94.626 38.0669 94.626 cv
37.8491 94.626 37.5425 94.5054 37.5425 94.1099 cv
37.5425 93.6421 37.8892 93.5371 38.3086 93.4648 cv
38.7764 93.3921 38.9619 93.3193 39.0747 93.231 cv
39.0747 93.7793 li
cp
f
42.4541 89.8677 mo
41.3252 89.8677 li
41.3252 91.0288 li
40.7446 91.0288 li
40.7446 91.8354 li
41.3252 91.8354 li
41.3252 94.4404 li
41.3252 94.9971 41.5024 95.3682 42.4785 95.3682 cv
42.6235 95.3682 li
42.8013 95.3682 42.9785 95.3599 43.1563 95.3521 cv
43.1563 94.4971 li
43.0752 94.5054 42.9946 94.5132 42.9224 94.5132 cv
42.4624 94.5132 42.4541 94.4165 42.4541 94.1665 cv
42.4541 91.8354 li
43.1563 91.8354 li
43.1563 91.0288 li
42.4541 91.0288 li
42.4541 89.8677 li
cp
f
43.9063 91.0288 mo
43.9063 95.3198 li
45.0352 95.3198 li
45.0352 91.0288 li
43.9063 91.0288 li
cp
45.0352 89.4722 mo
43.9063 89.4722 li
43.9063 90.521 li
45.0352 90.521 li
45.0352 89.4722 li
cp
f
50.2539 93.1743 mo
50.2539 91.6255 49.2134 90.916 48.0601 90.916 cv
46.9067 90.916 45.8662 91.6255 45.8662 93.1743 cv
45.8662 94.7231 46.9067 95.4326 48.0601 95.4326 cv
49.2134 95.4326 50.2539 94.7231 50.2539 93.1743 cv
cp
49.0923 93.1743 mo
49.0923 93.7227 48.9312 94.481 48.0601 94.481 cv
47.189 94.481 47.0273 93.7227 47.0273 93.1743 cv
47.0273 92.626 47.189 91.8677 48.0601 91.8677 cv
48.9312 91.8677 49.0923 92.626 49.0923 93.1743 cv
cp
f
54.9238 92.3516 mo
54.9238 91.4077 54.2705 90.916 53.4316 90.916 cv
52.6167 90.916 52.2944 91.3999 52.1411 91.6577 cv
52.125 91.6577 li
52.125 91.0288 li
51.0439 91.0288 li
51.0439 95.3198 li
52.1733 95.3198 li
52.1733 92.8599 li
52.1733 92.2065 52.5605 91.8677 53.0605 91.8677 cv
53.7783 91.8677 53.7944 92.3999 53.7944 92.7144 cv
53.7944 95.3198 li
54.9238 95.3198 li
54.9238 92.3516 li
cp
f
59.4482 92.1582 mo
59.4482 91.1016 58.3433 90.916 57.7383 90.916 cv
56.8594 90.916 55.9478 91.1016 55.8188 92.416 cv
56.9077 92.416 li
56.9399 92.166 57.0366 91.8193 57.6016 91.8193 cv
57.8916 91.8193 58.3433 91.8433 58.3433 92.3193 cv
58.3433 92.5615 58.1255 92.6338 57.9482 92.6582 cv
56.9321 92.8115 li
56.2144 92.916 55.6816 93.3438 55.6816 94.1826 cv
55.6816 95.0698 56.3433 95.4326 56.9883 95.4326 cv
57.7544 95.4326 58.1177 95.0776 58.3755 94.8115 cv
58.3999 95.0537 58.416 95.1182 58.4805 95.3198 cv
59.6982 95.3198 li
59.6982 95.1504 li
59.5615 95.1021 59.4482 94.9888 59.4482 94.481 cv
59.4482 92.1582 li
cp
58.3433 93.7793 mo
58.3433 94.3032 57.8354 94.626 57.3354 94.626 cv
57.1177 94.626 56.811 94.5054 56.811 94.1099 cv
56.811 93.6421 57.1577 93.5371 57.5771 93.4648 cv
58.0449 93.3921 58.2305 93.3193 58.3433 93.231 cv
58.3433 93.7793 li
cp
f
61.6182 89.5288 mo
60.4888 89.5288 li
60.4888 95.3198 li
61.6182 95.3198 li
61.6182 89.5288 li
cp
f
68.4736 92.3354 mo
68.3853 91.1255 67.3848 90.916 66.5459 90.916 cv
65.207 90.916 64.812 91.7227 64.812 92.3511 cv
64.812 93.9565 67.4736 93.4155 67.4736 94.1338 cv
67.4736 94.2954 67.3364 94.5776 66.7559 94.5776 cv
66.0459 94.5776 65.8203 94.3115 65.8203 93.9482 cv
64.6587 93.9482 li
64.6909 95.0938 65.7476 95.4326 66.7236 95.4326 cv
67.3931 95.4326 68.6025 95.2065 68.6025 93.9565 cv
68.6025 92.3755 65.917 92.8672 65.917 92.1899 cv
65.917 92.0044 65.9976 91.771 66.6104 91.771 cv
67.2236 91.771 67.3203 92.061 67.3687 92.3354 cv
68.4736 92.3354 li
cp
f
71.9741 93.7549 mo
71.9741 93.9565 71.7808 94.5054 71.208 94.5054 cv
70.353 94.5054 70.3369 93.5776 70.3369 93.1099 cv
70.3369 92.5776 70.5225 91.8677 71.2319 91.8677 cv
71.7563 91.8354 71.9341 92.2788 71.9824 92.5615 cv
73.1274 92.5615 li
73.0225 91.2222 71.9097 90.916 71.2319 90.916 cv
69.7803 90.916 69.1753 91.9082 69.1753 93.2954 cv
69.1753 94.1987 69.5464 95.4326 71.1597 95.4326 cv
72.7324 95.4326 73.0791 94.1987 73.1196 93.7549 cv
71.9741 93.7549 li
cp
f
73.9419 91.0288 mo
73.9419 95.3198 li
75.0713 95.3198 li
75.0713 91.0288 li
73.9419 91.0288 li
cp
75.0713 89.4722 mo
73.9419 89.4722 li
73.9419 90.521 li
75.0713 90.521 li
75.0713 89.4722 li
cp
f
78.6768 94.0615 mo
78.5879 94.3682 78.2651 94.5293 77.9507 94.5293 cv
77.0396 94.5293 76.9746 93.8032 76.9424 93.481 cv
79.8862 93.481 li
79.8862 93.2793 li
79.8862 91.3193 78.7168 90.916 77.8701 90.916 cv
75.9907 90.916 75.8135 92.5693 75.8135 93.0854 cv
75.8135 94.8521 76.7407 95.4326 77.9507 95.4326 cv
78.6846 95.4326 79.5396 95.0938 79.8379 94.0615 cv
78.6768 94.0615 li
cp
76.9746 92.7466 mo
77.0396 92.1821 77.3218 91.8433 77.854 91.8433 cv
78.2168 91.8433 78.6606 92.0532 78.7251 92.7466 cv
76.9746 92.7466 li
cp
f
84.5161 92.3516 mo
84.5161 91.4077 83.8628 90.916 83.0239 90.916 cv
82.2095 90.916 81.8867 91.3999 81.7334 91.6577 cv
81.7173 91.6577 li
81.7173 91.0288 li
80.6367 91.0288 li
80.6367 95.3198 li
81.7656 95.3198 li
81.7656 92.8599 li
81.7656 92.2065 82.1528 91.8677 82.6528 91.8677 cv
83.3706 91.8677 83.3867 92.3999 83.3867 92.7144 cv
83.3867 95.3198 li
84.5161 95.3198 li
84.5161 92.3516 li
cp
f
88.1133 93.7549 mo
88.1133 93.9565 87.9199 94.5054 87.3472 94.5054 cv
86.4922 94.5054 86.4761 93.5776 86.4761 93.1099 cv
86.4761 92.5776 86.6616 91.8677 87.3711 91.8677 cv
87.8955 91.8354 88.0728 92.2788 88.1216 92.5615 cv
89.2666 92.5615 li
89.1616 91.2222 88.0488 90.916 87.3711 90.916 cv
85.9194 90.916 85.3145 91.9082 85.3145 93.2954 cv
85.3145 94.1987 85.6855 95.4326 87.2988 95.4326 cv
88.8716 95.4326 89.2183 94.1987 89.2588 93.7549 cv
88.1133 93.7549 li
cp
f
92.5737 94.0615 mo
92.4849 94.3682 92.1621 94.5293 91.8477 94.5293 cv
90.936 94.5293 90.8716 93.8032 90.8394 93.481 cv
93.7832 93.481 li
93.7832 93.2793 li
93.7832 91.3193 92.6138 90.916 91.7671 90.916 cv
89.8877 90.916 89.7104 92.5693 89.7104 93.0854 cv
89.7104 94.8521 90.6377 95.4326 91.8477 95.4326 cv
92.5815 95.4326 93.4365 95.0938 93.7349 94.0615 cv
92.5737 94.0615 li
cp
90.8716 92.7466 mo
90.936 92.1821 91.2188 91.8433 91.751 91.8433 cv
92.1138 91.8433 92.5576 92.0532 92.6221 92.7466 cv
90.8716 92.7466 li
cp
f
gsave
0 308.689 mo
360.016 308.689 li
360.016 0 li
0 0 li
0 308.689 li
cp
clp
131.981 1.46631 mo
224.369 1.46631 li
224.369 34.4614 li
131.981 34.4614 li
131.981 1.46631 li
cp
0 0 0 0 cmyk
f
131.981 1.46631 mo
224.369 1.46631 li
224.369 34.4614 li
131.981 34.4614 li
131.981 1.46631 li
cp
.746 .676 .668 .898 cmyk
@
grestore
142.853 15.6323 mo
142.853 18.9614 li
142.853 20.105 142.12 20.4058 141.467 20.4058 cv
140.83 20.4058 140.133 20.0903 140.133 18.9468 cv
140.133 15.6323 li
139.422 15.6323 li
139.422 19.1445 li
139.422 20.127 140.03 21.0361 141.445 21.0361 cv
142.89 21.0361 143.564 20.127 143.564 19.0493 cv
143.564 15.6323 li
142.853 15.6323 li
cp
f
147.736 18.2866 mo
147.736 17.1938 146.989 16.9521 146.395 16.9521 cv
145.735 16.9521 145.375 17.3994 145.236 17.6045 cv
145.222 17.6045 li
145.222 17.062 li
144.613 17.062 li
144.613 20.897 li
145.258 20.897 li
145.258 18.8071 li
145.258 17.7661 145.903 17.5313 146.27 17.5313 cv
146.901 17.5313 147.091 17.8687 147.091 18.5356 cv
147.091 20.897 li
147.736 20.897 li
147.736 18.2866 li
cp
f
151.872 15.6323 mo
151.227 15.6323 li
151.227 17.5532 li
151.212 17.6045 li
151.058 17.3848 150.765 16.9521 150.068 16.9521 cv
149.049 16.9521 148.47 17.7881 148.47 18.8657 cv
148.47 19.7822 148.851 21.0068 150.156 21.0068 cv
150.53 21.0068 150.97 20.8896 151.249 20.3691 cv
151.263 20.3691 li
151.263 20.897 li
151.872 20.897 li
151.872 15.6323 li
cp
149.137 18.9683 mo
149.137 18.4771 149.188 17.5313 150.186 17.5313 cv
151.117 17.5313 151.219 18.5356 151.219 19.1592 cv
151.219 20.1782 150.582 20.4497 150.171 20.4497 cv
149.467 20.4497 149.137 19.8115 149.137 18.9683 cv
cp
f
155.377 19.6943 mo
155.355 19.9805 154.996 20.4497 154.387 20.4497 cv
153.646 20.4497 153.272 19.9878 153.272 19.1885 cv
156.073 19.1885 li
156.073 17.832 155.531 16.9521 154.423 16.9521 cv
153.155 16.9521 152.583 17.8979 152.583 19.0859 cv
152.583 20.1929 153.221 21.0068 154.299 21.0068 cv
154.915 21.0068 155.164 20.8604 155.34 20.7427 cv
155.824 20.4204 156 19.8774 156.022 19.6943 cv
155.377 19.6943 li
cp
153.272 18.6753 mo
153.272 18.0815 153.742 17.5313 154.335 17.5313 cv
155.12 17.5313 155.37 18.0815 155.406 18.6753 cv
153.272 18.6753 li
cp
f
157.577 18.668 mo
157.577 18.1108 157.958 17.6411 158.559 17.6411 cv
158.801 17.6411 li
158.801 16.9741 li
158.75 16.9595 158.713 16.9521 158.632 16.9521 cv
158.148 16.9521 157.811 17.2529 157.555 17.7002 cv
157.54 17.7002 li
157.54 17.062 li
156.931 17.062 li
156.931 20.897 li
157.577 20.897 li
157.577 18.668 li
cp
f
162.086 18.1548 mo
162.086 17.9639 161.991 16.9521 160.62 16.9521 cv
159.864 16.9521 159.167 17.3335 159.167 18.1768 cv
159.167 18.7046 159.52 18.9761 160.055 19.1079 cv
160.803 19.291 li
161.353 19.4302 161.565 19.5332 161.565 19.8413 cv
161.565 20.2661 161.147 20.4497 160.686 20.4497 cv
159.776 20.4497 159.688 19.9658 159.666 19.665 cv
159.043 19.665 li
159.065 20.127 159.175 21.0068 160.693 21.0068 cv
161.558 21.0068 162.21 20.5303 162.21 19.7383 cv
162.21 19.2178 161.932 18.9243 161.133 18.7266 cv
160.487 18.5649 li
159.989 18.4404 159.791 18.3672 159.791 18.0518 cv
159.791 17.5752 160.355 17.5093 160.553 17.5093 cv
161.367 17.5093 161.455 17.9126 161.462 18.1548 cv
162.086 18.1548 li
cp
f
164.359 17.5972 mo
164.359 17.062 li
163.743 17.062 li
163.743 15.9917 li
163.098 15.9917 li
163.098 17.062 li
162.577 17.062 li
162.577 17.5972 li
163.098 17.5972 li
163.098 20.127 li
163.098 20.5889 163.237 20.9482 163.875 20.9482 cv
163.941 20.9482 164.124 20.9189 164.359 20.897 cv
164.359 20.3911 li
164.131 20.3911 li
164 20.3911 163.743 20.3911 163.743 20.0903 cv
163.743 17.5972 li
164.359 17.5972 li
cp
f
165.562 18.228 mo
165.605 17.9346 165.708 17.4873 166.441 17.4873 cv
167.05 17.4873 167.343 17.7075 167.343 18.1108 cv
167.343 18.4917 167.16 18.5503 167.006 18.5649 cv
165.943 18.6973 li
164.872 18.8291 164.777 19.5771 164.777 19.8999 cv
164.777 20.5596 165.275 21.0068 165.979 21.0068 cv
166.727 21.0068 167.116 20.6548 167.365 20.3838 cv
167.387 20.6768 167.475 20.9702 168.047 20.9702 cv
168.194 20.9702 168.289 20.9263 168.399 20.897 cv
168.399 20.4277 li
168.326 20.4424 168.245 20.457 168.187 20.457 cv
168.054 20.457 167.974 20.3911 167.974 20.2295 cv
167.974 18.0225 li
167.974 17.04 166.859 16.9521 166.551 16.9521 cv
165.605 16.9521 164.997 17.3115 164.967 18.228 cv
165.562 18.228 li
cp
167.329 19.5698 mo
167.329 20.083 166.742 20.4717 166.141 20.4717 cv
165.657 20.4717 165.444 20.2222 165.444 19.8042 cv
165.444 19.3203 165.95 19.2251 166.265 19.1812 cv
167.064 19.0786 167.226 19.02 167.329 18.939 cv
167.329 19.5698 li
cp
f
172.19 18.2866 mo
172.19 17.1938 171.442 16.9521 170.848 16.9521 cv
170.188 16.9521 169.829 17.3994 169.689 17.6045 cv
169.675 17.6045 li
169.675 17.062 li
169.066 17.062 li
169.066 20.897 li
169.711 20.897 li
169.711 18.8071 li
169.711 17.7661 170.357 17.5313 170.723 17.5313 cv
171.354 17.5313 171.544 17.8687 171.544 18.5356 cv
171.544 20.897 li
172.19 20.897 li
172.19 18.2866 li
cp
f
176.325 15.6323 mo
175.68 15.6323 li
175.68 17.5532 li
175.666 17.6045 li
175.511 17.3848 175.218 16.9521 174.521 16.9521 cv
173.502 16.9521 172.923 17.7881 172.923 18.8657 cv
172.923 19.7822 173.304 21.0068 174.609 21.0068 cv
174.983 21.0068 175.423 20.8896 175.702 20.3691 cv
175.717 20.3691 li
175.717 20.897 li
176.325 20.897 li
176.325 15.6323 li
cp
173.59 18.9683 mo
173.59 18.4771 173.642 17.5313 174.639 17.5313 cv
175.57 17.5313 175.672 18.5356 175.672 19.1592 cv
175.672 20.1782 175.035 20.4497 174.624 20.4497 cv
173.92 20.4497 173.59 19.8115 173.59 18.9683 cv
cp
f
180.666 17.5972 mo
180.666 17.062 li
180.05 17.062 li
180.05 15.9917 li
179.405 15.9917 li
179.405 17.062 li
178.884 17.062 li
178.884 17.5972 li
179.405 17.5972 li
179.405 20.127 li
179.405 20.5889 179.544 20.9482 180.182 20.9482 cv
180.248 20.9482 180.431 20.9189 180.666 20.897 cv
180.666 20.3911 li
180.438 20.3911 li
180.307 20.3911 180.05 20.3911 180.05 20.0903 cv
180.05 17.5972 li
180.666 17.5972 li
cp
f
184.42 18.2866 mo
184.42 17.1938 183.672 16.9521 183.078 16.9521 cv
182.462 16.9521 182.14 17.3335 181.957 17.5752 cv
181.942 17.5752 li
181.942 15.6323 li
181.296 15.6323 li
181.296 20.897 li
181.942 20.897 li
181.942 18.8071 li
181.942 17.8394 182.484 17.5313 183.012 17.5313 cv
183.628 17.5313 183.775 17.8687 183.775 18.3892 cv
183.775 20.897 li
184.42 20.897 li
184.42 18.2866 li
cp
f
187.984 19.6943 mo
187.961 19.9805 187.602 20.4497 186.994 20.4497 cv
186.253 20.4497 185.879 19.9878 185.879 19.1885 cv
188.68 19.1885 li
188.68 17.832 188.137 16.9521 187.03 16.9521 cv
185.762 16.9521 185.19 17.8979 185.19 19.0859 cv
185.19 20.1929 185.828 21.0068 186.906 21.0068 cv
187.521 21.0068 187.771 20.8604 187.947 20.7427 cv
188.431 20.4204 188.607 19.8774 188.628 19.6943 cv
187.984 19.6943 li
cp
185.879 18.6753 mo
185.879 18.0815 186.349 17.5313 186.942 17.5313 cv
187.727 17.5313 187.976 18.0815 188.013 18.6753 cv
185.879 18.6753 li
cp
f
192.053 19.1592 mo
192.053 18.5356 192.156 17.5313 193.086 17.5313 cv
194.084 17.5313 194.135 18.4771 194.135 18.9683 cv
194.135 19.8115 193.805 20.4497 193.101 20.4497 cv
192.691 20.4497 192.053 20.1782 192.053 19.1592 cv
cp
191.437 22.4146 mo
192.083 22.4146 li
192.083 20.4937 li
192.097 20.4937 li
192.266 20.7651 192.603 21.0068 193.116 21.0068 cv
194.421 21.0068 194.802 19.7822 194.802 18.8657 cv
194.802 17.7881 194.223 16.9521 193.205 16.9521 cv
192.507 16.9521 192.214 17.3848 192.06 17.6045 cv
192.045 17.6045 li
192.045 17.062 li
191.437 17.062 li
191.437 22.4146 li
cp
f
196.298 18.668 mo
196.298 18.1108 196.679 17.6411 197.281 17.6411 cv
197.523 17.6411 li
197.523 16.9741 li
197.471 16.9595 197.435 16.9521 197.354 16.9521 cv
196.871 16.9521 196.533 17.2529 196.276 17.7002 cv
196.262 17.7002 li
196.262 17.062 li
195.653 17.062 li
195.653 20.897 li
196.298 20.897 li
196.298 18.668 li
cp
f
197.787 18.9761 mo
197.787 19.9658 198.344 20.9995 199.569 20.9995 cv
200.793 20.9995 201.35 19.9658 201.35 18.9761 cv
201.35 17.9858 200.793 16.9521 199.569 16.9521 cv
198.344 16.9521 197.787 17.9858 197.787 18.9761 cv
cp
198.454 18.9761 mo
198.454 18.4624 198.645 17.5093 199.569 17.5093 cv
200.493 17.5093 200.683 18.4624 200.683 18.9761 cv
200.683 19.4893 200.493 20.4424 199.569 20.4424 cv
198.645 20.4424 198.454 19.4893 198.454 18.9761 cv
cp
f
202.641 20.897 mo
202.641 20.4204 li
202.656 20.4204 li
202.788 20.6328 203.059 21.0068 203.711 21.0068 cv
205.016 21.0068 205.398 19.7822 205.398 18.8657 cv
205.398 17.7881 204.819 16.9521 203.799 16.9521 cv
203.352 16.9595 202.971 17.1426 202.692 17.5459 cv
202.677 17.5459 li
202.677 15.6323 li
202.032 15.6323 li
202.032 20.897 li
202.641 20.897 li
cp
204.731 18.9683 mo
204.731 19.8115 204.401 20.4497 203.697 20.4497 cv
203.286 20.4497 202.648 20.1782 202.648 19.1592 cv
202.648 18.5356 202.75 17.5313 203.682 17.5313 cv
204.679 17.5313 204.731 18.4771 204.731 18.9683 cv
cp
f
206.82 15.6323 mo
206.175 15.6323 li
206.175 20.897 li
206.82 20.897 li
206.82 15.6323 li
cp
f
210.398 19.6943 mo
210.376 19.9805 210.017 20.4497 209.409 20.4497 cv
208.668 20.4497 208.294 19.9878 208.294 19.1885 cv
211.095 19.1885 li
211.095 17.832 210.552 16.9521 209.445 16.9521 cv
208.176 16.9521 207.605 17.8979 207.605 19.0859 cv
207.605 20.1929 208.243 21.0068 209.321 21.0068 cv
209.936 21.0068 210.186 20.8604 210.362 20.7427 cv
210.845 20.4204 211.022 19.8774 211.043 19.6943 cv
210.398 19.6943 li
cp
208.294 18.6753 mo
208.294 18.0815 208.763 17.5313 209.357 17.5313 cv
210.142 17.5313 210.391 18.0815 210.427 18.6753 cv
208.294 18.6753 li
cp
f
211.865 20.897 mo
212.51 20.897 li
212.51 18.8071 li
212.51 17.7661 213.156 17.5313 213.522 17.5313 cv
213.999 17.5313 214.124 17.9199 214.124 18.2427 cv
214.124 20.897 li
214.768 20.897 li
214.768 18.5581 li
214.768 18.0444 215.127 17.5313 215.67 17.5313 cv
216.22 17.5313 216.381 17.8906 216.381 18.4185 cv
216.381 20.897 li
217.027 20.897 li
217.027 18.2427 li
217.027 17.1646 216.25 16.9521 215.839 16.9521 cv
215.245 16.9521 214.989 17.2163 214.666 17.5752 cv
214.556 17.3701 214.335 16.9521 213.647 16.9521 cv
212.958 16.9521 212.627 17.3994 212.488 17.6045 cv
212.473 17.6045 li
212.473 17.062 li
211.865 17.062 li
211.865 20.897 li
cp
f
gsave
0 308.689 mo
360.016 308.689 li
360.016 0 li
0 0 li
0 308.689 li
cp
clp
178.175 35.1948 mo
178.175 45.8267 li
.746 .676 .668 .898 cmyk
@
178.175 51.106 mo
180.155 45.8267 li
176.195 45.8267 li
178.175 51.106 li
cp
f
0 lc
0 lj
178.175 51.106 mo
180.155 45.8267 li
176.195 45.8267 li
178.175 51.106 li
cp
@
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (004x001.eps)%%CreationDate: 26/05/15 4:38 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6kB\mDdkJ9Z^c?p^Ch$u=*1Vl23G2j;2RbDK_"0\[rqMM%<=1=#e(lihhOWJ<n$rWi[9>&F.]K5,P0&+K[oI4N54\+@Y/Y&+%MCXE"f1\9/RqaLBghiS5HepLqacL$]R'B@Y8#6g91_fS>Otd@Q]iJrNJ%t<Orb8iIXnR-qG-g#lXi:`u='G-hap35jM;QjQc1ZYH%q.?K"'hd]_oTsTn=YI7rhj$B?,pNFe<aP@3NFqSQp\V)L?&bnn%:Ji4=*`=`FeNR/3s"fXWm0F)r=i78YO-b5a$"ZT^>SGromS"U%"(<Au,R[+d#9na*9)i+C33RfgHMq`Xhe9Kj;RFP`]CT=mI\G@>oUd9WERRt0Zci2hVci990o8k$cfbX7r5l_&P,OSSP[^9jZ4Y\?%-t0EAERND;C=N9i)W.YuC@s3Q:p/QfB`&D+ZE.c'6pA_VoA=/nHdum'&U#XSCdOkkG-0UhNB-HoS!=N<"&o=$,R#eNh2ck(NHr/3%$[lBA>H@ub"G`8WlWlh?B],[bDdBfT0pX>EB#ZE.#Q!,:'o2f(K+KLbX.%M1bWe\4:^bdh.Q>c%S>*h\kr(^DX]6mcU?H+rGIibP%+$rn_>N>nHT<X(LD>$1['_T#oYI>q>Lo1SM]H0Ye**nX1/jBr;[42VR0Ng^7U(ITIc6Hq7'eB4i!_\\oTHX,L4TBUIGY:C'<#%S+%"$UQ@4pqMu<E8gpWpitfiMii?Vr]\H:#7W6-tO7bb:oTR@6c9Z.$n)-[LHea)p6ekYRCA_;RR%2i#@&1WBpVX'ajGBT`@jq"Xm;%%_p`YZ0];>=)4m2<j;ih,_3a(I=sQo&:%hg\$jN>#$Mjmt:^[';H:jbpO5L\o5`ah:qTUEShM"/0-iAQ;_'d`#kX90?*l05r)u]mQ%q?1XJC6J:a'_DbsThN!*0K)+F3MA1$,,#WsOuGtY$2+LGJfADE0P=n68s"O!$Mk"":_O^4dVJE4N#;JH;U@Wd_LsE"?0EAX_Ct*n%)1VE,QidITTbR,05052c/g5<_m6cej#68hb5A\OLIY?u_MU7@1L%LmC&""$C8@t[02I<0^qZg]*GDn>OGORNT20fQ-K23map`''"%BL:R0:FH=YM^96R1YEq9,:sJpAj":^KlJ&>:,mss!g=!MVM+@?4$n)</tj4lc:3K[NSk;C=R2c+nih=orXmA2A.ic,@np])C+/+l%KR^P>PBUJ--EUOY(nEYT'CKI[chS+.jugR-SW>P$1*6b:Lf"fAk1!eK1436:UgEVh/5,a[r$>NDVZ.?a4Q1e35HnG_O8gO+@S'iQ%&H8$o1JRG0s!@[rMu:"7f!\$Ij`9Dgs%E@QoAhk19E)nn`?Km&^Z8b$7"4aBjIbN2,PiD"%R/"EP2GUBq2>*IBE_*`(R7n/C_h-s%s)1=&)b^#j.2R,+(]5m%-*:Ft=emY<?Y&:#Srg^_#/(:e_)E7Lcnc(4b]>OlL6]^78?G>&,dd_MO`(<.-m:2uNLV3BKg0;/MX3F3%%=Ma5SAh,*^JMCq"4WUBF?>8:3-s1'Dt3k$/:$!$fmZ'dbWYVgU&hXIBKj`A:^7nWg'6ICs1rrlrrQJJ755%>!nB\0\S.3u:$&++%lUQFZ"DTYG&!\a1JP!nOrZY/-gR-%.0-*#<k5?T9a8(RNG;(]HrUoZK7;.SR6QT!8G\1Y,3s00A8!QUKre4Na:`k,kLeVQc=MRk2%*O>n+$)[e_&UG*#,+M^M0I#:=@!jfi^VTAkA`.ET=d8LD$$kFVW!)4qD$.0k)kJN+_%1dCoE"ogU8L#DqJFY=D?J?\OOj>[F:X<=%iDfR(OO50fTP"V^:^/ABb*_dXN*A\BO=0[iMb?H1![i<OL40Vr/9_uY%^I:!E7gP'Iq/;oHAk^i80[\naX*3H`)Y/:0;2L`k5ZfK%#$;GM"L84'"f[\_h..dVD2LdC)qAA[EJ5%,D@WFdk_,NM+%-1g08paqO,au,3?#EGjG,rGpeh!f3db7uF[A/6&*0:OAJ'coInd"3%GeK>VR`!g7k7jDE%.5pO;p,hH(cq<(C_98^LdeCr5pX7_3#I<hcs+a=Qj*GL[:8&mU+>%RKHoSLU)gad,3'U?J(NFGk:/L?B@MPR%U)K?QS>G>8N?h[5PuFB#KPHB=jeeti:kG%Q:GnlI8^4=N:_HtudgKa[iHIEWnT&2/2.!&rAY:GkRDE'^eB-Sq]Z3,FbXF"jr>Yo+%"c6Dja%!*t.l'iE\-Du@#-im5b`]+/V\<r+YuW.-W,H*#S^'A)>`8%.A&:0d/c<%5qUEtBO\s/^=r+f75me1*.-V-BoVN($K!Yn3%a^<hI*H5Um_/CN-AZWoa<`BQB9-pSeMmA'pZ'u4`U6ujhR'+@GKoEE37boU2EaFcVH2r$1TbL,s&+j'<m@,16!Xs&ViL;U-Ab\uV%^H'Ah,0)\bQghHMnSee/^_6`"AIVSb+uBO.+YPq'`Y<3E!ilW2!r\"'Dm8\@li;,)X%_fV:JBq1QWMq(\0Ces@iL;B?&nr]^#G=k%^PSRD4qB)<oGWqsbtXiFH\:VjU@mGm-qV.pFM)=)%O]GF<eJ8;f=^-8BjC(^%?7+"r,eO/f=6!7]Jlq;@2aDV)s>!t0O5;aifVM@%gPNp:VYVP$YJkui?dYd)aHo<O#KrgMLUB!91Ub@b_PqcJ'k\3bFLJs(-N4sh#2gkJk\rZpee[Tkp3J"XL;\=g]I.qr8FgWcnUO"^%YD;p=?JfE5k+L%/`1V8#[l'(;pEOFO7/Ol?bL*NOS^S0$l%Ee0j$rmE3[<b;LX]O?ZT/.;3&iqT2Q$W@-h.H+C]W3>@YqUMb+>"I%p74<cp#"^(%c53kWQ=6GNn7g"^6U`3,r8ml-^#I;QHHinW3"*RgWhp44p/Jf\B@=-1=P69gVNmY[eVkKI$a&QW1:.5#Q2i7@fhTm%@&H_.rKmb!erS/Qfa*a"#5o;mZOu=pA`dJ^[][iYUA`C7@n+5$N,PCsAGhf7&ANqE(Wi2gfB[BdX%<8VKRO^]b&kJ!\*/9&fZLLC%jaoJGKVEo6Gs";+lRRnGXD%&mdHB$.,!>,<bKS`47Vc7kR_\qpXG>%B_u;#)NV@;iP2)5J=@.j90_7<(kM\rQSP/g+!'+e0D'$A7%1ai8S*CH+6"gcD-"7c.,H"S0j]gD:MUW'/Z_7^3\@lbZXHUXgT0t'+)>:9[CENjbF-5OW@;oW4rT)6*nk9\l1#/G4d&[Hu`2Q`%\%E@?6UfOn-=bs_OLdhgN[<=DAnPT;nQ/-(^eE*l3]rPj-s1c9!bq/*Fp9Q)XG^caN24s)<loY12UZeo;25[jn1`)Y3sic@onf;/ip%DXksKgiW.I=\s%_A+MC.b"eH@pQ8V]&iUqZRHdb2l[G2&'<mS/Kk9tKg+b5-Pf(>kgOq%Cr)\%45'`dEk'X:XR6eC%neikO9B4)u%f9RF`aG8tn-`5#IP)g1'M_+-Y`mBi5c/4!Af!u#Rk"AggfNt2%H!EAtQO-I0?P_NBreB&-X;*ITEfLZ#]c)l55:Fd)*mq9'RMuZF%YK'2D#5ZSd)U,tl>QVsU9Q'+:s#H!-9ne^Oq(F;E`3F=Z\UM8rZa-71fH-#KpfVLgNc#N6N6f7q#=uKj`fH?KO`[ieh0e8&`gQ]?%\.6[g4sRE+I[ikQPfk/,K9UAWJ]?&/gcdH/]PZ[GU(\'Yi@$qK;l1/nJ_=4XN3gRb.abNJH&mXrV.\pW\-6IR5-k@+*YZkSE0ng]%Z,B,9Rb=d^4""MlVgSZnC/cpVK^i#4A<qTne![oY?AD3+PO/&S@,YX.V'msV#H?'Ik7H='0Ha$,D1,Qoom@7qB(,o!kklAaGBub'%"l>DM47P8QWS-9L3uC"o=gIE_Q-7DN;**uYDP5(@O2,M!KN_EE`Lrp>Z30-l2D!`>YG1a<WE\RTOnaqFb+gr?]B?5/"H'I]n)LlL%_KQcR_>f;p(=jMELlkMdK'/S+T%-Ns++1bT^JD3NI@IB=-joQ](`^2^J[T8dMY%LAKhgK7og)!.ciM^r=Bpi4C4'V"GZYljjZkuO%^D(l3j0IH>iM5DN.TNWga\%l%.[K:jHUj%6eW_'R/fW+"(bCuB,I%5Iq!5#4YW#*KM:YC)d!S=,M*cc:;C,`S<2[I9+Ccn):K<fA%`cR>Y/89KaPu%o:-.H.A3(:uR3=+_JajDmjZ$\+%k'2<A*lLef!$\Sa0Y`/%1f5bY>>iNeI+W26k1!JlAQTtsG9Badl<22%Qf]h2%:<I?[k7nIO(>(_Gid.5#(9Gmp'b'hXmnAm/J[[IRh-=qP8(ZZ9G+#JI]&n:*4"MSpa\o/D>O9G?6Mh_q5k`jm]@1Z0g&<,?SF?6p%7D8`U+WCaXn!E&m.c"dSk.]J&IU^!\2Lj,LSSn>6Ze'MA`tia(p00\/fr\4NZ1uGqT6do;MD%j-s*!qekgqVU7OJpS;7Tiof&Pg7%H5Z`nIttdEXM;6Vhu%Tu/[bSX2qo@H=pIr>e`&NQDJ+4EVp.i7dZ%bH;tFGX0D)&lBZ06!YR$NF]=e[u(k)W)nMCeT5^4!:Th>>@%So<1a[@U;Uq<:A=^kUHb;2&k[h0?[2g\Zq:[bFNS>5'8>Fpc5c.0&aLitT8T3b]0-%CSY4G[&=5qu=6.;!HmRd)1?Sm=e0=g%ac3%3hMD3?NWL<SX.@';&JWfn$dJHdJN)(,X>*Th0u-QXC(n]ldrnhC'/4`2d/)WLfh9/Ctmhff]XElpoJT&\Bb(d)4/!T.b%ge"r;@J%b"B27[E0*7\DI7t=ms>8#Hd]L>51U827E:1ZsVq(fmcW5ZcA@"H9<4k?8TAXW%562'L.FGFSkhLqK<oi>KICbC^7Qd^\o,MfLK<J%+OGVtZ4oN\5<MO-)?Sffa'cs`D(V&"C2Y[>c_>U1?]6/n'$"p(-Vl8;3b!Jq`T^SX-t`O!lGWr_#u7P+e%F-8X(rC^*hqpf\de94%(DpedA;NDmN!7c0?PJGKnc/bAVms#X#%GteZKsLg:AEA<!];I`^[Z5FO(Zf)Q);_c^g@&-6G;&'+J)!03K4A<60686G.W+lrna^)%P1eTb_rGpBNpC&BXjQ8CO'VCi@.G-6qqZ(^!\<cf6@;;[o7-a@V>3alf^\;LlA"VEs6gGGRa#ue("+Ni#2f*&V1rY<3<Jbr#lI]e%2C`W>aFNOR)j'iE*/FPg.]i.qe^$^keucDp)36$K"d*Zh2Vro[J7oic)W^5!<dPS.PTXQ;b6&]o95]^IS_iX=6P3UoDtRG`;"`B@%M@)<ns1?1aq_0uPpeeED<I]Aop@l>0H`g_llo6=.1u$QaH>PX4>4#Ahha\fD]oP9V\k!6jE<h6kmB(q<.cl.es287AP?]enYl'tJ%5sup-qqc]"ci7JjYh*\js$'rkE(;P7^YNWFB.3d1qrC6BZekKP*:Ea'P*IaQgLgHQ^P(J^p4Ga&T15s_3P8RNP`]KDrg.bc,!X_\%^PDN=k.q#?3qTnbD_e[U:1jO@X#L(OlciYGO5-YNqKnj1M%B&[4I^8us#n%6m(gBSefrT8s)M%"4aSt2jG!@2Ajo(p<(ap\*XdrA%.]pH84ZM96$$OZ.Z5e)J-[<0HITU<4r)Q#Hn^DXd_Wi`Xa"Ns+lb.W=YBp,Prni1;<,;+VDiJA(s0oU\379#&X]KO&Q87Y`Ge2"'%.lM^EB'&KV9)$NXpg,W*mD$%Zh&;8KEBd?QdkZ_s3Gg]YrUY@,Z@,KX+)LQ.BtMuIf'lV+]OY33&N<Eg(LG%6nTbqFkeM0X;WR*X%b4,np3&oo!X[X$7+_1I\;0gO(;srGY+05N;[)%ldipYspM0_,;@:RabX5<5/fW<-;I96K.Z\5%X(>NbN)unB)m0XV40bdcc"6M0F%H=s-[BC$UC08ZcQ.TM7H<(N#VW"t^`B9T*a-1d-Xd<*P?_A*k%OgP7qKl31TgNOnpV!'fM8h;Ir1_46!Y]5rA>j*be;6;ZhQV8&f%&!?7Qmf:efPua[SM7=$3,8Hkq;$EC(W<-2c6XDJ!'Q4_`4[KmMm>g[b&5A\Sf8X*hk`q'TV-aa_$P2=^Y6gB+f;dC$>AeP06h']]%E`'$K>EgY#/jX#JAKrs)5R9eRYm`GBaC63[BP;Ap'94ZJ_`bMlOao/qHBX5%Y[#"95,bg/6M)e1W[$A/&mMM<labS:F(f";'2RjX%(3"TebA<KA7cOPVO-^<Opkg[q6f5'lrJuD8k4dni@,6a1G3N=#f2Xu8_iF-o,n&>:@4E03(%a+8*hj18VKL(jjH+u+p#)u_^KBju%U9&"SjABki^N+\_he&'t7b=RC`2)U2\.Pl%)kD5]%:Sl.`k1mSoM3a"dX#oDFPL&^r4+sP?=D,H'i*ILf&;6[99o\c:.1aZl1OAu%Q+p-'kaf1TPDb:9EOOnu8dCXL284R0=SsQf*ffNn`p\,A+49a<kdgKaN+E4rll5ZYa$R;P)$jpOjL=%BmDmO-U5f2hXUFODYu<Ku%$DrM$dR"9XMtV)(fkApr]mdHh`Vehk'u09PNUF[\W8@CkK!j4(AYY+IVL2l/2Q1a:)%ZS/Au"PJY$S$^pQYNWoY+G?K;$nre8!9N%+L`05rV"tUWe7)89;OiCj<Khd/#WJW;S].QnZQ!*qM"3'K@FN)LS;rZ<2p5#qV=cEf;YF";>"j,>GHp4p4'U(*)KifEXaj985H"#%Y2^(=7.`HCX9$kPm;B%4)]\Kpp:/p#jY?'iQ;?kQJ(efYm(c\k9nir8N5\(soY/H(5c";H=>=aADB2FdH?I$#)dX/>U$5[g+Imdc%NQrJ@3+(X`=P$(mY&XciTdcqeM)Ar6$%"5sgMa=T,S&>s&\^Ot0,E9?"1<CLAEQ(Qg@<5&]o/)aX;ID:U9#i-UckTlM-KpJW41Y'%NXN#b;6/EQA^G6"cCj6U_7*gYRrP<?DfAB]GZj*;U=+Hd$,,hkhl$WP$)/RI0LSnu/"Oms856$b+#u5Q7/VcQb4M^aQIfUf/CS<6%g&+hW`2X(6Rg`U"2#Ksg5/+cepls"rqg4&c\KVjYo%@f3df">:EnMd[-pf>B$R:@(YBdDH-0hrnK)Xb\Uq;s:CV7K:n+8B;qF?6p%?31JI2*bcP:%9mb7#I]V>fh>nTBZ<gKlI,-WAQcnpU1a%nEW.b`k1\@k.dGq\67boW3B[Y+,gpfaitncqgKiRbMbAR!Ti%+g@(+)%]l9LqSSC5STKj$M=AQR/=mlP.!qRG2d0<L66]+mUm1>G$%]4J^'KqQ,C\;mj.>3D9+LCXik^QYp?Fm^km=d!"A<c@]kIY2;+io<2%rV#NtGKn%O&3\b3FBnr+`:3Ks9j53YW<Hc5`G22e::UWfUTu!T9d,fDi?b]Yokl:E1a58^4=t@EN\2MJ"&:o>b&LNLXr/fc#q@F-%r9:XSA"d?56hq3J.RO"FWa(t]<58J4Ek@j5Jj>BJ@$R(4C\;#oUG^9H")cbZ%C=6F'Q%9N@;rLO6n9Ss2M,N*N`=`kJI#gm"u8FE%JZ&HIl%TKjPj8Z<?A/]_T-!BG22eI2(NdocA`)qJ1,*?UeU(a"oeL2W#0I+/+_Tt,V!sJcXMs)rNYf=K@!BNM)d_]ZD+X^T4$k?A%*4fj=(D`BGW2oV0ejo'4IkZ(!Zja(WDfhXCLT[b44.41RF?\I8s,!Np0e4FCm5OmdBKDD4.G"$:%M6^X4kM5I`$El;YZ8%gN'>`k%s(di1NJG7n)\15./R_@*C^/K9eiQ2q@FF57C7TB`FIu817'Qu%Bsl[n&>@'s=K&"H'=<IsJG27d./\D$J2_$Fmo@63=V%%F52KQ^%>36bT;(n0;8Ip8SeKI@dXQ5s%k?(SiXt7R^F<8RdD>^m"4KWhblW$\\;K*anh\&CBTZCdC5J)p/@/T8`nlPbq=m8DR=jOY=)m5PI%l9ab-,/2O.e6kJ"'@TJd/kE*+muZI/p6pY#o:gPTKd1.TT%f/F63%GbFeAoNV!W$8N>I%X1pla&+]sRGK$0b4\D/C&Qin/7&-JF)%V$[cs0$o^P\JUJ>:aJGq(KV.\g)XK%)30e.A.OYp4KI)>(q"7hq<E.9dDD#hYRS<69:Ckp[U/+dU>V%WiY%r;j";!)3i#mIn>m''%Z$8a#3s>h',H3DJ&UP;:!aLCD?n?M!f\<b)@NADue@N;l^RE>Mf5Fe@]6oiLhYQT>n4h<]cW4'/_3sm(5?Ljn0)PJ(]=mgD4+"\=%.DAH!S'FrDH/m]T9Vg1oNPnG4iB3E"/8p!>-W8"ZFs?n<5`]7/1Pt5NeVcilkdHj\OcC,)]5b<9S(A=-e="ldH:J7Oig7)ro"(g_%/_)WENUQc;Q.L'2]MYLDIk'j"e-iNl\%B3@Q:lF^pU:\"hPR]mIZl4in$VIZp[MQ>hO![`b8\!OWk=QP>I5,fDR?PiMNQ2,]36D,%rOeJ!Yu[sEE]%n=]s7W=8u,g/H6Uo7C*ljWHipsG'"b$;c_[^dEUL2-3_oSCRV^!,:pNGYA)g</ABhT1a5e1fnZ[eq.&$o`^J&PX%5dU>iH-e>3U%Q%1\W`ED7*T7hekRcqr8,-$+i$iOWm0E9`G4"N\)!r]nH]\KTnc0uhHdkIAsCgloU:_1Gp5*AFCc/3UTpVm=oD%m%l39-Bg3rh^?Ni8iGVdVq.uI]/B_6Z&N?$I"?-Q.,^AJpUT:,."bdBN]NHTeY1NSImF6AUo;)0ajZVjr[=q>;rR%:S7hJN9^[C\r.%I$m4jCG_@Dc'1;jacj`l\R/^?S_<^F@&",,LY>T:H*=f?<Fm6j9d*7Q+RmU7Rah3BkXDU:0WM0pS$^SlKa#eiC7"'X'/tf%l`J)E%"fYbm4a!C"h_<BS"rgirdB@:,=l2]@="]O9)`=tj(CRb#=OPYL)HA&W^")59J"rq(ZZc4kR.b=&\$1-*q_]9bU1X)Ee3^m`j4@?L%eN9aH9?4c+cBLQ;\asb$`33%;r:Et.NIjq!p=5O)I^P1C6&ep@Sb26UJ"o)'DP=dXhK^$9HE>kn9lJFnhQ8>TKP'OPgNY!'Q6*f`%Y"%m3V*f;mL.7L6)VqO)Z)#C&W*-IemH``KI3kO`A(LRXQ(N[I/P8N+:U[/ue-]o5mq6e?:\XY>\'^,A"Z<O3KDL9O"Z6([,$hjW%Al("lI6H5b+$\PY(4@.8?>+`i2L=n=7^Xmf'O%3TmRYq7STXs%&(T`@H$atW^X:@+9OOXI00:t<D"iATH6V0]*>JGk4k_I#4J+c"%q)8(ko!RXp'XpDurH"mgaoRJc>1-?Q\`2N1nXn,$M/B6+NP=b]+IsM)f5C.g3>'X%h3CrSI.-qjC)sM%,ds=G8uU.f+5A9M@U(G^%^6gR\d5NrE&Xq5J@:]a(W[qs=m^dak.(q78k+L,oJ>IPeo+OdBbPNrZW7d05<u(G_o,G'armnBQV[6nt;l%h=S\4,dK^!CCC,5mM%AoOND0;;M$>@Dq3oKA0dYO0UPUsUdi@)^ZprgE1fa03!MF`+U+i,3WH1k4Vh"jKZr^34Sj2WN]nKNJ3=Ioc0JdFGR^LV,G1qWfF^%DtV82iUJPmh5gA7p*tR[H$XZ]IpWFDr<2$DfC(0=r(-Jrk6'R1@kbZ&8CFDclDEaD@EC/2n(sDmIG4Of\W%m;T:;a*X,hg-/S42E%2>HEKj`uDAoh`l"bpi8Ye\JX)QWmZdnC+k1pGK^`Qt")%a\;AE2rJOgGCFc7W^iYp0DsIo]!%D=CObPHH"PV(oPOW&`@0m?r49D^%]M+rq2p&OF,5CD4EHQmu*MD&#o%BN@I/?_>['L_Ho]o]&TD:XH'`7kZDa"E>NOjJFV?]<@=1$6,^o,`6gVmST`T@j*H]LgN:J86n%[sHu]I:[1`%]3>\U!0?6"5_UQV:*?rlgsE$Rcir+j]QM[4tU<r]i)Cfq7<nso6ZL/G%kiP\\ikl\*g_$`2@9`-Hll+.n^'8@29mk%Hu^Q/c,q\caOEoJcb[i7OBC2Fn'K;QcR!sL!*2jjMrt9=\3[.?Sc`o$:'QQ0U$Yk*o1X(GB9\+0dhQU,jJ6H42J6#$nbmA]fg/Om%6(5)L<bh_1,B&&t-_oo9C@Q`.Bl>oafQ^%4h)82`l->/Z=c87lY:C]-!KA#(ZWE^[K4t")ZX@\>!ujZUk`6_9W)S41^@5p&apT'1%WaB,,d@/^dFtk@$C)uIjKLTbKo<Z*WhX"nR>d4+*LVTBDF5IM0d@I/8dF;H0UPQQ%MI3..)om")Vm!+U^bBtW%VYM&.Cc93jdtV?%qsM2X\O0c"0R*<aDfe.)nS8ib`Gi/=$\8H#*_Bb7i/_-S`jBWik4(AkqT.>>gt09X99O>A^Yc/ejc%lbkL/aSW*oa"lCX=0W4p?J%5!S1qKnpEZgt0M`GI.USs71(E.i1U>Mf#JXq2<qGltVu=Cj$S0QZT6gj&Lo6S"8&T7u/6Q"e55Rg`MKmVS2Rt6u&c#JsKCpitE!V%/1'ONqP[+-^^`2:J7F5C[a?6e>`geCo^^\]H84Z3S@`DL1urf='JDd'4(<D@pU;!^=/Y9F4A=mdQPak$cgM1iS`)U"]Kedoje[Ag%RD^2_OuL9TqQfkn:l6PJ;D5cmLind,b/0IOa!3L65U@bgo(8D9i'd;e3IFZQ[5NjjH$]fOJ4,(iiK'\mGCaA0_ae[sl/,BHs1n0<%$629tM+8LN(r*M76\c;4<X%@!?tJn,r_IfAAPnhCD8idW'6DaMj%hYjA'l`d>bh0N--%V7Lfd:KhVK?<=DlZQii7dfI>#pfaZ[#r%\>)oIh!9h#7.mgQ\;PLmZ183oh/g[]DZD][;OVu0g9F3;+P5JP\><)&g\t*-@sPdo]CSRi1E*$1:#3Cp4:3GmN6BM_4Q(W/J4afA%9!@NXR<^ji"3b)gX^&=_mLW%qDZq+#+`qLef@2oLn$X&e9^.RBR9S;a`dn/$JQ=1-Ud2e-5MO@#N-?7:`W764)U"_PS2a3Lb1q$H%1hcG1AO!03&]IW/Xtk(q)`j.gEr&C'_oDlH$XITd?jrhK(J>!a"3Q?351"9>+SHpr<8\O&NtrE[4#qAD&hl\$l0nE,[CPn[oBR[]%AFt7RWqW^&"(#*NO=UnP8Soj%`l4*lb/^-P^T:b76P/H93k!Ho^;udhk_C''n+[*HmLE'(fBpD#$r^^*WOCj<dpB?p,HT&tD[98>%Xo/6a:<k:H!@Wf0$\D?^9BQ^hV"(eS4?idq@hJ/#]>h#hma.*d6Z]L\,Ihgk4UEnM()\U6BMFDk>ip_'YmDnl$_P@r7^4+ch.RLL%kt[4IU.-)S@NF&i"LC0DEU@[jQ&o[u7e)L_8!s^U#O&Gjm:RX.`5Z.6qcbjTPKNgjcWl-[1@b1dQ\Esp+6m[a#DZ0Uj+g>[WT<M[%jsQtMB$W3TJNB4r'`P8omVo!V";,;NTb;d2(Q:n@(5O93d_tNWNeRi0/p<#.]k:re*+1WgFs1u+i*d?a(\=+8P!r(dj?D`a.Smae%N"F9(htDT\9;)q1DZaON_#Wka-Q"/.+Xdj4&%Y]Y4dLHInJG[u*/r>4Yk``Y"n:#;%Z.Lt4;P("p-qmZhYt(Jql#8XUD)IUj=X6E%f=lL>2TV6bZNgki2\Gm&9+DuY@UC`Nold(M1C!%'FN0*Gs&5I,Ym(?d2g,di=?[oMa:+H"?,UcA\2n8PA_eQEmhKj"8X_0@'G)ER%>WX`U/7G0+AGM[J)kY38MXPu&ruN"#E<Tp+]!a:af8/SHLKt?Z6g)?qiJfF7s4;+R<O](M)W8CZ,<km"`pAf&anl0@Fc<iVpHC,:%hg*<&A&X08Alu.\UC,@qhVYdFl51,3,H(ZFUquFjDuZ"!A"kc=p`N0_EO[NI^g61IH&4eue[&dG2V\_H\7LaF<4B$SL#F"+`!d9(%3Uds(Z+?5.lrkqX;(EXq9U&'*F3_mu"0^f*X$[3&aU=(#KdqVTX/%qj!c[OYVM'6bL?ZbLAJ&c!6Pmned<o)!XBH0ZDa:K;/EN;i%N@T2VKM<dc`1,$Hr-Nj=iE_$Tce;fG**"o!GUl`N.!hZRA.Y18M\I4-Fmi(<itc>#U2iB!KhirHmZ'$fnW?)O>)3D&;U5Ir'tb;=%h]LPB"]jbl*t7co,-=g03^J)>m;Ed0(=tgnTrXn"j'Do%F`heIj#aGtb*:,+COC]/r)6sS3(s<,".$Jb2-TH!25&?C?d#\t[QCKY%6\O.l))<h^]t)mu8Mlk`!fnh#RRXpK)Jsjt$0'B12-QsFUN)cT7`2"i%ZQHP:UilP7B^@p[9$U/aEgZD^Z_cZA:5cE4^aj!1gWZf%(57F<6[pbCDY.DM&CHGL+>s]`pB'^6H`g`g4H^<YcO@I+J![QnjSU9.1IbENLrW,Kf85?tHA:&-9^pbO`(B"VopBf7pUJ#KH+#Si%UD0@:QX_[<'M#2OF:3c"QCscu\=UMcof1U*0&DAdn:nO8hTE\:=ap7g_Q4pGhm1iP,1oMtjM[cs_og36mhUJ:Aph'He+)lu<Gl"X%aCA)KiD%h$FY"EM,*+s`qtC3h%ZOXC3Oq##HGXN-1b4=HM<NiP=YX1-`;VpLib&Xiq>P'YnF7l"$jUSlM-Pa<_jA3)@XsHD#nY*&%cl0&>7bid<[pf(+*q*!Rl%TV'8BLp>5a7sH5M:5+OeYSDm7<g$)4*VQ^5XDo6e+)k=<nJ#5.O'+RIQL3TNu:5ILW%7FZ(..%$1$i%U`si4^Mpa.''rLHA6&mC;]ug5njns$-%B.r%Gj/bA`oL$YM`C\R.6.Y??c^toQJtUA]%SfU9*09<O&>\[ru^M"XYj4bXh9bTX=gp%=M@2noLW&6F6's[c*o<cLkLrN=VDlsj!t^HDU166UR(Am_NB8:0A$(lXL-8Za<<#`3V=7Fk=STmka^W(c(MtP"ABto/j+b=QCL\[%h*@a<$p(+7-dSIoc_,o,_.huW&QoLaTVF<$M0%mt1[&M\i5@Wt^5Y/kFFMnpj5eR@B@*oi4!r4G$dYL+\Sm\nd"Q,ZJKC:M%\6Zi%\bAJgY?-aU6T8]$`9kW*65#LhFLk9i2M2e.Cr(B^cq=(F(Dfsm.#%&\MG_tZ;T;\H(V8i[35jl`8M#2dhk>-!npV[<gt&gF$=hN+%'4Mm8hG1!`)kMen[cCn"T7(;jDi<SR@!IYAdd[7cYG]96If$@^o9Y8\YdQ;bs+L'3_.5KKj=5uL_bnR&<^t(P3^mabj=1S;^n`tk%`UK*Pb[\O.[cH7G4`]$_cc"<2W1-)i[t4_eNP1J2#[ucAkZ^?#E^fFtAg^>so@XF1?F&<6><r=3'%<CC6<-d0=uO=^++Z,^>=!pV%81_X5W"bVm'ld!tEUP)rPm>oWhNXX@Hlc!0=3@:6Hi8`k:%d=-aWcTe-(.eGNkAMMiINdIqE]1L7')KXlj/.u(,f\=H1T5EGet`i%mAh\4_iU)SK&!M;H!m3pYX#+%N'+i3@2<R14MJ;or0LPfcmh"4D'id(I"^N.>UY$G#,/CUjB+iCBH"/]IY:u0[2jGoe&NJf4FUQW%_$orf8#U7V*2A25l&A`sYS<KZ]\KQ^:t`(07eBIHnEL]9(7lj6,/o9WKeS0hT'VmCmG3YHX4(rop.SFmQK9GYe2O,+qqCi7CcUZ(%MBPuIbm_GI<I'nhj4-r6Kmi!n;k*-%m(*;2IV7IrPJ+a]L8frZ$9T6h@lO=)'QKp=8<i`.N!pf%(FeX.-V3qS`@Yhd+c)_=;n/KG%AM?-!V8iA6anYZ/W'`r6g_C8(fuh'ecP/S;jB*/oUJ*Ir1OVB-&*)^okss^sEA"BRS2or&e(3gig@LI)Ys%<oPU-7SSk%f=r39pW%MAY4?38+K3P9Fuu3uo*pP<pY+3Z:m[-n,a)&p=b?AY>"sOU9::e##O2Tm<hM8@]s#RDF^'pO6L<-@j,<+u9%*7V(9m7R!3/:..RB%>KtA^M-WN*aQu]4#8*tFE=+.I4/^sLT;R@^I!A%+(*sE,ieS#E<nfjm1^FbXS268u*k'`*P4[NR(NE(SZcJ_#e?-p.jE?h"L?5+`%3QpDR'^F9"o'D%RcoLS'l*tr;7%CY-,82MKe-YAm=Cfphe]!BWL>?-$p;c)f8085"0(BFjL?I)]Hu<'L!-[1WY\c:3QkJAiocicE%"N!iq3\&F<%RPf@6^-iK)tcs[F]=-[!BPVu@Ea,/dEh+t-Qas[/SV6\E6ub'af*,Ki?IDe9UH@RjB8uJil97b$-7l@0dChbHoV.B%_.i)M%G-opaG4iL^@>,Z,36X15)3[CHoRa<q,:XhG!;GnKQ`YC2"@j]c"!5*ZQ@=peAWTF=re<_KZYXt'?N-3FZ\$CaC,rnWZSVR%=009oJAU4KM6XA6EBWPXh<'<%4$uQ1q!`U,P0!lS)$9!G,Fq71rYQp4"UDt8h=1oFf9/W0M*En/+<l^%Fl3\^I0.sG>c'7-BRM(^%:t`4a-JrsM&5MAI"1=oJ(5I.pKrLRH9X4h[6P?YuL_$L3=F;<bh,3,-)b.k;n6cX_7fnaYo@n=3YlEC/,9/G%8e8qG+SEr9U%ZSE%MmerZid['s(oG>C5$Bos,IK;uigWCu7Rh-(k05hm0Nps2c#b^=++L/MOUAKi,9mro`MSc[$M@)aOUAL@1K&jcJKCDtFYb_dG&:=]%D)l^-O]r5qI)PM44K]EI\*YH?E.1i(qPeFbj"f.a3.;?bP_o:IWGqhNRs$8d`-LHtWGo,`8556S2m=N9bZ))ka&'jZ^'e.M)=9ie%JnK^hG@b=W]K4qaO_;W[QAi%["-l;9W@MXXT^.hS<7s[u8WdJb,DLj&P(kVBi"WUJkGukUou[:+nC@tO_MN.MaD"h%")!%C\d)5o%!.C"lj3mpR8E^oK$SjY:5'NIIQ'^KHmC-''kI.#+Q^anLm;.9G:qk^?n*kJ^`VWPW41B!1mMGG^C8$a8*l'')(EI+HP"fj'QH#HM%fiTDCBBtD0i1&K&Zdhuu7+%Rl[T5OO'#W$^U\a.OE]qe[8p7fUaft*UP\XE!5Wm/+QhfPJ41J8%'%H,\BSP?gMCg[M^!CM;\`Yg7%9m2/iVO^p#`<7l8+5^O0ZC@?jCijrNm5l`6cBt1$0n(2H1[ONN_Xc!d__UT4Q^</\ZMXD,l^tSX%(ggf0&bK#E208iLE0eUjsBM%%93llNC@l=mQ&rN(k4(CQkGpeAmpC)e;N9Dj@<aeGL#tIgP*4=:*Z@5F-kkD,DprJs_p207(3\G%4SF9826]gSFM8d0B-S0PO!`9u%mR#DKllN4"E24\Qj?Ck;kani;Dj'_`IYk1sk"TlF#*Gu3%ln_p.\-XM8<1,#VAS:3&XS+fHLKUUQcSu&Kiumd_i2bD6SBAZ+(ha4%^.8^DCEO$3_<r+0h+S]<Osb94J\:@!LKm3b2nOqb&C\auo>AqeRP9"FSR4#*^munfB@HY[]\$M[e'"W[bGC,=o&N?pFM[:.e'+Zs%d[&A,VOJuK*BBV7Dt;l)aV/:8\XWek9BVW>Bk5]gjjNs=R)uYur8u8/WFs]UjjH/)Y>`WAUQ2#uQ]CIASR+4F?S3@[_b;SMc>RfE%e9\.JFT/>8e'=i^6RaA?1S&>C^[^nYfm'6-3knq2E)12<Cc]>2@O"o34I[t_$L`Z$FPa$Jj/5>NE1_);MFGU`Mb^NKZK_:-l,`/E%1pcHEEp<L?b*sZGcEDi9S<6CLkle:OX!L%l,NEFcq>&;jmt#!_B@H\<dLE`gFGt#s^C^f5UO14$3jH:JQS.")16<Ifdr0h>hT*m<%oBVM49`'sXl.d\@9E7F8;V`!OT,#sBHVoiA)DXt>)g4qeZs5.MZ)?I)0OYd>5O?*FJ+$k#pXM^H2dtouF]!52qTB97IB_b[WRq`*%/-\o"$+\4'SY.Yd9$HIZE`HDpoZk9'BS/*pLX9b6#N.W(/-Ms1XV@P("S*0Hs7B6XmMXE<]\i=6b1/Maj0AK6qi@J)_+(ut/m'Li%:[MQZmsQk.`nlanHHfaVfYp81gc=p<G0sUV1o6j\mRGs'4RP(NSl5^g0=i)Sm,iB6h=-m\!k'P:FNki4Q(]#MGo)Nr?ZR%V>e&(q%`0!'&lUjp`mE=-$&.]sq(<%IYh490ip>JqF7\/:)9q4`j\FXZm^",0*DS2bh:DRS`iXFHA^F^G#B;NH#FK:>o_Z\T!M(IkN<(*9J%8MJQ_M(k"8/pK10i6^!CNOFu#HZi0!^%7RF'?#Xl"s784'WN_4?K=YhTho;tG'&N.0?9N".[c?mhD+9aR(&ZDF)#\HeDpdKbD>fo%Dk\07T#>>J1s,/WS8)O#Km1uK^,P#F26BdXTdh/ac6p@^9#_1S2Ms82h_YqTF71k..E..>NsicK=/i%4)*R'?NINj:2u@:rR47!6%O+#;RLn)V<.Q\'bMAY:V6hKS!_BSNS)uL]UIBq);W/1rAG76c#PMV`9[7oVF!-4W8QkReiV[ouO/V^$*8iLuj@V@7/aGC>KFS+Bu%GWd'%o\=CEIX^B,2r)e]K#M[Y2r'NQMr6\b7M3Pr)t$2>HlOr7aQKG5ai/5WL:[b0ar=bA*I:XjYS`CF_]?;d-hsM,+dI>Z-N\1q%)n,&Z@Ue_!q"CS`HL107&iXGGpMFZ%[?!Q/>6)[UI4b"Al/A%k7oRK%8$ukShfFM;))?u)7BL3sknDO3".O)Gc>P)^jb<)!*'M&b%FYQ$%L9$6hb[d>oI?DJ;G,-B1h^G!V,O@G;R>dZSjP4.Q\eofXfLX1[:mEu.1I/4D8"2kW;5>s,DX"$#/&K\ROlhq<;:CoLP*fRe%JT_g<10T_(mH@,834Cs$2=rm]&Z86\kSON[a&g>U^<_h%'(11;?B4>Wi/3NSO%%B7]c6o`Wo.s$m\Y'],J,CC8ia&.9K$hj-^GaN%/1AP]?lMQX7gu%IGQna&221?;B`n]riR!7lp^r(fIZX*.]5_!OOph*Pr_7C@^40#8>/%N%BYQ/=khFB3amH]g/D$,?c']b14?0Pq%;N-$JV;WG5SVrK=o&4o$f6=-%W60N!gM5^+cBAbdj<Xu-iH9WW=674eV6[HBPket9cC*jp-ZSkF:=sk$:,namGLYP?G@p<I4H3gp%cgG5rHcpd>h8>Nc8PM:sKCe&J$g)h<fP@U8Z5cf$>7\u/e?i3=NH5hQjr`HRl4E_urA:0E@lC;,(LMgciEehhh3g'(o&@@HmVMS\%TM]LVQ!3Eho\@nDfluEEn%j-cUSZC=ffc?Vn20N[UFDSF9,h#03C:!eP%m:?:o!Zo[$lnL%T.&Mh(Nb(M0aTJH$:i"b;DJ\ZOem?%&l&Xh\8`,n<DU/,K8NO89h)Y3Ca2'MBcob%PPmjrro/`<X+F1uq!Mo2:2YoWg=.'i0=eh.1D%om[^F7:9+($3`1;uWk]AOi"'Y>u%Zj9m:U1U52fqTF=T3,+QP1PdY]u./D,4<lg1Q)g?#52bjNY9XsS8XIq:Fci"s![CSo$S$$V+%ZZ\S8pUY"FbE95\lPRQ/;\B<S9%%]a,"#6h8A$[I_I`5M`FMfa?aur=.+-;[>$@QaiYPG'n,%"65!nA#3lj=[/6lA3'8jU.?/kSHt"t`Zbt+gf]OW-Pn"&MPFu+nLh&o%47&hb%!6cPF6#r=oO)W7S0&C36N!pI!WeSW@%;_rPD@pJ(%#Yle:fQV48eg#aGFH:@AfV)59n%1$967Jo,V,OSLV%<U&"(Q1R[S4%cPDI[c9ZDm>M.&r&\N*";Sejq,:!>Jd8<<ZYIQ*YEk9j:nLDl;WIVl>]cpG_\'0M*(4NIW:qV$B.TA<NZgkPr**BD7W3TjB4JP_h%aNEUX'H=>u3Dq48[DtOi%AX@::1d#-;,=DL@q5U0blMoXjiCSTK/iYh!4oi5Og>$T<h?)*P9XW>7a1rRH38Lj'dMP5kIVZ_EY`'4%*'jOFHD>'Q7]!#TXc/hT(c;OP_AkQ]$SZ<*i/lKun1;@lK$@],]U/2O4c6D\K7DfW^7h&Z,\npaV0p0UU6s6&Hpkm=rPOumH1"?%%LG%Zr\0$"=Qh$+KKcC%i54;Whs3.<e/h?XV?-;?r.7L(s&`Pl^CkePk2;5`mUR_iOm_+(DMAj.XDsXg(4SS]+DdFEHoc3d6^X0,8%:;0M<Il_407Cq)hkh/d2\^rM4<kf7;.jrDlnB"6AlWue?LRm>fkIJQJ$CceKDY4qrPABgHMSY]cUYY5PI]MAEpK,dir?dG,7_RD,%4R3Kd151)R_Y<@dgS$\+?GEH7Q':%ikE:UON#>tt*ogQkT"*rrked8&;==)b+3C1WZmhi`dp)bp`;(Y6lPFI+U@*USG->9FqtMM`%Gn7R<Dlij27Q,Pkp[Ls%J\2c$]0fZ$7_%&g\@.pI]mer).3nsZq7V79RgR*'N2-dJoc#$MlW1dIE=l5dL>D/3I]K)j`mErDqLuP6%_m7^fPMSlJjj`iBr,;6I=nVscoa>sGI.-)7j'FsB>11;XJ+S*d_J:$0+(+)UrPELG$X)L//aoASG,l_9@oKnh0Dnkc=E5*1%)1>3%`2p>FAQar#qF/qE_s[2ebSuUhY@!Okpa3c-0DnkcdI-$6=+%[TnVqn!T=Ym-0n91j.APedk8-f2ksV(5p\KS>W:@FL;n1F4r)UQU%Ze+E_n=d>f#r`YrFKaRmV`'N_YFd0_dBfE%rdB0h7'f5Kj-r.KT&/`kl(0DKY?sOSRr50u4&mWAf.Y;"l'(#j(EV1KhoRbT]mbFp%@skH@A&ZI!f.VO*:3I+CI]m,R[,!6tj50+b8$Rk3+\0&o0B0Wb_L)5*m2hem?G?N]culC]e&m@<qDeZDH`NcXgAFA5qLp<8`eI32%,Mq`&^1&<`Cnc:Tgj"*sP@OJDSpUFQ(Dhgr%M\_F^[PJ+aLOHths8<ZnkY&fCZ;+]Q'1ep%ekOoJ`Q<,76/;.F6@W&6q%Ll?Gg:m%mg&;QoLW<[n.VK%O'umCF9J.->rLEdU>(R=B%ib/;YHo(3.lVFRYr6\\m;0,R6Y@q5I(-*4==]Y^J%N.nu37C8"4iCBsErE<ZaAk%gATe[,Dn@Nm'Eah`KfoA6N/>cm=$&<Aq,:$7cL[N;pi)+m5\tL[krSVnoLu6I,-rQH:Fr=8*/LL6)L-u%sPD4r;"sp<penf\G<e=%+6u/CMtQhTRp8Q9rgC;Z5DUW#<h&EamJ>CClfZ7b8TqRI`c:##G\^__?/./tmgjblWSc%T#Hdr,?c>Bj1HRP!/ha@@RH<W!K_"YS%]tCL#CeNmf6!c%U=8/O3A,a-qIC0m'4mN<o95jOWGjFU4&#W/Pi8sN!G3('G*niD$mHm]XgO!bSATRRHs/N7Q]6*H>nAW[QcT7^G%007Cg^jVB\YB"Y4[sbdT7k@=DeD:+O\#[e#6@8R>=BVSpc<fC8DU,Z$=Yqc&MY?R%gT2]9OA!12P!]ntl&Koqqpg^13%$GC.plU0%V7Cm]_+ra&LV;^[+4R^I!fsG2GVZOh_YockXnbh'dmt7'Mtc?0/\XETn?d7cCE+.*1Y^U^qYkZH='I30ZX9W,Rr.g9Ofc%%e%EDC%N$WPW7cFm-F8a"V,o:5Ib0+-=,W":?Dm(0.]!thPn+L0CGAqWpZ<XuTh1]dG];Nm^,jhJNUjc7Wlf+=rPjL-@?A+Y/Rj2S=bQ@Yg%0B1V=U5@Pi5KtLEpPTa2?3gGa8E6>`MEQ(/cU*B"<mI"(b)qCXh3F:al/Zc.EHc=s:+q"/`0(PVK9Z/PmT5n`bMn/ljf7o[7==T@%et!%KnNj)B+g`F$O*:(YOC)t>,f6]"hcSjt[.rQHX#U\GpjPSUGA^UdP;"BQY*;q&pQ&l@7EFn%.6nA2U.X;q1b)X2as(/CUrP;<%i9B)*j8Ij]WfBgb1Um_I#`jG+9?L3%9h$3^pj&p%;`'ijX\6U9d'f++bG=@[h<j/U5cka]2;79M8HuYujt5+eX$<N=$_Koa,i>t@%/Rc)mGrktb4XD"DoGD_s]GadsSfPMuJX_T&X1a[@[Dpb:C*@dY^\1k+1_2XXb?X?;XF[M7+-rMA0<'^/,uqWqY]73Q3K#+H\Wb&Z%!5&8SR!.P`Js\OhNF:p;"<\8=,2Xk+f.6V8,6,Upq3JcsGJW(i.8R_EHha'kB7KYQ"Woc>=i'Y6XaFCtkB1B,7O)Rui('a6g`lPp%R4E+#+o/,d%Q87(JZCBri'V"KEj%QQGuM2Tb-2uVeH-dJmT5;!b52&$7r.(`]O'%c$mb6.gn)o=/GYZW/Is7blQTF(+0pD?n6HOu%3J4)Gqo]*li8+E00atTub9`)Xa2YXhhJF%cPJ,0,orVFMGAo(WHJA\5Ik^?=QB!^>6!LKUS[92+2u06II&bkRUBun8HqDIcqIrUk%Fi+STFP0cmkaVl,IB'ep^Qs_0j_pcRn9rPlZAk:$Gr#6E@]!5,If7o$6c)P2[s'>^b)-1&$7@bW.W3/MeRbO+rbR/f9KT$GLu,Y-%!1(I8*,N.,huT$cShgpbfZe^Xb[O<mBbt\n.6&KEH1p0(&b`m:aD%XHl6nfkjYkh"Ek7A!:m<oJZ(cd%e2^E-RsS:0IldXF+2FjM%0(gY.pXe.4.Wcjr>l.2!LWJi-`Y.UpnM2.m)"Tk3"+h-*/#<!3c76>ra6:FRhMifhY@"h$<GXb[6J[IR'>JF/YTQF0dJ+"h*#aX@%5S"?B/lqg<,'A9O-^Lg$D>;1"dRs>&r(O47Y9q]Lc[1M6m)"$Wq.sXaSmE[CEp>!!e.V#@gYG8tgJ''DM:Vo=MegVVFT-mafZ#Z`%?@#pCl*:0H\;P.,f4_cqGqFG][skWdgXchrGIbo)5E!Lo#@fuBn[gc5KVk8ZR/MfPCt[-F47-<J+O*Ah[*U5IG>W^r5MPS]mToW7%]fV]Fq,fl*>o'iYiqlmI*.)#*`7%%MW[1k<T\.9_/9W%u@eF9T4irQ7nlbL2^,*C$(5d%/j4+rAGEG<(l#<\]C:qp+1Hs_@=:SX[%B,]-,*KF;GCF]NT.5ba0;Qn`qT:Bd``KK>WY.ou^C>ABT4]9I>>]AFiojqiamIBeEQoTZ`(>^uRD\7fN8Zq3eM4u*6s%+9d]R!^1%%7IA?Te=DNKEF.,^Ze$%jVQn@G%.:\<tEWd=%i3UrbHNDXL*?.OLK^[fj&Oc]?r,FRrY+GVR0e7.GjY[OiiB:[[[/cBV\"pNAQ,=%]sh%ga<YBhG<XuRHB6Qq`6"crh:;&ZN.u7,M;InR*T(&TS/6$`j_&-Y1I[f@LT/[tL"Z,eqPSB?C@i(7bQm@J8f*`T73\;V7[eKL%T2)Ii/'kJ2,1U?Njk;bBKXW6U^'.'P\RtIY$G/gXdHF(5p.<cXFWHJ@oteXSq5&S/.(pNHT94hUC^h'-iJD[r41?TE_bn#RN!?c1%>JDFaZLlO;%dprrFHCqIN0N#g*'"=QCh\eWCP^"X<U16]3qAM)[c4(:E:!0lhe<tKMG;N)9PEmcO-*!s8p?C&Mcn<DB_d?:>7U#k%J/.[@X9j.\g&5l>D%sZM-?D:g`[>hLAH]bMaCcb%:#55tF6S^lSZA>&Q]#(kqL1'Q?<ohf]`&S5\@ir%^L)089&6DS'>=584BMH_%S=XP0]D];<l`kJ-[V,9XZ9<D<.m34Fm]QM;Co1^aHq*F..goQS4.c3a43T45O2]9"kQEud%Sp\LH_oiDrFbQhqPLl*\%?"GpPD];%BD;>.<2hEZ9)#`]:O8Iq0F#Ym;ZSu`"jN"f4]eh^[QHL(r.pt8(]d&&_Xf!q-BNWnk"bQ/l'Z*m1jYo21R[nTj<q_7TB,CIrNGg+%4q)>Ym6hBUSmofu*QJH^*:Hm`A@omegr+Pc?[(rY*gPSZWBFN;2NjuF4/gm\CEE.[.fMe[bH^-lo7YNalT[BC8'RO$e5h``pmM"C%S8dCRkjE(j-j!08%hlt`@`dS0"X!<GcNJ+FghYC^%"s[.n0f9jIK]8bXUfLGl1E%d`l$Fu+7"2_-t\P1ch6srr]7>-4,:oH>T@Wo%qca<9?2Z7*bg#eaqC.\2kM*u+ibZl$rXo#?>ld2tHkc"EdoDI?NG;fICH7\;Aik]5rbJ5#=Nm-?]l;Hc0s(Dep19V&,Ptl(P'VfL%+q<"ho)rP-nrfjlN'U'!Q<\.+=NurK^o5M]*R#6?M`X!>?V%5r5Ifb+^-in(8R*[V1,>SP*M(/ZaXMt\!aDONEqD(.9=SHQOi2%Z%mKVm[$$a[t]-0<!-XIJMYn=oi9]6?;0gG1H;n0pJYrct*R!\]ZIPG+j=!4;_S63L4geKCZ[;mJi;VQu!$]4N=T-oHQ*Q,J1)?fe0%&ujK,$Pl]6:_'mr=P:1PGjoX?Tg-Su6aPAn8)+!4Roj^bEJe`\,XW>K_W1Q]%q*(kgmRGpF6'==.Ju5e7R&^F31WVLb[8?s7?5mq%cku-%@=Q[s*]lPD'$%m`4NNk]hK!)@lns/?nINWIIATeqIdo-<;N&0I`Q)/QDY\<G]>[^3Z9@ep#0p6HAh%=5lu4sl==c9A&#lKs%L@5FR?>gZ>`.NbBaX[6Dk,e,?]jLOkTBbCHNFm5c4bre$l/+E1Qh)#tcXiAZ)]dVNfK*Acb["QRH&ajW_V`Kh$1r'd:#^.Z&2Y<7%Oo>3Fhf@hFYNA_Cf<"n,+Plf3Wb8lt95H_qSQ(lHN1YFZ2]DT]"-83Xmt^]d#@<4Jr.>*4LE5a)5<A:Yf\nHPIrsW%.aL=@n9EU+%>2pQ5i484SP66l$*VPTmUB?R4*?suO)gLZ#pU?GOqks31Gd;tEft.cA[Y8KWKH?poX<`#.f=pStpF^lBn?b[Rc:#*^)V_d`NJg\o%3QBTpYpjK\f+2c/,uk;=Djkp/)2?H9(r&SBMV"Z5MVknl+2J2Q^K:,_*ai)Zj6kZiSR/kpoV&VC4#%^;YID^3.b)-:?H!)IJgMZb%Rc)G/AB/WaAO/n9k=nK/=Hn$$5:#.h,aB'Iq,sH=YF/tSprbUIecmHlct@a<O`QB*de:p`"g\AYJG7ok[e];S0mA@?HBF*Qg@r/D%VB7/6CX&ni5]d2Ogpo(">3+^aRqQG-A352uJ+k'VjlbXXh"d^MRF-1cB>7Y$A_N)P^BnR15tJ!J*p/kqiG5"N=cNrh42/a-BeprL%Wr`lrl\S\4">.fR!8)Z*-hcOMEX2u/]aKSuO.6?OQ*oM)'8HjbCSoO27,T=e\'Gg+.1%J.-S?%5p70r8[+U*l,X[Cg#JKdYn)mUS%%LI<N1,FE_4FBET`I6&G3sCTtZ$Gn/M4jdh+s0c[Ne7%6J`p0e[IS;agr]4'\I*m(;&'Zm_"11'$?DEY-rkLB^mBDXjai@`</H,^%Ln3YTE=g]a(.=H.WuL+6C*0_#'T:HMcoRRLE?L^"6(P?sZBHtB3*.;]%BX):jN@Pf%[HEM]T2@Jj]GN=>WJC1=VU[0X<K,a/7Pbm%'FV'1`5,X]kK;`AgfjYk_<@(4QBL)S"MPk2YnoE%U:uRf"m=#>3\\YuZ9M0>_jAehn`%g(26Q$nQf?4:PqV_=Y'3[5EY3RJUfXN$%RLaWo[#+i)Mot33OiPJ*pf(5;a*DL*$A$7;lA!Ai@s0)Qa*_kL4QaU,JjiEc'HbXL%SH3C?,;[oo*H0m.OCB?=%:0FCQXr-ke;!U%7':&?iFA!;7Uq9ZjD`*";-SW@?5hE>j!e(.:H_@KB$Ni'Cc8q"Ed?fc9YL#?$VT/5D6l@/MiO>,pt3NK9:FrIM+I-=PDGIB5N0tT%7JcCI*ASRXiSF^miqpS'b]n>ul-ImKn-XA@kg)VU<q1XHg1OP_H]jSUo-EIVD42pQ!94U;;=\C1=a23&NboP4p]E82D0%AR+/j6r%+$'&1PAN_IQ9-$Y*%KBSViVZ8#VGN3AUp><OEu/i)/UMZIsuC[&KD(_/FRJI_t;oHUk,8.3)4jIqcJTO_c`GPhl:b[.NQ@t;4HW*%<ED(dno^8;OVG@;[0HeW-IXp!Y&Ldfs60;1:<S<K@*,XjN,M.;0t7q'=I%Cep6lX/36sN>+%s/nlMG#[?nZN9oAPL]]+VpSR6Z$D%[9HrR@S5\4F*>(P@$B4>VfVO%VgI_SGO[cH.,EKM+a`TS7QfgD>q/XbceC#@oN>a!I&RFC/8gkN%dskc5c&^+J=5+cQK9@KTXs$P%;XdD(c6:SRE0=9A^8]C:NDrbYq_lgIHWoH&[1)-2ca'plHcc(1,QYf",u4I']di0Y.Bg^o3@YGEIrm%mdh%jURMX(Dg.jeLY=[>e%bJJFuf0t#8/a3iH+FW4hW,:fq);_;QT/m"Y5,"%L)jk5%aj)h6/9g`[!DN+$k,eK,I924NMp#/$>V7%&>C9D4?END0ckrIur\mPt%/AJ!:@]IZ=@n1.!'g_[$#uUu=!SBO.i+Z4/rC6uE]/WTVUd)^BXKF\U$]V0Se\rW-B!tc[<",#<4VFo5RYY9725qK_3pFJ/#IecQ%h>?g;UR/dc!-686T=dbWTE>^j*JC%ul8m?g3#`K%-1V)No$*S'fpttmiLE?X=KM&2@\c@l;_ZuspkT8F*D7`dgUULpOQ:eZ/E8:%%P5b6MJO2BB:n8$Jj&qgS\T8s'eKcV0P!BMt$[h[IcXtD./0f&sQ5S#?s#03!PA]EUd>Fi3CU%\n:R81f[<B)bY@#l\gFp"9^Ye]b%5JA&^jt7!fH^8!>=51-/*+&uK^R@ItK,?!TYS.Q2E:!lQ3hZ7cmsONJSo7Scn'^$hGIKh0h;,klPfSDZhY^P)q*O>l`[>R1a<[($%="b[@W0g\LNYJ^T^?7-U;;$<VqgNtT[G3ZY<2h4e(Z"Mg\abtYGE2F,&+&/M[C^mO.C\cRlVdKI?7Ofumk2d&\W&'K^I?Erji;b)%a2>MeU#mM<<.hnk6ViVs\Y>?8GtnXR&,RN1aj(1a?q\Qc?2BuV6CcBus4r6UT0%Ql&<`*Nm--F-3L7TRB@+TbdkX[f?K+QkFI*0j%D]rD,Jqj!k,YJVdaP[!@Tq>CA3NmuR)0#GFAreRY^bT1JF2n8V"Q<%+]0f>\=4W7rAj8-:h`7!=+R.dD,nZ0>_A$d-XWF>4XY\_c%5n;E<6N+4"=5-9M6QL&U`tM9;GGk6l9A/X6U'V&]#jh5-6;D'a&bNQ5/3BLKqfXL3DhiZgo^+rAk3MD;fsLJf1feN0Q$o]I\-b:(%?frs#fEO;r%/mi`dW`GI,kgV.(.S<u=kGdjA4JK+<8m1ukCi[ucCoJGqFNGTiS0011e.;M8XF"Ua^ZFR(bL1d7fPC,1g6`WdXRSD%*I2uDIB1HU>E'^U;5Li%rBD2`b"KZCmpDEJ;O_IaoubKUq=Q.MM^M[3T!1UaHh-M+#WP,-/a55"L='9<$`il974[3TJ$-8erMAMZ%X_[7hBUd9_5.1Kio:Q=->C>H4hD2o,bMQ$NNT$gpm\[eMWM;L(UUqu-,*1rdN:*R)V8(CtPu6?OINYKE.7p8S4)f5;f4fCK_6rZ5%IWI(oA*?T02rcI)?$k/l!1"7u82j/4$C2'@>:!^WERDL!`T8i`SXJ0dg0mX6m3U(V@rJ5Lk*o4kV>?.Boi,mWH^]"*BIl4!0Zj,<%4&%iEK]o8Q[2!h5m6O2D?VJ@/)W]+0%"j1"1'I=#HVlMU1]@0uGL;sNK#S7g/iXlGCQ%i7X:9leE5@F['40Warn,"Ahf<LqANmW`%]&d)RU'n_bCKu<=>iN'5#_=BI#dc,oiM!<d0d>P@=%7k[II3H)F<YNh&qI+k+9Bl"5_PsoJI#J6T=28R[oi!W^>(4kPu"t8PDufp%),#]9pSJ]0.cM1H+'&`N+LTG&r/=dt;H+X?VrV($njjDP;ZU5^7MHfF)_3.qdSD>kR7Y#Qp#(?Z(6-lS.0<Fn.e'6>VW?.*E)hup%q8kOl=B+N[09)qPph$&gU`(SN%]Ec&M7O]P]b4F9!"NHApe\PD-GjGLm>"5ZREC-aQ2T'I80c62:Be&.V)3i<+gR52=9Z\q(TuW=%c9]96Z0W)V3S.0\:2.i@\)ODB)hgTUHGt.\S">]qfcUK%Psl`%A(,6."pr5!:i$Dq%.Aob:.hrh-EJ/MC7VF=aCA'n5-#16@2Fq&%`_g04<70OO<EBpXUfp8[$Pk`>MbkCFREC-a\&_l,1)"\]+uhNdjB.:4),9FQ()]oSd=c>J8##TJ\]:4"mG5<U,gufY4Y/b"Y1(ME%8\IQ*Vmg"`b0+ZSNR)TR92&-p:HVu01HBUDC'L;T\\R2bZO?Pg)15g8RJT#M(?1rCJq.IIjQBIF:<n)akLS6lESLZYaNrT_c4!Z?%e8khfn=Ykb%Ttq+%p;V6aj)'1#K!JH>c7(rnLi%,q)^*JH_8U"X=62a4e-N;O$+9)O%#6ZBC4qc4?n"eZRV(>>b)%n@u7;Qm2Ca6%N5m2I/&+4pS\!.58WgKB%%M^Ricr[g,ejGt13@Zc-pT@scjDc)Ecq*Z"),*mqZiO[i`]Z3JqRZ0Y,%"VLG5'_#RaI2>Ip/o"p,I`%FSmmUcB8rKPk2(U&pJM3B7&sf=)2)Oo1D*iR8:4Z]"iQ?O^R^o#9LF%jm8h>IVW<gpthLI\;n)2!O@3=ThC49HR,Nj-Q_OE>OtI\%hgQZ=aU&$F<98g_;a,<%5c4jB-nk>L:ucs.D_>$rRYTsK?fgDDSC[Y-\okOM?ArI0Y1<M2%lE83<o01pRm]P5nd&BbAN07,%er_D%<bU%En"(3jH--aKT3&0P\s`WH!hFcj<h*aH-^C"1rm#eo3@S2sQ&EnTC@;#jEM<$5Z@0X1oVgk35LioCR)TH4J`irJ*-l9HW!8ic%b)]So_?m5nkGQ=_;`m?'nGH6fp308.D?$6QfG\LK:R5?[XdZa^(eZ1fjJ(N2m6C^N-"$[cZjnU9f=Nat:B$I(J+.1+EETR+MQW]r%3^=55@Z.a4>Y`6KOlQ(sc#rp&7^_,e[jp4Kj/W0k4Z^70/&kZNV!JI=],"aAfLRZo1jYC<29?YfiCck%kKs7<s,$]I5:807:B(-J%8JDd/n8Ir/++<s;5lZ\a;Z%sBn0GtgnD\^eQE?*V89.rie;S6JHMfk%R0[CC$ATXBQu4Ak_ls]nH'NrL5.)ENhIDEqAL("$j#VLf%8[a6):c0Po.@/(aLE*0oH:F)u"2ULO*E^dg5%mBBT?!adW>T\)A!m$)i?VtcgPR)GdFh%g7l8;#L4RMFkC3Z9ShM]N*YrB6@Z$jj%A6DqFDl=Q(7-sIr_Q8]i.C^rt9$+LN2b_L6P)@tVcjR9u;j_H*[Mss?Z?4joY&:!h14imJ(BQC84U>Y11^fAT$YF(8&]YGW7_Bq5%)-*tQ2oJ+[.>Y/>&F"b?R]<DW"LA[th(TS'Ln`9uD3_q:PCo;V&A`t5a"S5O\3C/%G+h@n=96GorLsO/7alJt'A\o"QZ"ek%tnC/%)-".u?ah:\_%9R@k)_'=:X>Dol7/WCFAl(W9p2Z(+IXaapDfR&CBgp^#qL+'7m)V2!$J9n)['WN(4ORtk[Dp)k_l.S!M\k:NZj:_%fl<]=H:CnW%26h;B-;pK04IT`bJMbn1kTa(lBEb3mSGc4`Ef]I9udgo1'tP'@G2\fOY[GH/;9NMC_K04EQnrT%8E_g;&E,.0l\Y]%1.W3T7?]Go<Y^lb,[8<[67<d2Ja'%g,oVcSD-MZ5R\g0)&O]M'WDP/eLhc2l"UCi89N``Keg-Y;Z!q*A6l8Q$#?3D^QB#P1.>0BF%XGA#()BmO=>;ceGfJ;ct/uo,Pg[mY)KLtR2U]CoU6qrOOL;8.:7TC_a>m`#7Jq8ft!CID_#dR9_\R:_8.[X,t9jOIZX<J.k[@7j8%9/^VgTd#-j"9mJA9QqX_P%[:MC5EKI!ug8d#DU/f8$^h_@>JZu7\gNRSja?DU(Ab-9[i'aWlUi..3oB1iB/A#)?sT;EVR+!aQckN%>TjQ;`5"cA8(BU-+u)>0;O(dEM]sZRWL1aD=d&3)))ce@,''^<MX#p&#/JM4P,S]%"NBK8lNbloQ=Alu&^%,I'<siuUf7256[$-M%h6:^>Fl(t1eS([$L1\l:TU3A](ug#aBPR[e&-Zm%[T6(tfG)fq&2ZkR%Kpg;65!j+[6cB1&14Kg\Uk>!Ni'\^gBsg/DFjskOE-P@%Z=7UF:<>8JgffN]#^3)IF%@%T@]Ge3S5N+oW$VnOGo%fjARI,K6#5^GLG_L;1.W>C$,FBmgrS+]TqKS`lsaF']qUpL=:4k7VG7sB%NKa]6ltp2$iufUN(33\7R^,QkU"31>1npiKZ:NJ?do'R,$j+ge0L7rt<?[m,X"kV`A:l<#F:HqkdUOe,HeKeNaKh]6E@L[A'pUYp%A6@V<R48tiJcu^j^_Ur"On]<m'gZA!G8Xf;7^=9I7N!>e+*7pq#[mp>KFn<F+G_HU_#U7mW*s9"(Z?cVQ6ho*"Ar]$'?mZ/%rQg/%^#^e^B+RdSQh:M!35F>G66C%k9%^9jbVY#o$F@Hs)fg>F;Q*_%Eu;6t,(s*+%V+'+6"E^="m_*#ZY`9R=^Rg<@RldX75GEH2`/AI%,)BsSMI:j$#dqAd`2kVl*-n$>aK@F7G/54%lA.f<Q]24!-)s%`q1\6N<;eQC$SZ2VM"sIN1_.*)==j]=PF??#IM#73WDD`B63=(l%k19ZWWsW`W+m+A2o*[6T'$W)ZV(b&d/Lt_"3mu7O@_?M[/;;krh%Ir8"5qb^!HI/cJ=,^me?h&4[(Q`s]Gj.*<CQV'e<Yf)[]BeT%(EgZ(i5TtkeOAe>=i?a1hq4k@=<BLV'59Msr%7CO2&Ckcs"\/p?F:1cLdEOiWCkRCOfH;1;kqe`)sK&L&GQs.`aOWHN*C*+'Ye2a%^po6_n+sjc4dpUF-FTtS\rJk+jO"_o-Zi;8h"DJ=Th)=a-BW=RPD#3b"$upuV3??h0EEh^e:')4,WI>_"%Sa.Za4HW"q"aqU2q0a%NCI-HK?*m8<$V(r(^.N$gN;/(9EnoujQTe!R\2Z'\/?-XiAX&]/-SC_=V;iWr16NX-pf@O_WD9$!Le]cZ@Wqp6$/pT$8DQ.UBr#W%L>[SoP6QT;(;W;AYucK!OtC1"C9'+F<,mCa<MiS"+I5T7!b5q3FG&:G9p[U"2H!&2Bla(N&<#d`)[VL5K:^HnH5?!caF<G]MRpi`%H?RrpTLqmNZ3W5,\&*cq1.srBLE[/+@nTi?9Tq:CCLWYSf`\0F?ni83edTsLY`[%Mc^AUfn:iQRAWSXp%)P8u%2Oae?l!?_L?C6O%mt[?R&clF(N`smh;h.h%QBj/g#_;-M7J).B6g+o(-dgTKWf`BE"i"4!YX9!LOPHP0+3^GD44/.HK2$\>bIU9c^k#pt']W\]Z41>D%-+=(Dh045%(h+,?2/TSl!W^Id'_[ha,#0%Wed*C6QKU"iA"'Q@#e[$cG@?B**3@O4gG%Z?I4I9P*tk.RYp@Cb6L"\tRtE70.R]^s%@sZHd:Ja@Hf1ZYT6pU0B."[ZbMkgaRnDC`)ne(sH!OLuOZkd8%H!:t\N<pF^V&7KQ7@nrCQtqK0eZ`k6LD^@X5"%ItY^fL#Yl8]P%JKY/A_kt>&@B(Rb/+1n45b(RW0P"!&Yst\6&I#'q6!t\6S5Kc8V]nq"$J^rJTRUgDpm=UEiYX8&3AQ2`f#ShuC&eZF+,Hs0(leIg%_1["YjRKdYlN3%)id02eL*dub*_d6$e/[a1!7:Y4qM5JfG_"G0X`-fG^LitH+dPH$S8M2";E*S:2&mF["iF[%+bn*n!,>sSFn-tT%+P@k?FiMi<>eL4Q3pdq9:f8de$oCm!>ql@L>qm'.MJ[.!7oTaf8@j_C</c?EMksB,Z3kfp<(pSP"nBPcN%l=F`<;RgG6(B8e0(.=%b6[S5_&Qh+eLpR7TEg?*$^qnTVJ<_"0rB\#,65*8%fVOIM[9s8(DC0X?4O+9@"L%dZmr?ea9'id(6-oO0H+P#-+4<%dBeX#F*5>H%5*8[a7d^P9d$e?:JBe72^h+,_2S6r)AVhft)R'5ZU+fH`3+)h"<FlgeYUk<qWCVWCWT$rp&pSIi3UP7FN=-C<YX)2=7"76jV#_M9%7KYQ!K4X8(aJ]@Lh%\ui":&Hc<O!7t@[Z]e"DmjO(9c[.)QnW`&?D2RrP=,[.`,GW%#1M0@Nc[WAT9)"K*c7l"@@_ucnV>1W-3]!%%7!mX)@FEippX"T7Un<._^*IM<1,?G@NJ>kLt&qB.e9Y@J37_#=K8GF%pa?o!u^>Gh/JXB@HgW*["/LFCdJL>UPgH!d:>].p'2]u%M$"sE)d'T]$Im^BLil[udq+?Gd:Ejs%6[0dUN:!FP>)iY;cNoE^d4,oWON@ZKaB7rDbWl4@=kn^F(d")m#u"sC'-l5Lc^/MBq$lZ%Xm.s&&Vd]9P?TD$&itjoquJ3J\r2=tg6*Wq6LRQ(<+p$^73$p!?8Y8t*>fD,h5')3BLIYUjO4_KO9GeE->8i;$*K^TF[%$?eAP=j%/@o/A=-,+ALqZBj9ELpH&EI.GMTMg[Z3jF?U="c5\:"A(1q)++S3oEQ]'UsNE>e$eWt:N7&>lN`7i-Q_>aRFK12(Be=>?9t3cc.I%4G[m@DJ9,*qX1%QIG!tF;!boD]AI3Q%>Ss#^u+g;3U[;QNRWlcGbeMn&ZN3I3R9"Tk+I](0M.U9V9o+Nk)sH[i^gHZF/0_6R:Nh'%)E^l"ECi%?!S\jL(?/WS-.S[%'iCtk^l`@AU/Gi*?0MVGlE7+2`#<)iMG(#o#,R5U%?#gq+Me6Z)NF+j;@S1,=d3Z/;-B8L'+?En%ckGHABsLj`B(IWFXDL-[F2ZepZSO)^BRj[;-.]<Wa&Z0-=I[O]#\"5n]l[\7MD_,da]oN(edb(ZCB6oD)Q$Vo.'P%>0a+aN"0AQ#%=:.Gi2FOeSLon5,g<8X&Dc0t+7\fQ7ZMrd6i<9MJr+Bi"3pq60!?eE%h?&4P*\eZmhm=*'4=W4eGQkqfTdp[,(g_cDg1=:>!WWeC%7dI-A!1jO'h8`/"!8uE>,+h2'S2H,=/j!qh6H%AY3rgsjL-G)>"R`';D?'[d%)om\!2HEK)ZXiXMG53Qm-'&J,mXN@QQQ:&C6TEW%#m)5+<p2)#@"KiWLSmcVJ>kqQ.U@X&'q'n0?%R#]a:a.+U.Z%o&RDPMEX'c+Y$`#W&_SIhJ@VHeVSObo\9GMX)2,(V@$jO[NSkNW%J/AJraMM^#We,th.3uJ+!AJ7uKi4?qhh2^MJEW</$)eDV_<;4/L<6_4n\B:HiW]D2SneE.7SBM72,5=JOMj^>LH%p<!mFf"&7BSl%!luKu\i=8#@&_]k]^Df8T2$Od<G)43?A$$)>uNaf(Bum*1l2Q;O"B9_VnERrc$C+_n\!>R`TH1^E[GBJTb)NWed6B<;uiWN$h\C.%\.O@Lnoqs1!fYl`"]N_WJ8tGsn(O@Y,_tnM08C\WPq7M>,93*V,(M7<_Yb!,M,^c-Q9ePCV2dX*n8\eoC)17[9L+J4fa$T+m]'.h%8NG0!31fs5L>edQ5gX%0SB.]cZ.3:g</&RdS5K^4C,M$U$\AJLj?3jF@8DD%Y3@ER:DP=Yn/eZ))PVSp0rL_t_>^]QU8k4e<iL$5%9e\<k[%@/a*/8cnfRq"^=l?_8L*9Pf"rW33!MW/S34VHpS!&+&N"@fs9B9pmOX45aN@-u]fY%9[&Uo7D[VKmbc.T\_f23[mArA\e%&8,bgWWd\e\n=kjD'RRAI"l%SFtO1bFMerjEO,GW*3qV&CfkXGF7m%TU\TrolZD"clD=PC'Ofpr.N3p_+-=C])Q[g$df;'a#KNmN%GipP_33a42#`O.7NC.*Y$QM=jLBs_50SN=q7jEpnJK5"7G1`Mhml<'8DhWe#ON4"<!:17qadTQ=8cj[IQWqOl&51+frpUl;]OVt7%C)IA]fRfsm!afM_@##p7p8r$aL,hZpK/l>Jk;u2L-&-:\>@k.C,7J1b2Si1A2/-aYf'qCc!kWnm%O#B45d:Wl<&"0%BQtVm$_kNK%)YtM++_&@?A:Vb*`<.6G@VDQ#=IjFSFR<DS_rd2(0\=DJj'_n#C`O:K%7Sb9!t4hBIZ#lnp4=`<WE>=*Rh-T&F+>*j+[?BZNSFSB%_1<Va0FOV<QotnQ;DAG^*t0kL;re'`$BPr\^DOmH'h[^ECUGlb;,eE#OQ@jgUFCagfALf(]B-g<7@:k28:lFYi)nYfI?P;a%n;Ds%G.q*E#YK7Jbm,tG*>kNR%A^APY%3)j/>Q6UgW`_0i\Yb^PYGUJ]HRJ4'pH+-nA2on,m:&%Q*?a7>V:sSm(SSfj.QD]Z7(_Zd,?S/%KqSk/<opCY67Jg8<"TsO(F"+o\q&Ct%5`FmYbh[naoo00+b56W,n<"Q%C&VdF-p@'>V(P?P;%-3MJsP0JA<4>8Z(rRQql4`E(tk@%TEQn[a*$W=)cVAja<jXf5Ram^R$\NK<s\4E2I4Kr/K9@@&?s,hlU]_aK^9TYLh-kp;t(YUcd"IOg=He'l]Z6GN+a4N<gG:61YH0M%FOe?EYdCMNU6^E8Gi19Y#t5-N-fdDt@p0,'DC(YKZ=1bnqG4ZB"u"^F$TX#!76&XW^*'F1>A'.J7V(U"mh]qNLE[.L8l=6P]<-sf%K^:lV:"'`6&?M=)RO2th?AHRRchS)[BH"<]8;:NccAa"QE6H@3beCsf$h03:@fa\>FsN;QFKl+QG1fhj=dXl@CX=P1/5$3%H=0sA%LG8'kKQ1kK8a6P%8BMb-knXVN-:>hfh(WII+Ef.<Jaf.a5.-Ln64T50kAT<jY-/k-J@Y9K+3]"1=D:62-(=DaJWggKa6QCu2fJ/J%,Y8Ij$_AL0:a[YGrlMQd@lHm`O^<=7>3>foWW3=O_m3i[\+Em)L),co5<`$JGWeu)XP=bLQepcF.8KXP5JXNR5c7fUm(tL47QcqU%nPdOa4-`XkC@T)*Q(skIP$Q%FN%MMm5UTLo?PE8*&gft<_m)/*.RL(bl^6>f.utQllJ73FJp<A@b6$OSPj\T_P'ZC![e"XG+unpF%$]fk1YAatGQgXaX\sH!J@M.u[8NuHo%$KF.S^H',/B]n.NhWKX_H]\g&83^3>^NrBb?qJ"a+a!cenndl"Uj3o@ba.Wg6CXP-VS1;%*O0o00dH;\rXp@VT@hNVI,)SVjBJhZcSG6(P,"r&\%;l4pX1RN%rO_'%`R_56i[kN_ehO1%>Ebe!/b&mD_1PT@ts!.$>qS<h\$En%"4L0RFf=9hN9RV=]09@B)r4"]pc?XW`qI4^^4!lD_am3X.1iP%h^gu(K+geT!S=],JG5)6,JL<8*RT4DPB^8gb<K$<^ttLi_/Z2L%CGkjiQ87H\.3eZnD:1&ES%WV6m+h;/i;O`ZrJthH"t(WXaCIsZ2/GeOYpG8u#BDP/=%_EkO7h_o8#OmLTLU0TTgsD'V1%9Wp?Y\h%c+Bk!Sjf4aXsg?Nq,@fP+pP2JOph#pAo%mYi8M40)M;*"[Dg-:Gl^G&AoqHk,l9_^Z&+`&*W(^r=Q-?irWNZ[r;O.NB;j"%p,bP6%^^E#.V@jA^ndsq@ip"d?8Cp`(53gYm^.l`g!7b@^IiS"`q%u>)3Z$d.Yc$#ci;"VY$D)e,-Llj\r.V2VNI:s=DPiq#[sr2Gqk:b(%c>2SB)m/s43Lp*FT_[k>%B9lus$W\'1`&-o2Kl,<(S:mYa+,_RWWJ@A<Hk66+`)Z.$.u@:A>j">#ofVU\H&rJ^PD]iNP%Ti%/Y?a%lSaj`0#^I8PYSPh-_OKXKKe27(3bcCAJ/?X%+h302b,3tC.L>?=G*7OL\l[g$,a72e]9VD$aAADnd:@3m-Aj_5AW]gp'PB:i]6kn%JoL)-kq5*n!c%qa(a,rsn4?cYhF?pF-eN>h(+SmT-WG14@*J&2HTa2o%l-bd,bnAtE;^A"0>S:n4oFX`f]IAgHR[[Y%fP.DDuNAR%WQ%j5GAm!U7J/ojp\<b:9cEVX]d't10aaS(V8/@Q)cek*c%)Gni7V?qQ3&uPP2rbo:"H\6qoi4gl$&"&GoS]D/fg/n%/95HVXJIl%k!L]7=R&*4#k3;5UR@RPfhrTNk(NWJV5)X`B;pH[!,,?G[)6DH0Jfnffo"*md_/o%:W"H]4>WmU@q5b93UlR*@iY"W+np$tE=G''%/60ZrWuqeegU2S]DAIW]&5RpP>"^#(M\l'W)$e321qqL2pT>s4=_u`UAGSC@\UaN.ci*qf&f4%Jhsj,\=*`E]f_pj6j!Stpg)JW(%4]?(gF6,<jaU"_N4XE,JDVHJD05KgGLNDb"ro-DjOLH@`J;#qo1+'?G("0q(>3@s3Eetc.n\.aj[?a<NmO88^k53JUd74BdiunWI%*4/!A6#T]!V9+YI]6c>@K&+:t-Rn1)B:5l.@0'h>ZCDgXiSEAqm_e0f2/MIjU1X`3Dj,ub^[T9U+-&mIa*!AD$LE?n#@P,[,=,?<%$i9P#aQ$3d1nfTDWZ=[DE/saFI:K&s4_+?Uf0auYKgZV-LnF9K5dA$T'`>iRBRdPJ3Z6=7C5tL\ncI[qLS*8H4_hGDA'gkK&EliE%?:$o*@8VPO!L;.nGY[7kLrVcpe2?[7^qK]Q<0UID!.<.6Og6-`qgcF)o:dq1Or7NNG&2_GG@Y#.@k#Sr/US7hXqaqd)BM5YrZ#$9%4;3QOeJ"OYg.'P2g"6JRFr3=]#t)`:]4N;9<^&hXV/F!9ijoOh?!>]J'%%u@i9^Pl'3g)N_;<Vs?VV2&d"V!h")Ygml&C)6qO%40%ALjY;7)u&?7ptU-9&%[7[I<$-g!G4fE8]jPcN3\HY8GY90QLG"_+`"GFtEm@D+%BYUH1i#UmEMQn-@,uCrbt]o;^5WHE@$L`m83r%p[%OtHr?PF.;S[nj,SV<Fj4g]1(JLknnql/f;W7QY+T]Cd<*+9=.8DAENameE6VMM2F^o6PE<FY+Pl>&f#2[GZTH13JIMt@*.Ho=%JD$$V-E+YK#E2"`c\rW@rPk-C$YXl.l^66-gZtA0^0n(J&1!1:L0N$TM!.7ArWLGL[E&%Cd]'H4]TRuo:W]49eXD$eP=q)%l*B!i%XrGKb"lsPa=VuJGBW4XLg/JhK"HF^/2q,LqfR55\epd9A9:,Mi#l.\0bja;7Z\`BI;8]RF@rik`(,KE@Q%)+RmU]N/YN10*G&-AN%Baba:Z]V&65,BQ@LLek-Q:r'6d(h8(g\<O4,MKRh]2C-%RE-ZT1/gGGm,b>+D60jdXTQ\?MMfaf7jiqRfj1pLVil!tWI_jqLdehl%"iZ2Kn7;&YBUuEo\EuJA1^c0`a1?LVctE4B?#\`rE17N[$W[RuZr$%*HVr=t6BtsY`3(DKeb[LRPGLN*+Tgu%MjKRf$7LS]-6i5f%W9B2:_u^1li#!gjV7>LZqK"p8287-`qF[(kULg.iB)67Ci4A%TU]II@Fd0G6lDC,W3$JDe?%-.S,m!)`!FoLpfjD4.&1e#.]q6Xi%?CY?cP1X'I+g;c6n30g<o]u6$Ns8@i&"jW<ruXS6T-p3tIc<A"-XI\]\ChD!1?>#[S9P2EF$(0F*`hPa8KEHh8#D*Bf:RS=U\GnD%5=9DC<GCX9TO?f'WplU,Kf2n$J9nd1DQJgYc;LF9?:]ff5c3?%^A\7O2lhQ%F00(GqtQ3(]oV,4W_e4\R-f4Ao<Mk#/@BhQ:#$C[%ot[#eRf^'(s(m$KVL_E0XrB?;J;DnGp#)&tQ.L@L91gcOl4VR_"Ypi_4U!U6X:%;tnqLEGm^;fi75rRF^abj%H:H<ir].4n%Qfc+%0Gn[=eKXi[1n/AgDi,aK9-FF73GJm,Ih1FRlsBG!kk:J3;"<FAjSM_deLn76^2*T3h^/T`s+eB[cP87R\ftg!eaj`h]LPVN8.Y-p%UVp'>MDD=QCYHkWF2aI7=M,tfWqLdJp$>_)WSR,NdqA\eVrs,]C.bXQrg]A>eC8Y_4D*d^>9@'s9!#6nlJ<;Q,hKF*i_$UgVGuS\%>V.uun9`Vr=d<`Zglu<Jh/_&GIs''bIL.`W)q[C'&5'38FDhR0gubnN3EWY,6?pW=egoOCZkRn.^`(AkSAMFN6SHuD;"!JH,At7W%Ad0f.NF&@\M]j$:l&_Ua[73RfF$(2"i+V=[cVi4_KaKRm/<q$i^.un4@2m]$aN*pTJ9T%P,thdB\XjftO"ik:EG;g3:K?BUCmjhP%6D:-L%'QVNK:M.Ormc\(d,OpkS]+m\^dsgEY35[pq(Tb=@Df6@VsF0H6KqQVe,HuAHB*flSf?[\N77IdR(Ak.hNuflm[sktS-K8d%0DZjHmXO;o:4@1G46!DUa3=53pfKAU,Kr[#VsCnPMJ00!e/T_0ShZb;T"aBBQc1cWT$cLrU@/tUkQUC$r\[tY2/>p0:YbFKIYi/m%ff%u.G^oPi`F]!inV?EA4CO4NCkdWo[bEd*`rk:XD.E$iqYk+DJ,aktqQIaQVb'q>58CO7(g]E.iQAAK_??Gf,Y$%134K=J]^nV^%iW0sb+lE$<)=I)294b[1Y)G#RYL7qD@aVRO'YD;%T?u8G>ld8$!j)M91[%;#B!_TG6&=>BH<kJ[USW>h<ko?Y:VoM;ET,e3c6>L`%l1Z9T-6g:1F/)D019>[BMupC!I"fp5f22l9%:TV$lM`^=,(_cNA['jPrsl^QL^liT:m5![cVbF/)ZiTJ%3'9#+lYXG#94^N:c*-R%hF`or,<kB^UqaAgF-O91rlSEnRLrYBN.(`ZfH+s12!=tOe85L[GeZ/'0,Z27%RG*Oq=Q']S-G(FnDkCV&W\8JX!Ct6)sQoU0OS$)%b+L*Oj'>e)\EG]Cj_j.KCLpm<L/N70#TF(cZQr['U*&#oGl?J?G&b=EBo0aF;t+Eek[fLG"$eto#Tj.TI$t^lC2jA.1[E%R/Ws5K%*r`j&9"n.Jj#U`&_52rQUAL98o)341-^=1.BLO$!1>NB!5g%F#iJgQWR#0-,aG^K7VH.Ac,1?>b?Rq@E(L0A%U()@>'uI31l_XWf%X22U-7a4&NQ\]aP9a[`(fqG:hc38)],)[<g1nr+-+8&![,&^suNYSioMaI@6!=E2j,J:%hIH5RdA9<CQef;TZ76GbK&U@>bGcV&p%-=TE8%E'?k8n8:UIB)l[,C\;k.`R$f[a$c3.I*79ljMS/kJ[4NN<T_)ib<Faj)-T&a+QD,)o;0`;UMX]WJ0QL2:f.qf$Jm6p!<h?%'`%R)ZDc>h12f++9+NX3k_JrdHcE,SM+\`lDUJa92S>uf,o4q$Q&9U>aKeGPr7kDrU%a;g>^Cr7cW<8OA::0QGg@F40rW'd`'Ra$%qH1\Grn[o,*Js%^]!^aE.h>58<4_ZnP,SG4A0WiE$po$"RPP8eOOG1@`6I&2kF6mPg*lNRK8]+RA@Q%_&n(&DS!2IA4@K^A!?&9)%N&:HR@_+r`hWug7Zenk#!tZ;UrMm*sNJ2<@NjJDn@[G+.No,:p>B[bWN'V0/bc(glj&2P`FA6]7Rsj4Sj\]b$Q.,p0Zjhe-m+7j0%l#j:j`\"3g@rGhId3]:VA+kjX`k9UEhS&oY.GfB'O4f_5c[3lq;l3[Fk=V)h=SM@j^[%312=:JVVWN#eC@[nXd`^3hko1BZ,2ufL%"u?1t^*:!]@<A0k3d\[?d+k6W6Fcp9oQ9p_@&(V'6h>@,LE8KZO>.jtK:-Z/f22m(Wie41I;pD%1q`g(/2g/Aq#T3u@GXIM9_1.$%8Ub&0J$T:E$>23j:3iEY3QYHQelW7qdIAJ0Jqu)=.0&*-Vji6JcuM7kM'9=E50D!\Wi@lHPU8Vq*(N#<UtKH,L$WIH;'(gIP`s+P%;i>;a`qEh90&$XM$!T+/Z^fggX2JS.>Hi@<DoBum!9mY3HFf[W4Jk+XGR>E#F'u>p_]4ZsS`r>^J`M(tk.pVZdF136Y1Cho1aau[%0J0J`WB.P$R]sS.j:@)4FW=R`J:'Er7M>he9(Ka\2=abEYKi3:W$*9MW?F8&37uZ_J<6WNKHXg0=nf[g*R?*4q(>+H>QM`j0??1h%.ISTK^7#dE%97%:.(.!VPuY*3M81eVC5A=jhPbQ-I!UHh&)RslEfgKXfC<;BcArY5>8Ts]Q5TP)'W3sopOFrbbs$*3E<aQ=O6X+5%41T_1Re2L9ppGj#In,tbYm/H@53g#=YSQ.sM@e>+PFudVl\%s+gNn7aI/)cU"ITJNmU-$3Cn#0)g9<pc`Z44lCBYqZ82rJn&kaB5%9K?ic,a^h%7XK"(Zq\.1Hbo4+XU:mkDmZCfrb],l^.aFm4hk7.PI(<42h?jtNOmK"D>Ks>,F9HE+_%4<CKf1V6I-D$2VYCV=%40D%><g]=:eFq5CAR;Sa*gX!o"q%!+)s,d*92Dm;S_cM,tGeB]0'#KgH6!+*TD@/NJiWLUu>i?KVCs3P)b)8Oed.5BO-^N0`uPJME=Xp%<benhm`cH\n*g8ObYRch"k/eiBq,K2P8lr[gn"tM%o]sqRo#N!&sfRik8B[M9Fm^nk#5Y[i1UoZ<I"m9E<,:J7OU+!>^JL9ZLO%%%1KKnO6O_[2,poAEZkggn\b;`4'PcWh=.Jn"ApL]nCoT6blmlQB/@I9]J.A2:>_(1(`aNI$R&Etl7I[_C?<U`*oID!kY`O)GV%H68%991-r$,`8Ch<\2VS7%!tM<WO7:aK4;Y+(".PcqT#8b>RH>cf,+C0eDSolj\%F2X>"E28d\`(W0Ib`st>^04c2BLA?R>$FV]n[18$%Ln/<oL'6nf+k+`Bk.'nlK^$RS*GZ+SZa*1SKkMbgR+fE?WVt2h^mD(-#42itc)TDo4!SaH+1Cn3aZ>557JR:![t>/IoAQk+=BNE5%klZ#[lMm1RMt;2nEQlDZNSKt='VqDPW2qm;$5s27M,7m=RCatI,YF8VM=e-C>XI`%758Oo$ACfR[%bn'mDH:r]r<+PhO"VaJnU%`%PkqdS6X5N*XX.]!$\:2l7e!&T`;=D=b<DsUlj4bGgCr/8:e9=].f/L;E1qmWe+L)^1?E.6phgV<#R6Ef\3RDm;CQX)Nk@od\2F3C%f[ks7>2NO<0f[Qi+e-]nk!JHNSZ;(:ANX'#V%VW890LM!J9L+WG0#na0u,ELDM`d1bVdRi8O/=a/8Q:HRbro1?[TJ9>MM\"RbL%W%=%"e#ZPE#>>58Q'hgR`<7k]mtg@Cm2Fm+foZ0hDP!u/HX94c1+Rp[H"2%OSS@MKi&'@AKm&]#F"<j\jk<1[KZLq%&8\\qB=P4#i:%(_JP9%?&J7@]_aXd6rp19gi7KcP2iK>!T6gkQY7"7/;96XgB'!`/(@GBM`@UGR3mZ:JeD0*A\'8([G.ZgBaU-Q-X<s^oX*m/<st1%2BmBmBpHS*"AeJid7+8*B?!Y<51=YF2BmE7l.FcYo$Y%-LrEddFgVe^C!5$p%*2c&\f@?H%h!B`;[,b(Mr>iGP``/"I77sEGV$fN%pX1a(Q)mVsC)?IW[0kGt"HB,6_*AHY+Nsl[f]o_@(HScN_iD7LCmZa(X\%<i0Ul(qO)`J<Z7;(g')C1Fr>VHR4j64@KF_K(,%Mp9%U\]Xt;:QI3r1,@j:HslMQ%dUldJ:q)b^.mQpDcNFjr@%Qb.C'bc]E!.l$&mj/$%X?3F4Q4pI+as%J[q8hA<_hNS5+!^L-rGG:=!)%q+<X-Iu%YjGQ$GY/FJ#doE"fb^bmBOd)45SObei+E?k)?ETB1+L$1]!ApS-f,mgCjC%W=0RXg@\(OeNS_/gG@Z*9ud!\CGlm#dlm%Vs`U#0>"e*Z_?%`_JJH)\io&/gEU!\?I9fKbj>ufr*Cu19X>06]6<NlGiarAYi2;;BYbfG,T%d:R6cF^ArB.\-H%7e%ZVLg,Q1I(%5!uZV-t89G33QKqK;9k<_n&-SGF/nI[Qsrp@BQ=jnnY\.0$ppB<Eg:'7@poAFm>(S!f"6<J.1@Zpuk&Fb0GshZ"[Nh0@^p&fi<S'%QmSJ&C_P5mV=k$\73H&="HZZ1>Z&N8Xq:nJ/+H`N*.:,k.auG;#t.0=!J=jVn>9mD-R`^2NgV5E-EJ35H_eEr'ldKj^!"++;<fV\%9gfX[roQk]@abH@KBi-&$1t*W0YO>5a^^@gM`/_k#.fej-imEb728T55_)aVhso;)RBWr]pk4&VME=AN.9p`gS<t@4E5,c->rWB\%Yb&=T!sI.AK=qj\:%as*ZrW4InQ-YlbA?1ESp39t](DFb:<+:skKD2bJbY7B*2b%P:p1X_MtXK+3]c8u,Ebmd>`R:\0L$RJP5B!d%:paZlFjBcFUF8etGU0."Vm_.q2K$Hn7as2r*"G,*7NLeS)XeFfZU;*!OuTar1a;*@Z@BlhEA.G^i'dXfWp&t``8;d[#NOu0*Vmgh%fr9G"m[.:[%uolq#4P[K`d+IGOOL5JI>*@2WlW;b)&`WBll&.@Fm.*_Z5k]X0EIcLE8h98lM_(bR;SCal,[^)O.3OS--X<4LGV\R%.&C'9r'ign<"E>c2AVdYKDY]i2sNq[gIBcq;VFa]p1OjD](Uq?7:kCS'"oMc=SS0oEn4SP,AY595I!a`M3uXj82%FK=qX_fhJYm;%b*\@SmO2)8br[_]lYm!\MF1-CiHHd`;Vo?t>s8Qd`Q%6^1"o5>mG7*SR>TQ8p/:#n$`H(FILjJ\HUG>$Qe7eRR""r*:nM];2O]?=%r=crk`qFQaO`ZqCcJ7;@@K(*d<.PoX-J*\.Le\\YrEJAj0l\;.,0u4$l-sr#5!\'o\G""BHcGV++('I>@(URpV'AD%#69LKjoE32%+utLZ-k$\+<C%hfUQjg^R8^sUq_6Z!^;A6I@&npq-^+T;KhBe5&_Ma.lS"1_*!Xu?q(X,"-70@[?o0\VacBiHg/dQu>`tPk$4la#%DOE`aZN3^Dcaf&r86a)fH!(cSJ5&eMC2^2]onbD\hXN2WgoZW+K6td%cYmeZ#bGGB\e.u\[p>rn+8+`rT)H>ZhVEa2No(H<7<:`7%D=*^/@8^K6q$Z?>qH&(Xn7AB/Xo7Q>%>MjdZ>ZA>Velmo_KD-RXWt3&9='.4A%mj5Br\9,(G'r<bSBi1kn9&LIR7Ia7ne)MJdr;O%ZM,q;,p>ZTgtdg55WMKFhH&:bHSiV-G"d+(dS)cMGGhJ'WU/e2<58I?r>eD\])"-?((R9#?IqL?Y"dpW.AdtC16\e^WJscd)5o"K%7OB<)VoJ'J?E-YK"X'r+V@):WQ>SC6oG>:&'<mIE74bP9-F%h<Z+*-fgF$f'<NI+8C]EaTA4XT8RF2+*-pT^i%=h927aE01Qnsd<%jkM&CR(#>J>QVl6fg%c12BeRb;iIZ5QUaUkg_e&!T0c&14EUoaT9T>l8_hBGA(>+qc!r385R2gp@f()^cc6u!q8a[.U]B+;$Gj^V%#lnR4!m'suB&lST&KbhQ0>hm85S1["kSOF%]H0,G%7fJU8lLJQ,D^n=Q=;g<T!AV-_UqMmqIu8s=_g'kD7b+RKo/#!dF:kk8TJl"%hee>2db(Hc9de%M73L)cM<(6[e<BB`P!#Xjs,hgs;eGpl*$8-G/,8Nm@T,?D8X6W$;]@5U6;l3s7(.YLAHH*#aUr64T(OLcK.Y85%@%&nVk/g10M/1af_Iu@eQt`5#>Y+A,Q('X9OBCt+..O->m4:-jTE[rj6D7P,^)ISNa6r$qWVIl!j`"K<onnPS780AqhlD'@C.^o$%>*R04MV2P4oSe8TgR0l`0KbQ`1M[(,e(dA;]qos%+rT,mc9p"2jt;oEF!)"4GpurNo9e#brH_T/#=[Xh\B"mWe+Ril%,fCW10kV2%rFoI*rG:E!Mk"'fPJ$83Fp*$Don*SUhg(RW7.7_]Z1:ic]S=C%Z4_DF:i\21bkre7D\LNN9-WOiP0V%^QM!Z@[Tclq-5:%W/.GS&%-'I>qX(M[5]=__bKr-neRD5O(e`Nl7p)nu>$a!$LpPQYT7CSP;bs2Xu$r'jcgkWta;L9gG3)'[6`r4[E^(ZWO8V=eX*#S9SEf.%L%kNe:`)r#PXd\WGs`BMVN)EU`i2_eq-!QLA:*18ELOb>%g!0aVMkc'65Us@2UQ=R*OU^G^U?GdB>YiIV3;RaFk8Ie+b\J8X-?dl36%FWT(G`:98U[#,lF'`jgX1&7Fq=.aum7g7"3=.fG,=#W&RAGQ5u$%#RBOUmCW%JrDh:E;'KUCtILRrJ]WX?a_@"g.38d8PqBDi<=C%6(%>U@]?69!G@-lU4@?i]j?1.MlkE\8rjfXUBH5W&;>\RSs^l_6?>1.9na6OD07G<M,653!LJ6^-"^Yl78r3J4CZmZGJl6Xp'T!#%dbR\kK]L6*S?Uo3;DGrN;+_7*kgKr5I1O/-l5JVFP*n"hKs#.jgOGq4iMO'0oB24*1<LT<"Q^4_iF#V@GRM_0_JA>$K^)IsLX=WR%m8\!2nd4mgr""XC1X\=Mm`*,q'rO_))g:VaOqH`T:E[.?1;_.=0=d4)k;r`=nJZ;3.[jRuEhY8iQm"H4B;8jT/G+$UHAO!Tc4+b!%)`0k=Bj,p,61mR>pp<*i!DoraLnXqk*3-!96oJ4h[fu@c$-hdB3q@X"$,>(H?dlb:7&C94K,+:l5K&qT1`h_tM`'4t:RHX4EMJ9L%QAjtK`jWFp0R1DB60uoSf3tb2buN9+h5)mZ&DLCA5VQ7`-M@e`QKDSXJ,iVMeJ<5&G0-6?jpFX;='<@EM&eBnj]?*(\PeRWGQlVm%-u3C[ioUSo3-D-W,uQT==0u&U\3*\@L"%"i"ae3#[oXb#p'QC#R6!TS"eg9V(^+o6UNMR6>X=J'G1C!'+FL5WX(JMN,a^(oUUbu4%?IXOSn`*.[Vk1i:YH>fBGTe0R'm-UEFI4SoH4/:2,/Z5N<`oMW8]&qaXY?^J@FHp[ARE8W!QStDiUQaX0Xk(";QC"3"]].,c\`Tl%T-M0-(b988ZQ@.bUR<JXrahsa6,?IPO;TMV.s)U0Lo?M=YY)XiZJ;:VKQVK3"c+QADQ3P;i^[[Qleed\;1Dt=pA)IbC[#c)]D`@B%C8J[RiS/)@W6^hl`8[\e:iHY/9\b2lC6gA0s2Z'g0%f(l"LkVR63t#TfH'Ah['9n;Bg_.nA;%[3Nr?Fd]55Idj5]e/:\+b0iRNC+%9Zo^BKZp.[j(bu3/g3Ih?/ojjX4=uMUE"=(eS>-<Veop0k3R#YYRe-f`tF$Q1>4W]Ij1+&/Lhuqa_M):;d'nj+,u[h-+?2he\hM!%2/Pa1:8iCVWed&*(%"q/s-t7iJ%SWb.eH/FqWQ`^qmS,ck@_7-g?("3D]q%HO'0,n&+/kV,7&(moJ"cm:ulDn8:dPbJfo7_7+SMP%+#7hlm3p[?nl!(E];CXl7A@O1k1m$)R!H*/7^EK;154n3Ziq?3N^CXdJka!,Omre$oS]?<e`NQ57r0ht`.B*()2el-1IsZ<D?`.t%Ag$<$@mgF&BqW4S>IDR$<M9uZ(2CgE:YQJoR?r0-)iK]]EIPd!;u7^`>3VCCZ9n&cNI:s=&,&U[K9$oDI]2^b'GBe_YuUg882RD-%D"$,IPU?W!`,<bk3qa:B`!7'_kheR4rp>1hW(\DS#@[H?<;7hM704>N?qUZS$V5h%(_M'b>1ptUU\5ts-)$P`BsFL9DaZW,U'LdU%B"o297p)L?I7:6m9=c$bnRh1qM`n0T\ag?Ml[`8l1()=HZ:$Q@9Q[gU1^;Ae,UQTHEc-[;[)qfiH)WE9\U[KZ"=/gW6_X\i(>ED1%rIijoa@n/pbed4\=X+5%(.Q4`!Bssm;S<C&H'@oWKl<5=o8IBfNc1ODR.4s3e.(G2MnuV]'dS8=607#JK(S>g86DL;OL%HV4Dj?u%OO:;;I/Q&Z^/Y(UQ4]sC@hKB1@HBH1A+gjmrcE:>)mllsld)!QnP/X)//ACB`dT+d><-:I91WJkI<bi285UED+ZUt35'X'.2O)gX%6#'U&H`r2_Gg8'D`(^_>B9MI/L_up$a;]%?@OG.;!u]NJ?Lo*+:%ln%G(l::^ItJIs6"&e_D=%mVXP4+A+,3sfUhePV:kd>_=%]\%foIB-:EP=`7[gF^("!^*#bq9'9,F%+aS^Wtc'RQ_6"d^en8h:%^(HbE#mK@cE.NVi%kia#)4/7/"lL\gOFln'ONQ_t##L`!b*Xf;%"+W4HHX^:lPP#Nk8rQEgnQ[!98hkPufGFajCq=`Q]"4?W75sc]s!>qC*;bUq&]3m=0Nsm[n.^EZIF:;Pa<#KL;:Bka0@M1&)NY=c%9Pf"!dW.)O?IG=EgQ'of`:cJ#X<?]l,N_M!O3SDNUNhmk\mB50rq&raR,M6&fN6"!Ol^!g.<L<X,s,L?Z?dpW(aTK^I)C9!&npN3%F\<ouLJjS2!\8of(]o:j/_AA<'[q,V,VG9"3YbR+SfJJ&,l^1Z2.SM:VV=pB7"i);17hU)&q2'6@Ve`10HX5A@)_S[gbIU%YSf-R%;O=M\fA;S1.5^44QJQ+AqqVYM-+6dk-\;S$TW-+YMHuC@RFrma:8=D-;]iZjdrC2Xm=f_q0=giUh)fsiL#>]^T6o<IgY41AS_r;Y%+E$jQNkLG%LfZP9^&m@W47W?rYd8nV'mFMH"uZ:_<"PFSDEfe>,Sca9D6t:1ppdeaeM`K%m?fO9`0A,;e42(Vj#oG!fZ2hqf5'VW%0bNf?$!-PrH;G7U$jQ/0WsUS5C0e)D1O6V`C(_CK9'BVVn-EQ\4dX;7Tp#\qFU8LT'HH5K]YOK?F:;q=_=50N/@BuZ,]mjZ8SH&O%=oipSaQ,.`1:C\@<(VplX:O)ZXXG8Vg,#9hI+=6n!?Ej-ctI&T%RJ;D,Q*4i17>&g9/V,FYlusRe'pXHd%IWe2Wg=PkV"rX>=&Fk%3cl^BIneM1Pgh)=6(&6c=O0oQcotoCEL51,ol!t-<^#YBcrO2bQVZ77jW.9"ScQ:`fJb)sNHOPd;t(uU<u^`^<U7'$.dpm+Wr.FI%.PDmh**%8l6I%F38*i1oWdMTKY<V3,m`Q#54!1>%^jKh3ih>]2&bDCl%u`^77kB%7R;2SOH)pnu-d:al@lAfqd-99@1IEeN4A7K,%a=FZhV;/@V5Xm!B?c6d[n0.bb@K'(d?/0e8p6beJ_YcD0HMoj&14Qf:;PRQh*W]3;#GY>-)-e-igskX=jZj6TB.;tV(N"aF7e5Z@%$AU1CQiZ:dYcik"%h2'@HsQB#"bF+sIDXe&EVqHB(MH%p^m7k9_:*%YDVl)C/(Js3if!a%nd%dL\,EKpNl>V`83^P1j[%`Rm`F03%Nu^#29!2<T$64k'H-W`0RMOaQ0j7RpTdCn@@3,RBY;X>3G4KZ2#\7>=A8HgeQXlA(;2a#a7P+sX:pNbWBrV'C-BM_19HYR-'J57d%OW?6?>ejRE;'^dP7lFFRbi;&a1[5ei-b;il`'ptA-Bcd)<29+Qp0l7%8B/`41?kVN?=)2*OtiQ<23&ju<4Ja4&OeIL>-1\T87lD9%(<#\-@CcsB<E1e[:okZn`Ob8c?WX>FL#Pfp:ok&Kg3dYdNk&n1RcKKJeJ^u<?4.lE<-b+6JiAoE>%+8m%G4^`_#TsN%%1i>Cnu6Q%erI:;!M.Fs^q[+XD>3ff@@sQB!S`6$oW@K4hLJl6L\`>dppq6dSo;_gLD34O']7X:=OW7kAehcFY;Z/VT)Y7WEpmON\I':d9I86V%/Qr]s[#\]A,NIMCEP)+Og.%+ifGf)Z]6Wn$]d'sEncZ?Far@\gM'e5ddPV5,>Xihim<uVJho6V@?&WMf$@A)&;:Tr$],4e`kR:r6%6/2=KM4&IlS=:@(nBFH_,lF&?P&=^H2Tk1mrg9N,BN*cFCoY#r"jJ/5T"lLq#j\L7[W1g%V6kIh4ST$iOWG*(!1"*DL6rmJ=Kl>L%"^pCW+;3Z:PDk,^3*e[QEiNK5A:4T19C>^I6'o#9rZi&K)b5S-@DDg^fN%^)8a5ko3MOj#S;Xi@]Dk^mP'?.q[,jnP\20a%@dD12%AKJ7=aeG?gbih\)CR/XZJ[0Hq@hk^!]uRN]m0sm-'s._:BkH,g564+]QRPee7TIKL)-ME+<HTgU%47jAOeJ>[U6:2gK]i2;0Lfd;%\<oHF@WOf?gna6!)+JHQ[AR>1M4-fc:qGM;&c#In?CS26o^/A:lDZ3>c!SG$rVF4U/Naq#5l3,3$!91-R:*(k^L4QuO?dCs]'tTZ%$9N1'\3cY2_;d<1e+ZtAK#T8aQe']<FP?g8$Z.Bid.e3b,YdMb?oV?d-,_)VjU!I%<b_.b:G!hnXO0JP%Ltr&,(kMu4<uaG^^b_5%^pKqMBH&jW#+6>+2'"GD%/,e^$(&6!I5*rZ;"6I[CUA#PY^!-?g'll5#5cn)+&;BWgA23>[O<OlA2l\\@="TtY5&mXXYTqM$$5uc%@qM@m^X;Jfd54A_2ghq6[?Z3,&d"S+VgBtHFW*!@:@VcC6d_u6HI[)D7JDW:7Y5dJR.pF.4NZquOB(G4+H%'_)$7#_=o_J@p7N$*%Olk65i]UGNptAr67Do=s@j]9A7]Ih4";stLOUjGVeMA:F%/K`ni>*lnliH%1@M(=D(,:q\kQ18,qoR:-B:-a0K1#KsCd]n^Td[m!%[*LK<.0^e`gp\oTJ0?G@M_XjPj_3-4b2YO")ROq"Gl"eI3l[Iq)[UQ/0p?)UB=DW;@i,Blbok%L3j.0I3JPYd<"fj(7_;iP!@#Q(%EB+dhO^g'ZG\+E3'`MP8-S!+ibu>as:m!.d0#e`*mg?,loruk3E&S)-N)bJ](I':ea2__0l+UYp8eSYf#`'&%VV75;#SB+]kRc6.%%tp0"q.sQM;V,(I/a]"P:D*lb^-kMk=g0er&JVVk0gOI@OF'\.rh1]2*k8m)HL.V#&ZS5^)9cb<nau7GWK)!_(i+rOW7O*tY".h9%7R&Uq>M"#g[$1nl>(el5%tljEI&GW1Sfe"ME)%3";[TdE;^&XZ?[lV-oLQ4LISGHsdj[`^Id=ibA(P;5!`EDuIK+9qRu$.o];E0"%$hn71c/WsMs0e4qC@Nkg!(Q!Zmq1-\5&'6',ucaf9);[tk0aB**`;3C<s+2u2^?pG.#_9Nh-I6fJb7I`+atWT<31"I9j9fDTnenW%D8IQ@*sa*4)BqleK0GSnl\Z<i,>I4+9+r#Wd4UZ5a,5[+P5[pm)e"Cis1%st"hI>9am277_n/h9+fF0PE+-L&(Ae]#YMt:?NXKp_%3bE866sOLXgfadlSmlA@c^tCs!WuI<d'V[B(@W@sF03WK7YJSmq.j=LF0u8C$>17&=A[rF)gh_dKE],mA'.e=HQ15mm/fR)\9a^+%'#]nOWPh[<fpAK]ESNU\\S@/DG1ft^@@rQa6l!ACkpmJ:LrlcF\(?/e4QJXbS^6,Z&70$@\m`A:NsP3tjZCHJ<ZM2C>@]&=f;_\&%</KgEj(<V:h/9jfs4+a+\aIodEN\9,+X:B%&^0`]?*Tfq0<Vd+4tHY&kS8oH#cC9s\fI2J:DY/u)Q"8D.0;og986Iq+-&<8`%e$J%+:_jUdD(<2bC(An/;=q6f0UoS4'!;tb,GK@Ye%>9eTp\s<V0NDp2shkU"Qq>@F=pkg-7?-1?_hk_42AC/R\-u+/q9n'JK$5)TWUM%64kL46mP]W5BeP&_L"^r3(/[#J*lpUJt3aATC_J2#mofc0J5I^o*RbOeJN",g*VA=%$BVFWUkRIQeFY35Kc*L/2##1k'R=5bcl<0%$D5E@\BdbE?kk^)Rm8T\+d/)!o+dLVlGhF,,5VI_+$<ZInss5]/5%mc;&neL@No!s'(/UcA30L[g^?hdjB[p"O+Z,lI!4i9QLhN6%Y+l4BS,K0.Q8/%c74P9E3\dgnaU2J`a]*3=<;Q[H]qf9-N-&X`(K8BJ"d&oe"?,`c)mnmt#6ooG04F-hEe:rPQ19D?FjS*GiS\6j%Nr%&pKuBt"66`Ig>OUankedQ+>$_GCbj^4>4R^B">"-/Z924-3Q`Bn`OUkY\&`2*[GD]tR$3<Q`M.g<U@:f&7`B&\t?9$U%l:Vp,%ZhJVhE</@!J^B`7<n?T1c^q,d6C?O9Q2raj!Xl\V6l-sYe>---GA(7skGBHO3f,NSV=*5P8/ja\9d`bL+%@e?N$^ACF_0eOh[?c*%?7u@/\LW71<iP_U_6^=(=2tqk7cm>KB&b1?NBP&-M6s*9l]'_D:DqSjM.F*ig1m(10Pj:]&e%qleKrQg&3d/V.g"*?G*$!=Hp_6Y%"g\?o4IiF>>rIn_&4qVG$P/q-Wg"c5Uu=lW;uSO;8)4se!Rm"bDb[;pFbR:_pgk6/,u2r85i,"IdM=MgI4TH9/g'W_k!3r/ec<[H%GgkO^X1X[0:?3qUE1AN`,;//Ql`5)ng92["4?"L*d5@o(qXq)@O42=[q226M-I3)I]tt`b$;`^Cp6SS-rq&EG?CnQ90DQ9dI<#?]%MepN`9QPj!,F7EI)[("A[5*S0;S=.:.Q/0d1A;Ij?'8>Wk3Ep5EpJlo)>&f?1DZ"mq)9irr4$sh0%$k*>?PB]OZS'CJ-_eHQ;7B0%[FuoNE+J)1kF?&s&tCUA'B`#&@Vo`r<c$+2mhseS(9i_GMDF2,-mM:CVM/TZIiq^/)$-haX.?)s0=Hg!&=!h.;],U(&f[3s5RSj#%M9?1e\t,j_8a$-cd-E/6,=5bGN;24AIj.b?1$UNG]b1]JAH\+7n5sl11Cp\9$Fbt%lZc@kV)h_TD9I_;:`47\PS%Hn:E9kd#YFU!%HB]!]ZJJNE&^7m=gI,QTJSRp!CRp:(Lk)I`@+o2KJ,/Z:U*q%?\4Oc!:o_X<at4k9Bn=G5@.M+]A-<M$j4`bDd%02(;F>-K=&Pkd%9+=TVCGLK(l`BL/D_!`SAH]cD0@jY:CPR\^c@5n9e=)>X<fIj:5RegcA]0.uN!S(%&HNO_J[+N7J7b]D+*9njn/W>./lZ?i[tnEe%mZjN"pq=t6f-PZ*V6*tr8S)%nGO+UkL.\'6?a,:C%SJO%5l$4iDo\ss[(g&'QK-^I%'K4jpR5U51.0LgeE^3f&!7,r.:\*[o=I"V%*Ka6E#]$JUC@5[ONj,NAVGmL@!GiY0]8#KD'B(rT>U"OASrfsO43'[s5Gr8Fgb6cf&hN'nM*]<aefs>-js=knNV$#NN'[%OO11HR%(R8'd&`u&T_68V036U.7'"DLH/F!(03s:`##_k#OVplEInTYQe"JoC=s/qg17n_>g#,=;IBJ.%E-DiMi6&8%`2A_fIW`%K$M<poN%[ij\(<LG;)`W=biEPU'\Akg/>[.A?'T*V>GSmB]/l_U7'2*KuQ?C_t$1ml:5ehiYKMtl^YlFP&M)AAMbbfoB][LSc'-AZThQmn@>%5h!tTE6ue@cJp-,f5<N*Peb>R9mqC3NlkfNoF?9t&RarqWI51FPgn#lGHmBO14eA=q2BkJ4+Rf[=%/)Bg<tXB,7PJ-#XAS&3?Ub+%cO=N)aLCer;U\9Qm$_B,TFc!a'[[(%o2"WB]d6`UJD>:j[S2lH:=I>P_0c+e,l;(:cO&=<>JqQKU1VmOpCf8DH"Z9p$Wl][4%%:9%8TgOC&A!*iC=R&B>RIp7U5eB_.F$YP>@EYmVHT/iiVdg)I/aLig4_k#[%bn'D>.mNic:+YFpqO?ZLn$oII21@m?#)t2;W-7Th*SX%A7!GK6Dlbs">FQf'.U<ZA,ho<1>\[P'^\@o7DHDL@qHk>YUX*oO_r1+9CDiBB>fca6d-7Vs-Dh/qZmCc?>Nb/W"H[bZkZ56j)LG@%((i@B*"-U5G3D/!gDC<c).TU^?,?>-1-?Y`KbO1"R+!FI66@iu4u(&2$KgVM>7AkX).p=E@r@3Q:5(f5!.hGVEu@)pT89Il5`YM6%J(8AX4dY)VL:i0E:\'<M?P0@0Gl94641hWqL.!CeEa33aE/Uh4(*h\acWCIPDN[[!q,D2,:oF1UK&i8?7pbF.p(ahdPsZb!4_%n?%p[C:R3fF^5'1n']Y\s#MQGY2$m2.,K<Ah\#@`St19RIsTQU>U>p!B)Kh<n\YWYU]Ri+AhTN<h1DKtXTjB[Ua#f)@U%K@[[[<j6!F%q7lkh)UUFl:i'm59J8o8fp6A=<(8*QNFb4f`BpnK?/>Ds^G5-<4(=HkoaD(oULD%gRtj`bjCJX\i2)kr%(PY9'!ArnJMbTYI&<#5%DL2Xd\\P>.Xu?>0f@-n6k?.01]Mu/*%+rFm1P9/eAKAu@<]HjeWj5=b.q65aI76>.+$Q-FgBgl`9kHCt,*iSZ>X8cC=CtH6A&=Z]%]t,#e<;P2R8OXS;W>-NfY[3:q@K/%ue_VQ%'tYYIrT`/g0_T(lO'ZJ4Qk0j&[et6`*1F,Y2<5.;>443QG@`X2j2fV\`D"'n7CFWB%f>>th:"i7\>&>"&p?Zok1W-XBC+V9%X63TIS2TFsk8q&fGd5l`=]>uL]uFQ4_&8#73V9[RUm,<X2&/dT#+hpN["=4$^NY)CA.VaB%*O4+33J)"-F8ae,4llq_M;R*kBsrZQ]A::CYThjE`N&dN\aePCqc)6h>6***Ic\)?BfGd,9HZaDm*V^t,B9[C9(D@S:*@`Sdb?Et%Cbgf-PCLpBpr/:#`Q<63S:Q)XN<HAtp@[>X@^`)>j>NN$__S)>--*_Djp/,Mk\h_+m,QfP#OR\F@#b?0eD@q@H.hSC$D*M2'>Gj!%@[jV6dasOVc-fF"_/8]-pH@*mP'9.<D/`uV/9GqP+E]J=-i!P-GSq=cfY@54jEZDVqfg;%&6iU]!tr[QE$`.AVJZJI)#E3T6PFdg%k:-Sk/`+)AWVM\Z>hfOD\D+eREuQ6XD*+8oR#TNiV=qq$Fm^l9lq49Ad;+9[*(-nLe8523*92<][fKWElLP_!!VpL]gn)8%B'T^A%MApLaUV>.1A\Mp:k`5K0ol$J,\>]F7Op_(K0#/\WG8j(^]p>f3hHD%Yo!6G(^"^'%b7&):A[0STh*sg!DSn3@gM#QS>OFCe7#28#%[=Jb>bjiEN2Ae<U.(b(4)nRJHZgl^U-^e"p]GrO^J2'=K^=Y[uRF#VS=WkVh39'mGUNI"kj/'>_A_\(@&[71QLrmV*gGcrlZ#M#Z%(,B-2E4de@*kU&)4'pHZ1/.-=^?B$iCQ4/&[>&17XT;UfB_&SZn7/;M6X(JS#iK$f93,31eNi$Y7_rt"JB?OY]@FERWP9e3'k"OX%2-b2.ZVkg;`)9km<4UHXM6cfY"dE+<R,;Vb+\Bsbr;q"N^ZO[^1!PL2BqS>FG.a-'nE/Ig*>,p4E6Rc-*7I!/#-Zfj3jrXJ-U/Mt%@I@%&P\d@obG>DAR()DiqXq)6%rs,3a6G/;HcVh8Of1IbS!ANeqkq9=]qTl94-7"dJP3nqDX.9b>5LIh%Y0gl=pL(u,llqM0(U_u%3;5!$a<Th*XCGk[11Y$Was3W]c?-Ys0cC\:/<nSuP=6Pm#"7!5@2^ZYmIIN2_K8O2\J,:#hX$[8m$MM&5j59Ak!?nBQM3<UX:dG8%9/V!:iYlc(9ETI^1uQ!CZ?";;pj4e#YEgk_n"5O;0Q4L9^q]a/o[5'hJ"p[f9?'9'#ajqn^p5$FV?>^m-JdIB?t:N)/ZL1BMtOs1%Q[$h'ds!7r"0#?.9!J?_9!Dg&"SZa/K:SSNZTc7".s"[)U]:JD=+<;uFgE2DXp"nHb$?eTfWh[-p8C/`V^?d?b?(9L,)ZGk'uKNQ%Y3:j:-1W=kC3H@*nr&nKq7o2[$[KCgI_):5A-R>"]BKq[qf/%$k*A.C8"3"?9Ap%j%M`irXkWo54mpjfd-r,ubMJ_!V*[\JU<fE"%#'F)Im'8ohOE]=e-.qnILi(`g0=IE,;?iAReNu-R*'I?Hb]0i-f"1lbfFb_eHUh2=XeO.570ib#`F;k#L,jK!1C#T(@UFGr+qEH1%!ko_&k278GW$+-F*HMJSNQJNgmGJ/r%gs6I+9&K_[VMuWY9X<gRnF=_n=o=@1;uDh"5R(qlh_DOQXqCWN.XXE\#>A6',EaD\8"[@%Y_omakJRRrB],&6N,H-<ld,W?%,kg>2Zore\dc;Oe_JU^eU`_@8/6HUI&E@#q3'@9$:=CsaHF=6lr*6jLOR0UQKq!P+JhVF-4.Hl%eJV-'IK3NfWI4_+YR92h;IHg$r,7nu:5M=\IqrDp1qWs383o\Xs1Za'c#L=6%[SAJ>3,7%obfHo4C>a(.9X&X`6`!`acb_iKD[p!%Z6@q:P+0,6D0M<nD+^AHf)ih=g2a[&=:rt!j.%j0$q>U-FC,KK'[2BqN+29=aDcBPOluMa;34m<#aL"WAK2M`Hpk3&P#%b&^'@H<%7]n$%(?l'3/fAZ_C)bQiBi;ISPhh@0Td$:*\C&mhr-DK)8$_*QEE8L"W`kuqJVH8fPO%/;dbcbSo]p^<4.!%!9k'jp`,?APlJ%VS%q">$KhZdNjo"@<&'R09/;O8*":l/[N?>I1uG0d5MKY5g"M]qP0SL`)H'_qYPU!Yj\?:H]d@TF%knN^L-]`&$^Zmi&(r.n?uIe,`X%a]sO5Aph>'gAl/lSjh4**;M,Y"^YP=]UC+sJNW$'nV0Ag._SiCOEBq3O=&)V-$/AliG_2RbV>.l'T$:e#Mfc!KQWDuQ;;7@q1$50%e'/PO"Jn]d)N=)&/]EU17U(j:GA1Mq06Lu*?H-kd8dNL*7d\(KoLmb,dUSj#f88ku^";6W(>N+fQUhX">dYOBYE=C!.ek6cM,`=D%_ne8W>aMrZotX&rJ[G..hn36\91192BsQejY;CDB.3c%hmTQjAU8F@:+0d@/Wnn=\((Ur-GAW%$*I$@\`;.fAr0jZV!J0+d9eC-i%P#I=T)DV@_?;`">,rqPcZWVZE/?J![acNQ2YXdUqZP2gum_Q)ISr/PRNW/;Y[_L?c]-<BR.'kM\fZ(50"pT,@W?N4(TUF7c!qNHr%-+V`QW?dPs;4=]?"#*faY6;EIOhl98E&b_F<RaG>V"#H5(*-Y"EqNR'9@E1PbT'1!$BThk!jQeKO\oEq*VRia8U9%&(r(g%ngl8G%,u-kM@\n%m_AN>AdOlE3Xj^3P$UHS&Tj%(od=JYbm'D[+mK(jm54q14Eii,ETIC(cRnGsY0Y#9_Cj/2k%gniP?s$!`J[*ri!ZI"i%VS]!J$[.gJ8).GJ=Nso3Pp<Aj<c]g72nN[)#oX#NBYa$KP"c_bm\#eTRtP(0V'\AbAJhmR*>%'ob?$b5afBQeV'9&3j\\Hd?b^)R%?DbJkbL!]cW>p^POs6/)<Ug,J4!JMi[/4@4EiIWi_:8TbZ$Tf,!`gVAlT8PbTb:mM0U1(Q'KjBI4lhGQc!:[;J;^M?,,*4g2V74e%qXq):O6D4%SCa!L7R7?J*O$Z#ba/6[om`fE"rjX>5kq@IBR%O[ZUsf4:II)9G=:j^-aDboo/pMg^`)!]%0_Dg,)IR3).pE)!6$2l%5Zg]!e*3/!BVQ!Vh@]jmg:Fb\HTFhr8A?D]6QG%?iQoV+&eRJ6ECFcqg*%7L84Hh\hls4dJ(>r5BnNQlqmU#12AQGBrq6X[<GT5-%/^RgM0MHs?<]0[s=L#rCjb=,dn8)jGRPXH@QjKmk&0RdfRN0`4;gO.+foi&['b1ZP2+<0qU2AW)9'?XYhp9#*505?j/*pS\bR@fG%A7TdPT".P_\D*^5ZsGNDHRWY"HJh@hNeC_W%)sN6-*PEcRlJRf9\QW&B@:\.eb#nldJ^F>R,N#$p!-@ORP;%_%A5(!1kp3(7pDus%ae;PYkL3YmY1*him?kTsN.gquDb&#P3CqGSoDFF?.^'U)mLaMecnVj3G;qXiTb,dmQ*p]:^rUrI/d(Q2Q"m279+4A^FIA#?7dY2E%_K8!@4#tOC1h.Hc>Cf*4V4mW/$%\K/a:e:+ld,SUH-#t_o9kr(al79s>2cg-`TN:M$b6o8]\jZl!#M!?@B$$CF1Ct^\,S[=jh:J.%s74e%0E7r0(q"H@9rc>!T7FbTC^^UDIl'ptqpZmCP`SKTKj!\W7WIPE^l?#L^AU87VuQHDIm*f%_`3pdmOd-^*2dh<//-t@2ok0K%"S0,LZo6FE>J%07_mfZJEV_p!jfc^3NnO>tfC8d!Juh"0(+ZPO&k+a6Q4ZbKp(]9[+qg9q^GYBV:u?cc>kl(]WrEcMic"&jOVs;O%0e5Qm<[LWm+HF@WZa%.-Elm"F0d$R!"HYHT7)85R0TZ;SB!n<,D%bFRe_QQX0Y7dXNP%Ti%/Y?aX-p-c5CA0>dMOCs7)i^<K;9#7%4Uo7o:P"DC8SUphG0X+.&9`jT#_Y4YD.uGS*kqWnYH7f;6CSD\qVBFqiM0HSOi$VRoJun=$p65J1gg>ODlsN.XAY9!q&;W#+_jK)%V5fW.6VUQ#mec`b%rKsON7*NTLX@U@0)c+\#'XYLodk7VlDcVsFj\dJRN+WZM?FFuV=sB;3EF<N6>$U.f-Ha2`nh<FD.cbcj_d([%B">jD_J>3lI']RMn+8sr]Oe`*/(t2a,"';;I&C)u\5oO7<+7!%kiR$Ofb'V`hVa)c<C6=X#5M8[2,cC5.2#.2`p@1/\jh.(*nZ7T%.UUn>B$f40o6Qe,@-?N\)uVOZAO]>hM&;ht9mN\(i)^1O1k[H'$tMl6XV+9L-F?62UXG/[?j_rr^+uXCC#:5ZCLu5n/jGZ[a5Z=#%2FXg(cpYBT=-<_@,mlB2cKBA,:VLr-)YqAbaiKnGr?l"I9JTTW(uO@Y]_=H[=$%4:Q`qU+<1!@$g]e&qNaVG<5QHM'=,9,7TGmA:%`.!1n]uZmV*nCUGJ(AZe9d,IL;M_1%A36b$E$Io<>iiSJO\3G+O)8tVF%2!8RM:SL,59`'6VgkIMXJMD0f%sCh:ep:*=!pAqnSg)%!-RRq2KB/\-__#&Y6Bc=mpO5SY`22/WuTp,eD1baTX\%u#`Qh1/,JqCb(IT^lrf^hQ16I3a@cR*1E2A[f%p7:9Y^OPW"2+9TGR"+%j5Z%EKgT&spkKC,rm7GGDWjZHO$?Phc>!1oK+JB-9S7X4)gW0lqZtPtFYr'`oGnE/0<Ogc!2Tf,h,#SXbid*\"/-$AYHpVHA\a$t%8<_.O>Mrn\?/sQ@YSRh/Ucqr+h-qZb#EU'Fd^+%'4j@E1:fI?D<Z?[]+4t`#Rr]T7pn[PY%mAG^OeGnca/52TLZ,6\P%Vm)##:$l%LSgCu*..^J(S1Im`;1Cplk5.S2+fRVE:GJZjBIqkTT%O"CsaBb\io.R"GqY"NVTuh/Ft*cdYJLP_ZOPfc\Ze&17-/k\d@Ot<jlco%=EAo16<,(Ao?=He[>I3P'^Lrl30H-s7PB%AZPbuo<=uSO]P=1B:hhq:kc<RdhPm!A:kn5V2\rTo!k.a\Pm;&b64orJMG`.a>o1)=%lGE2TjqCcLGhgh.m>ISOE*qTg2CRqc-4Z:g-la^BLcUS.`$%k6J1Z->2^JBCQnq.KSF)j!.H+Dr.7fgT2+]3"7s(n@IfecWg4T;'%l!3EQ?cY?JWW:uJioe)oNjDfPWsh*5)124#jDI+IFS=-l.GSO82E!-uVBT,&e%XSh]icX6.k+kj]o6]_8@_)fkB6;0,VWhm6\"OQ%5skMt=jL#kHJXR,KctHQl_1dlB5`)j8UI<l%RV#p+[r;>aNEKNiuCqhB!B]<*7;4&Smj-n(hH-pf)0I!Ia7N/7bV==r$kHc+skDc%0q@O[/RE8PX@lM!L*!kV+!Sp<E4I<b`pm(]BLoe)"(>`Ymlpj=Sdh4+)-h(;p[Bt9]!NZjje3C0)6+WV"rM3GZAGVL4O1lGO]>@,%i]XKfF<r<Z+\.FL7ds]I/Bskf;_&gnUEo>c7<=[dp#gjMXnsH2_&asN0k;4IBdo2K+JljRBfJ[g?:L,_8ak(gOi\#9!Fj7^H6G2$%F2sGP0jq4-Et-HfkA_:*Fm4UC"MUQM+h=ijUWD2)If3U2dDu?\Ie@]Ne;i3RNG/!X#)(kSnuh7k*N[\8ZjtK4>7Dr;*m1SH\eLUb%>u0"7H:*-4j)kOmn-@#F]@M\&pB^Rdm?jHoM#!%BHU!/Q^a/6Qfh("s`-2K`DRI*Q*):6=r1nM[S$`Ls!W"dT&O1W-e*#\WGq'Xm%]L6ZBj,8tGF9,7CCPp!+=1OG(2-"q@*do*Eg9An!Ia>iPT1@M6C\N*r`o`3a+oU@c$i/qG/6Ssad/I0hGsoSU*Zas(D?!"jLL]W?%_#&ZuPmb%Ydo,X,6OBTP.k]iPE5Z$'Ng\&m%BWJna)p7)@6?o(2+;GMJe+YGNs>lq-i)%M*fPO'oN^K\K`:*ZN=q9WOK'O:*fjZl%'b:BNZVJ?d`CqIY_J4)JF[e2OTcrssW7)6rRP,[5/&ru+/FrB-@C"^gO[`0)OZ:80k^5.1+@@bOl-Lh[[>(6E/W$?DIWtK?g:Mb>%5E^1WkI"#%Q_[I7fN6#@Al9$L/2m2K`YT_7D;jo\[Q*0;m&O@-('P!)EZ"11`MVDV5=aL$FNePmgoC%b.NM)UV7>[.V94IX6F)q1%g9]G@kaqTGp#$m[dO6*j)[\B;A,63$OK-!ImoKl$bYQ1$bSftD_N-C0@:%ntQ9jTVBIK.j#A/]l7.d`o^spLEaS7Nb_[A\1F_faZ%F^l\YLJkb?ApF:>SOZ=$GeB,Q3mMujlsq/;_X<1S2*J-Pf=UkOG:C1#<PbLhF^572N;qF_IE%=c`h8soUC6>6chPoLZ$$rd"QZ0s%,?6$[67B6kf+.V4fHEJ6]Yfbb]OQ9/%n(V;.kYCXK'R,LN[bA.67I.OC(H*4,C[]qAr$:Ld"B4FK*eO/l&?ZgSed#Xh3CkujY<:f%qmKH&``C]47S`c1i1?p';]Z4*fl5+6R]^nX%lbY2*NViX\,ao/O]tbt5`mJE"#SFV4+c?U9__j5q[+0=F&)")2o[7J`%osO5['Zm%edl*D0i+72+dBjmV(>i&e--t#Ck*fd#@Hg.3<U;u$CIGQ"/P!_*[-je4ua(7$t5AD1Z=>d3ddfb\US^-\kX;$pR2#\O$;$KW\ZG[%XM*;K2gp2N!1c;P/s_of;o.#6+%!?q@LX8s*SW<tYpV*b)NU^tjA%EN?5)e%O%[#d-/]m>-C/sCE/Vko!<Me(eULX>O3!PrmdC.l%"V6LYC_F?&1n_rXKqk&A/ilA!/r@m=%cuZjr0R02Y<N'Z7c=n?h+J5l#N$+t6=`CrkY'XAj$oCk4mo#UnJ,#s:o_X$5jk<UX*Ib%%NHXP/o,u11/5+bc!b&7R:fDp/G:F7>8k;0MQ0%;PX[&tITs@gdM5d[oK/0^*Yb5hn5!\YPp_Kf!ZdDR<BgX3Mk;%Ur-P9eIY'*M3%\g2="QWf3^Vp[nH>*n_2UH&3g_3UrK>kjdF"kJ8V?!"PaUm+9rAe#^`#(&)/5q$9YBp(:Q-:h2NY&P/ONi=/7It-SDI_]mD2-ZU;%.<gQ@'^d-p_'suc&Jq7'R34p[;nNU[n+@D).%(FV,4\X!S>M)J;N,.#V]]96im%]V;O<b'-@uq!ON&G6In`m))Nj?\kL7Q?R(5tR%_17Q`4[R52^q6*jNXIilYILtU6AqYDB@abSH9)aZ5d_[@pkF0K/DMl%nd,&JK+DU_c]FdaNnLDGMS/fs]*!`*p9BBlFrZ;&WcDD*%SeFWLF5iQGX1?CG$OWJhZA+H23BT!pIf^Ai@n8/47jn]B(g*+p8'dQPg2?R2eOR^7&\i_3oWJ(>@Zh%El)Q4UT0ZkP?t:!B^=`UC%<'!Y%Blf:C<+10_Y;ARfBZa_]T!-dNWpccDk!SiuXHeRlY?:#^k;8#QB\YFWCaI$I.OP>BYeU76DM^boJH<3apHsB/1LAf8?E=(s%^EfXu#qC\g@uuKg@Zj9!%A=F9\JTE0fhE;i*Ub,=F3p"qZ/d)`&\Sa=Z5-ReS^F,OTddmsfWcnlThuCHH*!_p'lqipIYQde.`"bE%.<nN/"E4d43/?@Aqlo_kjGTRm*/oX.K9i"Z)JB.)F+H#..h<fc"j"h6hM?:+g8Tc;U^8)n<Ac%h,EO`+[2^.&Y!b^2fkZ^\L:Jqr%p_*C71Dq^t$R(o@qZ;m.rT+dFT$>m)%%CjmQ]R&K3+c'b%kK6c:/\h\9bPN7#]7c[?&#"`;nTD+.1$KA8aW,U'4Aq+)d==U/l01Z%>7>5UM"'LN&<\?Rfh;Sj"suX\&^?Xc$@snt\9I&+ka#cM5J-9h`bAo^Su9lDmDSd5(0RZ!;jdMom$Q<\f`qeQU1c!MXWtf)QR__Q%cH!1_*0:Cjig'!l'k<'),+Zk;(o&YX\ZWVVaS-KT.CkE`@1m_\4T93e+ou2h'd.V,MBpCf#Z\h3563:/^B0P%VV#J<9^qe$eRaR/%\;6TZ9>M#YZ>Otcb,Rkm>fE+FQ_sIC.1*>"BqRZV@:nm,XnA+maChk9N^AZorM]h^CBI&'-aMh(2Ia#9:uP'E@fobe9U8)^"N!D4%Qi8'1U]nWJ$>$$&e6:FS<;G(rT7D%j'D@I=?l3n%Y9nU_l+NsWG*@eM,2[BWmSZEDoV$/WNs1&8VgD"M*gZW<<6VpU(;fMp%=>m4%TopqK_\F(XSbdSsq48%@O`eg^:)j(ffFZO,/Jt*Pmpp#="k#p))5#p.^4-*E5TB2HH)[me#'%rY=D$3H.;``kb^3`F`+%A#`0g.T%:_F\t,GY_4.uqmgVP?[.P'#/XcEZ3X*o!RHa2bWfBSg6R<R->m2(4D7"A[-[A@ptro.b"nO>IG`PF'Wd+l/<.@.i7L(tbiVa#L:B%o22U[9'm2tK=H^!#s/?7+Q-@`h*6LJC7prQO9?C.5MS+?B7P_!Yi7qqb/"Na:Op\fQZ-LlAOmTF&?B\#3?n)ghG"ud,eF;CU/YED%rWr_U:Zb]_,VFD2aj.E,^fljR8*0#3P2i+?==P;FHqS*uO+i;k])tAL#cO7+-PWO;,s5GkX1@RPP2+?F7Ddi+SYY`,)IaIh.JU#=%H>j;T3Am[Ze>tAk+I\M<=i=p\(mn$?`F3c;(^%bXV:tI5WY`OQpQT/V!TDAHGD]N,?BY\IrGuPbZ1'[=6G)'cU<h]LHV:&LemJAV%X@beci>Ck6c^L`Rg6%eL\5[mAlU@6_rk"JUKMFHB&[tmjV6hH$mJFs%8FQiN6G(XWU<furVj<&)^uV!\-U<$d#cjaa6OiC,ZBH9/%'''d`kRO*rcG7eoQ%kqF6b#EP.1)UO!A,0[!^^hIlVG=/=^>p1*[,srrf.hi79$C]WJ7mNKNmWBHAa4NFH`YtUnsaD.AH?@Vl!UL%152bLiUJYB+Yh>3^.untdEgM(0hT$<aqUZAr<^j=A^e:;O3j*oFhhmS-FNafbWidWaZMiBN8r)/XGR\N*AMsb$&%@`[g*K\Gn3D>%;e^$+>T+"CWgep7dsNEGPml$(gt_JVWf@CP:*seXKg&nZOXcJM??'(7Va%%Lk,nG&\L29)5-PgApB_25<&MGB,NbV!iDVp,Tu$WL%-S3Ks`qIVV9qUF/dR6JE1PZf@3odj%J:BIN?1S/FcX"?[j>F7l_rOr)>+_fXB"sH^GoI.irgY@(4iuVND&fG1:OngK2j4NU>#>4?%U?aD0^;?9Wd:>M`@PO<5YGFc`j6KF\aWq)q0Q;%jp(ah]ZJnMkFS-OBA&Z31_AMB,89<`ka_#&CaZ2aN^dKM8:(D53KJ^0`6;'uh%<g9:j3.`!iQZ2(F(7JfEquGtTCsH;^=%nZ%VoqkdOJuE>?(HQ@G0:HhFUtQ3+1+(`9D;=Q,G=I^MY1/&m.L8MSM"!ncN-$S&!MiM%=c3G:WR-aKaGjEf0ck0=_GW@+C=d,:qb9J:+`kjH_6e,6rY-f))gb'`1HU:`8:m$Ybb!'XjGUK_=Q!$@'(QJ(MZlQ"OkW:8._QRW%Bo$I]e7=)c:;$O4,m[H.jtSJn.#"llMN@kWTe'24/hR`H$@,q'OW'QKL$$Vr`BG#ON'Z_m/$F_rqKRnOLJ:?B@iMb^0c2YmXI^lM%i5Za?&n`\Y=q^)BlWIa:*)#YipO/#QbsrT%fMVs40=%G-Rsb<3NQi%Og!F,/?>BN.?>#rX[a55QE0k(*D.kT/ol$mNq+Ppia$hoa%\jB'+:sCdKZAjN+[^!NeE)1LCQPfRG/?!KM#Zk'cTr%7-:(^cBpK1JPSpQSO$&QFK(ja@N]6fM<.6;EpOaU!T6.NfP".HG&f.+-X%/C[&_!pqW_qY/A64do894:NOORsO;9@/8oF0+lg2%KAk.2R`5,7BGTjSVK"GE_@2c9j2C;*?XA[F*2q\HZh5$C-Vt:Y5f7c+Y5L1%P,HZ.KFkDt0>m@"kY3J/B(qTnIA=o*.%bJJfP:&LIZnIm6I/:6Sa[!3`!cY*XXKUa+M8GAV?FaSml^;Y#$F_3/78#,XHAG#V4+Fc%Mf0q3PP:/<9U+cP9Q%faqhgb:nfH-_a9L-2RE`2qf'^ibh.jMX/t($^N\?>6htVpnDWl/o:hjh:`7#t/?#nX@WCW6BZ_Ioi`/c.K%%\nS'""5c504g,4n9?6S*Z^/Db[nf%+7,$PJNT50H+Z61ZBNEm4i-ku3L3"a4gjBSd7j*d.3@lk>-O'2Pa3795MAu2E!5N@T9jka%G5lJ+Do]>H&nhA!C)R#_G-o;Uf[2mH47qlUGK^QkR3\`-04M;^jjP:]6JmaF+,Co'qfm>'O*AY2GR%fbY.0N?6`$qq+&C\_Wc>dH%8c#00]OO(CDs,1<NV.Ibmh=QgQ,<>,Ug9l2nS>iKFr`n\\'qnSQoUMLOoo.DS]fs&D3IkgbD;XPe[K>NA]NT>$l7IIB1ijq*CDXZ%4B;!+q`N,tq)Z2'D?/2&,49"Rr+>TK^\HX!Gr,3#A,H1l=e]gu67sX5E1X;l?J]MB-EL,%ZpLPdM4!$di5CHVp4V\>?Ouf9)`+.#%rQk;EF_F.9nb^KWbWZId"qG/Y6fsQ$6UL2_F_o8236/TAq*;O>bF!]=5m*YM4MrL767=+[lrFPkre&gRR.$+8+[^BfJ&.S`[GMS^%LrtcYFd[Df57=JmmH\H?9(HRDPY)kCNQ9(C&V2j)\oQ^Co6)^69D=BZ(Z,fD:qR]r+[rf(`3JrS6*i2#WZ$'-nnT"4oJ%0>$uNmg%."800G@ZAicPRKG<&F:,B&'UX/i^Pkcp5peh.Bc1/-rla0bjbWS7/Qe39G"%YJUSnpa74[n[Edr9q48A;@pmK8?=t:3*,4_F>p+k%BW6?,2jG.]Dss^R#>CZeC4T;<iLW)`.?Jtk:14K!K:J;U-IFYkC7-c0NbNBqBid+04Ph8U@lmAOXtHp9UG-i7KIIjHU+;jNBE)(C%`Us.8.f[,K&<s"1E)F1iPGDmS<MI*P<Hl<L,R*l$&@\UDNYDUF2;roi;S%*B%Y>C!93&;Mpk?s+jQOWPKeou?QO3ZYN=2,aj48'\%$2nFrbuB9](r0juL0Y(Qa7LufG0R=;3FUM>/+$<K*SXeO>I_pj-lb:c=]<'i5L:FW"!-gee:[c18=Mn<743)(PiH:[HIo\jEfR)]%s8!D5h5i<U:K[,.eI1XAdc'[*R#OVLR&bBn6ef-\9JRhT@fGV'</Loo4*8B,:Y9i8#L$X;?:eJ%Cf`M+V*/[N2_e5c[1mX0g9ecV%*QDPM]FR[VhY^99rU'(YFu;(,J;#`TNGOAo^d>e#kNOXA9R-([Ym?o]BNQND,-X;;@mo=O@IK!Jr^V(Ss2A%;f6#4d]P-)+0`pAG%Z.fIhNdV()a:8$QO$ET$s,^?8Q!mE!AEp01Io*AKdJ^EImdPt3P-[/"@Ab;9'GGqkQbr^5?<1+g,'L"j'"S\7Sl+_;K^bj?+;3EN%+o@Idk2WXlfJ0Z"!)9<+kFk5Pg>rXn;3K9u&Z%3gHDR^>VJn^1&gW[(B)m%F<0U<-OL/V\kf9;VkX&HEQLJ053dsgt]+*bfKt-p^%/RbUbVHJPD0HW]E-?VWr+L^=jbMO/n<3N13[>i;,+nNV$BLh'a!9#PG\k=7)6Gf31AS@DC0-Cft%^a9N.<!Q3PkZJ1J)hh$bu<t'%N";76(5D,]R9/iLbM2'i]DOZXVM9\8`p7'GplM0%#H$JIMWII=V1]]8Hls%;*!6qY&kaBEi@M5\,hmlWa+!LMd"WAtE`Apnl_<AG%cV.u^M9cuP!9h<j8E\.RE/79FQ6T#,,O*rUm@Qg9RbLFH`8+c=2mST?XjB-r;tH6+)92R&I=@gm3YHVW+P_FK8"h3S2@JCBXU$%#%+Of!Ils?bpQ)Kg^C(=0++=6EZ#=.Dqc^J@;W[ulHe<3Dcif[/29o31N0:8cRTU)*]9A6ao$]nf/-ft"T;$Rc@CPOpb&jRRKil<2u%D<OaVlrhELNP%gF8mTasNHonZ.uP/KN4s@@Zs4/!J*&`gPE1Q\3?$16d6`WpF@dDgAWeX37'62Z+BJG6"$<[Pf[ku5ES!'V`=q=F%4q>cVT/q#?Mh>]'P3fYKdNo@AWR8oqI0HPUpK\q_\dWp!X$q5bYjOf8PAJ^VK^*tViiucoBF)If#G@ATH?%)`7*OW%OWf%'I&GU2%,!>J$g:=&n^>Mc^R%e^r]"I#:iDrdQ?_c@#4@_Jd[7,0G_E("A)gb*tTKT+N&ON0dkpK9;T89I7Aa=AoLLR*tpGb0qB/tijk'gB4%(Xn!A"Nt]nrG#hiX3Af>]_LB>*.FuME9t[X18J#3$?rh9Eq68P4,P&WQ":u*3F]:^_7Sb#f\Xi.aj8`X@5B.V"jP,mR3Q=5)49Ks%\'5?B]&H1JE'bUA@BCZT,?)s7WFCu=D*-A/Vn$YW@!;%lG)hqB%:lEuo8k>ufgdeO++Km:R8h0\a!$-]-F+<^M>)b=:<^<af@#aN%Kq["8RB&4(+'`e<Kn$L=94?+\abLRBHobPIPepP%=,MnCNE\\"J!3:!gr*K3s/HB68%&t`&jA:a>6m<$6Fbb(%\N*jG7egd+Rm?m%PcFS;`h]g@/qk<%.?%kR>461R:c4td3"CAaiMD98ODQG*OVH4-@Mo!9LkVL2R*VV@2!VAhXp`[sn?86@U7,@#paW<.&^r&Mi+qQh%EJ5AC>o.Y4-d9&P3lrHUdnSkH^G/g;,Gp4?;J4EY^)9g4#Bfs6c0%aHUK#K092S.PEKK*tro[>0q9]PlpKOZ[l]eN5n$.0=9L016%D#O;i2aXIDP%s-HZ%1O*<!aB6#l4B@FPb+!0:76X:#UJQG)O8)^G2@gLrl_A6=S*XI+3Z;BiZDN+eP[N13FU9[KiO@5XG:rVp)fi%EQU*kRSV9OW[D?'=W$2Th9Y>J8Xo:H3'&B+1WKW#K(Y#dBH,*t#cADnM3=W_Qg4.)&\8I5]`r,$RM>uZ,@C@B82c3N"YBFS5jbB/%oRr(Bnu=nQFSA3$224t?Z^^en6j+Y?ik/$-&[;I?05%9=B$m(2TQ"EIT1"L,MFj$*fRE`9>SN.`M@_nfFD6lB&JN7l(1)k^'@?RK%=DH$kGmM*JVX"U)h$B`47M5Nu$-l7$?Y'eR^p;*&MHE\2`Qg4&M8o5<%N0Wf5S[$EjZdN9er_OompBQW%MuAh0aS5rV:kdP)Y*]?%"uYb:SWjsZ^1N^</"2-6^a6'l-=Kc6SG+?m44N!t//"e+T%<Cj9]!9s&W;bs>;_5hT$>TX'"0%_MN33X=<L7JY"@8Q'6Ss8m-=<T%\oGYV2b"(gE<R#A*'@,RK5TH^OZ-t#?RKHsEOT$$>;la1):\C;+d@Hqa#*HAOY]>'mLBTONI*VE_0'6q9n1K2j+s\U5U%)nY90EL%+3D<Gr;!$*pSg*Y@GaOJ\(d.OVdW4N8Tk\)/n3)5@s^!Ki>$cH5a[-[CtrB7n/-*_bV3p>0F4SfT=AlZJ<Am0`a,#_4`4MO"llHQ%ce?B]A8b^L(pE6$niK1HFU)CIUhEu-"_=jW2)1@(&Qd7OVHpA?!T1JKg"$=<<>:2$.@3U]hn%i'M.`Y9(8,SON9/F8bdK-u$FVk0%h?EMVU`/qZOJW+kHhZ,s*NW/O!gRoDa+uqb`4U+'V!el8UM+830T)N?P-<f?Ouut$6@/f%(jXOYK-X4CaI4'<(-f1VJ[`c[do-<5%+@R1T]ne@ohudo+>H]ioneVn"YN`-FFH=LsTU+Jb!XA4n"oqVLgQppIeA?4a>!1&+9#F)<iR4b0UmZiHoG1T?jFJ3p.sG/1W'PH/%HB%+b:e/a7PcDYB&#IcPkg6>bFHiIn8VE>u,*<:tRZi]1*$OORQj5tuM_`TCTZ8'tAm;T0(8pDTWP^]OOu"B[c[jFbU8,+r+bm;,%#c0r1?lQTf<CM_"F>92?TV[`LU8e0[F?q$]nRE0GI]mPPW+/G9do%dGU&MS5l[^m>V]"\pQe4.`'-efG%*9)&f#!NU(<;<s)N_d.%+`a(oM"6;IOoDOR4)r=\eb".P'@_`1nr=Q]NfZHX-!Y.d0uGi]Yc\O[TUgetFYkRWGgGVe44EH.A5pK!F(<RQ^CEs;gbU'h3IC`;%mRe&tVrU3.2b7]:++='4gls#2*8am(.l(QpC_QI9;4\r?)!A#>1!nc%k+<tlo'dI:9W7aJDp5?)Lkuj,PN9N"$h8,:hGh!*3Uo/D%[Bl)i?8EjT/=OT6ZTkoBM2u\$kUeZq_p\;,H:#i;N5N;Tr&I,"Dr%R8>U2a3ACBh-QIhrBiYItedU^e-qJOMMJSs1_&5%tm</R&t%D_1/shI:2"(UYTUAn+1#.$\C#UX5eL.%P`@[\Zki9I`&7;@0TVX3#j_*n(u/qhu[W2bGP(AeapXU_45[Umb8O71teSYr(ifgD3F!%Qk<j?S%uL2iUfCa>J-?X!A[q;3TBTY@NqU%bEh9ZKG4WaW-rAHMHOD8MaGPfLMe8h@52u(#cWWIOE/Qu'_p$LF\361LkXN64H^1I%]E^+>9GoT'"f*MeI#=$^[F@-.&h0F%:b;q[p(O^.H7-Qbek8GjnA[);Eju_?N65B%?&JP`h:H-53RT5$`V5u,CDL5R7@FE]#,7^f%/f[r$iFZ<<Z69fR0rp-[9_HaqKJ%O5o[k6G/>[geRJl.B>4dZI`+j=:/nG[45>7PT>tR[I7,+RK$n[]smLH:Xa2nP8CmC%i;JnK9%1JG>T.()^'e3tK1n0JKM]A4jRl7ET/LM$OJGZkdS>O1![kh(nP;C[BA]qN=<+Q*:D-FY"MT,UW@'U#`J$,'<$\.5Gd>O2r6m,@3"%,^gXd1ZYjSS4WI.(F=b@Te/nIdZ"NV<$(2B;O+NA.!8W*1,cA-9qtbCT>I=N$RQ'<ke%[oV:tT)UTWOQVHrX+VJKn/Rd"3\ap;#t%RNg1l"jU(\cq"+r&E6Xt=i01YgO_h&Zl[(r0?Pk_1bgP8%7_+gd[[n>?D$Q\Lb%3HEnJ(*NgWskBh$Fq\gGOe@f+7$4j7/#+'#"N%`6H)k.8#quUMf/Y5ZG]'l^+#oT-4$[Y.;hBh4Nubo\c[M[HQCJeP$[$DBNCl4'Wo$WE*T8M*KN&B7)]d:"lB=n`PZl'bMpn&jpmg%r=^ot[pDFBZ%b_BNU7CK^8V=KeAA8>j:)QShFPh6MX=4HlPA2#g7nAU>Y\ADg?ao,.eH3udXUr9!oJMZ/,M*#l>4R)BoO'!YE3fn%Z!PU[7W7P((g=d_!2K=.eUWg":B/"^LBa+7;F=eh<$P@%ij9*6N19p_oT^YP"!`!6;jCKYP$`o@$P//+$oM&u7$!46-9)Q_oMPoO%Ts"b#o+_K$j3MDUK]hGWCXb#5p=*=aNnn/uoUQq`f;E2Z6@rmBP%IgYD[*igIF(V1Bj)I\-DRHln%Bdri,KR6nfs9goTIFQ^iC'>%P?]7S4slh?%&,VeF\VJD')C[ne:^369C:UWqHPg#4>U;1QfX5`llE@-JbCj^4`mBVL_C88=I_NCd"Z)ObV#1QOZ.$LMXSW7a<Z`_%\M6:l/M+:X!"lZ!Q<Zmk-?tLYOW!CgA[0`7Q].3BikTdoHr/3MQJ_&$jGCcV;>T1k?q1gd9O`KPh9Ru<YD;q2+t%S/DTUtGP"l"E%YfRUVP'F$lZ:N!8ltHS]?)aE_]tHp;/r=8+/Oi"DVHjXcDl9iDNr%&pD,+`lfKhr+r1=W9*[KF?;qIOooopjT$@GL";<f*$->OlO%7VLi]fYEUHFn4)&,]"g[[7KN"XMbI%0uudEQ09XbWORtSnn.\q*=1O@GqY8W8E/+rlE0NpAMGm:L^Bc2Mj];6eU3^B4t[9H-c&su%%Ps1.Lpi<sXM%T]B;Ap[$,^d.GeQ9,]8]D3X-/\QKuClV<Whp]P"ml7RPA2t2h`I\[$nIcYBR!X)PMFJE\ls+qEU3U(3Btoa\05#%G\st")1JcuYjnOR(N5eU<0D>n5XZ,OpQ-MZ1&UZ\?83J2FJW-)j9M9h4YF4tWp>PX[mZ[T]!QXS7LKk8bq'EJq53#WbNmK*Fee/4%V&03mRk`DmP+Ag^!*P-bL.E7/J7'pnWKa-04GNtl]6HCW>7sup*AHh^7UpF%[iM>RC5XPUNa,e]IcN,08d7U/D\.KHj'iDnos!'Z%#&]^$)3dG`?@GG$((Z(,?NCPTdJihGo5FZhO"bBO38f5e((Mr:[c2U]^ku`THCpQ_$Y]ofP_mB/di^X_#BX3J^6YYD.Z<,/3\hsL%q!3uNZ!DH^X_/'e)5>&0eg1SaCL_$qh`b>)m^U<K,uicUL71`5-u11(HQD;_`"V@dT:PtO=IU)!EasHj5,VpI%[0)8#r3]6b*>Hu%&!c275/5F#lOXY1PduMm:o9CnG)?P1>XUtR6j1Mr)OH9dOFKo['&mf$16YF!J2b)^,D_$B5.H:@eQ76-Yk5V(O:[mh]Hm]l8H.[6%qsUu$951[Y+j`8>p[D'P+,t+DiJ:-_Ll$dMYHh'W77't`cH@X\3+1>t6j0MA.Q0[_TOYVjg`dpd-6aEc&V291<E<X=iqI+XLZOH4%ngc>,NWL<^D%V?un^1GM&]!VWfHLAREfDS"LHj4#-Th7tcA%od3Dttm=d;8b&]g$iHW]gA56kdE!adQsW/(^%][GJg5CQDR=VhZ`%=5HH/QF\ndX`1KBD\E[$Eqs+i((]>@;uPDTJ%[]<:Cn%3J)<S'fddaM%mZ"e8L>L-Xn4"_WlDUu&khi:O`9U9@SX9X/4g0V_6R=/%5@NMTMe)@2BhRH`:JdC1rdA6MDXiUq+L!]V-,+]q>oE2bq;ZNZ$f1N2(8C8GO%reR%Ll!-L<l#H&$[Itokk/0$c>I"2_`1'IYApS%rB7(A(MQ"!_N(#b]1M&;aPEZ^?j^i#\<e+_k\3a\)@r_7Y;Z;*N<`C,PK('\]NO9!<#]U8aRdXppHnaibn?%m=i/]KikZ7NbUd2c%NUM;)H/lX-S2VK[.rn(a/R_0)&pDJM@3^g0O_Mc(Gd&*+ge/N)HlKql3$&Le9cW&Fn0X066[09bK-C/.[LV;Aej.Ep&-fS86`D5f%OKnU\TA&D\m)H>L's\)%`%H>^M#1IO$Z^K9M^"cMX*82I.mq$.gb$PhP`h-U5i<JLn6*=]!=U-V3MpM^ho+Rc!uNHgW*E)ZWkm%!%!4R,A^83oVk0>TEp%kgnbje_-\`lX',sb:akn&"MLQqL4%7)<u,?]<b0Vg@N-hbhGUur/'dVH2f23DBHj6:GP,(24%CsjP@dYZX'%\_BTf8\<M<n%7'T[VaF%X;f"%a_(t:s.ETE.l,645GuTsT?sNBC,^Olo[18kRX?ot6ao!2</X/UqiuOH*mGfObnk#OQ^[2"o85Hc%^#%,a!.7Q:[KC(?>W?>s9jVKlHWTje[htPRnNi)ulXk]b/?G20N4eY1"Uckj@Y+1t%&84bK.tQW']HhsG^t/F$s_Z'eGUa!Qm6L!%D(I=,AP\%%Y[DuAAd0*(i%g&F5"#2n@56b5$Vp6N$:,3'*lh`?JRWH]_@/,+k"dZ5/7N4ArL+=%b2&fN5\ub0_VK*g[K4jMB78+I%]6bf=cfth8)C`#'p/`OqjbC!qZDDsc<t:lYV5bgPMeo5`neL9E2\VrZn<mBNno3M!TesoT,gjc&<J/64%A7-:!K1`rfY-2F(.WA*%bnHsa(^S%2;DZ_m,0*BH!L't4$NW^R'jm*h7=@an3\LZb.c'0tVTnN<HI8oS7)EoslX'6.?pjTPd>JPp2>*ma+`$uK9^+I)_5sUS%.TV&MoV.//?A-PbN:S"\,0*A1Ej#&+qdhJp_?q0(-,3(^9+bWZOX%"F3G*RL>$@[KK^jPq;_LJ#o[<#-C/%,b0>_DrFQu;frgLDB%H4`1h)OBVV9_bbXAU;b-ffCP!72?q?ih:YN+nFeFSXi2r?kNqTZI=E5B&tAZE_.7I&V>(FjSuEnDqh[28$_uCoagqr,^A5qIEP;K%_A#PVPdj?ADlC%AmKVgRVQ3m[pj7%?\9cETLiXUUQ#pceZ#$<kiG^b#*"eg.@cFAZ2TSbW_0^p*M-8FBMUg/3NO]f\5NfH>3nP_q%m1;HT)<d:bHl"-uj:-HJ9`;gBo)lonR!6)%EX=IJpX\tZ5K%%Y'*hbn=4-m68,F4i0d3H>G=as:VT)V%_JA[T2QDLQBHO:T(?s!=%bd;:;bpB1p1^=kgW6D.ZV%8U]V#-3]c\1D6[TU;]@TF^#D<u#Y='lh$DMS3b<>$]I;tG0EHgl(K9;n(91t!]6Q0-;L'M*IPmng-$%V(MfZ[&/*`*ej'n9h@>_;R81?@[-GT6_^.Ca8>Y_fX+RnV8;^)1Ice1)R%CUKd`jSagjHU30ru:[L+7Ini$*u!Mo1b<VW[,iODlT%[:q06O^[Fo<oML/n,"*?@C@6C>o:su7EORGjkhqeT+U,ZL`8s<9KYNnj7t)#IC?4_66BI"0Y5#THfi#WPk9pVi]KGei;%pAc\FIN%?LkPEMV.%+p,/@ia2n,r0kIhcXhpH$;go\7LPmdW%QMpm+#!SFSEX6=mEG4[en^+"g,57&'&>;iU)U`kH!;uM%:N#p>XUO3+?.t?%75ougFG$4KBhX8U)\DNTp-fmgdOHisC$+h3eMUI<Mf*JDSJFOZ75m8dDQE!`=CO[2Z\LP"=?8BMDXO`/F=S9RFm&kK32g0j$;8o0%biSF+e#Lagf$(IHj>6XJXm<kZ/9bC#hEXpo;9PXs=m87rSf6oU\)GtRRG%_2FJWNd=]%"8@mZ9;Q$H*s!7#0N:5]oZf`[=KngX+B%;_7c%28];4"N,lqjYUL?_Kk9k08h1)]gPd`)(kQ`\^\%OG#tR^)*#SA>$MaV97<gL<k-1lLp)b3Fe)#M9J4f@p?m;I)[Xfb/0:W)%ISX-V<]dl3&!\7SF&qR_ZqLk\.J<>4[Vn_gmC.LjC<YQ`FR!(TkjZ\]5T82S'.SP"8e!+H30oET..RlFDC&hXa&U%DOI_*H/nR:G%\s1*sOD2OTI=`E7G'/k+Q7NeL3`Wrh+C`jgqIVW+Wm_BXG,?IlnS.\iSsJTp=k5ADmZfpWWW#aV;%m=B.RK@TISi.&"1&)pTgO/b%l7f!g\[kq[rNsnI<7@0rI\6lX#ARXiTJDW/@S`R2d4669QkhLDC8p$Z'^S)UQ@U2"W!pIhjo^n=?WALQ&*[@t`h`4uD5k7gWDsPg%'_B1C`o'^=<<,o6kr33f>.gIaO4`hUD_M<?9cI`:&XCHr%^<[Nd^We$PJH4aI8`m$Q?gfUE<C,6BC>jMHbTc\r`Hm%E!#cF+#/^j%*Jp0cOW4RaH?IJ'6<*6"HmHp_Q)=?ee)cZF[7q>%\qMi2QjuMU<=AL@k2nouIUsr+>:e<YX45_h0t2m+eN:iHKF:6_+f!'Jn[D[$%J4RJm0G+A-@FIl[1F$aiBnG,2\6rblAAtOZ7I*s=jNRnJKY7J*,tqDLq:chdVMMKg9()J'C4c46nO8'Ufo\O4B?KoI,Z.ouddjjq%YS*LGrocEbMe`#OU`[=2LlV5QXW6KtLo1$RaW:%s;tp<#<&'j!r8m,/QiCkXp)uHDY)?d[F-d<.MKZfcFQ@feq5`Z"l^&d+fe4g_%q4:(0e0klt]JsotF]8$9c-pV1o(2Ru2tOsM,aNMp0^:;/9DLNk'/db/CpMop2SHS[]l*-7VKr$g?[gj\3QFla'PWN/8oU_el#2?I%`0+-0;ak3K1U,#'i&nH\Y%+Z)p3mBVprDUKs"0BjX26&anV$>+],E@Yh`CGhDe3m>CQ9ndh&mS'Kh<(41lcrioeqY/)5RlP@rI&Q%d9S@JRlna&l8a$Eeb%cg92)s>NEDPO^;lQUNo58OPG@8<OSAO>cU767i>thc"KGBO_-!Y#FR2GTrjV(lKcd\8DZ\:k`<#^2!g*M!%2n]pbD!Yu-0?"pHE++]h=ooEF96,l.I'SGtJuq&XXT1+Ua;[tZ;;:1kh_J.==5iK?\63%LI8hKi)J>0]W75Jb`p4@SiG!d+#HLdm%;%H3qf-08^H?NS6ORXHYdYEg],t%$G;U7)_/>At>e]mVI6U!`/=&CH,7U,^Q5-nU+9)-J>)7a8R4ok7;P/*9C^k5N\'TiutfHjB#%_-)*+%69RUDA]^gS2,%AFNr_e7$Hc$Ll>R7'W%ngdEqX8,nkGjC+\(*csOLRqBCYZ+V$XK"F'+:F*B#h<J=Nm%RFcf((1+aF*-L.%0G8CL>ZN<X$$2WbiH*K`+[:I("I;(P`SiB8*of=a5-%pB#.jl`a&[77WanV%qV(-YR0keX\5TAL+h'uJ'uc5p^iHoqfIh%r)s/Y\%jVK)&-=JN9JM3hcAREO:6qA.KN@4t6T+[X+;Ib(=BZ,?"lo\%:-t.pV?Z9VOK7\??FoC#@c@:]7/ihMFZQXH9W<7/_56mn^6&M?[%gTfq!n_*XmdGu;`'BhL$H>6p+H:mOe01+iYIOk'7cmd75K$B9JWu0CfED3Bo)ASE8!X-TAAis9?N!SPOVWD?7O&Y<W`u4eB904oj%KpYgQ$lc/c/@;frH;?MVQZ%edMd'74L!YLYjE,"oJDiq[f)XI%@p+GCfmN[]hI/UG@LJA(k2``Nb][>"_a`GWa+62@4msbs1YTQ\%\jKBNUf)tQP.8Qt3>)CRf''o6YYuL[3YX`k.6_h'2I.1E169ccV*[A5;m_bW_[BB[B-25J^QlgoD@&Ddc)0j<Y/_2,X;D=&Q]><V%J\i&Vi)'hl;Knf@#%:[H^Ac%^*1QL[]eUWr'krD`'Zg./gWhNQrEbW<\A3?$@]^6IMZB:(QJij/Z1PODZ7-(\9W61WdH"b(lo^NG%+5.GV%7NXlkb$/SN^0smn7,7jMI]lQ7[`.a1&IZp*#!$b_C3KLMt(jP@Z`H5p'#%:SlY1uDZ-aL&_FT&'Mg5=i'@i.`?@DgVrXqE%j`$/3O>rdu,mRifptT0gZ]M=sdlMP!pk,PFZONJ2UE:\F0MmQ8H(S9?.Z6O3+YD(hM\9GUYlk?t<JdoaP[]"L+u"?G3R2XJgO4Gp%lkBuVQXJPlJ"`u;oFQ[4M)4EZ*KV?7Ft?)W]RZajk*?S82<=XdJYqDrrQ5t/Fpd2/4R3LNBSM4pM)oW;'4l944VFZ!#T=C>:=P=D%6;K)^3pDGQ(&3[YCW/iE5SsJ'+/6ld6?S7aT-G1'>V>aqYigo6iTH+9[DkNUHXU\hI&@:$SKJI:PPmQ3j<Bk@&":dO+2!e')m>#Y%h,tdST!$u*,\ke[fo^iUCMhttYp9_Qr7k^=O*4B/*k>Q:M*.Y=0KE\=e11it(\qD?RU\?pOL`Pp3A#rH'^\F#SJ"QB^\52%J[7V+%hF+a6F.k6R_Keq&\lC$r_Of$m"9h'THn[k`:OX1Xm&OfV=.2CISep*Kk^]X;S_,H$i3`E3A/O^%n<m-+MicA@.Vp6T&<ru,BB-QQ%!#C@El/tQ%)I\31lsjIRLZIN#f\^D@T9m+nI\'.GSSNLCg`N-]]64f!)=12_r;iZN8YGYFMEFLX/B["$S[&u5[*iUD^^J-kI$'*W%bPB]lE`<e&F9;W7Hg>qZ0:6Wb@RW]hH"O9(grW(g*o"a,YI$^5R`X5dW_1cIhn\TjOGe$b@O<\l#$s">XMD9tc?h*#CWt*Fp2'o@%X^BZ`<VP\]?81`XCL07N8R-'NN10Vf/cn,DmEDC:Z0k%JLZFCd)u.)ODWjLQEU7rU'5OA_(<1!$PP38CcL#f3aVMl-Qt%M/ZL?K_%:5EgsHr%7mCuN0O$WE<lb02B>.4Z52kc0T!;I.KR^4ufI9q3nqPCeg4-1+hDD]Wu\?&Us$2eFPIWtrKo0rM?q,O])Lba@M((^Nh[%^5Y,V>:Xt@^Fr[FaJFPd2]t>5XdHcE.RabkBo3J5m-O%++pWBt9'K7rM@'cM'?DM=9MdAr(81E5X('F,T@@n\&Wu>s;q^B'9B!R?%hacA\Gm7hX^(W#dR)paongS/nVZa^/r)bXu"]@78`ft.W8f$ZFEi2#k:8L_-%cqFV,-ZZ?lKQO"SZ5j-j@+`)>Y.D40oYoV]jq24%&fr`j;8GoW4VM&9A]:H[#*6sKga*Y:?rJ;#Pp/D8S8u1b?j;W@AAjRo&!$C_q]8gj(GWW3k#I!fV(aDH$:mFhN%d-$cCNeKWG)C-%6D&![q)plC<Fq&*dDd#WJBTX*dg6bqZC)C5H@FYr3*i]0:t9Wco`@df]QAuHG`.+uTj<.Zm*m_M7GfQtKp3nuSE]7S`+T^YWe<8T%7H-LmO=>*s0Ijt\^M5I82[hMRZ@6BOco5fT9k8OIV?U1B-+PZ(Y>_,IrY'+(5"V,rA&q\bVZ[,-2E/=Vm*+dcYW**LQ:)L'QY4C$%MRPt0:6f+TAfQ.E/@T;8n$&bf=0sb>q6Sj2%sn%_bbt%HJ$s\4@Y@k8b5$s/4`?um'//a]nPdZ'/#TE)+_)Ip"Y']EKZY`]P&AnQ%_RD7[I'VHtSOf!6&d4?<#uSmD,&Xpte%=h-(gl;_-JbDG[::q"[tpj_cVs5+rk;'hHF;K"4AN/?aXMBVHcrEn`.6hlKm\d.9k+#g%W<,NUkiich,YkUtrBMSA-iFUW>9(k1Lt*^;YPAl"r%&SojUeImZ9ZGR(.]ES)3[Fh(=a<b>H.14,P.M<M)/6`Zq45j35^7\^#dET%<i.uVNAIY0+n@V10H56R(9E*"\@+hu_esC>53Zf^\\c[sN7]!`R%7YcA!k:SL'\E7&8,)s&kssM@<Ic5DK1D><l@OBB37Xi$k(;)%YZ`<5FrX;NYH9&hTCcFML+$%rDULl\!!4,%6gTfN625s(lg<i+<n=Q)?e=a]%[0=KE^V@_LB#.kdh9`?Kcd:QdBSP^!6X_eO9]h'%l69_#I[)!D`P_G]aTOA^pXQb0<UkdAdYtnA]>d7=k!8gTWVUDc.":cCT=5oVo/;HYAo\6g5MBX<TpTXY'eONsf#d&!CP9m8a[WXY%DNNa8fb21gAK;dIPEj6[I"6U[?WBV4M0Rk+rDcTC^\Q(!gFpTh=)ehCiRi.P@mfnD$Q<*a&2"=_r)4#JHsZOX*sL%Qq7^[_=a4e;%K((E,%[V=Z>E=@i5`@[\bR7mD/e#%m_]<hC1>#TA9M*mjnJpg4dZ8EFr&fFM,b2LSrQ9gD0Zr"*-$R9h*V=V0#@Cu"$bPiVNTjdW%dQ#$Yd?4"iUepnopX^tGDu]D"p<3L1Ku3.s7M#-VJq)i1Aia9JI!0-^BNqH"oX8ZGeOS4nCU$]aBMp$]W8=Of'mu_56WW.'nf&CF%(O\f>VQ1NXCR(co=,kPa;u!r'qeHu4[t"4!qrKmuYYl=J9:i(Z.<6"&;O]uB@F-g'0c3abR49]Y\nR)6-(m?Fn@cr#I>n<s*bg0[%ll"H+Et9AHGZBB&2m#5-roW5o55t?I+$ShJJ+?Bbr8h9V#hSG%F\rTWb#_1*E_s/D.RIIWVk%]keBn;\BBU3P)Q;HV5&].2,oTD)%>=78r1'\";8iV37]eN/MWJHOd7gU&c`p/XEM0adTG$V)n'k;!_[ap.HWn.u$O:4YOja#=i2=0]V+X7;FN/Ru'YDcJ,J.=sKiZk3,%FH>$Cds!s0>[/!%3P4Fad8G?'-7qNF:&o*qI;1XY2Mi.OUi'G;:$e&<*47&PTUrh^O&FhSCp(ALGTWN&659VLSS=\1Ua&7aZMN?<%f#1'_1!5])ofOU^;IJ*NX%7sc0KUE%dL+q_L&Oul@DF7'>1*LtR7"Vi0k#=oO8r!=-aaZC,`449IP:qq#.i`G1"(t'1=6_i+A,@J%3KpZIf)g#0LF2`S%H8PkKfb-$c\*V@ZRNS=@Rc@R8cr(gLM6o/#P=t<$3UQG`fjbj\p%9Q<^N;2ba5Li]<)=H:O1=cb1J.G5_-59%!+KDHHkJm#O9`gRSU2rmkDI[e#maZ]!8J.=e;9),&0)AYg9u&h(&=*a^n-c_fa*_>%_e#2R1bMCEAJ+sHX%E\%Y8h?jh;@n-g>(e%BDWQI9S\ofc)Xq`1W_E'EN`]hod'spAOeQQkLO[Q-:&&jn24fEO<RS8gp,A4-;blQTM6+HYCI2N!@g,18*tRL2&m'M_3B+@K8#tj%\^\u-9tT\8JOi65ll&9-IrJkq'-\bA[(u7@q7[t<bA^$8,[]<iEn4c[(O[KsEaeMQ^4e/TLsUY@S\:jT],3NK^7ZE:8/:<\c]=#^%Nc(u?6LYj:-0osq?:CP,,DI8<$`;(/,4R=1@MN<iJ@'qV@1hlt68j,/o(fOu*UbN+qA_:5'H$2Di$h,r#NAAK>REA+>mER:!RdCC%$"VR'>S4kb4=l+k!bm`,.S)NFkIsd0.JB<d?I89q;\^>peLE_DZSEc*+A!E?)u%?tU!ko4*EiZm61:_o-<-'@^'<%KEI?O>i[iH*%aAX,J,=r'.'V^%%!uGr8UQeIYKbTB@bH?2OH4M-eo!4[,KM-^:RS-?a,Q^<'6DrGC+]7jkL;HOVh1>m)1"#5<R-j@fkPY!#=>pC9%Ap&!WU$iF`F^[P(or"0,/sj0<fOfHc"lj)bo^3n<3KXh#mXXZe&\ocL+:?=t80SEC3SBKgLG=`XSg(-4Qo'IRq:+0'(GQZd'MFX5%LKs_eZ2HN854%`2,n#OlZcBd4@)@;3LBcbM`R83=p*&,@*L>u6%<24Yb^5oG^11jX';c.nA:8f2)G;QG(N:M`j&-6XrDrLkg2uBZ%oI3B?\8)5S]RW@jb/A>rUtm3.J8)TCf\`$Q$]%kARu$UJnD&#Zacjcn/TeKC.7j0ECCr^QO=d=_AI_Fsl,O:.;7<e6_a-Ktd7ZIm%bZIDn9R_-`"A>Ynf=f'EB?rs-eZgU?ZoNYb.!Z3P5%3r^JRFiX4X%sAN?sO,)V71sI"MCn#V>YkB))YZV(h(OKTtO:e>&J-ab&p3%F9&hHe^W91L,$WWFFQ-lKG^PS]I/PjR^r^Vf,ck6n2iBt1[*5[.F5a3lV1/_319grEeCYrH;r;^jKj4Jk!)Ilr3MmfR3Y2<l_/B*%"$@Orb#kM&#sGe/O.]Ts^bnq\_@5S[dZ&+Zfscd-6lefbME.(MC_J00p6(2^MZgpqGpU9-P6.4?.Wqj'0;P7tDQ?]3NEEW-1//NS%+7fUu!K_>ndXr4\#<@7#-[]&<2bTF>$-XL.Q\P:qH0Us2=`SUnc\s`>_j[e^E=6dDTdh(=#]gq+Tq)[@asH<1/]l/6D$E^1&Vq(:%=*0LaKLMf#4JJH4_jY-3IB=>.XRk_aC"Pi<6l"0FmO6YcjM;s#([ka;lpM.oZHdK1;(QjiBqE"B9F(C9=;Sk'44,sS/a>aOdu0r]%5i`,@c#5(3,b?t,.V40i^?`G@:$TPh>pD4e`_-F3eb>A6g,.#FqOVIq]G.^_9VR3+E((snll&$MOZGnr^jpe:4W!=HZr`)2mkCA"%@?QQMb_<+49K7lYAZSI.H/;k?Obop\.>3)_.5aBO@O`Es+\(3l)KJ51Vfr`j3j4Cs:_D6$HqaXH:M?*-:`;sXlfL7:cud)TLd1rc%e;b8hdt[]3IM-Wn2sr6_LB;c@@*m:LKO@.DR2^/lNS:Wa6.]"-:-12P:9*.u0BE**L;&`:Ypqa3dYPYJCOTirafAkno&SHsDr3C:%BC'VKHPlWRA[!#g4Ks83G87knWR?J1RJ-rgSlK::1;#HY_^#\GaQ;ZZqU8+!6-peJI9=5=b\r#!CZ"5srMBJNr%%Kb=I0[iYu+/1%3k6<]WU,\#:>T18L24ta>7j;Y]QhLMZ``f>Huq=Kb#.1XF>-<5r*:1h(_,sh,D_=T1&2\VOu5Y1aE/J!V2Cj[f`#Ep?(V<n+C2]e%jR'q3L`nC_$YHJ!VXk;hl!.o)2pF!u%?1CH^/jSg*-!+$n2#CURKb[t*4#BXkl?C\Ni+\4R3</$rF:nX%_+'EdZ!]&CGjs,I1[E>%#^9^!7Nf*uKhf6BEliFW/^7Rco'[@V<_7gfB$7T:G7qr&),oEL?DNfhPf=7t]pFGm3hLudZOBm?g12H"F]1W,Qm"[Y&m"&pM3b;-%gG9^ibug-cm:&Ur/0m54gapMK"qAl?W=feqA:;V&NK3Ut.0Pp$He'P0^fZO`6l+.7H/,K%(<78hT7]ZR*Mrj.l?T-dQ71DOhI28@%s";t8Ha@BrbQL,@=nW\^bHPWr/g6Pkl-E>\Yh)Trs*sBjX7<E(8IsYcNaG2tg:7YY$eI<jR&9!$j&7.f:A7DF,+hpgW9ErH93l)G%d)Y?3,iaREU4>Wpa1>ffJaHNj1I7.C*:c6%0!#?D?2p_8@$DRum1$N>4DO4VQ`2mGKDp-5$_FgHnff8$nrGEo*1@Xc?C,)@]FYJl%_=tX0?E-O!6Niap<@`UuQ_@>'^COa!SU#F67*6N(OJeLH6q43M82#,YoTV&BbkhK-$t-Z(O8"?.Z*6$&$"M*fd0>)3m+MkQ!_^mb%+B;Ms1pfnD.mq[g;tN)Le>_ub]cdW8V41bpMVE)bW(W)UoJo?(5>nDl<#U\'oR1hQDO)/S\$p?-L0KAA(soIH,ZKSE8"/OF\eq%d%[uF9VDVk*:O994PNpS#6V1oIOmC,bF&K/'$b"I#p]qt1m9>M`3m^]Xdi9C:'^`hZ43db"N)5[9>O;s+V(SdpKdgHnMaaY;iCrpYr%f+4b']dRi9)H5FqkDD"UTj[7Im\(t90VA:B<n.ESNX_,t?Q%VKQNS1%FS_AP(W5!2YCU)+<=dki8eTr%]0(%8&-`/`HmC7c9;_Fm%cipYE34^I5AX&CpG]86$P3\;;V:=_]cib`,qc=lcD<=a#eS*<JFuCL_3pMLO;bZYj5T5iR@@'9jbO;jQ#D.7;S2*]^cb%-\INP3N%7:\3Jmj@$s1$f]<1,\,ITP&uhH)[e\6VSLo]k$K;b+<<d1BbQOaba-?06@<@"PkpI;\\McopW_008VA+6`f$?:U)Ol:\!7=gAka.%@E'SH[K&)1P%2h]m$`Ic:tZVjU2$b^9CUk58apK4Sf(08jth==fou\6fSd8)Hhjk(`C@erGNuV]a"BF4$3UF"!<V0GS$E_UO/_[6%1D*>;&>rEh-ih*acA7,^;:.Tl&sbMsWMsiTYq?PU?5ZZJ$*B%=gK/!E.plICUh<Q]_]fq(<sKRS[cho5i^03[F&&fR\p+j[0q_XH%\$]VJaINX?-Adl42SY'iSI'<.6/Y#H+5;Vh(J^tB&uef6;"?WQ=%s>:k([e$6pE6q'^N&&Cl+jrI3u+dLP3*saVkf@--?WjP`'-m%1J!-;U31siRU!3/"(CH2YpN5g^A%(QK-$P!.jtca60<<N;S743Z/iJ;Uu->X)mW,J.^h'%AuYQg\0;+:Kbi'20/"X)))/IR$s!V1%/,?\X?!25s)p-)BgjZAmn%_:(/)4TYbURLn]8kto96H@2@.p4%m)ulLn!G`TCW4(u!K<^Q((ngc_tL;YT,`GnT#d`RbO_EGUsjGL%ApNGdl4Q6IVF+Z])tkJq+B=Gu8\7@`g9c-tD'/HFQ#cE+B]c^nYN%'L"X^,YmQ@MK*hke$_C0A`>gn7K]8_7u<f2br.T%hhR<:f=%H%$q0*#m7s!T>8!+Ok\sH]ksWh^re<VgVnD4>bgoTNG!#d`FJ.DG&]EpCWnk"eSek_BCO)?\6ZlGt=e5NfoG-G"npeW?n&j&FE\%%QSL.h&]a)S[Oo9<O(5#T@uO+.RJiFMJQuFcM@<"/ZV-W%V!IOo'1NLb6_`)grf45(<-90)[0&EYQ\hS8ab'"Aq#![M#4k+G@Qapr%^raghBkf+!E\E`+L0b.,JE90d9T%*RF[bMSVF.55$;,lWokjd4d*hTjFMg")m^)I`/!gkr(*MchLs4\:=Q>I'%+3Al&r8!:J0?j2%>@P_^+HWYn0i;iqT_E.I0C^ed"^_[54S9B)3(?5_MB1[[qo[P?*#L_k[L5OoANCCE(21d%,#'T;lr!,0=C,hMdRO\&Ib[cqWZT4Q%?-O7sOR.#XFR0S%/g/Bn]5'ZIhXPsjr_,9I-j+af9/H4O9?:ul)$q8A(6#]PV.N89%t75$64qa0aQE"jBdg@<^(2jR[j@X_NO#[d%Andd3"SPOAIbI@a9Tk7'&dIABULuWR>m%P9;4d$Qg1?W6<CIG-eoI`>!]Q48jJ`,g9UnS4MX?S!O@lHg?T)G]n1MnmmG`#O8e$'f%c!>r^mSms\R=5T-7SIig.J@"$m^HhteiPF[FeukU+e&7"JW;_o,/rVD13oFfOA/,&248WP656N'B-MFC&YW]0KN#'96!i2UFf[uU%M!d9g8u#6-r'%j)BPttM1(e9NY([,jb=$%/RS8C`Cb&86\;T\]GqiEMVEi<Q+%6aFY4P,5%O;C'bUN%C3"1YPTFj<K8qHb0aeoMm%/M/sd:.YYq:uG<6rChbK1MZMA]u/\U&F('WK!nI##5=CeZj+Su$gY__Ap'_)m87s8'ZY;7qA$-7f[=6o^"9s8]P^WGR0nJ?5o79>%o8g<35k!?iHbtt=Uj:JM-WmBQc!ksZYqP#"^12CG8/K#EA!0UZ:,<r7n]M)VN;3@n&^Z!3PaPH!DBcB39L_P[)<6#A,USrO%!tS;%7k0g:ljb2*I]RVXA,a2;.Cppl1o'b_FD4jS_%*BSH&lOJr8+$lV5&l"]lmRK`tAi-h)fGL9B5\AORXq$^0CTJKH3B0:^tP<mp3i`%5VF=LLCF!SY!hj-7B+Cq9rT9<oFmtL0rU!Cc'pG50Ku@i4Ef4,H)WV7D<^rUK$deCP]bW9WPVUkL$JOkWO_V\#U%s,LO&qkR41mU%d>@tJQj#Mr$Xd_gG^c5l3uObW?HW03/U\^Df'L:A$MQg.So>JDb1J.gZ`1=r4a4m\4/k#46](i"Qbk76(!Yr4#c,\-">eGG8K&nm%Sh"Ce^2J0ehdJh0a;iEOHFMNM>/44Z&<HDs*LnCXES2Tb8MCGTQLV45V4-NiAFe5uB&p2Z/."uJo!uKPFA5FdJ-D0qAuGn8;q1mI%2JoeidLUdiot.(>!5C/Z>:I;3$e7KbTc2">W!6(G)a[l*)??>Oh)A:8pa6NTXrG/@Qj(o\"*o-g)gE=-lNV;i2-+1tJR&__TcCj-%pR\Se\6/?ZHVt?HGFKn9YYnEQS*U.P*NFYnM.Q_iO^lWm".56Wn!9gg^_t(TKLmsbS`D6/_TfHPN,fl+JW,t.+>D7QltTE(fa[8r%npNj9/kM+ue?0k%Xr9Q,WZn;YTPu?sS7i,2S(a1sr4BsXbF/H*=uY=c/#Cj*dgTXI^nd2*r/@%]J1I[pW,R#)RpHMJn)rlVl%&Ea%-qfEQNX?@(11H]'^d9ggQtci0%n]WV&4kVX2B?o(Kt=o7$I-@=lGBV>GU)at!&HKjC:]g`@5iUS@?Q@TRDW._4)C%p0<WbTAL8J/%_c6/kYpg7rJOm_>8Jd)@"ABf@!`4ptb5],uTaL@("n%p554uG]HtW`qM2KdojoG8#04L)G%amUP`.M>i(B^.H-Qp]5$@MC`j+&o6%bP4R<GsehZ</%&^BDd/AcRB@bk_Q$GhaC>\cZXF8,pM7&7!7Ib\i^O46cd];&.SZ"HB.A:m^%8amlP\ICN9H#EZ'IT]B3jh;MW3G%#/XJ5S3c;]K,s]"\o?Bq%T<sg1R8j^073a*@]fK)4DpH4;_QX5E$N<"-kM3#>@aC$[f&!rPS:F';qY07qTUBFBNK]WV-L?o:`5a3%`UL''3CXb!";DHdS)tF+)"m2e=L@[8n*$[8b7t?1nZD4?fR/U-ZBP-V97T5P2(:@NHkYMl1LiKaKgL/0UsP$]geP,#n;<rHE%Ge]%@<$'mTaZ.uMGceWrF#OSs+uh?>(OFAY(7F[e>:9N3[<bP1M*MGTFj;.Bk(\*mnIk5_J%Y2#fWb+n'7R]j\R6XZZ%nt9NWVOS'3rF%-M+E7Yq#WPN@[Cp%&h-_;8["Y$BmrGO5O[&OI9W-b$[;(/%!?/J@e`1SatS@6%Y\0UF,tn0B)Vkp_-o_B]/P=63gFH^HRVGk(^$O%/(bMlD$OY]Q`?l,O5Z=>okBd!\@1!gA86/.BEb(BlH6Tn^@-FgV/';f2BZT3FLDX>0#k*d+ePLIb0tCU+jT0tj52]%SIoAd*RPg<%>Bk@"`k_*qm5S8rePd)]/-P?$2D;Ir%nUa05_=UnAfMdBaU.5on.ZttAY7tM?n#k?juj.`mS73,_4bs6[[)/_T,LJYGrUmkVoj8Z%pSD&8=@Fd4ZG>aYj4G'Z$kOc!!RbBaJ^0(9mt`qh%202,4VNRLm37!F=#G3`++joSb(-$;s(Ga2+L+Pc`R,&99&VYq+Zk5ck1Omk%#XK8ao]j"11(L*HcNGNu1H*LpHAA>,+=?7]dn*dY9MIh`2EJaShjkt\N:,gI[`K6=@BB9PCJ.W"$"M#jes\c>_fEf"mN!'c(R=/I%ArR.l/JG7)DT&eY4BZ#/Rj(7S$_&jscoNge_78DGorZ;7M3JqQ!7"s4KioOt5DLM&]uNlf96b"V_*CYgN_C`pl[VI(c[CHUUE-<B%63.K0!1D1gOAd2XWWSGmWDc_8p?s^Ri[[Ap,*/u>'I.(2huKh@\q`*NIk#T>cS/P>%8>c@a]Pp5hKsOZ1M(-2l+EEi1Wed?6+U14%KqRn(9H@J+d"0QXDIN[O?$E]5$'&SK2Hmc2@es'iK!63*fQN>\Ak*u87eE.J%2uN1QGq]<1I.1=-?XSi9baH",^nuDkWkThcI5>l%80/8n8IFQ"H)@-qkSYJ:`(:<d*FHd1)?6S)U`$G$Pg<-/\eMh5Agcj"7"GoMM-"roE(Wb5NLr?Ld8ELHg!W1O5b+SZfeJA%o(q_Y%,ZK$[9F%WpZ^#oB_U?f'^e[g$ACEW+Stbq7-r*WQ!W<#;aK*UJ*MD:kBXtr$G2ckuZUm4@^nrdrqD9q[GKe7Um#K9M+bj0-$CP)C%2[o)Gq^PZG+emDoD&C=Ak-4$C[ohWK<7IH*-Wi(p^l4u97bNq+!K*.Ro9cQ"$^`^ckbFaf:auC+4LT9cNf^X)0jP/.OGF.X$j3"@%7S=7C:Bfmjbb&;)(J3No86d2(TN(LsoB@i=4iqhb0doepW6>l$mo'e^C/^E@ZnZ&BM\t\d8Mmu@AWBKuLB-6P9%0OKq=n&G7OiWq%;s@UCknHKU3>N9OK,e?DI\^[PK77#O=Zk=W<H5m2ra-Pl)[d4*-YGLG!In]c[MOR=SP,[$1ar]%!kiq'Vd":!`lO!Ml+1L!+*&[_%Fs;kM7BWM%`=]5(%pZ8gT2f28+aRHpIR=PjOP9=J""(MXN0<o1Og&,UY\<sA/O<^(W#E$h`-Hk58n1N'0>p659s;RtlP:Y+XDLM.%FUK\XfLrG\//f3OZZ7D;'RLs(b[Aib\-eU,W_$GUdP8/jJ\]DP0#nj)is1oQ=J;a%\cn]K90,Kpc^9WeW(b7P]GRF-mi`6.hVuJ8%d6d^5GL?Jg."cX8$l_f:Wk4[#<t=JGGha,[4h$oD(=E18jD[qq';7q1dIcIRc5@VYP.5Y1"hf@.f'KA*Cr`+R_qTrq1?Z5;n%Zo9%09_e%M!D_Q'LQP%_2s>0c2i,+Jt^J"WHng.%5D!o)VH.n,JtK0A8uD_mXXljRY(p;!N6;R9m$s./qO$=$l0Re)Suh`(U836fCZ1O%`oO\*Io_I^NI.8F0"/q,_bGou<-:ac4hNaVarQY>nQXgl\EPX!R-H/^)fp#UN8$%2nK6J9Bak"O_`$8)@Pk#Ep*)sn0sGFH>nfN$%c6=>.+[AKR2A$07\MaO6J0Qt$.TPTL&?0N%l7<M51Kq4,3oTN8*jHkq*u(Cr","_IE76`'PFWE:V*aPA+ho=Z!J\4%ZfQjRZ-4W$%kKPQIXtfor+LDN_7n)AG3k$9)Ke;N,.t)Si;r2-mL5;c68'.TbXlCbX+3=+451Gl9<UA3PctE`2@"B#n%DN-BLEeQ7\iP_FZ(/s_%^5jo2+d&pdd?bA9[(JRGW>Ws@8.C!!YAX4#KR:ISEP(H"*Pi;ARRa.&&3!i:N1<FLk3kHNqVX:\PjVgZ(piRV&``b9?kiu:JP\>f%'Mu,ooN?m'R3J8;<)LfQbG5l1+F7:Z]Z'6m0(.O"4]dGXJR/Wb:#bqYhdn^)ZF_*a6.sm$oOs%9oceNrLJ?Z*4+^a[MKV3<KJFm6%29A=Xp7kDLg9l/BLt=CZ$7V-\+4H(6"+a&"B)HYT$Mg-tiVE#+==9C?$$>pcr;tDE]E5rH&WdA#ZcJ>6[Trs0j(YCn(rI%dpelqA%hZXTpk!]3NNB3KC&3P57J,lI%".sqF.8ki&LOUo,C`8RC),54mV+:Ag+@>.8<'E9D#2Y9e1I9<G@Q*\ZR*JMpQ?()>=OND<.4*.5%-@qO)HY0AY,,]I]H38H;^WL]tE!e.uZ.H_-dX^3.bOgHu4h.B\ACm0+JKZr^giCReWYo.H,d*fXDCec7%!GK[O#!!%\a3dQiZWkG%QrMh;<au:$?A?*<NJ<0[Wp+$_ok<S0.p]g>q6>e1V+LSm3K\tEJW1nIk5tI4<<d3OKCW!BZfO?)$XKH9Q"+4jF_Y845;Vppk82.J%"CQo#k/n&X7+sAGN1B,s&sdj??5`L)*WiNu78GT)<7[W^P1>$G.T2(h[[(BGET[UYi-V6hOqCg]QdOY1Ai+8FaGLOIa';Bg$Y+q_%3),NdVs:MIS4$[+,e;'q.2)&6*LTN"aZUWABs$sM0V>4\IIP_8ne(!4ZrVJ1&Z9?FW_fp0Z52unbD3&-.SBMLm4\^\GP,sCf'>)5%@T13RRNXad*V715"5VCSa,D1C9AY9Lf%@F(l.5bdFX/!)J_=Ihlq:X+5`WsRJiHFaS&`aL&1amVFI6M[?"_bae$i>ugoj$XER':8%"_QPNM#^!`C";iqBf>6/@@a,$r!]tFS2td`fSRh4JCuau5K]@5T;pk'DR$QG.c$-I:GB]f'h<DeYXcL+d/Ar\;g\u)>uR_uNF!,%%mZU8ZBh::IN)G,&9l<MeO\P<cQFAh_r:!QJN_Fm4b6*.m*$bu?Ah;1;Qq$C+_=3%NFH05m#/`'q%-X-6`'<-E[o4hAUe'obo_4M'%!dS_n'+^r[K5X^$:T%1`+qq$1YY(H0'8J?[,&^'T42ns&g7jEKXt=>QP-5!SqJ%4DmL(521:OsJ>fpXtUE5N61,?9nF?I,]0jie@%>:eo$lJ>s`T'C%A`AO8-%\2g"`T5UnYlD>jd5JS)2+\!g!/B4Gjq204"KM9tQP"tQ75`,_hO[r8G`1X\:qm*@W`gNE8r5bN[9:Er%pU"fFc`%=2"u>^TN"c):]]%R'`6FICWPlSH=HUXP;;X?0dkHQ69/TSH7?OVDXCt&jTiJrkU&:nE;DkW`'O"/WcH'Y^\]_sY_):$c%L<-1;&=,q6J*k%r8;heSPtf<@#LY_H)OIdg'pZk;gC>lTR](`"TDmi%1?'6,)1GG,#HS;cL'2NhYdMf<KH5#4/t=h*.Q`RX3I&I&%'+=DM4'5-u,K)sg+q/DVHF4_:&HaiW^i8$rVM^uSD9ml8HVN:&Hpb(>Eoj>>@ns<G1#;XZdLU?\'Oi8)Rl)Fg#nq5VQk*(S7<2q4%@"j*lc8c1gA72s/<qd*I.SN<,K2n-=!^?3%n]",1+Q6Z"mB7[<k$BpH;euS!lc(!(17S'bTkSqYSWN/.RehnH0^*h?qWCG:Yh;NP%OAcjSlEY"=Fi3PkF2Tf%gEs,?q23gecOY<cI>kS`VU>ktIV40s&0;Gd%`Sdp?@j1i0Hr(,=Z;tk3-h5'E%oO)N./'WPj4Dp$A\ru%J`s1_IKV!aPp%._,+ark+qTPRLHf!%B\ssInfdsWpe@?\3C?fLI['3.(MUaT>XQ?ji:@AoH/&spOOu":GNoA%5l,98FO^nI'H.2^%]^JBfTdtd0)[RXPg25B<X_0uei,O^-[$K]5Je5TQW`V##*e<5PBu_oS%d-73gPagXegi3o,C2I>mMR?(JCT[;/cc)MEK6&2j'@IX%20<0;bYU'KH<,VK(]p:UkX7E8T:dY+ABP21*KkYg+\l=<<!p@cW__*0VKfEBJj+&fH1<\C-s#N*iaHTE[V0n*Ec"QN]RdA?a/arD%a.U?P^$Zo,"K:dkI=K)ce2K);ObX-kN'$TDakF\N(iN!8P)e@\#NAaUI4`Fi-#lFeR'QY'a%[X\ZpFY1o];)AcfBM7F@RBXimu'@%(D5n98_<+N1o_tchmH*4OP9:HH,/3X"S>qB]-BE"G@YfDT';WYN/_\b'b63)&nQrRp51r;,O(4.R,*m[L7ATCNu<cPJ1g59B%CoA%P;tA+O+A"9?+V>rXhs(bZ\bG_^*<kpG@Yr2^hk\n3n;6:B&f+8r_Y#1guSG?f;W5F-+P;5jZ6\11ZnQ7&'g3-@!N8')T_C`MbC?c%IS!$/QeO1L@hKn:N!tN.$;EBoqBagWFA35rHKDJ\LFj>(]h?r<Htm4d:+aC>gU:Y=U,*\iT;>J%YEoZb/R1]`;:DM0&NdB?o2?#m%6[R(!Ja\T0.M_.kVe-2p[F"NmAid=:;I&P@WPu?8C,WCs$SVOkg8*i[6<e%'4k-B+]ARdfT]'+P9DB"giOtjeNhfT(0KX(>@TH0Y%[f>:%Gg'0OKkG#a6'N:&L6%XT][t9'f%VC\:Zc'p#)e7h=?3ZaEHbX%0lORI[?;6!T6.2uO$otrltFDun_.p)hg=/N+l"hK1Z&@o%a#cN!UC2jtj5I`)'_0t`I^:L"TV@[#ei5d!C2Sr(Oks*<-W_(U+_1&&3K$DZB2;3<f9]d2G]5@(Tkh`tSTD%b3g*Tm@)h4%?oD4#%dhF(e\[o/O`%r^@9sAk'X6g:MIp7RP2p5/4*GcSH#g(=hX4XU8#UID$o?>m`1t0lF2+9]s1:D2#8#`YkP-`;.OcW9]`IE=>#)^4#%ck?A7@?kWVja5&)"-G^K[4[01*l<m*NF;6>3\7\[r_3?<[X_[XN%2\#AuKJDf4uji[Q#l&JabB]AAm1P0/Z]fF_Du25VV1QXe&uu%G41Wso8fCjfLOtKL.DAI\NNB\6djZW"q1goLM,rK\63=fCSH)fWJR(Lpjm.0/gPmS]M[,_0X8m*,""@:;+K$#"C;;[3W"r.EC<#<%eHEd=l&lrSg9F!h4r21.oI*=7YJ$Xu6d'1<l<`a:BYts*5`rhj4!H!fc#d)U#deE8gU5Xr8kkK,[ZR"u,Rlf=6S^>b6aj8K'`7Tb%/k%32MRW5+E%/^/dSpp#mVuqn@4KM:^<t`bW7hZ2cUNr8)C<_TR=moj4djSnKH[i!1;0KoLe5Tu4I83o^CerKN,tQPrF/u8ma/@E%::81LUI!bcSrG00c%W`bNYt_D&ZK6JhSq\oZ59P_l]!H(DXe1[m&5WaS[29Da[#`*8c&3/4"c=GA3cN0':-4P_I]SC"ETcF@*qtf%TBjp^WSVd.X)QQJE[de'h:6sHh.@cQjsDYUjlCW@I5C[79p*;+0^/Y`ZmtZLS/_S<:H`=gW%c-F@d^p"XR"!&hL!K<+UEMjnGCjR%').df@hJ)ZKB&(Q2P*!jRB.531#KZpb]f,i6#%$D2<RUJAXQSQY=#r20(s#pT^s4;Dt`7kpK2'-^%^Arft@(=0CHN?$ENom,XkQR%SrS*[DDa^Xh=m9OF-rbOkU:QseU9*4E8O=@)(Amh8`N7*#C-ceA/UU,)(%!P>=9Kj]'m<A:YBBc;"tFOd2AscA7lb)IndEgfZ?%>%Z-`OmQ?]<rIS7](MuBRFoE$K_[a7S(A0lmpTcP;,jY"AFI<B61%&.fOUu?tIP0T/G>uorr'Z4i7%Th7u%fru:=bB3UJ6>m]bQX33%Q*YBlYigl]1[p79__Q?i_-ufl%BThEUdhFS?*VnpR';qgj>CVar<.2ZAu^31Ku#`WC+ok/(YWd#AUepql^a/-Z'a.9(lSj[P&>?C%H!3o\N1%,ZRm3&QN"b=XA(80d=h=42X]'RB;_X?a?EC[^b?@F`g[)leUA!TR,\aik>IR_'I]n*RXnLbk-[n)`[21K`E*<I$&>H(]%M"_VJ2[50#(UKt_6fMdV#tp)S58'jEiaT*3h-,bu0i_Yf('?XflGH&*iqjdr`bT6+Kc,g+#9*tJEIjQ&:(L!blBn#cUV<94Hjqs>%nrb49gIu2:;6*c(D$HsXe59@B`iM%1=HQsD,aa:SMufjbV](1J1UAAqAnF9^;Ta?gb)$:9<\Il\$l+33lk\WuC_8^"T"Yo=;Y<jb%M_Qp[kHcVI6m:(_e\3/D0i"*>N7!`iQZ5QDm[/q3QA]-T=A/$NN+t*0kY,"hK/"NpaeK&M+E^WS#n:60N[,-!8/7]XZHQ>_VY4J,%D5d8W-\30rRCP:#AhJP1_lRjn6e1au:I>dOg<-<69+9aCTO[^u@OPRW#0VDJ1$@"a*j5gX7=X'[3;8&8\B$I704N-aP\T3$X#5T,%n!a&/oBF&B:ZGSg>PL&/)LA"k(5tp1VtgKGUIJUkYq%=NZgE]4,K?Zl9k(iL?aj.]J(20L^+j@8!3YHOT.#PY%1UX3?`\&M1RhRJ%H35HL>H/Y5RU_3:^%NJ4#P>^CDj_Q<SWm3?Ti;<A<$2U6B4i`j3kY-fgEQG:e6/EC#[VhUZ:.u;,]jBRRJt*mnN31h.c'0u5>fT"%m-T0BR-RTdUU%'J<lif5]/pJe0bV1hUW,[YHC4sJbEeVP,`gS4dsZI.c9YrdK?nk1U6H,*)u;IuX@#"0[DhJGW^@*:F=;CRfof@/%i$%/4bB<3&COR?!Tihi\+pLG_pQA\^:Pd?%pl-nn;_.tVoiiil3kitpcS.;6"_IrnG/%pAU)go1>n@DWOj)$aCo,FNaq#Mh+\>`H%=R)5Io,[O1=+K'^RlYVY7$o]k#a($[W`(4cr>=ZDjt\*$kT!016jf`bjP+999I:1lA3shX.sdNsR1O\#VPZ26$'A^k9c,&e,(8-D%6tF.OLWb?h_f_@Y-hjJsDj(J01L\Sp4#+U+H$M]0&^?JF:]]K9mF4gnd*#!-7'0b`oI:NSRgR,#A.b:,mRRID9Zh7=.2D01P\u_^%P]tcu_2Oa@Qn]0X0tjKrX,9#a+e)2fab/fa\UU&1aAe#][OK+la8(kY_*C=.%*[cu,ij!L?udA`69c8r%nX,"O\8jN3L9t*4S(<b%JIpJ*`'NMjh+J@cO[HHnBl?.*&]Zl_ZS>r:&#.aWVCN5aSX*M'%)`=d2^6HIiIM:2Vk2gm<b!BIeH[e4gdeDlLLpM%El'!##mmU2%+L'^&`2*Fk72cu*mm^rFbq*c8=L[uKWM:Wsd(R`[#8]ea#6QcG4ME+)1AAV<\GP39dJ=9)frX!aYXf\f)$oNDi4nGA\ERq3Gm(B'%M#%XVRn#ITs$:*=\IZ"*G,/1YptB_r<AT<=*8*[eo=`mo76*d<EVI;bb^C&[S"ba;pVB,MI;jc$5);sN6[e3<Z/K.5p9n!qE@6>c%[3LsQ,:Y94#==HGSr%J/2q156S*#tUXr%PDlTQU17[tR`<:>pEXZTDPY_uDR5'0SZ%+qOhOSN;bT\2=8i,d$KZ?/^67qGJFrBT.>%M/F.M8(WLF%HG$E8pJ_DL&l*Pe_!DO%(<RiA1[9m`1B;giq0#XJ69>+$R:c&_FU'j:&puE442h_bA*cqCFir.p/86\HZ<s1aJ%3h%otkr\hgDPoi&2le@BfNGcs?&d!Vm0O.c*Gd;WCd;:1I+0IpVjZ9@Dbmf"TsRjp6%13gL=5.k;W5J1t#E*5dTG:jRF\L\XEtrI*g+%)?nq;98K)_=f<B#I;l.iV40Z>;o]MYHe2nMEWMfEj9p"#&Kk<"IY+2+<)IC`nX?$q7(1'[n=hARO;"33$`'@?JXL-Wq_#4K`/Z9^%gTi!b2h+/qTUM1sZQtY%/4l4TQCoC@)$j.7.7bBZ\Xn.[kS#_kg_8//0SUUiNT>)c%-_$#Rti3XX&?h,Wc['8Y,/6T)Z[=c!*hJ<%'XEjG_GHn,-b2T<,T8P`]AAc!m?B3,kDK()JF.YIn$0N^&2.uB5Jc?^jI"bg3.OoUD&gX%+;cG39l3BQ"W",A.QPd>ii\M"moRa)%*L?.df7aY_65QQo"ll"N2agW%ZO">CQ31`ls"o8W>cOhTJK7l$U1[M7G%alF]I:rs^aH;7FhVfD(jhcVluuD*2,>eJ(?@bWXc)SF%aYusH@(#:uS>R-<DJ,h>mm7Rt>J1gQ1pcQ?fErmaXb>qI"69O3rkm@A31!-(k`Y`-7B%L?R+`/eMs'*jrk?<sCt7p[#+`dJ1]Ku9%ppr0\9B,J,cEa\L=uOJZ)heiLTH&g-'04T&W\"._$c_1/g-UcIM[/D'1!&@*e63ND8*B#X/1`sh'rCi?b2RuBF(Q1p&Q,72bi0F0%=aXVsin=&N"h3EKeY=\66Qb>n#3OJgZ1pS9`@">^4?C4&j32&m;\6m"0(jpC$@Q"iM[+:H^9ID,APa0BG@^:!&,G,_po"8r@MqDM%_&'!Xm*i"kcAk%$#&g/o*Z%]*Yh)Trie-_B5O`o?s$?#ird/WKM!jGeIs]Sf^\L`Ur:_:h3jrC,rmsA,YPrqBlJGifE..KW@O\4b%\^Xp6@O'SJ*"jpUle""tEE!G-)-%,lh6cnRpm[>Zq"WmiJ,#BqrlID'nX"`FIJr'f3Y\XtliPi#"1H/6U5+.1)"L5@8-3;&K-(*9%H&3[E.XYGMZ\i+fV'?cs_;'W-EN'Y(a^&Ns)nI;aN&35/k^aADh80:>k'Hh@egukb_CEIETeW,QK1>]1ra]*>MlIfnPS"B8a@[Ve%CV;^22\Z74T#n,G/:-tIWB<6gT+F2D9]\r!ShQsOiAZLEYm8.%)AUq?7c+;6B/M8^.b-r!1DmV<r.'("[;@6CGd(L;0044A\RNol%!.nj5SbGsST8-CYk,I6*n2ar6^kC[_ca>I&cFlfq$:5b@N"+`5*PiT)`8sXgL87:(9?3Q>7BXP@EK#oH[sXW_+C,F<jt&eV(O=GC%.:J1EKcqEASiUoTi70p_FU1poEMZPm*bUB@-Njo]kGe+gX(#X/lX\)l8EF[Y4l)2&52"2#e]if\j-kA]I<]@u_+/.=hcKo2&b#Th%h2VpP,Ua\95uoWV41rg0O9kN9*qQU37#NmlB4"7-&5apB;NHIH>^^[*"M,mf21\b!,m%VC;Ii9B7O@4+(.h"mmhG_6.Q&MIZ;A^n%CW(FXSCkr>Xi+tTJNYe)FQToU""!XPQg&g0\>mC;Ng1:q(uBXM+^t#q8uA^X?`drJ7-%!LdpB&jJ+L`5_#\Imn\)t;+'d5\l#q$u%N10Ab:_>n5HqOGV,U<X-TinuJ%SEl0iJQYAQ1D,QV5r?D5PRDHIDaWM/[/<r\g0m8+6_`+FG)iJD5B-1b[n.dMEtj30UX0cD@ijN%aWUeW*JN<[rhLY\7Ya.i6>E_hTm/$j0C:@tQ)'pC"GI(9lY*kck9Vq,7!4g\HM.l^EScEmB8pJJ]WY;KDBBd-jr,OI0Rb4^"+%CK%MCWRY0GP]l!bXNF:[Gs\*IFsANbE2]_7$=UfQIb5G1[D%'>I0A]k)JN'MR2]Q5X3]j,$nC!F?Uf]^-%09PiHU@*af-R7>(gWV;Km%f9i$H8FOO-*:enTAniY-b7HIT!2,W)NTHC@^rqNEEIUZY%e2dbdTR_1kn576l7&TcCSd]L3G3etamTt4.KhqCV!lGF9bg^_(lH&E%:fs_sXR/7h-:4V'j7H)=#f7c9Y=VjZ5u1/8Z0^sYm]Hp>35i'RQ+F+M?!-n'?WR;qW5T6_G^fQu[Bd2j?38Y&YjqG8djF/M8,]kJ%oj(O]Jd)D1-8\[U.gn*_XT8`D')!1pd1SuI(4-RJ$b'%I'3(Et%M`0U`f?Z<olXD,:<FtO_L.Z`+FDdYeJ3^?Z3j<3gHlF%J]fRB%XL&b!%(Y,DXecR2Hmm_O>na2\jFF0NmrU2#?R6s24+ZU;?Rr!XlX[rMH4TDQTJa^P=aZ9!eP3.(5CqIJD`-E,+d:LbD8ubci3gY/%nh*T;5\<s_I2!t.M5cUE>m,3u6V!g81_ISf*dMY'BY'hSkaCVd9,\mqGlj;olOMlrlEO*kO88YkRCGltegW^iRg]t!Yf`I:'dc;1%26+=!!`HMp#R$@=,[ah+"d-7884?CAO`PH=el)tu]A.7/N9f8%QaB)4b'>2o0(fDikR9VBk=)\`cOFH2d-`R)4+qObNS$[hX!=uQ%PHVDT3>VsC5@bQar"Onmod]^]F_J+&oSmo[41EJ&9+A/ebFu<9(#c,Boc,Ie-ZOr:MF]b'V%)R/@iuUf(FD[:K/g,&5:U;(psfX)%?CZ3(d(rZ_WA5qHC<$[glPOYXG$c!pM4bBTc/>?RlQ03A_'C.P-+=Wa"c$07MD?Q=f#0s7/9:MdR^%WgA8&$H$O=&B1D&'jjn8@G%l=0LrqoV4#O*117!a09=S1$cE2/sAQK8=>22d4%O%j1-7*f+p2'U-_AeCIU]dLDY,Nb=0r"iW)hhT*u,-oN>m,c6bH1a*1@,$dg(%%6cRrH79-WH9\1hSk.Dt/*ZnM6gIl9SFF8gOVJUcR$p>cbic1$'#f.\gW9jKWR)gf7\QV;ERIWsfp!2dROU6i8Wb`;pGhO6E=]UY%Frh8Ep_F2_7:<!gTLiG#.Mo#SP`upYH?DPRl6VeFk^T;$aGB(/!qTaO%)2i#oFnRHfj7W/VOn.<oFhm^X/5^"+u9)$FFQ3*e<NX3%bcTEk:e=4A-NZ+&`,$'V2e4mq:JScgoWDLT^N:se4Z<P`g\>#>0t[3fB*AHbdRf7gTEm(_'Yp_`B1tZI&[=s;P@uAA53N?27>?K%%V!TJ'T\"B;7IOu"aJ,@6,W$3dR>,/da`ngG'=5-n`+`ekq8+tRC3Gdu%E6g5L06kElnERDC+',k3qI(!JQ<560Se+fnIYFMVL.ib%quD+s6F9*LL7M#t%Z@>Kghkfl+;8g:c$.CN]aTb-2rP+<'1tQ.Jp5cA,>3CT'[Q]R<;5]&`4_ND5B$Z2EKBe<nKWs=BRSe0fb*gu%LR>T<-ecW=I>sWHA&E3/Cu#\7lYS/\Z'D\IPd^/UlT/K6"#%&*c*K)?hGJhXgnrt&*iuj8^*N>E:tiW^NidZPBJaJ<,L4jBl?Gh+%ZWj4!UjC#\\"gCU(P1u:\J@51@d4i(\b#>':io6@pC15-H@oe=bsgTX0NHT0%A'5\J[\AP9U;gl'>hBr,`B@sQ?ES>R1t,=I5%Xf%V7VWOWpq<7ZcWg9AXl>)mHiYBkt").3g,<^6N1-<pamL`N?:?^*8NK$#ucg*&63R/=Uqe9,iV6N\oQq2bmmpQS?lS"m;kO8I;Ih(%NaTmEe_J35R<E)+M)'+NEV6X`>p!^!gSLM,qLC"b;-b7T@gc9/&NH&$W35T;O[>u$[OHJ/`dgJ)T^Z_cPJ]HTbSYqook)i9C1&](%bX'0bDod-*kX:gas(e,Oq8\^6:k.`?'J=sE`JKrn5;s7QV^mjDU6r#jJT&kL,X\cTIUm$pqu<A%T+,ae<OIE.IhLL*P"D8r-Ke0n%ef2\C<V+k9IVHpHo9D%q[Fi5L1?625p3k?QA+ZVlO\=ZM4d(4C+Y#op]fD61#d'`2?ZWFnn\)Ue;B'p.>&,eP*EVe"I<bSqVNibG%3^h;aJ'*`e#bR!c#.Ym36-hT'/BM;"[\RN\OD:0i27jqrD%,L:?'J"a,:%F[PRa%k,F:_:h5VhI11$^89s<?PAL:Gn$ga99-]6?j%Hg;I<UEO73#4e*1NL:U:n\^X'?Q"JojuP2I*1IG-lFhqr$WZjaWW[/"PRn)!'XY3Kk*@"7mn#[_(i_F@U_i7e4[hP!;Qm`4)ND2t%I=*C?A)Y_IIiGq.W[L>b7X,Xh6PAm[-mBmDg43-0(HHVNd$>YC,Bp5IF&Hbp8LMci':AMDOeML(>P^Ota'odrW9T^ZQ65AF(Qe#s%,`NA!\SY>>@$12)L#Z%=cF(5<X%;Si#Q2j`O>/8]OXOFG6hm%ibe^C-8))p)b'Ip;lMJYMana%hN;:VX*fj+5MJAQ8]ni68'Y7*e%Tl['SHq#hj76[Hnh55WZ;$tJEA6'0_:+1naJ>uV@2T:8(;oN"C>JM*C4nr$r,@KV@"0"@B\=li).l4+)C+ABXHY1KUAmjAhUiV;O%S,#7kl)o59"_9m_apkG01,(TO=>]>DDkMK[]XV/$jY:6\J-.U4'g^,[<kpNp?7X&gDt(K@=oLk0Lf%o)#S4(u`Sg^O"da^Ars[$7%9;&_+nJ?c+N[#X/$jq3-gNgCV/PW)>ZR5_7NgT`KVh?5=no%n_s&Kt_C?@8d0<+fjM\&"Rm7XFp]Se*:qbNQ/*AJ-CIGAQQJLdHu%Di7m1)#Yj].9rnI/-9<.CQWoi!`u<59h.kh(pWqe\1JmY#/@QG"TH,1$QV%%9T]4\L@(-6&,5W;I0LBEaM:b0fNS)'Ug;&$=13mG%Cua;l+]sJf)MF771]u6a5<]\qSZ3;(itgp#oma*r,qNDEKM2L2Ongf]/[T@0-4p@JgbO@K%Z5.1<cEOqOP5C6",h'U=o"dr8s#)'%Q*CA%:M9RL]`Ufg=&8'eRgBlk27Dj8e<m$un*(iG4u!G=k(<X]90mVJKmp[+BIu6eBM4'$op3phE.H;%Rr!9"?B[?VB$.Rf@*Pck%H@*`#ML\!T2c)3f^\d\!XEZrs<I$YO\B%ag^dC1`&-#4+6%@>Rs&e&U;gmpp<TV9"7B&lB%4e5Sa'S47ruW5%DoV>u^\b\@m[l`C%s1$k`j+$Up00XjZci<\50E:U(s7Q3bs8@^;rNh"In[m]WqqqGH+9(l(IfJ;3J,%L5?iTrrs6tdc^]3=9s7Yo2s7_$<T@[G!r:Q]]%nE7RdgHYYqa.NCoDuUW8X,7Ylh=(@)^\_(Srs,aurd4~>%AI9_PrivateDataEnd