%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 001x003.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 338 236
%%HiResBoundingBox: 0 0 337.5474 235.6680
%%CropBox: 0 0 337.5474 235.6680
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 7764 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD0DFFA8A87DA8FFFFFFA87DA8A8FD05FF7DA87DFD04FFA87DA8FD%06FF7DA87DFFFFFFA8A87DA8FD05FFA87DA8A1FFFFFFA1A87DFD06FFA87D%7DA8FFFFFF7DA87DFD05FFA8A17DA8FD04FF7DA8A8FD05FF7DA87DA8FFFF%FFA87DA8A8FD05FF7DA87DFFFFA1FFFFCAC9FD07FF7D7DA8FF7DA8FFFF7D%A8A87DFD04FF77A8A8A852FFFFFF7DFF7DFD05FF52A8A8A87DFFFF7DA1FF%7DFD04FFA877FFA87D7DFFFF7DA8A87DFD04FF7D7DFFA87DA8FFA87DFF7D%A8FFFFFFA87DA8FF7D7DFFFF7DA8A87DFD04FF7D7DA8FF7DA8FFFF7DA87D%A8FD04FF7D7DA8A852CACACAC9CAC9FD07FF7DFFFFA8FF7DFFFFA87DFF7D%FF7D7D7DA8A87DA8FF7DFFA8A2A8A8A8FF527D7DFFFD04A87DFF7DFD04A8%FF52A87DFF7DA8FF7DA8FF7DFFA8A8FF7D52A87DFF59A8A87DFFA87DA87D%A8FF7D767DA8A87DFF7DA8FFA8A8A87DFFA8527DA8FFA87DFF7DFFA8A87D%A87DFF7D527DA8A87D7DFF7DC9CA93CAC3FD07FF7DFF527DFF7D52A8767D%7D7DA152F87D7DFF527DA876FD047D527D7D27277DFF7DA8FFFD067D527D%7DF827A1AFA859A8FD067D52A827F852A8A8527DFF52A8FD057DA8F82752%FF7D7DA8A852A8527D527D7D7DF8527DA87D84A8FD047DA87D7D7D52F87D%7DA8527DA87DC9CACFC9CAFD07FFA17DA8A8A87DFFFFA8A8A8A7FD04FF7D%FD05A8FFFFA8A8A8FFFFA8FFFD05A87DFFFFA1A9A8A8FFFFA8FF7DFD04A8%A1FFFFA1FFA8A8FD04FF7DFFA8FF7DA8FFFF7DFF7DFD04FFA87DA8A8FF7D%FFFFA8A8A87DFD04FFA8A8A87DA87DFFFFA8A8FF7DFD04FF7DFD05A8CAFF%FFFFCFFD07FFA87D7DA87DFFFFFF7D7D7DA8FD04FF7D7D7DA87DFFFFFF7D%A876FD05FFFD047DA8FFFFA87DA87DFD05FF7DA87D7DA8FFFFFD047DFD04%FFA87DA87D7DFFFFA87DA87DA8FD04FFA87DA852A8FFFF7DA87D7DFD04FF%A87D7DA87DFFFFFF7DA87DA8FD04FFFD057DFD0FFFA8A8FD05FFA8A8FD06%FFA8A8A8FD05FFA8FD07FFA8A8A8FD04FFCAA8FD07FFA8A8FD04FFA8A8A8%FD07FFA8A8FD04FFA8A8A8FD07FFA8FD05FFA8A8FD07FFA8A8FD05FFA8CA%FD06FFA8A8A8FDFCFFFDCBFF7DA8FD7CFFCA52A87D7DA8FD7AFF7DFFFFFF%A87DFD79FFA8A8FF7D7DFF7DFD78FFA87652FF7D7DFF7652A8A8FD34FFA8%CFFFFFCAFD37FFA8A87D7D52527D5252A8A87D527D525252A8A8FD31FFCA%C3CFCACAFD34FFA8A87DA87D7D7DA8FF7DA8FF7D7DA8A87DFFA8FD047DA8%A8FD2EFFC9CAC2CAC3FD31FFA8A17DA87DA87DA8A8FFA87DA8FFA17D7DA8%FFA876FFFFA87D7D7DA87D7D7DA8FD2AFFCACAC9C9CAFD2EFFA87D7DA8A8%FFA8A87DFFFFFFA87DA8FFFFA1A8FF7DFFFFFF7DA8FFFFA8A87DA8FFFF7D%7D7DA8A8FD26FFC3FFCACFC9FD29FFA8A87D7D7DA8A8FFFFA87DA87DA27D%A87D7DA8FFFFFF7DA87DA8FD04FF52A8A87D7DA87D7D7DFFFFFF7D7D7DA8%A8FD4EFFA8A87DA87DA8A8FFFFFF7D7DA8FFFFA8A8FF52A8FD05FFA87D7D%A1FD05FF7D7DA8FF7DFFFFA87DA8A8FFFFFFA8A87DA8A8FD48FFA8A87D7D%7DA8A8FFFFFFA17D7DA8FD04FF7DA87D7DFD06FF7DA87D7DFD06FF7DA8A8%A8FD04FF7D7D7DA8FFFFFFA8FD057DA8FD37FFA8FD09FFA87D7DA1A8FFFF%FF7DA87DA87DA8A8FD06FFA87D7DA8FD06FFA87D7D7DFD06FFA859A8A8FD%07FF7D7DA1FF7DFF7DFFA8A87DA17DA8A8FD32FF7DA87DFD04FFA8FD047D%A8FD05FFA8A8FF7D7DFD09FF52A87DA8FD07FFA87DFD07FF7DA8A87DFD08%FFA87D527DA8A1A8FFFFFFA8A87D7D7DA8A8FD05FF7D7D7DFD26FFA8A1FF%A8A8FF7DA17DA8A8FD07FFA87D7DA87DFD09FF7D7D7DA87DFD07FF2752FD%07FFA87DA87D7DA8FD09FF527D7DA8FD08FFA87D7DA8A8FFFFFD04A8FD26%FF7DA87D7D7DA8A8FD08FFA8FD067DA8FD05FFA87D52FFFFA8A8FD08FF52%4BFD07FFA8A8A8FFA87D7DFD07FFA87DA87D527DA1FD09FFA8A87D7D7DA8%7DA8FD1AFFA87DFD07FFA8A8767DA8A8A8FFFFA87DFFFFFFA8FFA17D7DFF%FFFF7DFF7DFFFFFF7DA8FF52F8FD0DFF7D7DFD0CFFA8F84BFFA8A8A8FFFF%FF52A87DFFA8A87DA8A8FFFFFFA8A8A8FFFFFFA8A17D7D7DFD07FFA8A8A2%FD0EFFA87D7DA852A8FFFD057DA2A87DA87DCAFF7D7DA87DA87DF827A8A8%FFFFFFA87D7DA8FFA852A87D7D527DFD0BFFA852A87D7DA8FD0BFF7D5252%A8A87D7DFFFFA8A8A8FD04FF7D52F8A87D7DA87D7DFFFFFF7DA8FD057DA8%52FFA87DA8A852FD0DFFA8A8FFA8FF7D52F87DA8FD04FF7D7D7DFFA87DFF%7EFF7D7D27A8FD0AFF7DFFA8FF7DA8FD0CFF7DA8A8FFA87DFD0CFFFD04A8%AF7DFD0AFF7D5252A8FFA8A87DA8FFFF7D7D7DA8FFFFFF52F852A8AFFFA8%A87DFD0CFF7DFF7D7DFFA17DA8A8FD09FF7DFF7DFD04A8FD0BFFFD04A87D%FF7DFD0BFFA8A8FF7D7DFF7DFD0CFF7DA87E52FF7DCAFD0BFFA8A87D7DA8%A87DFFFFA8A8A8FD05FFA8A17DFF7D84A8A2FD0CFFA8A8A87DFF7DFD0CFF%A8A1A87DFF7DA8FD0CFF7DAF7DA8A8A1FD0CFF7DFF7DA8A8A1FD0CFF7DFF%7DA8FF7DA8FD0BFFA2A8A87D7DA8A1FD0CFF7DA87D7DFF7DFD0CFFA87DA2%A87DA8FD0DFF7D7DA87D7DFD0DFF7D7DA87D7DA8FD0CFFA852A8A87D7DFD%0DFF52A8A87D7DFD0DFF52A8A8A152FD0DFF7D7DA8A852A8FD0DFFA8A87D%A8FD0FFFA87DA8FD0FFFA87DA8FD0FFFA87DA8A8FD0FFF7DA8A8FD0FFF7D%A87DFD0FFFA8A87DFDFCFFFDFCFFFD4EFF7D7D7DA8FD7BFF7DA8FFFF7DA8%FD79FFA87DFF7DA8FF7DFD79FFA87DFF52A8FF7DFD77FFA8A87D7D7DFFA8%7D527D7DFD74FF7D7DA8FFFF7D7DA87DFFA8A87DA8A8FD6EFF7D7D7DA8FD%05FFA8A8FD05FF7D7D7DFD64FFA8FD05FFA8A87DA8A8FD10FFA87DA1A8FD%05FFA8CBA8FD57FFA87DA87DFFFFFF7D7D7DFD15FFA87D7DA8FFFFFD047D%FD57FFA8A8FFA87D7D7DA8FD1AFF7D7DA87DA8FF7DFD57FFA87DA87D7DA8%FD1DFFA8A852A87DA8FD57FF7DA8A8A8FD21FFA87DA87DA8FD53FFA8FD04%7DFF7DFD21FF7DA8A8FD047DFD4FFFA87DA1A8FFFFA87DA8FD22FF7DA1A2%FFFFA87DA8A8FD4AFF7D7D7DFD31FF7D7D7DA8FD3FFFA8FD05FFA8A87DA8%FD36FF7DA1A8FD1CFFC9CFFFCACAFD1AFFA87D7D7DFFA8527D7DA8FD39FF%A8A87D5252FFA87D7D7DA8FD13FFFD05CAFD19FFA87DFFFFA87D52F8A8FD%3EFF272776A8FFFFA87DFD13FFA1C9A1CAA1FD19FF7DFF7D7DFF7D7DFD42%FF7DA8A87DA87DA8FD12FFFD05CAFD19FFA8FFA852FF7DFD43FF7DFF7DFD%04A8FD12FFCAFFFFCACAFD19FF7D7D7DA8A876FD43FFA852FF7DA852FD30%FFA8FD047DA17D7DFD42FF7D7D7DA87D7D7DFD2EFF7D7DA8FFA8FFFFFF7D%7DFD3FFFA852FFFFFFA8FFFFA852FD28FFA8FFFFFF7D7DFD08FFA17DFD3A%FFA8FFFFA87DFD08FFA87DFFFFFFA8FD22FF7DA87DA87D7DFD0AFFA87DA8%7D7D7DA8FD32FFA87D7D7DA87DFD0BFF52A87DA87DA8FD20FFA8FFFF52A8%FD0CFFA87D7DFF7DFD33FF7DFFFF767DFD0DFF527DFFA8A8FD20FF7D847D%7DFD0EFFA87D7D7DA8FD32FFA87D7D7DFD0EFFCA7D7E7DA8FD20FFA87DA8%A8FD0FFF7DA87DFD33FF7DA87DA8FD0EFFA8A87DA8A8FD1FFFA852A87DA1%FD0EFFA87DA87D76FD31FFA8527DA87DFD0FFF7DA8767DFD1EFFA876A87D%A8A8FD0FFF7DA87D7D7DFD2FFFA87D7DA87DA8FD0FFFA87DA87D7DFD1CFF%A17DFD05FFA8FD12FFA852FD2DFF7D7DA8FD17FF7D7DA8FD18FFA2277DFD%1BFF2752FFFFA8FD27FF277DFD1AFFA85227FD13FFFD047D5227A8FD1BFF%5227A87DA17DA8FD20FF7D7D7DA852277DFD1BFF5227FD047DA8FD0DFFA8%7DFFFF7D7DFD1EFFCA52FFFFFF7DFD1FFF7D7DFFFF7D7DFD1EFFA87DA8FF%A87DA8FD0BFFA87DFF7DA8A8A1FD1EFF7DA8A87DA8A87DFD1DFFA87DFF7D%52FF7DFD1EFFA8A1A859A8A87DFD0BFFA8A8FFA87DFF7DFD1EFFA8CAA853%FFA8A8FD1EFF7DFF7DA8FFA1A8FD1DFFA8A87DA884FF7DFD0CFF7DA87DA8%7DA8FD1EFFA87DA8A8A87DA8FD1EFFA17DA8FFA87DFD1FFF7DA87DA87DA8%FD0DFF7DA87DA8FD20FFA87DA87DA8FD20FFA17DA87DFD21FF7DA87DA8FD%0FFF527DA8FD21FFA8A8FFFFAFFD20FFA8A8FD23FFA8FD10FF7DA8A8A8FD%7CFFA8A8A87DFD7CFF7D7D7DA8FD7CFFA87DA87DFD7CFF7DA87DA8FD7DFF%7DA8A8FD7DFF7DA1FD7EFFF852FD7EFF7D7DFD7DFF7D7DA87DFD7BFFA87D%FFA87D7DFD79FFA87DFF7D7DA87DFD79FFA8A8FF7D7DFF7DFD7AFF7DA8A8%A87DA8FD7BFF7DA87DA8FD7DFFA8FD70FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T15:11:33+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T15:11:33+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T15:11:33+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>180</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAtAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9BW3mlBNpunXUhF1rEQl&#xA;S4BRREbhJJIkVSP2REVHLqafa3piRz8onnIfK3az0Jqc4j04zVb78JAJ+2/ny2TzR7uW70u0uZRS&#xA;WWJGk2oORHxEDwJ6ZfilxRBLgajGIZJRHIFF5Y0vPLjVbH9H2Wu69d3n+5y+S0srS2vZ7OO2gllK&#xA;RVS3kiqyrRpWerBiRsAAFU6sddGj6je6Hfvd3y2qxT2VzHb3N5L9Xn5BY53gjk/eI8T0Zt2TjWrc&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:C79C53CE2A2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:C79C53CE2A2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C79C53CE2A2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T15:11:33+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -235.668 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 235.668 li
337.547 235.668 li
337.547 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2.84668 13.4844 mo
2.84668 13.4512 2.84668 13.4297 2.66016 13.2432 cv
1.29053 11.8623 .939941 9.79102 .939941 8.11426 cv
.939941 6.20752 1.35645 4.30078 2.7041 2.93066 cv
2.84668 2.79932 2.84668 2.77734 2.84668 2.74463 cv
2.84668 2.66797 2.80273 2.63477 2.73682 2.63477 cv
2.62744 2.63477 1.64111 3.37988 .994629 4.77197 cv
.435547 5.97754 .304199 7.19385 .304199 8.11426 cv
.304199 8.96924 .424805 10.2954 1.02734 11.5337 cv
1.68506 12.8813 2.62744 13.5938 2.73682 13.5938 cv
2.80273 13.5938 2.84668 13.561 2.84668 13.4844 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 1 1 0 cmyk
f
7.13037 10.0215 mo
7.17432 10.4595 7.47021 10.9199 7.98535 10.9199 cv
8.21533 10.9199 8.88379 10.7666 8.88379 9.87891 cv
8.88379 9.26514 li
8.60986 9.26514 li
8.60986 9.87891 li
8.60986 10.5146 8.33594 10.5801 8.21533 10.5801 cv
7.854 10.5801 7.81006 10.0869 7.81006 10.0322 cv
7.81006 7.84033 li
7.81006 7.37988 7.81006 6.95264 7.41553 6.54736 cv
6.98779 6.12012 6.43994 5.94434 5.91406 5.94434 cv
5.01563 5.94434 4.25928 6.45947 4.25928 7.18262 cv
4.25928 7.51172 4.47852 7.69775 4.76318 7.69775 cv
5.07031 7.69775 5.26758 7.47852 5.26758 7.19385 cv
5.26758 7.0625 5.21289 6.70068 4.7085 6.68994 cv
5.00439 6.30615 5.5415 6.18555 5.89209 6.18555 cv
6.4292 6.18555 7.05371 6.61328 7.05371 7.58838 cv
7.05371 7.99365 li
6.49463 8.02686 5.72754 8.05957 5.03711 8.38818 cv
4.21533 8.76074 3.94141 9.33105 3.94141 9.81299 cv
3.94141 10.6924 5.00439 10.9639 5.69482 10.9639 cv
6.41797 10.9639 6.92236 10.5303 7.13037 10.0215 cv
cp
7.05371 8.22412 mo
7.05371 9.31982 li
7.05371 10.3608 6.26465 10.7334 5.77148 10.7334 cv
5.23438 10.7334 4.78516 10.3501 4.78516 9.80225 cv
4.78516 9.19922 5.24561 8.28955 7.05371 8.22412 cv
cp
f
12.1279 8.11426 mo
12.1279 7.25977 12.0073 5.93359 11.4043 4.69531 cv
10.7471 3.34717 9.8042 2.63477 9.69482 2.63477 cv
9.62891 2.63477 9.58545 2.67871 9.58545 2.74463 cv
9.58545 2.77734 9.58545 2.79932 9.79346 2.99658 cv
10.8677 4.08154 11.4922 5.82422 11.4922 8.11426 cv
11.4922 9.98828 11.0864 11.917 9.72754 13.2979 cv
9.58545 13.4297 9.58545 13.4512 9.58545 13.4844 cv
9.58545 13.5498 9.62891 13.5938 9.69482 13.5938 cv
9.8042 13.5938 10.7905 12.8486 11.4375 11.457 cv
11.9961 10.2515 12.1279 9.03516 12.1279 8.11426 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
0 0 0 0 cmyk
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
44.5063 3.54688 mo
47.1958 6.23633 47.1958 10.5952 44.5063 13.2847 cv
41.8174 15.9736 37.458 15.9736 34.769 13.2847 cv
32.0796 10.5952 32.0796 6.23633 34.769 3.54688 cv
37.458 .85791 41.8174 .85791 44.5063 3.54688 cv
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.5063 3.54688 mo
47.1958 6.23633 47.1958 10.5952 44.5063 13.2847 cv
41.8174 15.9736 37.458 15.9736 34.769 13.2847 cv
32.0796 10.5952 32.0796 6.23633 34.769 3.54688 cv
37.458 .85791 41.8174 .85791 44.5063 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
42.5161 11.8584 mo
42.5161 11.5977 li
42.3643 11.5977 li
41.8594 11.5977 41.7417 11.5386 41.6489 11.2607 cv
39.8315 6.00098 li
39.7891 5.8916 39.7725 5.83301 39.6377 5.83301 cv
39.5029 5.83301 39.478 5.8833 39.436 6.00098 cv
37.6938 11.0337 li
37.5425 11.4629 37.2056 11.5889 36.7515 11.5977 cv
36.7515 11.8584 li
37.6099 11.833 li
38.5776 11.8584 li
38.5776 11.5977 li
38.1567 11.5977 37.9463 11.3872 37.9463 11.168 cv
37.9463 11.1431 37.9546 11.0586 37.9629 11.042 cv
38.3501 9.93945 li
40.4287 9.93945 li
40.875 11.2271 li
40.8833 11.2607 40.8999 11.3115 40.8999 11.3447 cv
40.8999 11.5977 40.4287 11.5977 40.2017 11.5977 cv
40.2017 11.8584 li
40.5044 11.833 41.0938 11.833 41.4136 11.833 cv
42.5161 11.8584 li
cp
40.3364 9.67871 mo
38.4429 9.67871 li
39.3853 6.94336 li
40.3364 9.67871 li
cp
0 0 0 1 cmyk
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
85.8193 3.54688 mo
88.5083 6.23633 88.5083 10.5952 85.8193 13.2847 cv
83.1299 15.9736 78.7705 15.9736 76.0815 13.2847 cv
73.3926 10.5952 73.3926 6.23633 76.0815 3.54688 cv
78.7705 .85791 83.1299 .85791 85.8193 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
85.8193 3.54688 mo
88.5083 6.23633 88.5083 10.5952 85.8193 13.2847 cv
83.1299 15.9736 78.7705 15.9736 76.0815 13.2847 cv
73.3926 10.5952 73.3926 6.23633 76.0815 3.54688 cv
78.7705 .85791 83.1299 .85791 85.8193 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
83.4585 10.3184 mo
83.4585 9.58594 82.7646 8.95508 81.8257 8.854 cv
82.6421 8.69385 83.2227 8.15527 83.2227 7.53271 cv
83.2227 6.80078 82.4482 6.11035 81.3545 6.11035 cv
78.2744 6.11035 li
78.2744 6.37109 li
78.4761 6.37109 li
79.1245 6.37109 79.1411 6.46387 79.1411 6.76709 cv
79.1411 11.2021 li
79.1411 11.5049 79.1245 11.5977 78.4761 11.5977 cv
78.2744 11.5977 li
78.2744 11.8584 li
81.5786 11.8584 li
82.6997 11.8584 83.4585 11.1094 83.4585 10.3184 cv
cp
82.4063 7.53271 mo
82.4063 8.07129 81.9941 8.77832 81.0601 8.77832 cv
79.8398 8.77832 li
79.8398 6.70801 li
79.8398 6.43018 79.8564 6.37109 80.252 6.37109 cv
81.2954 6.37109 li
82.1118 6.37109 82.4063 7.08691 82.4063 7.53271 cv
cp
82.6167 10.3096 mo
82.6167 10.9072 82.1763 11.5977 81.3037 11.5977 cv
80.252 11.5977 li
79.8564 11.5977 79.8398 11.5386 79.8398 11.2607 cv
79.8398 8.96338 li
81.4268 8.96338 li
82.2622 8.96338 82.6167 9.74609 82.6167 10.3096 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
127.132 3.54688 mo
129.821 6.23633 129.821 10.5952 127.132 13.2847 cv
124.443 15.9736 120.083 15.9736 117.394 13.2847 cv
114.705 10.5952 114.705 6.23633 117.394 3.54688 cv
120.083 .85791 124.443 .85791 127.132 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
127.132 3.54688 mo
129.821 6.23633 129.821 10.5952 127.132 13.2847 cv
124.443 15.9736 120.084 15.9736 117.394 13.2847 cv
114.706 10.5952 114.706 6.23633 117.394 3.54688 cv
120.084 .85791 124.443 .85791 127.132 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
124.821 9.89746 mo
124.821 9.81348 124.821 9.75439 124.712 9.75439 cv
124.62 9.75439 124.62 9.80469 124.611 9.88916 cv
124.543 11.0923 123.643 11.7827 122.726 11.7827 cv
122.212 11.7827 120.563 11.4966 120.563 8.98877 cv
120.563 6.47217 122.204 6.18604 122.717 6.18604 cv
123.635 6.18604 124.384 6.95215 124.552 8.18066 cv
124.569 8.29834 124.569 8.32373 124.687 8.32373 cv
124.821 8.32373 124.821 8.29834 124.821 8.12158 cv
124.821 6.12744 li
124.821 5.98438 124.821 5.92529 124.729 5.92529 cv
124.695 5.92529 124.662 5.92529 124.594 6.02637 cv
124.173 6.64893 li
123.862 6.34619 123.433 5.92529 122.625 5.92529 cv
121.051 5.92529 119.696 7.26367 119.696 8.97998 cv
119.696 10.7222 121.06 12.0435 122.625 12.0435 cv
123.997 12.0435 124.821 10.8735 124.821 9.89746 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
168.444 3.54688 mo
171.134 6.23633 171.134 10.5952 168.444 13.2847 cv
165.755 15.9736 161.396 15.9736 158.707 13.2847 cv
156.018 10.5952 156.018 6.23633 158.707 3.54688 cv
161.396 .85791 165.755 .85791 168.444 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
168.445 3.54688 mo
171.134 6.23633 171.134 10.5952 168.445 13.2847 cv
165.756 15.9736 161.396 15.9736 158.707 13.2847 cv
156.018 10.5952 156.018 6.23633 158.707 3.54688 cv
161.396 .85791 165.756 .85791 168.445 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
166.311 9.03076 mo
166.311 7.43164 165.175 6.11035 163.736 6.11035 cv
160.656 6.11035 li
160.656 6.37109 li
160.857 6.37109 li
161.505 6.37109 161.522 6.46387 161.522 6.76709 cv
161.522 11.2021 li
161.522 11.5049 161.505 11.5977 160.857 11.5977 cv
160.656 11.5977 li
160.656 11.8584 li
163.736 11.8584 li
165.149 11.8584 166.311 10.6128 166.311 9.03076 cv
cp
165.469 9.03076 mo
165.469 9.96484 165.31 10.4697 165.006 10.8818 cv
164.838 11.1094 164.358 11.5977 163.508 11.5977 cv
162.659 11.5977 li
162.263 11.5977 162.246 11.5386 162.246 11.2607 cv
162.246 6.70801 li
162.246 6.43018 162.263 6.37109 162.659 6.37109 cv
163.5 6.37109 li
164.022 6.37109 164.603 6.55664 165.032 7.15381 cv
165.394 7.65039 165.469 8.37402 165.469 9.03076 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
209.757 3.54688 mo
212.447 6.23633 212.447 10.5952 209.757 13.2847 cv
207.069 15.9736 202.708 15.9736 200.019 13.2847 cv
197.331 10.5952 197.331 6.23633 200.019 3.54688 cv
202.708 .85791 207.069 .85791 209.757 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
209.757 3.54688 mo
212.447 6.23633 212.447 10.5952 209.757 13.2847 cv
207.069 15.9736 202.708 15.9736 200.019 13.2847 cv
197.331 10.5952 197.331 6.23633 200.019 3.54688 cv
202.708 .85791 207.069 .85791 209.757 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
207.51 9.68701 mo
207.299 9.68701 li
207.089 10.9829 206.896 11.5977 205.448 11.5977 cv
204.329 11.5977 li
203.933 11.5977 203.917 11.5386 203.917 11.2607 cv
203.917 9.01367 li
204.674 9.01367 li
205.49 9.01367 205.583 9.2832 205.583 9.99854 cv
205.793 9.99854 li
205.793 7.76855 li
205.583 7.76855 li
205.583 8.49219 205.49 8.75293 204.674 8.75293 cv
203.917 8.75293 li
203.917 6.7334 li
203.917 6.45557 203.933 6.39648 204.329 6.39648 cv
205.415 6.39648 li
206.702 6.39648 206.929 6.85938 207.064 8.0293 cv
207.274 8.0293 li
207.039 6.13574 li
202.3 6.13574 li
202.3 6.39648 li
202.502 6.39648 li
203.151 6.39648 203.167 6.48926 203.167 6.79199 cv
203.167 11.2021 li
203.167 11.5049 203.151 11.5977 202.502 11.5977 cv
202.3 11.5977 li
202.3 11.8584 li
207.157 11.8584 li
207.51 9.68701 li
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
251.07 3.54688 mo
253.759 6.23633 253.759 10.5952 251.07 13.2847 cv
248.381 15.9736 244.021 15.9736 241.332 13.2847 cv
238.644 10.5952 238.644 6.23633 241.332 3.54688 cv
244.021 .85791 248.381 .85791 251.07 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
251.07 3.54688 mo
253.759 6.23633 253.759 10.5952 251.07 13.2847 cv
248.381 15.9736 244.021 15.9736 241.332 13.2847 cv
238.644 10.5952 238.644 6.23633 241.332 3.54688 cv
244.021 .85791 248.381 .85791 251.07 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
248.587 8.0293 mo
248.352 6.13574 li
243.732 6.13574 li
243.732 6.39648 li
243.933 6.39648 li
244.582 6.39648 244.598 6.48926 244.598 6.79199 cv
244.598 11.2021 li
244.598 11.5049 244.582 11.5977 243.933 11.5977 cv
243.732 11.5977 li
243.732 11.8584 li
244.026 11.833 244.682 11.833 245.01 11.833 cv
245.356 11.833 246.122 11.833 246.424 11.8584 cv
246.424 11.5977 li
246.147 11.5977 li
245.347 11.5977 245.347 11.4883 245.347 11.1934 cv
245.347 9.12305 li
246.071 9.12305 li
246.878 9.12305 246.963 9.39258 246.963 10.1079 cv
247.173 10.1079 li
247.173 7.87793 li
246.963 7.87793 li
246.963 8.58447 246.878 8.8623 246.071 8.8623 cv
245.347 8.8623 li
245.347 6.7334 li
245.347 6.45557 245.364 6.39648 245.759 6.39648 cv
246.769 6.39648 li
248.032 6.39648 248.243 6.86768 248.376 8.0293 cv
248.587 8.0293 li
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
333.696 3.54688 mo
336.385 6.23633 336.385 10.5952 333.696 13.2847 cv
331.006 15.9736 326.646 15.9736 323.958 13.2847 cv
321.269 10.5952 321.269 6.23633 323.958 3.54688 cv
326.646 .85791 331.006 .85791 333.696 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
333.696 3.54688 mo
336.385 6.23633 336.385 10.5952 333.696 13.2847 cv
331.006 15.9736 326.646 15.9736 323.958 13.2847 cv
321.269 10.5952 321.269 6.23633 323.958 3.54688 cv
326.646 .85791 331.006 .85791 333.696 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
331.697 11.8584 mo
331.697 11.5977 li
331.495 11.5977 li
330.846 11.5977 330.83 11.5049 330.83 11.2021 cv
330.83 6.76709 li
330.83 6.46387 330.846 6.37109 331.495 6.37109 cv
331.697 6.37109 li
331.697 6.11035 li
331.402 6.13574 330.779 6.13574 330.459 6.13574 cv
330.139 6.13574 329.508 6.13574 329.213 6.11035 cv
329.213 6.37109 li
329.416 6.37109 li
330.064 6.37109 330.081 6.46387 330.081 6.76709 cv
330.081 8.73633 li
327.564 8.73633 li
327.564 6.76709 li
327.564 6.46387 327.582 6.37109 328.229 6.37109 cv
328.431 6.37109 li
328.431 6.11035 li
328.136 6.13574 327.514 6.13574 327.194 6.13574 cv
326.875 6.13574 326.243 6.13574 325.949 6.11035 cv
325.949 6.37109 li
326.151 6.37109 li
326.798 6.37109 326.815 6.46387 326.815 6.76709 cv
326.815 11.2021 li
326.815 11.5049 326.798 11.5977 326.151 11.5977 cv
325.949 11.5977 li
325.949 11.8584 li
326.243 11.833 326.866 11.833 327.186 11.833 cv
327.505 11.833 328.136 11.833 328.431 11.8584 cv
328.431 11.5977 li
328.229 11.5977 li
327.582 11.5977 327.564 11.5049 327.564 11.2021 cv
327.564 8.99707 li
330.081 8.99707 li
330.081 11.2021 li
330.081 11.5049 330.064 11.5977 329.416 11.5977 cv
329.213 11.5977 li
329.213 11.8584 li
329.508 11.833 330.131 11.833 330.451 11.833 cv
330.771 11.833 331.402 11.833 331.697 11.8584 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
292.383 3.54688 mo
295.072 6.23633 295.072 10.5952 292.383 13.2847 cv
289.694 15.9736 285.333 15.9736 282.645 13.2847 cv
279.957 10.5952 279.957 6.23633 282.645 3.54688 cv
285.333 .85791 289.694 .85791 292.383 3.54688 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
292.383 3.54688 mo
295.072 6.23633 295.072 10.5952 292.383 13.2847 cv
289.694 15.9736 285.333 15.9736 282.645 13.2847 cv
279.957 10.5952 279.957 6.23633 282.645 3.54688 cv
285.333 .85791 289.694 .85791 292.383 3.54688 cv
.746 .676 .668 .898 cmyk
@
grestore
290.396 9.82178 mo
290.396 9.56104 li
289.37 9.58594 li
289.033 9.58594 288.318 9.58594 288.015 9.56104 cv
288.015 9.82178 li
288.284 9.82178 li
289.042 9.82178 289.067 9.91406 289.067 10.2256 cv
289.067 10.7642 li
289.067 11.707 287.998 11.7827 287.762 11.7827 cv
287.215 11.7827 285.549 11.4883 285.549 8.97998 cv
285.549 6.46387 287.207 6.18604 287.711 6.18604 cv
288.613 6.18604 289.378 6.94336 289.546 8.18066 cv
289.563 8.29834 289.563 8.32373 289.681 8.32373 cv
289.816 8.32373 289.816 8.29834 289.816 8.12158 cv
289.816 6.12744 li
289.816 5.98438 289.816 5.92529 289.723 5.92529 cv
289.69 5.92529 289.656 5.92529 289.588 6.02637 cv
289.167 6.64893 li
288.898 6.37988 288.444 5.92529 287.611 5.92529 cv
286.045 5.92529 284.682 7.25488 284.682 8.97998 cv
284.682 10.7056 286.029 12.0435 287.627 12.0435 cv
288.242 12.0435 288.916 11.8247 289.202 11.3281 cv
289.311 11.5132 289.647 11.8496 289.74 11.8496 cv
289.816 11.8496 289.816 11.7827 289.816 11.6563 cv
289.816 10.1919 li
289.816 9.86377 289.849 9.82178 290.396 9.82178 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
46.9058 8.41553 mo
68.021 8.41553 li
.746 .676 .668 .898 cmyk
@
72.6113 8.41553 mo
68.021 6.69434 li
68.021 10.1367 li
72.6113 8.41553 li
cp
f
0 lc
0 lj
72.6113 8.41553 mo
68.021 6.69434 li
68.021 10.1367 li
72.6113 8.41553 li
cp
@
1 lc
1 lj
87.8359 8.41553 mo
109.334 8.41553 li
@
113.924 8.41553 mo
109.334 6.69434 li
109.334 10.1367 li
113.924 8.41553 li
cp
f
0 lc
0 lj
113.924 8.41553 mo
109.334 6.69434 li
109.334 10.1367 li
113.924 8.41553 li
cp
@
1 lc
1 lj
129.148 8.41553 mo
150.646 8.41553 li
@
155.237 8.41553 mo
150.646 6.69434 li
150.646 10.1367 li
155.237 8.41553 li
cp
f
0 lc
0 lj
155.237 8.41553 mo
150.646 6.69434 li
150.646 10.1367 li
155.237 8.41553 li
cp
@
1 lc
1 lj
170.461 8.41553 mo
191.959 8.41553 li
@
196.549 8.41553 mo
191.958 6.69434 li
191.958 10.1367 li
196.549 8.41553 li
cp
f
0 lc
0 lj
196.549 8.41553 mo
191.958 6.69434 li
191.958 10.1367 li
196.549 8.41553 li
cp
@
1 lc
1 lj
211.774 8.41553 mo
233.272 8.41553 li
@
237.862 8.41553 mo
233.272 6.69434 li
233.272 10.1367 li
237.862 8.41553 li
cp
f
0 lc
0 lj
237.862 8.41553 mo
233.272 6.69434 li
233.272 10.1367 li
237.862 8.41553 li
cp
@
1 lc
1 lj
253.086 8.41553 mo
274.584 8.41553 li
@
279.174 8.41553 mo
274.584 6.69434 li
274.584 10.1367 li
279.174 8.41553 li
cp
f
0 lc
0 lj
279.174 8.41553 mo
274.584 6.69434 li
274.584 10.1367 li
279.174 8.41553 li
cp
@
1 lc
1 lj
294.4 8.41553 mo
315.897 8.41553 li
@
320.488 8.41553 mo
315.897 6.69434 li
315.897 10.1367 li
320.488 8.41553 li
cp
f
0 lc
0 lj
320.488 8.41553 mo
315.897 6.69434 li
315.897 10.1367 li
320.488 8.41553 li
cp
@
54.3931 1.86914 mo
61.2788 1.86914 li
61.2788 14.875 li
54.3931 14.875 li
54.3931 1.86914 li
cp
0 0 0 0 cmyk
f
1 lc
1 lj
54.3931 1.86914 mo
61.2788 1.86914 li
61.2788 14.875 li
54.3931 14.875 li
54.3931 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
59.1289 11.4316 mo
59.1289 11.1943 li
58.8843 11.1943 li
58.1958 11.1943 58.1729 11.1104 58.1729 10.8271 cv
58.1729 6.53516 li
58.1729 6.35156 58.1729 6.33643 57.9966 6.33643 cv
57.5225 6.82617 56.8491 6.82617 56.6045 6.82617 cv
56.6045 7.06348 li
56.7573 7.06348 57.209 7.06348 57.6064 6.86426 cv
57.6064 10.8271 li
57.6064 11.1025 57.5835 11.1943 56.895 11.1943 cv
56.6504 11.1943 li
56.6504 11.4316 li
56.918 11.4087 57.5835 11.4087 57.8896 11.4087 cv
58.1958 11.4087 58.8613 11.4087 59.1289 11.4316 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
95.4771 1.86914 mo
102.363 1.86914 li
102.363 14.875 li
95.4771 14.875 li
95.4771 1.86914 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
95.4771 1.86914 mo
102.363 1.86914 li
102.363 14.875 li
95.4771 14.875 li
95.4771 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
100.443 10.1006 mo
100.251 10.1006 li
100.213 10.3301 100.16 10.6665 100.083 10.7813 cv
100.03 10.8428 99.5244 10.8428 99.3564 10.8428 cv
97.979 10.8428 li
98.79 10.0547 li
99.9839 8.99902 100.443 8.58594 100.443 7.8208 cv
100.443 6.94824 99.7539 6.33643 98.8208 6.33643 cv
97.9561 6.33643 97.3901 7.04004 97.3901 7.72119 cv
97.3901 8.14941 97.7725 8.14941 97.7954 8.14941 cv
97.9258 8.14941 98.1934 8.05762 98.1934 7.74414 cv
98.1934 7.54541 98.0557 7.34619 97.7881 7.34619 cv
97.7266 7.34619 97.7114 7.34619 97.6885 7.354 cv
97.8643 6.85645 98.2773 6.57373 98.7212 6.57373 cv
99.4175 6.57373 99.7466 7.19336 99.7466 7.8208 cv
99.7466 8.43262 99.3638 9.03711 98.9434 9.51123 cv
97.4741 11.1484 li
97.3901 11.2329 97.3901 11.248 97.3901 11.4316 cv
100.229 11.4316 li
100.443 10.1006 li
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
136.79 1.86914 mo
143.675 1.86914 li
143.675 14.875 li
136.79 14.875 li
136.79 1.86914 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
136.79 1.86914 mo
143.675 1.86914 li
143.675 14.875 li
136.79 14.875 li
136.79 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
141.816 10.1235 mo
141.816 9.49609 141.334 8.89941 140.539 8.73877 cv
141.167 8.53223 141.61 7.99658 141.61 7.39209 cv
141.61 6.76465 140.937 6.33643 140.202 6.33643 cv
139.43 6.33643 138.848 6.79541 138.848 7.37695 cv
138.848 7.62939 139.017 7.7749 139.238 7.7749 cv
139.476 7.7749 139.628 7.60645 139.628 7.38477 cv
139.628 7.00195 139.269 7.00195 139.154 7.00195 cv
139.391 6.62695 139.896 6.52783 140.172 6.52783 cv
140.485 6.52783 140.906 6.69629 140.906 7.38477 cv
140.906 7.47656 140.891 7.91992 140.692 8.25684 cv
140.462 8.62402 140.202 8.64697 140.011 8.6543 cv
139.95 8.66211 139.766 8.67773 139.713 8.67773 cv
139.651 8.68506 139.598 8.69287 139.598 8.76953 cv
139.598 8.85352 139.651 8.85352 139.782 8.85352 cv
140.118 8.85352 li
140.746 8.85352 141.029 9.37354 141.029 10.1235 cv
141.029 11.1641 140.5 11.3857 140.164 11.3857 cv
139.835 11.3857 139.261 11.2559 138.994 10.8042 cv
139.261 10.8428 139.499 10.6743 139.499 10.3838 cv
139.499 10.1084 139.292 9.95508 139.07 9.95508 cv
138.886 9.95508 138.642 10.0625 138.642 10.3989 cv
138.642 11.0952 139.353 11.6001 140.187 11.6001 cv
141.121 11.6001 141.816 10.9038 141.816 10.1235 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
178.103 1.86914 mo
184.988 1.86914 li
184.988 14.875 li
178.103 14.875 li
178.103 1.86914 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
178.103 1.86914 mo
184.988 1.86914 li
184.988 14.875 li
178.103 14.875 li
178.103 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
183.237 10.1694 mo
183.237 9.93213 li
182.471 9.93213 li
182.471 6.45117 li
182.471 6.29834 182.471 6.25244 182.349 6.25244 cv
182.28 6.25244 182.257 6.25244 182.196 6.34424 cv
179.847 9.93213 li
179.847 10.1694 li
181.882 10.1694 li
181.882 10.835 li
181.882 11.1104 181.867 11.1943 181.301 11.1943 cv
181.14 11.1943 li
181.14 11.4316 li
181.454 11.4087 181.852 11.4087 182.173 11.4087 cv
182.495 11.4087 182.9 11.4087 183.213 11.4316 cv
183.213 11.1943 li
183.053 11.1943 li
182.487 11.1943 182.471 11.1104 182.471 10.835 cv
182.471 10.1694 li
183.237 10.1694 li
cp
181.928 9.93213 mo
180.061 9.93213 li
181.928 7.07861 li
181.928 9.93213 li
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
219.416 1.86914 mo
226.301 1.86914 li
226.301 14.875 li
219.416 14.875 li
219.416 1.86914 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
219.416 1.86914 mo
226.301 1.86914 li
226.301 14.875 li
219.416 14.875 li
219.416 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
224.38 9.88721 mo
224.38 8.98047 223.753 8.21875 222.927 8.21875 cv
222.56 8.21875 222.231 8.34033 221.956 8.60742 cv
221.956 7.1167 li
222.109 7.1626 222.361 7.21631 222.606 7.21631 cv
223.546 7.21631 224.083 6.52002 224.083 6.42041 cv
224.083 6.37451 224.059 6.33643 224.006 6.33643 cv
224.006 6.33643 223.983 6.33643 223.945 6.35938 cv
223.792 6.42822 223.417 6.58105 222.904 6.58105 cv
222.598 6.58105 222.247 6.52783 221.886 6.36719 cv
221.826 6.34424 221.794 6.34424 221.794 6.34424 cv
221.718 6.34424 221.718 6.40527 221.718 6.52783 cv
221.718 8.79004 li
221.718 8.92676 221.718 8.98779 221.826 8.98779 cv
221.879 8.98779 221.894 8.96533 221.925 8.91943 cv
222.009 8.79785 222.292 8.38672 222.912 8.38672 cv
223.31 8.38672 223.5 8.73682 223.562 8.87402 cv
223.685 9.15527 223.7 9.45215 223.7 9.83301 cv
223.7 10.1035 223.7 10.5645 223.516 10.8867 cv
223.333 11.186 223.049 11.3857 222.698 11.3857 cv
222.139 11.3857 221.703 10.9805 221.573 10.5288 cv
221.596 10.5327 221.619 10.5366 221.703 10.5366 cv
221.956 10.5366 222.085 10.3472 222.085 10.1655 cv
222.085 9.97998 221.956 9.78711 221.703 9.78711 cv
221.596 9.78711 221.329 9.84082 221.329 10.1963 cv
221.329 10.856 221.856 11.6001 222.713 11.6001 cv
223.6 11.6001 224.38 10.8628 224.38 9.88721 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
260.728 1.86914 mo
267.614 1.86914 li
267.614 14.875 li
260.728 14.875 li
260.728 1.86914 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
260.728 1.86914 mo
267.614 1.86914 li
267.614 14.875 li
260.728 14.875 li
260.728 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
265.754 9.87109 mo
265.754 8.89941 265.074 8.16504 264.224 8.16504 cv
263.705 8.16504 263.421 8.55518 263.268 8.92236 cv
263.268 8.73877 li
263.268 6.80322 264.217 6.52783 264.607 6.52783 cv
264.791 6.52783 265.112 6.57373 265.281 6.83398 cv
265.166 6.83398 264.86 6.83398 264.86 7.17822 cv
264.86 7.41504 265.043 7.52979 265.211 7.52979 cv
265.333 7.52979 265.563 7.46094 265.563 7.1626 cv
265.563 6.70361 265.227 6.33643 264.591 6.33643 cv
263.613 6.33643 262.58 7.32324 262.58 9.01416 cv
262.58 11.0566 263.467 11.6001 264.178 11.6001 cv
265.028 11.6001 265.754 10.8809 265.754 9.87109 cv
cp
265.066 9.86328 mo
265.066 10.2305 265.066 10.6133 264.936 10.8887 cv
264.707 11.3477 264.355 11.3857 264.178 11.3857 cv
263.697 11.3857 263.467 10.9268 263.421 10.812 cv
263.284 10.4526 263.284 9.84033 263.284 9.70264 cv
263.284 9.10596 263.529 8.34082 264.217 8.34082 cv
264.339 8.34082 264.691 8.34082 264.928 8.81543 cv
265.066 9.09814 265.066 9.48828 265.066 9.86328 cv
cp
f
gsave
31.2222 16.8311 mo
337.243 16.8311 li
337.243 0 li
31.2222 0 li
31.2222 16.8311 li
cp
clp
302.041 1.86914 mo
308.926 1.86914 li
308.926 14.875 li
302.041 14.875 li
302.041 1.86914 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
302.041 1.86914 mo
308.926 1.86914 li
308.926 14.875 li
302.041 14.875 li
302.041 1.86914 li
cp
.746 .676 .668 .898 cmyk
@
grestore
307.282 6.50488 mo
305.422 6.50488 li
304.489 6.50488 304.474 6.40527 304.443 6.25977 cv
304.251 6.25977 li
304 7.83594 li
304.191 7.83594 li
304.213 7.71338 304.283 7.23145 304.382 7.13965 cv
304.436 7.09375 305.033 7.09375 305.131 7.09375 cv
306.715 7.09375 li
305.859 8.30273 li
305.17 9.33545 304.917 10.3989 304.917 11.1792 cv
304.917 11.2559 304.917 11.6001 305.269 11.6001 cv
305.622 11.6001 305.622 11.2559 305.622 11.1792 cv
305.622 10.7891 li
305.622 10.3682 305.644 9.94727 305.706 9.53418 cv
305.736 9.3584 305.843 8.70068 306.18 8.22607 cv
307.212 6.77246 li
307.282 6.68066 307.282 6.66553 307.282 6.50488 cv
cp
f
grestore
2.54248 51.5674 mo
2.54248 51.5342 2.54248 51.5127 2.35645 51.3262 cv
.986328 49.9453 .635742 47.874 .635742 46.1973 cv
.635742 44.2905 1.05225 42.3838 2.40039 41.0137 cv
2.54248 40.8823 2.54248 40.8604 2.54248 40.8276 cv
2.54248 40.751 2.49902 40.7178 2.43311 40.7178 cv
2.32324 40.7178 1.3374 41.4629 .69043 42.855 cv
.131836 44.0605 0 45.2769 0 46.1973 cv
0 47.0522 .120605 48.3784 .723633 49.6167 cv
1.38086 50.9644 2.32324 51.6768 2.43311 51.6768 cv
2.49902 51.6768 2.54248 51.644 2.54248 51.5674 cv
cp
f
5.06201 44.8057 mo
5.06201 41.3315 li
3.48389 41.4521 li
3.48389 41.792 li
4.25098 41.792 4.33887 41.8687 4.33887 42.4058 cv
4.33887 48.937 li
4.61279 48.937 li
4.62354 48.9263 4.71143 48.7725 5.00732 48.2578 cv
5.17188 48.5063 5.63184 49.0469 6.44287 49.0469 cv
7.74707 49.0469 8.88672 47.9775 8.88672 46.5698 cv
8.88672 45.1782 7.81299 44.0933 6.56348 44.0933 cv
5.7085 44.0933 5.2373 44.6084 5.06201 44.8057 cv
cp
5.09521 47.688 mo
5.09521 45.4302 li
5.09521 45.2222 5.09521 45.2109 5.21533 45.0356 cv
5.64307 44.4219 6.24561 44.3345 6.50879 44.3345 cv
7.00195 44.3345 7.39648 44.6191 7.65918 45.0356 cv
7.94434 45.4849 7.97705 46.1099 7.97705 46.5591 cv
7.97705 46.9644 7.95508 47.6221 7.63721 48.1152 cv
7.40723 48.4551 6.99072 48.8164 6.39893 48.8164 cv
5.90576 48.8164 5.51123 48.5537 5.24854 48.1479 cv
5.09521 47.918 5.09521 47.8853 5.09521 47.688 cv
cp
f
12.4331 46.1973 mo
12.4331 45.3428 12.3125 44.0166 11.71 42.7783 cv
11.0522 41.4302 10.1099 40.7178 10 40.7178 cv
9.93457 40.7178 9.89063 40.7617 9.89063 40.8276 cv
9.89063 40.8604 9.89063 40.8823 10.0986 41.0796 cv
11.1729 42.1646 11.7974 43.9072 11.7974 46.1973 cv
11.7974 48.0713 11.3921 50 10.0332 51.3809 cv
9.89063 51.5127 9.89063 51.5342 9.89063 51.5674 cv
9.89063 51.6328 9.93457 51.6768 10 51.6768 cv
10.1099 51.6768 11.0962 50.9316 11.7427 49.54 cv
12.3018 48.3345 12.4331 47.1182 12.4331 46.1973 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
0 0 0 0 cmyk
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
189.406 30.3403 mo
192.095 33.0293 192.095 37.3887 189.406 40.0776 cv
186.717 42.7671 182.358 42.7671 179.668 40.0776 cv
176.98 37.3887 176.98 33.0293 179.668 30.3403 cv
182.358 27.6514 186.717 27.6514 189.406 30.3403 cv
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
189.406 30.3403 mo
192.095 33.0293 192.095 37.3887 189.406 40.0776 cv
186.717 42.7671 182.358 42.7671 179.667 40.0776 cv
176.98 37.3887 176.98 33.0293 179.667 30.3403 cv
182.358 27.6514 186.717 27.6514 189.406 30.3403 cv
.746 .676 .668 .898 cmyk
@
grestore
187.416 38.6514 mo
187.416 38.3906 li
187.264 38.3906 li
186.759 38.3906 186.641 38.332 186.548 38.0542 cv
184.731 32.7944 li
184.689 32.6851 184.671 32.626 184.538 32.626 cv
184.403 32.626 184.377 32.6768 184.335 32.7944 cv
182.593 37.8271 li
182.442 38.2559 182.105 38.3823 181.651 38.3906 cv
181.651 38.6514 li
182.509 38.6265 li
183.477 38.6514 li
183.477 38.3906 li
183.056 38.3906 182.846 38.1802 182.846 37.9614 cv
182.846 37.9365 182.854 37.8521 182.863 37.8354 cv
183.25 36.7329 li
185.329 36.7329 li
185.774 38.0205 li
185.783 38.0542 185.799 38.1045 185.799 38.1382 cv
185.799 38.3906 185.329 38.3906 185.101 38.3906 cv
185.101 38.6514 li
185.404 38.6265 185.993 38.6265 186.313 38.6265 cv
187.416 38.6514 li
cp
185.236 36.4722 mo
183.342 36.4722 li
184.285 33.7368 li
185.236 36.4722 li
cp
0 0 0 1 cmyk
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
44.8115 71.6523 mo
47.5005 74.3418 47.5005 78.7017 44.8115 81.3906 cv
42.1221 84.0791 37.7632 84.0791 35.0737 81.3906 cv
32.3848 78.7017 32.3848 74.3418 35.0737 71.6523 cv
37.7632 68.9634 42.1221 68.9634 44.8115 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.8115 71.6523 mo
47.5005 74.3418 47.5005 78.7017 44.8115 81.3906 cv
42.1221 84.0791 37.7632 84.0791 35.0737 81.3906 cv
32.3848 78.7017 32.3848 74.3418 35.0737 71.6523 cv
37.7632 68.9634 42.1221 68.9634 44.8115 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
42.4507 78.4243 mo
42.4507 77.6924 41.7568 77.061 40.8179 76.96 cv
41.6343 76.7998 42.2148 76.2617 42.2148 75.6387 cv
42.2148 74.9067 41.4409 74.2163 40.3467 74.2163 cv
37.2666 74.2163 li
37.2666 74.4775 li
37.4688 74.4775 li
38.1167 74.4775 38.1333 74.5698 38.1333 74.873 cv
38.1333 79.3081 li
38.1333 79.6108 38.1167 79.7036 37.4688 79.7036 cv
37.2666 79.7036 li
37.2666 79.9644 li
40.5708 79.9644 li
41.6919 79.9644 42.4507 79.2153 42.4507 78.4243 cv
cp
41.3989 75.6387 mo
41.3989 76.1772 40.9863 76.8843 40.0522 76.8843 cv
38.832 76.8843 li
38.832 74.814 li
38.832 74.5361 38.8486 74.4775 39.2441 74.4775 cv
40.2876 74.4775 li
41.104 74.4775 41.3989 75.1929 41.3989 75.6387 cv
cp
41.6089 78.416 mo
41.6089 79.0132 41.1689 79.7036 40.2964 79.7036 cv
39.2441 79.7036 li
38.8486 79.7036 38.832 79.6445 38.832 79.3667 cv
38.832 77.0693 li
40.4189 77.0693 li
41.2544 77.0693 41.6089 77.8521 41.6089 78.416 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
93.0098 71.6523 mo
95.6987 74.3418 95.6987 78.7017 93.0098 81.3906 cv
90.3203 84.0791 85.9609 84.0791 83.272 81.3906 cv
80.583 78.7017 80.583 74.3418 83.272 71.6523 cv
85.9609 68.9634 90.3203 68.9634 93.0098 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
93.0098 71.6523 mo
95.6987 74.3418 95.6987 78.7017 93.0098 81.3906 cv
90.3203 84.0791 85.9609 84.0791 83.272 81.3906 cv
80.583 78.7017 80.583 74.3418 83.272 71.6523 cv
85.9609 68.9634 90.3203 68.9634 93.0098 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
90.6992 78.0034 mo
90.6992 77.9194 90.6992 77.8604 90.5898 77.8604 cv
90.4971 77.8604 90.4971 77.9111 90.4888 77.9951 cv
90.4214 79.1982 89.521 79.8887 88.6035 79.8887 cv
88.0903 79.8887 86.4409 79.6025 86.4409 77.0947 cv
86.4409 74.5781 88.082 74.292 88.5952 74.292 cv
89.5127 74.292 90.2617 75.0581 90.4297 76.2866 cv
90.4468 76.4043 90.4468 76.4297 90.5645 76.4297 cv
90.6992 76.4297 90.6992 76.4043 90.6992 76.2275 cv
90.6992 74.2334 li
90.6992 74.0903 90.6992 74.0313 90.6064 74.0313 cv
90.5728 74.0313 90.5391 74.0313 90.4717 74.1323 cv
90.0513 74.7549 li
89.7397 74.4521 89.3105 74.0313 88.5024 74.0313 cv
86.9292 74.0313 85.5742 75.3696 85.5742 77.0859 cv
85.5742 78.8281 86.9375 80.1494 88.5024 80.1494 cv
89.8745 80.1494 90.6992 78.9795 90.6992 78.0034 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
141.208 71.6523 mo
143.897 74.3418 143.897 78.7017 141.208 81.3906 cv
138.519 84.0791 134.159 84.0791 131.47 81.3906 cv
128.781 78.7017 128.781 74.3418 131.47 71.6523 cv
134.159 68.9634 138.519 68.9634 141.208 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
141.208 71.6523 mo
143.897 74.3418 143.897 78.7017 141.208 81.3906 cv
138.519 84.0791 134.16 84.0791 131.47 81.3906 cv
128.781 78.7017 128.781 74.3418 131.47 71.6523 cv
134.16 68.9634 138.519 68.9634 141.208 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
139.074 77.1367 mo
139.074 75.5376 137.938 74.2163 136.499 74.2163 cv
133.419 74.2163 li
133.419 74.4775 li
133.621 74.4775 li
134.269 74.4775 134.286 74.5698 134.286 74.873 cv
134.286 79.3081 li
134.286 79.6108 134.269 79.7036 133.621 79.7036 cv
133.419 79.7036 li
133.419 79.9644 li
136.499 79.9644 li
137.913 79.9644 139.074 78.7188 139.074 77.1367 cv
cp
138.232 77.1367 mo
138.232 78.0708 138.073 78.5757 137.77 78.9883 cv
137.602 79.2153 137.122 79.7036 136.271 79.7036 cv
135.422 79.7036 li
135.026 79.7036 135.009 79.6445 135.009 79.3667 cv
135.009 74.814 li
135.009 74.5361 135.026 74.4775 135.422 74.4775 cv
136.263 74.4775 li
136.785 74.4775 137.366 74.6626 137.795 75.2598 cv
138.157 75.7563 138.232 76.4805 138.232 77.1367 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
189.406 71.6523 mo
192.095 74.3418 192.095 78.7017 189.406 81.3906 cv
186.717 84.0791 182.358 84.0791 179.668 81.3906 cv
176.98 78.7017 176.98 74.3418 179.668 71.6523 cv
182.358 68.9634 186.717 68.9634 189.406 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
189.406 71.6523 mo
192.095 74.3418 192.095 78.7017 189.406 81.3906 cv
186.717 84.0791 182.358 84.0791 179.667 81.3906 cv
176.98 78.7017 176.98 74.3418 179.667 71.6523 cv
182.358 68.9634 186.717 68.9634 189.406 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
187.159 77.793 mo
186.949 77.793 li
186.738 79.0889 186.544 79.7036 185.097 79.7036 cv
183.978 79.7036 li
183.582 79.7036 183.565 79.6445 183.565 79.3667 cv
183.565 77.1201 li
184.323 77.1201 li
185.139 77.1201 185.232 77.3892 185.232 78.1045 cv
185.442 78.1045 li
185.442 75.8745 li
185.232 75.8745 li
185.232 76.5981 185.139 76.8589 184.323 76.8589 cv
183.565 76.8589 li
183.565 74.8394 li
183.565 74.5615 183.582 74.5024 183.978 74.5024 cv
185.063 74.5024 li
186.351 74.5024 186.578 74.9653 186.712 76.1353 cv
186.923 76.1353 li
186.687 74.2417 li
181.95 74.2417 li
181.95 74.5024 li
182.152 74.5024 li
182.799 74.5024 182.816 74.5952 182.816 74.8979 cv
182.816 79.3081 li
182.816 79.6108 182.799 79.7036 182.152 79.7036 cv
181.95 79.7036 li
181.95 79.9644 li
186.805 79.9644 li
187.159 77.793 li
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
237.604 71.6523 mo
240.293 74.3418 240.293 78.7017 237.604 81.3906 cv
234.916 84.0791 230.555 84.0791 227.866 81.3906 cv
225.177 78.7017 225.177 74.3418 227.866 71.6523 cv
230.555 68.9634 234.916 68.9634 237.604 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
237.604 71.6523 mo
240.293 74.3418 240.293 78.7017 237.604 81.3906 cv
234.916 84.0791 230.555 84.0791 227.866 81.3906 cv
225.177 78.7017 225.177 74.3418 227.866 71.6523 cv
230.555 68.9634 234.916 68.9634 237.604 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
235.122 76.1353 mo
234.886 74.2417 li
230.265 74.2417 li
230.265 74.5024 li
230.467 74.5024 li
231.116 74.5024 231.132 74.5952 231.132 74.8979 cv
231.132 79.3081 li
231.132 79.6108 231.116 79.7036 230.467 79.7036 cv
230.265 79.7036 li
230.265 79.9644 li
230.56 79.939 231.216 79.939 231.544 79.939 cv
231.89 79.939 232.656 79.939 232.958 79.9644 cv
232.958 79.7036 li
232.681 79.7036 li
231.881 79.7036 231.881 79.5938 231.881 79.2993 cv
231.881 77.2295 li
232.605 77.2295 li
233.413 77.2295 233.498 77.4985 233.498 78.2139 cv
233.708 78.2139 li
233.708 75.9839 li
233.498 75.9839 li
233.498 76.6904 233.413 76.9683 232.605 76.9683 cv
231.881 76.9683 li
231.881 74.8394 li
231.881 74.5615 231.898 74.5024 232.293 74.5024 cv
233.303 74.5024 li
234.566 74.5024 234.776 74.9736 234.911 76.1353 cv
235.122 76.1353 li
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
334 71.6523 mo
336.69 74.3418 336.69 78.7017 334 81.3906 cv
331.312 84.0791 326.952 84.0791 324.262 81.3906 cv
321.574 78.7017 321.574 74.3418 324.262 71.6523 cv
326.952 68.9634 331.312 68.9634 334 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
334 71.6523 mo
336.69 74.3418 336.69 78.7017 334 81.3906 cv
331.312 84.0791 326.952 84.0791 324.262 81.3906 cv
321.574 78.7017 321.574 74.3418 324.262 71.6523 cv
326.952 68.9634 331.312 68.9634 334 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
332.001 79.9644 mo
332.001 79.7036 li
331.799 79.7036 li
331.152 79.7036 331.134 79.6108 331.134 79.3081 cv
331.134 74.873 li
331.134 74.5698 331.152 74.4775 331.799 74.4775 cv
332.001 74.4775 li
332.001 74.2163 li
331.707 74.2417 331.084 74.2417 330.764 74.2417 cv
330.445 74.2417 329.813 74.2417 329.519 74.2163 cv
329.519 74.4775 li
329.721 74.4775 li
330.369 74.4775 330.385 74.5698 330.385 74.873 cv
330.385 76.8423 li
327.87 76.8423 li
327.87 74.873 li
327.87 74.5698 327.886 74.4775 328.535 74.4775 cv
328.736 74.4775 li
328.736 74.2163 li
328.442 74.2417 327.819 74.2417 327.5 74.2417 cv
327.179 74.2417 326.548 74.2417 326.253 74.2163 cv
326.253 74.4775 li
326.456 74.4775 li
327.104 74.4775 327.121 74.5698 327.121 74.873 cv
327.121 79.3081 li
327.121 79.6108 327.104 79.7036 326.456 79.7036 cv
326.253 79.7036 li
326.253 79.9644 li
326.548 79.939 327.171 79.939 327.491 79.939 cv
327.81 79.939 328.442 79.939 328.736 79.9644 cv
328.736 79.7036 li
328.535 79.7036 li
327.886 79.7036 327.87 79.6108 327.87 79.3081 cv
327.87 77.103 li
330.385 77.103 li
330.385 79.3081 li
330.385 79.6108 330.369 79.7036 329.721 79.7036 cv
329.519 79.7036 li
329.519 79.9644 li
329.813 79.939 330.436 79.939 330.756 79.939 cv
331.076 79.939 331.707 79.939 332.001 79.9644 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
285.802 71.6523 mo
288.492 74.3418 288.492 78.7017 285.802 81.3906 cv
283.114 84.0791 278.753 84.0791 276.064 81.3906 cv
273.375 78.7017 273.375 74.3418 276.064 71.6523 cv
278.753 68.9634 283.114 68.9634 285.802 71.6523 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
285.802 71.6523 mo
288.492 74.3418 288.492 78.7017 285.802 81.3906 cv
283.114 84.0791 278.753 84.0791 276.064 81.3906 cv
273.375 78.7017 273.375 74.3418 276.064 71.6523 cv
278.753 68.9634 283.114 68.9634 285.802 71.6523 cv
.746 .676 .668 .898 cmyk
@
grestore
283.816 77.9277 mo
283.816 77.667 li
282.79 77.6924 li
282.453 77.6924 281.738 77.6924 281.434 77.667 cv
281.434 77.9277 li
281.704 77.9277 li
282.461 77.9277 282.486 78.0205 282.486 78.3315 cv
282.486 78.8701 li
282.486 79.813 281.417 79.8887 281.182 79.8887 cv
280.635 79.8887 278.968 79.5938 278.968 77.0859 cv
278.968 74.5698 280.626 74.292 281.131 74.292 cv
282.032 74.292 282.797 75.0498 282.966 76.2866 cv
282.983 76.4043 282.983 76.4297 283.101 76.4297 cv
283.235 76.4297 283.235 76.4043 283.235 76.2275 cv
283.235 74.2334 li
283.235 74.0903 283.235 74.0313 283.143 74.0313 cv
283.109 74.0313 283.076 74.0313 283.008 74.1323 cv
282.587 74.7549 li
282.318 74.4858 281.864 74.0313 281.031 74.0313 cv
279.465 74.0313 278.102 75.3608 278.102 77.0859 cv
278.102 78.8115 279.449 80.1494 281.047 80.1494 cv
281.662 80.1494 282.334 79.9307 282.621 79.4341 cv
282.73 79.6191 283.067 79.9561 283.16 79.9561 cv
283.235 79.9561 283.235 79.8887 283.235 79.7622 cv
283.235 78.2979 li
283.235 77.9697 283.269 77.9277 283.816 77.9277 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
177.547 37.2061 mo
52.7437 72.8643 li
.746 .676 .668 .898 cmyk
@
48.3301 74.1255 mo
53.2163 74.5195 li
52.271 71.2085 li
48.3301 74.1255 li
cp
f
0 lc
0 lj
48.3301 74.1255 mo
53.2163 74.5195 li
52.271 71.2085 li
48.3301 74.1255 li
cp
@
1 lc
1 lj
177.855 38.0728 mo
100.378 71.2764 li
@
96.1592 73.0854 mo
101.056 72.8594 li
99.6997 69.6948 li
96.1592 73.0854 li
cp
f
0 lc
0 lj
96.1592 73.0854 mo
101.056 72.8594 li
99.6997 69.6948 li
96.1592 73.0854 li
cp
@
1 lc
1 lj
179.019 39.939 mo
146.447 67.8579 li
@
142.961 70.8457 mo
147.567 69.1655 li
145.326 66.5518 li
142.961 70.8457 li
cp
f
0 lc
0 lj
142.961 70.8457 mo
147.567 69.1655 li
145.326 66.5518 li
142.961 70.8457 li
cp
@
1 lc
1 lj
184.538 42.4771 mo
184.538 63.21 li
@
184.538 67.7998 mo
186.258 63.2095 li
182.816 63.2095 li
184.538 67.7998 li
cp
f
0 lc
0 lj
184.538 67.7998 mo
186.258 63.2095 li
182.816 63.2095 li
184.538 67.7998 li
cp
@
1 lc
1 lj
190.055 39.939 mo
222.628 67.8579 li
@
226.113 70.8457 mo
223.749 66.5518 li
221.507 69.1655 li
226.113 70.8457 li
cp
f
0 lc
0 lj
226.113 70.8457 mo
223.749 66.5518 li
221.507 69.1655 li
226.113 70.8457 li
cp
@
1 lc
1 lj
191.219 38.0728 mo
268.697 71.2764 li
@
272.916 73.0854 mo
269.375 69.6948 li
268.018 72.8594 li
272.916 73.0854 li
cp
f
0 lc
0 lj
272.916 73.0854 mo
269.375 69.6948 li
268.018 72.8594 li
272.916 73.0854 li
cp
@
1 lc
1 lj
191.527 37.2061 mo
316.331 72.8643 li
@
320.745 74.1255 mo
316.804 71.2085 li
315.857 74.5195 li
320.745 74.1255 li
cp
f
0 lc
0 lj
320.745 74.1255 mo
316.804 71.2085 li
315.857 74.5195 li
320.745 74.1255 li
cp
@
68.9702 60.6538 mo
75.856 60.6538 li
75.856 73.6597 li
68.9702 73.6597 li
68.9702 60.6538 li
cp
0 0 0 0 cmyk
f
1 lc
1 lj
68.9702 60.6538 mo
75.856 60.6538 li
75.856 73.6597 li
68.9702 73.6597 li
68.9702 60.6538 li
cp
.746 .676 .668 .898 cmyk
@
grestore
73.7061 70.2168 mo
73.7061 69.9795 li
73.4609 69.9795 li
72.7725 69.9795 72.7495 69.8955 72.7495 69.6123 cv
72.7495 65.3203 li
72.7495 65.1367 72.7495 65.1216 72.5737 65.1216 cv
72.0991 65.6113 71.4263 65.6113 71.1812 65.6113 cv
71.1812 65.8481 li
71.3345 65.8481 71.7856 65.8481 72.1836 65.6494 cv
72.1836 69.6123 li
72.1836 69.8877 72.1606 69.9795 71.4722 69.9795 cv
71.2271 69.9795 li
71.2271 70.2168 li
71.4951 70.1938 72.1606 70.1938 72.4663 70.1938 cv
72.7725 70.1938 73.438 70.1938 73.7061 70.2168 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
119.135 57.2139 mo
126.02 57.2139 li
126.02 70.2197 li
119.135 70.2197 li
119.135 57.2139 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
119.135 57.2139 mo
126.02 57.2139 li
126.02 70.2197 li
119.135 70.2197 li
119.135 57.2139 li
cp
.746 .676 .668 .898 cmyk
@
grestore
124.1 65.4458 mo
123.909 65.4458 li
123.871 65.6753 123.817 66.0117 123.74 66.1265 cv
123.687 66.188 123.182 66.188 123.014 66.188 cv
121.637 66.188 li
122.447 65.3999 li
123.641 64.3442 124.1 63.9307 124.1 63.166 cv
124.1 62.2939 123.412 61.6816 122.478 61.6816 cv
121.614 61.6816 121.047 62.3857 121.047 63.0664 cv
121.047 63.4951 121.43 63.4951 121.453 63.4951 cv
121.583 63.4951 121.851 63.4028 121.851 63.0894 cv
121.851 62.8906 121.713 62.6914 121.445 62.6914 cv
121.384 62.6914 121.369 62.6914 121.346 62.6992 cv
121.522 62.2021 121.935 61.9189 122.378 61.9189 cv
123.075 61.9189 123.404 62.5386 123.404 63.166 cv
123.404 63.7778 123.021 64.3823 122.601 64.8564 cv
121.131 66.4937 li
121.047 66.5781 121.047 66.5933 121.047 66.7769 cv
123.886 66.7769 li
124.1 65.4458 li
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
154.928 51.0234 mo
161.814 51.0234 li
161.814 64.0293 li
154.928 64.0293 li
154.928 51.0234 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
154.928 51.0234 mo
161.814 51.0234 li
161.814 64.0293 li
154.928 64.0293 li
154.928 51.0234 li
cp
.746 .676 .668 .898 cmyk
@
grestore
159.955 59.2783 mo
159.955 58.6509 159.473 58.0537 158.677 57.8936 cv
159.304 57.6865 159.748 57.1514 159.748 56.5469 cv
159.748 55.9194 159.075 55.4912 158.34 55.4912 cv
157.568 55.4912 156.986 55.9502 156.986 56.5313 cv
156.986 56.7842 157.154 56.9292 157.376 56.9292 cv
157.614 56.9292 157.767 56.7612 157.767 56.5391 cv
157.767 56.1567 157.407 56.1567 157.292 56.1567 cv
157.529 55.7817 158.034 55.6821 158.31 55.6821 cv
158.624 55.6821 159.044 55.8506 159.044 56.5391 cv
159.044 56.6309 159.029 57.0747 158.83 57.4111 cv
158.601 57.7783 158.34 57.8018 158.149 57.8091 cv
158.088 57.8169 157.904 57.832 157.851 57.832 cv
157.79 57.8398 157.736 57.8477 157.736 57.9238 cv
157.736 58.0078 157.79 58.0078 157.919 58.0078 cv
158.256 58.0078 li
158.883 58.0078 159.167 58.5283 159.167 59.2783 cv
159.167 60.3184 158.639 60.5405 158.302 60.5405 cv
157.973 60.5405 157.399 60.4102 157.131 59.959 cv
157.399 59.9971 157.636 59.8291 157.636 59.5381 cv
157.636 59.2627 157.43 59.1099 157.208 59.1099 cv
157.024 59.1099 156.78 59.2168 156.78 59.5537 cv
156.78 60.2495 157.491 60.7544 158.325 60.7544 cv
159.258 60.7544 159.955 60.0586 159.955 59.2783 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
181.178 45.105 mo
188.064 45.105 li
188.064 58.1108 li
181.178 58.1108 li
181.178 45.105 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
181.178 45.105 mo
188.064 45.105 li
188.064 58.1108 li
181.178 58.1108 li
181.178 45.105 li
cp
.746 .676 .668 .898 cmyk
@
grestore
186.312 53.4053 mo
186.312 53.168 li
185.547 53.168 li
185.547 49.687 li
185.547 49.5342 185.547 49.4883 185.425 49.4883 cv
185.356 49.4883 185.333 49.4883 185.272 49.5801 cv
182.923 53.168 li
182.923 53.4053 li
184.958 53.4053 li
184.958 54.0708 li
184.958 54.3462 184.943 54.4307 184.376 54.4307 cv
184.216 54.4307 li
184.216 54.6675 li
184.53 54.6445 184.927 54.6445 185.25 54.6445 cv
185.571 54.6445 185.976 54.6445 186.29 54.6675 cv
186.29 54.4307 li
186.128 54.4307 li
185.563 54.4307 185.547 54.3462 185.547 54.0708 cv
185.547 53.4053 li
186.312 53.4053 li
cp
185.004 53.168 mo
183.137 53.168 li
185.004 50.3145 li
185.004 53.168 li
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
207.261 51.0234 mo
214.146 51.0234 li
214.146 64.0293 li
207.261 64.0293 li
207.261 51.0234 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
207.261 51.0234 mo
214.146 51.0234 li
214.146 64.0293 li
207.261 64.0293 li
207.261 51.0234 li
cp
.746 .676 .668 .898 cmyk
@
grestore
212.226 59.042 mo
212.226 58.1353 211.599 57.373 210.772 57.373 cv
210.405 57.373 210.077 57.4951 209.801 57.7622 cv
209.801 56.2715 li
209.954 56.3174 210.207 56.3711 210.451 56.3711 cv
211.392 56.3711 211.927 55.6748 211.927 55.5752 cv
211.927 55.5293 211.905 55.4912 211.851 55.4912 cv
211.851 55.4912 211.829 55.4912 211.79 55.5142 cv
211.637 55.583 211.262 55.7358 210.75 55.7358 cv
210.444 55.7358 210.091 55.6821 209.732 55.5215 cv
209.67 55.4985 209.64 55.4985 209.64 55.4985 cv
209.564 55.4985 209.564 55.5601 209.564 55.6821 cv
209.564 57.9448 li
209.564 58.0815 209.564 58.1426 209.67 58.1426 cv
209.724 58.1426 209.74 58.1196 209.77 58.0742 cv
209.854 57.9521 210.137 57.5415 210.757 57.5415 cv
211.155 57.5415 211.346 57.8916 211.408 58.0283 cv
211.53 58.3101 211.545 58.6064 211.545 58.9878 cv
211.545 59.2583 211.545 59.7188 211.362 60.0415 cv
211.178 60.3408 210.895 60.5405 210.542 60.5405 cv
209.985 60.5405 209.548 60.1348 209.418 59.6836 cv
209.441 59.6875 209.464 59.6914 209.548 59.6914 cv
209.801 59.6914 209.931 59.502 209.931 59.3203 cv
209.931 59.1348 209.801 58.9414 209.548 58.9414 cv
209.441 58.9414 209.173 58.9956 209.173 59.3511 cv
209.173 60.0107 209.702 60.7544 210.558 60.7544 cv
211.446 60.7544 212.226 60.0171 212.226 59.042 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
245.503 56.6401 mo
252.389 56.6401 li
252.389 69.646 li
245.503 69.646 li
245.503 56.6401 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
245.503 56.6401 mo
252.389 56.6401 li
252.389 69.646 li
245.503 69.646 li
245.503 56.6401 li
cp
.746 .676 .668 .898 cmyk
@
grestore
250.53 64.6426 mo
250.53 63.6709 249.849 62.9365 249 62.9365 cv
248.48 62.9365 248.197 63.3267 248.043 63.6938 cv
248.043 63.5103 li
248.043 61.5747 248.993 61.2993 249.382 61.2993 cv
249.566 61.2993 249.887 61.3452 250.056 61.605 cv
249.941 61.605 249.635 61.605 249.635 61.9492 cv
249.635 62.1865 249.819 62.3013 249.987 62.3013 cv
250.109 62.3013 250.338 62.2324 250.338 61.9341 cv
250.338 61.4751 250.002 61.1079 249.367 61.1079 cv
248.388 61.1079 247.355 62.0947 247.355 63.7856 cv
247.355 65.8281 248.243 66.3716 248.954 66.3716 cv
249.803 66.3716 250.53 65.6523 250.53 64.6426 cv
cp
249.841 64.6348 mo
249.841 65.002 249.841 65.3848 249.711 65.6602 cv
249.482 66.1191 249.13 66.1572 248.954 66.1572 cv
248.472 66.1572 248.243 65.6982 248.197 65.5835 cv
248.059 65.2236 248.059 64.6118 248.059 64.4741 cv
248.059 63.8774 248.304 63.1123 248.993 63.1123 cv
249.115 63.1123 249.466 63.1123 249.704 63.5869 cv
249.841 63.8696 249.841 64.2598 249.841 64.6348 cv
cp
f
gsave
31.5273 84.937 mo
337.547 84.937 li
337.547 26.7935 li
31.5273 26.7935 li
31.5273 84.937 li
cp
clp
296.518 61.5962 mo
303.403 61.5962 li
303.403 74.6021 li
296.518 74.6021 li
296.518 61.5962 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
296.518 61.5962 mo
303.403 61.5962 li
303.403 74.6021 li
296.518 74.6021 li
296.518 61.5962 li
cp
.746 .676 .668 .898 cmyk
@
grestore
301.758 66.2324 mo
299.899 66.2324 li
298.966 66.2324 298.951 66.1333 298.92 65.9878 cv
298.729 65.9878 li
298.476 67.564 li
298.667 67.564 li
298.691 67.4414 298.759 66.9595 298.859 66.8677 cv
298.913 66.8218 299.509 66.8218 299.609 66.8218 cv
301.192 66.8218 li
300.335 68.0303 li
299.647 69.0635 299.394 70.127 299.394 70.9072 cv
299.394 70.9834 299.394 71.3276 299.747 71.3276 cv
300.098 71.3276 300.098 70.9834 300.098 70.9072 cv
300.098 70.5166 li
300.098 70.0962 300.121 69.6753 300.182 69.2622 cv
300.212 69.0864 300.32 68.4282 300.657 67.9541 cv
301.689 66.5005 li
301.758 66.4087 301.758 66.3931 301.758 66.2324 cv
cp
f
grestore
3.15186 148.298 mo
3.15186 148.266 3.15186 148.244 2.96533 148.057 cv
1.5957 146.676 1.24463 144.605 1.24463 142.928 cv
1.24463 141.021 1.66113 139.115 3.00928 137.745 cv
3.15186 137.613 3.15186 137.591 3.15186 137.559 cv
3.15186 137.482 3.10791 137.449 3.04199 137.449 cv
2.93262 137.449 1.94629 138.194 1.2998 139.586 cv
.740723 140.792 .609375 142.008 .609375 142.928 cv
.609375 143.783 .729492 145.109 1.33252 146.348 cv
1.98975 147.695 2.93262 148.408 3.04199 148.408 cv
3.10791 148.408 3.15186 148.375 3.15186 148.298 cv
cp
f
5.06836 143.279 mo
5.06836 141.493 5.9668 141.032 6.54785 141.032 cv
6.64648 141.032 7.33691 141.043 7.72021 141.438 cv
7.271 141.471 7.20557 141.8 7.20557 141.942 cv
7.20557 142.227 7.40283 142.446 7.70947 142.446 cv
7.99414 142.446 8.21338 142.26 8.21338 141.931 cv
8.21338 141.186 7.38086 140.759 6.53662 140.759 cv
5.16699 140.759 4.15869 141.942 4.15869 143.301 cv
4.15869 144.704 5.24365 145.789 6.51514 145.789 cv
7.9834 145.789 8.33398 144.474 8.33398 144.364 cv
8.33398 144.254 8.22461 144.254 8.19141 144.254 cv
8.09277 144.254 8.07129 144.298 8.04932 144.364 cv
7.73145 145.383 7.01904 145.515 6.61377 145.515 cv
6.03271 145.515 5.06836 145.043 5.06836 143.279 cv
cp
f
11.8232 142.928 mo
11.8232 142.074 11.7026 140.748 11.1001 139.509 cv
10.4424 138.161 9.5 137.449 9.39063 137.449 cv
9.32471 137.449 9.28076 137.493 9.28076 137.559 cv
9.28076 137.591 9.28076 137.613 9.48926 137.811 cv
10.563 138.896 11.188 140.638 11.188 142.928 cv
11.188 144.802 10.7822 146.731 9.42334 148.112 cv
9.28076 148.244 9.28076 148.266 9.28076 148.298 cv
9.28076 148.364 9.32471 148.408 9.39063 148.408 cv
9.5 148.408 10.4863 147.663 11.1328 146.271 cv
11.6919 145.065 11.8232 143.849 11.8232 142.928 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
0 0 0 0 cmyk
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
188.797 98.4458 mo
191.487 101.135 191.487 105.494 188.797 108.184 cv
186.108 110.873 181.749 110.873 179.06 108.184 cv
176.371 105.494 176.371 101.135 179.06 98.4458 cv
181.749 95.7568 186.108 95.7568 188.797 98.4458 cv
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
188.797 98.4458 mo
191.487 101.135 191.487 105.494 188.797 108.184 cv
186.108 110.873 181.749 110.873 179.059 108.184 cv
176.371 105.494 176.371 101.135 179.059 98.4458 cv
181.749 95.7568 186.108 95.7568 188.797 98.4458 cv
.746 .676 .668 .898 cmyk
@
grestore
186.806 106.757 mo
186.806 106.496 li
186.655 106.496 li
186.15 106.496 186.032 106.438 185.94 106.16 cv
184.122 100.9 li
184.08 100.791 184.063 100.731 183.928 100.731 cv
183.793 100.731 183.768 100.782 183.726 100.9 cv
181.984 105.933 li
181.833 106.362 181.497 106.488 181.042 106.496 cv
181.042 106.757 li
181.9 106.732 li
182.868 106.757 li
182.868 106.496 li
182.447 106.496 182.237 106.286 182.237 106.067 cv
182.237 106.042 182.246 105.958 182.253 105.941 cv
182.641 104.838 li
184.719 104.838 li
185.166 106.126 li
185.173 106.16 185.191 106.21 185.191 106.244 cv
185.191 106.496 184.719 106.496 184.492 106.496 cv
184.492 106.757 li
184.795 106.732 185.384 106.732 185.704 106.732 cv
186.806 106.757 li
cp
184.626 104.578 mo
182.733 104.578 li
183.675 101.843 li
184.626 104.578 li
cp
0 0 0 1 cmyk
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
92.4004 139.759 mo
95.0898 142.448 95.0898 146.807 92.4004 149.496 cv
89.7114 152.185 85.3521 152.185 82.6631 149.496 cv
79.9736 146.807 79.9736 142.448 82.6631 139.759 cv
85.3521 137.069 89.7114 137.069 92.4004 139.759 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
92.4004 139.759 mo
95.0898 142.448 95.0898 146.807 92.4004 149.496 cv
89.7114 152.185 85.3521 152.185 82.6631 149.496 cv
79.9736 146.807 79.9736 142.448 82.6631 139.759 cv
85.3521 137.069 89.7114 137.069 92.4004 139.759 cv
.746 .676 .668 .898 cmyk
@
grestore
90.0396 146.53 mo
90.0396 145.798 89.3462 145.167 88.4072 145.065 cv
89.2236 144.906 89.8042 144.367 89.8042 143.744 cv
89.8042 143.012 89.0298 142.322 87.936 142.322 cv
84.856 142.322 li
84.856 142.583 li
85.0576 142.583 li
85.7056 142.583 85.7227 142.676 85.7227 142.979 cv
85.7227 147.414 li
85.7227 147.716 85.7056 147.809 85.0576 147.809 cv
84.856 147.809 li
84.856 148.07 li
88.1602 148.07 li
89.2813 148.07 90.0396 147.321 90.0396 146.53 cv
cp
88.9878 143.744 mo
88.9878 144.283 88.5757 144.99 87.6411 144.99 cv
86.4209 144.99 li
86.4209 142.919 li
86.4209 142.642 86.438 142.583 86.8335 142.583 cv
87.877 142.583 li
88.6934 142.583 88.9878 143.298 88.9878 143.744 cv
cp
89.1982 146.521 mo
89.1982 147.119 88.7578 147.809 87.8853 147.809 cv
86.8335 147.809 li
86.438 147.809 86.4209 147.75 86.4209 147.473 cv
86.4209 145.175 li
88.0083 145.175 li
88.8438 145.175 89.1982 145.958 89.1982 146.521 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
285.194 139.759 mo
287.882 142.448 287.882 146.807 285.194 149.496 cv
282.504 152.185 278.144 152.185 275.456 149.496 cv
272.767 146.807 272.767 142.448 275.456 139.759 cv
278.144 137.069 282.504 137.069 285.194 139.759 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
285.194 139.759 mo
287.882 142.448 287.882 146.807 285.194 149.496 cv
282.504 152.185 278.144 152.185 275.456 149.496 cv
272.767 146.807 272.767 142.448 275.456 139.759 cv
278.144 137.069 282.504 137.069 285.194 139.759 cv
.746 .676 .668 .898 cmyk
@
grestore
282.882 146.109 mo
282.882 146.025 282.882 145.966 282.773 145.966 cv
282.681 145.966 282.681 146.017 282.672 146.101 cv
282.605 147.304 281.705 147.994 280.788 147.994 cv
280.274 147.994 278.625 147.708 278.625 145.2 cv
278.625 142.684 280.265 142.398 280.779 142.398 cv
281.696 142.398 282.445 143.164 282.614 144.393 cv
282.63 144.51 282.63 144.535 282.748 144.535 cv
282.882 144.535 282.882 144.51 282.882 144.333 cv
282.882 142.339 li
282.882 142.196 282.882 142.137 282.791 142.137 cv
282.756 142.137 282.723 142.137 282.656 142.238 cv
282.235 142.861 li
281.923 142.558 281.494 142.137 280.686 142.137 cv
279.113 142.137 277.757 143.475 277.757 145.192 cv
277.757 146.934 279.121 148.255 280.686 148.255 cv
282.058 148.255 282.882 147.085 282.882 146.109 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
44.2026 181.071 mo
46.8916 183.76 46.8916 188.12 44.2026 190.81 cv
41.5132 193.497 37.1538 193.497 34.4648 190.81 cv
31.7759 188.12 31.7759 183.76 34.4648 181.071 cv
37.1538 178.382 41.5132 178.382 44.2026 181.071 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.2026 181.071 mo
46.8916 183.76 46.8916 188.12 44.2026 190.81 cv
41.5132 193.497 37.1538 193.497 34.4648 190.81 cv
31.7759 188.12 31.7759 183.76 34.4648 181.071 cv
37.1538 178.382 41.5132 178.382 44.2026 181.071 cv
.746 .676 .668 .898 cmyk
@
grestore
42.0688 186.556 mo
42.0688 184.956 40.9326 183.635 39.4937 183.635 cv
36.4136 183.635 li
36.4136 183.896 li
36.6157 183.896 li
37.2637 183.896 37.2803 183.988 37.2803 184.291 cv
37.2803 188.726 li
37.2803 189.029 37.2637 189.122 36.6157 189.122 cv
36.4136 189.122 li
36.4136 189.383 li
39.4937 189.383 li
40.9072 189.383 42.0688 188.138 42.0688 186.556 cv
cp
41.2271 186.556 mo
41.2271 187.489 41.0674 187.994 40.7642 188.406 cv
40.5962 188.634 40.1162 189.122 39.2666 189.122 cv
38.4165 189.122 li
38.021 189.122 38.0039 189.063 38.0039 188.785 cv
38.0039 184.232 li
38.0039 183.954 38.021 183.896 38.4165 183.896 cv
39.2578 183.896 li
39.7798 183.896 40.3604 184.081 40.7896 184.679 cv
41.1514 185.175 41.2271 185.898 41.2271 186.556 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
140.599 181.071 mo
143.288 183.76 143.288 188.12 140.599 190.81 cv
137.91 193.497 133.55 193.497 130.861 190.81 cv
128.172 188.12 128.172 183.76 130.861 181.071 cv
133.55 178.382 137.91 178.382 140.599 181.071 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
140.599 181.071 mo
143.288 183.76 143.288 188.12 140.599 190.81 cv
137.91 193.497 133.551 193.497 130.861 190.81 cv
128.172 188.12 128.172 183.76 130.861 181.071 cv
133.551 178.382 137.91 178.382 140.599 181.071 cv
.746 .676 .668 .898 cmyk
@
grestore
138.352 187.212 mo
138.141 187.212 li
137.931 188.507 137.737 189.122 136.29 189.122 cv
135.17 189.122 li
134.775 189.122 134.758 189.063 134.758 188.785 cv
134.758 186.538 li
135.516 186.538 li
136.332 186.538 136.424 186.808 136.424 187.522 cv
136.635 187.522 li
136.635 185.292 li
136.424 185.292 li
136.424 186.017 136.332 186.277 135.516 186.277 cv
134.758 186.277 li
134.758 184.257 li
134.758 183.979 134.775 183.921 135.17 183.921 cv
136.256 183.921 li
137.543 183.921 137.771 184.384 137.905 185.554 cv
138.116 185.554 li
137.88 183.66 li
133.142 183.66 li
133.142 183.921 li
133.344 183.921 li
133.992 183.921 134.009 184.014 134.009 184.316 cv
134.009 188.726 li
134.009 189.029 133.992 189.122 133.344 189.122 cv
133.142 189.122 li
133.142 189.383 li
137.998 189.383 li
138.352 187.212 li
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
236.996 181.071 mo
239.684 183.76 239.684 188.12 236.996 190.81 cv
234.306 193.497 229.946 193.497 227.257 190.81 cv
224.569 188.12 224.569 183.76 227.257 181.071 cv
229.946 178.382 234.306 178.382 236.996 181.071 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
236.996 181.071 mo
239.684 183.76 239.684 188.12 236.996 190.81 cv
234.306 193.497 229.946 193.497 227.257 190.81 cv
224.569 188.12 224.569 183.76 227.257 181.071 cv
229.946 178.382 234.306 178.382 236.996 181.071 cv
.746 .676 .668 .898 cmyk
@
grestore
234.512 185.554 mo
234.277 183.66 li
229.657 183.66 li
229.657 183.921 li
229.859 183.921 li
230.506 183.921 230.523 184.014 230.523 184.316 cv
230.523 188.726 li
230.523 189.029 230.506 189.122 229.859 189.122 cv
229.657 189.122 li
229.657 189.383 li
229.951 189.357 230.608 189.357 230.936 189.357 cv
231.281 189.357 232.046 189.357 232.349 189.383 cv
232.349 189.122 li
232.072 189.122 li
231.272 189.122 231.272 189.013 231.272 188.718 cv
231.272 186.647 li
231.996 186.647 li
232.804 186.647 232.888 186.917 232.888 187.632 cv
233.098 187.632 li
233.098 185.401 li
232.888 185.401 li
232.888 186.108 232.804 186.387 231.996 186.387 cv
231.272 186.387 li
231.272 184.257 li
231.272 183.979 231.29 183.921 231.685 183.921 cv
232.695 183.921 li
233.957 183.921 234.167 184.392 234.302 185.554 cv
234.512 185.554 li
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
44.2026 222.384 mo
46.8916 225.073 46.8916 229.433 44.2026 232.122 cv
41.5132 234.81 37.1538 234.81 34.4648 232.122 cv
31.7759 229.433 31.7759 225.073 34.4648 222.384 cv
37.1538 219.694 41.5132 219.694 44.2026 222.384 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.2026 222.384 mo
46.8916 225.073 46.8916 229.433 44.2026 232.122 cv
41.5132 234.81 37.1538 234.81 34.4648 232.122 cv
31.7759 229.433 31.7759 225.073 34.4648 222.384 cv
37.1538 219.694 41.5132 219.694 44.2026 222.384 cv
.746 .676 .668 .898 cmyk
@
grestore
42.2036 230.695 mo
42.2036 230.435 li
42.0015 230.435 li
41.3535 230.435 41.3369 230.342 41.3369 230.039 cv
41.3369 225.604 li
41.3369 225.301 41.3535 225.208 42.0015 225.208 cv
42.2036 225.208 li
42.2036 224.947 li
41.9092 224.973 41.2861 224.973 40.9663 224.973 cv
40.6465 224.973 40.0156 224.973 39.7207 224.947 cv
39.7207 225.208 li
39.9229 225.208 li
40.5708 225.208 40.5879 225.301 40.5879 225.604 cv
40.5879 227.573 li
38.0713 227.573 li
38.0713 225.604 li
38.0713 225.301 38.0884 225.208 38.7363 225.208 cv
38.9385 225.208 li
38.9385 224.947 li
38.6436 224.973 38.021 224.973 37.7012 224.973 cv
37.3813 224.973 36.75 224.973 36.4556 224.947 cv
36.4556 225.208 li
36.6577 225.208 li
37.3057 225.208 37.3223 225.301 37.3223 225.604 cv
37.3223 230.039 li
37.3223 230.342 37.3057 230.435 36.6577 230.435 cv
36.4556 230.435 li
36.4556 230.695 li
36.75 230.67 37.373 230.67 37.6929 230.67 cv
38.0127 230.67 38.6436 230.67 38.9385 230.695 cv
38.9385 230.435 li
38.7363 230.435 li
38.0884 230.435 38.0713 230.342 38.0713 230.039 cv
38.0713 227.834 li
40.5879 227.834 li
40.5879 230.039 li
40.5879 230.342 40.5708 230.435 39.9229 230.435 cv
39.7207 230.435 li
39.7207 230.695 li
40.0156 230.67 40.6382 230.67 40.958 230.67 cv
41.2778 230.67 41.9092 230.67 42.2036 230.695 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
333.392 181.071 mo
336.081 183.76 336.081 188.12 333.392 190.81 cv
330.703 193.497 326.342 193.497 323.654 190.81 cv
320.965 188.12 320.965 183.76 323.654 181.071 cv
326.342 178.382 330.703 178.382 333.392 181.071 cv
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
333.392 181.071 mo
336.081 183.76 336.081 188.12 333.392 190.81 cv
330.703 193.497 326.342 193.497 323.654 190.81 cv
320.965 188.12 320.965 183.76 323.654 181.071 cv
326.342 178.382 330.703 178.382 333.392 181.071 cv
.746 .676 .668 .898 cmyk
@
grestore
331.405 187.347 mo
331.405 187.085 li
330.378 187.11 li
330.042 187.11 329.327 187.11 329.024 187.085 cv
329.024 187.347 li
329.292 187.347 li
330.05 187.347 330.076 187.438 330.076 187.75 cv
330.076 188.288 li
330.076 189.231 329.006 189.307 328.771 189.307 cv
328.224 189.307 326.558 189.013 326.558 186.505 cv
326.558 183.988 328.215 183.71 328.72 183.71 cv
329.621 183.71 330.387 184.468 330.555 185.705 cv
330.572 185.823 330.572 185.849 330.69 185.849 cv
330.825 185.849 330.825 185.823 330.825 185.646 cv
330.825 183.651 li
330.825 183.509 330.825 183.45 330.732 183.45 cv
330.698 183.45 330.665 183.45 330.597 183.551 cv
330.176 184.173 li
329.907 183.904 329.453 183.45 328.62 183.45 cv
327.054 183.45 325.691 184.779 325.691 186.505 cv
325.691 188.229 327.038 189.567 328.636 189.567 cv
329.25 189.567 329.924 189.349 330.21 188.853 cv
330.32 189.038 330.656 189.374 330.749 189.374 cv
330.825 189.374 330.825 189.307 330.825 189.181 cv
330.825 187.716 li
330.825 187.388 330.858 187.347 331.405 187.347 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
177.247 106.178 mo
99.769 139.383 li
.746 .676 .668 .898 cmyk
@
95.5503 141.191 mo
100.447 140.965 li
99.0908 137.8 li
95.5503 141.191 li
cp
f
0 lc
0 lj
95.5503 141.191 mo
100.447 140.965 li
99.0908 137.8 li
95.5503 141.191 li
cp
@
1 lc
1 lj
190.611 106.178 mo
268.087 139.383 li
@
272.306 141.191 mo
268.765 137.8 li
267.41 140.965 li
272.306 141.191 li
cp
f
0 lc
0 lj
272.306 141.191 mo
268.765 137.8 li
267.41 140.965 li
272.306 141.191 li
cp
@
1 lc
1 lj
82.0132 149.357 mo
49.4414 177.276 li
@
45.9561 180.264 mo
50.5615 178.584 li
48.3208 175.97 li
45.9561 180.264 li
cp
f
0 lc
0 lj
45.9561 180.264 mo
50.5615 178.584 li
48.3208 175.97 li
45.9561 180.264 li
cp
@
1 lc
1 lj
93.0508 149.357 mo
125.623 177.276 li
@
129.108 180.264 mo
126.743 175.97 li
124.502 178.584 li
129.108 180.264 li
cp
f
0 lc
0 lj
129.108 180.264 mo
126.743 175.97 li
124.502 178.584 li
129.108 180.264 li
cp
@
1 lc
1 lj
274.806 149.357 mo
242.234 177.276 li
@
238.749 180.264 mo
243.355 178.584 li
241.114 175.97 li
238.749 180.264 li
cp
f
0 lc
0 lj
238.749 180.264 mo
243.355 178.584 li
241.114 175.97 li
238.749 180.264 li
cp
@
1 lc
1 lj
285.843 149.357 mo
318.416 177.276 li
@
321.9 180.264 mo
319.536 175.97 li
317.294 178.584 li
321.9 180.264 li
cp
f
0 lc
0 lj
321.9 180.264 mo
319.536 175.97 li
317.294 178.584 li
321.9 180.264 li
cp
@
1 lc
1 lj
39.334 193.208 mo
39.334 213.94 li
@
39.334 218.53 mo
41.0552 213.94 li
37.6123 213.94 li
39.334 218.53 li
cp
f
0 lc
0 lj
39.334 218.53 mo
41.0552 213.94 li
37.6123 213.94 li
39.334 218.53 li
cp
@
131.953 116.669 mo
138.838 116.669 li
138.838 129.675 li
131.953 129.675 li
131.953 116.669 li
cp
0 0 0 0 cmyk
f
1 lc
1 lj
131.953 116.669 mo
138.838 116.669 li
138.838 129.675 li
131.953 129.675 li
131.953 116.669 li
cp
.746 .676 .668 .898 cmyk
@
grestore
136.689 126.232 mo
136.689 125.995 li
136.444 125.995 li
135.755 125.995 135.732 125.911 135.732 125.628 cv
135.732 121.336 li
135.732 121.152 135.732 121.137 135.557 121.137 cv
135.082 121.627 134.409 121.627 134.164 121.627 cv
134.164 121.864 li
134.317 121.864 134.769 121.864 135.167 121.665 cv
135.167 125.628 li
135.167 125.903 135.143 125.995 134.455 125.995 cv
134.21 125.995 li
134.21 126.232 li
134.478 126.209 135.143 126.209 135.449 126.209 cv
135.755 126.209 136.421 126.209 136.689 126.232 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
229.019 116.669 mo
235.904 116.669 li
235.904 129.675 li
229.019 129.675 li
229.019 116.669 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
229.019 116.669 mo
235.904 116.669 li
235.904 129.675 li
229.019 129.675 li
229.019 116.669 li
cp
.746 .676 .668 .898 cmyk
@
grestore
233.983 124.901 mo
233.792 124.901 li
233.753 125.131 233.7 125.467 233.624 125.582 cv
233.57 125.644 233.065 125.644 232.897 125.644 cv
231.52 125.644 li
232.331 124.855 li
233.524 123.799 233.983 123.386 233.983 122.621 cv
233.983 121.749 233.294 121.137 232.361 121.137 cv
231.497 121.137 230.93 121.841 230.93 122.522 cv
230.93 122.95 231.313 122.95 231.336 122.95 cv
231.466 122.95 231.734 122.858 231.734 122.545 cv
231.734 122.346 231.596 122.147 231.329 122.147 cv
231.267 122.147 231.251 122.147 231.229 122.155 cv
231.405 121.657 231.818 121.375 232.262 121.375 cv
232.958 121.375 233.287 121.994 233.287 122.621 cv
233.287 123.233 232.905 123.838 232.484 124.312 cv
231.015 125.949 li
230.93 126.033 230.93 126.049 230.93 126.232 cv
233.769 126.232 li
233.983 124.901 li
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
59.4292 158.12 mo
66.3149 158.12 li
66.3149 171.126 li
59.4292 171.126 li
59.4292 158.12 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.4292 158.12 mo
66.3149 158.12 li
66.3149 171.126 li
59.4292 171.126 li
59.4292 158.12 li
cp
.746 .676 .668 .898 cmyk
@
grestore
64.3945 166.353 mo
64.2031 166.353 li
64.165 166.583 64.1113 166.919 64.0352 167.034 cv
63.9814 167.095 63.4766 167.095 63.3081 167.095 cv
61.9312 167.095 li
62.7422 166.307 li
63.9355 165.251 64.3945 164.838 64.3945 164.073 cv
64.3945 163.201 63.7061 162.589 62.7729 162.589 cv
61.9082 162.589 61.3423 163.292 61.3423 163.974 cv
61.3423 164.402 61.7246 164.402 61.7476 164.402 cv
61.8774 164.402 62.1455 164.31 62.1455 163.997 cv
62.1455 163.797 62.0078 163.599 61.7397 163.599 cv
61.6787 163.599 61.6636 163.599 61.6406 163.606 cv
61.8164 163.109 62.2295 162.826 62.6733 162.826 cv
63.3696 162.826 63.6982 163.446 63.6982 164.073 cv
63.6982 164.685 63.3159 165.29 62.895 165.764 cv
61.4263 167.401 li
61.3423 167.485 61.3423 167.5 61.3423 167.684 cv
64.1802 167.684 li
64.3945 166.353 li
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
108.749 158.12 mo
115.634 158.12 li
115.634 171.126 li
108.749 171.126 li
108.749 158.12 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
108.749 158.12 mo
115.634 158.12 li
115.634 171.126 li
108.749 171.126 li
108.749 158.12 li
cp
.746 .676 .668 .898 cmyk
@
grestore
113.775 166.376 mo
113.775 165.749 113.293 165.152 112.498 164.991 cv
113.125 164.785 113.569 164.249 113.569 163.645 cv
113.569 163.017 112.896 162.589 112.161 162.589 cv
111.388 162.589 110.807 163.048 110.807 163.629 cv
110.807 163.882 110.975 164.027 111.197 164.027 cv
111.434 164.027 111.587 163.859 111.587 163.637 cv
111.587 163.254 111.228 163.254 111.113 163.254 cv
111.35 162.879 111.855 162.78 112.13 162.78 cv
112.444 162.78 112.865 162.948 112.865 163.637 cv
112.865 163.729 112.85 164.172 112.651 164.509 cv
112.421 164.876 112.161 164.899 111.97 164.907 cv
111.909 164.915 111.725 164.93 111.671 164.93 cv
111.61 164.938 111.557 164.945 111.557 165.021 cv
111.557 165.106 111.61 165.106 111.74 165.106 cv
112.077 165.106 li
112.704 165.106 112.987 165.626 112.987 166.376 cv
112.987 167.416 112.459 167.638 112.123 167.638 cv
111.794 167.638 111.22 167.508 110.952 167.057 cv
111.22 167.095 111.458 166.927 111.458 166.636 cv
111.458 166.36 111.25 166.208 111.029 166.208 cv
110.845 166.208 110.601 166.314 110.601 166.651 cv
110.601 167.348 111.312 167.853 112.146 167.853 cv
113.079 167.853 113.775 167.156 113.775 166.376 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
35.9604 195.82 mo
42.8462 195.82 li
42.8462 208.826 li
35.9604 208.826 li
35.9604 195.82 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
35.9604 195.82 mo
42.8462 195.82 li
42.8462 208.826 li
35.9604 208.826 li
35.9604 195.82 li
cp
.746 .676 .668 .898 cmyk
@
grestore
40.9873 204.075 mo
40.9873 203.448 40.5054 202.852 39.7095 202.69 cv
40.3369 202.483 40.7808 201.948 40.7808 201.345 cv
40.7808 200.717 40.1074 200.288 39.373 200.288 cv
38.6001 200.288 38.019 200.747 38.019 201.329 cv
38.019 201.581 38.187 201.727 38.4092 201.727 cv
38.646 201.727 38.7993 201.559 38.7993 201.337 cv
38.7993 200.954 38.4395 200.954 38.3247 200.954 cv
38.562 200.579 39.0669 200.479 39.3423 200.479 cv
39.6563 200.479 40.0767 200.647 40.0767 201.337 cv
40.0767 201.429 40.0615 201.872 39.8628 202.208 cv
39.6333 202.575 39.373 202.599 39.1816 202.606 cv
39.1206 202.614 38.937 202.63 38.8833 202.63 cv
38.8223 202.638 38.7686 202.645 38.7686 202.722 cv
38.7686 202.806 38.8223 202.806 38.9521 202.806 cv
39.2891 202.806 li
39.916 202.806 40.1992 203.325 40.1992 204.075 cv
40.1992 205.116 39.6714 205.338 39.335 205.338 cv
39.0059 205.338 38.4321 205.208 38.1641 204.757 cv
38.4321 204.794 38.6694 204.626 38.6694 204.335 cv
38.6694 204.06 38.4624 203.907 38.2407 203.907 cv
38.0571 203.907 37.8125 204.015 37.8125 204.351 cv
37.8125 205.047 38.5239 205.552 39.3579 205.552 cv
40.291 205.552 40.9873 204.856 40.9873 204.075 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
252.223 158.12 mo
259.108 158.12 li
259.108 171.126 li
252.223 171.126 li
252.223 158.12 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
252.223 158.12 mo
259.108 158.12 li
259.108 171.126 li
252.223 171.126 li
252.223 158.12 li
cp
.746 .676 .668 .898 cmyk
@
grestore
257.249 166.376 mo
257.249 165.749 256.766 165.152 255.971 164.991 cv
256.598 164.785 257.042 164.249 257.042 163.645 cv
257.042 163.017 256.369 162.589 255.634 162.589 cv
254.862 162.589 254.28 163.048 254.28 163.629 cv
254.28 163.882 254.449 164.027 254.67 164.027 cv
254.908 164.027 255.06 163.859 255.06 163.637 cv
255.06 163.254 254.701 163.254 254.586 163.254 cv
254.823 162.879 255.328 162.78 255.604 162.78 cv
255.917 162.78 256.338 162.948 256.338 163.637 cv
256.338 163.729 256.323 164.172 256.124 164.509 cv
255.894 164.876 255.634 164.899 255.443 164.907 cv
255.381 164.915 255.198 164.93 255.144 164.93 cv
255.083 164.938 255.03 164.945 255.03 165.021 cv
255.03 165.106 255.083 165.106 255.213 165.106 cv
255.55 165.106 li
256.177 165.106 256.46 165.626 256.46 166.376 cv
256.46 167.416 255.932 167.638 255.596 167.638 cv
255.267 167.638 254.693 167.508 254.425 167.057 cv
254.693 167.095 254.93 166.927 254.93 166.636 cv
254.93 166.36 254.724 166.208 254.501 166.208 cv
254.318 166.208 254.074 166.314 254.074 166.651 cv
254.074 167.348 254.785 167.853 255.619 167.853 cv
256.552 167.853 257.249 167.156 257.249 166.376 cv
cp
f
gsave
30.9185 235.668 mo
336.938 235.668 li
336.938 94.8989 li
30.9185 94.8989 li
30.9185 235.668 li
cp
clp
301.541 158.12 mo
308.426 158.12 li
308.426 171.126 li
301.541 171.126 li
301.541 158.12 li
cp
0 0 0 0 cmyk
f
.76505 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
301.541 158.12 mo
308.426 158.12 li
308.426 171.126 li
301.541 171.126 li
301.541 158.12 li
cp
.746 .676 .668 .898 cmyk
@
grestore
306.675 166.422 mo
306.675 166.185 li
305.91 166.185 li
305.91 162.704 li
305.91 162.551 305.91 162.505 305.788 162.505 cv
305.719 162.505 305.696 162.505 305.634 162.597 cv
303.286 166.185 li
303.286 166.422 li
305.321 166.422 li
305.321 167.087 li
305.321 167.363 305.305 167.447 304.74 167.447 cv
304.579 167.447 li
304.579 167.684 li
304.892 167.661 305.291 167.661 305.612 167.661 cv
305.933 167.661 306.338 167.661 306.652 167.684 cv
306.652 167.447 li
306.492 167.447 li
305.925 167.447 305.91 167.363 305.91 167.087 cv
305.91 166.422 li
306.675 166.422 li
cp
305.367 166.185 mo
303.5 166.185 li
305.367 163.331 li
305.367 166.185 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (001x003.eps)%%CreationDate: 26/05/15 3:11 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6H%5+jc7jRZ!8dh2dZtB)H0EK)H(O3I_J35M5_8?Ep@H?%fjDoim"?W0^cp)UpY>2oAqAs_Z7JYSCt\&pU&EH?2-TI&p:j[l%Z=51]9hB)SRFFq]O\Y@%cK[Q2RB14o()4tbMP6`l7b6(2)80Kk%9lcYH_pGjcW@g15O#W6lFgN/h/%:^/'6f.eQ27FqMq.HPIL3s%Zi.(<Tilg@9Vh9lqK&L\XB4-3YA-9Nb?5.%ZLV8qBf'Tq5@:VemRgBbD#gW_)!,<>iBh5:3s"fYhO6[:q?]JlYO-e4a$"ZT53)+p%omRu?"Ap?f,)_5cq]^Rs9)kBq5HDOXHMq`hhe9J?1UP;B]CT%iI\PF?oUd9W8^g_]Z]"Z]VciE=0oo:*cg$<cr5l_&P,OMQP[^9j%ZB<Wg-t0E9ERr\?C=N9kP2*$<C\9==:qk[KDu:,\ZE.c'6pA_VZ_(jCHeE0+&ToRRCr2paG-0UhPr\;7RalW9!ec)ROocHMmX)X.%3kaAIJ[Va-/QMu=JqN@Goe,2E<,gWl[k?B9R*&u-1R"--"932Z9#CUc5o>lO<R%L>k+;c0?i_5U\V[o["Ei:8\+/<gX]W\V743Mn%h/1Yd(RdtE+s33OX<md_Zi:?*W6P9i]gW5t10$HtGU+_bGYT`upcr<>W]$:gkGSgq3?k>NA>*#'p8b,e'++S3rSP`6hgLS;$2phQ%Hl<3:g,=<oM[ZVcn?8k/;cSOLW_/j`.e#?Ab:oTR@DFP6J5V+&V$s+s@5r*Cb1JV:Z#($fp_QQU2O&f3n-PqK74;.e_OJLg4=M&>%9Vhed.i#sP[jr2<?E'$1#fVI'64^&X4G>`IEtsNJHpT8q'7<+qBG5/1Gm5jP:FH;sJkp&=irjWDg'"&;$X*\*J;NcP@"oH5-aXil%"Xp_al6P.1og:0A(OSQ;8d/V(It2RVA&:[O-28a(P*QdH$13C(;EI_#qM:CZIo$L+#G6O'oH7j*Gt*)gre47s51[W)/*'uL++1pY%BH?>ep`u(+"?rLnZk#>l0+o]WHmSGQND'P,E[F#PcNnrPlVNK.NU__0S59`\'=p`J">f?s;M+j5)/(%S9P>HZ9j18_6Mo[S8eLlR%p(<mXGMs4X5jK%s-J<5%&C-CVLibEjB!T:L%4ETe6=bY,$eD5/mt<a=F]'mO)c4h+KXHfd%]*:p"?Un$4=>W3E\]D,1m:*N]HJ+A%plEKL+78-[7%0*95-c#t\EjmnAoc5Z&)QG(`'ufVA]A<<%mU`e,eVC4_.[EPZ?cg`ntms2p^d?M>#D/HMF*p(J&rd70)4K,P.sCg%f*R-19E%VKr9"$B5Kb7c/W8.rdD((#4Q6='^I!MLk5UUZ7(Q>A&H4?Y/!n@rr\+)2S3NaoU$pp'oIKa^IZ]+Wq\602l'7E2W`8Oi%hD.`LM``6AdBA_/="<^q/>;MNHVu;d3Xk0XI>9t<G:3Z`5*IE"K02`$H!Lo'r)R.$3&L3E9`oYGUr&Hb>SEEUI*kDZ9R&n\@dcY>%KMl!/$,?%sXtXV[rtqf>OCn\P_B;5%![gZ.L\"chMkQ)AJqMQ)EgW-`HeV7Pi>Ukf.Bb8#V=:*/[[?"9hcS^q4]W4HJUZ!i6Am9U%W##(Jq$q<F57!4s7PWh>m(%!iY*"$4]+JquBkN->L6mVJ7;aiJK!u&>P[HU49@.Q\7;Z+OgS'QnNBq(aq@<0PI?.bj%;6WqBpKH3%0f`5VWT4BRDbDgI"9X?9mK%rJ=3QOjA;&G=ha)9:%eN_%(sbbk;NB63==G7:9-aC-I_gMe<\d9L.GVrYp`s]&,DF;gq49O5KV5mg%/OY%irt;jbE&M%n[ePgU2]53V8]R7=qF$Q@p4b7FWN6DS9:n#Nj7MoOadC7UW-&jGG-OBgBb:h14i:ftNs,2U/1h&D_2PFB`3HSl%GYQ4'/dJ"R\$2":I^'g5GMLdbNe]_AP3So7I$[A/qQ)Y]eX^U_WEY$3%e(Mfk!c5i=kqmuE!CI8A\.1\k4.11Ig=V5.2<5tY=g4p%h)lS6'U!)IL:%u:Cu2?h2G>m#%FD<nC62:k.B/\,jI]D-ej^47NHuEFAA"#PAE:NZkA;*n6#Wemd.hm@O8#8N;fUX2`uEF*9"BOD%<`($O7$Y;7@fJ7/K`@;D2C^9_P7uOAN(6J]gEP"jGhbVKN.^J6d=OEb.WbR58"41e*PI1fTn%ooijpUI#8EYKOjPdPZGL^`f*X=U%@3"I4EK<9"26AEMS(5BX(R#$"(KoLtDP<he>7j_bLonWR=hHmc.lsM;[l/1pUZ(s*;(cSn<h#kpW=5NY[aSG9pH1PniV56o$A1tQ%qaKipp6h:<,!3B"[8U]4<5n0C&QtrpZS>^Y2;$,*o5TcKVTYlFP0,>Sm,g'i,h=L8Q9t4p9ZB"38Ih:4h2EcpZn[">2NY>9O%RDr%@L;QX9,naA,882]4;Xs'-smCla%<p'?3Vsb<cDd#MB`c99pdFdlZ$5Ioi"N)p^;Jg,n+C6\W=^G.$7)5a&kRtOUTg3GhnUI,(@j)%PR<^[oXKRZi:NK-?$>:g[8Xp<>gPCY?4e&V=M'K:2?mm!JYtjm'A$rOCJ=J4?`,.a6l>'1JTtJ9F7,g6XV^MD7*QqFKoSBbQZ-41%o#'T;bkE7:OaA(S5!V83-89*>.ZsIM/XY:e4spo^lQMijT!]k_EULHO&,ZZs?sQnYG)YH;=moCE&S$_?'B9u%[>CD0cFRj@UY.13%.uJbj!gcobDNWi%Hj\^1+#C)S=lV\*J`%T5"i$SX83)CEL=7V*K[&Yh*97;#_+Sg`S^@JD81;dl,Jk=lY2>2<]Z$udeh&2q?BM_\%bY;]t,Pp=5@D5BW._!(lhq9[WGGi1r4j*[Lnu7mCDq/C4'ZC/!e?o$fLO$cW7\gR4"L!VP1[pp[ek2enA)nVN>>W4+$fW*!"U0m(%0RKS,hj,S2$!DYf=FabiTLVF(!PRSsI*p,lG3dBP'YGceA[s]C/_<.O"5]>XgUQ(g*G^FIL@"WfFd6*,4Ia65'j9`pm/(Q5ToFX<%.)[1M=Jr_U6Heu/Wj9]Q[5,fnTNj?&/nf)6qj`oYoj*uF@6Mi:UM;Rm9QZGQCF[`t(l'=tN]j20LKXmtN97X)@'T45H+@U`s77p>%AOf*JT-[3?(0KXsXE\M,1_]:l.bAc5=u>pWfGga%K"lhaB`&X`5r?>+&\j$GlS>5+oJEMM;W_J>qk59=6[FARGZahD^Z$_;4=-`,%d9Cm"\&0f[V/VJmEI9W6qrF/u&HA9oTW?D+QIck6UPd!)"$!aH7E8WKS5`MN8V$QO1`[P""9W=`eo#C*#H8hAMg=s./Cr-`$.jC6%Ak+K]IR!8R$MO_pZKQSlg'fm3@Z_'"2f=CE8fLGK]5+>C.sN:Fm7ansZ"#PYiA6ms4mc>P">to%d&.52rLga`!qf]!s'd&cA'Yf^%#f9%NNZA]b"5X-p"b&0JRIpgV^F1/Ymu$?t-E&dGRYaV0>UHdo-CKP-b[9@@R&1R6BL0!R`;7VfEW"7I?fL1'a2N%MIWAnBJj7,#%##Yq?&\?+sZ)f!YbG^^?m#]3G4@LksNed#/`ppJC9P.e'F+KAj/8HP/2RsM0^L\a99^=c@Yem,cb\GMp?=B5j'5BaB8[L7/Em^5j%&JDq6(HEN&)69,$9^J+&B-6'B<j8qd+-o'4nBg$'ZT5M0+I)JU_rScsYhLPaFQ%]q1B0n3>;]N"-Js^J0A$`\A*_Jhh0-.':7aK'%nWWQjs//5MeFE"jUGaUXBYcHJiWqcRSkke>kg=R_rR9G:rG!_Bo<n:-4aGGW^7f#Xj4E2][sfYa:BCCJq+mbmcW2!U9IQW-ZeDN/%a[>\UrlP-[rcY:?X53a6Y7kT[oiJi[mKdJH8@;Gj?<=b0iM]P@eQ0)I`,GtQ6/sWjUl'E8EH>4bV"JW/K,B>M_*pI$KG4t=7B!0=%s%!oooiA3Xi$L\EKG3!WI-5FP+ekGWFFSTYabt>Sl(E/`Ej/IrL-k]#UQ-#c6L2-M(c5>./`<`[hsLG`[@ksa25#_S1A51bfke<F%X.><kRpQ=_c^gNGZT*R0pXa2mg$!j(GnM5IeS`.leuYMDh<W\-_QX&"IPk:d,`#R7EGF68*SBtL4TD@'l5416UOl.13sbLlUk(rT%]=],dHu8EW[W(p>DUs/kgjZ=&Y87,">Y3/s,OJS2C%`W)akTbdX.EQgjN\]O*Rkd,6qSLJ,eB-''7Dr8YYA-p$+?0n9&BK*IdEa]%^Cf[:8QeY,-LW%QA.=*.c4[AUlDBlg&[f*:8ENa^k[.",C(dF_BHp<QbrQJb9Z>+h,&$]jd*t\sm&<'l9:Q]d8f4]j/3H2]7(s,;%!>cTLY@NJP,(]u3rZ;J:LciHQjHN]RSW?nFk8aAY\eBNMhLHQqmbdfKX=&(%okMre*FRLRF0XS<(6M97gUr1H8jVPgc$$^Gr9IFf%:.s_e%M+TR[5u;l5@(&7,8iT3GJW@ds8/kM63W\6UP7ch]]]=mYA3Za(9j"5?.9;7j8RpVqD=Q-G,qE9D@4,CrFuf3@XJ7<d0TNJ%g20erS$3^9pEpOB^J;[rOpe>'bhGX_=mOXC[#AWC#R-?-m5A:#qEX6WIP`J)J$&@CTIF<6rJ*HmEg,8m_`PPs^P3@^5MPHdUTWma%"r%ec<rTG]^tUQq+o"pA`kD?CqX(IN[<\o^_;[GK'K"Q_TCpoW5.0+HqObeN7_R,mXEMuF4MhOEf!a07c7Y4Y]_72apa;m\`aJV+%2*jVW\_H!<ornBQ$eT5QhYo`Jrbt6MgHXN'3_n9%,MV9+q4lekrtt2%.&rjr%#_[.Iu(TjiWjhi?]A7h@q_oBe]d<IWVp8MU;RSN%lL3[`@bG.=<f?tNohC1L`^t4JZWcs=^Xg'+qoF1HW;l.HKW3pi9BHTKp7Kg6_$9f\[MG:.s-K5/ak<-i&MM'EYUCEiV,I<SG?JUT%=De":m6R>='C;A<A3&nm:[iBpnt=]_s/E`aP:,`-K[j?0NaFd1epI)X?hNJKrSRQa\^otG?Q76Zs)0i:8FF]Gld\+XV$oBpSn>:[%8r[/T=oJ6%gAUYC^>$hTqlfC%[moCVglI[BDj9IOPBN_O5H?^rg1NhM_)BW3[!N7\%6p-"9;Z8<8^k%hiC-ugB7>_*#80t3aQO?g%nVl0I39$:,`Z+20-Mg6,nt:Q3r0^&=(]qpg_4HaO^IT,P]pnAm5&($smrfgi7R]]S$uA30N/N@`#8Z*/G8pS2DX@]V=tp^oUE/JK%%XMd">A)q8N0cr`3n6/ZFB$49bQ,#[oGO,<%4t_%e;:&,Ae;)SW(=!)81c[!r9q?UdR&h_!MdT=;F'o:?-N.Fp.D$fnG-:r8Xj7Z%80BM;*r6?XI8t,AH65]CE%uqE]o*G8=sO6Td"f8AYUNlmVB#cX7CseW+2ehjpf4*@+F<.^?gZI_hngBOs#"5\n$[!(IodQEh@TOr%YFO5%g+=e>8=(I-Wj35)-SPfp8[/[[>0gXq)lma/L,&Rkj)B3[A0R\-R,4XV20`@l:-32AZ4QtLlcg=(@3`3YIB2O8n'.P[ED&Ej%"%C">[BHf;RMnm-3$,7?8BGFKP(p\X8,=>+^r#Of$c0Cj=7+GLL9@S'=G%XM)p/r!GJdB:/h6'jW'!Hi3*#:1D93q)H0rFBa*t;G%np+Ba8m+`)9L&-\Q(MZPGt(j@!tnN(1u&AO2&i+I>8tHAs%[b'n*$=6gSOSkEoFO9,5^uDG-]8\LGq26!a1;&c7N03*&s(2DRJ*"%GF/=r25#/"X%bcO,Yk\:lr6'FFKb6-e&9.bo&9SP?>KId-2CsaO+X$^T?gVZ.)<Q*5KV_#<H:,%C-MX]GCKD11JDKBIrOdAIC/GW%9sK:qTnp@C!rAYidr.-Jojk8`D1=<jGpqZR*j*gqF<B(\+%*"#3jbtI&T0'W-52#8VigY6?Yq]I*pMs4g3lbrYA0,E`N$bqlVqXW%B0).3:$-s%D26WWhY6,0+*mDh=k"29J1rE[du`X'X8VaKn=iZmZh_L8iHC;46E,FCg?Ng\BO^W-2o=.E+c6.>mPP5W$RMs,\d[h;%eB`7W,*,89(Q2;OqHLR9X4IP;4deBHpZ"AJXiU$h?1)q622`LMC9u"fToq,p3#]JKZ8W?\hE=o`>I7U);h\NuW9K&'6u6Nteh)^?%hIiVTMA4?KGVRc+;MqO1JT>E2.PtVbR<udlMnSg7CcFufGC9\Q+J\+XD:F)>Z?!U+Q<3J7_u/ruEDfgGc!4:M'M6^o1?$H*qa.*f%Il/2^>k-k*>ITneZR%SjM(8efK$A2aRB!s;JPG*7OcP>kpH^+t_Fo?O"umobL)?QpTk[UifoH\<W)t-%2Je3EFXNF<]tLhd*qNd-%:@jIi?_p#fH8*+Ud^;lgY>j]`lSFIFMe`:gPpK;1aMkc=p)9WH^YO`O[YYu]&<>ef8E&'6?E/FAqBbd,s6r:K]9agZ]YTQqoWkUq%H^0@m!XcV!@*DH:ia8L<'Laepafe`0g\Z7*P6*.1CNd;(g.kniYO/,&Dn]SHIs83VAq_%oK*@bD@&eHCDZ6lnpFD)*%_&tZ.+dn:%IYJR#L""Q>]X:*2'^-\QlY6)XlJ5i;@(?@sg-DZY8?oXA4+sG8Jgju.71YXT>5]8I'Z/!_OBHjGoY7CH04/"sp;.M!1.l\jo3JW.%&E7-nrUfBrG:gVV&3\b3FBnubLuIaoS$[F<;[]H*MUb8PS8o2qUTuR!RR/Pg_Fn9<lJ5JhCIEbFH!8eim9RYp#+YM0Q/f*#>VfQP%&l_h8qU9;2_*Z*DJb&2?<.q\+<4T<NoChkOVq^>*'Eijn"KT0Z>c[T;n#^$,*b`I:Cm\MJXCr"=%"jK:.p=ZiYn8Nc2caW_"sT:S%)9;d]"J5=&[2V"PTj1[OnL@3drUadTX'&-P^S#A6/Gh?'Q\@FuX545ZYEq\K1/KU%&%O[G,DCn0AhEiTGI#^e#.kg<^>X2uYV!th%A7lI2*f"X%iIqFY)!\,LKXDCR_XG^>$S=a9q"5+2l-Qi'E$l;:S^'a;q`g3",Sh[_If#+R1R_&b6AfnJT*#3gBb.XE%l$ZK(2O_f%%H@tAec1L?U@H<KAA\EdXX1'JL!AP%`-Op%.SQ</<39*eQ0tu85Uc>VX0#F7+#7ML+VsA,o`T-j42?1bE%#NcI"4.e#k(d2Zrmp0%b!+Zf(g?&0/5\'"Y"9"M>&Qcc\4"G%;pM_D_H^6&NT`KhGLH81]m3NEri3_Q[ZZ4E;>Z[+o)V9DgAfl@e-=r/kLI?4LWE(H3mE!-%*T(hTge\[,-g/V=DRB]?Bq1P[U2WD5h0FbY^N*C$$sF4m].4jM/'7^,nc/`!OKSaDi$E5Y%;rcH9C^*?YCo^up'<9t9]L.0Ht!^f%jBN+4%[8G08@h>ZdV!#[3^Ar9@:"m8,d]WQ"6kgW'XEKaa.Cgs=c?Ong3e$)fkB>844jbpXsI(<kZb7[GY)jE&oicTc>f0WllAtT%\9h6]K3172aINA7fLT`c:rJqOEW?n!&/`T_(O('T]i56e$<S*'oG;RgoBJ1\jVAAn(,nJS.XY1%[F5l@H#W%r_[feuc&7%EoZQ+j%gmL?1YEjW/[i<UkAT@[mpdeuGSb:KQDXK'<:+^@2Y,*mDGBR`cUOaK"r5tlPIoain98>I&e?X1p8@eEJH!J%S.V;G`T$f\g`0ENo%c/Y-"[:#u"EG'[TXY%:eg?,dmebE'WkIFnmUq>HBp"0+>k@edLhsP>`4)<I$9)DAq.X*!&Us`Q1p7eja?[n7Unn*g2U<^\m)WDTJ%>dpc1QEHg&;p3atQ!/RYSjTP0J<a&+cS[kNBm_g;R=:h1:!8>ee!A:TS9BADe4^cUg[^MF-IP_r6[N>A<[2E4[!P=()h%7LLWCm;%$>r%%D\4+uqbXuXZKd#6Zad92RcR5fk'GU%,-Cdu^:YZ*G#PEchNgR:X1b"jA#=>RKY#5lX@DY2hJ#p2aoZl``iM9<.Xerd9"`S?%g/G,&Wd],D.XgPFIePJt.P8@QB@US4Y>WmI4mQ8]C?pmlVt6P[Q**j+p?#u@*PY4Y5;1]Xq:D%@#@&_B(SP$3,&OId<,,+Q=KB2Q%s%9]R#H;`@3;'=/OmYqD3\0IT`o3=m>G^`Op-E)_F*e/G@1[c=]+8i&*`SRoP!$P<WG=AnpZKn]>'loD=(X@(V'g>*Sj([Wbj?a[%'Fh4s19VB]j_F7hqfqdkANhnPl,p>]=aSKj<r01NE>2NSRJV+jLFZ)p4k695774GkZIncPoYc.*DE\Prr$q*YD;<9_PpXqX>5][%%=/^'7[2"#\<iXg#O`.'pQ$7<3lq9A4X&Q)]5#uX!TTd'+25\ipXi"UEV,_5Vl/g(&dVUEt=._Ei4dAo.f'Q6dD:5lL0$ekKc/t.s%r]hqb5C?L:Q/8W7#Ni<#PqEJE\l3P-Od\h9C<_dJXU"TEeUU8OC%JZ3Gm^RY,TSL"g7Co6/Yq+Vn!1$4h4ld`9$^T%eA+]NlfY8^%;!IqaFT.eu6FHTsFap<<FFTXFpT=(&Y4Wi<l1r@Ke\8[oW.e9a/R@aff).$]:t(brXgN<O8iqAuJX'P)Dbp&2h=kdPZ#m[i?h1Dm%E23@/FSbdr>Nt2<kH:^\>RR\-pT7c&"B>5*8WURIZ@A]@^H5fC[\`h$qRjG!FE1bn]BSq+<'[:hQVtBa[HCbnFgO8rg3R!VUInV%%EM^a6ENSm)Cd-<??e(*Jct)PSWXH=7ASu",a5,/Gl"+9L&!\aV=ISF1hhh!,]_?f)Wa5(><FN'o]1smDD_??>RR2`m6Rj\Cb.DO[%\CBnODPWrR/?T\p7FXrAbH.hb^8KDueX\.A<4XOI0=r^a5F+@ad0m*VSQRE0].9EQc!Pm96+)lbXkeB<c/a(%jjh-Bn!*sVFQG@F%@II1-rc1<K>J9lLGe=E4kAp9q]u$CgT&-']?WTNh5J[$inU!kc5>o1kfmpP/+3Z>Qe+Dnn]'4KT=Rn8C]D$#bT=-q\DA)3LkN9nS%b!Y)c93F6$$%D_JI@B1l4WH8To?-FU>N"6@Mlf]"q!%,7Y>r?8Qt+/.n^Q=Z:;GW8cKrj1AWJtP2>:s7E*k4U<e&Sro$iQkl0I2O%MfHu(q,M-kH'pilYLB\c<:J@ld`OV#3l&"eoTM9Kq"F1U8S9F?l0"=03;%Vj3VN,Kfm!jM)`@A3<=aJgVe@#.JPY0,YNH/,*1K[I%mQN0)4tYq.?gE8=pQWoO3LF=PPVSG*$$]\3OilttXN`9eX.H5I(T4r@qQuVqo8^taMjNgb]\dcmAf#&;R60d0FRsD9=F?"'B#;cr%\@bW@+(jrTa<tW[e?&5BLJ5sWrX@"uMlGf$q\IG(Ip]u](1<EW;X(7g+4j'6fe_QGe&``[0XSRZ=b5h^mZ]K9I^2YLJXdK-`5].k%6[\?\9Qne49GgL76`W)"VNEf%TTdcF#M&Tbc)GVBf3!OI+PeqUL?[!h93I1<0!6YlVZE&$e'jYSk.PI&H*q$tmfG".-KqoY=K,9q%F`d%Q.31'L0]2f^$C02\9""7.Ti13TE%Y*nS"6,4Q1h(>l=Y_)=$6uKpn%;mB9d?n?'T#>""Qh,?!$qRV;=2'4#h(W4Ud(U_c&gs%[u\?WSZ;<=Qeckp(!dm%.ttOOLOZ.9WN9I'GV4`O4dZUf0_S$=.g:F`_UYQ,RoPNadG@C=<q3?d'jd&fHi!PQ%4u3dIm93:N^XBj%:f@=dE_#dk!O__H^F2LGpqV<Gs)LVVOSZ0YFKojPCcUCI3gmaMCJ:o_nW/[TI-lM\ol7VO0m07T=mH@`,=&JAn'(^L1i1h!pEcWD%Wb&,3AMZN$J;nT<IOlMJBa*.?Aef9":t*uWUkgO!L6Z'gpJET?SW>T$b^tS^Nh,/UW+B1Lm`XH6,Pgm5rLAS`gs6&^%e9?XJ\"cB%8"LGtki'1]Vl/#="%;^+(eL@nXrg5l1aVG_B+BddiK>t*.IH\^N@.PZRBA[O'_XQ9rE0UPP]X$%@S5Jm64=tOTmc]GB`FWug$A,K%S9EVq&D00cHnPU!%qahKH4]qVm?,bhbbD&O],3p_0,/k:L*;I!m&S<ih&fk,[NE6$q4<DfH/on"NAtt6@imEu.GWU',;RHEH88au%:qMePGq-G<<ZSS,aq)*iOb!c[Ru+aFG8;^$!8]l(*VK\6ZW(6T+-^t#dQ8kb\'+2:.B77b;2Je.^.l64N(U!,i\XBc]Xg'2B/K8(%pAQViI25(?Be`5\l6k7fgA:uh?H0BX[E!.r9Ef>;)Os+WehAbF=[_+@.A3/r3c]@TDJ,=>#-\8GTo>*8)3ar20<R+aE?lD,K`$*H%HVc_BQtXRrj)/;PjB!j\UCKd.j,Ub:eBLd&:JT)+Qgtc:gs`^YeV4+@5al],]H>e"X?5ACFXI]/&'@?VD?TTF5nVf?WC)n8)/;fo%gR#(&mFRq:,EX7Hk?CitJ!h8F_EthEENi)NgOV78OUb>Sr\FFdo`?.c5`a<tQ*1*ThTUC4e1c1F2lLr0JKm6o&(Y6X,(!+nD7?,1%R\^-!?#FmSM!ApH"d!hR7]?\:8W6pdU4QZ3Vs>Q"T0;6)q$.mtE1c%<J$![FNq=E^MacmHm?=_nKL)i`JF'p+.EQUu';EOe5^")1%M2B9X+b!]ZN]hS6`\C>cNPMfZCEnGa*LOA12nVaRZsn$fj.//._6X,)<k.rr7@i*+O37IaeAOgfiT>J6_F0ger+Cr)C9A(k2Wami%W8-p<-BV=9[o9VCEbD01R,pT(b^BhJf5PB4;A__+e:L5J5/dmV,X`"cdSY;Lp+>;:6G/5IiPXM.1L(?mRdW<L]"[op$D37Pbmhdh%-4b-hEK&%MmklVKZdH6fOSEj0KZ%'qfkN4V46-];$#0ag",7':WT*?h?0lgSQk'Fc1d,Zh+'AV,p<uCg/:rh7.tHG8$GbC[f6e[J%E%X?'rE8RZ'R];+7r![(q;8fg+F"p#I>RUC*\@!GnmcT"H9>\V:/5GL8GYR#M(rdRJG[>=+u.8RL^+7hQ=Lf<gd>>;Ys3<t+hm+[%ikCU5=*,l66@u"VC>;q.*Y6B`2%)?+OXClNHZ&jH0LFb+ap'_?DOdR9c+aLq)@hPJLVptJS+>EsgFTCC><+OUJOr=On?%Z%+@21b%#-@(qEM'Et=;\dFYf4Y?%;!bf=J&(uT_Z78D[G2R,&g%K"g1CKgQgXl+oB;JB,\lXP[NKi=*gLNdQun>!q0/be)Aeq1W\RA6&&4l%]JSf+9>hAt8B/ief+<tlZqOlV''Y3UBn'Nb*(/#^,^8sqQ>`Q'V;*CN0\.&?!&cLZH@,nSg'(1goBZq8O6"J.hDg6B<0F$PZERFg%-goiA<ZtSb1ZKEsg_CDYfdIGN2WOCIp!($k$$%k<LV7\\Cf9e(5W(Onip(%k1_CKP4Hf!dS^.'`d-*o`G`7>P,MDLF&b5XT5X-g<%K+5XQ`_$ETK')s8/RKVUp\J9jG7ePc!n%C@k2$#K&T;Xu*'&+@1h,7@LpsP,2`JJB8jK7aA$5>*ZLW3f!TGd6bR@V9%b57+ccgo/%l[:B4L=kpm)@\E5l[)1;%/8n%0#u@QSd7GF2DL27aYhf9SeAu<UM@0_Z&e`u!ZDOB^,n/0.\:U=QACQ6r3]Ub-Y,ARWA*eBj5bSX%Nk<1k1MFF]/1_,798ELQ$JjpbFs3RtcTl:d@."3NOnW+s,'Y@Z"J-KUj8LZH&WQDBE6T5&aW_TQ5?t&)p?EN$[o:+YY7W.A2ch6L%V;;(OrT;ea1l>02/2"tLN$u]`'=n@aK-b3/$H=k]V&k>ZQ2/&=(#DcRgl!^7OQEs$/Bf$,p+:Tm+bD;$O.8U[CKR,goA(T%CW:R>%4W49kTQ8f(5T,Jh%BlO%XV9qQ&UF/3n)"Z>44J&&o_?uKn:]Q5BN>Q%M<NiP=YYkJD#YQ\pt7uH^)tZ>5(&+p_Z<t4,$1Jhn9JuL%(gq>A!CFO(>/QX$M#4FO2@TW:j'?EGh2j6$=W--*Lh#YgDf!&KaO*NP9e9),oLn-+^54\XLT546Yt.60puE(\ACb[`#OPCsn7rS"%YB&#9@X+[b',=@gr!/SC/AWsH@Wm%40GUq1,fc@L.>=8F:[m5g-p-&9F9SiL^l0qdnA77`-F__FO:>R1M6_:,W"NfeAp+,]!^^/9%RZZUO6#-Sj^3kt#kn@$IF6)*&c*o<^Ld[Ec=VHk,nWaMfDU165_j9c8_AW51?`s-p>&KlpP=&<8oBI!"cBY0ecoKqHRmDg*$(*sf%?$HQZ,!D>6\q*IZ)0A8NNh8ZTSj<V7Js49L,@`;RK9"5.`m17cc_.&dJn*ujq,Zckd.q5\NflaGSjCEBmMIm</j+cHkIuqB6Pl=[%#C:2!3HSRBjk^O8^KqdBLMkJ'M;+/4KHqrZk[^hOC^)K:fn/gGTU,)l/hWkb8.+*9Q(Y9gUl;9F06GZAE/;WJP$%;O^I.f2jSdr%%\?0Cj'h78J-c@jO]q'*k0g#n`FhoB.55WRT?g#=*_=/?bUuD9T?VO"]r:XQEk:[G/@!+J1qh4X/_.5KKj=5uM_b&!r<^oPe3[JKB%j=6+e^n`uF@X-$8QEfBM>P@KcNZIf11\%;jeBK,p><r=C`nj7)KWoGVr`0T&>g_<fl*6H.I!.i:QL#B".nF&Ci_jEZ:mI6:Q4*6Y%@k]6S.u5kg8OSpbPlihL,0jm`mTfrKo&,t]X7ADIcD0XbC*ikdf=sCS<Sn7M/><t3ag=*Okfl-s&"MV8&";5tAqd<t7gPWiYT^?o%)kU0O'.-"`?VW!iL7G%UjE;!U"7p&S"Zfp6jRN0WZUchApg1l0?`%*pX5ML7WK9:4&WWW*On:@K7+.B_@hgGdBuh@j(qU&gg[5?E%O#n2hs11=E)<b;E5W3G=;9%ek7RK'b74*sGpSoVa)`H*"hFJ\oSH-^IdmR\dCtMSj6TF5MSgiIM0"\SRm0%%I7.k+oD?<4S,7\m(%)]tY'kF=pp"NBQR&/nl>-Q,*Sr5Q1LDgZ2,PJ-]2G@9%kX;bfX(PlOfH5Jp*d4k#NiJ41a4WPbEcC6UF]SE)TW&($<Yn&:$;1f9C%r:HJq"jJQMfeG$8eo+:&a6,r%)EQ/Ld=@=\r%%P9iA48i<N.'QRMhX[j5G?P,S*I2$;Z_(BcZB\@DA>@?9cf.a7@8oTe-orn\992%,Mp`gMoMZNi>muS4g7-g1<4F!&HP'EFE4FW&`lBC&qM<:kAXN->-*NRBSN'9+[-@[HOV4B*KeGR7V'7,![BH$1):F`fc)Xij45pT%rlems1@!(UFuDtZ,!n\0D\>-f&;p8iU^V.5I#WQG''f)I&Xc%O1pjM419ar!Iqt6U9Ls3L5gF`/Af""dEt>g;>=t8Op>hob?M#PQ%Zb/LR%lMR6(/LZ$2_PuF`tX9R^0aFO]i-6:X9BK08?&@Z812>"USb0;O52YZmL!HR":9eSZ/FgYDbsnf?JX8sL3<2uf1h3@ZU*E3%$K%s%C%i`(At7@JEL*sR)?_(L>j'qAG9X,`3g'ouiJS3kk/5/&YA]YQ\A5MJM<;]A/`S1Q%aTogQtJ-c5+IgLiQ?rq3I<"o+"h.p%lA57Trn2mecA*@A/LQYkkBMEMVeSW@LPpNia]S@X55k&a^+ef!3;3aH/9bdoAK@5[2L]7$R('#P6[Z:&-tEY*`n_<M2?-Z<d[nNg%).0Bc[g-!9_VB\$i!,%#ZI(CuV/b>RU1ZPT8=oTq4;5itK"VSDoB'.fOb,e%a`YE#Z+)le_=Lk"$prs7%I&\)_sf-p#44U*C1o6K%Lhj@]&OerCWNF:O*BXVJo>Z@9;.b_R]^auL:'2irJu'WI=Aae`_@etY,+m[gjSKnU;^6Ok`UG+'A*s3f*!tt]p0`h(Ahm#30e>jY%F%rT]o#7?jV1SJLA-ReQZ.MPSLLm8^Vk/=c84U`lX\QS+"q9L&Ug?hD,PC#B&fI[!AJ,l[O=rMKN)[SKIRYepnReR$*<SGeJ*VDg%IdPjn!8;JW2C%rM>kT%i2rSbYkdt]P8VQcB@ZsTA$ga4:VS_kEi1j!$7nn^/kLcS/i?HPta%V1[6mcZ=<4IK"&L40iKfb#UDY7l!%i_$isiJX9:'&Jn9pj%"rdj!+q9d1Tdbm'7u3iOWC:S@$<AqY!%n>+,[f+Gp:CIuD[(N9^cPk3G&l$?okH$J_1/`B)V%cfIKgOZ]F%j6f2J,=!@3cF>2#4X@BFn-,4!`uj'\X6Ob?](T(*fJ?`-Q&CWcnlDnX=0,YCR^`&Qo?ppT]9V8.0(t0Vls$_saR-kk"Qpe;N7(F=%%$no'gt>dQH"Uolqr!suXOEFJG=9iLm'cb6Hmj`AKhD$!L%JQK*L,o6'9ZeUS#XtYiW/Ko]3Q,&1[O$tm:oIo0;08,gWR$%WV8T_%Q,T=nWAiK>Y*sNO2&$_>aF/I-@EED-2R(WK[FMIR$p.sFqV1dj#gBNb]ar:Jq[1NNCL:?A<Qaai4/dYYJhl]X@C_&h2o1cFO7'K2%\X8`"1G*bB3N1BT!Du2$Pu`s\;)r"Rl$`SpX-#)N%gV(TTGF!bGX>##ds5?r\>!ft<dpKDEuK4fg6Stt2WD"AMlhPIngCd2n3%_I%aE]V)%WN;Z-=QXNI>8INR3_NHmR-_R`P+phchf#sEfrB'q&)T+N]cCLor*6Fg`dVS5>3NCN?^%\1\BP5&MK:<6\RtXjhm$,#=C-`%!?YpXKt]qa\SE=H,f/o8ibkV%+itBX*b2j!f8!Tu`&G;c)%`"RVXpS0]:(F&2P"2-h8#R1@qX9d"h`JnS<M-no?3tgFRitDCqAQt%b"63o"_l0%B%)_S[>pbOk;W5+OlS7'l!-sbc)#KBrCLPKq;p'#BpeFrl29\gM2>loq;p$bCTeDpVPB0F/!l:`[[gY]SR3uiO2FX@%S'J3]ER]</fl[4oU6Em"o-5\-cnh)+3kt[c4kY(]Cc]=9\o:GZP\`BF</I!`L1et(>i?\ZS'Hp!,^rW2$hjs;E\'O8?$)*dP>15,%91N%?-CITkQV6Lk;r0LeFFFK"F%40oVA%VAXHj"NN/X?&kN=oS]EaUZSPA:69/kp<d1N\Kr-BdPN:%:al,;_i>e4V?b!:,<9YUm?%Gono5cEBOj1[S[`e%&$WR/htPUq.q(4tEeNGG?581h;oZ47&EYBXq6$@un=l@=qirs02Ccr4S"[hcCWihLqTseO@_clS$PopVDm4%Vc#b7Yo#T#-fca9GCi.dP*jQ;jf5njl(*H.cj"+i&)ku6&&<8/=U7m@>:JQo"QLdjrop=9h(td"H*?B;Q)c]aa(+iKpE)g1K>kC`%/m'Li:$c9WY<=PZ7c'1CHHfaVfYptEgc=C@m%V,5BhC\Cgr8$?4R+eJSl5^g0=m&XG4W9,DYQp>!S\;t?$"&&A`uR,hSl8KfA&eX%(Tt)/G%=A(]Tgl_q_I^H`;Kt07>ZgqG@uDqIJ?d);<-4`@jf\.mQ?H5f,?$bNL!Q)al6!TSH6@k[tQ&U<Z9af[k`FlCuDl_OTjR'%MRX<K#prh>&XK]d3H%A!*1@e[d5KF!ch>JIGQ'@,K%Q1@i%]CB+_6`/,"L>rKoeaVd2fs9*,E9FA3S#HA($Jo0:oFiC,$K=nq+8\%6p/;TW++SH3/NP?ffb0*9rpMPDOSB8-ChOlFXeN,o'u0rnggJGS02RA-o:Tl'7i7>/g@T!S4NLd&3Ouu=W![V6S@6ZB*3CbT-fYf%i][%gk?N_^W=0'c6$QEuN#N2QUQYtA`5?K^F8Ye&1*<8<15+O>"F.r"2&EJjifjF`SQqNqcZc8ta5\4qEA"(,]I,EjPp(;p_]nJr%pFs7KbV8\EE&W)lAXj_-BJ%'<E$@6rOYr'T47;):_r)L%@V.faQquda;r7;eE8ZJ_0lG-l0p`B`.5,o_`k:8jh#7t7;YUf6hX$)L%)t&IJ\queVHQBi6.B4G9p`@K#)9@5q=CU[8\+^Yg&T;$7HqSd1k2YD'o$S,9m.bq10V0G/W'jTI@niS_[N*q)1NIq+\LoOOO(/%b%p6GHMJRQ&Dn'+Q"g".$S(uE2'@e,Mq\MM*o!hIHS8PID=L+Dl3f7V%GD?<eoB[-UuU)n.]aJ+X9i4,VQA$$#,a$lFuhF((J$;4iS%mKVBJ>YD^Lf:2P,9K9LBfJW:]/eP!R`H2N@mc,g0a5:OM=:+`99eOKZ2K6XTn].Be\DG4iRO\*&X4ta$pW.6pRo#,\0q/PU^e(=,%O9OaU%W'#gP_]@'#1"CnU*aj8,E2[h2]S43(-a-"f+0XnG1J<=T5q2ugUf(4fD!Q`Ru?GGlg:$-"+Aof+h<"[&!`S=[kUl,L'Is,%7?4YAXu*edbqlV&=$Bl-qWdcB$rsk,@9Y2;hg4kPKY4,=1q`8&bDI9AWDnuqJhm@bko'(Do-hmjh$I9r_$PlqQ&Zbfl1Xc*V5I4m%q:RoI]<Bo^TR5<H+fT0'H>l&QDpFm?$@AmT:R5L&Ie18kOIDIA]lC4?c2>I@<#l23YFPeqC.tP5UXDe352:3MV;!e\CV4mF\iZIs%$`MS/EMZ]^.m<K'9(lOMo"0Ad>\U`r=`O3$$p7g9^<mY=T7us.V]=[J?qIaS7DL=b/?InWPX?EpC%og+9VPSFC>N5(c>no*kq%Q_%T7iEE,&Wo=9[treeY#giD3GQL0j>/aD&S4lpgjC9T>)(]CK3&[7GiN1_T=B,;k&+'pQGFN0EV@3BNqNbZ_YC>8)+D2KMUbu2P<Lb%8rKp].V`#<O?K%0jGBQCQb8(>koH(4(NGcWRotCU26]k,5"R_lF1**)T2le#r__Ye`_/C(QPQF;kGAQH\gfp\/@a51H0cA(S\66&%]+GeeLZF^(C?O5n5M[q&fa?aur=.+-'*p6UQ+<MOEdTFhJT8NrZ190+XImWpZ5e/p;5B/q:4tuJ'+l';lE%s#P"QB7`DJOQGSaKH%*Hi)V#.cS+3HDM?58Y@SkD+`&&3h[G+J;mUN:Y(QH,q")dCoi\?21e<_f%2fS4If:G08M-1Ep)'JA_:Chqn%\WD_IlRbo/DPK?Si%Cr%O_*!Bo`Kq4/@_&IS1'td[666`'>*CUtHS=*2'VgD,MYO[XB$97t3.tUC'AL7ggpq=[7l/ES[J8F^ej&$aUY[0=*Z=1:+EB#je%jY@mtL9+Y"C?0s>&BM,-FQ($WCoeTK"T'r@(1>W35hDrnSHUuDK7=B(b8ZM5"W4Q9*%da%.17hE%cG\QfRm#=\l$dt2cSih^o08D%ro`oCblWjH:Hr&$4UWrY%UarME_$sRe/Z7IX)Hs"J6R\q_,bh7jWf*d?&8gd^nlEG-$`&4<jYNqL7L^eR7m@3L=uN\0BMf\Qh1eo%aqo"]nq8[XM\Cd`rDGiJ=_du\V0jmGp5`M%kNaQcjc^;94(E#[T+)P(?GC_t6]HDqT;\IgDtP(FCadWCIc6b4LL`P<^=P$FC%LBR%;qd_bfhdh!oc&38e3r`t$bt4F7XjG9\I^qbM'LjBkNB)@>Q$[nQq^u;YhuR3UL\DahlR`caVF8N^[PJ+`kK3NhWm+,gbS0.Ic4FR%\<[HVlPI9B5M?UtiV31;c*&,U?9d%d(s&*7Q/iPFp#CmUIYKK!+,b3D?[,?NAYi*Lh4<Ef(Eq'Gl!D,DCDV+0oWW]@U>O!MG0YHm%XaVMN`u!Lkq;94Oc3WK5\F'i4Z&3P)hf*EmM0o3<do/d?If+Qk_D`3c2]51sh!6o79%U1oU&?1:e-rt@0Dnj8s,<ZHp\KTUK>Y"C%-Bm:XD<8_,*rKsLM`pb9me$s3"+9Rt)rY*f+"U(&H9_DBIc4C`grC6,?GGu6rBf*1ioN>Q_f#.bH>EZWqM!hlQUo.7L;EW\`QUrD%=I-@>X'\gh2XFbbn\"Cjp\I=hO)OrCrPELGMg$9#W5HZ&+5a$kqRNkUO88Cn9Sn8&T3j9(eqlGMme$s[:ucW!-ZH7rpoT!4B!9UG%iBqPV'5fEDlX%>.V`'N^YFd0_dBfE%qL*a2U042anVs.L:N,nFGL%#9f.S8:9fLSKSLS.,lPJ[Lo^VDC$]f)6n)PDc?9c3s0g=4[%Z!ns6lPDa%-Td+(^Xk,dg?ouHUYb>"a0CF^+_0<n(NEbAk.Q5+Fq9U]YMXk?kdo<jWFa;#rLAo@^"#n<D18R5rPB4W'>l0/&b#B#%?a12&2V,QjDS!KsacUugcb4edM[MmI#E!o4?hgaPjP6?sn+C09q'X+D2=^HSV<!#__d/pT+?@*$;%>>:f_u^I;%^]tf.bmtqn[Ul%I1d>ZnjI`>@os]9*C8jdQ]5$'n$Z[Yff!K%PWQ#e:+%-ok+W*oDHH(NUl\a49.f!Bbt,C7:QlKDI&b]?iPob9RW#$CDtb8Hm=+D%%&BC6#p?C\Ur:3p$Y4,_YG2A;Ne)*@n,P=m8WT`*[er7$5;k?-7r]\fG5B$!b4fc8!LR"@qI^Y`o&%8m4_V+,6B'oNC\Gj":+6hZa%oCZHHfD1A+qE8t@[\$*?Xu+aJg@`_df(ZNHSaLC'N2+nqdH95C3koO-J)0S]Apuq@n$VjVI0FgHcKs>r]K!YuAJ^uI;Ten2e`*#Y%[j>#]qZWtilYTGO2J1:Hh%tFPgU"'1Gj.pe)6Z4%p&;m$"h[rBcRiL:eH:/UV7liQFaFX9\89H^p0[K8AXBRV*B`*P\'khcan(PA%06!QEc\n<"aDW*cq(W8`"#[PPg[2!sWR-r[bZEum-du.@(E504D@Z?_XJ3E.9K-ad)W[(LZ/j9]cVd7pK)KG>/Y&#lb#^2JdaCh&%L0uBG\&7(m$m4!+P9Q'hdWdOPQ,<Kc8?M]-@`(_QInFpMq@1/&ZhV%YG%2L,CK"HJrn?40Y#ei0f[HH?jm+Mk$*gV?Z/*((Gt=b&%4%AKMiOSesBZUFHoCCn=$-A.8:Ksk)W@i'gri:IobO8eF5;/>+DKaqWC@4YL$V@s'A5^19hfeP68]p_h@5#K=T?WL>H?P<sPNQrP%)"GO\TqCHKcML$;B=EMBXtSb+aGSetdEc9f]iN6Tb0$E3d-aG_V5<f[AU\99='h?mGYY%PU&,_tOkm3%%i3+h#E*NGK4XShP?E)N%jMV:oik&$F/3MW=Hp`A!d=MY9S:>+(O-[]hmomt]ON$r5au_C`&t"=iH"X[^@_7+8P:8h9qbdH<+;RuSG-Ooha\iVj$7%be;$NWY%/i22\=eP'Dj<0A=i/R6ikF&,.p0M>&;1kK"$9:Or6/B1=nd9LiR@.lGG2DU=mK6E];-p)ahB$<L/S`+"Xk!8Hk#_)jW#QVBf!HaI%2E"<B^TaV(,DmP;m[7-$ZtHrEBErE1)FSp$EO<aIqFWJl3P5,cr%Rk,q29Xd)Q\Ll'^cd/.aOO[I3nK.dpW,pTlL`8IWD?:=TEXF%ojGlZ#?<%ffe3Ii,=;G4+W9jQ3d%ih^EN<C09C++4*:ePc)pR3ZaPe,WAF6L+!Gm\Tu\u1Io+>O-$!=i[Ums@ef9-lE9HE+\*?Y,%ST`+f<H4s_729'FZ3Th:)_-'Ce!='Xo<JGpnQmc.1#m/^PcLt3Y.V7+/h:^KmIrlome4mSS]?nS=kE4pEj-l_AcFq!'S>-%ELX9o%$FdK8TE<sJG88#WgU1/'oPeQ(]<@c;kuYH?Z*h#cUZM5gUhPn%i:[[n4ke=]Ahg[Sb2[Jg^3j3Ggacp(>r\:gfI<&]m"M(?oNjI=%7trY^WskQj+JhjKf?NJ&).A5g-T(T^Vm<kQeB'9+I;(n"/&-L]gK6h[9bTIpb;dY%!*TRS2^9qm_9\B8Uagh3J-&trHM%<PE?tW:%Mg[V<E0J6]->u+[+hk1Eo.67TS4M'<hRZU,6:/$F_>ZR`H2X%qUt1I!oT5ACDh#o&`H6lu]Wm/*"jEjhOL!Tmbt7ct5&bij:2P$N%:T:_1es9.+A(d!u-dk"cb\jU;YkB(hir4Wq00h<9(icoVWo*6GJGXVF50U'u7(W0aRBKQ.[XBL\7cL$9EP$il0tNGB:[m:=8#uo@%E,]m'dPk'lUH:QFpm0`fO$[SQW>q%mRC/fTeC)mrDJD0jGEuDpSXP81kGdRU\cEn\eC*=#:+F`[/u=k30686O='URGquu>iogLRI%oXo_F6fm'B(KY%Kd8mgS;Z>HdIHOqFY3+#Io,"IBk=`G]`a8ZBB7:0sRS)-Cp2BB)jZ_,[-1>RMWA[)>`C=FIMs@qMhJ2M$D_'.,%44F#cpU,YO77istrAs>:@F)!@HCQKW[</GP**^1I`iaqlH99u*:NE2\Hs6A(gR2AFMksM)n@*%+F-/m$BlL,20V3(:)';B]/-jL`%1C`QQ%YlVQCWhAt.5PI*;QnS"*1q%1-IS0BY.qn_26QbkN`@n$(L4H?p:RW;qXF#[b+?:gMndhIY7[/I=g$o!WKJ@Hs%+*_\9qU2%%n*SATe=DNKEF.,^?@j#Q"T(@G%.;G<t<Na<m())iH'JI[(LJ.OLMsq\U8,cX3mu4RW<u)VR05'.GhBp)3o8GD(#?@<_nKk)eo:Z%IW)BZP"Em;cYU`[oo@RA,ft%pmV6ug6,U1"6uRC9L2X54b_ij>qRo"YR3GC[_pmneh"4cbl+;!:C@hM'bkpV?EYju'H"ne7Kf&0`%@4AU#/O(Q0WD'(DP\]UW!T'-8pa-P0j-nB9*:08jNd<q<?lqn`>h)^??gY&c<hB1)WUbser"44YO/ucA)EbHGA*<Q=2E5Gm6."Pu%GjC.'8f$91l+qcaj*%_(RuoJ<RNX&0O$)-jN\r(lj/VbX8f`1LZ)r7u)if@GaZD)L=Kuk7M](oqo.`#$j"qQtYZTC[Jl\6XZ0&h[%%p1RDOYs"p+hJiaYJnm>A2;1-B7)I)=%;\;`BmU'd+%IV.)48o[dn@78!VNbU:ut$C9PjTH!^L_:#''8[XMM(<m0=>f42MiqD;.I%WLb)JjgtDY_TS'^?EpF$NJ]l?<\$B%:%,1_]Pf>IdY4dR]i*uN(UcKs0m8pc%NgUo`R,!8MB/;4:A;nhNOt8L`RT*T[;L1Q;<q.&%k4d0S6+L0ibEhU3;]kWg/YN^'mDgDq#R["<bIaoX8$.&K#5Jkg&'tE7q8K6:lqAQ!1<c<Q*RQ[d7]>r_.:oi$f>pa:mQ\iuX*^IO%d<ld9WS<7Hl9-HA@lo\_oJtd/&BT*V@_%?ioP;^bF#YeeUN1^e<\0Q7ZnnZ8`iC/gAKq+@Gg2(er-:VVrVB=8`)63i$+6%o,JIg)%%`[l1&AJ%p(J93VrVbA'J4+^n<PaH<m]h>OIc`M&&-g!A+a=\2?U'-fjlX1cnp#1g,NE3KToZS_1)/2-pugAbEdnO$OR3-\Gg6i.%ErF8]r/Q5o7HWat*;u*O/$nWk8nkkK8H4KoM66iO/NsMch!(h/h+"e*j40Yj)q1?eZ1'd*H73@L\R)d[obc9[XF1sufuQA0Tra:%%>bkdh1S/!u5[Mn"K/#or-dp2?AZH[])2MMqlMaKATsVMHre\">qMcGSm7X7H*liuO.jHe9CO?^iUaHu`$`ocmajL!5Uqr<e`u88/%2E*m^N?Me\bmfdi^Yq&)*fDbc7N>YV1?LO.7N>ZDs4FH`J'>V)'Yh.W3`@/sGEc:DS)6gi2RQ.ll++5-5Nbp;+28m@Jp.@`-E@^5%4&0?nIT`nJ;MK4jQIPJsIER7mP77CM?6,KJ:,ptqkM.?2PE&S#)Bg!(\.TkGa)V1GQ(uW(8":f",Ym=ME7FcYZ,"IT@UT0j;CF;$%og<5n,DZ4dIsU2N==f;aR<XfH5IomoJD"`5<8o!Y_>6it%fG<rBLpD:N#!LNFh3ir:$i-\8LjG`Nu9oYnXHM>IB^W0q:pA&Oh/k,%2)9PTi8RqX\0`7JS4ZiLO"b43kN`$*L\Y$_f53@6KBYD/LJRr]^;$$uLOCd*FPCJF(M!&Qi?<\jq>2W#/.$g,4K$Q8eKkih'7un)%UlFa(a7>P"4F]7*.f!]LGD+A'^EG^tQ!S5(OmSsEIV8W/4292$+6n++m<Ck>5M>QnK]F6AGhh[o?iJH5a5%5Lg&.TccW5>jfoF,/%511?VS;ucBs.AY&h!M>$j<*c6h!GZ(T30-4a1f=!kh/2>pV;t5<6j?KfX!/7b9=58it<ZK,JNkc0=Z5jl[u)mH?U^AS^Z62/Zt_4%CWnM^Rh`!@Q?7!DRTi[dGk%ej\!UUfoXF@3aABOF]dS>9:VHuSFS8J_'3]opWV,"!B6JUc]$lG[?>mf%n>tKLGYtEOpDh.45sZ0H%&5VfX2mVJQniWg\^'Z3_*R)^]:[\q;!?.4;>5_d#d*J[[f_EWKJ^t#P8C1sr]9./kcbe9+65>C^H@YbHS[A4[4pcFf`6pag\uT1N%Y+'mmQsOW9*W_s5nDMlGg!MqNQ^^r9=!l\d]7o!d@8q^"^Wr?4aOM_V)g:qe[8OHX3;/Pf8lLD.>46p+N@TCYP<I0iiI&]?==J+,%KIp236@(6V_O."X3"ph2:Z95uHpnNR6)f(rYi()=!7eCOF+<O1_/mlN;BQW4$e2<-q0C,7lK5@0"Y2`K2\`AP-$IC,-GVoc4Y$>_%beCuHS]C*Hmn8]]OR_>EkD>a]7YKDVrhN4aIUl:chMr,!jC"#3=$j=cIOa-pob\R#+H$Lo"9`sU.A@qd$,o3h7=[&cE/t7P02Y4B%Ud8fM`hu+)9:?M_Ehm</;lG,!2<J#:Aq8ISN^s9"r,_.^rL"TpW5>ADEGR%\Gu60r7X+(KT#^0<Na.Tt6BoX?1sET\QQh<c&i#HD%P&W#iKh-h4"ddBimbD(CCdIM''FSV.$:-:7&aXcqQ)H:0U#8fd_?VtSaOhS"iQ.k&;`]DNDN/GBb@S3Q8X53c6gO-7Vd)V-$Y`Tf%K'!.Q$UkXM@o;>M,KeYP,<cc@o5PWe6m9Y(8Bh]WCrBogad=^j7)ll=7'Ob3\^JAEV*X?/\IgB;1nS0<UN0gp94_'@]G>c9K'j#E%6'Otg&O$sjUc0(!71NC(*jm:rjFpG_17iO:J(Ja`C?Ad.aC`>J,aW.5bg`[U5I6TFP;^Sd47C6`n*_3?E_3V8+;"q:FV9gWpa7'8%1/G[`Y!Zg]%c!P(C]$'a%5Zk37J_(:*k]@\Abu!`UF:RsY4Pjte#qc-j?/=q@N/p65JZnYFHemk?PFOfR:@2TAc=s=Gh^lqnH\@'%l?f*cn73K#\E3G\!f)ZGgFb)b%tpC\GI&F;$V3ECi/BQ2kJ)Lcaq5U!ZRG9YT#('XPb`l)R5drhH@9.RW5Ij4RD6G[Qn,NKQO_aq%^ZfT\*@>-k3?1VQh_o\P_bOe>`p"d=$ho^b:#iTS\-SCB43[Jc2<]Z#+cB@BCi6@96%Q@/1]+nJ5C*-K:tjf$Sb%4g1;mH)@/N]k%Js+fdX9gVXdIE_JX?4oGo_us+IJ`Q[HI&5`bV[Id[1gVf]9&/63E_]kj3Q0i90@W#R1N_=66f-mVN\oE9dEOaSJGY2G+E.=aO^^l%lXL.5aj)mlqDD%=C;W!\q5+`<jjc!drOemBTAM-6rjs.Clar@NDaG'jgfEFqO5?jFm[NcFqOF73iUaPH,\@tSE_Q'e?!afm:KsmJ%e]abl*U..,*d(*o`'6dspb?M&qI>gmWm54:JZY!sj7XCgfoNH19bGPh^2!_tI&K'-]Nj8.'C!r>Q)Ra*LK>8[<MW^^"Yhi'Gd@'4%P9)7#)5<Lu;g[/Z=_'s_r]pW8$dAZd*d[<4-hRB?!gm8`-Vi)3i=]0mT(oice]c262cDM:b;^sU9'?`oXt,rs?9^0D)FZ^OhL,X<%F/[ouVl^1WKAcjlQ@h;FPKH/rmOpU(5LS&(Un)H_,T;rh#P]i,VcjgZ7_+1n(*R1m`Y48m%U$n=G9>fh.M-eTRIG+kEo',-kP]W;%B9ADMa*.t,b#+JiAB5h<dF?>+@gT1_;#ug_E]@C`U\B6r&uK4X8P?P:AFAf^=mmDU)t/beE[e8^aQ7VWq6F"9=1\)$7K)-B;Z#kE%X5<+h=-C,lH#\&[dS'8BG-.@S(P:m)V@^Wf#)WWO_ui&*qZ2K_./gH\5Bj!NeuPWSdd;d5[m3F==iYfPaFROMpfo'>6;&D[&(hYZ%9eH@GS3obB.CC]I.UX!>cX.<ZZ?O=?h:hEmV/9P>;GA-<FM$GMqJ1PZF0rEaDtc/kS[Id"V1#7IQ+IQN;X(?)HVmqlYJ9&c>NC`@%Ia!Rl4M30ZC).FP2/):j['Z'd.9SZokCd5iYTMk\m#41?2MF9AL%"7Y`;-M7h];L`g]9M?+o,6_SSSn^M)7CWK-kc6<,gR`!`u+h%].=fu(=FMLW,#1hF6!=V_Thf`qKXNRo,>]4!@RVVmdU,f/CVQ^G7<t/&C)Q24lD9E@C:o*p-Y&CSR]bGP5ai:)U[1e:(X19odI.Z%S_DXQEhKl'l5-;Qg3SVsl>Rt0Sq&#r43cr&.UKSa9fSe3&?j\qEZtUFTYFgqfDu_tf,I;14kS#PDtc"E?a!8JL:sX\^3Zo]ls!3%%-tq4]Sh6.9)rTp6o^aD"hu13SfXE52kl"RoDY%7g*RR\^KsM_i;X-%uLZ7Fb43a:L0-eom(mU^??'\nGO+!+"[.pU;rL9leko1A&%rf\UGb?OT%>?,:mCA_Ir2k&LYs/j\D]L7)<r`*MQZa"7O/PdBf?4PGmGbS3r#toBJVnc&XJ.na2P)aTk(u5?M[kc]=[.8@uqe@Y5%?RRM[]!fV=[cqVf@iKAJ%skIoaYtj1/JCg`r8!UU#`_N)2[-?ZNU*O]G>k_7Np3L\G>lT2?T^h)Y+*9=V"?_p8b@64:<rJmc)r;$%[QM`OY2s4'SLWd"S-?DQcPdk?1*VUP7bNE%YrK'm(7#m%m9<Rq0#Q&8WK#/>[a`r9n16HjVCE=p).c=<:['kMJt&6n]Ruk3mqfle%kFZQLERti#QQK7pe_/K")0L=@#u8nkB-(M!*#t+fYfGV,MFF'"fB9l+mkbY6C=%(JBb4QSUo.h,.t!$Y<g4Zq$5`9R#+#'#>N7:+%_%kQRcO(Ioq"7kOnlt&cQXsV/U4aZ9U;2HZY56;.J6-%p'8h"A-aqH[W"E/4\gDq27#q?^(1m[rC_je?i\KD=W>g>t='R3sG=<hp%@APcB%U8AGbR7[o/$qL7'T+$>aLD)+LghMW%G4VM7Bm\F7/.n_MoLQ_UGZOA(+]>QAL9KV1NFNTnA_2Ic&a+TPm;jfm4op,8)Ze=%Pjo^IQt&u`pX6p7l@Eln=W1AZ/1h#J=BD57a&lLT6kM\:L]AMh\!2m!)e&UeQFoQGTn/7&ct5hR`eG!*=kHUj_MOAZZ(s&V`\\cB%]rCDtU5*6h"^Z5HV66E:P*I]>KeXB45l=g)ALt;I-=_'^!jX#.1);46\L7Ll8-@i'&.of:$n7^3Cn"+#1WIs+3@.MAU5o#=3h1pF%eGJQe`C5BQ]:l8X'[!ph7p-HUE\J6%1^"2OLB_XY]i8O_PR']sDA)2r'UKG.l\H;o:UAH%Co^(#o*bAL]K#<7^7H_$!^8au5HV$7%ak(OG7;&MWT?GCK:2L<0j2@7N*d\uR^.;jVlK71B54NZR`H.p>n/X=[^d9gNFUft@5A:6$c$[XZa'P=,nZ'm9XhEZ&#L&=&[bdPm%W(<lM$pro=1$osd\h>,1\o]A_LTKnOX!2MR_Ya0_@@k["=e==FE"6L)cme=tP]M<?Oa)=+RP[$?:IjF?Z.kfaM&bI=//TC!A6j,o%3.Pm/,10TiodT:d5$]F&?99o5o'*I?1!bsZ%Ksu'eNor9=AGP*E9QDmSRW)$B]&7GATirHA^LesOu^(90if:6>\#'15[eNo?@j($%9K:MkMqf^R>'*We+/:+Lm*8?"eeTo?]>hjeG*Fp-C\)Y!na8NYid^\bEqR;g9?I+]55F`^f1Y*aim'TDrTc"?6G2&!5n,gD8>k@6%QO<]bF8nX'&1D1kch*^tXoe`r*ZUn:he`D6].DfDW]W3NaRR!eo?S;nrK=^2V!Up9A\P7sIQJ&siTsV%QC$o:;+U6`=dN\YoQ^rA%9RBfReb%1j'E!."O\n<C>\\@<!MT`YrDopZbFFVC/U@#SpJQ';]QgNBRT"/#Z\sULo'>kt2=&`/QKS0FB?alu-`@6@T*fZ#M4L:X%G^_,,>'0loW!8icRRg6D"P(<Z;dnA:3C1(OIl7q?W8:f_IP/*EippJ$SOS_4HN0lF"n^tErOpT>W;^)k-KHHJ:I>)tVeIMi`C_Vk%Ndg0l4a9]Fj0D6:P<;*jdrR/!m?\`0rC4D!mJ`Y]!RT*M_<#P`\WS4LT2F:lj?0/+H:FaYUC=4q4sLE,'2gTHrkJ7FqD_5@[//+%%7*.]Tr^K-Gd$NVqoWP&A,nH46O&E7fYFQtM<QRk%VBp@Pb:7Q'b6--k-0^.$RXlT%f$[Fm!2A_`P'fXc8Qj<D<!:[V(4K!#b,T/"%J=3ek<>?[#<_#cB^.)M-N8?KE>Y<U*"[UY>C9+-k>EVj+VNs(Ke\po2U(GPSoqVt'bGGN;fq,\FXG#:o8kG1@+M(9_;c,%c#eYp2%XQYOD8j]Ye#Yh>#l(iI1!k=MsXe7?24iP\b.V_#OcBP#F#bjtB#dk<1FT;J=*0?FC'j\gj$q2m).odP=$C*(082lL/Ce+bAV.Cg,%K3kfn29Dge!*PK'[P8'L$0D4@-$6Yuigt4L8MT`cZ1*BP26r#D*>>WELu^3$An=sU0r?D:&H/U9bgNhd!R*n&gP,h_6G6p^$ASUq%8A%nj(/(W0gJVj>8^eA4`3L+%<"@-pC,U#B0PROV.$ZV#1GA.B-okGIe>eBP@uQ/!d#_;-VF"[JWnI/q_lth/VQ#+lR9A3@AI\`-%bcE.L0NkfhP(fr*9i=Y`KV/Oj\qUJ&@&O)5ilV;AAP&a2!2K!@h([Nh9h^tXWamBtZDJrP\gW6Y.d=8#/gX(9JJaQLGp!<W"9E*Z%Xh[IM+=-&jE!R"R_o!/X:SpKHf#[&CZ>Abd#,-%5?njC'Fted*a>2+5IM3;jAE[,r6:DfL]Kl@N!RQ@\AWquV"3Hj<i%bL7/@Z"p%D%Hsg3!VdN19b"CV3"Xo\r&3kZ>R2rG^NF=AhZT;Bdm1?0Z:D"PLLrtKH$(BKa6-UJ]o:)MFKLQcU97F0M&K#bRhn%/Im@+&CV=l%/AspsOB]"A64aM9+[u--2Gmi?IRKR-8jb;M_!FLb<7)#M$rnNh_2JSS.N&S'0G,rGko5oW;c[b0do6FM'F06N("<tDc[eY#BeWrr%N#u%D"JAV0E!U<b$m!J`+\>QW.c5tM>3m<[=GL0+1PeN5L)@#UJmnKg@#.5ikY-LTP"tkk7,n;6:kt2T67Uk>.LX@QVHLhiBI:+&%`bc;]LII[T)AiTU%+AM)"?VJaZL3;M##0cmVRmDEMl7#"R/dZM`"I[cQ4.':-Ir/E"h2FUD;7%m6lb+r_(]krM.FOIV%a;r27!(U%Br[sm+sDaC[\:=3j;rs[+^Tm/OhG\TRRZ!t\AV)Vj/$G9.)U<Re0i0l5s0^\NuOg&,*CBU-5Jep]s=aQh1dJ=SJ9#Zar3=(b<\Dp%.Jce1eD'gn+Bsdm+0u5U@hA:9KSCu(OO<$k!s*!XH*fGZnTPkPl%AF)f-mDc1F5c8h29^[%O,[,`*pNs'PJ]r!94AW6'AteSsr,Y%#df2BI0h1N$HP(KcHp],KRc6C/D#74T`SNFYr`LdJFa\S&mf(h&TsBH5+"\;LNm$)9N2RicOsVKN2-UA)EnaJ`"o0Kp6"Ur6S@eF%o\23EU]^Vh?c]!`dFnP\aPo_L3mgQi-LBf@-@'YA?6P_oOBE,'#W,FYNG*dBa&".6%b;nX_k9=(N@86]:"7GjT/R:JLPEKVeY[Bs%*IDH>Afshn-#nHD\tO(>PB8'Z4bq-eK2nCcA?q4a!]<b0Lcs/$Hke@jP!VmHJUD.T&#AJAK,@rg;Et?r`5Ke>5n*8!&Hkt0EQB)J%%pN.;.:ca6-8<dH:fWET=2[F6feP:1#5J*j$o9b4To)OpYZtosgVV3tO>eI1-6[FRYQ8]'0Zq36JtG#_3[*ehpQT@nq-l>h`n:^e%\?>&t>J]lFUl['oZ4!>CeE\^F!pQ'_#bW]$Gbgu])FL6YL.=]1R]`(.%-a3TKuHjsh$$1E.%(G4d8>C&)$Upsf]cTKYt`[$.a4O?%&<.N?&Om`'e0mR]gXb/=G$pPc9aih7=$mi7fG,>e?NS0-AX,W?5%9",I$ej=`Gd&T>Z!=c9UFa;A88E<hVeI3ReUZ'JLRmV/05Q6%Woh\.87,e@l9KHedVRJ,Ston>2!Ys^3tOl3o,:\X*'$r=S,a&h[Vcf>nDD9]5L;A<18m9o"pQX>2LgQ;Ut[F6GV2?/JIa8"L<5^^%MZZ\9cnlf6@R2LF9Z!JKk=pK*VSSP2$UU,l!(32Y"_.[8)N(CRTI)!bj(2J4Yr+@D)f-O>MZ>Ug5LJ!(O:BoS%)OJ_`@oBB9]?k]%nY(-eG$5Bk6R.*k";$qWe-Cp9"=AceXX#o*?s9P."@?52+@Y'lbuTNrUqnNiU[Y/-(*"G6BH.D[J;>,T6"D#"q%>t/Z;_TbgEoc@%MbJ3n+t5!m=NIZ(iJ-!bg*GU,,?KCe;^_`j'b=4I@>'_NlG+riq(T2pBoe;?LX;fj3.N1oChOU)5mM9=AcmT-"(Smo-)%<@U8T92%&VL8r+Z]XgF,0tX+O#-:"qkW#%P@sL@:%!ZF4k.^LnfRLb.Su"k*Q`o\S2s71PPX@RlZ<24baBRV'cLo[2<;5FI7Jdal1BC8%g9S%g_8iN7iaXo#te,tRIA3rX(J+eW%9E&%?Y;H/l*H]1:+Eb=9<XN_?b*e'9oVOgek0`!?C*9h+._VYc*^Ia<THW,2:!Yr)*Y-R8Gr>%Wa617C(q/G6TO4BgRhl64LRf4*8[-m@:T"POC_!s!!iQ]B<ZASD94[rK^^)R6Z\T7+I7^,"[aObl^"=soK?-:a]QMj,t1m#kui66%g+jKH*GJ&5'd3";%+.I3.##58#H4l8J=)AtJ[pPRd#K>)cpm40A(R*\kn8"kE.'Q`L]L>C!p_qZ=@bm7J4:2H%3ncW-4(tB\"3o&%Bc%&/WK[K)J=J1-'2)7ajA"h=ViUn_h7n+%oo&_g4Spq=.MG)*:l%=Fg5?</a8pg7U92S@16ufn/q@XL.f^g+Lu2'(RCjbY3"uiV%*7)Ml5dO"Z)QG&,Jn5k>>s#@dRR!MM@4mPZ,4YH)!9d/qLPn165]]cW$.rr7;[B10`0qNr1fUn@="2-e1jY:P8Ig[fDpV.^@6Um)%<0o(+BZO-"!StQmNd>\O'9nT\ASk]f!\K:hN&$750o,u@MOIap=ZSt/7HNVrR.>9('9ni9geh&]!?C*9h+6h%?nhk2Uj-";$uj;W%iK3$[&9`-N*)_2EA.<M!no@8Aj:HJNh&J0S392iFs82)0E41<'2[gVM2,rpp3Zo^%$Fj(ATM%+LV]^>A+USM\U?9UU:A[:S%@K:E%2H#+/:m5?=D!K*T0cS]g%9MTn?lE0^Eo*$hXjRjE-mF>h;&kt]luO"bp)WL[&*hLa3;\M4]JLaWYGamI/5?NP@S(Z^MV%2LCOg2F%[7c]#CQOH>!dR>&lm1aK;V;D'J"RmR8V4(.'e<>r0c7i"?sO.H=%u,&gCa7+Pt>rL/Qdp1FjY%B6-O19_Cb#`H^9:lVF3:+D7B_d%8eKj%%cM<;!u'I5&OtQ!#<VBl7Y;g3%]t?;c=,LFG?QW/m5A6pibghjX%AVB#8nQ?\>uj&U[)gBY/.22'/[<'@%)ea`q>B"$]N$^%;_=j*I3"(#\0EXF$(X/2Xssu9ZinY!+cHEa26ODJEi,Zm!?C*9h'e`j^Q1nbqmtUcfR[d9,18#no)?KKbr0,CCD-&=2"m".1t#XN%(8oBVMKG&Z]0]/jWfi1GTXIk5<%Y+e%$<E4X)/Z+Wbhck7\1pBa9J##2O@5Wi(%lkVTrTM0eJ6pWQDFs6@a?mL%/r#\X1,B7$nF!%ZOB=\V6Hg9L6p_%<7i,OQp<0VGhRgZ#6G;j,Zp_:#Qm5);%BST4<ZAp:3'Ys#\fJGdm+7p!A:2'Cg.S1KJe7b?B<SW'kNfc*Q-5Y%,1I.#!'25XU!eo:W7).`6UQUqW>Gcsg'GcaQrRNn.H'8+,#nnX:^_o"%gW^QiX[LcN5<$kE5AdGi7PTa0cEGoV5/.\_*O+CJ9KBF%)]-^UN".t!^1r3*2VgQuKhN'6E.dflqsA&@k9WE$U!^$4[c$8J-Fb"\,sm\hTsu?0.a429=n#i[K[oP(-KmGp\YI[p!Z]9HgIAIP%s(*2Hj"(4WfsGk?)<"qUPMY8W[qJ\&edod?\EVO>9aigP>L5hV@dCHV`]8^5E<dhLE=k[[\:`TTj/1GV'EqZo6-`o!08R5?@K%FO%+p,\<D-M\/r5R^rO9Xd`l`)BLd^,riX)<`eYXM6a%`iZu!a.R#e9%h9@/QH?)G^s>^pM2edIBsN!G!A,`!b(F?84!`_Z2j:C)RG7%!CShV@^T0,[R:B6&'Mb3%(:bT,4%RJ+no2a@.[_3CV!q0)L+gi'sN\>7B2%h?EP&HGY5h=K&PcEAiKg#d-(fO6I!n5b\j-^l-9o-%H;-;/F'^]V@$Jb#.PgWR5)>)Kj2u-U1d`F%.Y?[/OC[R,$gRY%WenL/'c<CAZKX8IF3#:f$;:j.Bb7W!FdM+:FJLG.mMgo:J[#!A%f=9i#aI/LW"E91+D53JQs#(AcBr1p0[VX@Oq%@+r_?(S1o]dhUJDjUb"2b\h<4V.76*Pek-9-t'$(<&s7M@b)(3/7hn/r1<Q,bO_%0F2_2oX[a!cIfL<3qDc7_ZMW8;rJ;OAiknj5[,dNn_F`d"OB2TTZ%(D<$@X8[@9Wc!'TklSMgPfZp[)sL_EeI0UQ)&WJdVu2jHAr%K-5`k*9Q0<\E0SE+Pk'>s,>80Agiu4DNOpoI+BI+5nfZ=-^D+ZU>cVd,+HCu.&pBAB+cj_ABiJ,C_f8G;*(=c3,I/SCUu&T&QL50%*]?Q*VW=tL_74RGJe8T=YWKb<Tn,9QS5s&pEL>dVn:i`k!nV+i&/TttQKn$90V_2Fbpc*Y63NDLim*A\'?FY]08t$D8pDR$JTDYO%5hK0T`R;!\oZ8DmK.ql,!fY^G`XA\rN@L(@D"NR$EaSsLfhgfNJmb\IJJaiP\QNde<[31o>ePq)[pJ_[%quB,Z0VgZBaX20[s<L_%"!$Xf]I)8bfj]:NRAH+0-_uX#ru16.ckKQ3%/keeRjM<>#Jpac?5%.IKA<_R%KR&MTQMK)#QJp/qW%JUfk0Q/-A8m:nNh\.,STSG%ZPO?"CTi!;;A6sPDKT?UN-o<kZg<8l1/1BY\Bt$40O!W?L1usTE>ZT3WuQj;Gjc9H>X?`^"jp`)()$bnaP*Yi0O+a8[(0bJQnm@G%alEqM+OFZ?\)Y5sQOT8/j-7rQI+)aYT!AY6B2tD<*:j9",gAni;Ft^<>tV$,%"KZtQ?9AG9]c`r2hN.1!&-9i9Y'@F!t6FO*6A*Z%2ZS"4@-KL"@8F]YmUo*l?)9rFm/bS)"rtXl)Rs1PS94d#7A,*6Ondp"*O1pp0&s$50n<t8]2!Mg!6C!JdbP*-PLqDt-f+kG%?:3,%"Hu,qSd<m4,R9*k@6jt-hZ1l_!ti/rJJjPV"6on1;@Fa/GV9*#NMN4.3tAKFP7@7].5W6)B`k+s]?T#$XVs1"$k!&<ZiVI$.tgVB%[\/g;R(4^$Z_hH6]5sN@!e^oe"$qZ@[:EA-69%5.1fs._5ZF/EBSJ)K9s5aL"u1#l$>eX%aYk'u*Pgf>feutEOMVL3,!?FSr97+c%M?K=S[d9((`+^%#$IilKipcY/mqXWW%r[Q6ojO(W%t#np0g=R0g6,(K,=SW2(76:eAF=,EqFfgL4ub9j65?"P"0]]'c7"r!pf8k`%#<@13Agf:-V@DOgN6E;8,DhMr3!l:k$I52nf4&`4PY)I6.i#R(gE`Ce5cQ"E7E0E.dC>r$3\u4+S7HUG6@7!RcCMf'ic&P+8e6;"%jkN]j1bCOqf>pi!"o/l+a<M'.+ilQ$5FdC'?3TN;^h^3b1J4JK^6K&\YnWMol6+V&'j50\AD,@<0=U1H!?<I6<2d[mcJWJX\2.$Z%#JQIDmV%K8CnKsT*DP"F;kf7&4.:mn.m=`a%jrNb=2DF'n6.C2N)JnkDl#U*U4H6r_7!R`-WkLGFlFNp8OUi>M:5>SJH1<..kJIU%#k'NNdg+e"`qjp"rrK-GJ(V+=3?;7&TuimNJ(^/-VW5\4GoR1i%1P*rdP([j:Qm+S6GUkMYRDL\j"T+L#M,g;L8cl3G!k2H*Is4\%\d\.ahD=s+1Wt<D+V9=:TcBdo;Q<OtBFnR+MAMTZ7Q:*=(uWgf_fS6s8Y`dp]Geh!XGoq5$muBi8kF%-i=s50BM,/I.+0YL@'p!M%rB\fQm!o>[K!Q"VZkNRggLuliL:k(/M3bG4\'&ZF]Di+Z2_,db4dp.c-n7pckcmEQZ8ml)$N;Y"'nc9N)6<cDWrBB1Wk^Vc,dYH8%;lhV\dklA_#_k2C9Vr3.We"me#T>cMW$3[P&HVdf/;Zol%?ZW/r19XM,][bdO@c.]&PP$2b(8b-V[u4QkWLn>kPpil0"[;-g3J.!%IYXA^Tc1a_O@+@^"q2bb%m2c\apm#hmN^a_OJ0.-r;XN&/nS\tW]]RLJpL=nr&2Z)0Z_5f]%A_mfo<)Bi@5'[#ccLaERgaZ`JKM"%UM_u/T!U9gX-X^RY_rY8U6fkj!hfTLc)FB1Y[1mCV(!,^e1!+L$X73S."\#@%Z^)=)+95H)khi@+SNH]4'#".&STeU2*p'KP7BNQ%asRC/^"ei*QD@/fR8)UbXgCMrcQ5g&Co,QWOs@*Z6"E9+Q%%4+bt^DSTB=iR7+dpco*)br+[J#V^tX^(V1QQg*q"K/"9.UH`\W&:%Tka"dGS(/nZ7.3KMpr!hY+B6];6lF5f9_%[HcTQ;P&&d.8MlH`BU4!U[hkh(nPVU:KQ*84B>f^F,%_rF@:i7^@@g)<9CDc@Fo('m%*mXMsf\]"]n'eVD^N:;3UBdZ0?K4)d*o%1"C.?*02I@:(ebWa*""t5WqTrdVYQtkO[@ho2;9K4jV!MZN>TNH2!hk7e1](,\Vj4\e%JM4Wp,ac\&hdf7%8epG=ifY84Jqt\M\pus39PI;PU5ei@=Tp.G3OA9N`f#$V0%C4t;MefojX\TO`.:P^1r@Yb\iN)TL<WW`6Cn>U%YY?ej"/V_:0$1`^g\,tnd\.NE6QOEHZKYX)jjLl):@6IiT2eU-+"-D.k(a#[<pOu=@$u786\930=7%kJR]F^X_.G/0CWL=)G/jUk%DKa'0q-^Su#Yr6XZ[@tajO'7R83_H(jFd,!_<8Foot5+\ePLEANQ'aLCeUgVNElTB=[U_Wli)Q)F+)9Z(/\:A9m$52=6CHiI];Rs%6P!@j[SCI=5*8k]>SPg^bn9^-.EK*?ZdO`Bo/1$H#ue,F2g&"C2P++GM/[q"ZRns>gI^a#h-`">k@$0$*aaqI@h'.s1eGlNR$\13%]2VF2>q>XZ)k&.Zp:0Tea7\<0^)]ok%j-@$?n\sArQ;a*rH!8Q9L-?_XhOfLoOL(Ni02#_OIe?#XcH+i'K`ZL]<,W9?W0^\<[sMa%,rfF+G%4Z_n+sRN=6B0MqJ1h4`D#B[NFBf>JUG-d8]fMFYKW<YZg=Z3Z/smhdqr2BF]:?KORhP6Q=kRk<V:%fN:<68R2+V'L/S5,%C>*C`q?`K.I;YVG4/I"KgCA&c$s$#?gL?I0$j7n3*S7iEB%%2@3(k!Q#Gaqgp5(@X2l93dT802q1-SUZFhZB'[d0b;@*<ra*FQ>6%A*<Y&B1UVmAS@j@nI!ek%Z3,K#BHS^k&dBkWO0-FaDYC_mk6sJ`!:YmSE>=-_&q=-B2+DgY4WO<[9BV9bE#6sS(e7PY$']IeJuk<%U2-.9As`2BbQVs&I'jHsAn5XD:PP/*WV_ANO#C"tMDo>o<5R\Gp[o)JG,00\<$7Xh_+^&3Q=-#`kLDs>M:[^0ClY?-dB6HF\hu=$%<,:Y8)D&8Ugf&oC(9hbUr%G/#[@"B-<[c>4cbQcnipAe]nh=>L&o5^"]3qT\o0tpF9gQ:6TMFG`/=ZS.%!d*rF"LXP<ud<OrJ<)T%LI;>UlT5BLC-E2pHO%0P7jl=.#*)R"i?sH"l?Ee]PaP-M:N3DaePDpho<&7=[p7<#A[H?CEjt^_3_o")8'd*l:R'fAH)@md,IUrl%+ZW3Ij'+X/jYNgj9s0CF]%Pk-GggWmS0f/GnVhl@+a/jBkn:83HD\U*A"cs+&r.M=Q`ocHh/"3NOirkRp#))BVCdR8#TLHr,'6or%C=,P]=ARaT:d,dlOB_n8QXo0X)m(V*qM]\iTRl](8o/?l^;6bHZB`oMk&\inH)Tn"AQGG$P]8U5)-#:dBkU.6O#tM2,f.nfd>,kD%d`c]eOFDAFC'm=m'ZubTOnl@LDJ$NFVi_HB"^tbq:?EmdRFb.Y:Z]8I\c!#GqYnsuo)]fT&F*4($Cp';bLesrKT7HH68BM@FqjZL%Sqd7TGbB^a%NS7<9d[sN>;lb#O3='0&k/8TE/[\8!X-+8\HG^6CfB@J_E%K_i7!)V]n^[T``!GF3of_o_]dLf$+qg^GItjbfFtYN%Vf.`7>6`R,qs'[AH<RNBb=6"up@JZGB8K$K-0DtW5qi5d1HR=$rmRl?'1pb>%f\l#O6302T1_$\[EF+]gSPaUBmBZe+We\[*TLQF%H\43.S:'RD6^Q*Ypk[b$2*XOIl,.Jba.m@1CMcu9qN%O89N>p96j@ZG44eg+jc\8^D_eo!A4t<O(&dH0Hep`--W*'+%<e_pkL<KE%FS7Z1-(+6teiQQ2;0ql4NG*sNomNZir]cW:/QIm:Eh9%sCu@Ti=ANYD=B3!75Aha<h.R`_SDI%6ond:AJnVKN]_B$FEO:iA/c2ss%5u-hDQJ'HpM3c4f3L@g70'sZFrnH&hqhstL*H4%F0TCG5@Gm.:c]ta<#/e'KX7'#SNoW%_+"hD%ZJFS_Vu"5W\uZn<7Mbi7=%;a\%"."[0Ch@Y)TF0`=XQ]br*?*nI?HZI_HDTe,.aic723RbAWc3`c)6q$K9d4)/5u?++CXL7AA4N%_g]H#BOLNq!2jMrs>2V9k3(S.e%67Y7(?B4Q;F<_c$R?9;jG-hP+_DKTD<0POh-K4P[p3cgBTip32SPTBlZA/0;<THEh.q4,Yl;7e-]*#O4"n-iH9K''k#j;;.#nfrP%);][(e@WTi)AK,&mX#p2Mg'bQm;oJl[.`<FbD7p-BL6`'*p%_.o)VjGnF-RIh]TKrO&]K+_E]t8?pqVNL-05'g(sSkH_j0pc/K_*%P)L]34]h8(*#G:D"!`A%&&W'0Lc9rloN,,97#tY]G*)7sJ?Pu.>eFDDW?'e.jK*Yb.a1S\I%14<,#!)I"j(C=?3:47$G'U0,BT0?%MN.]G6>)<)iJd.TSnq,1m#]s_QGg]9BU:"f=8rA:fHQC?;:f]\nuJ8f*lVka=95#mh$29=W<I[Lq72Q,Ub>NWA-S++`"9rFp##pI%Lcui:EaO"I&=qBi5i4&\AP.P1g88eRc#MmrGk$_.E/KuK&?VdQ&tTG(@M+DW/lPfNC@:OCEh"G=["=jQIi]T_8(Ab(>lfufeS,Y5%3$1[Vn.EhkG,WgQs'EHS-H`7>0VCK;<K[\PcrRtgNoDBoW>DgE54rdsk(&XD8rh+%<iTr'`=IjL^;JqJ6%shbbB68tl9b+SliGZ.%T0D<CUilWek8c!dJcFsP#(M<S!MYKPWl8@2j;<)A[+`5EXAHp<3#K`%8Z<U0ZY\\8SdK<k(pnPqXY@Su<#eTn[ts,q(a;*l//./]%k\rdr.j>SNZ_:6Yl3QmT)d_h(-mhjPfS.=9[_PmH$k/m!W),c1'lW@/Bb`7<&p,&e+922$@o4au7b8!&\nsSIi2OL/2(kV<b1kN?%"YG#4$p$=b';%MB6^T-_DC06b4c@pJ#mukq_I8Kc:IX$K(@`ck>GjJ!is$6Hn<t(;M5Or\8kqD/6n,QGfQm9l#I^3L.6`hB\ilh4%n0$rjf*;tf(60pfVM^5X'YC(boks.cfCY(S#s;@T4*Q4l+C3B,><XZ2\>GA1<l['nHD7t"PB]9'4.oNZ)JR=Sd?IsXNs;5Un4@j+%L'[jh3IDFA*2&j%nq`HnHWM#KKNp[uOFc805C!tiM3/6':(59*eh1V/m'^$DO^5H($hI,:Io2e:RBC8mlKOCURINkm4G)!2BC>9?%D^\do&nL+77TBoa5hE(d2olDWL;Q=4,F3@2E\qmI\7Ib)c\)n7$=C^m5I4K%FnMW;$iND>R89Hi+5Z97:K>/Re!0TqVYmPjo5&(;%>PGd[_d.SS5JWH,o<p9c&Q<<Rgi-_PLQ+1HYi>fDp*/\29HWd=+V?JX+F98kLNOib(&QLsmeVV7@"nXqg_9l8%"sM9+P0$$qsONg%fhEQi6(d@9G"oPU7J]4o'miT8arB21GVUPm+CCOtS'3Ha3Vi?+";D0u,EM$PAsc?9Y%j@73\QC)(X?=@6/HN)4;2'L7,F^uHEA$&%XP<Bh%doK^pn;Lo4ia\2[%ptWLLuJ(dQ;U/UsXS&,T&&lYfN%">3`F34Mr0e$);P#%5U5f7C`=i4<*MEeifWDWkHOW,OFuH26es*%G2Y6K<0ekH<ZXIW$%6H\Xq2^;.5]*$R(_O)U*nR2g%L/DbjP3X<-^2Y=rR>koHWh#"TL>CT)8GhVuU'qCj!a<^e,eS*&ud"*E_Q9%LG29efY_4u)qf88WkAJMna8=0,\:A:c(^g_8*h)GkH!5>`8XB2ACY)K)q@n135m%('P1l?It<B!HS8:R+0'm@^aXghkFdZN/[".A%k0l++<F_Fhoj'P0l),$2&PF\L*#A?XHoYpn9r;$8#Bk2AB1#)!`mUgtZk:<A;H[Pl5QE'5kWgX2ZhQeCWg7p6?tam-MQQ%Xj>IST%Q/&;ZOE9Njf/AAS"BO4=3#t&!GDta]:fo=8pHqBkDOt8qF,Zc?`o-.kL/Od\5j0D;2W,hfjHad#2ORm@h?6nTs#pigp&'PcHONsc%E4DYYYo&49_/gTRIuArr![T5$.jK%$kEgWd%\+@a:b^-2U>?mAIjc]9rp7ET1Nl3F==l@--bFOX$ADOpB(YD;T\'lfa,q`G'Z-oU%(:rmhbog&4KAr>XHE=[PL5+_8S8%"n@!h31e7MtUrlE_F@EWZJfmsg"=h<qX<ekO.=C!;dm7aD[:oK,L7O.cZe>tRf5$l.cm$Gbr%q.l+S+qBFS-,Mi[GstGk.H`%GZ>aDs&i7DN7)27,OK436(2tJZLtO`aHq/t4R-%!_ACY)K>EX.F4p:2!rWJ;Np/[]B5?7l7s/G3:%,%$*@&USNb#GWD%6mX8mE12C9PTL"+l"eU^9/?UD3g2CL6i<q(OUW,k**)Jb(ZG,nB5/9-e;f(>O*8>/fH=Pc$m`7sI&\Af7em%T%Y=Ti`l,$,dC^RfdC1QT![-8_U%*"($2e`;'6`#h0'6P_p(Q,>`WkBH*?Qau^F*'qV!B@<irj)RDrA^8ZWl1*KSaF0<R\4R`ZUH(,%-n5)7I7(O-hgSYmXg6b'7$!X'QVSp&,#;t@C(+nfoQZ*D3het,hUuF[bQHPE(f>>:PC,s"Gr,1P0X'mp;5QY`b"a[`%cEqaWV6_X%g[fB<V;TE8rBl<rj&qT0D0b@5;N78CY=J!'e*qT;(</rP[u4"/S]Ud49]7_I&hkQ"(IQ\[X2t[KM?7Pe7.Si?/(_]D`K+$o+KGR0%bmCRNoTWA9kn?1nfium1Ks[c?.IjZg8pkBFp7cidA+Q5dZ$@C&"h$mMCnCXY3bN_Q*ffBbH.ld"ZnFY,CjuqG"?j,6BXH-!`TL^s%e1fb`M&>q/+^FRmEgm5>ESW`KU.o%;e'hP'!ROF5>[,%WnsUl"?\)K,$o5Qnh$M^kV[&hM;[mqg:->boaZs`d^Q:&8B?>5>3M5aU%pT!E8(Au',1j5Lt?32`n*$%jU@^G^*.Sua)rDJam/pRl+>1_o']S<0Io2h:kOJ'a>5(&rQ+rpEKbT.66H`Y"[;r,=9<I1`dm*Wg&%I7(G8O&XG>H%59n8f-g,PHJ*P.c$5t8tX>0dPo0GqCLHNBrf/&8$&k2Q+jME)"dC4k:3#sK8J:&BKM5s=:.0un#s\nRchaj:<h8W%+XRD\Jn/J6dUjIq:Q[JpYSS0Y!']-s$t"_7j72sCH$(g[e2e[1WAMrAkO43#qV/._I]pa?D`1Ad>8uc&Mt"cV",(Njg1Bt&A38qO%Dro+-83[h@!p[2P[hJ]'7'R52F8#bIBC+S.DKtG#RgtQdcDV]!.@iD,id!9h2T-9USOSH+=\Pa.1+a?%[i>ffEU\"i&\K?LUihdC%KDru1Ma>q&0U\2<m(TfYg;L]@NCH=MY"b6SgH1PR4M)kA.AP"b/R(T"ej*^a_:[VNW@+sWnN,g9*kHdBP$@N<Y>9EZ8RIpkYTqm2%;rHM%BB(0++N;um75^P!@TFn!2bWJ\C^]i9N/nZGfr!"s[:!&9X(p&[@q(=+pmFQYnk_h,9%RoS'cZ140hZ`hcK_Y,=KAKl.Q2Gs%]Crg:qgBjh8:$/:7",!kf;a\*Xhh,>-X!`gAFgG7Af4Z%\Q3[c'>#WiS=f\+"ecF^;LX/hr/o1E\P`!`CZFXe4M9?OZbRZ^H%*8K%i2X-CnVklo8Tr`iD@GUSV&B2HC^fa+W%NO8f0cPeCM\VWM"_nDMla0HQlk(SBl&jYf@[M]pn9iclA)f\MX":0Wg';EE)VtNFq^(`%ac?Rq0$#2l9,2"$j[bX-9RGL6:E(0o69\MNpdl-qTA9mY7Gnat-5rI$WqB,?q'FYJ7e)8Y3Fm>7UZr!)(^ZaX?R-aF`[$Xb<"rF,%qr-4F1%Zb5CPc2.`pPoM%N%"t>+?0?352O@&+;o0o5)^?$]R.[UmKPS_6='dQnp72>5#[gf]$VgR,HcBmQ)1I%AR7IA^-W=UZsk`%;3JP^-1hbT8'\`%d$\FeV4#R701Ji!r'`%Y8;,d)-eL"f\S,IjSBRI54^YacaI<>D#reKi^r(N4(ZFQgdl9SGI#tO_&\9!if^g+<%6%q8P=&b%n['-H";I%)m"%mY=,GH[5f`0hLZ9s4HniTI1cZ_l4Z_$Se@UhC2;!G9A*&AJ-:sh;j,`Gb:gh`ko-43K8;b:,8OZ(MU%`qd`27]f9=QZ28p"GN-+muC!+<*RU$_)s2MkSd.)2HM.B3fn[4<\#g]b<P0sD`'crLj<cIS8hGFbeK3Kf#m(ogS`^_VgLQd;AI>d%CLooUgR<6JMg:IYLg))c1b49I!%I;p>T^-%8]J<+[DF2lR>nbRaMu`A8*OdhN&nJVaK2Ea:7e#u65oC%k6cg;fD\$MCMoF-<F>Fg%CRFoD2T!ctf-20%Fg@(sLUd!gpO^tQ>U)3``jkK#%-`5qHL:mh)L3JVhM-lfJdnTZNS?G?GOORZ[BY]uf.pVI1)oJsY5g.jhO1ZB%2.VRh],5sRA/+s8(Lq6fmO+>eec`?q3TY%CRt<lqb/Yrt-]SnOM=gV::3%\jO.'TBI,o?igF.GEA`NRor,$(ts3Y'3LR[Kp)TO,5%.B\P+Pf=;nKbd&jTqL=-6^?k1FFCQn?'N7#6UD=I$Z6`5-n**t")h^417;sChW&&j/a7YCb,-,On^#6ONkm/:Si(@3fG`O-ZPMm7%j+8?u+o7-r"$jN!QCMOeSCIjCT];>R!-_SYd$RF%9!jLqhX9u<dC(C!"+WE^OQoFQbjGQo!1CZI,0\nd#%ossAG##Zg\^q.Y4k5X%+M2^q1;-t]7b:>A8Dep[&L(noW<]X^-j&b.NZjMqGK4X>oV`;"-r5&-fVC/p!47UB`\(6k0SRN`FFIUEUnb7mHr9CPfZI6KlU13W%/(FY&A(0m>YQK$dI:-RO@IU\BP-Q)dn=lQ$dib7I!+9n6k#)BY=QT1*%421ONTER0a64D-4L1/EW3EU:psD('0UPi[=4Kdq2r7G,%@_LW\Smq1rRA1*m;>6WPEV(&Q]Zp!B-q`?S;hW=1$+kT_S=<JZgXQKG(8aTf_t\/.q%+*h(iHq8PnZ!P731]5Un0[f_/gIZ$kbY>%4nS\AhJW_unG\Vi0;%STLE)+#@V,o=>0!*+no>Mj:p<%]`fN<f%'9tPco7t?d/l@OCO2N?^q6sY6Xf]S;TO.+qFtCDhL4n\jb%t+%2(e?,/&X:_1doJ_PNn#Qpl2Ct7Km$^,LaX7A\uNJ#6@Q5UYmpHp'Z*GhB+HBhK.OlC8SJ4I!b["f1seN#'R0.PeGCN\D:oq>MElR%7ls)#plecKf8_/915?I#ef07t?f_0_83LlUq=aC$^7CoFNmmFHTBP0khO`Wj:N4KJk5t(Pdf1@_Vq2`\:GLQ1O"Yp2OnY@!l0TkU%?9[&M;oG+"-CYVp*I<oq9/^3=DV$@:7&5h[Nj)5`nfT[Z)t-'=2XW6(ITp3T2]mEoq;ArG31%45%RGWJ##=V^F9i`5Eu`nt(2&Gi%Q%!=RXJ')aKUdV]0=$%BJ>9RpI!b\IQU-Y9l@p]WW4m%##2sb?o8Yc^c*=;UO-HW,5I(c@IkL,j#Y2XPQ(C,WI:mtGXLmF."Wa4A%N^%_W[FQ:"Q1DL@7=A.^O24A#B*a)PMB`Ijo^UBs=QH'!PV`sEY',D9WZX@&+64sD`K%>-"TL@%,41<Zp,b!rWrY>3+p9E^*ni?#%,7Fe)WPQ#6pc1()&</Ab[oX0J\%@!/b+OTenE=jM'D`kWkmX;$ab-""FN=/r<7T]tnm8qqZBmdIe\9JQfDT2^.]B).F!l<IGZ%no%E+fBt.a/,l"/HXM)jp!S(e`#/83-5NG(3BG>;8?kLKaXq!uIPZWKrLfj!B]\cBer'C0p7%7Y>DugX*\H"O'b+7CgtO&M"!3F_kEc%ic<E5Cc2Kq+<WdBfglMp066_p3,_Mn'+BUrLZO`>D=!\N*Q?KX4=#4OFg#;!Z]8QjTjRak?]..YBLPLX^363d'<&'^4cXheK7$\,%G_ih,fnLOo.4E(XE9LoYi"uuR628Kk+A2/LasVP/PmUjJYn!F-*Pu'+;Dgp,U/U;I8&hc[%n-gtHsBET&NpWHbZc8s4)H61?%ZbB%FKrhh"t7$U2;t#B(#[Vg)(K/>MQ/gq3X;3&\Q$rbZt\QB281='lV3]'kG;8s_B&p[+K,@n]HJHAcqEY&3aKXcg*)1>ojNFik%k1W%CE,Vb;OXl^dpLO2[hg:R.F(dHGGC,,,bq7IGAL@m%sE"&h?kaU*]]58T?DORi;L)!qVbsjlYq3)?I=5I3Z)"UVYsS'C5D80j6L)m%X("GDD+Yk:/h)TLK2kdEAESpj^pT$H4McP\$^d6QE_Rl"\(5@(ct3dm*nSjJ,(i[CI+ZX&.!)5b_i\5dPPC,j3qF4NUq$f+kX(Ef%5l%>f4,NN"cM:G1[^RY6V2`:\2>rJNXMBlG83Q0Oaq4f?)8tAB*oFdpH4a=(-JYjr9K/%^BU8fO\Nu>G*1jNL.W]3^P$1Ut-aTD)%;/_MK/qr=/ZOII8n,oAbD`uFb8uIHDos&27AJM*jAWgYd3u,khlpMsA"PZ&5jb)_0&<kd:X>tR:!X;j>'&KI;i%Z1E%@uT"N4+dO%8Od+)!#(&P5$6-ilcdK=Cb#:BFuc&2p'R?L)@gF_WIYML5O5AB3W]=iX?\]"qPdL&oFn]s^aU>jGUaOc]<>c?WRD]tm7]s.!I!@r%B2L[=JL7K[lf*Z%C!_1+B&k:7HL.Uf[2MHdkRY_1.bB7hB9+GIs4IYuhBCce-c-qgjVVbYi+)G_#)U_>[A+a;bu@VLSQ^2$8[Tr?%mC^<9o&J<4FSS_EYoN,m=Q$U`%/"YlL$m9`^#cm)\$"0RT6agi@u;8tdJVV;)j@pq)S5`TVcLsL(Km(dVIE/.f3d_PpiC)N<5$sX%ehDpi(HI],);I^BrgXAN["+\='HUf[7.SIeM+lT"1a7ZF6XSCH^06QePq9ukUW^D_8bRi3SM;`EM*)t/3Gk,'-VenUA<3ISQbdQ$%4(=c$c]$WdQH`tQ"35X/+%_*`H0FG-V7IGP\?"IWDBiLf//ccG[>K>;:M*snp)NBEk>u^60aX?8A+(/==W`"?Y6@%?]AV-9i\>",%/2b0J>\l#6B?n&4Hn+G6U%6r=kkg:&#C-@eM(r^jWgEcM4mUNI:)O(&E3p@brOE,C8l/mU3&GYu:`RLtG#C%n`R>TMgj5h#"dlI#%O04-`MKisu#_<X["p0^6\p=@E)O1;A:!\UBrQHBc"d\W"OX^ST=?LLM)[M!IC,]*Dal-=M+:#$;enUY4rkhd:_j3fT=qVF0Nq-U"%EUc#q#YsE\QDauThU%9$kXMWo0aDWr3/Zi2Q&S8&0U-t-+^8]=SPDYVH4U9`)rt@olK!'N;_=0jREuU2n&+8))DQGYE5u^L^+AuK%@!,kZ##S+ZTls'TQO=pK5"4b9?:^^^C)K%!@i_;TJ`a[6cA:/H%#6ctq?;#C<iXCB<O^d$XE!eSgI"/b*aICaUX^g$XKQglINLLp%YfC]n`H(MX6!kWlA_P>j([/#2!Tn-B$7W4#"VcH8XC^pBE_jAL]GrFR<hHC[53kZ4'Ta65C.*J<I07"n!B[=Pe]RhYdm8sDWK$M?%21fJ8WrfP_"GGag87IP5%F$qnEbOI>4cJHqOu&B_s$:$uj)$/FmnK+ofI?2=G/J31F'JjS0h^2cb3T:jdlUJ[@<fXVE;]8X18!.?%-[\o!gDLcpRl*0]X*q7B@lUa6^?t(R%X*>!hHMejmng(R5J94`Qqp,_j_jNj&u"K:H575UE[(ufPKme.ZuK-;A<(ln=GMZr5n6+F%;J\DYA#(4Yc!>rEhe@9c/(J?b%]G1b78gUikn&))"K%Q5:l'^M:IfAK#cg6e@T8:'cW[im,m]R#YbH$8[sV3pd*!_1KJ&7%DB,<!%,u9[7%;aq7%6eYf69c.0T4!C73r9Jn8Ws&$Z`H-3bg/PQ=DH:5.'%ip7BDVc=2.YX-ABq?e!c>kJ5Gq_1Gd@%cuo)a@\$>DK2pX?%!@WDR!O\Ro\RlaR'0>ARL^sq;[3M4?[m!tL8B)N73D^05!K%)=Si%'hq=.V;%E7&8-Ts"7HKcPuQrG;YWfjC-nEFe6,H(/:*NM4I%kH"(R4s1\W<@s+]=,c@<0_D\E<@p0IC>RXNPJDf6K+p9\j>^Tf0e(,NO#.L8N^rSqAoEQ+PCDq?^D>oZ?>gq*h$q5A+MLT-f=uso%*2BKIUdU\t#J7`!n#\Q>^I,-;^D)0VF9KpQ<F;"soVt2Fm.u#\L3I@/_E8YAG6toW$j*-eEh2O(O"8tm.Z:\dFsEb#3::BFU7Ea#%giNsJ(LuqZ.-8k_*2OC$1M,*&JV]to)sL4)eR3%(fEpA8KQ/us*OK<e"8Q=lUt-QuYp&1BqWJRDC5A1^]SFkG4\0!<;;AA(G\3)<%p].>F@U[Sac'p5X9/,Gl+CA9,aM=l-Pp9=m-]O/[*BW?rjh<N?_oX\]$l0pN7Hs[C^]HS%X+K=GiK]I&W="#mUL>!N(8M\oc/^oh%9e%OK\>nle1;3?>T"/bbd@oGrT,_j2^<]naEK6c]84G(21Q7/X$pD7eEes5!#NV>j7\$6[6W$#*lAd#WY2(UmWA7t&o]ulZO(tnH%`c1>X4&\"jgOa0EYC%BSA9%Y('cga_$N$F7O<9JcL?J(LQ)AF1Z/%sLJ=_&NC/7LY&`r$qG,]H$Q<C,[2sYDsM3)`*c=\[P"mnW]%Y,F<M%!RRG>.iO-A@9Kf8`<YaeHk$'GhcOTd*e'/fY%)Y`1kW:1BONni+LOWK;;NIAqO3DnGRd8eL<g\?_4h8HS5H#E1emY;&LNr%KW]V##UcCT0K^Po0"-[shi`mB$K,tsT]f<[1HJL_8>)`nQngrN_kJb_J>fDA(/ne=N0%Xb?o\YhjB@3!O`.I/:W43WG]<m'l$D("%()O327^0C0BhjAa@kh)sDWG!U7E];e_@lIr&<D_I!`hp0PEbY_,P7#(J>Gm#f4DUP,8of'IF$$03=BHc,M4hY4f%+]M9cP<X(T@W%&"^::W`*=Vd19_t8WM0bL%7s('DpUBUUe%$CF4ps-su=2fi-i@RY>snB$<.Ck0keTZ8<1l:e-Z,/:'C$>O5$?],O-YN.D"8WnCD4%k[4r"R@TiQGA_YS3`L(H<%SC&@:(\>AcZO>8[-R!C2Pa3-nm=Y,MH!`n/<ZQ/DTS=H(a=/P<Y[snP;_5arHh4c81>F#>AUDq7=LZ%CT1GgH*!'q;[nnpJf<\P68;n[ilI9cM]knM7keC4C?DQ*9[o_aXZ;$ZmsQ5.bi4Ik+%K54O4i/?<[01>2O`'P]$]Fd'lKCI9oB9a%kf%q36qP1HRq+0"&)$.s31!fsi7c35'#-R%P?2aTW9odhe5<I4H@E!<DN!T\a"qhT2=jRdIo5'Y$Zo!4.V$LFjZ7(!=)@7ZpIX"*%/J>HE>P[1oh%'C^@"u8.D,A0e.s-iFOhV1'>3Ma$jZ<g6Vm@n%O\pb!Dq+CE:TJTi=Q+XOeR4N[pNt64htLf\qIV8.J!X2^[eKa&%qr>HMIQGRl24ntgII\j*mf3YNR-nU,=-=/&(Qm?f0=(Fn61j-"&RllRk"!cpOM;J#(e7Ni_;p^G>'-9mJ^>/JKO9>_W6*J,M5%Ue%\VGkBPS?R&id$DY249-''r4<?PS`WeMNcNR<bs(n#U3uHKIFl^*G<OdETSe^Z.2Z&hPnSQh8*)8,)8E6(k%0JgA!_]]Rhieid>;@%$o4[qPi'$Ho;s1^j1$t]MTB#-M-Qe[ZPd)/C*A0po'o7ce?JMB0K`0.TM*".ijT3UV?5iT(tK6td)E6+DG5H^J_`JoE8g_N[H6AK%&[qc3_ieE>c?d@mCa[3A^LQtdj*;-U<If#KajbY%1;1TpIl)2OZd]H*5(/NRk77MB\*#JL^f\hA>YusN6)9-[/o%(`[0UBXCC.ZE%i>eRN\[/d:DO^tI`1VZoncGop7rT<#?ir%=[?h@Nf:o&477I_u^/7]%4]glN@9?P6#'bI+pL5uWdG!dhS/+q>3f(V4(+00U%NW,Q%JX?7?MRK<[H3D(XC4Zu-fKZ#@1tg[d,M7Is10t*d^q"I)@FZPUr4NGL=d(!eW=46L/9]YmJkY,'NbmG\1B0BL>>O^C`?J]?^GtZX%EVo=;ZYL4WjkQK2?EV`&K-:o.ah'h[l:Q6k/5$TMmTGYQpM(^bgnBA)g2N,a^@uVZQg.>s]'XntkH'*oq`_dSF:Jdbeo^1>KBEE1%4(Ceq``9f;4I[+DZ?U&jD&jGT)Ke%ECE\AQAak=>S'M5&?Op6J$]o<U8p\1:Cj]:%_8!jX8&]EQoYiW-#DX;$kpF%0N"$pGl%[5;%R"\mk%>M*MLJf.D<M(Q&i*FYc"tef/NO#9!olN+9."(^Y;$B0J7TB]*mB";iqYAYjqI8aQfd$7)TULs#@UJf[/l+0T6Fkc@h9=i*%KI-400tFgb/a5jA*8HD\)%/)8$!+d#A93Cbo"iHWmNu$"Mi8RuHqWb-dS7fc$;BsaG42sdqP1IGpRdip*>HK?[a9;m_>V@j.qU#=%1`nFMjI(l;I/u?/or0:sc*YQ:?K_+m))RF7aSI'015m'1JZ-(3#>STAUm&lL:e#\'QO8HUQERcd*'jRN7,HCZ1Brtp]u2Y\eDcD(%1G5;TOO]P^LD_(&Y#O0\@'c&iVL(/k0G?8`cqg4G?Yhc+iV!%Bk_9E2RGmCQOK\XFbZ(14,Y&I_:EMbBI!:h6@:lf\4]T44KLW[r%6IjL.jrK5[fsXlMkW=nOhF&Fs`B4IKUCDgUV_gLB;'VKm6`T\a<P,@6<RtU!G.nGVP:Hd&W_15>V=Q=r&bq]Png$'F@0_<6aUZZQ%oFogI"u0I^:lAMV<a-Sb2"3VFSdrfd,b)kjPorM(7Hp$t6bd5ISutl;]%!]\5+#A-*RgX9Xq28J_k?[R+F&k&mKf%pA)6^lAKLd5%Y0n\c2442/4VahmV=uU%QrSc-*oHG":o8`T<r2f:^rpu"1i:"i/#hNUHA3[?U;3?4Ao)-/$=#u*U^pN<L33<mBT.a@&&uu:+P.t?%!p8'd&NaFZ2Mo:?<gY[:VQc0piT+7h;qD*o][u$HGD7S?XJ_a1Yq]R5YL5^]0/2]GLkTK\VJJ"V-)DKBb6^%4fE]b2,!pdRBlLim%_AJs2U!ePX[ZB,\rktZ5o;D'i80\gi[uW@KPSZ)E?VTm,=fQ)4/Z%eZGUr-DTT21fbqj\sYm/PCgY4M4H1l/`kp2PpHUeTk.qt\>%:OUAl=$_RK0<bdiT6i]WGEbtL_/;?0In59WeS>\m\=f3\-<ffg(b3.HH#D_NM[dgX?8p7802Qc01'P]B6b'4F9*?s^'%@5cTL/Q%%pht01^kW8$[W95jXcm"JbR2RA96/:oLR;8k?f^bEhE#s\.K.LLl7^ki5IF@6Cnt+()@9'^]obkZ7V_Tb,F,0-l;+P3^\gpfrAf[=%aZWL]?R97k,+!8a17:SkMG99cPqEn,/Q(BZ87U^<$FM`4&YUem]YOpB8-f.aoJr,\[\i!>L^ELg0_gMF<`C%P5RDTf7=-PImpqC)%`?HoI\u@K&j;QS),0)QI)@Uf\/BTiK`@=em@s?781UGUU#DL!`<R!R6o5=bRo*AM$ng!1_][G"N"MsW\C?Rr7'OJ&0$JA^Irh-jg%E`U:e&2'g0PnW&9G'tIt','uXDIgf0Be;s]>`mi?JuRR!ArdXY:Ae-KCg1:GY\KK&"iY2^0tuEEl'05FJ_&'(&S@&'nEOrcFPfqc%-.g)?0q1/T2Dbfqffk3u`?,FMD:?>o[GVVJM7Q-10O":<a?of__N5d*YT[gTTI%i,0Wck[I#ps`CX?)X,dR\2h\((4oHDjf%2O5:%^N[R,rR"g58"1&,D^DJnr^fFh95[:ud\JAhRa#9$<hTk[)s7Y#F6'PBaYqL)@O$<+2:OR>Z+^Pe_g#0i%JEfP2:sj".me[6Aue<f%PQRWRhF5f03$k3X.t]*E?cT"S(67)52+botYNI@Ic=E\VaB?-UX+E%Qb^7%"-Pb7m)rYM]LW]p@1O,#([n^X2iIRr"0b=BP'Hl@0%>k2go^knr*pJ<eoZC>Kh;'^iHX3f[t+G0r,KliiBYVbZ;o'ehR2p^Uh\hQsQ,\$qR:08$PP]d]g6Ql'3G@/Q@-#Ye`\lLYU-!ErN%kkjW9EE#*H&*kKKGkUbW*Uq%$UTm7.PL"uK&&'PiH8Jdf%+uVQXg<gP`efDm2pX?nl''=0b^?1WrhKWGPk3l3nb?.7gF:L!oX=SC%k(5j8'l9%SV1SB<8$J]QEg:L(2C?mZqO/SV@O+o.af!@B2c:#:kS>\1#ck&CW:[\o0A%8qoOZQ]O:PFE_/;=rTkf!Vr=96Z";G@t%JTOEnKXN\#kU_WagagoD,+&(_0K)O+cdST8A><HG#/E`7m&mZMGdLRk#m,gPeInGn$E!+@TelA2%_2:k0@4HJLTG_["ffC?!S:=3%C^kg+:e3J30BCc!kUUSpp=ZNm`[TXd'p>6Y%1W:+*djsh^Ar*u]S5)Yg9Fd6BYft>2`)6!;tb-TOm(P.rgo*#1:lo0'6WbHl5Tls%fn9&\\cK4+`ngTkotje9j'#$Qq"&_QXeQC9o$n4AO6ff)O0H_#<;&<O7=D;XQZp>pp5em,eqI-\/2.;(6u^%dAF'9\ZS._^AB1eL%0hPI]``VfV4N<n@Tug=kNrcm3#CaWbG6FW?IM7,c6XZF\qG]h\Gd9oiVhd_ub!1[9rZK-c4Bl!YO%%%mA`[.N(e.6J'o6^M&C7@m%^S=b$[p4^4S6"=,bid<"C\'@)*ZL[CoLYY2mCfHOJ#jF^d1uk@Z:,Qf=Q!+rpiC(imqQj\i/&/L:tZP=.^fF&)Hahcn:7NOZQOr6%Ru@kW(pVkW\<rP![o(Rd#2nJ\pJ\`.SYV\%RtCB/QB+(9Or8%YmuL)"4_8*8913QrG4e7t\8OB^mSajGd$T0c7;t$8qWJg:m!aU6%L!cZgL!/Y=1Q[n;B!*RdND%c8.L/3tMg7]\`m_(>2-I+I\XVs4[D74f7WMA\0s'O`MR[iJkYl>O,qTbk&Eq$pbOGIEi?'G1G+9r8%-$+<!DV0oHl;s04UnSgKNLW.UQ&Xf@IH5LMTh=C[*[i#gW'XjYiNuiUf.7fb]N5)fGgRn]Z>RYi_b[K=me[KK5"<d?Pf'Hl=2,#<%h5R7D>@0=%4#U.Qb\>K$i:ooB-#^#"%R[,@VO'H+ToIGf`U:fF4@EjW0o>qA1Y"tIRlr3O0&7MB(1,ZYmic$F,c/":r%(@p%p,"%%C%ksI2c+c;VaIhPRg6=X(5F:/qFfCt.9g=)3,S^W@is*;@\ZL>,F'qicU5]j$c;Md;fAk2\joG.E1$%HLS6I7`p:nCJH?gP2-j3Z%As\D)W#')$>T1oQhd9pm[TFYj55=jB_5iio=rrGV5L8Jrcc&<eFbbu9!iCXWR'WcmJiQ];3P_sji=+B#h8#aY615OGA3?%PMnIp_%oBP-Zhd/M"2,c>ugTHqgKH'$l>Kmj80h4;X='7N^mhoJB<=Ec[:Rq^D$f#+MrMK,Yp60DJT=gU!lC]n-=j<28oS3P(pR3O>k=(NH%.\"^3%kt.q#oY)=03l3T3U\m1.=1m5\!Km6blhtZ3VZXtf]GI]k.Og<`@SH&?*?9\k;0r#@+>XIETf^GFf+?7h^"WHIe)mfP?08C%Mb72pCeAq-n`^l#Q/O=Z)eILBO#7*d[%tu9pFNI@*[_(=64A$eOnY>Ue([[4]mTCO5Xc::"L)c6r82:H+bb[Eo)\;RPMI5%9ti9!%0(33B(Zi=F"Q4L&e[&JSn#]bkUhbN6DJk:h<cMG]l4fYu,@bqtFn>`b.t`slG^u<'(%2EE0P`Rh'4Y$nG4%FBH-6JoA(\ge25B6F%aB)u3B@h0pZ*U,o:_C!E,M1OfBr$hu%&tOB23!8%Ea=V2*47+hZJ<!s/6n)Bm?sKq/)EFA;P5Mc&?i7=Opjl/;7.7LG&)BD9G<S7%c_A&\bI<a$#p"-sn9+b=Q=uXhH*VXM-dRmn,"B.PP-/$jO[r_Y?Yg18Q$3\$kORL#%/E!7l:2f+]]Er<mZ(3/pUE\`+q18_>D;gc%:dL$F&4Qs0M6K,fJ[]-N&9s`MG,"6SY6tiFED9]u\W`e$7s*X8+t1rO]"_k(RQLWdWF!4PaOftlgMlmJ)'OZb-eC]GP_3MmBQ/NS%3+Gb#^rJ_Yd"r*/91J%o's:\aZ;>B;m7B9OKA]j4J.W?=9@uhq3MR15?F9lkRAt=Z=gB&L0603/p[Po<'#I,D6(s=@o>sq_i,fSr%M5`;pjMIb9);CpG^e5Z(gm4b@c)4**ep:;>VL/k5mAuBQlaJoFd+QB3'4m0KZSJ]'4dfYqZE+>b/4n/`Y_18LR[qB&;S#F;Us^tu%QU$8VZ+L#kY]:**(M/E(Z4dma*"Y5[)!prYPb'N-EEIjr+7)Po=r$_2&VF^Ta,VV_rnGRVd/CM^[pgleelDRojB]R[@(45G$.i[Z%A/UEi-G,Hrg-+hg_DTT%**m`%N3EHu;cG%5=rEe4m+R1a1:m,e4^Oa)Vk%);h\Z*unc_%.T'Sp9kKBqCN"T-oC[5MN`o/_j]hqbl%G9fakiN%IsCXBk`!bt$i*S@%h\GYL\B[/QX=4I[RK2s2+$s,0&69'HB.;0mJ,dBl$kk(=O&_ac)U'FiZopI;NO#74ANc0UMNg+H;%KL,`r#=K*hIGod@O+W&2,cYB:CY;Xo)U\^Z9eT-uk>oihAUR1709@0u*gIf'_`T=h"SnefRp;pHK;tA&DHXc'[=o+CY-JnaJ&g_:%TZ)L=phh+;mU\TWEg7(DDd>33Ri_f74RT6jEq\^Gdh_LA!rr[RPMKORSu8N'l'.qs-W"9l<#*)GQtV>?Q#k'2kL/5@PPsWdqU't$%]Fsooai'F@Nh8CCgbb*dLHL,kdcD\*1),S.e&%qeWTZVbX<6$o"/2;;H=b)MFsN,&/K:J&G`\s:V^5"*]L77:9Ai2BY:/5)6<H3l%O@;aO5*0QTeh*LKq"g"C74/ch:p:+R#;d?>lF/P!KKYhuE]0+J%<jak^d^p>ei]^_5EMoLdnXGW3f(Hg>min'"Dj@]?*/(g]_5>2%OM`uM<U_-P7gnA8;ai-AAk&>j%qO74Z6W4=,l*ZU/r9%`K*$r5n<2'<(V8sjgGPJr%i'6U"qp2MX4Xc3j+9UgP$q"C([a"]557\L%C":?Q;7!X))1sFh2DFmi+M$s6.aH)SkRh_`BTet@!["LT4EFlr:=eZ-G@ca(Db(i)\e?#^C1(P,<"[c+jja3XbsKfA.':@GW9Tq6%PZB7SKi0*Rlf2%WZ,K-m7s>u1\40m+/OaF_DR:Ai11mgu4rB;0=Uo<iBqX:`_0)),LlJ@'>U$[S7)V9T"38:u6/!j@6AHPjZI^<,%'$[LTIl7V-##1hhN$k-+Y#J>/*=<5M/D$Ja&`RDTQ_g(%1CkPSj_5h[FE=Ba:mRTo3S=;@['u@R^NGfj[+U4\;]$559TgWmSmf#o%j3XqX#,Gi*&;HVh4O[V02;P?)ohm95B@5NU/S_8*IhkU>8#i*T.c4bnd\Zd0;9XUj;.Y5.`O\@27X)_aWCqC!&;MRno79^[I&Pp?%$aT\aB3;+4>kMV-+5.H.;f%Q!VC@oS;YA>^)"rM=Ee0qP2qbQJVSh\YcunOtp3tAG_u#,fs.0s_cAYML=314J:g+^N^[b(4Gsq<c%"LJ6(iIE/UP)_ta>UA>4-2\e'-r!d3LP,*U_]B%!\6t7jjZZ\L[<Y2O)odOZF)>7.Z%L[@9]OMa_LY@'&A![g7/7>YFu91ej5S:K%,b)*7OXtiAqZMOKnRImFIT(nq@YWs'*Q=D1&[+CIHqnp>4UG$R_#YKQC0dM=VosBh:9>X\PcVK]GV5_WN<f+/=/r=a6rqe$rpj_A%KKCQpmS$'/2YPtL*bXHU2j-cT4a"'!ZAerU6bE[fi.L+/d@,e#IZC?.%3M4")\JB(=3$nO6;]pV&Vnt99][E@8:[HN[L3gM##TI(%es]7>A<t3JI[4eG#MT]W5oq>r]`p?0keqT1(`$>fNKn_T2P/*=lX9U6W7?qe$UL+8e!]RV")X!DTS-.I2>+?^!XX!#FY1\j`TWUr%mX\2t*/T\=O<\fWZnVa/C.1GHkO&Nj^=nFh/J&K,0t9VCiGdrqBHsqhEm1sW+A=um2ZR)SX?@-F@.B>D-CY+tYm5;[mO^?:r=-s<%G$HfEfs9?[fulh=(NBrg;PK^2EHf;Y3C<=a+F]YbHS.rk'T6VlJMo:L3LT8c85o]YJH-ObdHuM#%XR4YH_C&*C^UB]R-&8o`-45^%p?(^^h2lq3CVrN&X_?GjYr,`VCC<NC`s0^.2h>gs2TC0g<mW+4e%bTA?rSIW>9Gi@?4r21>$O-38*1<&Z"#1l?QUcO`eAaY5)km>%CBqd]nZ$#o9!W3!>9NXrR/@G-9;JLXke>HiWON+PA8ZrVQDfD''RFceDYUTqh53`(/%imkWT"f<g&l1[HQ\)[&&cN)@!qB[fUY@R%ILeh,;gb#_YA=I9/Cg>N$fL.sEW7n-4^?=t4E-2DM3arE3L?Ok0(#cK9tttE^AmQkj@tKfi2G7aQqQ*3>(inn,Db^Ke!]OagP`_^%#<9VNSGN6TN&6K4BU2f^alPD'$D2>4X@S=s-hQDGeO<7-#5QF<l1i+AP#o;UfXs\eV[pLiLApdF/'%EOp@_HgI)ulcU@(*9.HmJe%YT'!tl,PcCZ[X3u#7Poo?L5*VXrgY-Xh`!hfRa,\RN69>dZ.WMq5RJ,[&K=*:-suJ4S%aXI:KTi`LLWQAm`gDU:oXcBX8j%@<6k`%SROMC6[(9rgMh3*4\!id5QCARs7B[As8;c/r3+kIs7M_nrnZK1oVXqPpHS\q0E:(9J,V\,?iKoN5Q'!&s5fS#J,[VurpcW\r6N.U%hs2q&ro(&qr6mn1j'R<3nk];_+9*G(Q";6@e"?X=^\sLkr]_XNH)(~>%AI9_PrivateDataEnd