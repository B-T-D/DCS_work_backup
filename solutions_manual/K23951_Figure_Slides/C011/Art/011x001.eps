%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 011x001.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 266 192
%%HiResBoundingBox: 0 0 265.1987 191.7139
%%CropBox: 0 0 265.1987 191.7139
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 6366 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04FF7D7DFF527D527D52A8527D59FD74FF527DA87D527D527D52%527D52527DA8A884A8A8A884A8A8A884A8A8A884A8A8A884A87DA884A8A8%A884A8A8A884A8A8A884A8A8A884A8A87D84A8A8A884A8A8A884A8A8A884%A8A8A884A8A8A8847DA8A884A8A8A884A8A8A884A8A8A884A8A8A884A87D%A884A8A8A884A8A8A884A8A8A884A8A8A884A8A87D52FD08FFA8FFA8FFA8%FFA8FFA8FFA87EFD15FFA8FD14FFA8FD15FFA8FD14FFA8FD15FF7EFD13FF%A8FD23FF7DA87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A8%7DA8A8A87DA8A8A87DA87DFD23FFA8FD13FFA8FD23FFA8FD0AFFA8A8A8FD%13FF59FFFFA8FD23FFA8FD13FFA8FD23FFA8FFA8A9A8A87EA9FFFFFFA87D%A87D527DFD0552847D527D27A8277D52527D2752FFA8FD23FFA8FD13FFA8%FD23FFA8FD0AFFA87D7D7DA87D527D27527DFF7D52525352527DA852A852%52FFA8FD23FFA8FD13FF7DFD23FF7DFD0BFF7DA8A8FFA8FFA8A8A8FFFFFF%A8FFA8FF7DFFA8FFA8A8A8FF7DFD22FFA87DFD13FFA8FD23FFA8FD23FFA8%FD20FFA9A9FFA8FD07FF597DFFFD047D52A87D7D7D84FD23FF84FD0AFFAF%59A87DFD12FFA8FFFF84FD1FFFA8FFFFFF84FD07FF537DFFFD057D52277D%527E7DFD22FFA8FFFFA8A8A8AEA8FFFFFFA852527D27525252FD047DFF52%7D527D5253277D7D5252A8A8FD1EFFA8FFFFFF7E7EFD07FF7DA87D7DA87D%A87DFFA87DA8A8FD23FFA8FD0AFFA8525253527D52277DFF277DFF527D27%7D275227FD047DA8A8FD1CFFA8A8FD05FFA8FD13FFA8FD23FFA8FD0BFFA8%FFFFA8FFA8A8A8FF52FFFFA8FFFFA8FFA8FFFFA8A8FFFFA8FD1AFFA9A9FD%07FFA8FD13FFA8FD23FFA8FD23FFA8FD19FFA8A9FD08FFA8FD13FFA8FD24%FFFD23A8FD19FFA9FD0AFFA8FD13FF7DFD5DFFA8A87EA9FD0AFF7DFD13FF%A8FD5CFFA9FD0EFFA8FD13FF84FD5BFF7EA9FD0EFF84FD07FFA87DFF7DA8%7DFF7DA87DA87DA8FD5AFF84FD10FFA8FD07FF7D7DFF7D527D527D7D527D%7D7DA8FD57FFA9A8FD10FFA87DFD07FF7E7DA87DA852A852A852A87DA8FD%57FFA9A9FD12FFA8FD13FFA8FD55FFA8A9A8FD13FFA8FD13FFA8FD54FFA8%A9FD15FFA8FD13FF7DFD52FFA9A8FD17FF7DFD13FFA8FD52FFA9FD18FFA8%FD13FF84FD4FFFA8A9A8FD19FF84FD13FFA8FD4DFFA9A8A9FD1BFFA8FD07%FFA8A8FFFD08A8FFA8FD4CFFA8A8FD1DFFA8FD07FF7D59FF527D527D52A8%277D52A8FD4BFFA9FD1FFFA8FD07FF527D7D5253527D527D5252527DA8FD%48FFA8A9A8FD1EFFA87DFD13FFA8FD48FF84FD22FFA8FFFFFF7D7DA8FD0D%FF7DFD46FFA8A8FD23FF7DFFFFFF7D52A8FD0DFFA8FD45FFA9FD25FFA8FF%FFFF527DA8FD0DFF84FD43FFA8A9A9FD25FF84FFFFFFA852FD0EFFA8FD42%FF84A9FD27FFA8FFFFFF7D7DA8FD0DFFA8FD41FFA8FD29FFA8FFFFFFA852%FD0EFFA8FD3FFFA9A8FD2AFFA8FFFFFF7D7D84FF527DFF527D527D527D52%597DA8FD3DFFA8A9A9FD2BFFA8FFFFFFA8A8A8FF7D7DA8527D527D52A852%A852A87EFD3BFFA8FD2DFF7DA8FFFFFFA852A8FF7DFD0BA87DFD39FFA8A8%7EFD2FFF7DFFFFFF7D52A8FD0DFFA8FD38FFA9A9FD31FFA8FFFFFF7D7DA8%FD0DFF84FD37FF7EFD33FF84FFFFFF7D27A8FD0DFFA8FD36FFA8FD34FFA8%FD13FFA8FD34FFA97EFD35FFA8FFFFFFA859FD0EFFA8FD33FFA9A9FD36FF%A8FFFFFF7D7DA8FD0DFFA8FD31FFA8A9FD38FFA8FFFFFF7D7DFFFF847DFF%52A852A852A8527D7DA8FD30FFA9A9FD39FFA8FFFFFFA8A8A8FF527DA87D%527D527D7D527D527DA8FD2DFFA87EFD3AFFA87DFFFFFF7D52A8FFA8A8A8%59A852A859A87DA87DA8FD2CFFA9A9FD3DFFA8FFFFFF847DA8FD0DFF84FD%2BFFA8FD3FFF84FFFFFF7D53FD0EFFA8FD2AFF84FD40FFA8FFFFFF7D7DA8%FD0DFFA8FD28FFA87EFD41FFA8FFFFFF7D7DFD0EFFA8FD27FFA9FD43FFA8%FFFFFF527DA8FD0DFFA8FD23FFA9A87EA9A9FD43FFA8FFFFFFA8FD0FFFA8%FD23FFA9FD47FFA8FD07FF7DA8FF7DA87DA87D7DA8A87D7DFD22FFA8FD48%FF7DFD07FF7D7DFFFD047D59A87DA87DA87EFD20FFA9FD48FF7DA8FD07FF%527D52527D527D527D527D7D84FD20FFA9FD4AFF84FD13FFA8FD1EFFA8A9%A9FD4AFFA8FD13FFA8FD1CFFA97EFD4DFFA8FD13FFA8FD1BFFA9FD4FFFA8%FD13FFA8FD1AFFA9FD50FFA8FD13FFA8FD18FFA8A9FD51FFA8FD13FF7DFD%15FFA8A8A8FD53FF7DFD0AFFA8FFA8FFA8FFA8FFA8A8FD14FFA9A9FD55FF%A8FD07FF527DA8FD05527D7D527D84FD13FFA8FD57FF84FD07FF5353A852%7D527D52A8527D527E7DFD11FFA8FD57FF7E7EFD07FFA8FFA8FFFFA8FFFF%A8A8A8FFA8FD12FFA9FD58FFA8FD13FFA8FD12FFA8FD58FFA8FD13FFA8FD%11FF7EFD59FFA8FD13FFA8FD11FFA9FD59FFA8FD13FF7DFD11FF7EFD59FF%7DFD13FFA8FD10FFA8FD5AFFA8FD13FF84FD0FFFA8FD5BFF84FD07FF7D53%FF527D52A8527D527D7DA8FD0EFF84FD5CFFA8FD07FF527DA87D527D527D%52537D527DA8FD0BFFA8A8FD5CFFA87DFD07FFA8A8A87DFF7DFF7DFF7DA8%A8A8FD0BFFA9FD5FFFA8FD13FFA8FD09FF7EA9FD60FFA8FD13FFA8FD07FF%A9A8FD62FFA8FD13FF7DFD06FFA9A8FD63FF7DFD13FFA8FFFFFFA9A8A9FD%65FFA8FD13FF84FFFFA9A8FD67FF84FD13FFA8FFA9A9FD68FFA8FD07FF7D%7DFF7D7D537E7DA8537D7D7DFD11FFA8A883A87DA883A8A8FD11FF83A883%AEFFFF83A883A883A8A8FD08FFA9FD05FFCF83A883AEA8A883A8FFFFA8A8%83A87DFFA8A883A883A883CFFFFFFFCF83A883A883A883A87DFD07FF7D7D%FFFD057D527D7D52527DA87DA87DA87DA87DA87DA87DA87DA87DFD04A87D%FD04A87DA87DA87DA87DA87DA87DA87DA87DA852A8A8A884A87DFD07A87D%A87DA87DA87DA852A87DA87DA87DA8A8A884FD05A87DFD04A87D7DFD07A8%7DA87DA87DFD07A87D52FD07FF7D7EFD047DA87DA87D7D7DA8FD12FFA8FF%FD05A8FD0EFFA8A8A8FFA8FF84FD0FFF84FFA8FF84FFA8FD0FFFA8AFFD05%A8FD0EFFFD07A8FD10FF7D7DFD11FF52A8527D527D52FD0FFF5253537D52%7D7DFD0EFF537D7D527D527DFD0EFFFD047D527D527DFD0EFF277D537D52%7D52FD10FF527DFD11FF527DFD0552FD0EFF527D527D527D527DFD0EFF52%7D277D527D52FD0EFF7D277DFD04527DFD0EFF7D59527D525252FDC0FF84%FD04FFA8A8FD05FF84FD73FF7D527D527D7D527D537D7D527DA8FD72FF7D%27527D7D7D2752527D7D527DA8FD77FFA8FFFFFF7DFFFFA8FDFCFFFDB6FF%FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T11:09:57+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T11:09:57+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T11:09:57+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>188</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAvAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwSD8vdRh03UNPFxa&#xA;S29/cRXMySROVlME6S/v15EObhVZJj3FNj0wqlcv5P3zwvG2owTkQwwlpoGY3HpwRwVuauxb0vS5&#xA;w77V38cbQibn8rNQkmuHbUo7xpr23vYbi6jLSQyW6SxK3GrRycIpRGqkAUFTvjaWUaVa6tdw3FxP&#xA;rF0pN3dpHFGloESOK5kjjReUBbZFH2iTgVG/oq+/6vN5/wABZ/8AZPirv0Vff9Xm8/4Cz/7J8Vd+&#xA;ir7/AKvN5/wFn/2T4q79FX3/AFebz/gLP/snxVTbSdW+sIV1q6+r8H9QFLTlzqvCn+j0pTlX6MVV&#xA;P0Vff9Xm8/4Cz/7J8Vd+ir7/AKvN5/wFn/2T4q79FX3/AFebz/gLP/snxVK0vo5Byj1fVpEqQHSw&#xA;DKSpoaMLIg7jthVbcXU5t5Rb6rqwuCjeiX08lQ9Ph5Usq0r1xVU+tf8Aa01j/uH/APZlirvrX/a0&#xA;1j/uH/8AZlirvrX/AGtNY/7h/wD2ZYq761/2tNY/7h//AGZYq761/wBrTWP+4f8A9mWKqcV1Pzm9&#xA;XVdWKFx6AXTzUJwWvKtl158vopiqp9a/7Wmsf9w//syxVGWlpPd2kN3b61eNBcRrLExjtVJRwGUl&#xA;Wtgw2PQiuBVb9FX3/V5vP+As/wDsnxV36Kvv+rzef8BZ/wDZPiqnLpOrc4fS1q6CBz64ZLSpTg1O&#xA;NLfrz4/RXFVT9FX3/V5vP+As/wDsnxV36Kvv+rzef8BZ/wDZPirv0Vff9Xm8/wCAs/8AsnxV36Kv&#xA;v+rzef8AAWf/AGT4qtfSb9lIGtXqk/tBLOo++3IxVf5enurjQNMnu5PVu5rSCS4lAC8pGjUu1FAA&#xA;q3gMVTDFXYq7FXYql2gf7wy/8xl7/wBRkuKpjirsVdirsVdirsVdirsVSjRVum0G3FrJHFLVvjlQ&#xA;yLT1Gr8KvGfxyQq91VxB5gqK3tpTv/osn/ZTkrh3H5/sRuir0StZzrDX1TG4j4mh5cTSh+eVpYBZ&#xA;xefLv9DxR/XNMZbG3tNTvZhBLKJkFZpFEpmRiT+2ynChBx3/AOc0kE8lzayQyzWVqY4bb6n+5lkS&#xA;39d0aVJKyxO0/JHDKwFFHQlSn/lqTz7caRdXetNJa6gLJY7ayWO3ZfrPpVaagPxP6g+z6gTr7EKp&#xA;Ha3f5wi4szJbytbrbyeortYl5pw84/eMIoRDVBCY6LRakNzOKrtOk/N2azd7h545baCUxRtHYrJc&#xA;uZQq8zx4BlhZmQLwUsF5UHJSqmOgWvnWDzQ1zNPezaPdTKksV6tqG9NLEUnIhVeDmdOJVKLuTx74&#xA;qyry1/yjmlf8wdv/AMmlwKmOKuxV2KuxV2KuxV2Kqdxc29tC09xKkMCCryyMEVR03Y0AwgE7BUD5&#xA;ZIPlvSiOhs7cj/kUuAqmWKsCtfMfnNtGvmu7aeK9W5hCSJZTsY4PUiW79OMI3reisjemRXnuV5cT&#xA;hVLG81fmgLR3m054Lj0o2nWKylnEEpg5KsQU/vxLMOL0P7sdadcUIm78y/mYt9dqdIktYlukWyUQ&#xA;rcK8fCQKhkhaX4ZHjVnkYL6YYA+OKWZeXJHezuA0TRhL29CsxWjj63L8S8WY0+dMCprirsVdirsV&#xA;dirsVdirsVSjRJpItBt3jge4arj04ygb+8bf94yL+OJQiBqV4SB+iroe/K1/6r5Gz3Is9yKvJmht&#xA;J5lALRRs6g9KqpIrkmTy3QPzd1q60wXV7aW9xccoVW3tyIVY3EdoUDOJbxU4yXTftcuIHJVOGlRu&#xA;p/nRDplzJbXemKZ4bW/mniiuSzrPp0V1K8Q5QoGjcWMgWQHwqorgVkujebru+8wz6Bdad9V1Cyi9&#xA;e+KSmWFI3WMwFXMcZf1S8ij4RT039qqsasPzlF1Np0D6UqXF5ctBPGlyXEKqbcf3jQpFLIFu1YrG&#xA;xTj0kYkDDSt2H5yfXreSa10lbgQLdzzelcswNraQRXPOMNCrtJIk4AjZV+LvTfGlRdl+YeqyeaIr&#xA;Ca1spdNngsP39ld/WRFPezXsa8X9JBKpFotfs8DX7VcCst8tf8o5pX/MHb/8mlxVMcVdirsVdirs&#xA;VdiqXXutwQTm0topL6/FOVrAASnIVBldiqRAjccjU9gcsjjJFnYIJUYtLl9T9JakgvtQj+K3t46G&#xA;KD/JgEhRee+8rUZvYfCEz2qPL7/x3LSr5ZJPlvSSRQmzt9j1H7pfDK0plirsVdirsVS7QP8AeGX/&#xA;AJjL3/qMlxVMcVdirsVdirsVdirsVdiqTWMPmCxtVtUtbSVIy3GRrmRCwLEglRbvTr4nFUR6/mP/&#xA;AJYbP/pLl/7JsVaM/mIihsbMg/8AL3L/ANk2KqarrKoEXTLBUXdVFzIAN67D6r44q0yay7cm0uwZ&#xA;qMORuXJo1eQ/3l71NcVU7e01a3u7q8h02zFzeFDcym9nZm9MUQfFbmirU0UbbnxOKqoTWVREGl2A&#xA;RG5oouXorD9oD6rscVdGNbjNY9MsEO5qt1IOvXpa98Vci60lOGmWC0pSlzIKUJI/49fFjiqL0i0k&#xA;s9JsrOUgy20EULlalSyIFNKgbbYqi8VdirsVdiqHvtQs7GJZbqTgruscahWd3duioiBmY+wHvkox&#xA;MuSkpfcXN9qhW2sPWs7Y0N1eyRPDJxr/AHUCSqrcm7uRRR0q32ZgCO53PcjmmNlY2llAILWMRxAk&#xA;0FSSx6szGrMx7sTU5CUiTZTSvkVS7y1/yjmlf8wdv/yaXFUxxVjcHnrTZ7C7u4rS6b6rNBBHBxiE&#xA;k5upVht3irJw4yO1AXZaftUxVLz+a/l7grx215Kssay2vFIR6w9JJpAnOVaGJJBz58f8nlhpVaf8&#xA;y9HiuZYPqd25imtonlUQemEvElkinZzMAkdLc150YVX4d8FKnPlyeCWzuFjkV2ivb1ZFUglW+tym&#xA;jU6HFU1xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVAX+qejcJZWsYudRlX&#xA;1Ft+fBVjBoZJXo3BK7D4SSeg2NJxhYs7BBKnZaRKL39I6jMLq/ClIeK8IoEb7SxKSxq37Tk1PsNs&#xA;Mp7UNgtJnlaXYqsmmhgiaWaRYokFXkchVA9ydsVQHlkhvLekkGoNnbkEdCPSXFUyxVJj5O8sFJo/&#xA;0dEEuHaWZVBUM7srFtjsQ0alafZI2pirTeSvKbLIp0q34yrHG6hABxhUKgAHSioF26gUO2Krn8oe&#xA;W3eV3sVZp3WSarOQ5RmZVYcqFFaRiE+zudsVV9A/3hl/5jL3/qMlxVMcVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVWyyxRRPLK6xxRqWkkYhVVVFSSTsABhAtUqF/q2oL/uOg+qWz/Z&#xA;vrsEMR/NHb7Ma9vUK+NCMs4Yx57nuH60WjNP0y3sRIULSzzsHubmUhpZWAoCxAA2GwAAA7DIymZK&#xA;Ai8gl2KuxV2Kpd5a/wCUc0r/AJg7f/k0uKpjiqkbu0EUkpmjEUJKyychxQr9oMa0FO9cVakvrKPn&#xA;6lxGnp8fU5Oo4+pslanbl28cVaXULBiwW5iYpJ6DgOppKf8AdZ3+1/k9cVQugf7wy/8AMZe/9Rku&#xA;KpjirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQF1q6xXJtLa3lvbpAGkih4ARhvsmR&#xA;5GRVr4V5d6ZOMNrJoItDppl9fyxz6w6CONhJDpsBJhDL9lpXYK0xB3Aoqg9iQGyXGI7R+f45LSb5&#xA;Ul2KuxV2KuxV2Kpd5a/5RzSv+YO3/wCTS4qvtNc0e8vJrK1vIp7u35evCjAsvBzG1QP5XUqfA4qx&#xA;W0/Le4tdLurBNQhdLi4guR6lqzIWtJInh9VPXHqchEwlNRzqD8PHc2qWj8mUS0+rJqiOEiWGJp7X&#xA;1Sw+r/V3NxWUesafFH04H+bG1ReoflW97qN1evqaL9ZkjPpfV3YLFGsqVBackTkTV9QUUEVEdWar&#xA;asq8uRulncFpWkD3t6VVgtEH1uX4V4qpp864FTXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;YqpXV1b2tu9xcSCKGMVd22AGEAk0FS4XOtagD9UjGnWp6XNyha4YeKQbCP2Mhr4pllRjz3P46/j3&#xA;o3Rmm6db6fai3hLNuXllkPKSSRjVpHbuzH+goNshOZkbKgIrIpdirsVdirsVdiqyaNpImRJGhZhQ&#xA;SJxLL7jmGX7xiqA8sgjy3pIJqRZ2+56n90vhirCvy4tVj816+0dytzHHPdRtL+5DvL9aKuzrHHE6&#xA;uvpCNyxbmV5VHTCr0fArsVdiqXaB/vDL/wAxl7/1GS4qmOKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KoHUNUW2litYU+sahcVMFqG41VftSO1DwjWu7U9gCSBk4wvfoglQh02+ub1LzVZIysG9rYw&#xA;1aKN/wDfruwUyOOinioXfau+SMwBUfmtJrlSXYq7FXYq7FXYq7FXYq7FUu8tf8o5pX/MHb/8mlxV&#xA;jHk+KdPOGttJLcMXecyQTRzosf8ApTelR5JHifnFRk9FF+CnOrGuFVKDVvPX6L1EXEF4Ln6xH6Mq&#xA;W8BeOFZoxdiBaFXAhYmAurFjX7VKYqlkup/mwYGZormOQwQm4WKC2PpSGCMj6vVZOZeYuswbkEH2&#xA;adcUIq41L8wmluTAb5PQvrdUtWtoKzJwl+sJFOIWjSAyNHwd6sAlWb48Usx8uGc2dx6iKqi9vfTK&#xA;sWJX63LuwKrxPtvgVNcVdirsVdirsVdirsVdirsVdirsVdirsVUrm6tbWFp7qZIIV+1LKwRR82Yg&#xA;YREnYKlovb3VZSmnO1rYJ/eaiUHOQ02FusilSvjIwI7KDuVs4RHnue79aOaMsNLtbNpJU5y3M1PX&#xA;uZWLyPxrxBJ6KKmirRRU0G+RlMlQEXkEuxV2KuxV2KuxV2KuxV2KrJjMImMKq8oHwK7FFJ92CuR9&#xA;2KoDyzX/AA3pNRQ/U7eoG4r6S4qx3yh5c1XTfNOt31zaCCzvJ7mS3YSq9TLMHMgAPIesoWobdSvg&#xA;QAVZpgV2KuxVLtA/3hl/5jL3/qMlxVMcVdirsVdirsVdirsVdirsVdirsVdiqA1HWILSRLWIfWdR&#xA;m/uLJCOZrX4368IxTdyPlU0BnDGTv0QSsstG4zre6jJ9c1EV4SEUihr+zBGSQngW+0e5wyybUNh+&#xA;Oa0mWVpdirsVdirsVdirsVdirsVdirsVdiqXeWv+Uc0r/mDt/wDk0uKsf8m6XNZ67rEs8tjJNczT&#xA;SSCCeO4uUaSX1TFKwtreXjGJAFDu3EUHSmFVa0/MC1u9Jub+CwnLxXFvb29uTGGmN66Jbvy5cUDe&#xA;oOXLdd9jtUKlo/N/SHtkuINPupUuI/WsxWFTIiwfWJvtOAhjj7N9o9MNKirv8zLO1mnjbT5pVgm9&#xA;NpYWjdPTCGVnrUfGsYVjF9r4l+hpU+8uTwS2dwsciu0V7erIqkEq31uU0anQ4FTXFXYq7FXYq7FX&#xA;Yq7FXYq7FXYqpXV1bWkD3FzKkMEYq8shCqKmgqT74REk0FS2S+vNSIt9Pjmtrd6+vqMsZiKr/LCk&#xA;oDs7dmK8R132BsERHc/JFo6w02xsIfSs4VhQmrlR8TtSnJ2NWdj3ZiTkJTMuaQETkVdirsVdirsV&#xA;dirsVdirsVdirsVdiqyaaGCJpZpFiiQVeRyFUD3J2xVAeWSG8t6SQag2duQR0I9JcVYj+X/1N/NX&#xA;mSWJY45frl2rQo4YqRcsjvwN3M6+qYwzVt4wT0JFMKstPlfy0YpYjpNmYpyzTp6EVHLsjuWHHfk0&#xA;SE17qPAYFWy+U/K8omEukWTi49P6wGt4iJPRAEXOq78AKLXpiq4+V/LJd3Ok2XOWf63I31eKrXFS&#xA;fWY8d5Ks3xddziq7QP8AeGX/AJjL3/qMlxVMcVdirsVdirsVdirsVdirsVQF/rEFrKLWJGu9QZea&#xA;WUNC/EmgZySFjSo+05A7Cp2ycYE78gglSs9Hd51v9VZbm/BrEgqYLfwEKt+1TrIfiPsPhBlPao7D&#xA;71pNMrS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql3lr/lHNK/5g7f/k0uKpV5K8uavpNpFJqt&#xA;zDPeSW8S3PpJOG9YAGQlpLidG+Kv2EX+GKpz+nNE+rXN1+kLb6rZMY7yf1o/ThdftLK1aIRXcNiq&#xA;x/MOgRmUSanaIYFjeblPGOCzbxM1W+ESfs169sVXSa9ocSGSTUbZEWf6oztNGALilfRJJ/vKb8eu&#xA;KrNA/wB4Zf8AmMvf+oyXFUxxV2KuxV2KuxV2KuxVRvLy2s7WS6uX9OGIVZup8AABuSTsANydhhjE&#xA;k0FS6NfM11B6vr29h61SkDW7SyxKfshn9ZUL06/BQHb4gN7DwA9T8f2I3Run6bbWEBihBLOec8zn&#xA;lJLIQAXkb9pjT6BsKAAZCUzI7qAisil2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kpd5a/wCU&#xA;c0r/AJg7f/k0uKpjirEIfIM1vaz20GqFVlmgnjZoEJQ2cyT2wNGAbiyHmTuwPVaYbVLW/KG0WBIY&#xA;NTkjFvCsNqTEh41hjglMlCok5JEOIP2D49MbVMp/IdzMk8J1FUhe9hvbaRIXW5gMNstr8E3rf3hj&#xA;jX4+PdqqQ1AqnXlyFI7O4ZSxMl7es3J2YA/W5R8IYkKPYYFTXFXYq7FXYq7FXYqgbzWbW3n+qor3&#xA;V8Ry+qW4DyAHoXJKpGD2LsoPbJxxki+QRahBp95d3aX2qcVWKhs9PQ8kib/fkjUHOXw/ZXtU/EZG&#xA;QAqPzWk1ypLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqyaJZomjcsFYUJRmRvoZCrD6Di&#xA;qA8sgDy3pIHQWduNzU/3S9ziqZYq7FXYq7FUu0D/AHhl/wCYy9/6jJcVTHFXYq7FXYqo3l7a2UDT&#xA;3UqxRLQcm7k7BVA3Zidgo3PbDGJJoLaXS3uqX8XoWNrPZCXY6hcCNeCd2SIs0hf+UOgHc9KGwRjH&#xA;cm/JCO0/TrTT7YW9qnBK8nY7u7kULyMd3dqbsdzkJTMjZUBE5FLsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiqXeWv+Uc0r/mDt/8Ak0uKpjirArVvzCXRb+G7S7a9e5heOSM2nqiBZYRd&#xA;rAeQQBkaQw8xy2PQ8cKpU0X5xNaus7T/AFr0ovrDWzWSgy+h8JteewAuP771P2fs7YoR13/ysoza&#xA;hFa/Wiq6rytJT9VCm3azioBzofq63glrt6nHj1xSy/y4ZzZ3HqIqqL299MqxYlfrcu7AqvE+2+BU&#xA;1xV2KuxVDalepY2Fxdspf0ELiMdXYD4UX3Y7DJQjxGkFDWWkuJ1vtSkF1qAB9MgERQA9VhQ1p7uf&#xA;ib5UAlKe1DYLSZZWl2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJjMImMKq8oH&#xA;wK7FFJ92CuR92KoDyzX/AA3pNRQ/U7eoG4r6S4qmWKuxV2KuxVLtA/3hl/5jL3/qMlxVMcVdirsV&#xA;SvVf9Iv9O08fZaQ3c4rT93alWX6fXeI/IHLIbAn4fP8AZaCmmVpdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdiqXeWv+Uc0r/mDt/8Ak0uKpjirEbb8wY7jTry5SzCzQXFvb20D&#xA;zqBJ9bmWCFpHCn0yGf41oxUeOGlStvzftmhWWHTWYTRLLbB5gtf3EdxIJeKP6dFlAQ78z4dcaVED&#xA;80UlWWWDTT9XhuEjkmlkdRHbtLcwNPMqRSuhEtmRxodmU8hvRpWS+XJkks7hVDAx3t6rckZQT9bl&#xA;PwlgAw9xgVNcVdiqXXmsqk7WdjEb7UFpygQ8UiqKgzy0Kxj23Y/sqcsjj2s7D8ckErtN02WCSS7u&#xA;5vrN/OFWWQDjGiqSVjiTfioLHqST3PSgnO9hyUBH5BLsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdiqyaVYYmkcMVUVIRWdvoVAzH6BiqA8skHy3pJHQ2dudxQ/wB0vY4qmWKoF9C0&#xA;N1lV9OtmWYuZlMMZDmWnqFtt+fEcq9aYqufRtHkEgext3EwRZg0SHmIv7sNUb8KfDXpirUuh6LLK&#xA;ZZdPtpJTKJzI0MZb1VHESVIrzA25dcVU9A/3hl/5jL3/AKjJcVRl3d21nbvc3MixQRiru3QVNAPc&#xA;kmgHc4YxJNBUtH6a1ROQY6VYv9nat469ieXwQV8CrNT+Vulnpj/SP2ftRuUxsrK1srdbe1jEcS1N&#xA;BUkk7lmY1ZmJ3LE1PfISkSbKVbIq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYql3lr/AJRzSv8AmDt/+TS4qmOKpcPMegNZ3N6uo27Wlo/pXU4lUpHJUDgxB2YlhQd6jxxV&#xA;Rk83+VYlmaTWLNVtxGZ2M8dEEw5RljXYMu4Phiq9/NPlqOV4n1S1WWOcWroZkBE7VpGRX7XwMKex&#xA;8DiqGsn1A6PKmnBTcy317GJmoUhBvJuUrAn4uNNlHU0GwqROFXvyQUXa6Dodl6Trawm4U7Xcqo07&#xA;yMal2kI5M7HcnxwyyyPVaCZZWlYs0LSNGsitIn20BBYfMYqp3OoWFr/vVcxQd/3rqnX/AFiMBICC&#xA;QFH9OaJw5/pC24fzetHTanevvjxBHEO9dFrGkSgmK+t5AOpWVD+o48QTxBf+ktO/5aof+Ri/1xsL&#xA;Yd+ktO/5aof+Ri/1xsLYd+ktO/5aof8AkYv9cbC2GjqemqCTdwgDckyLQD78bC2Fg1rRjJ6Qv7cy&#xA;9OAlTlUddq48QRxDvXSatpca85LyBFHVmkQD7yceIJ4gpf4g0H/q5Wv/ACPj/wCasHEO9HGO9X/S&#xA;Wnf8tUP/ACMX+uGwmw79Jad/y1Q/8jF/rjYWw0NT00kgXcJI2P7xdj18cbC2G/0lp3/LVD/yMX+u&#xA;NhbCkut6K0nprf2zSbjgJoyajrtXBxDvRxDvbOtaOJPSN/biX/ffqpy336Vrh4gniHevbU9NVSzX&#xA;cIUCpJkQAAfTjYWwsj1rRpDSO/t3PT4ZUO+57H2x4gvEHSa1o0RAlv7eMncBpUBp9Jx4gjiHe1Hr&#xA;eiytxjv7Z260WaMmn0HBxDvXiHeq/pLTv+WqH/kYv9cNhNhROv6EpIOo2oI2IM0dQf8AgsHEO9HG&#xA;O9r/ABBoP/Vytf8AkfH/AM1Y8Q714x3rPLJDeW9JZTUGztyCOhHpLkmSZYqxS2/LyytbOW1g1C6V&#xA;ZJYZ43IhLRvavG9txrHQiL0qfEDy5GvaiqAT8o9Eit1gt7+8hjhj9GzoYWMKNB9Xm48ojyMsZ351&#xA;ofs0w2qtL+VeiyTyy/XLpRI5AQGKiwNJPK9uKxk8We7k+KvPp8W27aobyTbaN5p0a6urq0dEe7aV&#xA;7eO8u5IRLcRpdyAIzhUeOS5eORVFA6tsPsgEIItPR5A8pr9myYbU2nn6f8jMHCO5HAO5r/lX/lH/&#xA;AJYTv1/fz/8AVTBwjuXgHcuPkTysUVDaOUWvFTcXFBXrQeph4R3LwDuS3zJo2g+WvLmoazaRi2ex&#xA;iacGW8uYYyV/Z5LKvxOPhX3IxACREBiOr+a7K11S8mgs/Xa0do7e7OpXfJY/SmlAkdZGobv6sogp&#xA;15r16GVKyXywNP8AMN7qkV3byD9HymJGF9dyMtJpovSm5SfDKohDsBtRx8yCFpkH+DtA/wB9Tf8A&#xA;SVc/9VMFBaDv8HaB/vqb/pKuf+qmNBaDv8HaB/vqb/pKuf8AqpjQWg85uta0d7u4s4rSK+tV1BtP&#xA;M0d9dASFSiPbqpl5etWRgD0bg1BthoIoKuj+aYNRbTLWSyKQXk6xGIaheknmLVjFEhehltjdt64P&#xA;2fTb3CtJp6HH5T0SJw8aXCOOjLd3QIrt1EuNLQVj5f08ggyXZB2IN7d/9VcUof8AwdoH++pv+kq5&#xA;/wCqmCgigxjzlHo+gXGmJBatdNeSmOS0+uXAnZdqNEvr8zQmh4xt2rxG+GgtBi0fmbT1iaWLSknZ&#xA;oZp+cF/eFblooLh+UBLbpD9VRJj25inYFoIoM88saNomsaLDfyQOGd5ow8N3cvFIIZnhWaJvV3jl&#xA;Ceon+SRgoJoJy3lnSmiETG5aIAARm8uytB029WmFaaHlfSBF6I+siE9Y/rl1x8enq0xWkFqfl7Q9&#xA;O0+5v0s7y5e1jaVLe2uLt5pGQVCRqslSxOwwUFoPPv8AFltex2Ut3p59ZreKVluL7UFa3eZxFJdM&#xA;srIwtIubBnIBNMlSp55K1S21fVfqJs5rNHs0u2WK/vOaEw2sgMg9RfglN24iNNxG3fYClAZnL5Z0&#xA;qZQsxupFBqFe8u2FfHeXFaUv8HaB/vqb/pKuf+qmCgtBEL5e09VCrJdqqiiqL27AAHYfvcKWC+Y9&#xA;fTTdX1LTeTmO2WExzHUrsLEsjQqz3TR3JkhoZ/hVkXkKFWO9ChC2/wCaN1p2mLbW2kw21vZRxQw2&#xA;007l4Fjt5njgnJDN6s31dUh7sXHU/aaV6tgS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnl&#xA;t+biSTSWX6Lklv4Y4XcK6RxuZjF9jmS3ECcfFTqrDwqaQoSfnEtvqTLPp7Np8lvcXMHp7TKtsvIr&#xA;IWbgXk4n00XrUdgWxpVeT84rCPT/AK2+mTJSH60S0kfpeh6y2/qCVeXL97yooHMqpPHtjSWXeXNZ&#xA;fVrOed0CGK6ngUrXiyRyEIRXvwoG/wAquBU1xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVSh+qepceh6fq+oPrXCnL1PTWnqU35enw6/s07UxVQg/R&#xA;P6Uu/Q9H9KenF9d48fW9L4vR5/tcft8e3WnfFVe1+qemfqvp+l6knL0qcfU9RvVrx25epy5f5Va7&#xA;4qq4q7FXYq7FXYq7FXYq7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:08352559142068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:08352559142068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:08352559142068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T11:09:57+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -191.714 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 191.714 li
265.199 191.714 li
265.199 0 li
cp
clp
[1 0 0 1 0 0 ]ct
34.3418 175.596 mo
257.542 175.596 li
257.542 2.7959 li
34.3418 2.7959 li
34.3418 175.596 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
34.3418 175.596 mo
257.542 175.596 li
257.542 2.7959 li
34.3418 2.7959 li
34.3418 175.596 li
cp
clp
.5 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
38.8057 171.751 mo
43.27 165.983 li
47.7339 165.983 li
52.1978 162.229 li
56.6616 160.216 li
61.126 156.827 li
65.5898 154.081 li
70.0537 150.603 li
74.5181 137.236 li
78.9819 133.757 li
83.4458 130.644 li
87.9097 129.911 li
92.374 125.242 li
96.8379 122.587 li
101.302 120.664 li
105.766 116.453 li
110.23 111.052 li
114.694 111.509 li
119.158 107.664 li
123.622 104.917 li
128.086 101.072 li
132.55 98.417 li
137.014 96.9521 li
141.478 92.2827 li
145.942 90.3608 li
150.406 86.1484 li
154.87 83.0361 li
159.333 81.5713 li
163.797 77.6348 li
168.262 76.1694 li
172.725 71.5005 li
177.19 70.0356 li
181.654 65.3662 li
186.118 62.7109 li
190.582 60.7886 li
195.045 56.1196 li
199.51 54.6548 li
203.973 51.9995 li
208.438 47.7881 li
212.902 45.7739 li
217.366 43.1191 li
221.83 38.4497 li
226.293 36.1611 li
230.758 31.6753 li
235.222 31.2173 li
239.685 27.0054 li
244.15 23.8931 li
248.614 21.604 li
253.078 17.7593 li
257.542 15.3784 li
.884 .769 0 0 cmyk
@
38.8057 174.497 mo
43.27 174.405 li
47.7339 174.132 li
52.1978 174.405 li
56.6616 174.497 li
61.126 174.04 li
65.5898 174.405 li
70.0537 174.132 li
74.5181 173.674 li
78.9819 174.04 li
83.4458 173.674 li
87.9097 174.04 li
92.374 174.04 li
96.8379 174.04 li
101.302 174.04 li
105.766 174.04 li
110.23 174.04 li
114.694 174.04 li
119.158 174.132 li
123.622 174.132 li
128.086 173.674 li
132.55 174.132 li
137.014 174.04 li
141.478 173.674 li
145.942 173.674 li
150.406 174.04 li
154.87 174.04 li
159.333 174.132 li
163.797 174.04 li
168.262 174.04 li
172.725 174.04 li
177.19 174.04 li
181.654 174.04 li
186.118 173.674 li
190.582 174.132 li
195.045 173.674 li
199.51 174.132 li
203.973 174.132 li
208.438 173.674 li
212.902 174.04 li
217.366 174.04 li
221.83 173.674 li
226.293 173.674 li
230.758 174.04 li
235.222 174.04 li
239.685 174.04 li
244.15 173.674 li
248.614 173.674 li
253.078 173.674 li
257.542 173.674 li
.873 .242 1 .129 cmyk
@
grestore
34.3418 175.596 mo
34.3418 173.595 li
34.3418 175.596 li
cp
0 0 0 1 cmyk
f
.25 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
34.3418 175.596 mo
34.3418 173.596 li
@
34.3418 4.79639 mo
34.3418 2.79639 li
34.3418 4.79639 li
cp
f
34.3418 2.7959 mo
34.3418 4.7959 li
@
34.7378 178.175 mo
34.4321 178.175 34.2041 178.324 34.0479 178.624 cv
33.8921 178.925 33.8198 179.374 33.8198 179.975 cv
33.8198 180.574 33.8921 181.024 34.0479 181.324 cv
34.2041 181.624 34.4321 181.774 34.7378 181.774 cv
35.0439 181.774 35.272 181.624 35.4282 181.324 cv
35.5781 181.024 35.6558 180.574 35.6558 179.975 cv
35.6558 179.374 35.5781 178.925 35.4282 178.624 cv
35.272 178.324 35.0439 178.175 34.7378 178.175 cv
34.7378 177.706 mo
35.2241 177.706 35.5962 177.904 35.8599 178.288 cv
36.1182 178.679 36.25 179.243 36.25 179.975 cv
36.25 180.712 36.1182 181.276 35.8599 181.661 cv
35.5962 182.044 35.2241 182.236 34.7378 182.236 cv
34.2461 182.236 33.8682 182.044 33.6099 181.661 cv
33.3521 181.276 33.2261 180.712 33.2261 179.975 cv
33.2261 179.243 33.3521 178.679 33.6099 178.288 cv
33.8682 177.904 34.2461 177.706 34.7378 177.706 cv
f
78.9814 175.596 mo
78.9814 173.596 li
f
78.9814 175.596 mo
78.9814 173.596 li
@
78.9814 2.7959 mo
78.9814 4.7959 li
f
78.9814 2.7959 mo
78.9814 4.7959 li
@
72.6123 181.66 mo
73.5786 181.66 li
73.5786 178.324 li
72.5283 178.534 li
72.5283 177.994 li
73.5723 177.784 li
74.1665 177.784 li
74.1665 181.66 li
75.1323 181.66 li
75.1323 182.158 li
72.6123 182.158 li
72.6123 181.66 li
cp
f
77.5923 178.175 mo
77.2866 178.175 77.0586 178.324 76.9023 178.624 cv
76.7466 178.925 76.6743 179.374 76.6743 179.975 cv
76.6743 180.574 76.7466 181.024 76.9023 181.324 cv
77.0586 181.624 77.2866 181.774 77.5923 181.774 cv
77.8984 181.774 78.1265 181.624 78.2827 181.324 cv
78.4326 181.024 78.5103 180.574 78.5103 179.975 cv
78.5103 179.374 78.4326 178.925 78.2827 178.624 cv
78.1265 178.324 77.8984 178.175 77.5923 178.175 cv
77.5923 177.706 mo
78.0786 177.706 78.4507 177.904 78.7144 178.288 cv
78.9727 178.679 79.1045 179.243 79.1045 179.975 cv
79.1045 180.712 78.9727 181.276 78.7144 181.661 cv
78.4507 182.044 78.0786 182.236 77.5923 182.236 cv
77.1006 182.236 76.7227 182.044 76.4644 181.661 cv
76.2065 181.276 76.0806 180.712 76.0806 179.975 cv
76.0806 179.243 76.2065 178.679 76.4644 178.288 cv
76.7227 177.904 77.1006 177.706 77.5923 177.706 cv
f
81.4082 178.175 mo
81.1025 178.175 80.8745 178.324 80.7183 178.624 cv
80.5625 178.925 80.4902 179.374 80.4902 179.975 cv
80.4902 180.574 80.5625 181.024 80.7183 181.324 cv
80.8745 181.624 81.1025 181.774 81.4082 181.774 cv
81.7144 181.774 81.9424 181.624 82.0981 181.324 cv
82.2485 181.024 82.3262 180.574 82.3262 179.975 cv
82.3262 179.374 82.2485 178.925 82.0981 178.624 cv
81.9424 178.324 81.7144 178.175 81.4082 178.175 cv
81.4082 177.706 mo
81.8945 177.706 82.2666 177.904 82.5303 178.288 cv
82.7886 178.679 82.9204 179.243 82.9204 179.975 cv
82.9204 180.712 82.7886 181.276 82.5303 181.661 cv
82.2666 182.044 81.8945 182.236 81.4082 182.236 cv
80.9165 182.236 80.5386 182.044 80.2803 181.661 cv
80.0225 181.276 79.8965 180.712 79.8965 179.975 cv
79.8965 179.243 80.0225 178.679 80.2803 178.288 cv
80.5386 177.904 80.9165 177.706 81.4082 177.706 cv
f
85.2246 178.175 mo
84.9185 178.175 84.6904 178.324 84.5347 178.624 cv
84.3784 178.925 84.3066 179.374 84.3066 179.975 cv
84.3066 180.574 84.3784 181.024 84.5347 181.324 cv
84.6904 181.624 84.9185 181.774 85.2246 181.774 cv
85.5308 181.774 85.7583 181.624 85.9146 181.324 cv
86.0645 181.024 86.1426 180.574 86.1426 179.975 cv
86.1426 179.374 86.0645 178.925 85.9146 178.624 cv
85.7583 178.324 85.5308 178.175 85.2246 178.175 cv
85.2246 177.706 mo
85.7104 177.706 86.0825 177.904 86.3467 178.288 cv
86.6045 178.679 86.7363 179.243 86.7363 179.975 cv
86.7363 180.712 86.6045 181.276 86.3467 181.661 cv
86.0825 182.044 85.7104 182.236 85.2246 182.236 cv
84.7324 182.236 84.3545 182.044 84.0967 181.661 cv
83.8384 181.276 83.7124 180.712 83.7124 179.975 cv
83.7124 179.243 83.8384 178.679 84.0967 178.288 cv
84.3545 177.904 84.7324 177.706 85.2246 177.706 cv
f
123.622 175.596 mo
123.622 173.596 li
f
123.622 175.596 mo
123.622 173.596 li
@
123.622 2.7959 mo
123.622 4.7959 li
f
123.622 2.7959 mo
123.622 4.7959 li
@
117.551 181.66 mo
119.615 181.66 li
119.615 182.158 li
116.837 182.158 li
116.837 181.66 li
117.059 181.433 117.365 181.12 117.755 180.724 cv
118.139 180.335 118.385 180.083 118.487 179.968 cv
118.679 179.759 118.811 179.578 118.883 179.429 cv
118.955 179.284 118.997 179.134 118.997 178.99 cv
118.997 178.763 118.913 178.57 118.751 178.427 cv
118.589 178.282 118.379 178.204 118.115 178.204 cv
117.929 178.204 117.731 178.24 117.527 178.3 cv
117.323 178.366 117.101 178.462 116.867 178.595 cv
116.867 177.994 li
117.107 177.899 117.329 177.826 117.533 177.778 cv
117.737 177.731 117.929 177.706 118.103 177.706 cv
118.553 177.706 118.913 177.82 119.183 178.048 cv
119.453 178.276 119.591 178.576 119.591 178.954 cv
119.591 179.134 119.555 179.308 119.489 179.464 cv
119.423 179.627 119.303 179.818 119.123 180.034 cv
119.075 180.095 118.919 180.257 118.655 180.526 cv
118.391 180.796 118.025 181.175 117.551 181.66 cv
f
122.123 178.175 mo
121.817 178.175 121.589 178.324 121.433 178.624 cv
121.277 178.925 121.205 179.374 121.205 179.975 cv
121.205 180.574 121.277 181.024 121.433 181.324 cv
121.589 181.624 121.817 181.774 122.123 181.774 cv
122.429 181.774 122.657 181.624 122.813 181.324 cv
122.963 181.024 123.041 180.574 123.041 179.975 cv
123.041 179.374 122.963 178.925 122.813 178.624 cv
122.657 178.324 122.429 178.175 122.123 178.175 cv
122.123 177.706 mo
122.609 177.706 122.981 177.904 123.245 178.288 cv
123.503 178.679 123.635 179.243 123.635 179.975 cv
123.635 180.712 123.503 181.276 123.245 181.661 cv
122.981 182.044 122.609 182.236 122.123 182.236 cv
121.631 182.236 121.253 182.044 120.995 181.661 cv
120.737 181.276 120.611 180.712 120.611 179.975 cv
120.611 179.243 120.737 178.679 120.995 178.288 cv
121.253 177.904 121.631 177.706 122.123 177.706 cv
f
125.939 178.175 mo
125.633 178.175 125.405 178.324 125.249 178.624 cv
125.093 178.925 125.021 179.374 125.021 179.975 cv
125.021 180.574 125.093 181.024 125.249 181.324 cv
125.405 181.624 125.633 181.774 125.939 181.774 cv
126.245 181.774 126.473 181.624 126.629 181.324 cv
126.779 181.024 126.857 180.574 126.857 179.975 cv
126.857 179.374 126.779 178.925 126.629 178.624 cv
126.473 178.324 126.245 178.175 125.939 178.175 cv
125.939 177.706 mo
126.425 177.706 126.797 177.904 127.061 178.288 cv
127.319 178.679 127.451 179.243 127.451 179.975 cv
127.451 180.712 127.319 181.276 127.061 181.661 cv
126.797 182.044 126.425 182.236 125.939 182.236 cv
125.447 182.236 125.069 182.044 124.811 181.661 cv
124.553 181.276 124.427 180.712 124.427 179.975 cv
124.427 179.243 124.553 178.679 124.811 178.288 cv
125.069 177.904 125.447 177.706 125.939 177.706 cv
f
129.755 178.175 mo
129.449 178.175 129.221 178.324 129.065 178.624 cv
128.909 178.925 128.837 179.374 128.837 179.975 cv
128.837 180.574 128.909 181.024 129.065 181.324 cv
129.221 181.624 129.449 181.774 129.755 181.774 cv
130.061 181.774 130.289 181.624 130.445 181.324 cv
130.595 181.024 130.673 180.574 130.673 179.975 cv
130.673 179.374 130.595 178.925 130.445 178.624 cv
130.289 178.324 130.061 178.175 129.755 178.175 cv
129.755 177.706 mo
130.241 177.706 130.613 177.904 130.877 178.288 cv
131.135 178.679 131.267 179.243 131.267 179.975 cv
131.267 180.712 131.135 181.276 130.877 181.661 cv
130.613 182.044 130.241 182.236 129.755 182.236 cv
129.263 182.236 128.885 182.044 128.627 181.661 cv
128.369 181.276 128.243 180.712 128.243 179.975 cv
128.243 179.243 128.369 178.679 128.627 178.288 cv
128.885 177.904 129.263 177.706 129.755 177.706 cv
f
168.261 175.596 mo
168.261 173.596 li
f
168.261 175.596 mo
168.261 173.596 li
@
168.261 2.7959 mo
168.261 4.7959 li
f
168.261 2.7959 mo
168.261 4.7959 li
@
163.487 179.8 mo
163.769 179.86 163.991 179.986 164.147 180.179 cv
164.303 180.37 164.387 180.61 164.387 180.886 cv
164.387 181.318 164.237 181.654 163.943 181.888 cv
163.643 182.122 163.223 182.236 162.676 182.236 cv
162.491 182.236 162.298 182.218 162.107 182.183 cv
161.915 182.152 161.71 182.099 161.506 182.026 cv
161.506 181.457 li
161.668 181.552 161.849 181.624 162.046 181.673 cv
162.239 181.72 162.443 181.745 162.659 181.745 cv
163.031 181.745 163.313 181.673 163.504 181.528 cv
163.697 181.384 163.798 181.169 163.798 180.886 cv
163.798 180.634 163.708 180.431 163.529 180.286 cv
163.349 180.143 163.097 180.064 162.773 180.064 cv
162.263 180.064 li
162.263 179.579 li
162.796 179.579 li
163.084 179.579 163.307 179.524 163.462 179.404 cv
163.619 179.29 163.697 179.122 163.697 178.9 cv
163.697 178.679 163.613 178.505 163.457 178.384 cv
163.294 178.265 163.067 178.204 162.773 178.204 cv
162.611 178.204 162.437 178.222 162.25 178.259 cv
162.065 178.294 161.861 178.349 161.639 178.421 cv
161.639 177.893 li
161.861 177.833 162.071 177.784 162.269 177.755 cv
162.46 177.725 162.647 177.706 162.827 177.706 cv
163.271 177.706 163.625 177.809 163.889 178.013 cv
164.153 178.216 164.285 178.493 164.285 178.841 cv
164.285 179.081 164.212 179.284 164.075 179.452 cv
163.937 179.62 163.739 179.74 163.487 179.8 cv
f
166.775 178.175 mo
166.469 178.175 166.241 178.324 166.084 178.624 cv
165.929 178.925 165.857 179.374 165.857 179.975 cv
165.857 180.574 165.929 181.024 166.084 181.324 cv
166.241 181.624 166.469 181.774 166.775 181.774 cv
167.081 181.774 167.309 181.624 167.465 181.324 cv
167.615 181.024 167.693 180.574 167.693 179.975 cv
167.693 179.374 167.615 178.925 167.465 178.624 cv
167.309 178.324 167.081 178.175 166.775 178.175 cv
166.775 177.706 mo
167.261 177.706 167.633 177.904 167.897 178.288 cv
168.155 178.679 168.287 179.243 168.287 179.975 cv
168.287 180.712 168.155 181.276 167.897 181.661 cv
167.633 182.044 167.261 182.236 166.775 182.236 cv
166.283 182.236 165.905 182.044 165.647 181.661 cv
165.389 181.276 165.263 180.712 165.263 179.975 cv
165.263 179.243 165.389 178.679 165.647 178.288 cv
165.905 177.904 166.283 177.706 166.775 177.706 cv
f
170.59 178.175 mo
170.285 178.175 170.057 178.324 169.901 178.624 cv
169.746 178.925 169.672 179.374 169.672 179.975 cv
169.672 180.574 169.746 181.024 169.901 181.324 cv
170.057 181.624 170.285 181.774 170.59 181.774 cv
170.897 181.774 171.125 181.624 171.281 181.324 cv
171.431 181.024 171.508 180.574 171.508 179.975 cv
171.508 179.374 171.431 178.925 171.281 178.624 cv
171.125 178.324 170.897 178.175 170.59 178.175 cv
170.59 177.706 mo
171.077 177.706 171.449 177.904 171.712 178.288 cv
171.971 178.679 172.103 179.243 172.103 179.975 cv
172.103 180.712 171.971 181.276 171.712 181.661 cv
171.449 182.044 171.077 182.236 170.59 182.236 cv
170.099 182.236 169.721 182.044 169.462 181.661 cv
169.206 181.276 169.08 180.712 169.08 179.975 cv
169.08 179.243 169.206 178.679 169.462 178.288 cv
169.721 177.904 170.099 177.706 170.59 177.706 cv
f
174.407 178.175 mo
174.101 178.175 173.874 178.324 173.716 178.624 cv
173.561 178.925 173.489 179.374 173.489 179.975 cv
173.489 180.574 173.561 181.024 173.716 181.324 cv
173.874 181.624 174.101 181.774 174.407 181.774 cv
174.712 181.774 174.941 181.624 175.096 181.324 cv
175.248 181.024 175.325 180.574 175.325 179.975 cv
175.325 179.374 175.248 178.925 175.096 178.624 cv
174.941 178.324 174.712 178.175 174.407 178.175 cv
174.407 177.706 mo
174.893 177.706 175.265 177.904 175.529 178.288 cv
175.788 178.679 175.918 179.243 175.918 179.975 cv
175.918 180.712 175.788 181.276 175.529 181.661 cv
175.265 182.044 174.893 182.236 174.407 182.236 cv
173.916 182.236 173.538 182.044 173.279 181.661 cv
173.021 181.276 172.895 180.712 172.895 179.975 cv
172.895 179.243 173.021 178.679 173.279 178.288 cv
173.538 177.904 173.916 177.706 174.407 177.706 cv
f
212.902 175.596 mo
212.902 173.596 li
f
212.902 175.596 mo
212.902 173.596 li
@
212.902 2.7959 mo
212.902 4.7959 li
f
212.902 2.7959 mo
212.902 4.7959 li
@
207.876 178.3 mo
206.383 180.634 li
207.876 180.634 li
207.876 178.3 li
207.72 177.784 mo
208.465 177.784 li
208.465 180.634 li
209.088 180.634 li
209.088 181.126 li
208.465 181.126 li
208.465 182.158 li
207.876 182.158 li
207.876 181.126 li
205.903 181.126 li
205.903 180.557 li
207.72 177.784 li
cp
f
211.333 178.175 mo
211.027 178.175 210.799 178.324 210.643 178.624 cv
210.487 178.925 210.415 179.374 210.415 179.975 cv
210.415 180.574 210.487 181.024 210.643 181.324 cv
210.799 181.624 211.027 181.774 211.333 181.774 cv
211.638 181.774 211.867 181.624 212.023 181.324 cv
212.173 181.024 212.25 180.574 212.25 179.975 cv
212.25 179.374 212.173 178.925 212.023 178.624 cv
211.867 178.324 211.638 178.175 211.333 178.175 cv
211.333 177.706 mo
211.819 177.706 212.191 177.904 212.455 178.288 cv
212.713 178.679 212.844 179.243 212.844 179.975 cv
212.844 180.712 212.713 181.276 212.455 181.661 cv
212.191 182.044 211.819 182.236 211.333 182.236 cv
210.841 182.236 210.463 182.044 210.205 181.661 cv
209.947 181.276 209.821 180.712 209.821 179.975 cv
209.821 179.243 209.947 178.679 210.205 178.288 cv
210.463 177.904 210.841 177.706 211.333 177.706 cv
f
215.149 178.175 mo
214.843 178.175 214.615 178.324 214.458 178.624 cv
214.303 178.925 214.231 179.374 214.231 179.975 cv
214.231 180.574 214.303 181.024 214.458 181.324 cv
214.615 181.624 214.843 181.774 215.149 181.774 cv
215.455 181.774 215.682 181.624 215.838 181.324 cv
215.989 181.024 216.067 180.574 216.067 179.975 cv
216.067 179.374 215.989 178.925 215.838 178.624 cv
215.682 178.324 215.455 178.175 215.149 178.175 cv
215.149 177.706 mo
215.635 177.706 216.007 177.904 216.271 178.288 cv
216.529 178.679 216.661 179.243 216.661 179.975 cv
216.661 180.712 216.529 181.276 216.271 181.661 cv
216.007 182.044 215.635 182.236 215.149 182.236 cv
214.657 182.236 214.279 182.044 214.021 181.661 cv
213.763 181.276 213.637 180.712 213.637 179.975 cv
213.637 179.243 213.763 178.679 214.021 178.288 cv
214.279 177.904 214.657 177.706 215.149 177.706 cv
f
218.964 178.175 mo
218.659 178.175 218.431 178.324 218.275 178.624 cv
218.119 178.925 218.046 179.374 218.046 179.975 cv
218.046 180.574 218.119 181.024 218.275 181.324 cv
218.431 181.624 218.659 181.774 218.964 181.774 cv
219.271 181.774 219.499 181.624 219.655 181.324 cv
219.805 181.024 219.882 180.574 219.882 179.975 cv
219.882 179.374 219.805 178.925 219.655 178.624 cv
219.499 178.324 219.271 178.175 218.964 178.175 cv
218.964 177.706 mo
219.451 177.706 219.823 177.904 220.086 178.288 cv
220.345 178.679 220.477 179.243 220.477 179.975 cv
220.477 180.712 220.345 181.276 220.086 181.661 cv
219.823 182.044 219.451 182.236 218.964 182.236 cv
218.473 182.236 218.095 182.044 217.836 181.661 cv
217.58 181.276 217.453 180.712 217.453 179.975 cv
217.453 179.243 217.58 178.679 217.836 178.288 cv
218.095 177.904 218.473 177.706 218.964 177.706 cv
f
257.542 175.596 mo
257.542 173.596 li
f
257.542 175.596 mo
257.542 173.596 li
@
257.542 2.7959 mo
257.542 4.7959 li
f
257.542 2.7959 mo
257.542 4.7959 li
@
250.979 177.784 mo
253.301 177.784 li
253.301 178.282 li
251.519 178.282 li
251.519 179.356 li
251.603 179.326 251.693 179.302 251.777 179.291 cv
251.861 179.278 251.951 179.267 252.035 179.267 cv
252.521 179.267 252.905 179.404 253.193 179.669 cv
253.481 179.938 253.625 180.298 253.625 180.755 cv
253.625 181.229 253.474 181.595 253.18 181.853 cv
252.886 182.11 252.472 182.236 251.945 182.236 cv
251.759 182.236 251.573 182.218 251.381 182.194 cv
251.189 182.165 250.997 182.122 250.792 182.056 cv
250.792 181.462 li
250.967 181.558 251.147 181.63 251.339 181.679 cv
251.525 181.726 251.722 181.744 251.932 181.744 cv
252.269 181.744 252.539 181.66 252.737 181.481 cv
252.928 181.3 253.031 181.061 253.031 180.755 cv
253.031 180.454 252.928 180.214 252.737 180.034 cv
252.539 179.854 252.269 179.765 251.932 179.765 cv
251.777 179.765 251.615 179.782 251.458 179.818 cv
251.302 179.854 251.14 179.908 250.979 179.981 cv
250.979 177.784 li
f
256.054 178.175 mo
255.75 178.175 255.521 178.324 255.365 178.624 cv
255.209 178.925 255.136 179.374 255.136 179.975 cv
255.136 180.574 255.209 181.024 255.365 181.324 cv
255.521 181.624 255.75 181.774 256.054 181.774 cv
256.361 181.774 256.588 181.624 256.745 181.324 cv
256.895 181.024 256.972 180.574 256.972 179.975 cv
256.972 179.374 256.895 178.925 256.745 178.624 cv
256.588 178.324 256.361 178.175 256.054 178.175 cv
256.054 177.706 mo
256.542 177.706 256.914 177.904 257.176 178.288 cv
257.435 178.679 257.567 179.243 257.567 179.975 cv
257.567 180.712 257.435 181.276 257.176 181.661 cv
256.914 182.044 256.542 182.236 256.054 182.236 cv
255.563 182.236 255.185 182.044 254.926 181.661 cv
254.669 181.276 254.543 180.712 254.543 179.975 cv
254.543 179.243 254.669 178.679 254.926 178.288 cv
255.185 177.904 255.563 177.706 256.054 177.706 cv
f
259.871 178.175 mo
259.565 178.175 259.337 178.324 259.18 178.624 cv
259.025 178.925 258.953 179.374 258.953 179.975 cv
258.953 180.574 259.025 181.024 259.18 181.324 cv
259.337 181.624 259.565 181.774 259.871 181.774 cv
260.176 181.774 260.405 181.624 260.561 181.324 cv
260.711 181.024 260.789 180.574 260.789 179.975 cv
260.789 179.374 260.711 178.925 260.561 178.624 cv
260.405 178.324 260.176 178.175 259.871 178.175 cv
259.871 177.706 mo
260.357 177.706 260.729 177.904 260.993 178.288 cv
261.251 178.679 261.382 179.243 261.382 179.975 cv
261.382 180.712 261.251 181.276 260.993 181.661 cv
260.729 182.044 260.357 182.236 259.871 182.236 cv
259.379 182.236 259.001 182.044 258.743 181.661 cv
258.485 181.276 258.359 180.712 258.359 179.975 cv
258.359 179.243 258.485 178.679 258.743 178.288 cv
259.001 177.904 259.379 177.706 259.871 177.706 cv
f
263.687 178.175 mo
263.381 178.175 263.153 178.324 262.997 178.624 cv
262.841 178.925 262.769 179.374 262.769 179.975 cv
262.769 180.574 262.841 181.024 262.997 181.324 cv
263.153 181.624 263.381 181.774 263.687 181.774 cv
263.993 181.774 264.22 181.624 264.376 181.324 cv
264.527 181.024 264.605 180.574 264.605 179.975 cv
264.605 179.374 264.527 178.925 264.376 178.624 cv
264.22 178.324 263.993 178.175 263.687 178.175 cv
263.687 177.706 mo
264.173 177.706 264.545 177.904 264.809 178.288 cv
265.067 178.679 265.199 179.243 265.199 179.975 cv
265.199 180.712 265.067 181.276 264.809 181.661 cv
264.545 182.044 264.173 182.236 263.687 182.236 cv
263.195 182.236 262.817 182.044 262.559 181.661 cv
262.301 181.276 262.175 180.712 262.175 179.975 cv
262.175 179.243 262.301 178.679 262.559 178.288 cv
262.817 177.904 263.195 177.706 263.687 177.706 cv
f
133.287 185.911 mo
133.827 185.911 li
133.827 190.471 li
133.287 190.471 li
133.287 185.911 li
cp
f
137.763 188.694 mo
137.763 188.959 li
135.285 188.959 li
135.309 189.331 135.417 189.619 135.621 189.812 cv
135.819 190.003 136.095 190.099 136.455 190.099 cv
136.659 190.099 136.863 190.075 137.055 190.026 cv
137.247 189.979 137.445 189.901 137.637 189.793 cv
137.637 190.303 li
137.445 190.387 137.247 190.453 137.043 190.489 cv
136.839 190.524 136.629 190.549 136.425 190.549 cv
135.897 190.549 135.483 190.399 135.177 190.099 cv
134.871 189.799 134.721 189.385 134.721 188.862 cv
134.721 188.329 134.865 187.903 135.153 187.585 cv
135.441 187.272 135.837 187.11 136.329 187.11 cv
136.773 187.11 137.121 187.255 137.379 187.537 cv
137.631 187.825 137.763 188.209 137.763 188.694 cv
137.223 188.538 mo
137.217 188.245 137.133 188.011 136.977 187.831 cv
136.815 187.657 136.599 187.567 136.335 187.567 cv
136.035 187.567 135.795 187.657 135.615 187.825 cv
135.435 187.993 135.327 188.233 135.303 188.538 cv
137.223 188.538 li
f
141.375 188.491 mo
141.375 190.471 li
140.835 190.471 li
140.835 188.509 li
140.835 188.196 140.769 187.969 140.649 187.813 cv
140.529 187.657 140.349 187.579 140.109 187.579 cv
139.815 187.579 139.587 187.675 139.419 187.86 cv
139.251 188.047 139.167 188.299 139.167 188.616 cv
139.167 190.471 li
138.627 190.471 li
138.627 187.188 li
139.167 187.188 li
139.167 187.698 li
139.293 187.507 139.443 187.356 139.623 187.261 cv
139.797 187.165 140.001 187.11 140.229 187.11 cv
140.601 187.11 140.889 187.231 141.081 187.465 cv
141.273 187.698 141.375 188.042 141.375 188.491 cv
f
143.745 185.917 mo
143.481 186.372 143.289 186.817 143.163 187.255 cv
143.031 187.692 142.971 188.137 142.971 188.587 cv
142.971 189.043 143.031 189.487 143.163 189.925 cv
143.289 190.368 143.481 190.807 143.745 191.257 cv
143.277 191.257 li
142.983 190.795 142.761 190.351 142.617 189.907 cv
142.473 189.464 142.401 189.024 142.401 188.587 cv
142.401 188.155 142.473 187.718 142.617 187.272 cv
142.761 186.829 142.977 186.379 143.277 185.917 cv
143.745 185.917 li
f
144.771 185.911 mo
145.311 185.911 li
145.311 188.605 li
146.919 187.189 li
147.609 187.189 li
145.869 188.725 li
147.681 190.471 li
146.979 190.471 li
145.311 188.868 li
145.311 190.471 li
144.771 190.471 li
144.771 185.911 li
cp
f
151.071 188.694 mo
151.071 188.959 li
148.593 188.959 li
148.617 189.331 148.725 189.619 148.929 189.812 cv
149.127 190.003 149.403 190.099 149.763 190.099 cv
149.967 190.099 150.171 190.075 150.363 190.026 cv
150.555 189.979 150.752 189.901 150.945 189.793 cv
150.945 190.303 li
150.752 190.387 150.555 190.453 150.351 190.489 cv
150.147 190.524 149.937 190.549 149.733 190.549 cv
149.205 190.549 148.791 190.399 148.485 190.099 cv
148.179 189.799 148.029 189.385 148.029 188.862 cv
148.029 188.329 148.173 187.903 148.461 187.585 cv
148.749 187.272 149.145 187.11 149.637 187.11 cv
150.081 187.11 150.429 187.255 150.687 187.537 cv
150.939 187.825 151.071 188.209 151.071 188.694 cv
150.532 188.538 mo
150.525 188.245 150.441 188.011 150.286 187.831 cv
150.123 187.657 149.907 187.567 149.643 187.567 cv
149.343 187.567 149.103 187.657 148.923 187.825 cv
148.743 187.993 148.635 188.233 148.611 188.538 cv
150.532 188.538 li
f
153.321 190.771 mo
153.165 191.155 153.015 191.413 152.872 191.532 cv
152.727 191.653 152.536 191.714 152.294 191.714 cv
151.863 191.714 li
151.863 191.263 li
152.181 191.263 li
152.326 191.263 152.439 191.227 152.523 191.155 cv
152.607 191.083 152.697 190.921 152.799 190.657 cv
152.895 190.417 li
151.569 187.188 li
152.139 187.188 li
153.165 189.757 li
154.191 187.188 li
154.761 187.188 li
153.321 190.771 li
f
157.599 187.284 mo
157.599 187.796 li
157.443 187.723 157.287 187.663 157.125 187.62 cv
156.958 187.585 156.789 187.562 156.615 187.562 cv
156.345 187.562 156.141 187.603 156.009 187.688 cv
155.877 187.771 155.811 187.891 155.811 188.053 cv
155.811 188.179 155.859 188.274 155.955 188.347 cv
156.051 188.419 156.243 188.491 156.531 188.551 cv
156.717 188.593 li
157.101 188.677 157.371 188.797 157.533 188.941 cv
157.689 189.091 157.773 189.301 157.773 189.565 cv
157.773 189.87 157.653 190.11 157.413 190.284 cv
157.172 190.465 156.837 190.549 156.417 190.549 cv
156.237 190.549 156.057 190.53 155.865 190.501 cv
155.672 190.471 155.475 190.423 155.265 190.351 cv
155.265 189.794 li
155.463 189.901 155.661 189.979 155.853 190.026 cv
156.045 190.081 156.237 190.105 156.429 190.105 cv
156.681 190.105 156.879 190.063 157.017 189.979 cv
157.149 189.896 157.221 189.769 157.221 189.607 cv
157.221 189.463 157.167 189.349 157.071 189.271 cv
156.975 189.192 156.759 189.114 156.422 189.044 cv
156.237 189.001 li
155.901 188.929 155.655 188.821 155.511 188.677 cv
155.361 188.532 155.289 188.335 155.289 188.077 cv
155.289 187.771 155.397 187.53 155.613 187.362 cv
155.829 187.194 156.141 187.11 156.548 187.11 cv
156.747 187.11 156.933 187.129 157.113 187.159 cv
157.287 187.189 157.449 187.231 157.599 187.284 cv
f
158.546 185.917 mo
159.015 185.917 li
159.303 186.379 159.525 186.829 159.668 187.272 cv
159.813 187.718 159.891 188.155 159.891 188.587 cv
159.891 189.024 159.813 189.464 159.668 189.907 cv
159.525 190.351 159.303 190.795 159.015 191.257 cv
158.546 191.257 li
158.805 190.807 158.997 190.368 159.128 189.925 cv
159.254 189.487 159.322 189.043 159.322 188.587 cv
159.322 188.137 159.254 187.692 159.128 187.255 cv
158.997 186.817 158.805 186.372 158.546 185.917 cv
f
34.3418 175.596 mo
36.3418 175.596 li
f
34.3418 175.596 mo
36.3418 175.596 li
@
257.542 175.596 mo
255.542 175.596 li
f
257.542 175.596 mo
255.542 175.596 li
@
10.2183 173.269 mo
9.9126 173.269 9.68457 173.418 9.52832 173.718 cv
9.37256 174.019 9.30029 174.468 9.30029 175.068 cv
9.30029 175.668 9.37256 176.118 9.52832 176.418 cv
9.68457 176.718 9.9126 176.868 10.2183 176.868 cv
10.5244 176.868 10.7524 176.718 10.9082 176.418 cv
11.0586 176.118 11.1362 175.668 11.1362 175.068 cv
11.1362 174.468 11.0586 174.019 10.9082 173.718 cv
10.7524 173.418 10.5244 173.269 10.2183 173.269 cv
10.2183 172.8 mo
10.7046 172.8 11.0767 172.998 11.3403 173.382 cv
11.5986 173.772 11.7305 174.337 11.7305 175.068 cv
11.7305 175.806 11.5986 176.37 11.3403 176.755 cv
11.0767 177.138 10.7046 177.33 10.2183 177.33 cv
9.72656 177.33 9.34863 177.138 9.09033 176.755 cv
8.83252 176.37 8.70654 175.806 8.70654 175.068 cv
8.70654 174.337 8.83252 173.772 9.09033 173.382 cv
9.34863 172.998 9.72656 172.8 10.2183 172.8 cv
f
12.7686 176.508 mo
13.3867 176.508 li
13.3867 177.252 li
12.7686 177.252 li
12.7686 176.508 li
cp
f
15.9424 173.269 mo
15.6367 173.269 15.4087 173.418 15.2524 173.718 cv
15.0967 174.019 15.0244 174.468 15.0244 175.068 cv
15.0244 175.668 15.0967 176.118 15.2524 176.418 cv
15.4087 176.718 15.6367 176.868 15.9424 176.868 cv
16.2485 176.868 16.4766 176.718 16.6328 176.418 cv
16.7827 176.118 16.8604 175.668 16.8604 175.068 cv
16.8604 174.468 16.7827 174.019 16.6328 173.718 cv
16.4766 173.418 16.2485 173.269 15.9424 173.269 cv
15.9424 172.8 mo
16.4287 172.8 16.8008 172.998 17.0645 173.382 cv
17.3228 173.772 17.4546 174.337 17.4546 175.068 cv
17.4546 175.806 17.3228 176.37 17.0645 176.755 cv
16.8008 177.138 16.4287 177.33 15.9424 177.33 cv
15.4507 177.33 15.0728 177.138 14.8145 176.755 cv
14.5566 176.37 14.4307 175.806 14.4307 175.068 cv
14.4307 174.337 14.5566 173.772 14.8145 173.382 cv
15.0728 172.998 15.4507 172.8 15.9424 172.8 cv
f
19.7583 173.269 mo
19.4526 173.269 19.2246 173.418 19.0684 173.718 cv
18.9126 174.019 18.8403 174.468 18.8403 175.068 cv
18.8403 175.668 18.9126 176.118 19.0684 176.418 cv
19.2246 176.718 19.4526 176.868 19.7583 176.868 cv
20.0645 176.868 20.2925 176.718 20.4487 176.418 cv
20.5986 176.118 20.6763 175.668 20.6763 175.068 cv
20.6763 174.468 20.5986 174.019 20.4487 173.718 cv
20.2925 173.418 20.0645 173.269 19.7583 173.269 cv
19.7583 172.8 mo
20.2446 172.8 20.6167 172.998 20.8804 173.382 cv
21.1387 173.772 21.2705 174.337 21.2705 175.068 cv
21.2705 175.806 21.1387 176.37 20.8804 176.755 cv
20.6167 177.138 20.2446 177.33 19.7583 177.33 cv
19.2666 177.33 18.8887 177.138 18.6304 176.755 cv
18.3726 176.37 18.2466 175.806 18.2466 175.068 cv
18.2466 174.337 18.3726 173.772 18.6304 173.382 cv
18.8887 172.998 19.2666 172.8 19.7583 172.8 cv
f
23.5742 173.269 mo
23.2686 173.269 23.0405 173.418 22.8843 173.718 cv
22.7285 174.019 22.6563 174.468 22.6563 175.068 cv
22.6563 175.668 22.7285 176.118 22.8843 176.418 cv
23.0405 176.718 23.2686 176.868 23.5742 176.868 cv
23.8804 176.868 24.1084 176.718 24.2642 176.418 cv
24.4146 176.118 24.4922 175.668 24.4922 175.068 cv
24.4922 174.468 24.4146 174.019 24.2642 173.718 cv
24.1084 173.418 23.8804 173.269 23.5742 173.269 cv
23.5742 172.8 mo
24.0605 172.8 24.4326 172.998 24.6963 173.382 cv
24.9546 173.772 25.0864 174.337 25.0864 175.068 cv
25.0864 175.806 24.9546 176.37 24.6963 176.755 cv
24.4326 177.138 24.0605 177.33 23.5742 177.33 cv
23.0825 177.33 22.7046 177.138 22.4463 176.755 cv
22.1885 176.37 22.0625 175.806 22.0625 175.068 cv
22.0625 174.337 22.1885 173.772 22.4463 173.382 cv
22.7046 172.998 23.0825 172.8 23.5742 172.8 cv
f
27.3906 173.269 mo
27.0845 173.269 26.8564 173.418 26.7007 173.718 cv
26.5444 174.019 26.4727 174.468 26.4727 175.068 cv
26.4727 175.668 26.5444 176.118 26.7007 176.418 cv
26.8564 176.718 27.0845 176.868 27.3906 176.868 cv
27.6968 176.868 27.9248 176.718 28.0806 176.418 cv
28.2305 176.118 28.3086 175.668 28.3086 175.068 cv
28.3086 174.468 28.2305 174.019 28.0806 173.718 cv
27.9248 173.418 27.6968 173.269 27.3906 173.269 cv
27.3906 172.8 mo
27.8765 172.8 28.2485 172.998 28.5127 173.382 cv
28.7705 173.772 28.9028 174.337 28.9028 175.068 cv
28.9028 175.806 28.7705 176.37 28.5127 176.755 cv
28.2485 177.138 27.8765 177.33 27.3906 177.33 cv
26.8984 177.33 26.5205 177.138 26.2627 176.755 cv
26.0044 176.37 25.8784 175.806 25.8784 175.068 cv
25.8784 174.337 26.0044 173.772 26.2627 173.382 cv
26.5205 172.998 26.8984 172.8 27.3906 172.8 cv
f
31.2065 173.269 mo
30.9004 173.269 30.6724 173.418 30.5166 173.718 cv
30.3604 174.019 30.2886 174.468 30.2886 175.068 cv
30.2886 175.668 30.3604 176.118 30.5166 176.418 cv
30.6724 176.718 30.9004 176.868 31.2065 176.868 cv
31.5127 176.868 31.7407 176.718 31.8965 176.418 cv
32.0464 176.118 32.1245 175.668 32.1245 175.068 cv
32.1245 174.468 32.0464 174.019 31.8965 173.718 cv
31.7407 173.418 31.5127 173.269 31.2065 173.269 cv
31.2065 172.8 mo
31.6924 172.8 32.0645 172.998 32.3286 173.382 cv
32.5864 173.772 32.7183 174.337 32.7183 175.068 cv
32.7183 175.806 32.5864 176.37 32.3286 176.755 cv
32.0645 177.138 31.6924 177.33 31.2065 177.33 cv
30.7144 177.33 30.3364 177.138 30.0786 176.755 cv
29.8203 176.37 29.6943 175.806 29.6943 175.068 cv
29.6943 174.337 29.8203 173.772 30.0786 173.382 cv
30.3364 172.998 30.7144 172.8 31.2065 172.8 cv
f
34.3418 156.396 mo
36.3418 156.396 li
f
34.3418 156.396 mo
36.3418 156.396 li
@
257.542 156.396 mo
255.542 156.396 li
f
257.542 156.396 mo
255.542 156.396 li
@
10.3433 154.067 mo
10.0376 154.067 9.80957 154.218 9.65332 154.519 cv
9.49756 154.817 9.42529 155.269 9.42529 155.868 cv
9.42529 156.468 9.49756 156.918 9.65332 157.218 cv
9.80957 157.519 10.0376 157.668 10.3433 157.668 cv
10.6494 157.668 10.8774 157.519 11.0332 157.218 cv
11.1836 156.918 11.2612 156.468 11.2612 155.868 cv
11.2612 155.269 11.1836 154.817 11.0332 154.519 cv
10.8774 154.218 10.6494 154.067 10.3433 154.067 cv
10.3433 153.601 mo
10.8296 153.601 11.2017 153.798 11.4653 154.183 cv
11.7236 154.572 11.8555 155.136 11.8555 155.868 cv
11.8555 156.606 11.7236 157.17 11.4653 157.555 cv
11.2017 157.938 10.8296 158.13 10.3433 158.13 cv
9.85156 158.13 9.47363 157.938 9.21533 157.555 cv
8.95752 157.17 8.83154 156.606 8.83154 155.868 cv
8.83154 155.136 8.95752 154.572 9.21533 154.183 cv
9.47363 153.798 9.85156 153.601 10.3433 153.601 cv
f
12.8936 157.309 mo
13.5117 157.309 li
13.5117 158.052 li
12.8936 158.052 li
12.8936 157.309 li
cp
f
16.0674 154.067 mo
15.7617 154.067 15.5337 154.218 15.3774 154.519 cv
15.2217 154.817 15.1494 155.269 15.1494 155.868 cv
15.1494 156.468 15.2217 156.918 15.3774 157.218 cv
15.5337 157.519 15.7617 157.668 16.0674 157.668 cv
16.3735 157.668 16.6016 157.519 16.7578 157.218 cv
16.9077 156.918 16.9854 156.468 16.9854 155.868 cv
16.9854 155.269 16.9077 154.817 16.7578 154.519 cv
16.6016 154.218 16.3735 154.067 16.0674 154.067 cv
16.0674 153.601 mo
16.5537 153.601 16.9258 153.798 17.1895 154.183 cv
17.4478 154.572 17.5796 155.136 17.5796 155.868 cv
17.5796 156.606 17.4478 157.17 17.1895 157.555 cv
16.9258 157.938 16.5537 158.13 16.0674 158.13 cv
15.5757 158.13 15.1978 157.938 14.9395 157.555 cv
14.6816 157.17 14.5557 156.606 14.5557 155.868 cv
14.5557 155.136 14.6816 154.572 14.9395 154.183 cv
15.1978 153.798 15.5757 153.601 16.0674 153.601 cv
f
19.8833 154.067 mo
19.5776 154.067 19.3496 154.218 19.1934 154.519 cv
19.0376 154.817 18.9653 155.269 18.9653 155.868 cv
18.9653 156.468 19.0376 156.918 19.1934 157.218 cv
19.3496 157.519 19.5776 157.668 19.8833 157.668 cv
20.1895 157.668 20.4175 157.519 20.5737 157.218 cv
20.7236 156.918 20.8013 156.468 20.8013 155.868 cv
20.8013 155.269 20.7236 154.817 20.5737 154.519 cv
20.4175 154.218 20.1895 154.067 19.8833 154.067 cv
19.8833 153.601 mo
20.3696 153.601 20.7417 153.798 21.0054 154.183 cv
21.2637 154.572 21.3955 155.136 21.3955 155.868 cv
21.3955 156.606 21.2637 157.17 21.0054 157.555 cv
20.7417 157.938 20.3696 158.13 19.8833 158.13 cv
19.3916 158.13 19.0137 157.938 18.7554 157.555 cv
18.4976 157.17 18.3716 156.606 18.3716 155.868 cv
18.3716 155.136 18.4976 154.572 18.7554 154.183 cv
19.0137 153.798 19.3916 153.601 19.8833 153.601 cv
f
23.6992 154.067 mo
23.3936 154.067 23.1655 154.218 23.0093 154.519 cv
22.8535 154.817 22.7813 155.269 22.7813 155.868 cv
22.7813 156.468 22.8535 156.918 23.0093 157.218 cv
23.1655 157.519 23.3936 157.668 23.6992 157.668 cv
24.0054 157.668 24.2334 157.519 24.3892 157.218 cv
24.5396 156.918 24.6172 156.468 24.6172 155.868 cv
24.6172 155.269 24.5396 154.817 24.3892 154.519 cv
24.2334 154.218 24.0054 154.067 23.6992 154.067 cv
23.6992 153.601 mo
24.1855 153.601 24.5576 153.798 24.8213 154.183 cv
25.0796 154.572 25.2114 155.136 25.2114 155.868 cv
25.2114 156.606 25.0796 157.17 24.8213 157.555 cv
24.5576 157.938 24.1855 158.13 23.6992 158.13 cv
23.2075 158.13 22.8296 157.938 22.5713 157.555 cv
22.3135 157.17 22.1875 156.606 22.1875 155.868 cv
22.1875 155.136 22.3135 154.572 22.5713 154.183 cv
22.8296 153.798 23.2075 153.601 23.6992 153.601 cv
f
27.5156 154.067 mo
27.2095 154.067 26.9814 154.218 26.8257 154.519 cv
26.6694 154.817 26.5977 155.269 26.5977 155.868 cv
26.5977 156.468 26.6694 156.918 26.8257 157.218 cv
26.9814 157.519 27.2095 157.668 27.5156 157.668 cv
27.8218 157.668 28.0498 157.519 28.2056 157.218 cv
28.3555 156.918 28.4336 156.468 28.4336 155.868 cv
28.4336 155.269 28.3555 154.817 28.2056 154.519 cv
28.0498 154.218 27.8218 154.067 27.5156 154.067 cv
27.5156 153.601 mo
28.0015 153.601 28.3735 153.798 28.6377 154.183 cv
28.8955 154.572 29.0278 155.136 29.0278 155.868 cv
29.0278 156.606 28.8955 157.17 28.6377 157.555 cv
28.3735 157.938 28.0015 158.13 27.5156 158.13 cv
27.0234 158.13 26.6455 157.938 26.3877 157.555 cv
26.1294 157.17 26.0034 156.606 26.0034 155.868 cv
26.0034 155.136 26.1294 154.572 26.3877 154.183 cv
26.6455 153.798 27.0234 153.601 27.5156 153.601 cv
f
30.0713 153.679 mo
32.3936 153.679 li
32.3936 154.177 li
30.6113 154.177 li
30.6113 155.251 li
30.6953 155.22 30.7856 155.196 30.8696 155.185 cv
30.9536 155.172 31.0435 155.16 31.1274 155.16 cv
31.6133 155.16 31.9976 155.298 32.2856 155.563 cv
32.5737 155.833 32.7173 156.192 32.7173 156.647 cv
32.7173 157.122 32.5674 157.488 32.2734 157.747 cv
31.9795 158.004 31.5654 158.13 31.0376 158.13 cv
30.8516 158.13 30.6655 158.112 30.4736 158.088 cv
30.2813 158.058 30.0894 158.017 29.8853 157.95 cv
29.8853 157.356 li
30.0596 157.452 30.2393 157.524 30.4316 157.572 cv
30.6177 157.62 30.8154 157.638 31.0254 157.638 cv
31.3613 157.638 31.6313 157.554 31.8296 157.374 cv
32.0215 157.194 32.1235 156.954 32.1235 156.647 cv
32.1235 156.349 32.0215 156.108 31.8296 155.929 cv
31.6313 155.749 31.3613 155.658 31.0254 155.658 cv
30.8696 155.658 30.7075 155.677 30.5513 155.712 cv
30.3955 155.749 30.2334 155.802 30.0713 155.874 cv
30.0713 153.679 li
f
34.3418 137.196 mo
36.3418 137.196 li
f
34.3418 137.196 mo
36.3418 137.196 li
@
257.542 137.196 mo
255.542 137.196 li
f
257.542 137.196 mo
255.542 137.196 li
@
10.2183 134.868 mo
9.9126 134.868 9.68457 135.018 9.52832 135.318 cv
9.37256 135.618 9.30029 136.068 9.30029 136.668 cv
9.30029 137.268 9.37256 137.718 9.52832 138.018 cv
9.68457 138.318 9.9126 138.468 10.2183 138.468 cv
10.5244 138.468 10.7524 138.318 10.9082 138.018 cv
11.0586 137.718 11.1362 137.268 11.1362 136.668 cv
11.1362 136.068 11.0586 135.618 10.9082 135.318 cv
10.7524 135.018 10.5244 134.868 10.2183 134.868 cv
10.2183 134.4 mo
10.7046 134.4 11.0767 134.598 11.3403 134.982 cv
11.5986 135.372 11.7305 135.936 11.7305 136.668 cv
11.7305 137.406 11.5986 137.97 11.3403 138.354 cv
11.0767 138.738 10.7046 138.93 10.2183 138.93 cv
9.72656 138.93 9.34863 138.738 9.09033 138.354 cv
8.83252 137.97 8.70654 137.406 8.70654 136.668 cv
8.70654 135.936 8.83252 135.372 9.09033 134.982 cv
9.34863 134.598 9.72656 134.4 10.2183 134.4 cv
f
12.7686 138.108 mo
13.3867 138.108 li
13.3867 138.852 li
12.7686 138.852 li
12.7686 138.108 li
cp
f
15.9424 134.868 mo
15.6367 134.868 15.4087 135.018 15.2524 135.318 cv
15.0967 135.618 15.0244 136.068 15.0244 136.668 cv
15.0244 137.268 15.0967 137.718 15.2524 138.018 cv
15.4087 138.318 15.6367 138.468 15.9424 138.468 cv
16.2485 138.468 16.4766 138.318 16.6328 138.018 cv
16.7827 137.718 16.8604 137.268 16.8604 136.668 cv
16.8604 136.068 16.7827 135.618 16.6328 135.318 cv
16.4766 135.018 16.2485 134.868 15.9424 134.868 cv
15.9424 134.4 mo
16.4287 134.4 16.8008 134.598 17.0645 134.982 cv
17.3228 135.372 17.4546 135.936 17.4546 136.668 cv
17.4546 137.406 17.3228 137.97 17.0645 138.354 cv
16.8008 138.738 16.4287 138.93 15.9424 138.93 cv
15.4507 138.93 15.0728 138.738 14.8145 138.354 cv
14.5566 137.97 14.4307 137.406 14.4307 136.668 cv
14.4307 135.936 14.5566 135.372 14.8145 134.982 cv
15.0728 134.598 15.4507 134.4 15.9424 134.4 cv
f
19.7583 134.868 mo
19.4526 134.868 19.2246 135.018 19.0684 135.318 cv
18.9126 135.618 18.8403 136.068 18.8403 136.668 cv
18.8403 137.268 18.9126 137.718 19.0684 138.018 cv
19.2246 138.318 19.4526 138.468 19.7583 138.468 cv
20.0645 138.468 20.2925 138.318 20.4487 138.018 cv
20.5986 137.718 20.6763 137.268 20.6763 136.668 cv
20.6763 136.068 20.5986 135.618 20.4487 135.318 cv
20.2925 135.018 20.0645 134.868 19.7583 134.868 cv
19.7583 134.4 mo
20.2446 134.4 20.6167 134.598 20.8804 134.982 cv
21.1387 135.372 21.2705 135.936 21.2705 136.668 cv
21.2705 137.406 21.1387 137.97 20.8804 138.354 cv
20.6167 138.738 20.2446 138.93 19.7583 138.93 cv
19.2666 138.93 18.8887 138.738 18.6304 138.354 cv
18.3726 137.97 18.2466 137.406 18.2466 136.668 cv
18.2466 135.936 18.3726 135.372 18.6304 134.982 cv
18.8887 134.598 19.2666 134.4 19.7583 134.4 cv
f
23.5742 134.868 mo
23.2686 134.868 23.0405 135.018 22.8843 135.318 cv
22.7285 135.618 22.6563 136.068 22.6563 136.668 cv
22.6563 137.268 22.7285 137.718 22.8843 138.018 cv
23.0405 138.318 23.2686 138.468 23.5742 138.468 cv
23.8804 138.468 24.1084 138.318 24.2642 138.018 cv
24.4146 137.718 24.4922 137.268 24.4922 136.668 cv
24.4922 136.068 24.4146 135.618 24.2642 135.318 cv
24.1084 135.018 23.8804 134.868 23.5742 134.868 cv
23.5742 134.4 mo
24.0605 134.4 24.4326 134.598 24.6963 134.982 cv
24.9546 135.372 25.0864 135.936 25.0864 136.668 cv
25.0864 137.406 24.9546 137.97 24.6963 138.354 cv
24.4326 138.738 24.0605 138.93 23.5742 138.93 cv
23.0825 138.93 22.7046 138.738 22.4463 138.354 cv
22.1885 137.97 22.0625 137.406 22.0625 136.668 cv
22.0625 135.936 22.1885 135.372 22.4463 134.982 cv
22.7046 134.598 23.0825 134.4 23.5742 134.4 cv
f
26.2266 138.354 mo
27.1924 138.354 li
27.1924 135.018 li
26.1426 135.228 li
26.1426 134.688 li
27.1865 134.478 li
27.7803 134.478 li
27.7803 138.354 li
28.7466 138.354 li
28.7466 138.852 li
26.2266 138.852 li
26.2266 138.354 li
cp
f
31.2065 134.868 mo
30.9004 134.868 30.6724 135.018 30.5166 135.318 cv
30.3604 135.618 30.2886 136.068 30.2886 136.668 cv
30.2886 137.268 30.3604 137.718 30.5166 138.018 cv
30.6724 138.318 30.9004 138.468 31.2065 138.468 cv
31.5127 138.468 31.7407 138.318 31.8965 138.018 cv
32.0464 137.718 32.1245 137.268 32.1245 136.668 cv
32.1245 136.068 32.0464 135.618 31.8965 135.318 cv
31.7407 135.018 31.5127 134.868 31.2065 134.868 cv
31.2065 134.4 mo
31.6924 134.4 32.0645 134.598 32.3286 134.982 cv
32.5864 135.372 32.7183 135.936 32.7183 136.668 cv
32.7183 137.406 32.5864 137.97 32.3286 138.354 cv
32.0645 138.738 31.6924 138.93 31.2065 138.93 cv
30.7144 138.93 30.3364 138.738 30.0786 138.354 cv
29.8203 137.97 29.6943 137.406 29.6943 136.668 cv
29.6943 135.936 29.8203 135.372 30.0786 134.982 cv
30.3364 134.598 30.7144 134.4 31.2065 134.4 cv
f
34.3418 117.996 mo
36.3418 117.996 li
f
34.3418 117.996 mo
36.3418 117.996 li
@
257.542 117.996 mo
255.542 117.996 li
f
257.542 117.996 mo
255.542 117.996 li
@
10.3433 115.668 mo
10.0376 115.668 9.80957 115.818 9.65332 116.118 cv
9.49756 116.418 9.42529 116.868 9.42529 117.469 cv
9.42529 118.068 9.49756 118.518 9.65332 118.818 cv
9.80957 119.118 10.0376 119.268 10.3433 119.268 cv
10.6494 119.268 10.8774 119.118 11.0332 118.818 cv
11.1836 118.518 11.2612 118.068 11.2612 117.469 cv
11.2612 116.868 11.1836 116.418 11.0332 116.118 cv
10.8774 115.818 10.6494 115.668 10.3433 115.668 cv
10.3433 115.2 mo
10.8296 115.2 11.2017 115.398 11.4653 115.783 cv
11.7236 116.172 11.8555 116.736 11.8555 117.469 cv
11.8555 118.206 11.7236 118.77 11.4653 119.154 cv
11.2017 119.538 10.8296 119.73 10.3433 119.73 cv
9.85156 119.73 9.47363 119.538 9.21533 119.154 cv
8.95752 118.77 8.83154 118.206 8.83154 117.469 cv
8.83154 116.736 8.95752 116.172 9.21533 115.783 cv
9.47363 115.398 9.85156 115.2 10.3433 115.2 cv
f
12.8936 118.909 mo
13.5117 118.909 li
13.5117 119.652 li
12.8936 119.652 li
12.8936 118.909 li
cp
f
16.0674 115.668 mo
15.7617 115.668 15.5337 115.818 15.3774 116.118 cv
15.2217 116.418 15.1494 116.868 15.1494 117.469 cv
15.1494 118.068 15.2217 118.518 15.3774 118.818 cv
15.5337 119.118 15.7617 119.268 16.0674 119.268 cv
16.3735 119.268 16.6016 119.118 16.7578 118.818 cv
16.9077 118.518 16.9854 118.068 16.9854 117.469 cv
16.9854 116.868 16.9077 116.418 16.7578 116.118 cv
16.6016 115.818 16.3735 115.668 16.0674 115.668 cv
16.0674 115.2 mo
16.5537 115.2 16.9258 115.398 17.1895 115.783 cv
17.4478 116.172 17.5796 116.736 17.5796 117.469 cv
17.5796 118.206 17.4478 118.77 17.1895 119.154 cv
16.9258 119.538 16.5537 119.73 16.0674 119.73 cv
15.5757 119.73 15.1978 119.538 14.9395 119.154 cv
14.6816 118.77 14.5557 118.206 14.5557 117.469 cv
14.5557 116.736 14.6816 116.172 14.9395 115.783 cv
15.1978 115.398 15.5757 115.2 16.0674 115.2 cv
f
19.8833 115.668 mo
19.5776 115.668 19.3496 115.818 19.1934 116.118 cv
19.0376 116.418 18.9653 116.868 18.9653 117.469 cv
18.9653 118.068 19.0376 118.518 19.1934 118.818 cv
19.3496 119.118 19.5776 119.268 19.8833 119.268 cv
20.1895 119.268 20.4175 119.118 20.5737 118.818 cv
20.7236 118.518 20.8013 118.068 20.8013 117.469 cv
20.8013 116.868 20.7236 116.418 20.5737 116.118 cv
20.4175 115.818 20.1895 115.668 19.8833 115.668 cv
19.8833 115.2 mo
20.3696 115.2 20.7417 115.398 21.0054 115.783 cv
21.2637 116.172 21.3955 116.736 21.3955 117.469 cv
21.3955 118.206 21.2637 118.77 21.0054 119.154 cv
20.7417 119.538 20.3696 119.73 19.8833 119.73 cv
19.3916 119.73 19.0137 119.538 18.7554 119.154 cv
18.4976 118.77 18.3716 118.206 18.3716 117.469 cv
18.3716 116.736 18.4976 116.172 18.7554 115.783 cv
19.0137 115.398 19.3916 115.2 19.8833 115.2 cv
f
23.6992 115.668 mo
23.3936 115.668 23.1655 115.818 23.0093 116.118 cv
22.8535 116.418 22.7813 116.868 22.7813 117.469 cv
22.7813 118.068 22.8535 118.518 23.0093 118.818 cv
23.1655 119.118 23.3936 119.268 23.6992 119.268 cv
24.0054 119.268 24.2334 119.118 24.3892 118.818 cv
24.5396 118.518 24.6172 118.068 24.6172 117.469 cv
24.6172 116.868 24.5396 116.418 24.3892 116.118 cv
24.2334 115.818 24.0054 115.668 23.6992 115.668 cv
23.6992 115.2 mo
24.1855 115.2 24.5576 115.398 24.8213 115.783 cv
25.0796 116.172 25.2114 116.736 25.2114 117.469 cv
25.2114 118.206 25.0796 118.77 24.8213 119.154 cv
24.5576 119.538 24.1855 119.73 23.6992 119.73 cv
23.2075 119.73 22.8296 119.538 22.5713 119.154 cv
22.3135 118.77 22.1875 118.206 22.1875 117.469 cv
22.1875 116.736 22.3135 116.172 22.5713 115.783 cv
22.8296 115.398 23.2075 115.2 23.6992 115.2 cv
f
26.3516 119.154 mo
27.3174 119.154 li
27.3174 115.818 li
26.2676 116.028 li
26.2676 115.488 li
27.3115 115.278 li
27.9053 115.278 li
27.9053 119.154 li
28.8716 119.154 li
28.8716 119.652 li
26.3516 119.652 li
26.3516 119.154 li
cp
f
30.0713 115.278 mo
32.3936 115.278 li
32.3936 115.776 li
30.6113 115.776 li
30.6113 116.851 li
30.6953 116.82 30.7856 116.796 30.8696 116.785 cv
30.9536 116.772 31.0435 116.76 31.1274 116.76 cv
31.6133 116.76 31.9976 116.898 32.2856 117.163 cv
32.5737 117.433 32.7173 117.792 32.7173 118.248 cv
32.7173 118.723 32.5674 119.088 32.2734 119.347 cv
31.9795 119.604 31.5654 119.73 31.0376 119.73 cv
30.8516 119.73 30.6655 119.712 30.4736 119.688 cv
30.2813 119.659 30.0894 119.617 29.8853 119.55 cv
29.8853 118.956 li
30.0596 119.052 30.2393 119.124 30.4316 119.172 cv
30.6177 119.22 30.8154 119.238 31.0254 119.238 cv
31.3613 119.238 31.6313 119.154 31.8296 118.975 cv
32.0215 118.794 32.1235 118.554 32.1235 118.248 cv
32.1235 117.949 32.0215 117.708 31.8296 117.528 cv
31.6313 117.349 31.3613 117.258 31.0254 117.258 cv
30.8696 117.258 30.7075 117.276 30.5513 117.312 cv
30.3955 117.349 30.2334 117.402 30.0713 117.475 cv
30.0713 115.278 li
f
34.3418 98.7959 mo
36.3418 98.7959 li
f
34.3418 98.7959 mo
36.3418 98.7959 li
@
257.542 98.7959 mo
255.542 98.7959 li
f
257.542 98.7959 mo
255.542 98.7959 li
@
10.2183 96.4683 mo
9.9126 96.4683 9.68457 96.6187 9.52832 96.918 cv
9.37256 97.2183 9.30029 97.668 9.30029 98.2686 cv
9.30029 98.8687 9.37256 99.3179 9.52832 99.6187 cv
9.68457 99.918 9.9126 100.068 10.2183 100.068 cv
10.5244 100.068 10.7524 99.918 10.9082 99.6187 cv
11.0586 99.3179 11.1362 98.8687 11.1362 98.2686 cv
11.1362 97.668 11.0586 97.2183 10.9082 96.918 cv
10.7524 96.6187 10.5244 96.4683 10.2183 96.4683 cv
10.2183 96 mo
10.7046 96 11.0767 96.1982 11.3403 96.5825 cv
11.5986 96.9722 11.7305 97.5366 11.7305 98.2686 cv
11.7305 99.0059 11.5986 99.5698 11.3403 99.9546 cv
11.0767 100.338 10.7046 100.53 10.2183 100.53 cv
9.72656 100.53 9.34863 100.338 9.09033 99.9546 cv
8.83252 99.5698 8.70654 99.0059 8.70654 98.2686 cv
8.70654 97.5366 8.83252 96.9722 9.09033 96.5825 cv
9.34863 96.1982 9.72656 96 10.2183 96 cv
f
12.7686 99.708 mo
13.3867 99.708 li
13.3867 100.452 li
12.7686 100.452 li
12.7686 99.708 li
cp
f
15.9424 96.4683 mo
15.6367 96.4683 15.4087 96.6187 15.2524 96.918 cv
15.0967 97.2183 15.0244 97.668 15.0244 98.2686 cv
15.0244 98.8687 15.0967 99.3179 15.2524 99.6187 cv
15.4087 99.918 15.6367 100.068 15.9424 100.068 cv
16.2485 100.068 16.4766 99.918 16.6328 99.6187 cv
16.7827 99.3179 16.8604 98.8687 16.8604 98.2686 cv
16.8604 97.668 16.7827 97.2183 16.6328 96.918 cv
16.4766 96.6187 16.2485 96.4683 15.9424 96.4683 cv
15.9424 96 mo
16.4287 96 16.8008 96.1982 17.0645 96.5825 cv
17.3228 96.9722 17.4546 97.5366 17.4546 98.2686 cv
17.4546 99.0059 17.3228 99.5698 17.0645 99.9546 cv
16.8008 100.338 16.4287 100.53 15.9424 100.53 cv
15.4507 100.53 15.0728 100.338 14.8145 99.9546 cv
14.5566 99.5698 14.4307 99.0059 14.4307 98.2686 cv
14.4307 97.5366 14.5566 96.9722 14.8145 96.5825 cv
15.0728 96.1982 15.4507 96 15.9424 96 cv
f
19.7583 96.4683 mo
19.4526 96.4683 19.2246 96.6187 19.0684 96.918 cv
18.9126 97.2183 18.8403 97.668 18.8403 98.2686 cv
18.8403 98.8687 18.9126 99.3179 19.0684 99.6187 cv
19.2246 99.918 19.4526 100.068 19.7583 100.068 cv
20.0645 100.068 20.2925 99.918 20.4487 99.6187 cv
20.5986 99.3179 20.6763 98.8687 20.6763 98.2686 cv
20.6763 97.668 20.5986 97.2183 20.4487 96.918 cv
20.2925 96.6187 20.0645 96.4683 19.7583 96.4683 cv
19.7583 96 mo
20.2446 96 20.6167 96.1982 20.8804 96.5825 cv
21.1387 96.9722 21.2705 97.5366 21.2705 98.2686 cv
21.2705 99.0059 21.1387 99.5698 20.8804 99.9546 cv
20.6167 100.338 20.2446 100.53 19.7583 100.53 cv
19.2666 100.53 18.8887 100.338 18.6304 99.9546 cv
18.3726 99.5698 18.2466 99.0059 18.2466 98.2686 cv
18.2466 97.5366 18.3726 96.9722 18.6304 96.5825 cv
18.8887 96.1982 19.2666 96 19.7583 96 cv
f
23.5742 96.4683 mo
23.2686 96.4683 23.0405 96.6187 22.8843 96.918 cv
22.7285 97.2183 22.6563 97.668 22.6563 98.2686 cv
22.6563 98.8687 22.7285 99.3179 22.8843 99.6187 cv
23.0405 99.918 23.2686 100.068 23.5742 100.068 cv
23.8804 100.068 24.1084 99.918 24.2642 99.6187 cv
24.4146 99.3179 24.4922 98.8687 24.4922 98.2686 cv
24.4922 97.668 24.4146 97.2183 24.2642 96.918 cv
24.1084 96.6187 23.8804 96.4683 23.5742 96.4683 cv
23.5742 96 mo
24.0605 96 24.4326 96.1982 24.6963 96.5825 cv
24.9546 96.9722 25.0864 97.5366 25.0864 98.2686 cv
25.0864 99.0059 24.9546 99.5698 24.6963 99.9546 cv
24.4326 100.338 24.0605 100.53 23.5742 100.53 cv
23.0825 100.53 22.7046 100.338 22.4463 99.9546 cv
22.1885 99.5698 22.0625 99.0059 22.0625 98.2686 cv
22.0625 97.5366 22.1885 96.9722 22.4463 96.5825 cv
22.7046 96.1982 23.0825 96 23.5742 96 cv
f
26.6343 99.9541 mo
28.6982 99.9541 li
28.6982 100.452 li
25.9204 100.452 li
25.9204 99.9541 li
26.1426 99.7261 26.4482 99.4141 26.8384 99.0181 cv
27.2227 98.6284 27.4683 98.3765 27.5703 98.2622 cv
27.7622 98.0522 27.8945 97.8721 27.9663 97.7222 cv
28.0386 97.5781 28.0806 97.4282 28.0806 97.2842 cv
28.0806 97.0562 27.9966 96.8643 27.8345 96.7202 cv
27.6724 96.5762 27.4624 96.498 27.1982 96.498 cv
27.0122 96.498 26.8145 96.5342 26.6104 96.5942 cv
26.4063 96.6602 26.1846 96.7563 25.9507 96.8882 cv
25.9507 96.2881 li
26.1904 96.1924 26.4126 96.1201 26.6162 96.0723 cv
26.8203 96.0244 27.0122 96.0005 27.1865 96.0005 cv
27.6362 96.0005 27.9966 96.1143 28.2666 96.3423 cv
28.5366 96.5698 28.6743 96.8701 28.6743 97.248 cv
28.6743 97.4282 28.6382 97.6021 28.5723 97.7578 cv
28.5063 97.9204 28.3862 98.1118 28.2065 98.3281 cv
28.1582 98.3882 28.0024 98.5503 27.7383 98.8198 cv
27.4746 99.0898 27.1084 99.4683 26.6343 99.9541 cv
f
31.2065 96.4683 mo
30.9004 96.4683 30.6724 96.6187 30.5166 96.918 cv
30.3604 97.2183 30.2886 97.668 30.2886 98.2686 cv
30.2886 98.8687 30.3604 99.3179 30.5166 99.6187 cv
30.6724 99.918 30.9004 100.068 31.2065 100.068 cv
31.5127 100.068 31.7407 99.918 31.8965 99.6187 cv
32.0464 99.3179 32.1245 98.8687 32.1245 98.2686 cv
32.1245 97.668 32.0464 97.2183 31.8965 96.918 cv
31.7407 96.6187 31.5127 96.4683 31.2065 96.4683 cv
31.2065 96 mo
31.6924 96 32.0645 96.1982 32.3286 96.5825 cv
32.5864 96.9722 32.7183 97.5366 32.7183 98.2686 cv
32.7183 99.0059 32.5864 99.5698 32.3286 99.9546 cv
32.0645 100.338 31.6924 100.53 31.2065 100.53 cv
30.7144 100.53 30.3364 100.338 30.0786 99.9546 cv
29.8203 99.5698 29.6943 99.0059 29.6943 98.2686 cv
29.6943 97.5366 29.8203 96.9722 30.0786 96.5825 cv
30.3364 96.1982 30.7144 96 31.2065 96 cv
f
34.3418 79.5957 mo
36.3418 79.5957 li
f
34.3418 79.5957 mo
36.3418 79.5957 li
@
257.542 79.5957 mo
255.542 79.5957 li
f
257.542 79.5957 mo
255.542 79.5957 li
@
10.3433 77.2681 mo
10.0376 77.2681 9.80957 77.418 9.65332 77.7183 cv
9.49756 78.0181 9.42529 78.4683 9.42529 79.0684 cv
9.42529 79.668 9.49756 80.1182 9.65332 80.418 cv
9.80957 80.7183 10.0376 80.8682 10.3433 80.8682 cv
10.6494 80.8682 10.8774 80.7183 11.0332 80.418 cv
11.1836 80.1182 11.2612 79.668 11.2612 79.0684 cv
11.2612 78.4683 11.1836 78.0181 11.0332 77.7183 cv
10.8774 77.418 10.6494 77.2681 10.3433 77.2681 cv
10.3433 76.8003 mo
10.8296 76.8003 11.2017 76.998 11.4653 77.3823 cv
11.7236 77.772 11.8555 78.3364 11.8555 79.0684 cv
11.8555 79.8062 11.7236 80.3701 11.4653 80.7544 cv
11.2017 81.1382 10.8296 81.3301 10.3433 81.3301 cv
9.85156 81.3301 9.47363 81.1382 9.21533 80.7544 cv
8.95752 80.3701 8.83154 79.8062 8.83154 79.0684 cv
8.83154 78.3364 8.95752 77.772 9.21533 77.3823 cv
9.47363 76.998 9.85156 76.8003 10.3433 76.8003 cv
f
12.8936 80.5083 mo
13.5117 80.5083 li
13.5117 81.2524 li
12.8936 81.2524 li
12.8936 80.5083 li
cp
f
16.0674 77.2681 mo
15.7617 77.2681 15.5337 77.418 15.3774 77.7183 cv
15.2217 78.0181 15.1494 78.4683 15.1494 79.0684 cv
15.1494 79.668 15.2217 80.1182 15.3774 80.418 cv
15.5337 80.7183 15.7617 80.8682 16.0674 80.8682 cv
16.3735 80.8682 16.6016 80.7183 16.7578 80.418 cv
16.9077 80.1182 16.9854 79.668 16.9854 79.0684 cv
16.9854 78.4683 16.9077 78.0181 16.7578 77.7183 cv
16.6016 77.418 16.3735 77.2681 16.0674 77.2681 cv
16.0674 76.8003 mo
16.5537 76.8003 16.9258 76.998 17.1895 77.3823 cv
17.4478 77.772 17.5796 78.3364 17.5796 79.0684 cv
17.5796 79.8062 17.4478 80.3701 17.1895 80.7544 cv
16.9258 81.1382 16.5537 81.3301 16.0674 81.3301 cv
15.5757 81.3301 15.1978 81.1382 14.9395 80.7544 cv
14.6816 80.3701 14.5557 79.8062 14.5557 79.0684 cv
14.5557 78.3364 14.6816 77.772 14.9395 77.3823 cv
15.1978 76.998 15.5757 76.8003 16.0674 76.8003 cv
f
19.8833 77.2681 mo
19.5776 77.2681 19.3496 77.418 19.1934 77.7183 cv
19.0376 78.0181 18.9653 78.4683 18.9653 79.0684 cv
18.9653 79.668 19.0376 80.1182 19.1934 80.418 cv
19.3496 80.7183 19.5776 80.8682 19.8833 80.8682 cv
20.1895 80.8682 20.4175 80.7183 20.5737 80.418 cv
20.7236 80.1182 20.8013 79.668 20.8013 79.0684 cv
20.8013 78.4683 20.7236 78.0181 20.5737 77.7183 cv
20.4175 77.418 20.1895 77.2681 19.8833 77.2681 cv
19.8833 76.8003 mo
20.3696 76.8003 20.7417 76.998 21.0054 77.3823 cv
21.2637 77.772 21.3955 78.3364 21.3955 79.0684 cv
21.3955 79.8062 21.2637 80.3701 21.0054 80.7544 cv
20.7417 81.1382 20.3696 81.3301 19.8833 81.3301 cv
19.3916 81.3301 19.0137 81.1382 18.7554 80.7544 cv
18.4976 80.3701 18.3716 79.8062 18.3716 79.0684 cv
18.3716 78.3364 18.4976 77.772 18.7554 77.3823 cv
19.0137 76.998 19.3916 76.8003 19.8833 76.8003 cv
f
23.6992 77.2681 mo
23.3936 77.2681 23.1655 77.418 23.0093 77.7183 cv
22.8535 78.0181 22.7813 78.4683 22.7813 79.0684 cv
22.7813 79.668 22.8535 80.1182 23.0093 80.418 cv
23.1655 80.7183 23.3936 80.8682 23.6992 80.8682 cv
24.0054 80.8682 24.2334 80.7183 24.3892 80.418 cv
24.5396 80.1182 24.6172 79.668 24.6172 79.0684 cv
24.6172 78.4683 24.5396 78.0181 24.3892 77.7183 cv
24.2334 77.418 24.0054 77.2681 23.6992 77.2681 cv
23.6992 76.8003 mo
24.1855 76.8003 24.5576 76.998 24.8213 77.3823 cv
25.0796 77.772 25.2114 78.3364 25.2114 79.0684 cv
25.2114 79.8062 25.0796 80.3701 24.8213 80.7544 cv
24.5576 81.1382 24.1855 81.3301 23.6992 81.3301 cv
23.2075 81.3301 22.8296 81.1382 22.5713 80.7544 cv
22.3135 80.3701 22.1875 79.8062 22.1875 79.0684 cv
22.1875 78.3364 22.3135 77.772 22.5713 77.3823 cv
22.8296 76.998 23.2075 76.8003 23.6992 76.8003 cv
f
26.7593 80.7544 mo
28.8232 80.7544 li
28.8232 81.2524 li
26.0454 81.2524 li
26.0454 80.7544 li
26.2676 80.5264 26.5732 80.2144 26.9634 79.8184 cv
27.3477 79.4282 27.5933 79.1763 27.6953 79.062 cv
27.8872 78.8521 28.0195 78.6724 28.0913 78.5225 cv
28.1636 78.3784 28.2056 78.228 28.2056 78.0845 cv
28.2056 77.8564 28.1216 77.6646 27.9595 77.52 cv
27.7974 77.3765 27.5874 77.2983 27.3232 77.2983 cv
27.1372 77.2983 26.9395 77.3345 26.7354 77.394 cv
26.5313 77.4604 26.3096 77.5562 26.0757 77.6885 cv
26.0757 77.0884 li
26.3154 76.9922 26.5376 76.9204 26.7412 76.8721 cv
26.9453 76.8242 27.1372 76.8003 27.3115 76.8003 cv
27.7612 76.8003 28.1216 76.9146 28.3916 77.1421 cv
28.6616 77.3701 28.7993 77.6704 28.7993 78.0483 cv
28.7993 78.228 28.7632 78.4023 28.6973 78.5581 cv
28.6313 78.7202 28.5112 78.9121 28.3315 79.1284 cv
28.2832 79.1885 28.1274 79.3501 27.8633 79.6201 cv
27.5996 79.8901 27.2334 80.2681 26.7593 80.7544 cv
f
30.0713 76.8779 mo
32.3936 76.8779 li
32.3936 77.376 li
30.6113 77.376 li
30.6113 78.4502 li
30.6953 78.4199 30.7856 78.396 30.8696 78.3843 cv
30.9536 78.3721 31.0435 78.3599 31.1274 78.3599 cv
31.6133 78.3599 31.9976 78.498 32.2856 78.7622 cv
32.5737 79.0322 32.7173 79.3921 32.7173 79.8481 cv
32.7173 80.3223 32.5674 80.688 32.2734 80.9458 cv
31.9795 81.2041 31.5654 81.3301 31.0376 81.3301 cv
30.8516 81.3301 30.6655 81.312 30.4736 81.2881 cv
30.2813 81.2583 30.0894 81.2163 29.8853 81.1499 cv
29.8853 80.5562 li
30.0596 80.6519 30.2393 80.7241 30.4316 80.772 cv
30.6177 80.8198 30.8154 80.8379 31.0254 80.8379 cv
31.3613 80.8379 31.6313 80.7539 31.8296 80.5742 cv
32.0215 80.394 32.1235 80.1538 32.1235 79.8481 cv
32.1235 79.5483 32.0215 79.3081 31.8296 79.1279 cv
31.6313 78.9482 31.3613 78.8579 31.0254 78.8579 cv
30.8696 78.8579 30.7075 78.876 30.5513 78.9121 cv
30.3955 78.9482 30.2334 79.002 30.0713 79.0742 cv
30.0713 76.8779 li
f
34.3418 60.396 mo
36.3418 60.396 li
f
34.3418 60.396 mo
36.3418 60.396 li
@
257.542 60.396 mo
255.542 60.396 li
f
257.542 60.396 mo
255.542 60.396 li
@
10.2183 58.0684 mo
9.9126 58.0684 9.68457 58.2183 9.52832 58.5181 cv
9.37256 58.8184 9.30029 59.2681 9.30029 59.8682 cv
9.30029 60.4683 9.37256 60.9185 9.52832 61.2183 cv
9.68457 61.5181 9.9126 61.6685 10.2183 61.6685 cv
10.5244 61.6685 10.7524 61.5181 10.9082 61.2183 cv
11.0586 60.9185 11.1362 60.4683 11.1362 59.8682 cv
11.1362 59.2681 11.0586 58.8184 10.9082 58.5181 cv
10.7524 58.2183 10.5244 58.0684 10.2183 58.0684 cv
10.2183 57.6001 mo
10.7046 57.6001 11.0767 57.7983 11.3403 58.1821 cv
11.5986 58.5723 11.7305 59.1362 11.7305 59.8682 cv
11.7305 60.606 11.5986 61.1704 11.3403 61.5542 cv
11.0767 61.938 10.7046 62.1304 10.2183 62.1304 cv
9.72656 62.1304 9.34863 61.938 9.09033 61.5542 cv
8.83252 61.1704 8.70654 60.606 8.70654 59.8682 cv
8.70654 59.1362 8.83252 58.5723 9.09033 58.1821 cv
9.34863 57.7983 9.72656 57.6001 10.2183 57.6001 cv
f
12.7686 61.3086 mo
13.3867 61.3086 li
13.3867 62.0522 li
12.7686 62.0522 li
12.7686 61.3086 li
cp
f
15.9424 58.0684 mo
15.6367 58.0684 15.4087 58.2183 15.2524 58.5181 cv
15.0967 58.8184 15.0244 59.2681 15.0244 59.8682 cv
15.0244 60.4683 15.0967 60.9185 15.2524 61.2183 cv
15.4087 61.5181 15.6367 61.6685 15.9424 61.6685 cv
16.2485 61.6685 16.4766 61.5181 16.6328 61.2183 cv
16.7827 60.9185 16.8604 60.4683 16.8604 59.8682 cv
16.8604 59.2681 16.7827 58.8184 16.6328 58.5181 cv
16.4766 58.2183 16.2485 58.0684 15.9424 58.0684 cv
15.9424 57.6001 mo
16.4287 57.6001 16.8008 57.7983 17.0645 58.1821 cv
17.3228 58.5723 17.4546 59.1362 17.4546 59.8682 cv
17.4546 60.606 17.3228 61.1704 17.0645 61.5542 cv
16.8008 61.938 16.4287 62.1304 15.9424 62.1304 cv
15.4507 62.1304 15.0728 61.938 14.8145 61.5542 cv
14.5566 61.1704 14.4307 60.606 14.4307 59.8682 cv
14.4307 59.1362 14.5566 58.5723 14.8145 58.1821 cv
15.0728 57.7983 15.4507 57.6001 15.9424 57.6001 cv
f
19.7583 58.0684 mo
19.4526 58.0684 19.2246 58.2183 19.0684 58.5181 cv
18.9126 58.8184 18.8403 59.2681 18.8403 59.8682 cv
18.8403 60.4683 18.9126 60.9185 19.0684 61.2183 cv
19.2246 61.5181 19.4526 61.6685 19.7583 61.6685 cv
20.0645 61.6685 20.2925 61.5181 20.4487 61.2183 cv
20.5986 60.9185 20.6763 60.4683 20.6763 59.8682 cv
20.6763 59.2681 20.5986 58.8184 20.4487 58.5181 cv
20.2925 58.2183 20.0645 58.0684 19.7583 58.0684 cv
19.7583 57.6001 mo
20.2446 57.6001 20.6167 57.7983 20.8804 58.1821 cv
21.1387 58.5723 21.2705 59.1362 21.2705 59.8682 cv
21.2705 60.606 21.1387 61.1704 20.8804 61.5542 cv
20.6167 61.938 20.2446 62.1304 19.7583 62.1304 cv
19.2666 62.1304 18.8887 61.938 18.6304 61.5542 cv
18.3726 61.1704 18.2466 60.606 18.2466 59.8682 cv
18.2466 59.1362 18.3726 58.5723 18.6304 58.1821 cv
18.8887 57.7983 19.2666 57.6001 19.7583 57.6001 cv
f
23.5742 58.0684 mo
23.2686 58.0684 23.0405 58.2183 22.8843 58.5181 cv
22.7285 58.8184 22.6563 59.2681 22.6563 59.8682 cv
22.6563 60.4683 22.7285 60.9185 22.8843 61.2183 cv
23.0405 61.5181 23.2686 61.6685 23.5742 61.6685 cv
23.8804 61.6685 24.1084 61.5181 24.2642 61.2183 cv
24.4146 60.9185 24.4922 60.4683 24.4922 59.8682 cv
24.4922 59.2681 24.4146 58.8184 24.2642 58.5181 cv
24.1084 58.2183 23.8804 58.0684 23.5742 58.0684 cv
23.5742 57.6001 mo
24.0605 57.6001 24.4326 57.7983 24.6963 58.1821 cv
24.9546 58.5723 25.0864 59.1362 25.0864 59.8682 cv
25.0864 60.606 24.9546 61.1704 24.6963 61.5542 cv
24.4326 61.938 24.0605 62.1304 23.5742 62.1304 cv
23.0825 62.1304 22.7046 61.938 22.4463 61.5542 cv
22.1885 61.1704 22.0625 60.606 22.0625 59.8682 cv
22.0625 59.1362 22.1885 58.5723 22.4463 58.1821 cv
22.7046 57.7983 23.0825 57.6001 23.5742 57.6001 cv
f
27.9185 59.6943 mo
28.2002 59.7544 28.4224 59.8804 28.5786 60.0723 cv
28.7344 60.2642 28.8184 60.5044 28.8184 60.7803 cv
28.8184 61.2124 28.6685 61.5483 28.3745 61.7822 cv
28.0742 62.0161 27.6543 62.1304 27.1084 62.1304 cv
26.9224 62.1304 26.7305 62.1123 26.5386 62.0762 cv
26.3462 62.0464 26.1426 61.9922 25.9385 61.9204 cv
25.9385 61.3501 li
26.1006 61.4463 26.2803 61.5181 26.4785 61.5664 cv
26.6704 61.6143 26.8745 61.6382 27.0903 61.6382 cv
27.4624 61.6382 27.7446 61.5664 27.9365 61.4224 cv
28.1284 61.2783 28.2305 61.062 28.2305 60.7803 cv
28.2305 60.5283 28.1401 60.3242 27.9604 60.1802 cv
27.7803 60.0361 27.5283 59.9585 27.2046 59.9585 cv
26.6943 59.9585 li
26.6943 59.4722 li
27.2285 59.4722 li
27.5166 59.4722 27.7383 59.4185 27.8945 59.2983 cv
28.0503 59.1841 28.1284 59.0161 28.1284 58.7944 cv
28.1284 58.5723 28.0444 58.3984 27.8882 58.2783 cv
27.7266 58.1582 27.4985 58.0981 27.2046 58.0981 cv
27.0425 58.0981 26.8682 58.1162 26.6826 58.1523 cv
26.4966 58.188 26.2925 58.2422 26.0703 58.314 cv
26.0703 57.7861 li
26.2925 57.7261 26.5024 57.6782 26.7002 57.6484 cv
26.8926 57.6182 27.0786 57.6001 27.2583 57.6001 cv
27.7026 57.6001 28.0562 57.7021 28.3203 57.9063 cv
28.5845 58.1104 28.7163 58.3862 28.7163 58.7344 cv
28.7163 58.9741 28.6445 59.1782 28.5063 59.3462 cv
28.3682 59.5142 28.1704 59.6343 27.9185 59.6943 cv
f
31.2065 58.0684 mo
30.9004 58.0684 30.6724 58.2183 30.5166 58.5181 cv
30.3604 58.8184 30.2886 59.2681 30.2886 59.8682 cv
30.2886 60.4683 30.3604 60.9185 30.5166 61.2183 cv
30.6724 61.5181 30.9004 61.6685 31.2065 61.6685 cv
31.5127 61.6685 31.7407 61.5181 31.8965 61.2183 cv
32.0464 60.9185 32.1245 60.4683 32.1245 59.8682 cv
32.1245 59.2681 32.0464 58.8184 31.8965 58.5181 cv
31.7407 58.2183 31.5127 58.0684 31.2065 58.0684 cv
31.2065 57.6001 mo
31.6924 57.6001 32.0645 57.7983 32.3286 58.1821 cv
32.5864 58.5723 32.7183 59.1362 32.7183 59.8682 cv
32.7183 60.606 32.5864 61.1704 32.3286 61.5542 cv
32.0645 61.938 31.6924 62.1304 31.2065 62.1304 cv
30.7144 62.1304 30.3364 61.938 30.0786 61.5542 cv
29.8203 61.1704 29.6943 60.606 29.6943 59.8682 cv
29.6943 59.1362 29.8203 58.5723 30.0786 58.1821 cv
30.3364 57.7983 30.7144 57.6001 31.2065 57.6001 cv
f
34.3418 41.1958 mo
36.3418 41.1958 li
f
34.3418 41.1958 mo
36.3418 41.1958 li
@
257.542 41.1958 mo
255.542 41.1958 li
f
257.542 41.1958 mo
255.542 41.1958 li
@
10.3433 38.8682 mo
10.0376 38.8682 9.80957 39.0181 9.65332 39.3184 cv
9.49756 39.6182 9.42529 40.0684 9.42529 40.6685 cv
9.42529 41.2681 9.49756 41.7183 9.65332 42.0181 cv
9.80957 42.3184 10.0376 42.4683 10.3433 42.4683 cv
10.6494 42.4683 10.8774 42.3184 11.0332 42.0181 cv
11.1836 41.7183 11.2612 41.2681 11.2612 40.6685 cv
11.2612 40.0684 11.1836 39.6182 11.0332 39.3184 cv
10.8774 39.0181 10.6494 38.8682 10.3433 38.8682 cv
10.3433 38.4004 mo
10.8296 38.4004 11.2017 38.5981 11.4653 38.9824 cv
11.7236 39.3726 11.8555 39.936 11.8555 40.6685 cv
11.8555 41.4063 11.7236 41.9702 11.4653 42.354 cv
11.2017 42.7383 10.8296 42.9302 10.3433 42.9302 cv
9.85156 42.9302 9.47363 42.7383 9.21533 42.354 cv
8.95752 41.9702 8.83154 41.4063 8.83154 40.6685 cv
8.83154 39.936 8.95752 39.3726 9.21533 38.9824 cv
9.47363 38.5981 9.85156 38.4004 10.3433 38.4004 cv
f
12.8936 42.1084 mo
13.5117 42.1084 li
13.5117 42.8525 li
12.8936 42.8525 li
12.8936 42.1084 li
cp
f
16.0674 38.8682 mo
15.7617 38.8682 15.5337 39.0181 15.3774 39.3184 cv
15.2217 39.6182 15.1494 40.0684 15.1494 40.6685 cv
15.1494 41.2681 15.2217 41.7183 15.3774 42.0181 cv
15.5337 42.3184 15.7617 42.4683 16.0674 42.4683 cv
16.3735 42.4683 16.6016 42.3184 16.7578 42.0181 cv
16.9077 41.7183 16.9854 41.2681 16.9854 40.6685 cv
16.9854 40.0684 16.9077 39.6182 16.7578 39.3184 cv
16.6016 39.0181 16.3735 38.8682 16.0674 38.8682 cv
16.0674 38.4004 mo
16.5537 38.4004 16.9258 38.5981 17.1895 38.9824 cv
17.4478 39.3726 17.5796 39.936 17.5796 40.6685 cv
17.5796 41.4063 17.4478 41.9702 17.1895 42.354 cv
16.9258 42.7383 16.5537 42.9302 16.0674 42.9302 cv
15.5757 42.9302 15.1978 42.7383 14.9395 42.354 cv
14.6816 41.9702 14.5557 41.4063 14.5557 40.6685 cv
14.5557 39.936 14.6816 39.3726 14.9395 38.9824 cv
15.1978 38.5981 15.5757 38.4004 16.0674 38.4004 cv
f
19.8833 38.8682 mo
19.5776 38.8682 19.3496 39.0181 19.1934 39.3184 cv
19.0376 39.6182 18.9653 40.0684 18.9653 40.6685 cv
18.9653 41.2681 19.0376 41.7183 19.1934 42.0181 cv
19.3496 42.3184 19.5776 42.4683 19.8833 42.4683 cv
20.1895 42.4683 20.4175 42.3184 20.5737 42.0181 cv
20.7236 41.7183 20.8013 41.2681 20.8013 40.6685 cv
20.8013 40.0684 20.7236 39.6182 20.5737 39.3184 cv
20.4175 39.0181 20.1895 38.8682 19.8833 38.8682 cv
19.8833 38.4004 mo
20.3696 38.4004 20.7417 38.5981 21.0054 38.9824 cv
21.2637 39.3726 21.3955 39.936 21.3955 40.6685 cv
21.3955 41.4063 21.2637 41.9702 21.0054 42.354 cv
20.7417 42.7383 20.3696 42.9302 19.8833 42.9302 cv
19.3916 42.9302 19.0137 42.7383 18.7554 42.354 cv
18.4976 41.9702 18.3716 41.4063 18.3716 40.6685 cv
18.3716 39.936 18.4976 39.3726 18.7554 38.9824 cv
19.0137 38.5981 19.3916 38.4004 19.8833 38.4004 cv
f
23.6992 38.8682 mo
23.3936 38.8682 23.1655 39.0181 23.0093 39.3184 cv
22.8535 39.6182 22.7813 40.0684 22.7813 40.6685 cv
22.7813 41.2681 22.8535 41.7183 23.0093 42.0181 cv
23.1655 42.3184 23.3936 42.4683 23.6992 42.4683 cv
24.0054 42.4683 24.2334 42.3184 24.3892 42.0181 cv
24.5396 41.7183 24.6172 41.2681 24.6172 40.6685 cv
24.6172 40.0684 24.5396 39.6182 24.3892 39.3184 cv
24.2334 39.0181 24.0054 38.8682 23.6992 38.8682 cv
23.6992 38.4004 mo
24.1855 38.4004 24.5576 38.5981 24.8213 38.9824 cv
25.0796 39.3726 25.2114 39.936 25.2114 40.6685 cv
25.2114 41.4063 25.0796 41.9702 24.8213 42.354 cv
24.5576 42.7383 24.1855 42.9302 23.6992 42.9302 cv
23.2075 42.9302 22.8296 42.7383 22.5713 42.354 cv
22.3135 41.9702 22.1875 41.4063 22.1875 40.6685 cv
22.1875 39.936 22.3135 39.3726 22.5713 38.9824 cv
22.8296 38.5981 23.2075 38.4004 23.6992 38.4004 cv
f
28.0435 40.4941 mo
28.3252 40.5542 28.5474 40.6802 28.7036 40.8726 cv
28.8594 41.0645 28.9434 41.3042 28.9434 41.5806 cv
28.9434 42.0122 28.7935 42.3481 28.4995 42.5825 cv
28.1992 42.8164 27.7793 42.9302 27.2334 42.9302 cv
27.0474 42.9302 26.8555 42.9121 26.6636 42.8765 cv
26.4712 42.8462 26.2676 42.7925 26.0635 42.7202 cv
26.0635 42.1504 li
26.2256 42.2461 26.4053 42.3184 26.6035 42.3662 cv
26.7954 42.4146 26.9995 42.4385 27.2153 42.4385 cv
27.5874 42.4385 27.8696 42.3662 28.0615 42.2222 cv
28.2534 42.0781 28.3555 41.8623 28.3555 41.5806 cv
28.3555 41.3281 28.2651 41.1245 28.0854 40.9805 cv
27.9053 40.8364 27.6533 40.7583 27.3296 40.7583 cv
26.8193 40.7583 li
26.8193 40.2725 li
27.3535 40.2725 li
27.6416 40.2725 27.8633 40.2183 28.0195 40.0981 cv
28.1753 39.9844 28.2534 39.8164 28.2534 39.5942 cv
28.2534 39.3726 28.1694 39.1982 28.0132 39.0781 cv
27.8516 38.9585 27.6235 38.8984 27.3296 38.8984 cv
27.1675 38.8984 26.9932 38.9165 26.8076 38.9521 cv
26.6216 38.9883 26.4175 39.0425 26.1953 39.1143 cv
26.1953 38.5864 li
26.4175 38.5264 26.6274 38.478 26.8252 38.4482 cv
27.0176 38.4185 27.2036 38.4004 27.3833 38.4004 cv
27.8276 38.4004 28.1812 38.5024 28.4453 38.7065 cv
28.7095 38.9102 28.8413 39.186 28.8413 39.5342 cv
28.8413 39.7744 28.7695 39.978 28.6313 40.1465 cv
28.4932 40.3145 28.2954 40.4341 28.0435 40.4941 cv
f
30.0713 38.478 mo
32.3936 38.478 li
32.3936 38.9761 li
30.6113 38.9761 li
30.6113 40.0503 li
30.6953 40.02 30.7856 39.9961 30.8696 39.9844 cv
30.9536 39.9722 31.0435 39.9604 31.1274 39.9604 cv
31.6133 39.9604 31.9976 40.0981 32.2856 40.3623 cv
32.5737 40.6323 32.7173 40.9922 32.7173 41.4482 cv
32.7173 41.9224 32.5674 42.2881 32.2734 42.5464 cv
31.9795 42.8042 31.5654 42.9302 31.0376 42.9302 cv
30.8516 42.9302 30.6655 42.9121 30.4736 42.8882 cv
30.2813 42.8579 30.0894 42.8159 29.8853 42.75 cv
29.8853 42.1563 li
30.0596 42.2524 30.2393 42.3242 30.4316 42.3721 cv
30.6177 42.4204 30.8154 42.438 31.0254 42.438 cv
31.3613 42.438 31.6313 42.354 31.8296 42.1743 cv
32.0215 41.9941 32.1235 41.7544 32.1235 41.4482 cv
32.1235 41.1479 32.0215 40.9082 31.8296 40.728 cv
31.6313 40.5483 31.3613 40.458 31.0254 40.458 cv
30.8696 40.458 30.7075 40.4761 30.5513 40.5122 cv
30.3955 40.5483 30.2334 40.6021 30.0713 40.6743 cv
30.0713 38.478 li
f
34.3418 21.9961 mo
36.3418 21.9961 li
f
34.3418 21.9961 mo
36.3418 21.9961 li
@
257.542 21.9961 mo
255.542 21.9961 li
f
257.542 21.9961 mo
255.542 21.9961 li
@
10.2183 19.668 mo
9.9126 19.668 9.68457 19.8179 9.52832 20.1182 cv
9.37256 20.418 9.30029 20.8682 9.30029 21.4683 cv
9.30029 22.0679 9.37256 22.5181 9.52832 22.8179 cv
9.68457 23.1182 9.9126 23.2681 10.2183 23.2681 cv
10.5244 23.2681 10.7524 23.1182 10.9082 22.8179 cv
11.0586 22.5181 11.1362 22.0679 11.1362 21.4683 cv
11.1362 20.8682 11.0586 20.418 10.9082 20.1182 cv
10.7524 19.8179 10.5244 19.668 10.2183 19.668 cv
10.2183 19.2002 mo
10.7046 19.2002 11.0767 19.3979 11.3403 19.7822 cv
11.5986 20.1724 11.7305 20.7358 11.7305 21.4683 cv
11.7305 22.2061 11.5986 22.77 11.3403 23.1538 cv
11.0767 23.5381 10.7046 23.73 10.2183 23.73 cv
9.72656 23.73 9.34863 23.5381 9.09033 23.1538 cv
8.83252 22.77 8.70654 22.2061 8.70654 21.4683 cv
8.70654 20.7358 8.83252 20.1724 9.09033 19.7822 cv
9.34863 19.3979 9.72656 19.2002 10.2183 19.2002 cv
f
12.7686 22.9077 mo
13.3867 22.9077 li
13.3867 23.6519 li
12.7686 23.6519 li
12.7686 22.9077 li
cp
f
15.9424 19.668 mo
15.6367 19.668 15.4087 19.8179 15.2524 20.1182 cv
15.0967 20.418 15.0244 20.8682 15.0244 21.4683 cv
15.0244 22.0679 15.0967 22.5181 15.2524 22.8179 cv
15.4087 23.1182 15.6367 23.2681 15.9424 23.2681 cv
16.2485 23.2681 16.4766 23.1182 16.6328 22.8179 cv
16.7827 22.5181 16.8604 22.0679 16.8604 21.4683 cv
16.8604 20.8682 16.7827 20.418 16.6328 20.1182 cv
16.4766 19.8179 16.2485 19.668 15.9424 19.668 cv
15.9424 19.2002 mo
16.4287 19.2002 16.8008 19.3979 17.0645 19.7822 cv
17.3228 20.1724 17.4546 20.7358 17.4546 21.4683 cv
17.4546 22.2061 17.3228 22.77 17.0645 23.1538 cv
16.8008 23.5381 16.4287 23.73 15.9424 23.73 cv
15.4507 23.73 15.0728 23.5381 14.8145 23.1538 cv
14.5566 22.77 14.4307 22.2061 14.4307 21.4683 cv
14.4307 20.7358 14.5566 20.1724 14.8145 19.7822 cv
15.0728 19.3979 15.4507 19.2002 15.9424 19.2002 cv
f
19.7583 19.668 mo
19.4526 19.668 19.2246 19.8179 19.0684 20.1182 cv
18.9126 20.418 18.8403 20.8682 18.8403 21.4683 cv
18.8403 22.0679 18.9126 22.5181 19.0684 22.8179 cv
19.2246 23.1182 19.4526 23.2681 19.7583 23.2681 cv
20.0645 23.2681 20.2925 23.1182 20.4487 22.8179 cv
20.5986 22.5181 20.6763 22.0679 20.6763 21.4683 cv
20.6763 20.8682 20.5986 20.418 20.4487 20.1182 cv
20.2925 19.8179 20.0645 19.668 19.7583 19.668 cv
19.7583 19.2002 mo
20.2446 19.2002 20.6167 19.3979 20.8804 19.7822 cv
21.1387 20.1724 21.2705 20.7358 21.2705 21.4683 cv
21.2705 22.2061 21.1387 22.77 20.8804 23.1538 cv
20.6167 23.5381 20.2446 23.73 19.7583 23.73 cv
19.2666 23.73 18.8887 23.5381 18.6304 23.1538 cv
18.3726 22.77 18.2466 22.2061 18.2466 21.4683 cv
18.2466 20.7358 18.3726 20.1724 18.6304 19.7822 cv
18.8887 19.3979 19.2666 19.2002 19.7583 19.2002 cv
f
23.5742 19.668 mo
23.2686 19.668 23.0405 19.8179 22.8843 20.1182 cv
22.7285 20.418 22.6563 20.8682 22.6563 21.4683 cv
22.6563 22.0679 22.7285 22.5181 22.8843 22.8179 cv
23.0405 23.1182 23.2686 23.2681 23.5742 23.2681 cv
23.8804 23.2681 24.1084 23.1182 24.2642 22.8179 cv
24.4146 22.5181 24.4922 22.0679 24.4922 21.4683 cv
24.4922 20.8682 24.4146 20.418 24.2642 20.1182 cv
24.1084 19.8179 23.8804 19.668 23.5742 19.668 cv
23.5742 19.2002 mo
24.0605 19.2002 24.4326 19.3979 24.6963 19.7822 cv
24.9546 20.1724 25.0864 20.7358 25.0864 21.4683 cv
25.0864 22.2061 24.9546 22.77 24.6963 23.1538 cv
24.4326 23.5381 24.0605 23.73 23.5742 23.73 cv
23.0825 23.73 22.7046 23.5381 22.4463 23.1538 cv
22.1885 22.77 22.0625 22.2061 22.0625 21.4683 cv
22.0625 20.7358 22.1885 20.1724 22.4463 19.7822 cv
22.7046 19.3979 23.0825 19.2002 23.5742 19.2002 cv
f
27.7505 19.7939 mo
26.2563 22.1279 li
27.7505 22.1279 li
27.7505 19.7939 li
27.5942 19.2778 mo
28.3384 19.2778 li
28.3384 22.1279 li
28.9624 22.1279 li
28.9624 22.6201 li
28.3384 22.6201 li
28.3384 23.6519 li
27.7505 23.6519 li
27.7505 22.6201 li
25.7764 22.6201 li
25.7764 22.0503 li
27.5942 19.2778 li
cp
f
31.2065 19.668 mo
30.9004 19.668 30.6724 19.8179 30.5166 20.1182 cv
30.3604 20.418 30.2886 20.8682 30.2886 21.4683 cv
30.2886 22.0679 30.3604 22.5181 30.5166 22.8179 cv
30.6724 23.1182 30.9004 23.2681 31.2065 23.2681 cv
31.5127 23.2681 31.7407 23.1182 31.8965 22.8179 cv
32.0464 22.5181 32.1245 22.0679 32.1245 21.4683 cv
32.1245 20.8682 32.0464 20.418 31.8965 20.1182 cv
31.7407 19.8179 31.5127 19.668 31.2065 19.668 cv
31.2065 19.2002 mo
31.6924 19.2002 32.0645 19.3979 32.3286 19.7822 cv
32.5864 20.1724 32.7183 20.7358 32.7183 21.4683 cv
32.7183 22.2061 32.5864 22.77 32.3286 23.1538 cv
32.0645 23.5381 31.6924 23.73 31.2065 23.73 cv
30.7144 23.73 30.3364 23.5381 30.0786 23.1538 cv
29.8203 22.77 29.6943 22.2061 29.6943 21.4683 cv
29.6943 20.7358 29.8203 20.1724 30.0786 19.7822 cv
30.3364 19.3979 30.7144 19.2002 31.2065 19.2002 cv
f
34.3418 2.7959 mo
36.3418 2.7959 li
f
34.3418 2.7959 mo
36.3418 2.7959 li
@
257.542 2.7959 mo
255.542 2.7959 li
f
257.542 2.7959 mo
255.542 2.7959 li
@
10.3433 .468262 mo
10.0376 .468262 9.80957 .618164 9.65332 .917969 cv
9.49756 1.21826 9.42529 1.66797 9.42529 2.26807 cv
9.42529 2.86816 9.49756 3.31787 9.65332 3.61816 cv
9.80957 3.91797 10.0376 4.06787 10.3433 4.06787 cv
10.6494 4.06787 10.8774 3.91797 11.0332 3.61816 cv
11.1836 3.31787 11.2612 2.86816 11.2612 2.26807 cv
11.2612 1.66797 11.1836 1.21826 11.0332 .917969 cv
10.8774 .618164 10.6494 .468262 10.3433 .468262 cv
10.3433 0 mo
10.8296 0 11.2017 .198242 11.4653 .582031 cv
11.7236 .972168 11.8555 1.53613 11.8555 2.26807 cv
11.8555 3.00635 11.7236 3.57031 11.4653 3.9541 cv
11.2017 4.33838 10.8296 4.53027 10.3433 4.53027 cv
9.85156 4.53027 9.47363 4.33838 9.21533 3.9541 cv
8.95752 3.57031 8.83154 3.00635 8.83154 2.26807 cv
8.83154 1.53613 8.95752 .972168 9.21533 .582031 cv
9.47363 .198242 9.85156 0 10.3433 0 cv
f
12.8936 3.70801 mo
13.5117 3.70801 li
13.5117 4.45166 li
12.8936 4.45166 li
12.8936 3.70801 li
cp
f
16.0674 .468262 mo
15.7617 .468262 15.5337 .618164 15.3774 .917969 cv
15.2217 1.21826 15.1494 1.66797 15.1494 2.26807 cv
15.1494 2.86816 15.2217 3.31787 15.3774 3.61816 cv
15.5337 3.91797 15.7617 4.06787 16.0674 4.06787 cv
16.3735 4.06787 16.6016 3.91797 16.7578 3.61816 cv
16.9077 3.31787 16.9854 2.86816 16.9854 2.26807 cv
16.9854 1.66797 16.9077 1.21826 16.7578 .917969 cv
16.6016 .618164 16.3735 .468262 16.0674 .468262 cv
16.0674 0 mo
16.5537 0 16.9258 .198242 17.1895 .582031 cv
17.4478 .972168 17.5796 1.53613 17.5796 2.26807 cv
17.5796 3.00635 17.4478 3.57031 17.1895 3.9541 cv
16.9258 4.33838 16.5537 4.53027 16.0674 4.53027 cv
15.5757 4.53027 15.1978 4.33838 14.9395 3.9541 cv
14.6816 3.57031 14.5557 3.00635 14.5557 2.26807 cv
14.5557 1.53613 14.6816 .972168 14.9395 .582031 cv
15.1978 .198242 15.5757 0 16.0674 0 cv
f
19.8833 .468262 mo
19.5776 .468262 19.3496 .618164 19.1934 .917969 cv
19.0376 1.21826 18.9653 1.66797 18.9653 2.26807 cv
18.9653 2.86816 19.0376 3.31787 19.1934 3.61816 cv
19.3496 3.91797 19.5776 4.06787 19.8833 4.06787 cv
20.1895 4.06787 20.4175 3.91797 20.5737 3.61816 cv
20.7236 3.31787 20.8013 2.86816 20.8013 2.26807 cv
20.8013 1.66797 20.7236 1.21826 20.5737 .917969 cv
20.4175 .618164 20.1895 .468262 19.8833 .468262 cv
19.8833 0 mo
20.3696 0 20.7417 .198242 21.0054 .582031 cv
21.2637 .972168 21.3955 1.53613 21.3955 2.26807 cv
21.3955 3.00635 21.2637 3.57031 21.0054 3.9541 cv
20.7417 4.33838 20.3696 4.53027 19.8833 4.53027 cv
19.3916 4.53027 19.0137 4.33838 18.7554 3.9541 cv
18.4976 3.57031 18.3716 3.00635 18.3716 2.26807 cv
18.3716 1.53613 18.4976 .972168 18.7554 .582031 cv
19.0137 .198242 19.3916 0 19.8833 0 cv
f
23.6992 .468262 mo
23.3936 .468262 23.1655 .618164 23.0093 .917969 cv
22.8535 1.21826 22.7813 1.66797 22.7813 2.26807 cv
22.7813 2.86816 22.8535 3.31787 23.0093 3.61816 cv
23.1655 3.91797 23.3936 4.06787 23.6992 4.06787 cv
24.0054 4.06787 24.2334 3.91797 24.3892 3.61816 cv
24.5396 3.31787 24.6172 2.86816 24.6172 2.26807 cv
24.6172 1.66797 24.5396 1.21826 24.3892 .917969 cv
24.2334 .618164 24.0054 .468262 23.6992 .468262 cv
23.6992 0 mo
24.1855 0 24.5576 .198242 24.8213 .582031 cv
25.0796 .972168 25.2114 1.53613 25.2114 2.26807 cv
25.2114 3.00635 25.0796 3.57031 24.8213 3.9541 cv
24.5576 4.33838 24.1855 4.53027 23.6992 4.53027 cv
23.2075 4.53027 22.8296 4.33838 22.5713 3.9541 cv
22.3135 3.57031 22.1875 3.00635 22.1875 2.26807 cv
22.1875 1.53613 22.3135 .972168 22.5713 .582031 cv
22.8296 .198242 23.2075 0 23.6992 0 cv
f
27.8755 .594238 mo
26.3813 2.92822 li
27.8755 2.92822 li
27.8755 .594238 li
27.7192 .078125 mo
28.4634 .078125 li
28.4634 2.92822 li
29.0874 2.92822 li
29.0874 3.41992 li
28.4634 3.41992 li
28.4634 4.45215 li
27.8755 4.45215 li
27.8755 3.41992 li
25.9014 3.41992 li
25.9014 2.8501 li
27.7192 .078125 li
cp
f
30.0713 .078125 mo
32.3936 .078125 li
32.3936 .576172 li
30.6113 .576172 li
30.6113 1.65039 li
30.6953 1.62012 30.7856 1.59619 30.8696 1.58447 cv
30.9536 1.57227 31.0435 1.56006 31.1274 1.56006 cv
31.6133 1.56006 31.9976 1.69824 32.2856 1.9624 cv
32.5737 2.23242 32.7173 2.59229 32.7173 3.04834 cv
32.7173 3.52197 32.5674 3.88818 32.2734 4.146 cv
31.9795 4.4043 31.5654 4.53027 31.0376 4.53027 cv
30.8516 4.53027 30.6655 4.51221 30.4736 4.48828 cv
30.2813 4.4585 30.0894 4.4165 29.8853 4.3501 cv
29.8853 3.75635 li
30.0596 3.85205 30.2393 3.92432 30.4316 3.97217 cv
30.6177 4.02002 30.8154 4.03809 31.0254 4.03809 cv
31.3613 4.03809 31.6313 3.9541 31.8296 3.77441 cv
32.0215 3.59424 32.1235 3.354 32.1235 3.04834 cv
32.1235 2.74805 32.0215 2.5083 31.8296 2.32813 cv
31.6313 2.14795 31.3613 2.05811 31.0254 2.05811 cv
30.8696 2.05811 30.7075 2.07617 30.5513 2.1123 cv
30.3955 2.14795 30.2334 2.20215 30.0713 2.27441 cv
30.0713 .078125 li
f
.186523 113.317 mo
.186523 109.621 li
.68457 109.621 li
.68457 111.175 li
4.56055 111.175 li
4.56055 111.769 li
.68457 111.769 li
.68457 113.317 li
.186523 113.317 li
cp
f
1.27881 108.536 mo
4.56055 108.536 li
4.56055 109.076 li
1.27881 109.076 li
1.27881 108.536 li
cp
0 108.536 mo
.684082 108.536 li
.684082 109.076 li
0 109.076 li
0 108.536 li
cp
f
1.9082 104.851 mo
1.66846 104.719 1.49463 104.557 1.37451 104.371 cv
1.26025 104.185 1.2002 103.964 1.2002 103.705 cv
1.2002 103.369 1.32031 103.105 1.56055 102.919 cv
1.80029 102.734 2.14258 102.637 2.58057 102.637 cv
4.56055 102.637 li
4.56055 103.177 li
2.59814 103.177 li
2.28662 103.177 2.05225 103.237 1.89648 103.345 cv
1.74658 103.459 1.66846 103.627 1.66846 103.855 cv
1.66846 104.137 1.76416 104.36 1.9502 104.521 cv
2.13623 104.683 2.38818 104.761 2.70654 104.761 cv
4.56055 104.761 li
4.56055 105.301 li
2.59814 105.301 li
2.28662 105.301 2.05225 105.362 1.89648 105.469 cv
1.74658 105.583 1.66846 105.758 1.66846 105.986 cv
1.66846 106.261 1.76416 106.484 1.9502 106.645 cv
2.13623 106.807 2.38818 106.885 2.70654 106.885 cv
4.56055 106.885 li
4.56055 107.425 li
1.27832 107.425 li
1.27832 106.885 li
1.78857 106.885 li
1.59033 106.765 1.44043 106.615 1.34424 106.442 cv
1.24854 106.274 1.2002 106.07 1.2002 105.829 cv
1.2002 105.59 1.26025 105.391 1.38037 105.223 cv
1.50049 105.055 1.68018 104.935 1.9082 104.851 cv
f
2.78467 98.7554 mo
3.04834 98.7554 li
3.04834 101.233 li
3.42041 101.209 3.7085 101.101 3.90039 100.897 cv
4.09277 100.7 4.18848 100.423 4.18848 100.063 cv
4.18848 99.8594 4.16455 99.6553 4.1167 99.4634 cv
4.06836 99.271 3.99072 99.0737 3.88281 98.8813 cv
4.39258 98.8813 li
4.47656 99.0737 4.54248 99.271 4.57861 99.4751 cv
4.61475 99.6792 4.63867 99.8896 4.63867 100.093 cv
4.63867 100.621 4.48877 101.036 4.18848 101.341 cv
3.88867 101.647 3.47461 101.797 2.95264 101.797 cv
2.41846 101.797 1.99268 101.653 1.6748 101.366 cv
1.36279 101.078 1.20068 100.682 1.20068 100.189 cv
1.20068 99.7451 1.34473 99.3975 1.62646 99.1396 cv
1.91455 98.8872 2.29834 98.7554 2.78467 98.7554 cv
2.62842 99.2954 mo
2.33447 99.3013 2.10059 99.3853 1.92041 99.541 cv
1.74658 99.7036 1.65674 99.9194 1.65674 100.183 cv
1.65674 100.483 1.74658 100.724 1.91455 100.903 cv
2.08252 101.083 2.32275 101.191 2.62842 101.215 cv
2.62842 99.2954 li
f
1.27881 95.4253 mo
4.56055 95.4253 li
4.56055 95.9653 li
1.27881 95.9653 li
1.27881 95.4253 li
cp
0 95.4253 mo
.684082 95.4253 li
.684082 95.9653 li
0 95.9653 li
0 95.4253 li
cp
f
2.58057 91.5674 mo
4.56055 91.5674 li
4.56055 92.1074 li
2.59863 92.1074 li
2.28662 92.1074 2.05859 92.1733 1.90234 92.2935 cv
1.74658 92.4131 1.66846 92.5933 1.66846 92.833 cv
1.66846 93.1274 1.76465 93.3555 1.95068 93.5234 cv
2.13672 93.6914 2.38867 93.7754 2.70654 93.7754 cv
4.56055 93.7754 li
4.56055 94.3154 li
1.27832 94.3154 li
1.27832 93.7754 li
1.78857 93.7754 li
1.59668 93.6494 1.44629 93.499 1.35059 93.3193 cv
1.25439 93.145 1.20068 92.9414 1.20068 92.7134 cv
1.20068 92.3413 1.32031 92.0537 1.55469 91.8613 cv
1.78857 91.6694 2.13037 91.5674 2.58057 91.5674 cv
f
1.37451 86.4912 mo
1.88428 86.4912 li
1.8125 86.6475 1.75244 86.8032 1.71045 86.9653 cv
1.67432 87.1333 1.65039 87.3013 1.65039 87.4751 cv
1.65039 87.7456 1.69238 87.9492 1.77637 88.0815 cv
1.86035 88.2134 1.98047 88.2793 2.14258 88.2793 cv
2.26855 88.2793 2.36426 88.2314 2.43652 88.1353 cv
2.5083 88.0396 2.58057 87.8472 2.64063 87.5591 cv
2.68262 87.3735 li
2.7666 86.9893 2.88623 86.7192 3.03027 86.5571 cv
3.18066 86.4014 3.39063 86.3174 3.6543 86.3174 cv
3.96045 86.3174 4.20068 86.4375 4.37451 86.6772 cv
4.5542 86.9175 4.63867 87.2534 4.63867 87.6733 cv
4.63867 87.8535 4.62061 88.0332 4.59033 88.2251 cv
4.56055 88.4175 4.51221 88.6152 4.44043 88.8252 cv
3.88232 88.8252 li
3.99023 88.6274 4.06836 88.4292 4.11621 88.2373 cv
4.17041 88.0454 4.19434 87.8535 4.19434 87.6611 cv
4.19434 87.4092 4.15234 87.2114 4.06836 87.0732 cv
3.98438 86.9414 3.8584 86.8691 3.69629 86.8691 cv
3.55225 86.8691 3.43848 86.9233 3.36035 87.0195 cv
3.28223 87.1152 3.20459 87.3315 3.13232 87.6675 cv
3.09033 87.8535 li
3.01855 88.1895 2.91064 88.4351 2.7666 88.5796 cv
2.62256 88.7295 2.42432 88.8013 2.1665 88.8013 cv
1.86035 88.8013 1.62061 88.6934 1.45264 88.4771 cv
1.28467 88.2612 1.20068 87.9492 1.20068 87.5415 cv
1.20068 87.3433 1.21826 87.1572 1.24854 86.9771 cv
1.27832 86.8032 1.32031 86.6411 1.37451 86.4912 cv
f
2.78467 82.6514 mo
3.04834 82.6514 li
3.04834 85.1294 li
3.42041 85.1055 3.7085 84.9976 3.90039 84.7935 cv
4.09277 84.5952 4.18848 84.3193 4.18848 83.9595 cv
4.18848 83.7554 4.16455 83.5513 4.1167 83.3594 cv
4.06836 83.1675 3.99072 82.9692 3.88281 82.7773 cv
4.39258 82.7773 li
4.47656 82.9692 4.54248 83.1675 4.57861 83.3716 cv
4.61475 83.5757 4.63867 83.7856 4.63867 83.9897 cv
4.63867 84.5176 4.48877 84.9316 4.18848 85.2373 cv
3.88867 85.5435 3.47461 85.6934 2.95264 85.6934 cv
2.41846 85.6934 1.99268 85.5493 1.6748 85.2612 cv
1.36279 84.9736 1.20068 84.5776 1.20068 84.0854 cv
1.20068 83.6416 1.34473 83.2935 1.62646 83.0356 cv
1.91455 82.7837 2.29834 82.6514 2.78467 82.6514 cv
2.62842 83.1914 mo
2.33447 83.1978 2.10059 83.2817 1.92041 83.4375 cv
1.74658 83.5996 1.65674 83.8154 1.65674 84.0796 cv
1.65674 84.3794 1.74658 84.6196 1.91455 84.7993 cv
2.08252 84.9795 2.32275 85.0874 2.62842 85.1113 cv
2.62842 83.1914 li
f
1.4043 79.4053 mo
1.90869 79.4053 li
1.82471 79.5615 1.76465 79.7114 1.72266 79.8672 cv
1.68066 80.0234 1.65625 80.1733 1.65625 80.3296 cv
1.65625 80.6772 1.77051 80.9536 1.99268 81.1455 cv
2.21436 81.3374 2.52637 81.4331 2.92236 81.4331 cv
3.32471 81.4331 3.63672 81.3374 3.8584 81.1455 cv
4.08057 80.9536 4.18848 80.6772 4.18848 80.3296 cv
4.18848 80.1733 4.17041 80.0234 4.12842 79.8672 cv
4.08643 79.7114 4.02051 79.5615 3.93652 79.4053 cv
4.43457 79.4053 li
4.50635 79.5615 4.56055 79.7173 4.59033 79.8735 cv
4.62061 80.0356 4.63867 80.2095 4.63867 80.3892 cv
4.63867 80.8813 4.48828 81.2773 4.17627 81.5654 cv
3.87061 81.8594 3.45068 82.0034 2.92236 82.0034 cv
2.38867 82.0034 1.96826 81.8594 1.6626 81.5654 cv
1.35645 81.2715 1.20068 80.8696 1.20068 80.3535 cv
1.20068 80.1855 1.21826 80.0234 1.25439 79.8672 cv
1.29053 79.7114 1.33838 79.5552 1.4043 79.4053 cv
f
1.65625 77.1973 mo
1.65625 77.4854 1.77051 77.7134 1.99854 77.8813 cv
2.22656 78.0493 2.53223 78.1333 2.92236 78.1333 cv
3.31836 78.1333 3.62451 78.0552 3.85254 77.8872 cv
4.08057 77.7192 4.18848 77.4912 4.18848 77.1973 cv
4.18848 76.9092 4.08057 76.6812 3.85254 76.5132 cv
3.62451 76.3452 3.31836 76.2612 2.92236 76.2612 cv
2.53857 76.2612 2.22656 76.3452 1.99854 76.5132 cv
1.77051 76.6812 1.65625 76.9092 1.65625 77.1973 cv
1.20068 77.1973 mo
1.20068 76.7295 1.35645 76.3633 1.65625 76.0933 cv
1.9624 75.8296 2.38232 75.6914 2.92236 75.6914 cv
3.4624 75.6914 3.88232 75.8296 4.18262 76.0933 cv
4.48828 76.3633 4.63867 76.7295 4.63867 77.1973 cv
4.63867 77.6714 4.48828 78.0435 4.18262 78.3071 cv
3.88232 78.5713 3.4624 78.7036 2.92236 78.7036 cv
2.38232 78.7036 1.9624 78.5713 1.65625 78.3071 cv
1.35645 78.0435 1.20068 77.6714 1.20068 77.1973 cv
f
2.58057 72.0674 mo
4.56055 72.0674 li
4.56055 72.6074 li
2.59863 72.6074 li
2.28662 72.6074 2.05859 72.6733 1.90234 72.7935 cv
1.74658 72.9131 1.66846 73.0933 1.66846 73.3335 cv
1.66846 73.6274 1.76465 73.8555 1.95068 74.0234 cv
2.13672 74.1914 2.38867 74.2754 2.70654 74.2754 cv
4.56055 74.2754 li
4.56055 74.8154 li
1.27832 74.8154 li
1.27832 74.2754 li
1.78857 74.2754 li
1.59668 74.1494 1.44629 73.9995 1.35059 73.8193 cv
1.25439 73.645 1.20068 73.4414 1.20068 73.2134 cv
1.20068 72.8413 1.32031 72.5532 1.55469 72.3613 cv
1.78857 72.1694 2.13037 72.0674 2.58057 72.0674 cv
f
1.77637 68.8335 mo
.000488281 68.8335 li
.000488281 68.2935 li
4.56055 68.2935 li
4.56055 68.8335 li
4.06836 68.8335 li
4.2666 68.9473 4.41064 69.0913 4.50049 69.2651 cv
4.59033 69.4395 4.63867 69.6436 4.63867 69.8833 cv
4.63867 70.2793 4.48242 70.6035 4.17041 70.8555 cv
3.8584 71.1074 3.43848 71.2275 2.92236 71.2275 cv
2.40674 71.2275 1.99268 71.1074 1.67432 70.8555 cv
1.3623 70.6035 1.20068 70.2793 1.20068 69.8833 cv
1.20068 69.6436 1.24854 69.4395 1.34473 69.2651 cv
1.44043 69.0913 1.58447 68.9473 1.77637 68.8335 cv
2.92236 70.6694 mo
3.31836 70.6694 3.63037 70.5913 3.8584 70.4292 cv
4.08643 70.2676 4.19434 70.0396 4.19434 69.7515 cv
4.19434 69.4692 4.08643 69.2476 3.8584 69.0796 cv
3.63037 68.9175 3.31836 68.8335 2.92236 68.8335 cv
2.52637 68.8335 2.2207 68.9175 1.99268 69.0796 cv
1.76465 69.2476 1.65039 69.4692 1.65039 69.7515 cv
1.65039 70.0396 1.76465 70.2676 1.99268 70.4292 cv
2.2207 70.5913 2.52637 70.6694 2.92236 70.6694 cv
f
1.37451 65.0894 mo
1.88428 65.0894 li
1.8125 65.2456 1.75244 65.4014 1.71045 65.5635 cv
1.67432 65.7314 1.65039 65.8994 1.65039 66.0737 cv
1.65039 66.3433 1.69238 66.5474 1.77637 66.6797 cv
1.86035 66.8115 1.98047 66.8774 2.14258 66.8774 cv
2.26855 66.8774 2.36426 66.8296 2.43652 66.7334 cv
2.5083 66.6372 2.58057 66.4453 2.64063 66.1577 cv
2.68262 65.9717 li
2.7666 65.5874 2.88623 65.3174 3.03027 65.1558 cv
3.18066 64.9995 3.39063 64.9155 3.6543 64.9155 cv
3.96045 64.9155 4.20068 65.0356 4.37451 65.2754 cv
4.5542 65.5156 4.63867 65.8516 4.63867 66.2715 cv
4.63867 66.4517 4.62061 66.6313 4.59033 66.8237 cv
4.56055 67.0156 4.51221 67.2134 4.44043 67.4233 cv
3.88232 67.4233 li
3.99023 67.2256 4.06836 67.0273 4.11621 66.8354 cv
4.17041 66.6436 4.19434 66.4517 4.19434 66.2593 cv
4.19434 66.0073 4.15234 65.8096 4.06836 65.6714 cv
3.98438 65.5396 3.8584 65.4673 3.69629 65.4673 cv
3.55225 65.4673 3.43848 65.5215 3.36035 65.6177 cv
3.28223 65.7134 3.20459 65.9297 3.13232 66.2656 cv
3.09033 66.4517 li
3.01855 66.7876 2.91064 67.0337 2.7666 67.1772 cv
2.62256 67.3276 2.42432 67.3994 2.1665 67.3994 cv
1.86035 67.3994 1.62061 67.2915 1.45264 67.0757 cv
1.28467 66.8594 1.20068 66.5474 1.20068 66.1396 cv
1.20068 65.9414 1.21826 65.7554 1.24854 65.5757 cv
1.27832 65.4014 1.32031 65.2397 1.37451 65.0894 cv
f
.5 lw
34.3418 2.7959 mo
257.542 2.7959 li
@
257.542 175.596 mo
257.542 2.7959 li
@
34.3418 175.596 mo
257.542 175.596 li
@
34.3418 175.596 mo
34.3418 2.7959 li
@
108.669 29.3027 mo
183.214 29.3027 li
183.214 6.396 li
108.669 6.396 li
108.669 29.3027 li
cp
0 0 0 0 cmyk
f
108.669 29.3027 mo
183.214 29.3027 li
183.214 6.396 li
108.669 6.396 li
108.669 29.3027 li
cp
0 0 0 1 cmyk
@
2 lc
113.709 12.0762 mo
123.789 12.0762 li
.884 .769 0 0 cmyk
@
132.415 9.34766 mo
133.128 9.34766 li
133.128 13.9985 li
135.684 13.9985 li
135.684 14.5967 li
132.415 14.5967 li
132.415 9.34766 li
cp
0 0 0 1 cmyk
f
136.396 10.6577 mo
137.044 10.6577 li
137.044 14.5962 li
136.396 14.5962 li
136.396 10.6577 li
cp
136.396 9.12402 mo
137.044 9.12402 li
137.044 9.94482 li
136.396 9.94482 li
136.396 9.12402 li
cp
f
141.674 12.2202 mo
141.674 14.5962 li
141.026 14.5962 li
141.026 12.2417 li
141.026 11.8672 140.947 11.5938 140.803 11.4067 cv
140.659 11.2192 140.443 11.126 140.155 11.126 cv
139.802 11.126 139.528 11.2412 139.327 11.4644 cv
139.125 11.6875 139.024 11.9897 139.024 12.3716 cv
139.024 14.5962 li
138.376 14.5962 li
138.376 10.6577 li
139.024 10.6577 li
139.024 11.27 li
139.175 11.0396 139.355 10.8594 139.572 10.7441 cv
139.781 10.6289 140.025 10.5645 140.299 10.5645 cv
140.746 10.5645 141.09 10.7085 141.321 10.9893 cv
141.551 11.27 141.674 11.6802 141.674 12.2202 cv
f
146.333 12.4648 mo
146.333 12.7817 li
143.359 12.7817 li
143.387 13.228 143.518 13.5737 143.762 13.8042 cv
144 14.0347 144.331 14.1499 144.763 14.1499 cv
145.008 14.1499 145.252 14.1211 145.483 14.0635 cv
145.713 14.0059 145.951 13.9126 146.181 13.7827 cv
146.181 14.3945 li
145.951 14.4956 145.713 14.5747 145.468 14.6182 cv
145.224 14.6611 144.971 14.6899 144.727 14.6899 cv
144.093 14.6899 143.596 14.5103 143.229 14.1499 cv
142.862 13.79 142.682 13.293 142.682 12.6665 cv
142.682 12.0259 142.855 11.5146 143.201 11.1328 cv
143.546 10.7583 144.021 10.5645 144.612 10.5645 cv
145.145 10.5645 145.562 10.7368 145.872 11.0757 cv
146.174 11.4209 146.333 11.8818 146.333 12.4648 cv
145.685 12.2778 mo
145.677 11.9248 145.577 11.644 145.389 11.4282 cv
145.195 11.2192 144.936 11.1113 144.619 11.1113 cv
144.259 11.1113 143.971 11.2192 143.755 11.4209 cv
143.539 11.6226 143.409 11.9111 143.38 12.2778 cv
145.685 12.2778 li
f
149.184 12.6162 mo
148.658 12.6162 148.298 12.6807 148.097 12.7964 cv
147.895 12.9185 147.794 13.1206 147.794 13.4082 cv
147.794 13.6382 147.866 13.8257 148.018 13.9556 cv
148.168 14.0923 148.377 14.1572 148.637 14.1572 cv
148.997 14.1572 149.285 14.0342 149.5 13.7754 cv
149.716 13.5234 149.825 13.1851 149.825 12.7603 cv
149.825 12.6162 li
149.184 12.6162 li
150.472 12.3501 mo
150.472 14.5962 li
149.825 14.5962 li
149.825 13.999 li
149.673 14.2432 149.486 14.4165 149.27 14.5244 cv
149.054 14.6323 148.781 14.6899 148.464 14.6899 cv
148.061 14.6899 147.736 14.582 147.499 14.3584 cv
147.261 14.1353 147.146 13.8335 147.146 13.4512 cv
147.146 13.0122 147.29 12.6807 147.592 12.4502 cv
147.888 12.2271 148.327 12.1123 148.917 12.1123 cv
149.825 12.1123 li
149.825 12.0474 li
149.825 11.7524 149.724 11.522 149.529 11.3564 cv
149.335 11.1978 149.062 11.1113 148.708 11.1113 cv
148.478 11.1113 148.262 11.1401 148.046 11.1978 cv
147.83 11.2554 147.628 11.335 147.434 11.4351 cv
147.434 10.8379 li
147.665 10.7515 147.895 10.6792 148.118 10.6362 cv
148.341 10.5933 148.558 10.5645 148.773 10.5645 cv
149.342 10.5645 149.767 10.7153 150.048 11.0107 cv
150.329 11.3057 150.472 11.7524 150.472 12.3501 cv
f
154.086 11.2627 mo
154.015 11.2197 153.936 11.1904 153.849 11.1689 cv
153.763 11.1548 153.669 11.1401 153.569 11.1401 cv
153.202 11.1401 152.92 11.2627 152.726 11.5 cv
152.524 11.7383 152.431 12.0762 152.431 12.5225 cv
152.431 14.5962 li
151.784 14.5962 li
151.784 10.6582 li
152.431 10.6582 li
152.431 11.27 li
152.56 11.0327 152.741 10.8521 152.957 10.7368 cv
153.172 10.6221 153.439 10.5645 153.755 10.5645 cv
153.799 10.5645 153.849 10.5718 153.908 10.5718 cv
153.958 10.5786 154.015 10.5854 154.086 10.6001 cv
154.086 11.2627 li
f
159.566 10.7729 mo
159.566 11.3853 li
159.378 11.2983 159.192 11.2266 158.998 11.1763 cv
158.795 11.1333 158.594 11.104 158.385 11.104 cv
158.061 11.104 157.816 11.1548 157.659 11.2554 cv
157.5 11.3564 157.42 11.5 157.42 11.6948 cv
157.42 11.8462 157.478 11.9609 157.593 12.0474 cv
157.708 12.1343 157.939 12.2207 158.285 12.292 cv
158.508 12.3428 li
158.969 12.4438 159.292 12.5874 159.487 12.7603 cv
159.674 12.9399 159.775 13.1919 159.775 13.5093 cv
159.775 13.8765 159.63 14.1641 159.343 14.373 cv
159.055 14.5894 158.652 14.6895 158.148 14.6895 cv
157.931 14.6895 157.715 14.6685 157.485 14.6323 cv
157.254 14.5962 157.017 14.5386 156.765 14.4521 cv
156.765 13.7827 li
157.002 13.9121 157.241 14.0054 157.471 14.0635 cv
157.702 14.1279 157.931 14.1572 158.162 14.1572 cv
158.464 14.1572 158.702 14.1064 158.868 14.0054 cv
159.026 13.9053 159.112 13.7534 159.112 13.5596 cv
159.112 13.3867 159.047 13.25 158.932 13.1563 cv
158.817 13.0625 158.558 12.9692 158.155 12.8823 cv
157.931 12.832 li
157.528 12.7456 157.233 12.6167 157.06 12.4438 cv
156.88 12.2705 156.793 12.0332 156.793 11.7236 cv
156.793 11.3564 156.924 11.0679 157.183 10.8667 cv
157.442 10.665 157.816 10.5645 158.306 10.5645 cv
158.543 10.5645 158.767 10.5854 158.983 10.6221 cv
159.192 10.6582 159.386 10.708 159.566 10.7729 cv
f
164.174 12.4648 mo
164.174 12.7817 li
161.201 12.7817 li
161.229 13.228 161.359 13.5737 161.603 13.8042 cv
161.841 14.0347 162.172 14.1499 162.604 14.1499 cv
162.849 14.1499 163.094 14.1211 163.325 14.0635 cv
163.555 14.0059 163.792 13.9126 164.023 13.7827 cv
164.023 14.3945 li
163.792 14.4956 163.555 14.5747 163.31 14.6182 cv
163.065 14.6611 162.813 14.6899 162.568 14.6899 cv
161.935 14.6899 161.438 14.5103 161.071 14.1499 cv
160.704 13.79 160.524 13.293 160.524 12.6665 cv
160.524 12.0259 160.696 11.5146 161.042 11.1328 cv
161.388 10.7583 161.863 10.5645 162.454 10.5645 cv
162.986 10.5645 163.404 10.7368 163.713 11.0757 cv
164.016 11.4209 164.174 11.8818 164.174 12.4648 cv
163.526 12.2778 mo
163.519 11.9248 163.417 11.644 163.231 11.4282 cv
163.037 11.2192 162.777 11.1113 162.46 11.1113 cv
162.101 11.1113 161.812 11.2192 161.597 11.4209 cv
161.38 11.6226 161.25 11.9111 161.222 12.2778 cv
163.526 12.2778 li
f
167.025 12.6162 mo
166.5 12.6162 166.14 12.6807 165.938 12.7964 cv
165.737 12.9185 165.636 13.1206 165.636 13.4082 cv
165.636 13.6382 165.708 13.8257 165.859 13.9556 cv
166.01 14.0923 166.219 14.1572 166.478 14.1572 cv
166.838 14.1572 167.125 14.0342 167.342 13.7754 cv
167.558 13.5234 167.666 13.1851 167.666 12.7603 cv
167.666 12.6162 li
167.025 12.6162 li
168.314 12.3501 mo
168.314 14.5962 li
167.666 14.5962 li
167.666 13.999 li
167.515 14.2432 167.328 14.4165 167.112 14.5244 cv
166.896 14.6323 166.622 14.6899 166.305 14.6899 cv
165.903 14.6899 165.578 14.582 165.34 14.3584 cv
165.103 14.1353 164.988 13.8335 164.988 13.4512 cv
164.988 13.0122 165.131 12.6807 165.434 12.4502 cv
165.729 12.2271 166.168 12.1123 166.759 12.1123 cv
167.666 12.1123 li
167.666 12.0474 li
167.666 11.7524 167.565 11.522 167.371 11.3564 cv
167.177 11.1978 166.903 11.1113 166.55 11.1113 cv
166.32 11.1113 166.104 11.1401 165.888 11.1978 cv
165.671 11.2554 165.47 11.335 165.276 11.4351 cv
165.276 10.8379 li
165.506 10.7515 165.737 10.6792 165.959 10.6362 cv
166.183 10.5933 166.399 10.5645 166.615 10.5645 cv
167.183 10.5645 167.608 10.7153 167.889 11.0107 cv
168.169 11.3057 168.314 11.7524 168.314 12.3501 cv
f
171.928 11.2627 mo
171.856 11.2197 171.777 11.1904 171.691 11.1689 cv
171.605 11.1548 171.511 11.1401 171.41 11.1401 cv
171.043 11.1401 170.762 11.2627 170.568 11.5 cv
170.366 11.7383 170.272 12.0762 170.272 12.5225 cv
170.272 14.5962 li
169.625 14.5962 li
169.625 10.6582 li
170.272 10.6582 li
170.272 11.27 li
170.402 11.0327 170.583 10.8521 170.798 10.7368 cv
171.014 10.6221 171.281 10.5645 171.597 10.5645 cv
171.641 10.5645 171.691 10.5718 171.749 10.5718 cv
171.798 10.5786 171.856 10.5854 171.928 10.6001 cv
171.928 11.2627 li
f
175.442 10.8091 mo
175.442 11.4141 li
175.254 11.313 175.076 11.2407 174.888 11.1904 cv
174.701 11.1406 174.52 11.1113 174.333 11.1113 cv
173.916 11.1113 173.584 11.248 173.354 11.5146 cv
173.124 11.7808 173.009 12.1558 173.009 12.6309 cv
173.009 13.1128 173.124 13.4873 173.354 13.7539 cv
173.584 14.02 173.916 14.1499 174.333 14.1499 cv
174.52 14.1499 174.701 14.1284 174.888 14.0781 cv
175.076 14.0273 175.254 13.9487 175.442 13.8477 cv
175.442 14.4448 li
175.254 14.5317 175.068 14.5967 174.88 14.6318 cv
174.686 14.6685 174.477 14.6899 174.261 14.6899 cv
173.67 14.6899 173.196 14.5103 172.85 14.1353 cv
172.498 13.7681 172.325 13.2646 172.325 12.6309 cv
172.325 11.9897 172.498 11.4858 172.85 11.1187 cv
173.203 10.7515 173.685 10.5645 174.305 10.5645 cv
174.506 10.5645 174.701 10.5859 174.888 10.6289 cv
175.076 10.6724 175.262 10.73 175.442 10.8091 cv
f
179.841 12.2202 mo
179.841 14.5962 li
179.193 14.5962 li
179.193 12.2417 li
179.193 11.8672 179.114 11.5938 178.97 11.4067 cv
178.827 11.2192 178.61 11.126 178.322 11.126 cv
177.969 11.126 177.696 11.2412 177.495 11.4644 cv
177.292 11.6875 177.192 11.9897 177.192 12.3716 cv
177.192 14.5962 li
176.543 14.5962 li
176.543 9.12451 li
177.192 9.12451 li
177.192 11.27 li
177.342 11.0396 177.523 10.8594 177.739 10.7441 cv
177.948 10.6289 178.192 10.5645 178.466 10.5645 cv
178.913 10.5645 179.258 10.7085 179.489 10.9893 cv
179.719 11.27 179.841 11.6802 179.841 12.2202 cv
f
113.709 22.4497 mo
123.789 22.4497 li
.873 .242 1 .129 cmyk
@
133.127 22.4639 mo
133.127 24.3862 li
134.265 24.3862 li
134.647 24.3862 134.928 24.3076 135.115 24.1489 cv
135.294 23.9907 135.388 23.7529 135.388 23.4219 cv
135.388 23.0981 135.294 22.8599 135.115 22.7021 cv
134.928 22.5435 134.647 22.4639 134.265 22.4639 cv
133.127 22.4639 li
133.127 20.3042 mo
133.127 21.8882 li
134.179 21.8882 li
134.524 21.8882 134.776 21.8237 134.949 21.6934 cv
135.122 21.564 135.208 21.3701 135.208 21.0962 cv
135.208 20.8369 135.122 20.6353 134.949 20.5054 cv
134.776 20.376 134.524 20.3042 134.179 20.3042 cv
133.127 20.3042 li
132.415 19.7212 mo
134.229 19.7212 li
134.769 19.7212 135.187 19.8359 135.482 20.0591 cv
135.77 20.2896 135.921 20.6064 135.921 21.0171 cv
135.921 21.3408 135.842 21.6001 135.69 21.7871 cv
135.54 21.9746 135.324 22.0972 135.036 22.1401 cv
135.381 22.2192 135.655 22.3774 135.849 22.6157 cv
136.036 22.853 136.137 23.1479 136.137 23.501 cv
136.137 23.9761 135.972 24.3359 135.655 24.5879 cv
135.338 24.8477 134.885 24.9692 134.301 24.9692 cv
132.415 24.9692 li
132.415 19.7212 li
0 0 0 1 cmyk
f
137.325 21.0313 mo
137.973 21.0313 li
137.973 24.9692 li
137.325 24.9692 li
137.325 21.0313 li
cp
137.325 19.498 mo
137.973 19.498 li
137.973 20.3188 li
137.325 20.3188 li
137.325 19.498 li
cp
f
142.603 22.5938 mo
142.603 24.9697 li
141.955 24.9697 li
141.955 22.6152 li
141.955 22.2407 141.875 21.9673 141.731 21.7803 cv
141.587 21.5933 141.372 21.499 141.083 21.499 cv
140.731 21.499 140.457 21.6147 140.255 21.8374 cv
140.054 22.061 139.954 22.3633 139.954 22.7446 cv
139.954 24.9697 li
139.306 24.9697 li
139.306 21.0313 li
139.954 21.0313 li
139.954 21.6431 li
140.104 21.4131 140.285 21.2329 140.5 21.1177 cv
140.709 21.0024 140.954 20.9375 141.228 20.9375 cv
141.674 20.9375 142.02 21.0815 142.25 21.3628 cv
142.48 21.6431 142.603 22.0537 142.603 22.5938 cv
f
145.685 22.9897 mo
145.159 22.9897 144.799 23.0547 144.597 23.1694 cv
144.396 23.292 144.295 23.4937 144.295 23.7817 cv
144.295 24.0122 144.367 24.1992 144.518 24.3291 cv
144.669 24.4658 144.878 24.5308 145.137 24.5308 cv
145.498 24.5308 145.785 24.4082 146.001 24.1484 cv
146.217 23.8965 146.325 23.5586 146.325 23.1338 cv
146.325 22.9897 li
145.685 22.9897 li
146.973 22.7231 mo
146.973 24.9697 li
146.325 24.9697 li
146.325 24.3721 li
146.174 24.6167 145.986 24.7896 145.771 24.8975 cv
145.555 25.0054 145.281 25.063 144.964 25.063 cv
144.562 25.063 144.237 24.9551 144 24.7319 cv
143.762 24.5093 143.647 24.2065 143.647 23.8247 cv
143.647 23.3857 143.791 23.0547 144.093 22.8242 cv
144.389 22.6011 144.828 22.4858 145.418 22.4858 cv
146.325 22.4858 li
146.325 22.4204 li
146.325 22.1255 146.225 21.895 146.03 21.7295 cv
145.836 21.5713 145.562 21.4849 145.209 21.4849 cv
144.979 21.4849 144.762 21.5137 144.547 21.5713 cv
144.331 21.6284 144.129 21.708 143.935 21.8091 cv
143.935 21.2109 li
144.166 21.125 144.396 21.0527 144.619 21.0098 cv
144.842 20.9668 145.058 20.9375 145.274 20.9375 cv
145.842 20.9375 146.268 21.0894 146.548 21.3843 cv
146.829 21.6792 146.973 22.1255 146.973 22.7231 cv
f
150.587 21.6362 mo
150.515 21.5933 150.436 21.564 150.35 21.542 cv
150.264 21.5283 150.17 21.5137 150.069 21.5137 cv
149.702 21.5137 149.421 21.6362 149.227 21.8735 cv
149.025 22.1113 148.931 22.4497 148.931 22.896 cv
148.931 24.9697 li
148.284 24.9697 li
148.284 21.0317 li
148.931 21.0317 li
148.931 21.6431 li
149.062 21.4058 149.241 21.2256 149.458 21.1108 cv
149.673 20.9951 149.94 20.9375 150.257 20.9375 cv
150.299 20.9375 150.35 20.9453 150.408 20.9453 cv
150.458 20.9521 150.515 20.959 150.587 20.9736 cv
150.587 21.6362 li
f
152.906 25.3296 mo
152.718 25.79 152.54 26.1001 152.366 26.2441 cv
152.193 26.3882 151.962 26.4604 151.674 26.4604 cv
151.157 26.4604 li
151.157 25.9204 li
151.539 25.9204 li
151.71 25.9204 151.848 25.8765 151.949 25.79 cv
152.049 25.7041 152.157 25.5098 152.28 25.1934 cv
152.395 24.9048 li
150.803 21.0313 li
151.488 21.0313 li
152.718 24.1128 li
153.95 21.0313 li
154.634 21.0313 li
152.906 25.3296 li
f
160.329 21.1465 mo
160.329 21.7583 li
160.142 21.6719 159.955 21.6001 159.76 21.5498 cv
159.559 21.5063 159.358 21.478 159.149 21.478 cv
158.825 21.478 158.58 21.5278 158.421 21.6289 cv
158.262 21.73 158.183 21.874 158.183 22.0679 cv
158.183 22.2192 158.241 22.3345 158.357 22.4209 cv
158.471 22.5073 158.702 22.5938 159.047 22.666 cv
159.271 22.7158 li
159.732 22.8169 160.055 22.9609 160.25 23.1338 cv
160.438 23.3135 160.538 23.5654 160.538 23.8823 cv
160.538 24.25 160.394 24.5381 160.106 24.7466 cv
159.818 24.9624 159.415 25.0635 158.911 25.0635 cv
158.695 25.0635 158.479 25.042 158.249 25.0059 cv
158.018 24.9692 157.78 24.9116 157.528 24.8252 cv
157.528 24.1563 li
157.766 24.2856 158.004 24.3794 158.234 24.437 cv
158.464 24.5015 158.695 24.5303 158.925 24.5303 cv
159.227 24.5303 159.465 24.48 159.631 24.3794 cv
159.789 24.2783 159.875 24.1274 159.875 23.9331 cv
159.875 23.7603 159.811 23.6235 159.696 23.5298 cv
159.581 23.4365 159.321 23.3423 158.918 23.2559 cv
158.695 23.2061 li
158.292 23.1196 157.997 22.9897 157.824 22.8169 cv
157.643 22.6445 157.557 22.4063 157.557 22.0967 cv
157.557 21.73 157.687 21.4419 157.946 21.2402 cv
158.205 21.0386 158.58 20.938 159.069 20.938 cv
159.306 20.938 159.53 20.9595 159.746 20.9956 cv
159.955 21.0313 160.15 21.082 160.329 21.1465 cv
f
164.937 22.8384 mo
164.937 23.1548 li
161.964 23.1548 li
161.992 23.6016 162.122 23.9478 162.367 24.1772 cv
162.604 24.4082 162.935 24.5234 163.368 24.5234 cv
163.613 24.5234 163.858 24.4946 164.088 24.437 cv
164.318 24.3794 164.555 24.2861 164.786 24.1558 cv
164.786 24.7681 li
164.555 24.8691 164.318 24.9478 164.073 24.9917 cv
163.829 25.0347 163.577 25.0635 163.332 25.0635 cv
162.698 25.0635 162.201 24.8833 161.833 24.5234 cv
161.467 24.1631 161.287 23.6665 161.287 23.04 cv
161.287 22.3994 161.459 21.8882 161.805 21.5063 cv
162.151 21.1318 162.625 20.9375 163.216 20.9375 cv
163.749 20.9375 164.167 21.1104 164.476 21.4492 cv
164.779 21.7944 164.937 22.2549 164.937 22.8384 cv
164.289 22.6509 mo
164.282 22.2983 164.181 22.0176 163.994 21.8013 cv
163.8 21.5933 163.541 21.4849 163.223 21.4849 cv
162.864 21.4849 162.576 21.5933 162.36 21.7944 cv
162.143 21.9961 162.014 22.2842 161.986 22.6509 cv
164.289 22.6509 li
f
167.789 22.9897 mo
167.262 22.9897 166.903 23.0547 166.701 23.1694 cv
166.5 23.292 166.399 23.4937 166.399 23.7817 cv
166.399 24.0122 166.47 24.1992 166.622 24.3291 cv
166.774 24.4658 166.982 24.5308 167.241 24.5308 cv
167.601 24.5308 167.889 24.4082 168.106 24.1484 cv
168.321 23.8965 168.429 23.5586 168.429 23.1338 cv
168.429 22.9897 li
167.789 22.9897 li
169.077 22.7231 mo
169.077 24.9697 li
168.429 24.9697 li
168.429 24.3721 li
168.278 24.6167 168.09 24.7896 167.875 24.8975 cv
167.659 25.0054 167.385 25.063 167.069 25.063 cv
166.665 25.063 166.341 24.9551 166.104 24.7319 cv
165.866 24.5093 165.751 24.2065 165.751 23.8247 cv
165.751 23.3857 165.895 23.0547 166.197 22.8242 cv
166.493 22.6011 166.931 22.4858 167.522 22.4858 cv
168.429 22.4858 li
168.429 22.4204 li
168.429 22.1255 168.329 21.895 168.134 21.7295 cv
167.94 21.5713 167.667 21.4849 167.314 21.4849 cv
167.083 21.4849 166.867 21.5137 166.651 21.5713 cv
166.435 21.6284 166.234 21.708 166.039 21.8091 cv
166.039 21.2109 li
166.269 21.125 166.5 21.0527 166.722 21.0098 cv
166.946 20.9668 167.162 20.9375 167.378 20.9375 cv
167.947 20.9375 168.372 21.0894 168.653 21.3843 cv
168.933 21.6792 169.077 22.1255 169.077 22.7231 cv
f
172.692 21.6362 mo
172.62 21.5933 172.541 21.564 172.454 21.542 cv
172.368 21.5283 172.274 21.5137 172.173 21.5137 cv
171.806 21.5137 171.525 21.6362 171.331 21.8735 cv
171.129 22.1113 171.036 22.4497 171.036 22.896 cv
171.036 24.9697 li
170.388 24.9697 li
170.388 21.0317 li
171.036 21.0317 li
171.036 21.6431 li
171.166 21.4058 171.345 21.2256 171.561 21.1108 cv
171.778 20.9951 172.043 20.9375 172.36 20.9375 cv
172.404 20.9375 172.454 20.9453 172.512 20.9453 cv
172.562 20.9521 172.62 20.959 172.692 20.9736 cv
172.692 21.6362 li
f
176.205 21.1826 mo
176.205 21.7871 li
176.018 21.6865 175.838 21.6147 175.651 21.564 cv
175.464 21.5142 175.284 21.4849 175.096 21.4849 cv
174.678 21.4849 174.347 21.6216 174.117 21.8882 cv
173.886 22.1543 173.772 22.5288 173.772 23.0039 cv
173.772 23.4863 173.886 23.8608 174.117 24.1274 cv
174.347 24.3936 174.678 24.5234 175.096 24.5234 cv
175.284 24.5234 175.464 24.5015 175.651 24.4517 cv
175.838 24.4009 176.018 24.3213 176.205 24.2212 cv
176.205 24.8184 li
176.018 24.9048 175.831 24.9692 175.643 25.0054 cv
175.449 25.0415 175.241 25.0635 175.025 25.0635 cv
174.434 25.0635 173.959 24.8828 173.613 24.5088 cv
173.26 24.1416 173.088 23.6372 173.088 23.0039 cv
173.088 22.3628 173.26 21.8594 173.613 21.4922 cv
173.966 21.125 174.449 20.9375 175.068 20.9375 cv
175.27 20.9375 175.464 20.9595 175.651 21.0024 cv
175.838 21.0459 176.026 21.103 176.205 21.1826 cv
f
180.604 22.5938 mo
180.604 24.9697 li
179.957 24.9697 li
179.957 22.6152 li
179.957 22.2407 179.877 21.9673 179.734 21.7803 cv
179.589 21.5933 179.374 21.499 179.085 21.499 cv
178.733 21.499 178.458 21.6147 178.257 21.8374 cv
178.055 22.061 177.955 22.3633 177.955 22.7446 cv
177.955 24.9697 li
177.307 24.9697 li
177.307 19.4976 li
177.955 19.4976 li
177.955 21.6431 li
178.106 21.4131 178.286 21.2329 178.501 21.1177 cv
178.711 21.0024 178.956 20.9375 179.229 20.9375 cv
179.676 20.9375 180.021 21.0815 180.251 21.3628 cv
180.482 21.6431 180.604 22.0537 180.604 22.5938 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (011x001.eps)%%CreationDate: 27/05/15 11:09 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6kB\mTcS2jV^c?p^CuYMdK/4i6kF@M@%_"0#_"0\[rn(`<;WVf-RjQAVc0i"6>_>=J/ZD^48ek<j:2`%?)qE9Sqe#H791dYj%PIdG6%8BQc\rfO][m*Z(*IjKYXZAKWb\B38@VABb<GhA_Somb%7B[GqYJ8u&7eaFKI'%NPKkA$OmOTXlIodQ1K??9%;G#`plLj:h%P+2-elW5:$h_CbGTClBug&A-rPH('O!2sX.S%kTglJ_4+9<Gmle6Nm+q@c>Dd6Y8R>51k.4,qkgDmabIOOgEnhro%b*nX9`qcU&U%7J/p9!0`+hRm!0*"Ju.ChOW6S5<I\EV>Jq^4Cfk^G-gjIBn)i.(%e,pC.[11aKtKlGH5'7f!'sP`QTMl](f3OV^51dE@K.!%ob&n%3`*\*'bd=BrUj=jcVeeq<iO[(6pg]mp[%L$:mG%u:_`IlSt,f2C[I&"B,>Qc"3;c43bVQ0F[V2'?`mJeBakUTnOX(X=5*,N/o'ui%r>4b5P]R`Ge-,Z6^M@[14Wn^nW\r(kQ^GrbbHR0?dN9`!=)jDm^Le'D,urdZ"BFt`n,aB@_3!EMBoZ&#*OS,h59!6jE`"Va)fE&J%X.fo;/a8?-b^\3+rcd&qKMb_3DR\2iN$FlC*!eZaP!(cL"O95nRPcRe878HPl<knY`69RVKgr>qXXkbMh6Kk0r&;1^G8E)/62u$I%4tR.+>o,[4"U<M"poE`M<7g*.Y*5dF1;$?<Z7ID8=n'V?TTj"R.Ea3-),Ae;19M!r>SiV.r^&'cKi7CL5+trL!2U#+GdC4s-\VVd%.@9"-\SPF<G.A%-b@U5SiL'+-p`U?n;g=Khf9(Bq-^93D_'bJ!3jG-:B2BiJKJH@Kpk3rL8W\.i:@JS)TLSDWR#%7<AuH;h6G;>2%5bUq<P=UnaLJgr%pk1Ea1;I#h!9Zbi7#FB)n4DI^2(./mh?e+R3cNBuLm9+_TG5ld4ol=25uMLhN3jH"Ki1`3f"sg)jB\]+I)7P8%*GL#u,b+r>5+r\?%mEQ8&hP8I-1la4dfJBskmqPc_B4n$PTk-XEZm:fg]Q_m01)"5B'i#ZY^]IRC<&.EC'S[@>*Gj\5PTn07),FE%6mgu#pk1D!]0r*%2R=DJ3C8:12q)34.nn]JF.t*O(RSL42C3Akg_$M!\jUGO3GT4-2o7Y@@ak^-nih=orXmG4AJ/i,D,+V/0U2)l%U;+S!aZG>9ZW:L;9MRqKM0:\g(]"AT$QW]B/m=Z7=gS9M`$>Y-$Y_;$)8D+__+WWa<<`DT^VhY&oUi"C-fQfT#<`n$'7\-=7+sI(%7/SA2Cn(><J&spq+ho%Qd<=`gI%EG4J'#IM:%DNd-3"VB@Z`po?h1C",/;*(nk\6ELd-['K29puj>Zs)rhB7'7_pe%7E$[Am@ml;%QVG^WP5k+`rp,l.[R&hsLHU:iiGJ?_T&^p4JC!Go:m1`GSQqdGlsfa2GhWTDKSTQ6"V7JbUuR]_H2^$AV"eMfb!jk!^P]$Wrs&D@%jfmVHLo,g;M*)'7G^gCkTI6\o0Le`oraij04T'p5b,F1deAQMSQgq`kj^!hWP]qt]0WC2C7p&Ja".@%[c-AD>bqq_mOi.=*,H:K`%!dt_C"n.$A&Nlr9oSViUkZTW?<c?40-BY6?)=j?^3J.A:q'j=V&T2o+V[:Y2`?:SYP^aXJ#e7ZjLolcm3!OX9ro.+5NO]`bWBlq7%<Qj_F/Ia[^MUM]u+B*)d-,CmA$iF@g]aaO@&qp8j:LLH#/_!74^d_j-F?qJbqM7IpE'W-0I$41MZ6A[]gQ/`Uj0`,=T7e#R%30(?%iJ1;_&H8A`+o8dlCs:X3d/H?5Z7MA$X*NDgLi]Lf&9b3>0%"]WgS1KpBqpj(SBGXu[*C38g=Sa];l2dt^<H_-Y9_tW<]36:9C)t#%G9U[]&P,W@#5B:RPG]=o#jikN>'OQJ$#e::Cb,sL]nJ&V`[spT'"]@fPBW+kfh?us=1M:(PBd<4j3J.^@e`+8-RXoF@1*t3[ko9P%Q2+B3,GQg;EbX@o>=Ob5_f'EJGn?$q2$(*4eW-B?F\OI1Oot_3pMu*InQu!]:!-I=Z?.R'VX)`!BhW8r,Oo"/q\".2]`PZMdWuaW%&NGQoL;eD6rf!-f>Ubne_^+#O7*9(M-&`KcL#o42IV;<n&:QrZUnPWZW0`-7FqAT!S4`1c'kN1k(:YIm,PB[Z?;(ig*+XoTfYJkU%oV0:kVG)VfBVMVL<!"t4obMg)SSE^Fm7)'9r4B7+>!s_r%lT1!e&pWiefA?-]'>UjXuDWQDNfNTf7fG\Ijj9]k[-^.Et33[qkcll%P2?8`PS8uJ@mR4bpr)860?9l<J\TQuaEGmKkR+6Hp<'#HI4X)^^4p?m7X>?=7@nc[8Z$&7[m2U&l+40=dgDUg;=4t.)N?:i;eVV]%[&FF)C",co8m%#1;ESPIHn?jWZAFhaXS4CFXc3!"0'NC)BdPo@Y0:A\S`6te01<12ab'/GKFd>sOQU$.6$RbqDb)Y%\u\^8'IS/n%NmHheBp?Kkaa60%nR-X/piAgfpNZ^tFk.u;Sl!aIn9X[RH1JmQHuCu<B2-q2CS3Z;j;J<+9Vdad4hpbVcf/cr$IDS2*gh4j&o.cd%Q0SeUSVXsQSbNuXpkQjrW[cj;nWFlK^aC(fd/)*QcLf'mXEX?T;8#uh;,#U9L.X22?:i9#EU4h)T[G`p(;t?lq?`8iX#jDrkaJ^3%bfA($"iiG@aU4R??%_@+972r2%=*kG0cRG1h^bEB)A?!h1<\P..kZaK/>!Ca4XYZ=V0QXI=KGT0R'^BCV,9W)D4)FOn\35Q4dJAk%b]75EB(6d1OMk0B"_,M?A'dbEVrM*SC+FnRG6b"b9A&.dj=)U1@oAZ3a9D:E`,II"S4F=;JdV=G:5t&gq>[`R+]0j0Bs<_N*-VVe%&,q@V#4,Rds(&LQ`n`mcN%DW<jPT#-i(g/khBuf@cB$4?l(ho;2Vqi5Q"VE^I::DqVUq!=EpIZQr`esSGq:Q4>=r"@2R>3ehQlf^%SoE!V^4es<U8K/\_THnhL*).[;uS]5"H)8#Tub76'X,j;1FO-%8Xu&:X?ttu8j_tj@bc"/TR\:YHS_-l85ra!p"hEZW#(]*2.@kB%F:\D6;6$OQ-i.BPB,T4/\7q'R2j$k%)HBo6+Q!ONDci@kYSE;\G-g%Q-dVR3r8as1rG@\9*W5g!Y_bu%2IO?IEJU5H:WN-8oOt;]%r,(gXhO9;SI'rcJ9:iUCYGbRokiGV-[@9b5;LnOcpA<OFALjCT9I-?Q^!a&0a[>\UrlP05J%Jg0CUV!slNCC+r)KdV>7t*LWALWs%X%L"S+8'Wed\sO:(sXl)J,Y.n<03%AD?5ZH[+=ZPOML?9\;6226ilOL$pp6I7rkqBCK*A82u2]LSA>!]4*u[X\TW#"rS.-=Si<-]%Nn4)`A#E]CL%>6R)TVW,`_h?oW0\,Ki2;fXGQ2eb;!Dp+ki'8oH_F?@J%iBBXcLf[+9DSi3@464&B4MCqk[Hqm!K1hOs%f1G5(U9%?9A%re#e$g@0:5VI5\)r&[?NngbuoOYk]Jgp/,PS0[B)V)4*JG#gFaXJRoq8\/=U\?1J+V'6O8Wf/ecD?DI=g#6'`i9$H-8moT=e%G98T^ggT<VQ<ZuAc9B!IW%,01Ouu>bF@lK?I610-jo)jqgJsmlYQ%'VG0uX@#kXabW[&+<G7R<OMSRiA$.oE#>tsC9gKRDuF,2IF%M`F1*')_F)jDh#&6]-r83.=GPmGe2<3f0Ha*QP@?j%W:%i>P+;qZr`D\"5Y=!lMC1WfT_=YlN&K7DT7l%iBngo#`kVO<4?La*sfG%KO:@T+H9"jDu<g2k'#+H=[YhUnrgLm:[V:&n%Y-3jD:8:kWfn[Gr;#E6mb9.3,[>/[5R;ac>3II-;2n8DWTudrn77>'P>Ep6VY:#%X5n9X6_<NLH?rbq?rV%7kdT=Cm3YUZaFr9>s+=N,.CQ.9G@p:RC=UYfDs7;$mR?1-[95pZgP15&YUXa)#dQP9E]4<i:693q!cAXM%8u'j%JOAJjn)SimZ^U6.r_JMT7]La!iW!XL?b`%colnj-qMMl+(,G)3_Xm_1YDB33@/E@bWcW$u([+k=1^&MRf*D2.W.qh$Ag^_q%<-;7)s*iQ=W5'U)1jIQ&TDqojs3^s$Xh4M@qfdr^c/m^I$;hHi#N)q,V2DWqF9^7R)#1/[ri@4[TuQKt)jpCbcGT[Z'UD1Uf8n7(%'j1nrj7=j#6"GE2c^3NA0Y2cVp$23W9:ZF^4lEgKQQ%i+Q+S*S48mj&SSiP@?@P&mk4`me@>SXaJ%$:t*I=1W5?Rb4?M0C$G5eV/%K/tR%;9'if!7`*h/*Tn,am.t$]63f(-RuYB]uj/ASQr;N^OD/S,>8IE#OBC>s!P3^!+5562O9^so%(MGp7M@p4^b2eq>1,JmLNC[%XSLV"Xl4^'s2mCuFM9Dd4GeTCqYq=2&+X^ipT4nLKQ-p%[J;n_2ZNTSG!GiS8@-OAl8nXRX@AHMhHG?W52SU$LYJi0,.5mZIp'/r%pV$6GBm*?u\6jUKP&,sR2.YafInA1:/+>4VCf0*^s73mIHl^M"R$T-BjB`$;4"BXc9=*'L-=7oDM**^S6ZYT;,dl\@DhbtpgFS;i%9N*mf9<*UeI;d`)+Sqho%&ar;`3GJA\uAM?r)N!OnOXrcD"5Uad`UbffQ$Mhd64V^c^UiNHD#>O4`5F,i<B-Yj0C!Qm5TU\Es+Rq%4Csi(:5W/&Q9@g>^!gPe(n7ZYIWeofb23Ghp(r!^4-#T5D:b$)`@U"Z1tge%aHVTg.Fk>dN(kk1@*R1Q-@o3o8t3\0em!!>ApIC4%<5'k'=p`c]W$U1^d</X;Y4'%rrDP+lIOCQ`m5Fe,,S+cT;j[ftc:=K5beE?gWM2N(W[-Ks"D3S:\MjJf[9G<c9GsC$c)d(.,\Qk:%h^STVlV';lC[DU@"[-Ff^SVp6)ej.#ZL=C#PA^b>PRqGq^YSa!UR(7ggW_D6,.%oOkM2bcea9dDfg;up=ePd=;gV$i17U\^I^Ij(%,k#>T>O#Hn1TYPh<j*<9GV.W2\6QT$CpoD]hE!O/AqW^J>Pg&uY"4cAEmZerNQ&XD):[:lQ$T:sb']H63bh&]CiXHkLU%=g':oG.%/HXl[o4-a"`LV:To#dm%_i#.Aa^oV>[d4S%\27ikDb3fM_fY6!KuHJ,NA[9JMO"1qjW.Gkd8SC@\Z?E1*\qc(DQA4Fkq@GX>,ft#%ff&+"*#,UMHO#qPX>E+&+3:g/0nKD=M\$^p/-N1'!KA]T<:clhh#U?B2d=`-@5?f\00_OjA6nE#>Ns_5hnfg_phNc/[*tu)r`fA<%GP^glJ*!d*g2*uW`ANc[Fk)@$'/2XR;]Nu@f<SN!7VZ+c@DoSh34t4iRgEaQf!/.p%C[k/"%SVFO[`D35pOlpK949Af35oY?LM)8%f>L`O<!@NK"-q+coQXO^nG(O!8M6HhdeE\Y/.VYZ_oa's$fSf9PP4cX3Q_UYc$aN+=JS,._F<LZP2BOL5$sfHC9?2/^a4&Wc*$67%go[#Seb8e0^U6*HonN3qOa^(5[T#+e3^-4)6cTQr8RPI4?@qkU>[hM9?TIZ\9qE13\RH9<D7(nE:LF7.P+^*Ue]S>L.2FGHVYHE$%)EF>0Yu;`aZ23P"YUnCPs8L0Te8)I,oBe.,gSl>FDSj_[[uocr?GEftNbil'C@+\CG,aQgpYT?7#gZQ`M7(>\G.,acG#V2%O1%gT%\sp@)h)RPhWg[MOMqX>k.)p\4G;R`8](u&&Y=5bkNF)?TLrr0?eTN<5f&%lgd:@7m8u'cJj'0s_4b[!Of85SG.JVYBm8Kh3J9>+3%Qglspa>j1Rau4PMEkVV"<qWptJPJE<YKcRF5Qr9\O"Sdq+:IP!nNnKQ>#L6Yc&e*%ckKl[5pb:bP-u65ckDoS.R8nKIrs_G6>-AX%/LNOhJ'ecd!2^NkYHGb;W7$YVKOi]R.rg\_^;7$8ns5N5EfJe"7;U]b.J30;*fF&QK^mc'[<afq[mi=2q0heRD#PX/HE7"q'^e&i%R.(G`TX_gPi^811Bp./mfYuTSU`#qL\(QXE[Z1D0hoIY0e]V4<-n]K[UGV-p7Tg8R_>P%=i-;6.UQc_?[A=mjiD#8h[OUaE[s<mN%8;)#q)<$`H74;YKbm^^n[Isef[^8(-<0'8g(M"'4mn1dlD>J?:Qj.lKqq5Od?CWrFf-\)N:t^#"K45p"Ge0TaVLNGaZS;&OYI(Tb%`@MfK/L]1=EAuY<(>-a(17d%K7[.s:AQncY^SP)#@'2OEr+<V9/bdYrNpZT?E^42"][MuA+tYi1)I5_+J$"cDqg[8:B3;]V)^<p,%+,'<1Q;8^=_!u6gAQdpHC3H@=92neKh`_AU[LsUi5RGYBV*g1k7StUH%#S#0\JMj&*egh%l[6E*qFS!CC1m)!d3qG666AqjS75$o%s26E70.9:4'E2aT=F3CVXI=P44'?Bp?G518_4]CKq`%2e."hqU_QeHZ*m(eVke^5IUcQmlH"YX1T]h4P6OPCo9?hR2h7Zm+JaO-c%WKNO4#eu9)%5@G<FR-;YX&TTV%E0`0?7lFo<#,nK0!15TGR4eTf(Q1-7l!KTZZ1qg@1Y<ECY%f/4RNrb;9O?J3C9+WZbf9N+T$b7%5.W,B0=a_2_nIQ)nKC7Lc_b\I&[>9i]4W)/-I<q6\JV,qQLPCTA_-B^5Qp75'*e\C,q72@P#HXk6j]>m&.B%'_#SAWoC^d'>t!^'%>R?(]Y1KGgj1$'a<obmjj7a1&WD%W=*u""+4rtc0Y@i17?`8rR0C;LD"P""1ce[^kV"dL7WVTf.BBH0`;o7;>4%i"7pRe>JYO\'c%#`VpI7#"00/3,%A)gIn`Jel+DoLo[C2#jo\=nSQV.FtHiVGE^^ri-t]s7(qVP4pltEj,%kPTk#U%*4Cg`df)6B8IVDAI',@riE?1%j-[e(-mN,j?Se>Aq=VptS<B@+=I<Iqkj%Y31KI8:FT13OJ&;e_p%@qEB(=.%qV%N'?*+guPaaQ0<1@5X[6@J+I=!iZR%$*1Uf6l#%?Rr,"iN8SQq"R7<T&6iQq;8$TeAB%E0t!r"BM*18AepRh;h`GPdEsu[Lq2N3Z$u>XVJeN,A)1>G[k!B_jedI&.ol+=fm]q9''XRd%D=o3icoTt<fQ0,icM#C\[bSMQ/kbU/>GZRK^,[jMk#Yp?\\-ak<:m0+WeMcg.bAPWWJ/O9S^aC?kbR?JZY*)b#@OCX_GeuYANmlo%WD%O-'<7@\X(EoQ.QQPUPZ&nDVfd8[f+VjHfqPURH=IMkDDjS3j;WMe^Ot/e+p-A'[_E*PftOZF)-MCFq41mI8kf\eAoeu*/!8D3%Dk:;I@&pG0Vf.GJg?$V&q]Sm#!(K-<+]5"YkAQ=dD.sKnVIECD8OOXQXJ-i+8GgJs-i-n+N9G?[iMV#76F?5kSQ6N6+JPh-43j*0%<nD3+:$99CM69NGG@m_@XWXA*hrj@Um*!oC4XNeT73\dsQ1^CRU=SCiZi&qi'/a[qQ1Fb58J'9;\hd3$/Z"Ll%o.cBWbbBfpHse_%m-Yet@H+t6hnNp<5W"*M\OXFK=*iTecCbu5Al#H[9s%9ea"oNc2DreIXZ@edN9d;cLk8VZG95HKQS2J(1VH2CT$3,XHS1EDj5TlC%-rE)#FuFu0-IP)`W)\t:G*_8P_*j@O8)sGUIj'V]B4gO#%3h63,I6H%AnJBX'i\7JeJk@O.YiRC-d(oOeEOGc'LYnL5<P/b;=M^,%\lt<^YJrjON+bZ5>'Rai-G$&7B54dHNK5L\A*r^F_E+gbc/PhNB\!]ReU'WiFT5A7&A;@Hp?b9`LsGZ)h6&W?V'aWHXPNI!FoUm<%&jk*:[(iX&a"X5Vj^@MmoasVl#hbc@V2[_,_p^lFB?N)W.+,`^RBD2S]j"I]Sh^t88mks![VLYB\!bo7U6dZqpJ@Ss+",S8$DKe>%P20"gpKB)`7/-BH7<rBS24/&mG9W:8jjVdK(\dfXFZiX*f(Y'<6k@j@:QHk6%tR+jNkT[a6noEKp<S_$/VanNGEdkXI5.,QiLe]q%OmD4^7%\W<O\ZIhCHHr&T*c`fF.ng^^NTd:3erV,WJu\P&gFpZK8H=/9R*Dk-i8`5IF0i7UWM<Z=6;26D.[X.gKW-Tj`t_m%n%4[%HCC`r5Df$>])-T0aKDuMY-?BF?DU'%lgqiZVGKdT+[e8-e/b_;>\J=6el"aiMi"1>aBiRnOk$kdob!a%hO^qWd<0SMd6lF]=D/S-%c^:Xp[8bfM&tK*M?[6>c=iFb"G.uO<qR`6fqd8s@dO$9OFHZ<RGG85e4t#/jXn$#uU'l&>@f!@?,bFn)hOLP%QXNZS+SPX@H:g=b%EkTHVOLJ(+9[=O'o]`!:m<`S.l4`3ioB#b>2EiIj'C!m,p@6GVIHXU"Rlc$.J,3#fS.SPF'!iqVg@XcJkhH"+NHHiNl-%K/EmR`9%0l->niq6kEjDAOVH@+bJ6_;$:r4"rG(\=9BJ*9gR@`eZBAbW:B,SonIZ8g1)b^cTml'GX)r98WLBiR:_Ok=aOd@L\nqbQsr[2o,9%lVcJ"$$o2ipAIutHOP6?<VL%W%"5^f)/Iit:L>%oBD^X#Rnc]Hgs:[</`dLLC8"FI[Ijh`>[mMn2O.DPH/%+T8um$7c:bLe^8LSc%-_5DV[#eS`>NPSSo@@/1kW-*)\Z']e%L5.&^YLl4T;&$I1bpU5c4qIVRCOi(_3mDB.mKF66Ski+"XDnkC2qk=5pP8OkO=T;=?3cc%4>"@h'lnHb'L^u'0M";7V,o\5A:CjJU!9Y[0@J]B:!5]<g8#3*^ACV/4(r:S=]=b(C!<5YjRk2$A2N(-']2qN]uf'ml:V?W[YYV*%G8<?e=sc;FU:m1P&@Ei403\$1\_e36Tt@uI-&T:,5ADTDV>PL](.=D@$Zqc>6$3@*<LKe*2C/rX%QD]ZU=JMm8O9^>q,'5=qL.0I%i3f2VmlO!\X6q."\HsR>`4N#Q&Z*l7*]rl&l956df\nQ<kflJ>9de((_pe($l\`^mTgW>Un.A?9-'\o`MT91nm/B\WJ8msi8eg9I%F&/:V>XfcaUTKT/XhnrJ41Z[dp\=XAkZc?$r-9i!+3>QNUnmfPooAm,9iU<Qr4Fj2,n0Nnp=h[`KA:tP[uHpd'$Jr4ouZ44gumbH%K(rG`buW0T:`n"b+ec'H1+OqjrWj(:\_C&40Fqseem/luX\&mJlYOKe0sF\NduT38-7+0EBLY7+K;uB6,"4UMA_?6ak!!P!2#fQ.%N\'CYf+BZB"=dVrFe<m0)9Wi:kiXc2k'lK\F@aXES#AEbA)q>qKKdL.]4O*`5<pNuqQ]\SmKBeZ85lCWIV4c-*\:t\lcP6TZ11Of%@\IQJ^RKR:keSHu&'DK2,]cTW)T!IZ.RsC+8)O#%6_i94/NCl<2]#X^#^e9lgCHd5nQHLXYNaN_^;?VC+M-c*VTs&X.JH1F8(j4F%H+uSLAo6B(7*@_*?h,U%\fK4>]XElSV/>)#]0cqKlZt>'p!A.0naflR2Q]/ZCR"72g9L\j4uO&JW9uKc4s@4Y/9137E3iAE+<OR+%Co4[CCMt!%<[kZJ@&q4eH%Au-nQ@/VNBsSAY@!kC6jjpeASZ3&pc]-qV)TQp<jguS1i<14AM7IAQd(XC"@L"@M$IpO?4ZXtR7?OK%(IOX*TqteeB"%SN@#.p8$5JL4.[]!]F+0D=%bG5R+VZJ;eVB%._o+q)[Ca!+0#(9oZ8t+C32kY5-E_hC>B3VI\54""j,V]EXu>o#%#4d_ZV7k4[A^(N'W&_gBG->d_i,U<>(R1%&ST(GOc;7fX>Ch1(D7t%C.Z#u"4l9(Nh2>N6'Gf(Ao=[jrh$WQ0''W6U'<KYi:+%k@%#`T[H?g293'[>EU,<I6%qhDNH(._uj)o;A3VV'9pFj'*KrS:A'W35?/,FIc!mtS&gF@s(M@7d'&+A@KEFM-jI[@]PBMtq]$Ms-Pc%dsd;?J<$uY)N2RK_6)bd;3XB3OTF-<@pGJakt[$V)ZeVdoH7a"M=l_k#*[\<HYa=Y4k^G[CO%f^f^58]CNn%lK]HHUOQ^q9OJ1TH%L`bBar^b!KfE>DiGC<q:<k3MS1DODm9Oe"MH"f,p5W\5rhL8_o"E=NFhqUn!O!pR,%e#]NIBnYXJj[HCr_B-t,<uF;&q>]Rc:EU)%8>P:g`#Dnj`X%DR[elQ-De(gLdVHR8_pn@M:K>>8/8/ij(,a&VpSks,4`k#9dW@DD[K@FTMOYj['-LKgH=VdT_)RVsP4J\FTK?/d%D7P9$Nrd8<i@I^s)t1gj!"[n-T6V2Da.aTic6*V4?U)k]+4Y=BE1mMpg_2+>p+JV3%?'?Jm(e52<K-c#dX>?(fMtQTSZV\Y)80O#%3oWN\s.PKJ=?Qj03-Ps-=90`iWXN!n4i6cY\3B#'jh)qSlSn@L6(2G0.:e/9C$ij;Es]Hf8li#rGkm1ZW;,6B`p]TW,b@T\Yc>s,%;DmJ0G@=Rj6/V3OeF^bl])1g\Q?@+Qflr#MZ]+P77iSa#Os]YkoVt:&qg@kL_XNO\/-3Fd?buB(lgqXg1nG5</O;Eu%-^<c^baHt%%Ac"4ao4"TQpuB5B/6`A.(pupkqII@+hOS7F>PqN)eAQ+@3)&UIUURpf8)WH+L.7rIn)IteM<gu9;H'DV7iIOnc3tg1qC$Wn+h^<%:s.PSL!K?[3e6m]ZoPVunEbb(JpHo_dgm2:,2)IG/lInn`Nl^M2'_SHJ6F*u`])lrf'Wm$Rr"T4D`6S_Y4_IUIgL/*h@<'9#hc`M%>6.a-kmcpA_.[:/;YW*!]/uRk>A0oN=5u"N0oTYT4,1Ze@"CUG8-Bl_B7uNWJH_&-#O_CSOa5O`6_fQA.i".@YV>C&2[akgCT-@A%<RI3*?3RuaFn"fGE*N^j[-W<YI%d;4;k&DbQk3\\/9==-[*DaMa.mdkjqE1>m^O;I$"i4q:V67[k,p@,nS#WSG_BmL*pl:=[,E5U%R$Wj!d3<EL[G)N\)K'uleC_!MU-2[(5+^0R?88%-oq7#`=h]o[$a^mlKDA!`GTBpj'U"alK;0-ld>RBY6mJ:p\T*.F(LW$TEs7K[%Z()@nAe9q,LTCYik=<pk0t*973``i,9T:%B1VR`R_Ui+(%N;N(LE&s6gBH<U\#j?]VZ9g]J\=1@3#J7./J()s@67ICT&(X`0\e5(%hF=[;7Y]uQA5O"C62S]sH:(ZHH%0ag@#NEuPDJ*8<[LQD[g3C!ik)oC:OGr7H2GHT*K/Ac?H!pg-dkjAErRq?I,EuQ:obnjU\BLn%-b:sif8F'"1#r/0?4>j33PG_L6%'mumgmtghZ$!3@8C6$B!*>)_l)@V@Xnon#nYf:Zo;6YNO]QmCr6O]4l3%/e;e2T=d1)7J8@U)%6+6/$,KI:]l[^6cdOq6EI3$MBqmpVoYui@0IrL6J1)jcc@Ct#UiYj)gb?R/hkWdOSR>RsU_8bU(Q=-%_+hQCU0bq"Q/.XR.dl+D1%^YsN0j6U%BneJkG!$f2YbR<l));f=95h:GX-I1<STLu$QWTChl0dq#bCWDl>%U0nA[cLGX8=uO^*@'H0DSGdW6nFW\hjX=j)deH\%MZ.G:4D4kX/@b*-I(@OLC9_dL6k3'sbj1=O3EM*-6cYZP0S9k-&ho%[]''R67!^sUF?N#T)0Ef$Nh/TSSO!M6K&aqG,ISAR5t=E\%,NmEBB@,%B_3&g&!f?IV\tElU@<1S+1[*KE*M_cD7;'u(gpb[Okb9ls^lOI"LX,@_]_eCTf..*PU$M*gjR($5L*S;`k]iu[DZhYQ%fu!?2J4fHG(CsFV/4Jru9$kp=<lS+L'=m?VI#?%\P$%@s^O>2X(B*))7:4C7.L[aRh\9#Xp3%XV7/o*VjZ/C=#4+-MI@6'i"iG,'%OG<M-Fu^Ul$JL9s+2>bDKB:('l6i^KoHq1qB<K+)hOgX7De3GrTi79Rc!3[l'q-u";"RPO_`H@U@8$TJeH=.oiK<n%2st:>kcGu$%PK*TihAF_]V89Wm"QYHs/5D4qlkZf=Ek#Yh6+2Aujs2Rd7[^:9q.[BqR"#+PKPq$VL*;BjA"uq8L/uMQ:!:/,i*#GQZ['rIqWW8f%T3NfU53r_rc5/W_"!sF6*%8q913)6u3fKXi_lY"=[R\2l=Nc^ZEQ4jb=c^5hjg9Ea,j=WR0r;dLPOu`/Y'tY(^+?M8TPK?G^>FB&%dK"Q?0@BSKPFb@HnC4h%Lct5^Nhc*JoJ%6'dY<ur'e>uWcQ;i^FqI]_]JGoUiF)$GCPs(Sd+E@=AGsLb-%&I+4CnCgA>8kiY)3:d%IKPT)Pn_]J@usf7Rco87lZX%0+,Tg!B/Zr3(;3qC[R7B6il88T2Z[N=@iB]%+!7%*a%rGnKAp[@%hI"?UC&*h6+/B4)rD^k@./Nu%40]`HedW_fKqdeo*dSCm4O!\Go\h3=9+R+4kKb%1ha1+2g_!>Lm6cb8ge!5SGm4`:_T%l"iol^I)mgq*&G)Y(osJkeCd>p>rZurh%n>S(]Wn8>&Ql2L[j-+hS-ML(rMGB6(GTD7qE)9;6V]4?^%ht)l5[DB?nUG_0(*=6O`KO6EkoF-(h6T<`1<4Fq;#rC"jLNh2QjR4m%MntR`F#YWOD4hc7a:(.?9QKEfpDV#8G=Eq64!X@1)`f2WU15?&1:op!aETk,\i2L<)&[j;.6AP_mNTZ0bjIH6&0Vao@n7Km3rU2r%4=/M>rF]XRERN3'SrnTSCA5acLL;<hF*_l`UGf_LP+L:d@W!W'4gH^OFoAtRG_>+kIX.kh_6SG$Kt`!j5<5Gn[.]*KFM'\8@ZFVg%-PJ"QPY^O3oZ3tG9=#jE%>VQYm15naO?OFD]-Jkjkatp8o!r224kOm5^p_q#AkGM\er-q_&-Od]lDQg;g5DI(m@.ADhl(`MXeTo2%#&+%ULEZ9J#!];0R!cEj[A:(i_Z?$"P>V5?_o9j+(bm+mk?3$bieG`"$-@rA0I(_]I(8*N_/\YUp%Od4aG8eQhsdT`1%O:4T0kA3%5$U@br2Ir#4!2ap69E@2)L5J@k-9o;=V'=mgr1GA=rfM4$-5Tl'.H'DAM_o/aF5"6HB>L\=0/.5J3r]/M4q6&0qO(r_rcPh4$uE-%G^hhcalJ&e%&)_DJ^,HnGRTc$_C*8+h=1o9f::.m8NbS%+_$o!A`sERHNI4)>c&[rBEMi\!SOuk-Ju27&WRWdK='Zt(AgM[Ks@-P%9X4h[I1igEQk.%HDEb>OmO3ni%>/^H7BhL0,Cp*Rq<^6V3;DjV!KNPh/G.4r60akN5TPq>(2ki@bl>Wt@$D`Pph8WbN7?"g;d^O.%&/hI4M3l!aK>B<@YJucgHN,d]N)[SJNf6rY(E5k6.c;1-,8IHX1K),NJaT/FFk&:^p2!h2DqT?(Ok1!X"3g6qH<r-$DVJ#diIZB\%nYa6X[`_cOiP[bGE<bjKVSWL0Ctu"/0uoP(VSXWg1GqcS>gJFd+]I?o"%+NHqBfrsAZuj,$bd&_rfrV^oBHC47D9M+6or>V%3URO%;HMMB5gLn(#h_btPHr+h7gt0V-1tVM^aX)>c<$L2l]iXL_b2@l#q(2b5Yfe>krJ'Vcon>u%+#6i1N"@\%gd(THpQoKdDo;dZLUtb%XT"O.maT6dq0_S>[#s\"'[#V)p'na]]QdXqDreC0oA.8qp9d`LbjE4m"D9=;)5ZZu3ES?*jNY]%a?*Tth1abAk+!tCHY4&+a_o;*%7gJVWZUE=@QqOWYRUO<Uf+AmDSV_AE-Q@jpg$O/C4MqX]eZOQ;I?)OUgKJ\FUAk&6QKC9!W'ArEY+"L^)Ti@oj?C<2W+7hE)bP4$%AbeD=_p4^@r3:_>6Sn(Hm\99t^8!IMRcij"7+m!9qmDK"=GC*5.[TYc3h0mJn8:l;MtmN=e^0YT_MFfUW"Lje8fiJWHG1*?qS=JE%@pq4^pS5n4'q4T99M3a9F5I<17@E,#J*[+%2!QX"%;E:gb[^\9)a2s:O/JJpHSuMAo4VSRi\&KE7,;AG'?sKmQFt8KpYBmJn4dph%d4a`7a*EkR:kqTmOo$-0*`l+1>9jI.%o\F,j+o(uN4en%a@kTG:gqoH`%]*o6/TjT+GT-_@3AKsmM^mj8a?&.K5RQF@*(?K4G(7_%ebWN<,W<9W)%biMV@2D1^R?j&2I0-3?-f&j,A5I/9mEqT36.@[(R.Q/lf?0=ZK]6X/'"&P(Zm<iRnYiiXEElG\tHl0J0p>E:$2fq%BJ,k-p;`:i(R.Q/jC(O$V@+;$-cV`P(R.S5f3ZL`9h,:Q:G*[BD*,IJ\tE:h0b6(CCq?:j`O"-*c)(kT'chKV>nBX8M4a<Kdfm-d%i5rt`A^^hEdR?Yu_dq4"Th5`LXFE-6bSAtHZg%Cd5i]m2Z07Qo5`*J$VMd+4;6oG<Ep:[1gGlP(Jo^+-Dos"FRk=t4DpHG&flWBZ%phEB&cH,M.F@!0Q_LE]]aOtZ$\TE8f'ceKf/uXIJcKH<)Rng+=bGC+UXpc%8bk.CoQ1n^nl%1DG5LY(SCcX4B&Hfh)N)]6G0OVlm%cVE8jS,/),G5>KC)(ud68aN/Be'HZXnb9Z!/i^EZpO.1hmnN"m?X;HW[I3sOG9?1UE[l7-",l"LFX!u/o-PjoaqBX.j'5S#2ncQl%$JOuCiBD;I)Zf_/3K%8pHn30D/:kK&c[Q/09^ddN?/=oCVTSQ\\)lrMHhSW$R0FVkR_*O2]K<QS_7t3m&fZ-]@cTCjZ0*`/]&o%-%9@QCSZ."rSY.5KfJ+Bhqh"a\O#eoM?Y\CRsC[V&V1_I#f@A%E(=C2qkd@GdWW;e`!ER0>Sm>X4aVlsI+BlF#,oEN7I(n!gLQpGq3%Dj5\F<0L2@<\ksJdY7*O*+5s-:8Ag]WQ:FFR3"?jFt[M:a5C*7E&ZV$ltnu)okYf[]-A%^-WUjR]R1p)A!8_JN$:5<20u$7XS&0e%j)=tmA]P"Z5.eW9fF<Or`S-4iCGuqo(2$-]o_rmtq8STn39VBH>fZbe7aA!P=D4$;mO_r.$/\-.com6G\7h&]P;q.3g,&c+$%-[.%=^t^7!WoBPpb!](1/>gqi\lfQoA2;9\o[=&VC:PWA3^DDB!*n1]d%jE`>eem!.X^k(c#%fk8jkuWt7@X!?p3YcAEIs#"/%H36!.^%^Dm)qr'"<HA)'J,kW=M!c`">8!g[hr&jWU`M[JI_me$L']Oj.EV0'EF,Y"Xd%%PBm:Ku^lL6ppT6f/>s_rk)2El/oo&oNG6\`&RM%=bP[P2i&?+hf(M^k2VR!6if7.NGaJ62r'C3;r.Lal,]@b_Td&8)t(f75N*uDpHdrfSd;mcY2?COR#/4PdG(/MqQ]pi;8SipgpaO7%f&$H%DZL^Gp9iP^Udo&]*fM6q*F['M^?5j`kqe&d`5OO\n;2G6T$9,[kI6Z@ntPh+%\DRl1qV+EL.elPbiF;&IBh#cHCuO\^f`X8%7bD3a0Gus/M;M^N1`Lm,fKdVSJBC*Gdj)--8"0Ud3*$n\Ds<Nh,KA,NZ,W'\ERU;LP*hipU&?O>10BS&p#&D834Cq21^l>r&Z851%(`8"`a&g?B^<_gr'(1/e?]OGHk_]h1a5Z9lh@+ii<VSRU2rhI:Okl6\VB"2S2A`rTP=YEj$d3PWfnL*=&Nq]<Sj<KQNT%H=3WfN0%Y\um7JqUp+5KJ*(?9KrjWJ/UPmT"84[X2%[T0GDED*H9MkhFZCamH^S03>QL[>?*lGjrYS/2?kSPD4:kIOZ$(jMQ*e05lm4W@I@"%CeKJo)dbe!Pa<)UL=cEQ?;a.I.V30D/G%2VS?bpH&+\r7S$7#WSo?YdDX$+J[jH#HHpk7&BD8Xt]O]p;mU=:,Uo#0%iV@G`)1/qH%mBtMn=cSp'ot,N@C0DtT`jpsko+1:djT=:C3=[3I9r<oficA3cgf"@'XXVG'0E-mt:*smHLcX:^e4MsQ;]elBmt0lohIS[o;X'qB%D:L([]"l).'[5IFeXWf_O]ZNn]qE<ZW'&BXj^XNB&mK*o9;7nD[D"Bn],(0^9gI<5L_r<I-\KCn3/N<'B"Y01`OOYLA)(P%)P,U3%1IDe:rBk&nidb76_HA>kmVA"]DMak:e/<WeH#O2@1SGb+CK4c.'_L]GG=)"cdoi:PB^rFW@Vi0(S!DQ;O(KA[@]8?6Y<I;ZqdnU&%gnhtZ((j75m*clC-(Mq7h&L+#<YS3CZc#5`9/C%D(?Hn$V?rm,.c%;QH/2J7j>gg5H:>>f@OrAiaX[blc3)u&FL0V4.nn=Z2oNUm%@=%aS,i\`qkJmcf0J7a%X>Gq`lc0X0=cPUs-s"?"/&ia>M&:g^G17/#ai0X"i]*Dsr!TUu%_Jtc"'lu.(qENcHnmZtSf\U5,3#\T%-3>[YhKf)d:EK)PW>Ii_V_3?WmJaS]`_IekN]Q:'rtuE?<5<s&>@?b$m8U'&p!%E9S&s`g7(-KnEt6'ngS.G4N=h.sQjV`P+!V@o%SfL64rL+X'.]7Jb&[1a6SI4$LdOToA\n*2q=nKDIIJFKnWIV)EB&d;Mfs>!F'!cts4G-2+ccY?W''llE3D_$rNVcP/oqVtN%V>sW%;,?IaL<'FTRfhlZb(6l!H[,nB!VAe?"(qX(X?=Om:QC\D(cM](mg\Vl-jI7[05rjLln#r^3Ins/oZ#,WN%<5I^+t-Q@,)a;(h;W_%/ASbUJ:1JUU9ahY#WKH)nmBO0p*b5"&,q,Qq>+iHT<,/>Qh'f2M./T6nduD=o+,3NkIWD3+1d[ijF6/E?ck=K/DT`]o(gU0qe%PC%oCQMlfVNtHO]#FE=V7npk,/13:kRTi2qZe[_qs],];XRjrJ!KTb'1$ro]F+V=jOAAoo#p*m-+>2G/nY^<31HFqOS-RQ@&S)DtP%l%^N,!4Lk)#6U$hR]$J<>"I_K%1`is/:kZ5H,1:[VHXVdYO2;#TkdC8t3I"*HUf5J$AbII<C7;(Fb.V$!?07(B^]H+$Nn+DU.?THiR%INEk"ad<Caj<<sa'8_'%*F2W,2TWR\d4H6%Pr>L]GC$;sN-YD)p\I>QG&_^lpUf$1rdB/=kIcT,l8R4@HinS<_>!JZ@Y"T=nD03W%<Wh.CfABemj'KLaoFs%_5Pi'Bd@1L(RuERDme,lXV<:moaEE\HCAQcP(O`>kE5p8_p\I=6KDi+(`fo7NqoZ2*4Ts[-2mD\)h!5as%"pEf'2oNCY!E^-6[Jo+YqF+oYF!"cUHi9[Wonur4)_CHO(3QZ"p1%UBf.Zu$^I3AZ1CV%MDnrH]Z"7(]\,+):A,Yig)_DthH`peH%qtNXqf.Zu$^VT?u)qKE7p[J]>YFcVhs-URZb`os4oa@3^)sB\\=SMY\&#f$/eml5A0D\_a5,6a)ambG%qFNU^O*%S_5c6LLIBT7r%*RV?f2>hlMK?RprhT%R$1-E8#Dq$pOls@Ggl"mr)L@/"Yq-LfqB;^f>Y@$q7QM4.WiU?FI8fn^VXaj_oW-eK;L[AX8nEBWC71\/O%<]TN[IR+U)\J'"6Hi7E6.n@8(0@oR-Omhu/#n/u+qJdu0hWr3$2Xja3l*U8Kme)K5Le[L\m)H]i07(T,P1W>"qK_o-:JMB?_t`Zm%MdBZPF#m.aHi9[WocrYnN..rP@jsA\QE5oRITB&nTQ@UPm2SY,mmWa69\6^:H;7GXYjaMD[dh*+T#?/t7@uaUR><l)[FLT(F(r]b%8^2R.Z0,q%#Y)oVeL]RuLRtd7I])#Q3Zfg#XmDqImgc7[h"@".MEj@*C?f2D-`bHL;RtDkQD(cPG0<Eco`t6P@W$AZ4#=5=Z`.cU%+6Fr#IQ+CYIANs=DpKA$cLPmfqV^T#eGT-R\[0P^n`h*YYHrT/G08Ut17gF#^Fn*<B*[#<a*I(!r4/?"]hMeo1Igo\`;/Y(,5noK%?b((*en5pd:\ISq^!X%o;ceb?1K4/:QBcp2gY'^HISAT9c263-DH`R`\TVtAG+$Lu5Am:(pRfY)'n'[].<"Wk.cn.k?"M3J5&Id$%h:Ztl\O-#<R=)AJ3p+WA0i%s8T3ohp?=ieXGCl[)rQ2H/pJ&/6cCGAMp%;j^0&Q(]\bXj@(:_Jm(2k#!:\+6_:!_o[p32.BKuJVC%gRW5kor1o$9g<5?1UZ8bbM2WrWCAt)g1=GDhL?p=ePm9(8U"<XB^0f8AK8R9[=\\/8PJ6hkN?PjW`DQmj/+bCDu%T^<UI:=Ale/D%1?g<cq^mq7$^/GsPqMtMDp,P(I!oVc@I*R>3\45X2KIW=h2P[;\m0D+^Q(rg)u:cl>@VNNIX-@68E[Iae-j-7q8:RB$T)MHq(E\M%)/gQTQM4<p>c[dHF2*pr]=N<W03qn&_`(QNj*DK(Fr/5mIa,N>j,oOgld!@RKVpFA,Nm;;%/ZpIijiPE'>&gEg2f7B(HJ"V(AbSQ%J:F;"m&l=s(:*;7EirZq%NL.F>F@,sUjpRogH.L^_T^&!,0^t\bK,b"DM:<BQQPS?^[_Vfnq0HE`ZO:&#HbkT6q*@^D/K8;I_k!5%%(hmT@>,4.j9P-CPs<@Lq[M*CW=9$BKIM%jZ)lu7s%k"/K\Y.4#3%llWc[(6B-jH*3M\0eoXI-iGeCB(FT6QF\te<a/1uN5_P<a$%MY>DB;:.lKIU6gN'[8Xdr>b&Pd+0sNfaM`1RiU8gLe9s=VF5?_ZC$N`l0-E5m4n35poqn2RrrAlO[^:*a4&p*;PGt)^/!KCY"!)#%F+^7T\]Lcdm=cb2=r454L&Ap^noNd-hJ;6!o8P9a%:!cADXOe-Pe#Pt19]<%XBj+oU#IIqDJ`hp5em?)^VK60Js87lNF8[&"CNE!%6bZPI/f4%:,lY,1nnmu!hhLR]7XOo9ftlS<.JLH4&A4K/A.dQ<;#.[f_<]%*MH\Ap_2f/qr%.YER4>;d-MaZTS=:<_i*r6?GW2"h%gmYl.0DbN6)><)R4.p*7m:%eO=d`TBDp2IN=%^K)Stt2ElOu=>,p1U-jT04J7FoWL>n/gs^!#FsBCRP.mQ?%mI!=Ij$q"ITHjTBh%\?Tqd\*M#BFQ\$]Ac:?(mp.H-^2Un-+&)RE-$Nr'Gfuq=UZQCWC@bhW1K/50d0/%oAkC+9#C/uBFi-#RFBMgZka2T8IHn>F^ZLB,%D-fFNj85:djut/QVb-2)Ze8+<p$9Z;*YN@Z\@u+aZ`FF?A8lQFP2Z]D>ae0cim/N&^]iSppZRT0"^kIQbJAq&/8d.alS/e=$em]!%Jm!]O,]2SD.g8*_1sI*.c,-((+*Bk`4EIEU]\I8n93isA>En6W%I>KN1j+\Ge_3bn0jjW>g3[dRPK/)$`SHfVJdNNt>\bEQit.^9%>+K0r4.O@Y$Z3TaeUYbt_aQn@X0i)hk99]+0=MVZ_XgjC7NL77WIu4iHg93%%Mn-YIFN^D"G[n)3Ac>?Ru=\WQ-(*'\uGMWliqiR%VA?Q0+o.O/3F#0.>X%SO(3;:0WVMa7Bm=ri>0Q;Jn52n3**dE[1@=d%C*E74");g)PaIJ<O<7\tLQ7^m(Jq[rs6suI)>4tcPUb"U%YDpOtmWmi5k4C!M^AMWP\8u<Mk0JKh-]l`?ZWu157*(\k82h@_WsOGq%&/I%noPhu]DgJsDRXQ,:CGp@q4m\LrVUrgQn#h@FA?i:%eO_pJ'U<FE;$;`XhG3(W5qBYjXa::5E@ILohkjVA97!<,Jh$crjJsouOWu@2BHrIKL4@,H=p3$b1ZV43HE>"M")Mh:E2[<E*(B*+%)k0@<)\7dI\S.GX",Ijo^39gVbh<6Lem>!22O<erSr24MkB>g$[IFkskX+?V^7?_XM>X!qZ*fLf\Pgbt'fjbI`J8EJk3b/k.&6\c%?/88%l,fe#duC2%m;ql7G4q`=IJg'^r8_qpim.:2Vd-=(RrgJu'L.`?4m`l_SB2](q<sGL3`=\Qo7tM9IHcCn@b-"+;net"5SZeX%4@n!c'p#P3pbn?2<KC)Kp#WSq\SnYK/G<\Qa@"o72``lR\WU.kC$gNlh1m0F*dY'C#3U8t>0(M&:HQ%rOBQ`A*u!m<k-L)<CZFIs%hH$<E3\WGQ):8t.lon?<XWPa=7r^>O2:VJhH`K6iVs\i1oP>Or`&@=_4\St38+pfdgn)Roa/psB)Vc+sr0"UR\bAk1GMgB<N>tc-%jNK6Sa@Y;W>?b?:6TR-*>E@am;5?$f00XV&Nar(Y#;*jc@\Zm=$eg*n@r,!Q;I(!Q@TE"Jg?-V@PXFcldu+B5eqcAAqYfW&D%OHK%#'4859FU(Iap<I$YaJKJ1j$>ibV->fNVr+a@C`m3Dsla(RS,GMSC`0S"1RI2NOSN1EiK$,Eb*a.*iFn1Q/eX!>e<)*q0]-3Q/,#Q%XmAfR<XTGMPM=9qmqW;foOcZf?YVC_F'HBS0m8pc%NgUo`Np6E'K\FESa;U'5ArdWkEf9;jdOs'6FBU;fK\,gqkZnr-<n'`:41F;%[%oTN2]iA<+_YP"XR:=J*LH?H'T+,am\'fGn-b<O31)u09>>G?F%FV.)hR:=<m5/WY#(Yde9t.PQ?U)=j2E^>W&KOr)a,Lq,6s5`%r&NW7&?G7@VWT;Re(]b(kO>/8N[sMep0n+m9&%%nD)Cg^/n9_[U+%J<K9$ZMpTOVX80!c$O(hrm)WGDpH[itgO-"]bs$@U]jR5R0%"%]6bpF>s"cWt-rX/Gql%An^G;$]@@,M%o`>e0iO00L9s\>]#'2UKLe-L*!+&+Ru2Q,W.ul9VlP;9*ad^QIibn)_%'M_+.20$hm?%V7\Y@/1qYbX-W=;oIo_T!7W=1iJos(osrherQAl='5;6f<@D[4br"jH=aR"Zh6m)?f)OS*V-hP<p;-G;o`3N2*i:gVRuHUR9,dh@%%!(WioO;=XWCP/@$qbtoDlS%hgtGs16=*+\_%k#h9<=F#-%s,c,6RYCK<'5@4iV3?:s(UiNo/td)-8"FOEh:<h%2e/JrU"72aYQ:%b\I>G2Lp&^Bj;62(1^`=)Ah'kFsHGto56e30.mr7242fR9[2J?DPZF\7QImG<8E8#1T?(h57]H#G6mL]b:pJNPfc,'3O#/SJoZZ>%C2qk=&X._)SGM8C*?)VOH+#ja\4NL:4\mg!$q[)1Q0<LBX9Yt93UB:Za>*6fjsbm3N`nYf/oWq*(`:!r2&/+_q7^pS6VmU&nat3"%@fpF-N5WVCq=-$aL5]H6LD'XF*,NF[Bg69[%%5W3p2KV5NE3Z=^2@39+\C@XppEK0.R>9oZ4FCYS^5Lq5#ZZn\=JT2'0*btBjHi,%(/?0VFGC^>W\_&#iPU,C7Jf!3c,';thSWuT?eq8KT><^X-+[r8i"0DsFRD>BIduSUjsUOc.mKlW\)dcK+"'d7`mZiOT-*B'^ARV'%T.B*jPs7"))h15"k0'=Fl3#d4<Va`@\T`%g_*?H=\CpD$R")F#V&>GGYi0T.6iZ_<2EYl#\BF"VD0WM3o?T<WDYBdTp]bGW@Jg(8%_rG?a4XC&@_rG?a)>LHo4:UYhlgqjh;dp8"fg3UOm_bW5kunRr"rWIOW@dqR06b^R9Af)!XjOm>OmS[YIGFbc=fKOFj4A"5'^eOo%p9$eZWYNfd%/CYp%%[=$ILd9QkHl>Mn&t6^'SB0<C:d@Q0J'VXo?Be'(S3^:kih\/Sdq>MRq4ekIHO@u3$Thb+qg%FhY]idr0Ese%[*89A%;?'RlIP"-!d]BuP!UZ`EtnI.0b54Q`?rrHcN"::N,LZ7Qh\dA>g69Q>+c+Fn(ht^h!UBqAk4Js;U\qN55!_'_eaY0IW5XP%:;DK$mq#"qU0Xp#c!6*AVf-M1gdtQB1&E_KHEU?rN%N]8n+B<+-Bm)#$AbR8.#lO.1p\][Xckgq\.Nc%pK2-(-A2h6&jgmjour(s%jFe(pRkO$E?@50O&OE[C`^Oi"7"D3es5"c9+o&4.=pPjp&:qQ81-8,t:g$$RLg[4"G=,65.Ci%H$3:W_lVQEpbj9<]Cd2GXr`o6j%JCoeSSgS[g)Gsu@k_fd6qc.2jGWe(ndt8Ot?O>?<qh]DBf0a?gOtIpm0bE8_V2U"2,r>l756?5CLY!S<]>V)_8;#Q`+.NRM/SR[T%ae>_#:8&.OCFl_meGue:*KgZeq.K=KpFA1[;FP@IP#u'*Za*nl=EgQXcf0(XY*VMLOL9*g%l5a%V2QV$7a,>DA.f8?+nOV^+ga#;%3S0V3)US<``E_,X6IO%c'RNko-*#.-."kVjaFRIuZ2G^X>VDB0in4^S26PmiQP%B<Pg;9KY;[!+E\V\fU/m[!Se#oo&k.V:`RXR=%XCK.NHmZ#Z'0=^&6IN-4WZg]\OOXWcYs9@dNqp5Ad3GQ$MYAK_#HdU]753orHr?"F<t]R@/*$3YmucdBpqCD_A?BA\&^Vam[)SX"%OeWq`cYZ6:o%^H41*1JdrmYt1BZ;]/A>A+/P05X-BBkbSSlj.\EKfL8S[Ht$p\-O-\>38VOGF&.njK8nrX"@gbgLEZC67,Y%JM2W%MJk:80]Lo[Va$M[+Y)8RUd+S_MW4#4WQVT9FqgO2o-!4SXk=T^!:p`-UZBhf]_"b;**XpEM?e1AgY,Ct4OC!lht-2c0AD<,>AgRg%$)fDeXho\^5bbp!P6H*#6ginSB=*5\s7sV_7rTTp]Xke*$H%W4Op6e5i]-JmjaA1^*DRBkq!E4H?D9$]E6om+9s9JU0_d]NiL(DQ%FaXK5lpR[gS6TI/E<#.E,YlO9MdT,__h`6YJ2TBRZ<4NYqSk:_'KFpMBA_nCa00FY`P%hlRE1..-LOG*'5%A`C74J[MDV4f4J%c8%<R/jdffbq,D*?Z8n+j<IWR'"0obb!dc;gZM4R5mlpjLq*M5QCq;rVjcWap,*juL(U6j'jV8HD:q=#lS-I"cOS4CmB>b0M4cYAfY+%'>E`/RmBl8QG5$Do9Nj5H7adEDf[J3moJE)Ua0?XXb>kuhWf.LS+^+bR\IgkouH-MR?kK*;a3pA(>R-o`j0VF2(rf:HCgs'h3&,%%%oO3`N7s`rO;11Vl-'`qo`9Kr>er,k606u\\_P$5!AGaKS!3F7j\6n\0$ZPHEk-:2l%iA/I^QU5:Q5sSm!dEZa7</`32Xj:/e2FS%=V9_EO<J2/)SjUG#G1(Rf"X]T]8cF#8bsZ:_Wo5V5;T7-=do:tDJ!Ajc\d8e\jaV]8JBKea#8(8a=#ehn)3>`g:]Xeh"q6`%j8>$%oZ<_)%R+iMShp:0;qI.U_V($l.T$WD[99,8Pe@sr$I2e-N5_ef/4Mg6.0IhCJ<-WodW&51]<-uo#?f@Ld6,\u-g?]\"uqjb/G7,H%4eAFJQ!6`cG"o7E,RNON]YI&#s'A@NNaj@Ue$5+Ie),JRIFS7Ds(iqs'$H,:IRdBk)V&H1?)sOJrnB"_?[oh+NG`bcREM3;G'4k3%=F4mcCIrmsR/(PkEu:^*U(__@!?Id1!5o*VhqY?;mE*i-9(>Wd=nD(taQVBZ30+[U;"JI0.jSJ8iT'M3[KU2?o=mq2O:bGc/LguD%oSS4_01iLU\(:<@b2RKQBj^*s<OOQlh/@0'-,7efgtgV(4)<.8b#Pn*]JV<7mJC+aG[%mB0<aM>?h*bmm#4h^b_LR.]I+G/)A5OL%W9YbZ[$[:33]WAdKODEr+6&CKN'Ip)V**2:T?0"8o/Zi#3:QAE#I"M$o!+?>hB81!Bmb",:$b%rj0\&2iC(M+3FMgrng-f)Boe<q%j8at[l^oWuo0Obd239$bNplVq_:]Xs9]u!k0YdcV30W94?O5e^;3B>oq^2:5A''%[rnTs\n^o7K&Yj"3.'r60\BYisTJgCskJa"W%C5O%sE38\%5a0*VqU6]iYFCCm*RGq.f?4adOb(fN^KfjP!>W/3CIN[)hoVO0G:N!o?66L3G=P#;ohs2j\#P!Vd&-b&>pRHK^sQTS%kB2g!qfSg@Di^pJqCgRHqYhBpU7nS[B/_rMoI"Yh`UgoARKX)V<ii&Nb.i)1/Ao%]p-F_d&uT2\YHsb_.ohl&US;Y*)mea47:kAV%ia@UERbQ`uA'h!`A:DbjAU,o7[VT;':)oLj&(7V.U/gC`96@RSPFV[S-V1Kg*I_B5h$#O>1u6Z?dadL+j[QC7=.FJ/@tbq?dosf4%2W/ZuoO)fICg=b[-CABKLFJ''!gUU>'Y$2Hcp2130Eq3l!sU6-LFHcuDm2K<cnIm.8/ZMAOrX#cS=JgSRQX/[D>9FS4Nknb3`3so%n--<ph\mQO1,=`@c]SgTHspd',V:n!\i745>_\pc'5Qo<CoO["k?D]f9U*_01Wm.(RkSnI"P;8GH&gg(Q>aYdkFZS@ERPPoQgU1V%p$(R"'fCAY!D_&cB-(M!*#t+fY_UMfN`DVFf;GcAmW9dhfLaO0?6Qng85IK6e\he2X=-6i'eU2]odo^Z2b$s4K.F)D^(i93n/JaS%'sth(0?XbX&LC-QbtCC5C[3WI#^GHr$))<BI:Ok!L`9J"i+kYI5l;H)@;\[M_Kt1=.51;;(>FHppW?.jUTV]!@]XYudS\3$R9<+=%G_J%@Pp-fNk/EXY+]6J&jT.kDJLKXcZA8J`@aQ#aCq+42%OB1>X3>*EX[^UV"5[-:=>c<[9'&Fu9=rEHK;7oY=NCWu2O7HMlX#qt%dQNE23")L-R"^5*"KP_]m2-4hTdW6PO:gD<kn^QZ=sIcH`.D?qHot6[O0"'kODP+C:o,b?&X%sSN<P:bYU5'DFXFQj$9j=.k![=j%L;&%/9:!=M&&qio"UV2od';BCLk<a&.EIZ%lWBC?k2Id[-kA^TI8m"l23_cOZ>D?oeJQj&jKq`(MehiC]g!%^W:a4&$M+BhHd1&'%.'ujbNj^)'aPgAlndqs'4s!+Qm,oQSU./foE0Eg'jg_\6]T1blj'ahaODT*\m/1,f4tdFn\#s>bYWrU-992^rFRXEPCXCJnp",r3%Zs?tQk;]^mVMEG%*\W\=SA'G,JPWqK@IlLC1\ctJHse*8qsjgsnP;2uJ4@96k<l.:c?Rm;<`Yg^]EaCX+#i'P#ZPEcG6Xc5TTJ;k%XR=2cX=dbVr/fGlBiP;=;g;YtPK(/mS].S!%t63JL(7Yd-i!MBL[t8GB[F]LSdslRA%,W7$9>ne0,P]ZA6j-.g4s9&,dXoDb@@"$%5+*ce?<Sglo#W):R&<K(#D-OOlC_,W/13[d!daN^qZm9Pg=P(@Q(?o<T');jA5'.;X<fKdo5'?h.-rP!92Ibb'7;cgSf;95M_<-U%@oVN[h7:YQb5B5!gKM3C%eKB]Fd=X6hO^Rrr84'4\U#%VV.G+V?fLk;Ws*bhEI/F:s!g[.&8ud6U^!?6AC>Dh$]TW4]mD"P#a@*0%-i-Pa2Z\J$%h@!YDDqRUD&.%BeXl('jEP&!l1^G%Ia22>D7c(r17so6J+s+53kJDAjnUB+OHM^Men*MDID,eIe%QQ#4oN"1-\!1X%`6,!c$\PT/^heQn^D/8HRI`_B,qm%)IVt/Qk7?Z`IH!,6H@A(WH<K%5@VpG<n=?2of.=p]JnjNFWA$d_gBjmRkGO34<QB'1C?YJm%M=_W\:^oQP'pego$*)8MHS)L]kjGD7;lNWZQNn2g1kM7J]"]gF?p8GYhEMtVQ+q,%KUO1d.Hj"k[,%OX3D%IPd16n`q_*e/>W/Qn%P5?YHHHP@(h;[U5pTrPO[/WlR!U0Afs'hmn>Y:0b:T3W#EY`Yi4JC3e;$PSsT+HcR#pl!0s'PdRnVdAd-'T\Nmjk).7aT&fd>qT*%jUVFk-`JT;KB1j@P,uNYV[:mRZAPKW8_nKo\nN&(mt@D"=j;%/!S\DE;cg<*C$>oChrV(g!5AEM>N,l"4&%,+a"``Lf!\i-g0R*5%S>h<#-#4k-KAJJkVP^ssh9rTtU2#K#eTJ1#j6-b\B3i]#&3`h9Z\GHY?5WO=>"RONZaQaa!)g5+DS$1FX_2JkZ`L-,ehIRB_<e8'%R/k[bXKFMgS*af.>?*E%bh=s)jlfk'E%M(S8lc$>\nbkoQ!i(#XK<mSdSQ10lC%k<Al[#N&PNGBpg$85=rL9E6SYm(JLMF2<cKu;%JK0><!BFkkQ8MAETi2OrQ@UPpg0#NuiccC?VPRl6#>*$6mB#9X\.4gmFU\S@e$Q3W&8\e<2,khIJ>"I)(hTEj=pSX>3m8PC[B?9Z%74#6sDJB/=eTMWP,t$9\Go+6\3*FKm*#Q8T2/,'P6\8;M.luhC75B"JA.1iM>*]P$kR)]k)B]obY,Z!!Kk,*EOH%?>=*57WJ--E>%(#4fL1:)k;,0#^HF@U=*bfuSIdh'aGlDfgmBKFQQ`C)CACHK&jFj33Pee&4a8VX3RQk#hk)-K"^0JUd@.KVB2*(8]&1_B8=NkQE&%Pr'aP$q'T+5tFP3:toLZ9[I=g]n'/)dBP=gVO>sk#P!DAMSt)A1Yo.oWe_H]c+9d,hmEl%0SX'LD#p#VPQY-LJL%@lM?"'I;io6@%aJp4#b75+?%1nb^RR,=T"\6`c.]T:q)SgMN15+8`/IOQ[A4g6K#_nGN8-:Tj7V[okAelhqNaNWKBK6oam(bs[:"1SKM=H/V+orl!%C(%p&+JcM"P*:`=8p.Cf#qqtrH.ocBcbSsc*SIrW1^^c>eFkN#I:;M65_a!Q*c"8"e%fc-CI^&`rK=9g.`ST]Tp)T!_-F2Jg"`EJ%RCPs)\@Gi-MsYc5>t2lY>qX1A>qX1a?%t(\pV=#Hb7J:S*Z2;/)92%!"!dLl=,bhE$tJu`=+],;>`RLL9S+.qoI`(K%u_@=oI;eG%%ua]*7$_&j>`Mt##=bh%L,#b'^o5f,0P9u5bKT6_?C99djd=SFb#,4+@Ee#uGF@")]MP['J>h/EY;3HY^o6)4mkVNL^o6(9@+=Tj%I*D"A+DUX+N(49XFsb6Ms!r*/8)c#G8=Us\jD6/gI3jS8.LM#a3"Rd^[r*C>*>ZKLpk@]o^'ht4RMf!X+'OW_bf<J>?qf)MWi#%%%mun)'=?W<^4LVcD^ATH2dRq92\_d\L:eqIA6^D+^.Ri>8fT7OUFcf0o%22)C:f;h22YJ.<EWjHF^*WjB+:Gt=%<XnF'T1a4#JmUT%1&r3$D4C/T%atjI;^=b7f!:D\,]]iiEu?jXP=k1KiYt=B.XmB/N^D*>%Pe:4O@paQku`[n#sjZRnW6*\`E%);-fdHsjGY@uAI,?-%J5Hma6qg4)RZOB(M+LtAc!/0EG(i=%Bh2*=<Ts-mVAcJ6(]oFHC)VZ]h@(OJ[?1,:98!sOV=,iOIF$Ct^BSBe#pNASJg';HYZ"6:%@r&M)e'eR-[!`3])W=!A>XMp5]I2u7+g8D)[\[]p;Qd'61+$N\L1P\p+dhCq10:,O[NR@X!@4Kf+=7/@L5AJ5'>bG70p)jP=gR`W%*]33<"gZf*%T"_.[:N\j@)<_F_u3&0'OgEgQ^.K/J-it(LP7o?6<QQ^J<%JUC7d2;e2.HO/XM+`AIoUM5(405MM5JnlM*ZJl0pVH%ipTj)J^E'##mPC4.&M)[M(oMHq&<CJ>YtDKXPR//E;mpsCHBm1Q1@7)1r*p*1C=6K+g,)/0*$S.GF%SqLl<'Mp`=rFLbs<O&qDLE%#DPC4KSXqAM&^T)&l7#\8pjRp/(KZ,BFT]laD]4t@!o#"0HhZbI,rX1NA_%'$)Hm3pm*&8Fr\Li^_(Q8EGCXf3DWo>S8[76rjH;X%>'e%K1r.JRhA%`[B\Tfs!sAdkQL%R)-Pke[],lLd0'8M3-OCts>_6BS-Xia`:nkunVSj5BWtOUFpIb,=*ZAFPC>%HAB_5o[QjeX>%ooarpRd(f&b$`UVB3^$Z>"`:/#TOKo'I+tsPOl_(cM?Viibq!FU2c\,XUA''QHs/[KLPKG#9)S_L.?m3'fi-mcd4XUYrp`r"r+XY%9+&iC;XGbIeU<I6gBT)RN/7)D/WKAHXc_41Z<7Qt1H_L12,28V0d6S^qT'iU)2^$;KPIY.*kip+Y8rBQ&TC-C8t;=q9?n3;39OL\%'lVh5S)mEkS$cYjkK(5CAPH6IAGne=2Vf;X?qq]\A$ZH8Gh&'HUl%f!Wqm\K2\/YZ1*Y!Y[kuAj[mj[ga_#DKep/]$o!`.'2Y)2G%>\E\:hU_7:jWK[)L<R12Ojo]6\.gnL/h'OkOsfFM9ALB^+)MmFqt[>E^uG[!=%2LlW*)L*B#O<DV@aM2efb-TdOjanRALiE*)3kF%"6M$A9;nolM!E/;UAY-*ZOfE_RuuWcfp^igfqYL:YZ_,q9uU1+Yr.TmU*rP)P!^A@Zn0mF>pO7*A$lr&2_Kk?X6#/IeT,Df/3-L2%igarD.fQm:<\'aIX$n^8pNUeqW&V*72]u5!mkHBr:0dW:d7&S!QsZ_o![9M&"=(K20JWG9oRmqcY*c<tcC$hQq?a2[?s[(*N^4\%%9/]t@^t4u\0leb3?C.$GMIe5sbd[f7e`/>9"HJ<HMURd-agpCtB8fLNib^i(0I.u+`CPa$iXLWOU'McrYd3gjL;W![L16k_B*"Ej%2"6(*Obe.N6hVg^(k^Hp2/R(O0_/frK<X,3A?)f#eF;6>!B@ZFIiGgk#5U=;HGr!,-64jGWXYe$m%ofC&][4U"9=m"dQ%CDET,LX%'Tq+F%ocj(#<"+V\7GF=#2B3_'U;EWT_OM\B%]3o"C202O?4Ze'TsDALhitBI>u*;'].lMU%`\p5]lWBL)?4LL?GFGE\8)rc.BHX%/u?'9*Q/m,QAMC&r&9aoA_<lXLga-([]6nUU)>;sMs<c=KB5Kp*`fJ;4WMuuW"#+d^l@KDZo\Da(D7dVMe<jrM]-J;j@)dRRfp2p%As?-48/O$\3pa7s`]%4>_2_MoaD8.0bkXSB2(UWm+[XUnePh>5(LbppE*Yo/>UfrW0PUub_FWPc\uW=t8@L/g?pKN<hr5d4i3Z"j%3aijPJ^D]_J/'J)bb3+SK5^gbBI_Ot>pi<,L.Wid</2o_X-4Y7X#[-u<WFBb==2$[@["80c"+#WMG&m0)`7oH2KWDH`8CBL)1/u&%oW$0'&>=r?4I0T[Z@j6c6IDTh&j]bq2a#nF/6lqi-?ZoXD+lZQ.=MX@07c[o0!MPs5g\MAJmaC''7sp6EJUWO\-0Wi_tB8"&1aac%'.hT/aB;2<3DUD7kGg;p&qj>H_jCE`+tb'79bJ`7M2Rkpc'uZ/E',`b:IJFhCI#H[9a5'cgt-5(L2*aFkSH3u.DM[j"c,WR,3b6o%`)CXc,MfuI`'OGi:BV#V.i(kcc<843l6kR(eG:Y7*P<*7#7@,[cmVnlYAnSRN?"s6PURtqS$%Nd$,Wa`@9a'X',M@\-]+$A`F[?j%QJ0=4HG6Y;K>JYXeiX0&TLtu1RA:j``g/cU#!(TIW-`0'jrcmjgN&PF^`E[2&.0ofU@p@$ke9=#lpHlp7O34fQ6uB=egP8\C_jid%b;A<Y$46iO%jm#'k(9,?q?bH2K#j@WbdR`6[Grqf!fi(0M,TUKaa)kYkBul%n[BOJ=n+o4/:sQ&b2Z12W9LVe+K?jBpF7&43@a-W%W$:`.Hdl%\4;I$5UA=p)1ClcI(m3a6R@<'(=ehpfYZ]W-_V@1(Ktb's+_-*e,P4,o%h3)UWbdnMUfk.*adc!8?9\q[;W*qPUc:M/%St%;`F]EO4]OebCkI4WYKsHll63QCroE04P\n]AK"LBW.Df\XZ:i)eOoF^n"&sP,9jT):V&r^Qi8&R!4P7qQHH/c9Pq<%ClCF<7:%$DAHiO@qliXa;aq:r`!e6NOB#)_t2M`77%i_]b1=U+dnqNeg>b;j1b6H/]J"I.LD/\"0a,r^=%q'_tlQNt*"Lf424E7n<;fR/mhp%ANkXk0b`/?%Zr4n_5QdC9\_fk4irR@=5;@dkM.,(r?SF$Kk%$WOQ[DD'.>20ajRkdm@ZtLmdVS/6?ZgXc6\:B[M6`X^bKh#EI*d1%3EKJNVW\%pbP9gfRKL@;KPW1^5(FHR=E=I^;1oCoH!+h]04;'I!90^YAO1Il?lG=j2#KOh)3.G&'*UiX!3m8"1M)sWi)ir/D&X"_%F\Q9h+<?Fbd5(o%(#&QMY\*0O.*+mBCD;Mf#mO.Tgh"mCk/,Cj"L0MC5SVBA`;u?DdI?&@@4as&*>>_O!f67_Sco@LBo;4.Uo5&g%;KS9m<c'bS<FJBQ+_S,q.%'[X8KQMob@XA'T1';c1MGPFA%+ckJjF%&C/r;.h4\n0#&MBbLhYO?cNk*:U@2fheq=:[,d1oCluYLo%X%Y-jL^Fm*D>p#(f4L5N\--X0V-u.!McE$;PBVbY4&i]o%1Go<p7(#hG'"dep_j/FD(3AEQ+gmE(7FhOZ$$+-_^=Cl$^E$A.2JKH%E>7$Aol*maR5p:%C5)p`RXbt&;I<1-q_F+hU\D#!coAu'TK39;MIpo@AjN1tXJ+<8:oZm<rHNf4eN)G0PI?b\gB>'[%&S[d5W:49%_IPG1(l_/cP$q2XW_HQ(Z,!><<&tb/3T.E@/KHal1E9OGCq9mfJ4:nL=;fYbP?#&o&2hF2j"Y#0(b_g,l`r'X]qCNH77?uK:g9-,%@<h!'RXi7_EX4NC;/c:Xo%U0;Q.]RWMqF%_>RYE[[WTa'C9nWgNRh1?9IZRQ9kbHmCd!'iF^/3)L#d$rH%.RL!=,>qeoA/ijGWd)%'>_K@9CQ<rSMN03)l!g<<E3[LNkc)"556Y:3e8*;^g46bS5QXd3_uJKgG)CmJd+#U]l'4_hrq:1hpjm-6%I@#LK,1:HlA*q0F&_d%l4&IJk1J,]1#t[Rl8o<P,QR;+4YRkJ#s:%tPDHJ':Z@07K+ce[nVXmamu1Xb?(DcuOgh42GZ:OSJf*eM'KN+F7cL"j1+be:eJ-sm%8GtOm/g=%bOs=In$_&lqgV_o`/>SN%n;n8jW[!:`5QPeuA[)[EW5%=(&8$R>/`8Sp+Pm]l"HdH$qF4Br-5sKfoQZ$:Qss?ci1#IY%;XJ]o#r&q`L6p=;^B0UZ0^4miSBf_1-r2mEUT,g8/O=XK3/l%2+lZtje0JICT")j%hn2teD<DoBlC(/IH9AWN+Y9q:dPX*Zp4RDP%Z.\-6Ugbb+E*Ts"ctkU?c?,<RUrl=aWqIDE2[rMWfFMJKgDK+BRj"u)A?.'BUhr-K64cM.9c9/:H;QuQJ@S$;AdP?RD3'U;+HdtD%0]B,^+tb-99bJc8M$ojFc.g1oEl)/Y'?OQ4d48&<J1mcCCCfbf@;?BI`t0Va0'shaM!cb@i(&Ai'pi<-nMqq6*1WU26(BHCB:O$\%MnFM%`EL-Lo2:SlDZTrqlagDC8;do.OI:^QfCCUJ5pW;'0J3KgM$o3'PGH<Gi\Iu2T1@YThg.JEeJ4V=-Q=T<=fOUQ%M77>V&e)7%G%2\s:br51'iWg0#nX]-:A%Te7-.ts;14"OR>2p*D+O07$r-69N0.1:Z<3G'Z%U)j^r&"*D-N)Nj18Q3#Xi;8\]$UcRdP/P&qm_F%LG=_KLq(EEC6HPVT")a[^84<hZlD#,r]mbj=0-dI]l5.Rd%`\,_o2';#qd5A#rQi#8g)Y`#*:;d5ZHo,)K$@]Qt/@M-#R1^D.\O8%DSfEdLjO2La>.%8o/],VP40U8JHFem4D,"8R:8^n__OL*<lL0_R3a[`7"Ud;UgT%9>HlA@`8>J'</jG%'([Xo(2p3"-Ap/q&lr&)%BAp(>;`-:,S:r?HTKrntRj5A.J!7f*LTV)KmH"t:Nku+H;62GgXRKG_pY?r/hs^Z:R''kQ^nc/t<i.Ye]eIB_CRQqho[aL0Z"&+r%8Ent8W&)kE7J0Z8QOADmGPAf=hm1Xs<KZ(Z2hma3]Jtp-aVB)@**Q(E2:#SbJ/PpJXgJ2JZo#&7,QWQeaY;^F"X<)F"Zc"5"]*?Z%$bi$E(UXnsJ7W:d(o9m%OLuU[5Re>s2'4iWV]8*.0EWFNO*`"^EZE(E_!l:\EE\MN3Cd?2S85)u]Ih2&^N^q`!;+"Mp;[__!uP$B%g->iR3h7\sQ=[<u3V..(S$#=%eg-&ND[Am\WPHI-Xe7&3ZJ^VNDS\>Sn"P9*'<l<4^HA>da-71h#SGg6_8r=tJu`'1;g`251G1t<%of.m<JRd\kiq+L918_S*3T%JTr2o,ifPK'L=PhSJ37^ASFa6"N+7p\ZNWXs[&ICV,2%de>D6tH^glY&C![)52_hdRc7*Iar3Gq08%-Y@"CDe=p%G/@]#N,0s$#4&RNM&WNH_D>f.0SQ^Q1EmV$__F<77Y:-,jY1;O*"b,4=2](5A3!Fji/DO0-N9=k(+Ys^Ma]>K;WT>>%5cDldEs+b:in5+T0Y.D'oal+42Tp)GjUb4q3K318^r1%Vck@25R:9bTph#g?C+&?_[6/Zs[$40!!X'iMg+(@g+WXBqR4"7o#]m^+%#hN/g@kutuR$\"68XQ"q/ojtaHb<@kD<JB0,AWG>-co[hO`<j5"8*=^7sdohFMKtu\'[Q9?5<bO5$:=A.gJV1QXJ<J3?i@DS=D97%`Y,a];rj`OCZT]&XOU^*$$[m>`P_8H3'^0d7nolh?%O@CM-BFo)%"/1a'hXC*"`u"V^@7`o>CgXq;uPRD`M70r/"sf#$lH4MID;a%4B3H@[d.35a,K5J4<jnH)_FFK$kNtG]fD&:4ibKXK@?"ma:M8aeBA?8?q)`1f1rVQ6b%2@lMp,9D0@L8H>K9&aEP^#8^Ot;1]ClB%+a&pWC^D"bEI4Xkq,AKuWBsT2&9#n%4Zr(5CZfo)%_^)kkDF4<m.bQ/7m-&g1[inJ89tn]e:q_]!KeZu.7YX2,A\ATl@:0X:L7=)%-=rpoHd$g&QF$&.2XC=eKg3o<)ub/Qot*ZjC7FmF`C'M#mqoC[[tnCKE6UW0m71*da6K"]`8,][Os!T3"^?IUn!&$t$h\*pHQBqk%LN;S,)$2L(4XFNBOW3ILHLh$65JsapZIZL62(-s*F$J-^+D]J[I-ROJe_+C+C?#9r-^t1m/jP\3^e\fU\M8/374pC-Gc]I;0mbto%*9/?Hg3$V#OsfD8@A22[mqp-gh\0JE$YT-:fE-YhqauL?2>AF@WN'!*+fWbX""`X2!ba0C4<C=`S'Q'?CTY;2;D)DC+qmi"EWm<a%=\ejC2D.5.-*/#Erhl1.#),A=#(gYUUhWounrf:*o(.5lFB(Vt`N::[D+qu25]Z4u`?PEWX4ttXm$mCaM8oK0J99qfPR!lHjUDF3%D\iL35SrkiUs9CIhc:IaOaGQ#bB5hg4isJP%I8?R\_E6DC)7HRU`2J3C5<rIE@:jl#Qr9,IWj7WjQ_En[]T&"bC+'_e2#6S$U&bp%qM-*%api-%SPe?Y-fa5*0L9;$.CW!4IJ4t)<!JpL=pfN.D/EC6acr=rc2\*HZ[XG1.tglm0-cWR=DK1mh)V3PiBe(KbTSQfFZfo8%Q:ne?)^8AXN9>Pi/CQB\ca'k3$"<.U\I)FM[D^d^/h%Gk::]%.YC5T7QLkur=p4/4V;8#7aN[FJ*L=(NM,jeZ.kR@sfqYGZgk6[7%-Dn,!.L@VYW/f&W,SS`I8T(V";X:i-OhST]?1M&m!EW%Y';Wr1G>PE?jHEY6C`oV5$"<F];$ee1MIM!*SWo!mVrXgacJCYW)8/S,%;r1GDmlk?h14)D#UYCG*ad@S6Vk#t,_n6LqHq#,`OI<ot8BjpICnCmY5?M2N&S7]7;/U\)>F0_\fO1&[P,u$;jcUkomA2j8SnfXq%oSeoJPq7,GfK*KE!Z"0UZ*pH$b!_4fDYD4ghhBDI0?Ij^X\b0t#h*OiCd6aB(Wjh2B2$\gAJoWe%,?LU%4;A7mu_r#s6-_XTbgQU%qALZX5I,^ZCI\g!pe$_9%elT8TZ$+:1TL1(P"`WuJV#8&bp,\(YTt]5`]4mdksA81,A'16bLq6G5(!=WYE;<C58?O.dB01dAC7[d%<QWPE1>D/s?GVRVCD:Y^Sn%QqBR>?Tn=p\ANi7jW'EZ\,-o>4l9hPsHC[A]W'a1L3/Ep:tXg:'"Ve-!c$oH;-mMKUMP(k2hm]\cr%/9"_BQ5l2Gd:"I_*VQo$_I<8,jKQ*H^1eEGLj(PEm7ZnY@G?G6[)3osACrAoeF8.-mTC0NKCpN$U/^b@8krGuqi\kR0rFQC]B/7g%fZ`G)@pYe[;9q`6K!a602"*\meH0eD6qOP\W%[D!;Glb(9Rc2nfD`rbo5ald-$0d1YI%MkMqjMbTT9L=M]@6-?NU-#?5d^`d_(LM%b,pnh?sW3SZDn%Cd`;ZW"hXh^'EaTn/Vp:Nb2o.ilD@^gTp/3`Yk-Pj#booQ$e")O/jZ'uf0JD@"WQ_$W]V68Z_V'B'<Q02=11`i%RR<jB>fp+_WTB!b7;@[VrV3+t(>o`mW4qm7<VEPE-E(-nlU,GF<f^`T%F]m/G<9V@feaAOG88lNhtFDIm"Wje4%4OC8gE>IkRtKd%,Ir`>7<@T30eI/T/UoU#Z#XAdYLg[,kZA0]>-kS_%P-dMP$!/l,^MQskrFhJ9m5)3j3YI$J0^]`<b%$E[6MYNAd^0%hq%11b(5cW%Z35l$%('&,hqAXd%hn#%/SP])$,j2]7&0OWfWF3aJEFqr[ESA)[<,hDeAg^uKEbk8df0Do4F(.cH@dDUA#5RC?!T&I_S@Ip.`$?g%`7p5nY'ZT4C*$6E(1'kEQV3?qQq!$2T"iuk-.ji.ZL,qh#8(;>Vfdin0>eO1iTaV2c&sfca;)PC%?Joej.@3I+lnq6i)Y>Y%D1Ei%kD?=7/iYR-Lee@j8eBO:8h3tKIHp:f$no8?+t5h-WpP793#/'mAVMmJFRa;'"YK&q.S+9Pm(tU[[p15!Ruk+<[t<s09ZUqFOcUp!%&-)EjYbVEJHM\>EFsHNIrpA<>*Hmq1,O\W?!RD5q/XWaq%:O!%22>=OU3'I*)>9?8dfasIreE)I8A3_kEK]^3\,=bZ='nSJM^.:d%r>XX-?eXsd[oAXk0VuBP,2o#2M:L/R(@i__*a.h,WL*iN]:;`*,5mN!Z3MgQ-\,i\Yh<b^U%,Ag.;o%*#e,4a$HmuKQe[#pX;d9H%Q.51N]i8@JZ2F2tP"KbrqY)7[ZaAlE4A:MpZoUk*GO25amR($;gf?`;_O*37?R*X%Heh)OH-A[cUS<e70GICPWAMVL;'JMoM<S<+%WME%0&u\Ot@G%mC6)pbc%b7+Eo+DUQ-9.HL*rYUt0?^0FY%KH='+qBUj?iF<-Kl[A@d$b^MQVhp3n/ZG.04_6_++W;74p4]2UY/4%$bj7A@nic\h5d)KWqY4#;#6-1i,\+b@;._Jf;mMc(K635+!i5#/N9mE+-AC8mLlO=]CTLs);/tQJIdoqbW83EP6<UH9.ZqC]C]&b%^?W3q/kV;]<_?%/nh]fhd^beZ^_da!RSos<a)^IQ\\=FDgldb.23fjJVmK.BMN?k`@dXNA>nc2h6?t,[X9!+tjch[P#A57u4K;4p%Ea9fD0e?e1TPE:mS6nEPLWTdcp5cD]Yb9F1l_1L8W!(KM!%t2QRD-VVMCN%>;Pd`08Tg7M9.CZb\fKLf9')R,*GK1cg+oJMIBfS"%*[ND19N-,.8::*3M6=O%8L91HS?f#`J)7>N?$]ju23&Z`pnB5]>ZDf3SqUlEYWlDp8TeTQrkc7h9QKP<TX9Vih(aDY#7UA1Ai[[e%KAikfRmDE[;2nqMNGVst*A`)>K)VPT>7g)EWj/jEE^Hbd3uQq0:FG9W;i1odEM'BRn2/?)`mq]^\Wbd^GrC?,X4u2,JlPO&d5)ga%*[DP%et^hd\tUEY=Ne/S^ckLek<Qqn%?SASC7SEr%5q;1H(\lHJkICf.*KihA$YBZ9S2M_@4H[[B<p#gBqk1bHF)#^L]5M,eREDS%?\hg,F*tIKBLLA/WtWOPf'[JTM#*+)RD(2<:M&e"YMH#G<,&U/SOW7r&7.C/N(^K\V<$VPl3a8/+m28,R=R7Zg(h\2->qLg=;XjG%br(W^4>sYUf[#L9'-Bg.o8PVJ^C=<\AmL+b+hoP9DH+_84\(S@GHdJYOC>#:h`8+rEE5uhQ5TR!,0#7/gK+_r@LW00ZaL%Dj`usr%4a`$es,_jfm*!#r,kaTpf55"H%W%nJnOq?L]/5jD'Ps8KJ\5/4(RRlt6.3.L@VVkt3Y_Gs)_3r.0E"9q)]ZV69Y!L<l-#t4*B0e;%gLV=<YmfrbXkf]:!DOrmlhFL!9crHLr?oPUA9mn=<C+WdNo$4l>-Qat2J1^i>#\S)>P-?,oc<G)iqY%;Pl1&'@5:f#SQFp>b4Xlo%,c*$)P&m"63^OBAdqKUW6l[`a2`53jRSB8f,:jC)'j"lBC>9lBf\;M<7[cc>ie\/YPUKT_map[JNmC7[MkKH]`,'iK-1,+s1=E1<%X?l!_r-.aeY*L-eMKLOFFM"XomCQ&9)F"._]C`q8^J)\s(Z&5I)`?u<c'IFHZ,1##bY?'"#cA'0gV178O;N."j+5i+IY*`hQ\+$A%NQUhLAOhR`=aJbr&^&K\"rGqkj0Wi<5b;,:h`RLF1(P$d,Gh,UYKsCM8E6Kuh/+^N6#,(I#qofX%iq%L%;T\L-lD)C?pF%\,3=m^%-:JKI\SWE5JDC8=RiT?3;DI&A#r;2A5Mn@>#W>`j_\OegKPanmO.3[*'`9coNbr3>*]K<T%GXbeAgB7kMWui&Q@?usOFsk,,#kB:%GPJ^eHrU;+7;#Hss3Y'oG"Y5fJSfY3M4=/`%^u"$A8M/#qcD*%^3n#"^:a^BGA(^*>Jsl(iso[,H$^h$s"c\(]njFeJ5de$6Z37&%`NP1K;qtQR@)iDTo\oTSq*Li.b3PB^bQf$VLs>*A_-39#<>#*EUj'KQijJi&6=bqLI%LMiG>b02Z1R1HW,=/a15/P7>)$2drZJOJ%&_!64aJUr,G?jdcYHBmHOsH7V[6D.28Q-L3.(NKVmjrZLfK*KkJJT#Ho'3M=?)Z,\$Qf9;g3\5A-iS-LF&8@[YKrT1Z\)aki`/^9%dH&E`3Ud0/4RUbl/mah(^8qK^_sab&lB,n7kGs93Q7&bOP`Cpf)9&2I':k!\kT:OS//'00QO!,*ceW>d=[VS&_1@*rqqWYiqA[1Y%A^b"jE/CH5H73l%fJI&:!"5Na]Xk1:(Fg-eEp$1X].TZ-'hKb,e!/>C2(@eAq[\%*!mjGhVS-I6Oad](k80t?P\Ck;U7[0oV9?&Q%I7s$[:'N1,6uTHOc.K3OVQDAf^#$jQ!XT$Cb^>?C+2dtX=`RB+Ljn\Ge(*-U1a#=)K]b#HX6U;2mfqlEGJ.$(f1blp84c->hhTD^%@EXJ3rE`=aaK*LAKM8(V(HX\=[F[AX`*Zt5cuc*pAm/Te[eWmJ]=#3RYKO-2G<6VWbk'U+!]c]Dbkrq_K'T\QjI\%<S_0c^2ieI1%:a!k`'38u-aG#^=O!p1_V.\&`.bQSD,`Z+oGmn$t@Cq?#oj/+CjHX:6\k&N2QTFl]fkDhkVQ>>Ao<XWEK?$+:DRn3*NGLOolLQda%//ccoWEZP*h)eD:JY^jE$mtEhd4;l@loL4Wr6*%h(\G^Y8+#h?%_e)hf.h>>r^VI?Y/dnZ1<HqJa3:*:1^3uU$G<$.P?4*9ksC*H%?1@'Cf=hVoj^41O%\s8^D03FF&G@>m7_[+%H5ZO$330,D:3._E>+RF8IZGr1]Ygen*ooYAT=Nm%7<WIVl\L,I^6oa\8]=BYB9VVL%Ys^F"VI'd'R1k_l()YfPJuBpDQ5/X.Kt9duFm,"?NdGnMGtP629C2sgCZd#"^@3lmNG$F=^\p!o#I>fr%8j;-[?NU/ej,u*))K0C%8a[P!/iaJs$9*%B_\Kk1fjT*;OFs`[/C@=X>^?*Bhi_f#mr3DO\Spms*&\u,>[heW0.7gkX32"=6A<=gi8LoD]b_1%^EeT"/*tQt%>](\Aa+,i=1%ecnMBmW4V7,5GIMsc"eFJ:/pfWdWLKBh5aFsssF2@+"m+-..4%=>lB%M;flm)M\%&'UnN2Y8POkeE&YCO42)+c._%bS:Zm;+Y)"<i$0=$GU*16`7S?h2BJ!`T^H1@f<9nh*DW*gLB<"bP"GbEdFfVD=Z2]rT#[qQ:Pb>_Vh\*&j7#<AVYDjk[kNuY/nU/%LY^K&\DpY:cuYEs\aV9&(!@!nOlV1'*ofp\fJ[3gJ/8o'6>]kj/lLof`QimPp)MmGrY"Yqr8)>3ULiZFj#pV-gc]!541?r,A7Fe=%QDf"gA&a51&kNO.(bD:*\T<"<fn3NXqABH\=,]nN]C(F.9&l,g@4s%*q9=/`/ihkH=WiRjbsUWH,]a./p9Pn,aK*LQFJ2%Y&3IJa%[GtSaFlK[Om&ZA+R<M&NE8H?>Cs_=MM*9n`eIOasrfeI@Pt5Y=_I3+E&m`DUbPpNgKp0(*iJ?@'m&nfE[S't5UE:e-QoWbGZ"/gO%-BoJVe=#Dn#[9fX3q._f:L7>XV@+,"GJU%]?@+=FQ@DI9.lYB5_dWKL1CQf!mOo&#WAn#Z_AFY\2o8sZUm<A:`m9h'5J4So6nVHK%RL;l/A@I<2/ro,gag0**UQFSU?Da`I]sPthr&QuuS.IT;(n8j'W$8Dt.hXUk[MPi(G0&?R3K1r8\\&\&a)<t_mauHthuA-;IiX$"%had26[m^#I,5uKXh9X:=AbYLor*?Y=M$\4gM4H9;HddMT*E($HghnsX34adXjGBc,HnNKBEiLVT=a;Fe5Wj'Z8DYm9*k'[PKSr`D%Y&;t*C_k2NTlbA*f(T_\mbas&33_O*@e&8/<C?\!#]K2\WLN8qol\#AK2P:P4*1qRM+$qJ"<F]hlA=%;D7WQ;Eu-t5bLq4SIqQ[h%1q:N^Q,--f9<?;^=WZjGX-b/<6o%>KJ\6<QV6]>Cf_UI;K#U3kiIk57ku#e`Z?Wl$eP-\WrF8/g'-RZG,:8H5!ASq7;_Q*\?PuWb%8s6Mgr,+qsr4]Q4.FlA]dNLW5SHAeDTE>rt4gDSo9aX=[;fMHRC[\rii+FL9T@n4knn]RT+<Q.?+oLU2^uKXSIXY-p$G`hsN2SQc%aL+ufIS99ZJ14"2[*T&f0=8[b=<d!N-=c5(13A>2p`>KX],&S0mu,?*7pR<"ZHGpKB>`/Rn6f8!*)'^2-K!&/aGlCeQ!M9*aMX63%db>p&O_@pMd!c`u*O32O8B;M!G-Rf0?@+7/i6gm.&*,pOSZGT/'3YPKo)UI&<B"9IU>=MDmE2;k*$HQSBL")"oI.f:/uf<BUeL3m%0!tM#1b;+J<Un:(HmLdVG90\KcsQEOU/Y:GlVis7ooE_lR>8"3U1jp#qn3uLLm98T;C&93@](8-HgNrtD^:8-V8D7UAoDDT@5gMD%H'rM+OFGF0o%IDaH/?]"\"+'>Sd!Lj=C#qf'.M_[KanXcVI_t4nndFXPu(&4R9Q7S?*CYYT6D\^2r\_<Rn,@g6-qlXR1NP2F\.oP%<+t%jO$7jV\K$)h_ipu^'Baefh"!Mi>^*WJ/m%J21Ufp71Hm@pRuJb)9h7)\d#&r/$DM=?]&Z'iMI&cgl%s4_o%+Hu3CDuL/rYsj%?:Ap72gq)bTr,L3S-12PX\04)0Os&K20j%1QP>8p+#2NT=3eO,&&J"GcIKAA%^21"Fo$RFaS$kI#IaN:13n<:?J/iMXZ]CcVnH]\%2g9r1ntR?%Ni4RXLdHfn\_uG+hRr3]gGkM`X6ls0Q6\Q1Qhj,0<`\osM5?9NB8P[MM%G'#"jpsc?1QYhHQMs`$Q_M/g3Yg_O+o$S%^#as7@l2672d+K3\N/Et(3XG!D+c;U4q0CnhJbe3iq+XTm_S1O'2^0()?m#tZ?aQ)mhjUNeNHOu=ja&mhPL(eNg,MpWC34JO/:og%A@!S8rB1O/4[jKbRhU`@^LQt)^V'9sHPF3&][!f2]\Ppf?L)O!L"Aq?d>QIs8IENPLci(XpES+#'B6,A7&OT^FBYk"q.u+7OEhb`%VDkf#a_0]eem=B?T#Jig7nI`4p.KOKce?MoX5W\k$oUMJE=%4$=:hn$[3\ha8>0r<48S$GkAh7Xbmofj]N*?26fRt:SZPCKi#TRR%)\Ye$IKrN1[GA@![3iiH9kZto*X0qM=C(J?$:R1Si9lNN]^T#`Ja)>VC[RA/BmBY'f-^7aZpQ0KgQt9F,2$E35m&Zo>%2VGQP>;q%LY1sWf:L04@u:3Md&tht;c;u=(sa3!8=5tn&&\&,mJ.+uafRcZkZtE#>4QF"+QL>!:7"P0D!Yie>SFs+\Y,+n08hio$-S[R0EJVr%is!4"SbAR'^KH!tm']P#259Qi[s_$l"P<b[8[<Lp0Pl3b"FpU%,6C(o(cKh.Q%`D'n#uA?(_P]?1!])*j<j!$(Ldc#,9FJO0nrA/%6`,uX^;f/#j4dWM:$%ldSWd$gmKX$,c$$TC8<A6OgFq@1"@4R\@d,*pO.@7%0$dL\=U6t>YF[u2-^ntPolk6DFYlEm]jWcD#sm:,%edrq-Et>fq4X6i$C\^<;cWMgF8]O[rgUTGplW=^'DfC!HA[&[)LA(L.JCL%pdrqX@Q6gOIlF&![^ud\Z?5"TJi7h]NWHgbURr7os%W`L%<k(2_N`Pg1n0,q4SEFXk%L/6QeU3H;!iRoEQW9)&9hYqM6lQsa3mV@ft]OS\og]..>r,lg?INO.:h\+mlMtelArI%>UCH]3#%NWkF@QE/_dijqbur7!Qd+N30lnf!*:J*UmJ#6NNO,6>b/1dCCrXd?X=,Z'Tf)o@Xa#a.M&#oSXIL#A+i;A2bB^h7--Vf.O3*lU+f%4]gcnp^kP-o-$#Se2Uo:!DB/U=C4rQV/hPoDKa0<f=_j`jlV<R%phDl@'E;#%Ffgd\]\7`Xcq[m6eKsFL]2#J1UFM'@B57,-+,-@%"\kJT;g#t\pe8'kH^G(1DTQ#$n(=OqHmW<NI,uXI.*8IV\NVCZLK%$;&'9[(p*C,N?qILL<gU0bTr<#>*o1jYh3Yd#\J1q8RX+Q9%I2l(G(Eu)h?Rkd@MpgI,ok?s9N]N0G=mU$tA@a--FuDGlSV28L6Qi)X^tc1sOS`A6(*6))gl3a=*'N#p_1;0"IKKXu']L\<>a'6f%6QYF6LWDk]_hbSn/;YicI7]JPPj=c9ZSu4&m%%)t6\2Smh;k*?:89)T4ddpZn8@.Eb0pMLP*ug'h'i\OQ](.G0e&<5084QScb8S\%!9rb<PuH>1+=Fb`g;&FROdn*I@M;=m9,LXd"hBdu=jeQaU:r("oZ5Eo^Z*aU#Bb'5fED!8Zl8,;B?P<>I+Y'TjhjQEUm;[h]sB!\%"RA^Pj"f#q.(22[gD3QL`,pIgh"<)8)=G$fkJ;pAcBZ]X$]nln!CdOjQis*/esCJMWEeDHRpGU=EUSSWjJG[FVc>]t4UfC,mFf.B%"A]tYSpXXS6J-$^[!3?SY@)LpFXRqEN,mAR;kMK<7uZC$b3A4h&if<i3[_e":em;e_20-99+4F[Z!(urnb9@B.2"L5Z+X(B3pp's%qWt4W9;c'W]'cF_IXA@RP2L&.,g+S6",Wl[k#NQM\S"<YiBJJ"]o7QT,I2INXA2CN2`oUO.)ss-fiajJ+3s.6q/B@YWF(M0=]lB.%Q1ZG9h6FpRB;OC*f%7'O-dsGUF\4^^_HH253mMTg#3H&5)PM65_bLl^<YM7QZQT)JX%V;:U$,sMRr4ViPg4Tq:sQ8'\/lqV]fjn9%&j3!7;4`pUEgSC4dmB;[MIL^"RhU`@Vr6D`03re?"eTM]GD9k!#ksW8g$2)I:sFcL[3t<[eQ;+'o`"-j]s*F\$fC2)(ZQ<6Wn4F(%p]]f<rS.lim(]sQ(].`.V?)RehADnd%!slt3C,V8:sL8F!QphM0gH=B]hOFf'MIEc`VS!_[:0KJOX1.Ni"N6Q!(Bq,qSn?+;2itV%F(J)j%[!8p*+BRQN?^n-YU$6*od+0I.b?ZAAuE:bh)cQ9"t4M<h%N?VV6c7'S6Up[@eVsIN5ILd_H%>FS$O4I"fs<c(_k,JQ&saU%T%p5-5WQ).4p(C9b&MlLY0C+f+d4^A6Z+*IFU<[1=H]_AeKnM49N8Mp*F3]-gK.or\`!H.O11ou,I-,6=T1`$Ii5Ia^LsqDpI+f4%,(><+XOjG4R^pKLOnELVYkQ'F(?AWk3N#ss*HGr/S[CH#=HH_KJ]K.AmGK1H^j>"/8pWt^>t_?(9-/p[Iiqb#9-TSXrJt,tiiEdg%$ncSs$FJ\i'$.mZIGOA[Vc9<,-cq4@p(=&8HFs:Z9sMF.:J+'X;tB.>U\!?@aSJ$77VE0g?=IIDC98Nu<,SqS4O@>l=s,Bb$W3(l%+<G%qOBP@p6t!@t9.8U@Uo8-4rL_u19V'dh5jTO(7!>RST0Yk/^=)&=-j[cLUGgJSP>%Vd-b5)0ee*h07o0c)`9K[S'T)[`f]hO\%Zff&s+m[#k]oA[.'DVppfi2<[b;<a=5JJW4Q%keu">G.9GG+kgANDJ(gFpXc@H>]e%S$dM<#_2d'ao&sMqZ$0.?_:sATf_fG/[SA%FPcYT0n*%]TEQF&JNTGj!l6if9dI-+(cB*lW$U#]<9Z_HhiulBjJC>^8B?'%0KsF-*!j;fQHfh4[d2H%0Q<p+dg#q6=q#48=;(kK%b=-:,QkTkPlQWrbkK`]S^q%,B/+@t^(m'?1Wf/s.j8leNa\3tfN*+jp@c^EPX=U_LJZ*;jSU0>_Z!S'(Z[[SL)s3euhdeCu"!9u9%eo3B-0T2-?&kNN[7T3qkF9gB`S-CarYp_GWO"F!G$6!jZ$<5n^&dZ<DD*;JMa966tP+,!W*AQiP`rlZ2Z+d#.8k#:LEpo6ZNdINC%+$L#IDmBa)I?X&K&"F*1qeWh&Nf^d^4!ejQ)VBk=-46JOYdWUSPfXr)@abQ\Vp\L6%,_OL.ap<`1,eW!fo0Jc6isJMM+o6QN`]OE%_NjD*'!p+(MPNMep4t`sjAl6.;aGHJSdGNPNP[]i@5lI7cIV*)iNPW2'Si4`&krn\D*CR4^PMa'HU94Y(^6fZZ?=8n6/YIEm9#RI%,Z'%&DZsQ/Gq2G)a]jTA@hCD@.ncVGZG,D%417-<<_Df:qU0Y-`8ea>_;@tq!KM*(+#&8POb#-T$k\``YZ1b(e\jpF2,OojK=*!1%U.juc'UsQ=3gJQJa'd2rPUaV'S-GL!F0]c+jFlNS4-7?lJU&k)$Z[gfFeMEb7"*rIkFJ..0A"cZ[dI6JW*(&!phD%Al:8ij&OM-i%ApDp/C`A3A^TEn&kNZC1XDRk:9D*J?B(oAoYOuruI'*G"2Hf@0b/Ke_EV#8=@F)I91.h(Q9O?+o`l1@$<31XeW5MD!`b[rr<+LU4%%-"-nql2s;<9,ZU0K4i9#'D_M[JZjbiB6cOgeE4=oAjfS;i3>3OHlf+,gNH&7,HZ`a=C\Fq(fLMl5C>P/ELcLqq1;ujDJ][adYo`%DT9c^gs%sq3d:2jWjtnU[u]=hDV*fIKM?A(0tM0@&pI8#Y_X]`RQ=?i?M;FK"2"#)13q>Tbe3E&D^nY/$3$e?guaS-b261"T`^Rq%BePEWL*Mi,+E43]^m1]UP>S<"Y2q]FhPH6(A,BgC(aYYFJd9.V-)RlDo^Ab)Tbem%3;i0s?5\fW<&9o6OBh3,DEG<<aQL$CropIi%1"4AN(JtC7,#@C[G?gW4^>WRp4J8OO"M4B8S&^#+iV!M/o.am!b8ecKlo,$@J%pfS%Z&-n,F\F4,5c<j^VeuW]'7US/XaFHN+>LG%enBn<.7fpdW]9OS2q]>X>uUb&R,#d(YSFYQ;ABj#!5bT]8"LTs/_APpa'>4t%[ibRbM2b:2kC(AXTS,3'[G_hAP8n`^o9H]"7n9>%"a4L@S4IB:0ku7c5u4R6l&mf!j-6%Ho%J;+'MeI^*bcl0-Sb0<[9d:mOB!aN'pfXcImp/=cFm2+VBBmEYp$+&$+i)f7nGl=RAd<Y%"J=S7<'@C'JE/;6X6`nV5(ghB^&h^uPlt:P;'3<78Lj3cPN3$YqhV)l+A`\.`VP`].2B6ca]$NUrV%%h;Zt\A3Ja2Y4qcA:(!&6f%Od"GD01pR;EorJbUrY5UcmHY&SQhM!)$EVlG@tTD6Ne%e%EtB$`OPq:?/_UoaBb2X]=1;B@SC`9AGXGNPGoNu/!%h<^e>r'Um\#*%P1iBa)IQ.`&Sk$SFHNM;9$QdKmB\_uB-%Z#M@?fnD_`lmad(P.SUq_[mPN2XKKtPe'/QhLP2,Z'^@4o*e`.8I'ANIJpSa,WcAG;&%JN9,*!l+<)brD(^,g\B3fEl!HLo'tkX<;87[3]*V->K&kVbT7!mMC8r_bWRW9U9,Ba^dLV=<84^)CDQt7*T8?6rMcrdH4RArIVF'%mr=KR@[*<faL3C%"Yhc\"n#nN#n5"P\fS0gKE>6H(h/"8!td4:TuW+:mp''p-"Wgf.6%.b[HHBPSVO\+)4<#Xm)`d$i)h$Yep[7f%-%`7eN0QqKGJ[b_/;_ZgqN;(\.f(#/V_=orV8nT5bo,>:!bEk'=I)I"1DYloIO\PX$(d5h[D:4M&6uq%B89Z58Xks$3Zg*:SW)*+%H7W`?LW=ue):maTb-3#O=_9a:2Q#6'o/4Eh",Y#&k*@+N\9C>XiBnb%4cOL2)qhg`Zf"?NYBI"t;%e\NLX1R4R=#d7c/c3!;We[f%ca"hk/8ImB]49_#T;C?8g"3rbj)lD,$\Dop%?N!%rIAX.=;_C4aV7%p9]eqm[6%eNI?rB8[#+XB'2bbN(HL:JS3KredV&"cf(kT:%-rW^q>3>[OO;UqVBeq$\8?uH-9JL0Oe.h4AqP7*?qAn&B8R;:8bq454"-&XXfKY?X=_9o@-SuALSSbR6!Vt-h+F<;S]M?*)pXp3^%%un",d@1p%lCEE**s];l@G*-5??eA5f)&qd6gEgDNl5CP!q3Fu&C;%+KFTZq'K-8G@tsL=QIgXU4souo=54-:C:d9[T(tGj$,Y?^%&6SGcEMt5A%h,)<'c0`(I+hj6(ZTCl]%ugB^5MHA"uW^?29rD8N0YTQp1*cpHE8&M/%+-Xl>:`;gqGEopXk?s?YNlRCKr;SF*@+b%YIuW?gf@eP:%rOKh*PnUCjW1+2,:'0.@(O:>,!`(;LaNg9qre;-2$P]H[5dGY<(g"qAr!C^bF>(Y'F*M)fXaoJ/OKdKV?Gu4i!m`%0eQ]=IU>!,4Y'aO(VEccP9*cheI<=LWSK440[@I*p%spHEbh8N\9cgrV@d#ijag2agho>,2^YgnEO,q+,k*m&]NIB\d@'UEm&],%%0s?u60en;fHq_al+`h)s:H;.n7+)'*N"\"jiP`sod_re-nRU*_aR)oDZn<\;k62r7.<RV8"G6/@hf+dU<1k]gabche&Yg+D'(j,r%OtJ0s2,:^8/$FBq`b3R1ZP.t$pil:J9G(#Sc4c$JO^ktBZ>uCsLno2A%+?.gl9SH?I;,FO<'Hk-j=Me0lrTgH5n6X3)1=K0"-2nK%)i2R,-BOLVg^.ETLf"C.M0`WZ8Xh=H<UO=o?9.oN931ZJDsn>Pqop8_h_3umKD>!6Lqs%V#esT^Dm>bm!d"`uAQlEM_&sdTSiAQu%n\@G[LZ=;@AOhkn/.["n't5Oml1p0'@^9iA"Z=#5LtZBq?N/(eA<L#PHQk>.l;&5%EA]t"BEs1[Q.(LkOE6A%D9bPH85<3_cj<7h%)ZjOH=UoSmg6*d3'(nu(;kKRCpWdIo81)EJk)h8c0`J<+He`frLo)JG-;sFPEEe(cPt/D&!D$sN_AMK,8WA+/<7g^4L(LB(D%.&h%O[+lV[<10.Ob;+A`ZL4MS7J-?F"/pkEjB]kSWNKV+g?(O!t(cc=C"fNKpoi*L>;%=LU6<\,W.gWG.A\B8Bm.tWHmDGY"WSRm,o0r%]oec4JD^iEg7EAABq?Rg-R3dm1+f&MAU6]dU#(a-A$MQD[gc29\0hH3$WH%':E-$22*Yqkgu.r7oO/Nq']WG`'9O`)F-S1n!n%I+%^t<gr6iF6tUdUQ*R\nHuN7T+tV_k<&!;p5.SF_MMPU%+odj5`s##;`bSKO#he\i<]7nJ\fji^pe]k_::\bE\^NRnl;>oWpe%d#]F%+HAdYAXmN;'q*K0=#gCY8:&hu=M!q:b+X8d=jeK_RR)=Ue>YOT0)HB]3P23\K>Ssn5o`AS/E:PLc:&6?F1u\I.$<$SKUKBWTZ0J2%;-WT08E>e"Om.1.=E74c#00e?*bI^`0[=h6Qt]5:V^bX+"Jf]/J?ebuLDjW=8WORBg8<NhO4R]bB/F6;F_YktKsQQPEh$X0mE:p=%@>3!-%RVO_[%%tcqOD[+5snV<I"t&9_^N#V+^5bC3b%`)Nj8,0UDRs/F'US&K[+m%WcH1NOS#1hY]SP#$DNQn[\QHO7!4QXhd4sh%^N*;O:hE4?C+p*LoO/XK8]Jlj84BC!P-.Jg%4%C70t$m,W:<#<e/%Hc1:`HCCq:c/Q^lTO_=?'9"h>B/"QSjM:.(nb3`DHlRXd4#%!Md!,*',Tc9?p.lkc>JfcMH79mtBiiXNh4qkt2('%u9g;`AlV>'9U0DSZEgN8gLf,@>s?DUrLF`;-e2b$:QVCi9lD;>r_-j,Ir;6%`&ST#L2j5P4Cje79P"R%O^tW1QqbhW>Y.du;C.$k_XEl\?Kg*M/Ze%o\V6?M?!<29oTHG>N5ad[/dS&[H2S)fDgs+"ZRiWPYQ/UT%;8]a=`JqUDfK`\Fo/QM&LFjhj/8qAP"fsQmbUbrVh]P'?j3W\KoJ-U[Ji5$`Y1miph:IYNU#$h.hA^X;]5lb].u7LdE?Mj,ZekeQ%[\2*4)O<I-,8U<,D&q/2FZH(R'"l^i*nl=qGE-9U?JTfoK<GFG0h2/B`q"Bj`53VXU?o-JdU2lg^[!i<j-O\;S";H!h.KAs+d5)>%Ya@SY/N5bD/?Z'Z),0Coj(bp_nn>E:E8+3`a!2qHS.07b\h'_;VJo^XqR[t3Hs-3e=&?-N[jIj0fMh-W1%r>3q2:W$[p\I)&QAuj%Co"P4&OW`p%(qsSC/i(\X^GZ+p8aI<gFGa*guWF,Da?!<Q,kpV`Pi#lG.C1?(nFOTLThrk,3RF/p5RjBMc5RdXl;5*LkNYZY#0Fd%D&pjBlkRbsb=j()hm#l==6#hD+Raf:4fZ&QMjP5o+J9[G?][!nCi"pJ>TQp)5/1KKU?6iP6#L3;5WM(n';%M'E^%6_2]m*_$&YA>%J^6QlL!tXQ0*BM\D(7g3#h9G)L8f;rr2fad9ZcomkEj<NRP(Gaq1i41DE%J3S"H_cZMDu'Jo(GaQ*L,gkti&2G^?C`RFqEu3&`oD%0K-ZOd"W^`g`QAtk]%?DLb;%]-M%UeJMM+RIVEf@?-jU=>?ui.-8*&@9^?@U3>=m?NU-#RBB&L&=3d799*S$2Mj[)2[6+]0)#,j,%O6ma?@%M!@!0HEj"SE.(0;G2CTp8THpar91oQIXD,e#INEU&)*!VuY:(d>\i-GLZ2c='Cq)`KqoO$@B#*kthGd"O2;qiOcuo&C*r%5C*1-R60R+]jng&"Ru/Dq!0/TpjL*LInPIP/`O6ar5)ohjmbDJS9`d-l$Q-9^!N.,MjO\,)iM__Il<D#N#*br=9S9KEM#,9pm%a]%<j&N-7`oA<nOj^q+J9(Hb@@;Y-T\UZT8CR[^G<rZPiTdZ>b@5K6RjJILZCjtGmT'4=O;j_(/Z)p8WfriMTn>1mC@EV^Ka(>gHJa;%NWicrC-CuS(8T",aMqAI\44C)N1[k2*$u5R(D[%Z3%$sWbna'R\nV:o-5+(Hd/:f_JleEm;Y+Y;)VM(YnWhSbUEh5;kPC]p+&Y*^%59qW)e!U:]`pQ\8ou--Y2C[,]VEY2ZrGqVgQQ1I6H1Q_Y-1!^X3;d7G&n]E/I`Hnd;;)tE5E-"FLo187AY(eP?9R].WV85lZLd;j%)2T.F!P)^F*;@.F.Qisd\/S@Up[i-"N!CWGa&h3B7la>Ec]pN\5"'F3IRm0YR[,)'T*:4!@1h$eN@kf#9qg5XY<DU)i(p,!;rMG4%:6qe`P#7jQQb7\!34\kWK8`3f!O[#Q?j4*m7<RRYPc;Y3-mlA!GVh!A!YXJP.jrM15u+E*[=NND+uqMF`$Wp]aTJ6HZM>tQ8$"7U%Os3c\'K^HZfl+Xbmq3_b-@FGLaRWb#cDV9>En5Y@TJQ2W8eVhueH)DXZQT)I.ncJo'%+B@1d-pp97H._q"W"2nkkP`l>q)C\dtL)%R%K-M+F+A>";UQr$2MF^WhV$m'%K^]fd!^!p<MO@T'@<jYRBX9L[@'j5$M-Mq&X_C]_jJ6KZ*bFJ6FuiY_)'UX=ec/KqaW*E;C`I%Qb7IZ30(24-m'ad9qSJ-b'aQW[/:K*82aU;EGKVUVJXnMF@hUnnI[PtHKDR'I`:-hhWc)*g'2inZlcU<Bk(]/dgjLBVlaPVSuDhQ%<Z_LUB1-=i59UZQN+16Lfsp+H:4\J0S0f=(3LN).WtXp=?_*E'r^nHI2F6h6(,Y#n78ud,h6GF[^J\nElYFh[1\\5j3r_>o_`@9r%4jKkL2WfDa0LY*bLTr0OhGsd/d]n?<7+Yghaakj>NLNc4IEn<u?Ll]0#'><*/D2GnM=dc2dd8Iu.J]2jODM:WG]>MHU7PImdO'Yd%_=$KnLOOO9^#Mq^4epjj#LYsF]B80,gXNFS7#e_M$NoTB)a%^@9VcAe>JO*Q9V'p%)JrrFmHXp)X8("k<=?f[G]gWu/P[O3'"1HZ%0]o(gjj&,2mC]lBRSAFfSG[MF..-+Hm*(C&G:#%^ha8rE@IT^+[9__'>@)n6C%VFH5\^ae><naH#'c9V:gfIHdS[(ObBbG_&mG2B%,AhcY8C7(MlF\:95$TV?f^"6rT.eJ&\'+i$oCU#?kbLYJ%1K<W8%njdAp5&=iHXAMW*YNl&s>:3@D1ZEHYg%g=[BTj$fA&I1%&ot%BZ^J+`/G0n\So-(GungJ'_u0->,A+"4u+III(pEO7LDS5I^97fqs?rDjCMK@&=L"l%rk-)N7!CmX^li'0kmW9"9HU*&j.roL3ZH"%_Q5eQ=!r8,JuH8SPO<5L)eWWfpm=-heqjE>-#6s"pMZXWNYT7^0XL![Q;$VYh(*71asPuYN5\&eo:h4qA[YnC]Z@=Vlnob!g!=8@%ldY4@6@(r,!ToeaY3+:uMpFo<j>NTV//k,2*XbRgWF!VH@T:4-PNml3*=Xc1_PY?Kc/m-;Nq)K+4DWc?j$&T/Q6-nDPC$m-B5PLZ%enTXFKMQ,[K6&.#!Vn`\@O!q47m$1Wn6<n$>#$en+kl;9%C)Go*/I]lH(IEkU$#=lE[i4r1D/VeM?Ru[`QHVLC;keV(-s*%#@9;@%%F:WUOMA*^L+(/B+EDn%-4s.8(`X[oLnVYSQQYLB"]8'sNk2#We2P?YT=jmQHbMpP:,-O8dl'!$341RB+Y<\]-,F-o1FZc^OUuFh%Tb`IfQU_(\E+*m'Gse8b;c.L@-q3`:3TYMonI[MqU)ZsYaL-;V7*+GG'HoDtBO$.6c2@,90snmaOtL%;&LeSEFm>0skJ#0K\Ehn-%Q,J.CW9*Ian^g8_nbY9nq(32-[trqa[ZC_87bL;?Kk$7un0%_oV56E34[47,7(*=>EoIjK'G&&N07gM.kU!GOO'\QV&s$@n^60SO%KMWs9]nG;I%pH8],s?Qg#IjWN1E3&*c[X$$H'UjSjI$]*2NcKK@T3A$U7,1k;C85\NDo8p.;.8GVd%6[*dmV.cEI=<?GkSDNP_tC%DMbMMBu1.RGNY`fQ:5f&3#Wp&*k_\Wj#@5HeOZH#FX97u$)*65OQ8$6o"dLaO'Z#D6N5,*)knTRJB7D/RRB^.W>$L9Od8ddLd;D"%aVDe[Ou=agO/r`qmbRH^F^J`bgr3SENbf(n4u.07pH5`5*;fP#=`;t/BgD1C"e)#12n3i_!?t[N-V;\/R79JD#UE@gR(F(@EmKZt%_ETK34#(;!I.@p;.d>&J93gC688X/L4T?SVjB3*=O(V@Da@&qDLp?b,M(2t_8WPKgl^C_X2dX,_4l%:d![KD.]m4&h/X"cta_mLj%iPs+n$JKu!;N$+V3/Bjd2=`.JpXAcoV9.f$lS?(nkJ$#p>b8G:?[6ZZPiF2(\ME5;KLDD(&Q096D+b^&i!$ZO=BSNI7I$##!O8Ce%N\:3/[RG@8:L+6aYhTGON2JmNZgo)m0Kr:-#QlB9)GZ72cB@B&X=q*n7&"HokecL8dB[^f:Kua9T%O[oGlC(5b-N?[+O?hhTo#SB%&YfDR9RfkOlg+AW91\1@VVLO"f5>q2[n&.:8IMm3cYEfmna)$I>b3-*$hQ!-YgJ-"<WfCB"G;<i'<EfH%Y^X(;/WsQlI5C\,tDkp%MHFmdP_9I$>b.caKM\74&V:ZfbtAn<0Op[-npU16QP>8pVqBBG8&tQXgEJ_ZV_-7JR+^Dp_t8^p?d+Y*'f(c#Q5W:N4YXAA.*4Us%l3mUuU$-&%]^WI)['$4f/hLpkhs=I)o=7N;J&oq#=VB\pSk0O>9&phEJC.M&&tP<\p&*Sk2`L`k-01r0^38=Z\j^X?:KjDsG[<b)%Nb:Re"7m35)PLe@KUjG84a.46`q]uLU0k.9j?437/k3D9L8dttF-dlgq3;O3=V;Aj;LM6&TN"U]T]CYD-;+d%Ga8J$7<M1k'T+rL%i8-%=?2&BD@XR<B@`t?ZTe@o&K_qY.9(%88EuAb!D]'-P)5]A8=j%#u]pG:NbZQX4Fqd>4G<kj`@)Z/;`ccPhK;G`E9`]L*Ld^1K%ANF.#E.5bW)?f^%<"1pMo,I&3M\4t1[)"[0M^KEShl,hG,8<cm&Rag":pF]*3degsj9aRB@H'k60s8\QM:,&g_l2X6,D\&Ii71-t%@LgR6GZs)fd6D>d\T]]d<sr<$?gq%tgXf*-82M*?bO=;uQV5&S-K&kN>pgU_l:GH*q2\fbeBIE+7FK;ln;11S[Fqke\$2nrl,<;9%_QIM!$+<KafVsb.K%S,#4Yua$k6l*n!+mT/D;9>COjS,,&$'u5N]?+X>t-ag&bfNiDH_!DRNW8L9pID+A'LN3&6so6eJ3.C;7c]7%JWK5s9+iKC+kMcc/g&RX0l,HhXSe>c9<i?7^&t'tW]'hPWEo+q-;Hd7*H8j9mt(_9hF_?K%d]T^Sdc[b<q+9Efi>.9ZM[0F)e=[L%@_b!n:IgD"BdKr0jdbgB9gVR&]R7-UgR?kYc>(OUS@&m:f3Wl2dufSF0PR[MbDGl.>TAOA_Dp.+%-:g:c7pf_R*IQOXeo8<a<:n>%G83LK+0ff6PXjai5K8tTo4&c`q(^<+ZMhqV0OJ;6!]N,*7^.Vg!DALdA5"*b5,cL$R1a$5_b1$eJD1^J4?^]Hc]fIa?[6r+HnDX6%6oQ'?J&mY4H)^9cY$js)FfP(`)HFX2N@U0%AAk$p]3B<79_G]sqFo!c1<+ON\mX2GS3(<ckcU8=0%)]'=!*dBm`LWlS>:V2]GQW*%iS_fJ@WZM*Oc\\?aS^)C.F!DqfmMl!(hq`Qg[UFQ`X$&:g7B1W1B:cnYfmrT?dN_W)5B".OZVRDB?H0iY<333(V5a0,''jJg9lSL%RInQ!*]YltFYZHRfU3'#QX<S>YkW]K/U+?m14a[\6@WN8%0W"t"&=[!4<U9R%[6'WQ5V!hJm2>lN$.N]o-[!<:nK,UM"(t)ms3g)%W*9'hNX<0iaYD,9aBUG?[h/GM':Z`bi\+)DddMJ:np;SYD@sXI*&HXZ'u'OFN%p*TLEZ_*rRG^!6(F2"3A&RGa;."aHP(q7rW9&2%D'rBDeR+P?imhDcGNDnU+k7=2r^-*)hXa2%Y5IRgOt2Qr1_h=%KQNKS4s[N]WK?n<,U\c/7uUVZ8^nI?9DYG`e2eoMNd9m%\+CO5%6[JE,=g#]1M5%C!O%tLAnU.N\Jd(-k>+541L`cTr8?F4>iaE0.<$Lc7[?^[T04_Y=M\a7Fip__oRU5sC*0^"0nkc&',c_om+f-L,%KX@'k2j'P)Lk*Hu>UYD3@Wa99q?rFaDi1+^jQsF\;I`,)lS4*X)FN^56!&O0(VdWR]>%umYGj6j9L,0U/J![d@@NjjOt@M"/Rde5%ob+D=816F$'(>g'5pbCd7;_"U'Zlo5110S>0A:R1GCMKp,^j6l.&e13WuRBJV'UtO[$N$qOjl9ue,W.9Q<7KlV$f_?;f;&dQVMm#%Nlbc3dS.OEOGFO8l.IQ.Hp+;PCu!KGkQV&-9a9`$'a;/"7;_"Q'^=UG=sgS&Gj\>@:l$*ToG-pnU)YGZ*-GCR9+hM%01fh$24kK^%MbCU^*,::p[Ij#C"JW%JFR"mmc[LunP<BU/-=IIOKT]"5R4<tt+eL&`+*(\NKb?s/-W]6k?^+OLl!Mr,r5OGbF&D9ShYosuP*[B3%,^kA'PZ/8n<K??jbW-4A8MA-B!ot2MJ5HV9VElVfod+`Y.Oq!PHagY0h-4X<iMXaN8X=oYP[lqu<QQT=IEnW/,3^C)PsB(A0cE1_%U1:F9j?8alinM3ZRpMIC28/t36(B;Tarl[q/5tZ/CrYIraYTCVP/J\f==g\dQ](1[Oe:"AMPNMep5"!SDuZF-p5?;Fm&NZ1Ti$%=%9%]-dWFY>cCmM:kcZfaX%4%A`=GaM:VbaRFq\SpZpOlN<0a`BKgV7FXQ/DSk"I&K.Ng2W^rmaE%_cr8KP.VMY0?IFTUol"5De2N4%<n<VMFiQt,DuW.EpXY\VHV9;X]G:5gaYo65P3`FA.bVn)cB8SJ.5,,1"B):WdHk"4M2W8#Q5k]9?+`quhWLDs3]4VLbL)heBo5=n%KJ\s!RjYOq9V1_dEX-X;/?m.'Io0%#9<_5u95jhs,jP8e8WRfiSiui-YBoFCrm&Q'T@&/(a8$Q)Z"!H](cF>(0je@0YKtBfhk4)Y%CVIgF^VJj,704q0<tODSYO0c9J'h_ig$O4;5:m/SqFg-Ph<u20qsgCTn7L/5kA9W)rDnlVK+IQsbbH0V5X%u=*sh.GoHTMMM&8`I%QGh13oqg&S`Um\N<X=/nS%E@iQ!`ZR55=Z5ElM$Li0>DWJUO,c!^f+B:*d6.(q%/BW%$;aoLZ$\F\;'Bo?qo&4SCo63?:4Ebph]3%ND;$#0'hlqn7u[8L[,UEXX;%bKE[V`W2$dX*`46m=s<SSUj7-`O+-#>ViQck*lWY0IaePhH'/I2oHZ;Ve2Cd=!#@sCZ+<c-913@'%bc*hP?MfVt5$E5YZ^9<_7R[9*&Utf5NSd5co=%-_h'.<'_`m-UO16f5"5q*g(DhbNr[OmPOLFKa^o?MCIbp^qeY@-[IkNS[-":#q%SmAT@=f#R[4%bRVlMUtY\1#`,blSZc8c9cVcI^h5aCe?%doTq8VinhEcddSkSn%m_4ipDD[>pWTJ-Ar&o%30LH?>!1gFdX:OgEs%%#jh,Ko]31s1_Cs:>jKZ/pC!'hr)F)r#g40@Paj?36[1joWtXVM;\X>mK>4AQdeZ2C-'>?Tn(5L,3eH<^G%l9k=*``E=3;7R-%Spb%WrqZMaTQ4%Ln0&1HNckJYb2nY!26is9?PaTE]:7u:L8D9.g!>=Ri_I//J&QI72+pb?i-C(5JJW4Q,&t]"-C@:oKX3'lZ>mI[UB`n%h9;FX:-T",<#_4:'MEGL@o_KV/e6^h"f@']<G<Fl-@#C0\DjJ-&B]'"@%AZr^e@NZ'1jc#k07O)eXuZF]!;Yd;!?SDNimWoY;c0$%*X.K0*qff@3%`SSjOn@?FWSQibk,k)5`QTno3a!SEd*H,k`_7Pr>$U+ZZB4=m6T+7doW3"VfG$NcZL,g4NR\/HAJ'k[Yku,n)[A3%X=L94&iDH":$C@OB93"C]mf`'Lu?B!PU`8@#'BFRYWt7InUZuIek$uAS/;^+`R#L8ZK*_e:H4V4*.I)<b2*F;Gkqb0nPg.RjLMQ;%dgRK'/Nl[",diW!/"jr$GNZQC(1!Z][7_ORn_.VoeFg^D_#[=i!M4P'%ERUcD0;K+CYU!gpM$EkN`Hhb-n,Lt9<c!H)i@&@Ej<O^%;O=7^I5u=(DQ,1j<0EBcF)<_aJpc'L3U%]0!n]>=<5=I#.Gsd*b*")#OfNiIb]^;_J*Ef&arXjr#'edSZc'b)S4fG*bSfS]L!E8f%R0F3s&'QUhMK,h-A`5\7./_8b%Nk>OAPWI34FOVI*KH:J--r.i^3T9KE70rJ&iiE)@.(!FW;:SL<`f"E*W$^<kA*tNVnVlZ)fP]E%<"Qj/?%=1AV?81@@:.r^-R/aA4W,`3eEV^4KG4U;/Qc<R%Rm+A\_,knWCt]E^)Y,fQ#_q[,U\bQlC;Z31-$MK@V6h:.koR?']`GT%g6+';P:QQkRI2?^s2nChRb.%Q+j=-RZY[.\5T^jV7UE]X.4b"*m'8.YO5GD;aatKu`GrfC:*BT%d9*sB0/0)bj3jKb2W_.j$>md4%r_rWuRaZR>KAV*2iO9mh!<A@jXMl4JiEAp:n>d4^oLnCN00/&5bYlD`\p7Q^AKlb;VnhB<(!8%,b\jliZW*&+$rpl)');rJC&/1\%;Dh:bnp4_uJ+)-1*O4;Y=iHYQ"dN$uAVqkrML5.4f%X2W>cPLrHZ2X.*T^W*cet+haW0*a(l+YeRR_.+QQBK_]i:*u4Y\#+-_mie%0NH>AjC"@T"P*rgPNo[X_D%7pkQAta@B.r`,,6ne[E3RY@$p5<iB1Q1QRY=NEC5ZQOpRLD5(d42^&jSKB-Zt1<M6ai@'$G+*T+m-%q_p4iP*S^nrCK[r[XKMm_]7KZ46e>Din.gW-"s8)[ifljN<A\G/_PQ"djo$(H_LVl;?[srai-F.)EsBL`]Lm^O"U.Ca,bEt='hji%0Ho,g<JPrrrWu8=Nf$:PjDb[C"Stcm)OX9.'s\+u^W)jrkj>kJ(hEI<KmXs)OB4--+$P/kp/(XY?9l@k1=kh%lAtjI?pDCS:PW5$%8E=+=W$RlG[02e1iGVXHYN9J>rq#`:Kq#'BE8c[,3lf+nE`GFmos*E[WC8GeHB@h;K`H;LSG;S+l7Z&Ug/c^lEZ^Si"j"C=`;q/$%5$IlT@m`Ia\;ohTG*e^PWF),D1Q,)D5#ob!f8>L$'`?6oS!.hjGZ2r@q[BSg+[;.4*6W)EC0\rdkI7SW_rSU^.X#+o]J;1?F03W=%f4WQ4U\77KAK2MM[He:-103;W>%B[[;<$!AM-ROGq3HA:(Y%(0L-nhN^@!0;9dogOPQ/qr,aTRBVMLt5Vb&i)QQ^Mi]d$Z;NZAnD%s-Vh-<T@1^NFSZN#9!9dP%q!N.dO(&#A`o`8J)K-n%U5\#m%,uWf[VT3`I=mmR&kX`tth:W`dY90sYP[nVEBDJ/kQiG,RkOZStPu%9s2b9&rYY)p$1pBNr?=3l.(G2g,>.>KX!GD2Q_tb4DrT.E]*T`M5'-qpHZUaT#U'=l@EbCq)dA,(%34r+I[GJ?EO@O(;[V`(79`U%?W?69Rq5l:frr[E`@kti-(gQbhXi2AK?LZ`J"#V\l57+\mXK'DoF)X%gU;$H.HU3%rX:..L*^!=g'd"b,s[W_]E+&VH$h)1?Z-g\%WuCQQ!Sbjgmt,tREnef[gHG0<[gAq/al[)J;T2j]m8V@F0eO>AgTZ#U9bD/uTfDb.0hJ.p2E<pX2.]a^N!f,X*5iL3V'(0G?&u0R%oli/lCJ0F.8WFbai]bG^Wf;\uI96=T(p4_+Jp)k1Dsa0$DGIS,fhg@]]:l(g]2\`"YCURH0l<t@?7M("p2Y"p>1$Oa*W'R'NLmRc%MXTdMN\"EH]n0!I=Q\sKG)4D]'E_BDi$3B?K]j_P\,XZ,?$'c=QRViukqhQ,QSM`smDa)#Jop=EE`YWNd+R@q*DHc(5.-;A6Ws1V%2@fLS-STVJB',t7<LQWget5qX<l<bK"KsTS*f+.$8^B=Ae8&Jl0f=sLF&DD'h(;kKWsrAY@6Dc:=39V$DUbq.NeL6_2DXEKP@Jms%e<\Lao"rMRT3mh,/t>fk0tTq-JYcQFgJl@3H!E?)d\9Cc[OkliW+3B4/iPue(%^T/=Iq_tZhY8A.@JOP<k2D<bFQ1j*J7adm($X*%m';&ppPG,ILN^n6r=Y.=o(hlXADD8%r+X5.i%NBJ6_We_?;[clZ3Psrf_ju)Sj+5WqV\f_4nDqS'pa<lq9q(BTDFd?^[1AdSNujG%6YX?B-\86a%Q.m+\5oQfMM8+1??rXX;VU&`+%^[t(_A3!l,6dr\7HnGR"Y%)5I9\h[t:,S?Oq+nGrIAc.WX4uV:VmiX*)&&gG.0q%ZaI1/0G5tM2Ue!=<[]/?gA<^BLJciIRo5k:!@oqq($B0Q50dd,0i4?,m3^:7r$1POP\ShIZi=BUmAn=-2emNH:XVu8erkbBDduf9%M#GUO.$(PQpXuPMH)8mT;Qjo&q?eSL/JmhYICF13P+JT6!i^)JmF5hpY0GsL)fVDrYPDtc`uIKq'-bZ$>=W)U[,l-d6^m,J%p:f)%n]Pt-FH3k]kY>%f];40nbUn,aFT)Wu-VHaN+*V%"*L\JL#p4eB>YQc#PFM3CW;8d/+nHBrr?lAGRnL0'@21;5H1+bY\F=RuetKh3%0'aBZ`6)m[d)V<[ncMhR2$qq[kF);=]8G:k()0YiXhO)akk.8:g!.>Wk;=&4"fo)?A>EZs9[M-\a),E<_!9NKs--O)m>IJBI>*gC%QId7]Vljk?fh2YPlrQ52kASN4+8J7I/t3UQ'!e50m(2h%NrTVn't`:*3`Dm[26[+dla(qmrS!h*XoPe8?)4LcAi5@3'cfDQ,u5I%%As&]fdD?o>`U?F&kW:ES2dB.@(K]d$1oNInr:WlVQW/Op6]6sHlKYh(j06_#,p>>7*/!jXR;:h5]r&=b+Z=L=U1:BfP>)rD0rW:n%inL1i$@fV&)40^unchUgd<jU*$qW._HJ7:>Lq7Z!gP:#`9cKUBfohI_(Mg/P.u2-EH&(u6Xjt)%l!el0gu7mBdiiop&+HY[o+"9P%I[rP?Dt!Q5B,"ccT0"%5nd\/^Q1m*+%S(<'H&!X(NBYf$7iS^o*KILK?sdC/oR:#.&*1I*s3*1EX0#o\L[uWLp2c!6rH$S3LEgZn%5"(5.5JXre6J2k3BlI5Rgu15YG<#LHG;q.D3uei@S!j-`7k@&;I5,\6;s&X%K+TudQsSCi*R4alou]@d8)\/u[2i#/)0+g[c@`oh%I>?iRhVlCS^;J?]C>Ro3LcTk=iM]K=]Ut<-55.2!!csqp*)VVgle(3Q^Q"en39.:r?/FQL9c>$dMrXO-DUmD!khoHP(mO3(qrHI)%r>lN9B"cmX`O??0^?h.5d6"dHcVi7(R/q_EV@A^?[9\60m6t?&p"]Y2=jpIQX=a\gFl]OqU.06Y^3_s?G<5!PHas<o?[F_"+.\^H%eji%,@"-P4q'WX7dM@Q3gmG.RL"Uq]6uSmJ$";9q"pOeG+%j-7Y!g_!NOOs8h7'LL;jZ9amDJf1:-7`)qGM]1+#;b-\bqT<Ki0"N%,S<<h5^-E#c#S,I6UW:H_a9q4d`@5)m=^31<eXbM[2RThGLkiqkH':R^Tf^"8$TNo;JuVff;c=#=-#L_e;'2t)[YP5IJUOXos/3%%,_'X=9Ks*54$($_fo-J@G4_a%eILJ]r,A8<UcCcm0A$LN^?IFs<%1>/h1H?UQEP8[TOjQcI^L"M;W[+m]ra1kTIP*)Af5=f@bju\%GPK<^_blR6qfO"R7H_9^@3@1J+DBY@7^>?Cbt+/EE#dC%XLe8dfWRUNlgc=rnG"N'#K3_m@nBNKM<^&bW,p+GqT@lJlTI"AU;59^%$0u[#4;L]HeD"(b%8dqZ=K%;)W$E+Io5U2.fI!MN.tZ/F+)Qn=T(,Wa>nH)jnaJkfZesqj3.2afO`&m!o0Brm"'[enVh/G@=E87O%%d`^18@32F:K$dhKl($K0lO`(1t(Ur[)A-+bG^F.GEJ%1?%1:EFBg/uF0e&gD(p"Sc*<<CCTfHOa)]DKZ&#qR83LI#Zc"?B(XuBD%,EJ5H;tW=aD@`Jbe/WP!l-Ra'J).^Y0fS@CQ^F97kS\HjYeUilF!Sf]*;__#netm4"ZB^tDN<hGS'J')bY9!0lMM\X[u&Va*-9U)%nVF_Mf`3&!`e1AER%&3<)0;!:]V0Y0\P9U=lm:dPMe+D.bfpU[h7R(fFlik6=jZT_jPc,e5A`dA7!Qb<4L82;,-O;0]E6]+5[lV^%9G*C04_G+2h7"1KWBV=4P_AmZlj,&j5S,=hIs0l6=9(;^0@r'gHmS*q3u?t9a'9XERR2:I0Eb/WRn&E0?qF<3lV$MbTr<%Tc$js*%]cZ%+H<AVMpno2cm(be[9Qq&g3:f#IhtfOa1#([@A$D]M$S02jnJ>'aoQf-TPXDV8PIE.l,sA=L;uH"UVZTf:bEKYRdZ;7EnZ'$X%W0j]Z+%->YX<#QUWZOlYW9QZLm5$7/#\JJk42seW\/ONL(2V:HabC?)"JP&K/pJMd]Sr6k(u(aYHj^e6*.GUsNJgL,l5=s1bs'R)%c_<['_BX1FZ$=<0/H3I$A)eJcIh9PK4Vn&?qLE"7`QrC^_^5=J4=MGsc:&6s=s!J0=M1G"?8u:[UR$UhF+@"`-9HCJ(5neeMa]2R%OW9:?Y<3Rb='>mqL2)<(OCRg%]s;c-#3uQ75KJ/:(Ip0.9#[*]`^$BacU1\JN0f4*L=+h/n^7q,:/F(l5I\s=*fZd/+X7oo8<1^Q%Y@)lB[WJkeSLnn>INmB-q'D?K$,JCmnD7`EGd2r:m8XQ1(`>a-]<a]O-oOs8NL*%#?1K`h056.RHHtJoa)X:KITb'1$u<qNNd/4X%:cO&7<*AXXSAr3!)4<E28Rf9:N/7C"`&UDnD+fs8ntKWd8hl(:9HkbN8<1gTY;"BrDdd-f6$]`A`dNsQj[FoYc%#uZ`D:9WI?=]p%-T9=3..:?\62?@+<!;;1kW6i:VfC((:gPg(F&nJ/jeW31XK\A1,DXUCY@(G\DUs]<]\MVXAo,#Y=WcW'*.U&h,_R.h).!s=Wk-*7%5./H^#OZFPboDto,:6H>&tQ*>5X3<L+2:?ss&BF*HVV67^CtHF(sW''03RF=?P<7dQgYQX(B@\hotJR"-T?:2l^>qfOo5%Rdq]`)%,PI6RTo4mZeGo<G@m@^V:KS+AdbXpF[K#!j9<@g`V6hh:iICW'^]14p><)o7'OB`Js7re>br+*fKYG#WiBMagmNe>gn&ME`VMIGO%g[b7gZ&aPQfuGou\*>!YH?\B#=<#/-M`Z06rVWBr0T)pd3a@![5O>t8Jh*30aq=M1YtH#5EW0"DT3mg1'dZgWV=dI)<$JPOMi']Z%8c\hfU,:5+lFebC5rqAS*</]7.T4Pkqq$r-;Jn>fRB`d>4os_<6iQ!(`FK"@*uHcEhNTZq>E\S&>]>Om#Z>9>Ecujl[GF5:BE?3#%jAbpnk=9^aWY?_:f;c<f%kCiP?'jGkH-4CSW\S5q@Q-<u@OEc5U.7.,^'0gE+9]=U23duoV1"%hcrDlJ<3j-(r&U1Er-DpDD)PR4%)fI7kg/*F`:HU/sg.VmqNG.IPU/%P2&i$4ub/a%;h:4#e9*&K-)D4m4VG?`7=e:2fSP7,1n_\15mE=6aE"?h<ILDEK%7NI=q=\*E%W`L=$h-?"6#\&'f@Q.;^;sfa3TN8pI"OWR<eKe[W'r3_b:(_3W1Dm2n!Y]*^8,s%1,n8M@Gt.R`hph`PeD)?9$MmRo?KM35?I-Xi%pnGTRi;.7pSo);TJ*CFuJ"Bc)KB<]HpG.#FrD]k'P"en/fs"W8[:sra*%e1oh3Loffqn>l!p/A)GUWB.U7Z)QAB:'@kQU4_oKZ+!%9-1f2^;@jdZ@jd[6hMoerbgI(C"o+&^e&s8\`m06/eb3:8PBjehd92?kM;gf_k,bFB.`nc3.C[2qQfoo\dfit-!RRk\rj%lJp%Rs%66/oBdCpB(HAhZ6JXE<X.00b%9"1F,HL\?7GtMC).nVK90!$em*P23Sk07ntN"jJ8ZJQ7@2N^_KH>K_;a<g`aXflP^MHt+gUgB]n%nZI^lYpLX)?^hF.L\D1RCTd;p#]jF/.)WVg?W5>JCggrs;eNU/1>"&gp]H(M#H>(9P&Z5"C?F0@$0*0)Cj>U!okWV(@c1%9T#&PF%8/Ai>e-hJ)-E=JS>98]G>"-p%=n;t>Oc(+\d1J2DU>&+JaWT<fr.[ak-1>_n2a:Fc?D>#BeS,f\V`M1j+sU,4!Gt-re@G@[#fV?'%9k6F1]hCd#^P$s0B!]WV6k@I`P.Fmj]j=c0hE$NP"VW$,_??9qq<l=bd&o_X#Gd2V58,:YrSC0^DOL35UK=iUkSRLr%\->nfem0Z%b,2Er\;t(0)d=Qse(P3(D#(,D&Hq\*lN4[_b_n@oN5"[l;g'Rh-TP1-Ub)CK):cGulI:l5$#?tMqPdTOE"`\pWIdcqS#gB'ZJ4a.%8nHchr>IV":')Vk+R,I--WX<3UI%sZ)p#3((%5S-f;>Yfp>1a'b0R4mIlDAlT<tigfLSMBB>(mJ+24_@k_ckcbImaO1#:%cdl*Io%:A_B`Y%:oXA%Mc1IYtgWY5MdmUtdARh[p_HF*YX`AKqA%[gB4eBg:&oIrl+/26`i"m"oFig^mDfRZUH5ee$Q"0`o--;#8HZ%GN&\%b\1bBaHtIri?7NHenoN\pg:PLALV`SD)AZoF=u,)`toXi=k;uW)1eoom\/G[UO(r5=nJJZ#;]d_Fr"U^?UjKrj2$_s>d/S.n$&L,%+*tr5mAlpi^Y4.sRX_Z'lpd*?koJ=K;%%hRHSn=FQOF$HrPn'-jp?.?]Agl?^sZo2F?o^)d1paZ-*jVU0WqEUXG$]6Bi[1OiJX.j%XR05?a5gm8fm9?dpgV^U,egX#p<MDGVF`t!bE+L*YL#"U>j/g]"0eEND/k.jG5aYt\X\jW.gVFa_b.=Fld]1WPTDci)]#f;l]ulK%'36\Vl_e21b1C"Db5(S@7nFLdlRJ*sgl\R=nX?In".WVu=diRB[boaiX?'P.P$RKkZn-2>niOOpZfSB0o4(m9&I#6Q^[5\1W#qoP%6&JmBg>@JF1>RCL9Hra/fUPhbe\54(V2Uf*lt;]F*j^:EVdI]"0S[<S-EXTTU["-<Ep'6+)BuX6p?nqh4h^>VqCt@f\_b"Oc7d"P%m?qaS(c=LbB:>s0,c*fX)eE,(WXUjf4-AC#s,NI18uO&hII7_r<LjZU4t#Z\FVj]6=q+dd91/*oF`A.,9&C:*Q>4N5WYtP;Ib"+_%6UBe-!q!_&Pur(Kn#@BV]8m?(oQCdKX2uq)c#+$1/jT*qJ8Z0O.]3"Dg>8tsdMn'[a0DbiID,+H&eVBVaeosS*mLo,5oRB)NR&P4%(PX_qePf%Fe_TVp6qRI@>$U-oM-?!XMfKu(mWB`-oCb7Tc^)Vq:*6<3,Ijbafc8XPkgNjWcSiuQ[cI"[Bs)/W.::WZLP^?216>*>%4+&r-Wa?&:pp;]p@A`!]II].aYD&h;0Zq%9K3Mcp"@\GN&7pu`9L>bUEoM;'_:<*kK0=ur;POk0`C@kjSm0]^Sj#N_I$R5;+,ImK%C[^0PE%Qs8Go<Jbl:W`KG=Cc-[IpN7IYVnUZ]B?2\[jBLoW#n);)eeI`&g)1k(+)[)BoS*#q7h$WF@-KaL:][0TJ[pfg`]484\ki%KLUi=#Z;GX6=42gANS$+Q(EH5>`p*$+bYS@LgZ$[+;46]_uI7>\nm$d'^39d6n%,uaUElZp\8FbTob3V'V_GX*giW4X(buS<jhAW%!>C,QZk:WIjEh5gBN+#4`X%<T3p[>f%s'j*CUL&/Lah)UoDI,kfMYm,U_pH3(j"cN$DX$.6=a1K5'1Ki7#$t5lLu8++dQR\r$>hr%\TEa`L^4`B?c5:L9OqSQ=GSe&\hl=Q71SJB\b1C#nuN:\YEg2S0Gl")YkD?t78:C>L;=EeYX1`3,U!SN*1-pt[%r;`Z3E\'^>W9e%$\kTZ(Ns7+%+-]Y0MXU:GX4pu0W7G##4[tsokK?VTHG"c9#2)'RF[R7,a7n/aI?V9?qAhLp\I#X6\r_0=/B[/=-/2)FFsi,cu=dL%NZAdqKgS9%L)Jgb+hB&p=Gqo$.\:jDmafdaotr1Gk*dN*JlJ@g/KQ*7bJ;9<iup0&<LB;q6ZaZEQjP\lOqGW"11]nd.EF.9nboD(%6`X!M/nOL=jX_Mu901l`1*@c![BN!hJ-Zm[+sIorO@Wcnc.;-7EBB#6kTkklS]=-o-glP9Zc5D/+)8n"[N84POS&WYHD9fe.s\E#%Ta]bXWA2X=7@P3a?-DCc&^f.c#if\o6kk!ca#k[]=N!Tqh%_)'Mi!7Qa+1X49VgZ+Tc=_CX^TYdR#'t-*;_0B]llAJ9liH]P(SdO%R9)a"<MEgPq0GT-imHfmM1iLGY?i62+VE+-Dd;=9847[0CBp`JQW($("R!T"_F#N@*Y4)u!<]S9$]/E46R!Ds/Vib^&`L3\L`!]u%F=AK0QG,irM2:<eU,];Z<<F)QI;LLjD@^lcYBKY;VO3qeSr/nkp,NnS()%"Hn=W>G*05tfbekWC>0gUh\LjXR5BsK<L`B#?h`PXU%7.-6.FcV5F"M(aCo!!r*cVe!(FB2i.h^Po\GIl9=0bF/G?Rs08SnZ=,OVS_3'@US$Mq"_-,">P-aq\\nS;A><7n&61;1BGYq^X)6%5bbWhY_\3"Ep4c4iZ\o-.8g`pO]uht>4*(A&N,BI,;<#LmZD"KQ#"D#a@e/+lfV@5)39^>9gEb)@_\ZD()Vm7pB>lq7Kc3;lpV"$%6ItXC_D@kLS/[j>j'.cn(VMCbSo(c2OUIrN)KEENhX&+X*k(dA^[#l1,H`UWB=4;^fQ(EM-tfbgDUN=@ae`7uF[6(7Sd9?g%/%1=%P2C-3674D!FHl:\6"M/MhV<\G.bK1T9ST4p^-YDXZ/no4\jrlae"eJ'S1c/NEgZ5eCI)\YIq>(s4h(oYe>FGcWdQ:$WY<NYlBk5I%As@1@pKb3.qiSIsJ8CC\<*);NFl;i0Y0oM&h=ua]SZ;EAWM$tm[s3X5EL7Q\Ead\ELPepYhCF)`m:*q72XAU^]>n[-]#JW`QM,.^%phdVL=Z&i'.=e0\*E!53.]/)%[8`Qs".S&k>q[Q>k\P^k1Xp+Of)Dc<o]C>9.Y(mBo$o7+p('t5EeiqmEMGl[c91`%Tm%UWTq4?M%>mmN%?nii`]uR^3#mF6R@E)7Y^mAo\<,$YUd6<pIJitWa][)%g<dd87[FK<W(B9_.2%K`YRhkl=-)q6F2tgs(),WgV":@FoBmQ<^%-49)#N.@i>=AhFRPiE-BBh-?$PkGh-;b,k7!(7Qe^EZ.@6ksS!!9`J7p.QRL`>f"g$jB*G!OdF]e=45'R(p5!cUqJ+Er8e..1fJ^%ZKlL9mUSUQ<-^DO;@k]B-<D8>n)_0_[Vd=sIF#8]Vm[>rDY/S9k1D>YjS=\j-BT^IOQsOld/YG>O3=tm%LI)]_gkXLr?MD)mIhk`%U8%PcflcSa/%SeO;3C[uSm6$Y5m_h$f7s<cfIWl`=$sU4<1@?V8;B.M/Kn=ed/0?pH+'QF"aP^QF<i;4,.?@OX[&l\O^1[4YCRSe%VYnhHM8E)ub*P8nf@oTdR;Qs8Q08$&JbHlP\pE2sJb6eD%(g&oT(]d/JT*+p?'Qmi*1"k+>Y89Cb:/Os1=?kn_@JXYgFDnQ:?kjO%Nr2G]le'7)O+1Qh@2-^iO'g/7(H3_Cl6X7gC**7YK92LVKhMKG^$*a93i?j_T!aa[$@2W&4c>;3S[s#&Z`885CqKgE<Zra#_I4O[%S7YoNWO?DW2qm^C;\Oblr=3;3_5V9:IXIh);-6.nj&oN2j>LmhldeE*a%TcU8poDKQ+'udcApc33HF<a>GJ%[+gm]_/6r_(6;Bt8%"F!!@NMP:sLe2,;$<#W\/QJ^0H9kb_@nk`0K_>U?diA2RKj)cG$_IlZX:ss.`+N+,p?JF)>:Epp4u1]"IFj#.\%mHA;4b$oM,mhf%*45di[3YM)D]S`N7=!stD?P,UZ$H5mKNS>qTp*)HgFk6"<NMpJkpg$O]+J>g1a2Dtngjhrn?(]WaEGBo27fLBaW%sjGF9>bZKshA%_pi@Kri3%#T+pRb&3=_mAM2-b?!r)4`?^DD;Y2KO#$j^C^$cV[B#gSj<l_KeL0aiY-'gWNjaE+OPI/S7_sW6+0r3XV-Eo"2]q]I#%6*HAY`A05K(H.sZ)!<eLl<JQ?odWSaSJF=8nsT<rr(:kd?79)W:^">lDA_!n%apmh]i"L@Re/eRGPf5hNY&R*bn:Q!_;3>TX9TM-%L?n5B8?R6B6T1^i'q9178F8]"'iV"LRCJOL\8V6b/dPJ*Sj%?L`Tq69clI$,oK#gD4"AX-qZW[Fl.VVo;IVLQ,mDEhM+/3p'ad1$%?;?BbG_bc03bYf=866lh+Yk7meaY_1cQ$]LeE84(7`8LI$;S)^(3_JfbCpb;os&d.L4uuBp,'Y]CpO?:,8BLk`rQWp6fdD2l-m4A%'OLYP!ol%.lbWbhH9Hmp>i-7'),j[n:7N"/T#tB*q/NN%X=a$M041,&"_l`$\93fEA_Z[hc]s\P-"Y7c1J69J1hA>pq+UJ[dXgZQ%O`?-CPn<JC\kJ`>6+e>L;Ic4MXZfjX69@$Q7BerAX//*HpGfK@biJ7deWh^(q3;A^"8++bi0%Be['=IAoXeqL+9OTHak>$D0CBWe%2Q'bDQDIf]5E5'1#mQE(PEZ[Jp88AOOHmI`];r8KTq9Fe*nhX2<@fQGBghS]&tPneX:pQ*H0Hq[h.2&8?J@;TT%-O<Bf4m^dnJiU%Sle"d(6b5G=%+eKkXIeNP0Jb8H$V7ke[I$4RW29Wjh=97NF>F:QOj@Q0JF-DbO1.,6'WO!W;L&0bqq-jO:.s.<E5qe:.[E>$W3`W%>%C$mrrK`Si#+;dC,;14hAF,g7.PZ?RXp!u=8a.Ws/Pkn7\s!T?H9F2H[h8,W0n?/G0X"i9a(@*"1][ClGpBLnu/a>Te@RY:)uZ8%?XoI4K0_#*e#1<-O5#C&:&!-q/pFaA;'P$oA$7hM^c5nrT6tb5h0Oi(CBDW%?a4sH]iV:@LtA(1Yb+45pAO4I>8TtfC$9DB5JAff%NS4_(YF7ZJ3iP=YZIc:6nu%8d_Xl7$k9\_u!7Amb""\DK(W&AQ-WIJsBib;2isK86.n<8_%H'5<OW_;/AK4.PA;/Z3`Um,_QnfOj%%TGh&=sCjhd1VXac"45iL-;A-W35l0K&;s4p!nC#.@#61.tkVt`3aom=L4usHBt!SWq3ZDn:sjRZ1IS5$8+5aq<?9e7R2&bZ5B3U%kas6"kOV/.g_6iie#4C8DZBkK8nhKK1Z`2#V,1rnc_p>gR$-1S`(G>u@n,jr&cuYZ`Yj5909POeU?nVG`Wh)JM_i[r.:@f`4.!>E%U1C(p"'Z!73_]]@:$s-I;UWFjNr5@6S2E=AmQ:$aYRV*hR*:'n`AReWX_U>@A9os>G9bSZ;JDMQ61qj["?F9SnU]P!(uTXD7fHCo%`k^?eH8!Qp.#AB!%E5L))/A^N9f9Q4Yc%3+`7B$MH%GW3(XPo.605O$,uf0V6q;Oa\k.'&&^sb3/?o%PdC#;2QnNR4KP0TD!E<$f%JTig-oDrTIT5/fbmb;mEinFQ5[[g:VqX-8tc8k9IX!1B5GC!H%@td.i..$&1C]()g5WuH^i6`lgZ+dF.#cMAs<Q/#AY@]:.).ZTk%B#l9KL@o8+jVg)L);EnP[p:I)8C:h2s3)WL]iCk;p&9'[1`*Q`%64U#AYZd!%AS6<CgU=/TpV',T;g(Nb28QYYq=k4"BgS<Y)Pks%>rN0kY!c8)Q_"s5b4k5DcE3-LPJZ`^hQYH->6>PKCaBQZf2hT,@*.7%L#mkLjIp,+M$Vic:fXik"E\lF%P*;NSN3bHXn(j"0i])G%0tu)Zf.^?.lPRgse<q6YUbl'9BPbTN[NTQ>#NoqHc5]586^o%k.8%4QQOQ^0#/<;5:DSj/'X`NM)"%_h3ng0>4XWa+"5A1WmO2oa%j/$[OKRO,6q2mge*!L0u?*-0W[H(@%o]e"=T*SmrdRB?&%Brec2!i7!N@"HufkA81e-5lE)7thOn6n^EU]1DmW>P=@D(*;L).?&V%kRqKg1r7fCX#j\;BSB]aQ]:s4qXcZUg9iYqi\LP2<5)8UY;DJYA&pDPTO-0:7iEZj@aq^RW*\Big6e^e4gh0ig[*9(0g1Bkq<dsN%db/]pBX!_OJUH138AnIXe0,]=>)I5,gG8-PBt-)jakNHPUBL^te2B6FIX9_<oct(=@%3t!7&>RZrBSd_atl/AB+cc@CGi3Gr>Jkf%=qQ58l7/+)]'sZk]Ziuk^!)S-;.k9m/G?9X6YT[Ta1ua;?eoni#M/7m;>R5S%Qp'uD93+_]ol;6(9DM1GFLdQLW]*XYq&.TJ+@!D%YOMuOU0"`/q'\b:KRBVqjG[Eq(,Lq?Y::/J(q`c##pR,"]i*/$.c5=>8ks%YQNd0LdW7O3?3Mi3U/ssQg-($hb,:]\'Pm1fO9f/5%QnI0ZjJD0Y"qQsGDTamJ?7FXlb/#SSU1#UlJ\3N\Xtt;k"fLQa`]SX60aigDS'=HLMdK%7phJUe=Mg?p6.Z0?HE>il==n0qXepXe%N()h4`E*[Dc1*=K(j?(C?O8='j%pZ/;I/NZaQ$@E=<#n++F\H@LgTC"2qImB^EOtbnLHU`n(/Gl'#j`AD=K,&n_Te$bs!]k._2IU%C?G"couFrf^62P-=0\J_HmSN@N0;([g#(F`LBe%RY[NNW_H1cVD4;&ClB!P8(0I,%'B-"=NeagZ\7G@a,9FQC`pf69qhSUA,TQ>)%&OAd7N*e#Tl,rOsMX6iI^/BjPh=='2kN(tXL@"d@%ppc2o?Q<qE!_S4A]+[Q)=n-bS(8,0iO/_cNaTsJCi/9f9&6c3Ym=BQWd0J0%eW!.k&M/2Omri%o2j,_FE^m9dnn&9JoMnno,U6F^10oY<*l4l*K>enJ')%n=^fppl,9FZFQA>Hr;p;GL'X*Db^;`9i-*heUg1"1\%[U.-3/8=34ptK:\9(DQC`A%"XnM8!Z\S=gp]YWjY?_N*7L*`DC4CX9m<o"hS2[U;sh1Ab^3]r5kAhd%DjQ9iE,Htd]kgQ.*ftLF?%&)#kK!bO&["9h@AXYKF#2._\E2%ff._i$E\bO_6IKgcF9nsnf)a8+7CZ1iPC1R/Q\>L3hp<n((r$#@WU7Tj61:M$rAN5uGJA.K==%Eu;q/-->h,V+#78,rHi?,T..=Tch;96C<a*b<XZEHrOErgsi,6/[r=Ec\>@]L3>ZU6q4ecHnFeHc-e3%*"jaG_HZhk)NrRdeOpd'%:_EW8)@;$gJQj23YQijtkmLoCd]*8EeT/9`!5Yj,]aJH[f=XhkZ%_D-(KBp.KBc]ZPYa-6DBd57QTZAq]9?@%6e*Tai55;g:CYO-%7lanG`^T;XpEj?]poj5kGKX>>MmlE$p'X#LcFkZo>UZVCd]jkG?$6HkY%`j4l,d;n('Kp-_)@B<rY64(Jcc+-GZ[E@\HU,Zo@4G_%"bLIX+sn7SddPIT!i7PVD$=Ce3@-g/?R]nXN?h5mr<Kes0Z444/PtT$"WG0.3"U$:!m>n73ie;?2.i)8#n5pDKuKk8HmMV)/Ps1C%eIo>VOBTHG!4P49;1Y]X.'7G/>;W#g)XT.[SK+$h]Ei?EoU/KHlS@Om-l^qCZ'4IJYKD;rPB%&fm7XPK5C^;[s&]6np]'g!Ujmgj%\)72D^\R?=s8!i;q1&;:a8b=@s8!i:_mb-jL]?T\s64J%o=t:bs7,]!s8),Trp:g-YJ5Mca++*OJ,/hgr:du)T?glYs3na^mGIpA%?iK_:huE(ns-NaiOQS"jq*4epJ,CDg]5R^&0bGiJ~>%AI9_PrivateDataEnd