%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 006x013.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 273 328
%%HiResBoundingBox: 0 0 272.7002 327.5991
%%CropBox: 0 0 272.7002 327.5991
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 108 128 8%%BeginData: 10804 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD26FFA8527D5276527D5276527D5276527D5276527D5276527D52%76527D5276527D5276527D5276527D5276527D52527DFD3EFF7D52FD04A8%7DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8A8A87DA8%A8A87DA8A8A87DA87D52FD3EFF7D7DFD2BFF52FD3EFF767DFD0AFFA8FD13%FFA8FD0BFFA852FD3EFF7D7DFD08FFFD04A8FFA87DA8FFFD04A87DFFA8A8%A8FF7DFF7D7DA8FFA8FD09FF52FD3EFF7D7DFD08FF7DAF527D527D527D52%7D5252527D5252527D527DFF7D527D52527DFD07FFA852FD3EFF7D7DFD08%FFA8537D7EA8FD047D7EA8527D7D7D52A8A87D7DFF7D7D847D53A8FD08FF%52FD3EFF7D7DFD0EFFA8FFA8FFFFFFA8FFA8FFA8FFA8FFFFFFAFFD0BFFA8%52FD3EFF7D7DFD2BFF52FD3BFF7D4B27277DFD0EFFA8FFA8FFFFA8A8AFA8%FFFFFFA8FD0FFFA827F852A8FD38FFF8F8277D7DFD0DFFA8FD047DA8527D%7D7D527E527D7EFD0FFF5227F827A8FD36FF7D52F87D7D7DFD0DFFA8527D%7D7D5352527D5252527E7D7DA8FD0DFFA87D7DF8F8A8FD35FF7D52FFA8FF%7D7DFD0DFFA87DA8FFFFFFA8A8FFFFA8FFA8FFA8FD0FFF52FF7DA84BFD34%FF5252FD04FF7D7DFD2AFFA852FFFFFFA127FD32FF527DFD05FF7D7DFD2B%FF52FD04FFA84BFD30FF277DFD06FF767DFFFFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%52FD05FF7D27FD2EFF527DFD07FFA8527D527D527D527D527D527D527D52%7D527D527D5276527D527D527D527D527D5252527D527D527D527D525252%FD06FF7D52FD2CFF277DFD0AFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FF7D7DFFFFA8FFA8FFA8FFA8FF52277DFFA8FFA8FFA8FFA8FD08FF52%52FD2AFF27A8FD1FFFA852FD0BFFF8F827FD10FF527DFD27FFA8277DFD20%FF7D7DFD0BFF4BF852FD10FFA851A8FD26FF27A8FD21FFA852FD0BFF7D7D%52FD11FF7D52FD25FF277DFD22FF7D7DFD0DFF7D7DFD11FF5276FD23FF27%A8FD23FFA876FD0DFFA852FD12FF52A8FD21FF277DFD24FF7D7DFD0EFF52%A8FD11FFA827FD20FF527DFD25FFA87DFD0EFF7D7DFD12FF7D52FD1EFF52%7DFD26FF7D7DFD0EFF7D7DFD13FF527DFD1CFF5276FD27FFA852FD0EFF7D%7DFD13FFA852FD1BFF5252FD28FF7D7DFD0EFF527DFD14FF527DFD19FF7D%52FD29FFA852FD0EFF52A8FD15FF52FD18FFA84BA8FD29FF7D7DFD0DFFA8%52FD16FF7D52FD17FF52A8FD2AFFA152FD0DFF527DFD17FF52A8FD15FF52%52FD2AFFA8F8F852FD0BFFA852A8FD17FF7D52FD14FF7D52FD2CFF27F8A8%FD0BFF527DFD19FF52A8FD12FFA827FD2DFF5227FD0BFF7D52FD1AFF7D52%FD12FF27A8FD1AFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA852FF%FFFFA8FFFFFFA8FFFF7D27FFFFFFA8FFFFFFA8FD14FF52A8FD10FF527DFD%18FF7DFD215227FD0952277DFD12FF527DFD0FFF7D52FD19FF7D7DFD05FF%A8FD24FFA852FD12FFA852FD0EFFA852A8FD19FF7D7DFD04FF7D7DA8FFFF%FFA8FFFFFFA8FFFFFFA8FFA8FFFFFFA8A8A8FFA8FFA8A88484A8FFA8FD05%FFA876FD13FF52A8FD0DFF527DFD1AFF7D7DFD04FF7EA87D527D527D7D7D%597D7DFF7D53597DA8FF527D537D527E7D7D597D597D597D53A8FD04FF52%FD13FF527DFD0CFFA227FD1BFF7D7DFD04FF537D7D52527D527D7D597D7D%A87D527D7DA87E52527D7D527D7D7D7E53A87D7D7D7E7DFFFFFFA852FD13%FFA852FD0CFF52CAFD1BFF7D7DFD05FFA8FFA8FFA8FFFF7D7DFFFFFFAFFF%A8FFFFFFA8FFA87DA8FFA9FD05FFA8FD07FF52FD14FF52FD0BFF527DFD1C%FF7D7DFD0CFFA8FD1DFFA852FD14FF52A8FD09FFA852FD1DFFA87DFD05FF%A8FFAFFFA8FFA8FD05FFA8FD05FFA8FFA8A9FFFFA8FFFFFFA8FFFFFFA8FF%A8FFFFFF52FD14FF7D7DFD09FF527DFD1CFFA8277DFFFFA87D5252527D52%7DA87D527D527D7D52527D5252527DA8FD06527D527DA87D285252527DFF%A852A8FD13FF7D7DFD08FFA852FD1BFF4B27F8527DFFFFFF7D847D84A87D%52FFA87E7D7DA8A87DA87D7D7DA8A8FF7DA87DA87D7D527DA8FF7D7D7DA8%7DAFFFFF27277DFD12FFA852FD08FF527DFD1AFFA8F8F8527D7DFD08FFA8%A8FD04FFA8FD10FFA8A9FD09FFA852F8F827FD11FFA852FD07FFA852FD1A%FFA8525252FF7D7DFD04FFA8A8FD04FFA8FD08FFA8FFFFFFA8FD07FFA8FD%07FFA8FFFFFF5252F852FD12FF52FD07FF527DFD19FF7D527DFFFFFF7D7D%FFA87D7D52527D7D527D527D7DA8527D7D7D527D7D7D527D52A8FD067D52%FF7D7D527D52A8FFFFA8767D7D52A8FD10FFA852A8FD06FF52FD19FF5252%FD05FF7D7DFFA8FD077D527D7DA8A8527D7D527D7D7D527D7D53A8A8527D%527D7DA8A87D7D7D52A87DFFFFFF52FFFFA827FD11FF52FD06FF527DFD18%FF5252FD06FF7D7DFFFFA8FD05FFAFFFFFA8A8FD07FFA8FFFFFFA8FD09FF%A8FD07FFA852FFFFFF5252FD0FFFA876A8FD05FF52A8FD17FF527DFD07FF%7D52FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8A852FD04FF52A8FD0FFF52FD05FF7D52%FD17FF277DFD08FF7DFD155227FD15524B7DFD04FF7D52FD0EFFA852FD05%FF52A8FD16FF277DFD1FFFA852FD1BFF52A8FD0DFFA852FD04FFA852FD16%FF277DFD20FF7D7DFD1BFF7D52FD0DFF7D7DFD04FF7D52FD15FF527DFD21%FFA876FD1CFF52A8FD0CFF7D7DFD04FF52A1FD14FF277DFD22FF7D7DFD1C%FF7D76FD0CFF52FD05FF52FD14FF527DFD23FFA87DFD1DFF52FD0BFFA87D%FD04FFA852FD13FF5252FD24FF7D7DFD1DFF527DFD0AFF7D7DFD04FF7D7D%FD12FF7D52FD25FFA852FD1DFF7D7DFD0AFF52FD05FF527DFD11FFA851A8%FD25FF7D7DFD1DFFA852FD09FF7D52FD05FF52FD12FF527DFD26FFA852FD%1EFF52A8FD08FF7C7DFD04FFA852A8FD10FF7D52FD27FF7D7DFD1EFF52A8%FD07FFA827FD06FF52FD11FF27FD28FFA876FD1EFF7DA8FD07FF52A1FD05%FF7D52FD10FF527DFD28FF7D7DFD1EFF52A1FD06FF7D52FD06FFA852FD0F%FF7D52FD29FFA87DFD1EFF7D7DFD06FF52A8FD06FF7D7DFD0FFF52A8FD29%FF5252A8FD1DFF52A8FD05FF7D52FD07FF7D7DFD0EFF7D52FD29FFA8F8F8%52FD1DFF52A8FD04FFA84BFD08FF7D7DFD0EFF27A8FD2AFF27F87DFD1DFF%52FD05FF27A8FD08FFA852FD0DFF7D76FD2BFF7D27FD1DFFA876FD04FF52%7DFD09FF7D7DFD0DFF527DFD17FFFD13A8FF7D7DFD15A8FD08FF7D77FFFF%FF5252FD0AFFA852FD0DFF52FD16FFA8277D5276527D5276527D5276527D%5276527D5276527D5276527D5276527D5276527D5276527D5276527D5252%52FD07FF52CAFFFF7D52FD0BFFA852FD0CFF7776FD16FF777DFD2AFFA852%FD06FF7D52FFFF7D27A8FD0CFF52FD0CFF76A1FD16FF7D7DFD19FFA8FD11%FF52FD06FF527DFFA852A8FD0DFF52A8FD0BFF52FD17FF7D7DFD07FFA852%7D7DA87D847D7D7DA8FD067D527DA8A87D7D7EA87E7DA8FD07FFA852FD05%FFA852FF7D52A8FD0EFF52A8FD0AFFA87DFD17FF7D7DFD07FFA87D7D7D52%7D527D5252527D7D5227527D7D7DFF5253FD047D52FD09FF52FD05FF27FF%7D52A8FD0FFF7D52FD0AFF7D52FD17FF767DFD08FF7DA8A8A8527DA8A87D%FD05A87DA9A8A8FF7DA87D7DA87DA8FD08FFA852FD04FF527D7D52A8FFA8%FD0EFFA87DFD0AFF7DA8FD17FF7D7DFD1BFFA8FD0FFF52FFFFFF7D525252%FD13FF52FD0AFF527DFD17FF7D7DFD0AFFA8FD1FFFA852FFFFA8522752FD%14FF7D7DFD09FF52A8FD17FF7D7DFFA8A87DA8A8FF84FF7D7D527DA8A87D%A8FFFF7DAFA8FFA8A8A8FF7DFFA8A8A8FF7DA87EA8A8A87DA8FFFF52FFFF%2727A8FD15FF7D52FD09FF527DFD17FF7D7DFF7D2752527D527D277D7D7D%527D527D52FF7D525252A8A827A8A87D527D7D7D527D527D5252527D52FF%A87DA82727CAFD17FF52FD09FF52A8FD17FF7D7DFF7E7D7D84527D7D7EA8%A87DFD05A8FFA859A87DFFA87DA8FF52A8A8A87D7E527DA87D7DA8A8A8FF%FF272752FD19FF527DFD08FF76A1FD13FFA8A87D7D527DFD04FFA87DFD14%FFA8A8FD04FFA87DFD08FFA8277DFD1AFFA852FD08FF52A8FD13FF52F8F8%277D7DFD2BFF52FD1CFF52A8FD07FF7D7DFD12FFA827F820FF7D7DFFA853%A87E8459A87DA87DFF7DA87DA87D7DA8A852FF7DA8A87D7DA87DA87EFF7D%A87DFFA8A87DA8A8FFA852FD1CFFA852FD07FF7D7DFD11FF7D52FF7DFFFF%7D7DFFA87D527D527D527D527DA87D5253527D59A8A87D7D7D52FD047D59%52A8A852527DFF7D527D527DFFFF52FD1DFF527DFD06FFA852FD0FFFA852%52FD05FF7D7DFFFFFD04A87DA8A87E52FFA8A87DFD04A8FFFD0BA8FF7DA8%A8FF7DA8A8A87EFFA852FD1DFFA852FD07FF52A8FD0EFF527DFD06FF7D7D%FD2AFFCA52FD1EFF527DFD06FF527DFD0DFF527DFD07FF7D7DFD0CFF7DA8%A8A87DA8A8A87DFD07A87DFD0DFFA852FD1FFF27FD06FFA852FD0CFF7D7D%FD08FF7D7DFD0CFF7D7D7D527D527D527D537D527D52FF7D7DFD0EFF52FD%1FFF7D52FD06FF52A8FD0AFF7D27FD09FF7D7DFD0CFF7DFFA87D7DA87DA8%A8A87D84FD04A87DA8FD0CFFA852FD20FF527DFD05FF527DFD0AFF52A8FD%09FF7D7DFD2BFF52FD20FFA852A8FD04FFA827FD09FF7D52FD0AFF527DFF%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FF7D52FD21FF7D52FD05FF527DFD08FF7D7DFD0A%FFA8527D527D527D527D527D527D527D527D527D527D5252527D527D527D%527D527D527D527D527D527D527D525276FD22FF527DFD04FFA152FD08FF%52FD0DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D52FFFFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD24FF27A8FD04FF527DFD06FF%A852FD21FFA87DFD3AFF27A8FFFFFFA827FD06FFA852FD21FF7D7DFD3AFF%A827FD04FF7D52FD05FFA87DFD21FFA87DFD3BFFA827FD04FF527DFD05FF%52FD21FF7D7DFD3CFFA827FFFFFFA852FD05FF76A8FD20FFA852FD3DFF7D%27FFFFFF5252FD04FF527DFD1EFFA8FF7D7DFD3EFF7D27FFFFFF52A1FFFF%FFA852FD1FFFA85227A8FD3EFF7D27FFFFFF27A8FFFFFF52A8FD1EFFA8F8%F852FD3FFFA827FFFFA827FFFFFF7D7DFD1FFF52F8FD41FFA827A8FF7D27%FFFFFF27A8FD1EFF524BFD16FFA8FD2CFF4BA1FF7D52FFFFA152FD09FF7D%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA87DA87DA8A8FD2EFF277DFF7D27FFFF527DFD07FF7D%52527D527D527D527D527D527D527D527D527D527D527D527D527D527D52%7D527D527D527D527D527D527D5252FD2FFF5252FF7D52FFA852FD07FF7D%7DFD2BFF52FD30FF7D52A87D27FF5252FD06FF767DFD2AFFA852FD31FFA8%527D7D52FF527DFD05FF7D7DFD2BFF52FD33FF52527D52FF4BA8FD04FF7D%7DFFFFA853A8A8A8FFA884A8FF7EA8A8FFFFFFA8A8A8FFA8A8A8FF7DFFA8%A8A8FFA8A87DA8A8A87DFFFFFFA852FD34FFA8525252A852FD04FF7D7DFF%FFA8277D597D5252FD057D5252FF7D7D597D7D7D52FFA87D537D7D7D527D%527D527D527D7DFFFFFF52FD36FF522727524BFFFFFF7D7DFFFF7DA852A8%A87D52A8537D52A8527DFF7D52A87D7D527DFFA8527DA8A87D7D527DA87D%527EA884A8FFA852FD37FF7D52275252FFFF7D7DFD0AFFA8A8FD05FFA8FD%07FFA8A8FD04FFA87DFD0AFF52FD39FF7D27F827FF7D7DFD2AFFA852FD3B%FF4BF827A87DFFFFA8A8FD05FFA8A8FFFFA8A8A8FD09FFA8FFFFFFA8A8A8%FD0BFF52FD3CFF7D27F87DFFFF52FD047DFF7D7D5353525352527DA8FFA8%7D7D537D5253537D7D7D537D527D527D527D52AFFFFFA852FD3EFF5252FF%FFA87D7D7DFFA87D7D7D527D7EFD047DFF7E7E7D7D52A87DA8527D7DA87D%A8527D7D7D537D7DFFFFFF52FD3EFF7D7DFFFFA8FFA8FFFFFFA8FFA8A8A8%FFA8A87DA8A8FFA8FFA8FFA8FFA8FFA8A8A8FFFFFFA8FFA8FFA8A8A8FFA8%52FD3EFF7D7DFD2BFF52FD3EFF7D7DFD0EFFA8A8FFFFFFA97DA8FFFFA8FD%11FFA852FD3EFF7D7DFD09FFA87D7D7D847D7DFF7D7D52527DA87DA87DA8%7D84847D7DA8A8FD09FF52FD3EFF7D7DFD09FFA827527D52527DA852527D%7D7D527D5352527D7D527D7D52FD09FFA852FD3EFF7D7DFD09FFA8A8A8FF%A8A8A8FFFD06A87DA9A8A8A8FFA8A87D7DA8FD09FF52FD3EFF767DFD1FFF%A8A8FD09FFA852FD3EFF7D7DFD2BFF52FD3EFF7D7DFD2AFFA876FD3EFF7D%52FFFD29A8A152FD3EFFA8FD2C527DFD17FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T09:36:24+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T09:36:24+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T09:36:24+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>216</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADYAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqwz80DO9noFpHc3NrFfa5ZWt01ncTWkrwyc+aetbvFIoam/FhiqK/5Vt5d/5a9c/7j+t/9lmK&#xA;u/5Vt5d/5a9c/wC4/rf/AGWYq7/lW3l3/lr1z/uP63/2WYq7/lW3l3/lr1z/ALj+t/8AZZirv+Vb&#xA;eXf+WvXP+4/rf/ZZirv+VbeXf+WvXP8AuP63/wBlmKu/5Vt5d/5a9c/7j+t/9lmKu/5Vt5d/5a9c&#xA;/wC4/rf/AGWYq7/lW3l3/lr1z/uP63/2WYq7/lW3l3/lr1z/ALj+t/8AZZirHvPnlSx0Hy42q6Xq&#xA;GsxX1veaeI3k1vVp0pLfQROrRTXUkbhkcghlIxV6VirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irDPzL/6ZT/wIrD/AJmYqzPFXYq8tPlbzyx0qytYH05NHZ4X1OOeHlPFc6payStAtXKj6lFKW9RQ&#xA;eRCgHrhVCXHlz82pbqGdpZJL2xSY6fdPLbNCitZvCOSVDNcGVieZHGhHgcUIm50L82H0l5hf3ZvV&#xA;iijgt43to2K/WrmRzIvr8PVEP1dOQuOndzyDKUIuhfm7b3sP1MXEaSX4ur2Q3NtJG6yyQGcULxsB&#xA;6SyKnwEVrRE2bFCIvfK/5nPY2tlPd3d/bywobwevbK4ujHa8vUJC8rcMlxVU35MtNtwqmPnHyl5q&#xA;1DzNLf6U9xAI4vVtLuOeJVWdbK6iRFSQtx/eyR8vhoQevXFKZ+TLT8wote1SXzHcerp0pkNrHxhE&#xA;YJmYw+iY5HeiwUV+aL8X832iFZnirD/za/5Qe4/5jNM/7qVvirMMVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirE/zR84X3lHyZea1p0Fvd6lGUisbK5kMfryyMFWONVBaWQ7lY1oWp1xV4b5G85fmj59&#xA;l0bzZ5nuIrby8PMVjaaVpVtAsUTzhmMswZuUxEYXgOTkElu64q+nsVdirsVYr5y88/4c1DTbT6pH&#xA;ci+jmmkZ7gQuI4JbeErCnB/WlY3YKpVagHfFWJa7+c9/baBeXUWnQWty2myXlkTderLzkt7mW2YW&#xA;5ij9RB9VPq0b4e3L4qFVe6/OK4tjJM2nxSosi2qRw3PqW5lpLKZRdLEap6cXH+7/ALz4ffGlR8X5&#xA;qXUt3DTRlXTpijC6a6HqCM3MFq7eksTKSHukIHqbgNuKLyaVn0E8NxDHPBIssEqh4pUIZGRhVWVh&#xA;sQR0OBV+KuxVhf5xRNL+X97EsjRNJdacqypTkpOo245LWoqMVeVflv8Anp+ZS/mT/wAq284adbX+&#xA;ow3L2kmqxstk9Eq/rMhHpSh4xyRUVCR44q+icVdirsVdirsVdirsVdirsVdirsVdiqRebfN1l5ct&#xA;IS0Mt/ql85h0rSLYBrm6mAqVQHZVUbySN8KDcnpiqWeWfJ+ovqa+Z/N0sd75kows7eKps9NifZor&#xA;QMAS7LtJM3xN0FF2xVD/AJhWttaw+VIbaFIIR5jsWEcahFBdpWY0WgqzMSffFWcYq7FXYqhbjS9P&#xA;uL63vp4FlurRZEtpWFeAlKM/EHapMS79RTbviq5tO09lVGtoiio0SqUUgRuKMgFPsnuMVbawsGjM&#xA;TW0RiIClCilSA3IClKU5b/PFWzY2RNTbxk+JRf5g/h/MoPzxVUiijijSKJBHFGAqIoAVVAoAAOgG&#xA;KrsVdirD/wA2v+UHuP8AmM0z/upW+Kpnr/kjy1rllqFteWSJLqRje4voFWK6EtuKW8yzKOYkg/3W&#xA;37PyriqV+U/MWqWep/4P80yBtbgj56ZqgHCLVbVBvKg6LcR7evFXb7S/CdlWY4q7FXYq7FXYq7FX&#xA;Yq7FXYq7FWNecvOsHl4Wlla2z6p5i1RzFpGiwsFkmYfbkdjURQxj4pJG2Ue+2KrfKfk6TTrmbXdb&#xA;nXUvNl+nG9vwCIoYq8ltLNG/u7dD/snPxPv0VZPiqW+YPLeieYbAWGs2q3dosizLGxZaSJXiwZCr&#xA;AivjirHv+VO/lx/1aP8Ap4uv+quK27/lTv5cf9Wj/p4uv+quK27/AJU7+XH/AFaP+ni6/wCquK27&#xA;/lTv5cf9Wj/p4uv+quK27/lTv5cf9Wj/AKeLr/qritsZ8mflj5Iv7zzQl3pxlWx1mW1tAbi4HCFb&#xA;W3cIKSD9qRjv44pZN/yp38uP+rR/08XX/VXFFu/5U7+XH/Vo/wCni6/6q4rb5712+tPI35x3fk7V&#xA;/LD+Y9H1K4jm0QW8s8V6sN2Rwjh4yKkyxvyj+OhPHd8Vt9CD8nfy5IB/Q9PY3Nz/ANVcVtfD+UP5&#xA;dRTxTpo6mSGRJY+c1w6h42DoSrSFTRlB3GKswxVI/N/lOz8y6WLWSVrS+tnFxpepwgevaXSbpNGT&#xA;9zL0ZaqdjiqE8k+arrVFutH1qJbTzTo5WPVbZf7uRWr6V3bk/agnAqv8pqp3GKsnxV2KuxV2KuxV&#xA;2KuxV2KpB5u82w6BBbwwW7ajrmpO0OjaREQJLiVRViWO0cUYPKWRtkX3oCqhPJXkyXR3utY1m6Gp&#xA;+bNVCnU9RoRGiLUpa2qH+7t4q/COrH4m36KsqxV2KuxV2KuxV2KuxV2KsP8Ay9/3v85/+BBN/wBQ&#xA;drirMMVdirG/OHkLQfM1nefWLeOLVp7X6ta6uEBubcxv60LxP9oenOBIAD1GKqvkLX7rXvKOm6ne&#xA;x+lqDo0GoxDYJd2sjW9yoG2wmicYqn+KuxV2KsS89eXdSme18zeXVUeaNFDGCMnit7atvNYSn+WS&#xA;lYyfsSAHYcsVTvy35h0zzFolprOmuXtLtOSBxxkRgSrxyL+y8bgqy9iMVTLFXYq7FXYq7FXYqk3m&#xA;zzTY+W9JN9cI1xPI62+n2ENDPdXUp4xQQqerO30AVY7A4qlnkzytf208/mPzIyXPmzUlCzsnxRWV&#xA;v9pLG1r0jQ7uw3kf4j2oqyzFXYq7FXYq7FXYq7FXYq7FWH/l7/vf5z/8CCb/AKg7XFWYYq7FXYqw&#xA;z8sf7nzNx/uv8Ran6Xh/ejnT/nrz+nFWZ4q7FXYq7FWB3APk3zul2vweWPNs6xXa/sWmsMOMUoA6&#xA;JeheD7f3oU/tnFWeYq7FXYq7FXYqhNW1bTdI0y51TU7hLWws42mubiQ0VEUVJ8fkBucVYn5Q0jUt&#xA;b1YeePMMLwXEiMnlvSJaV0+zkG8ki7gXVytDL3RaR9mqqzfFXYq7FXYq7FXYq7FXYq7FVO4njt7e&#xA;W4lqIoUaRyqs54qKmiqCzGg6AVxV5V+Tf5neR/MfmHzTpujaibu8vNTn1S3jFvcoDZiC1h9UtJGi&#xA;r+8HGjEN7Yq9ZxV2KpR5t8x2vlzy7fazcKZBax/uYFrymnchIIUoD8UsrKi+5xVD+Q9ButC8padp&#xA;t64k1FUefUZAahry6ka4uWB8DPK9MVT/ABV2KuxV2Kpb5k0DT/MOhXui6ipa0vojFIVNHUndZEP7&#xA;LowDKexAOKpR+Xev6hqeiy2OsMD5i0OdtN1mg485oQClwq/yXETJKv8ArU7YqynFXYq7FXYq8/C/&#xA;4+80FmpJ5K8uXNEH7Go6rAd2P81vZvsOzy+ITdV6BirsVdirsVdiqW+YPMmieXrAX+s3S2lo0iwr&#xA;IwZqyPXioVAzEmnhirHv+Vxflx/1d/8Ap3uv+qWKu/5XF+XH/V3/AOne6/6pYq7/AJXF+XH/AFd/&#xA;+ne6/wCqWKu/5XF+XH/V3/6d7r/qlirv+Vxflx/1d/8Ap3uv+qWKvL/yhH5X+Q/Mfm/U11aP09Xv&#xA;f9xKpbXJ9Kwp6oT+6qP3kpQj/IBxV6h/yuL8uP8Aq7/9O91/1SxV3/K4vy4/6u//AE73X/VLFWEx&#xA;/mX5N8z+b4tX1bUWtfLmgyltBsHguC13d8Sp1CZRGeKRhisCN8XVzQ8RirNv+Vxflx/1d/8Ap3uv&#xA;+qWKr4fze/LqWeKFNYUSTSJFHzhuEUvIwRAWaMKKswG5xVmGKuxV2KuxVhGtAeXvzF0rW0omn+Zl&#xA;Gi6rTYC8iDzafMaCtWHqwE/5SeGKs3xV2KuxVh3n7VtRnlsvJ+hTNBreuhjPeRULWOnRkC5uz1ox&#xA;5enDXq7f5JxVkujaPpujaVa6VpkC21hZRrDbQJ0VFFOp3JPUk7k7nFUZirsVdirsVdirDPzL/wCm&#xA;U/8AAisP+ZmKszxV5NB+aOradDFeXVzBrSXEUj3FjCqxSWT/AF6G0gMskfqlYm9cliyV+Gq13GFU&#xA;TbfnOb3ULayi00Qi4NpxkS49aRmlnhSREjEXHjxlPFmdS2xC77NKstfzsubhHeLR7aUQ2/1ycw6h&#xA;6gWERQzMtRbj98qz0KdOQpy740qYeePzdi8ra1PpzacLxLe1luZJBOYpOcdrPdBAhiZSGW2oW51F&#xA;a8fEKjdR/MW507y7PqV1p0SX0GoPpjWn1ljCZEqeQn9DlTgK7xD+OGlY1p354TSCKeXTo3t72awa&#xA;CJ7gRTrDqItVWOCMRv8AWZITcs8gqu1PHZVEt+cN/dxxxWOm25doJLue6hvfWijhT6nxEZ+r0klP&#xA;6QUOh48KH4m2xVDwfm95gtIZbq/061vIHHpxLbXLLwuVtLm7MdTCaqy2bKzVqjbcW64qzLyx5v1H&#xA;VdTn0/UNNjsZokmdGhuTcqxtrqS0l+1DAQOcdV23HUDAqH/Nr/lB7j/mM0z/ALqVvirMMVdirsVd&#xA;irHfzC0KfXPJ2p2NptqKxC50xx1W9tWE9qw+U0a4qmHlrW4Ne8u6ZrcA4xalaw3SJWvH1ow/E+61&#xA;ocVTLFULquqWGk6Zd6pqEwgsbGF7i6mbokcalmbbwAxVjH5daVfyQ3fmzW4TFr3mMpM8D/atLJAf&#xA;qlmP+MaNzf8A4sZsVZjirsVdirsVdirsVYJ+Zeo6f9e8qaf9ah+vnX7CUWnqL63pguC/p15cQWG9&#xA;MVZlf6jZ6fCs13J6UTOsatRm+JzRRRQTvirEk/M7yB60tvBIZEcvHcCO0nPJ1ZE4cBFV+TS06e/Q&#xA;1wqjI/PXk64srzULEm8SygWV2it5PjhEhjX0mZFDqssbKeJ+EqcCpZo3mj8r9IT6vZTNBHdt6kk1&#xA;1HdunB/SjSV57kMEhf1YljYtwPIccKo2f8xfI5vZlkf1o4kp9fW3kmidf3hcRyIjc0jWGRnZaqoB&#xA;qcCtf8rO/Lu4hb070XMYceskdrcS8G9H6zykVYjw4xKXJbpxPdSMVQnmbzH+XNj5gjTWQ8U+lJ6x&#xA;nC3K2ySxPbNHGyx0imkH1qJ1FG49dsVV4/zN8gPc/V7ab1gWdSYraZquXjqEVY6vzaQH4f8AW6b4&#xA;VRtl548kXljeX1tLys7OL63cTG1mRTGzPGXTlGvqfErKeNad+uBULF+avkSSOSa1uJZmRCwEVncs&#xA;XJWOVo0IiozhbiNmA6Bqnviqh+Z9/Bcflq2oE+lBNNpVxWQgcUa/tn+I9BQHfFWcgggEGoO4IxV2&#xA;KuxV2KuxVhf5VAWujarogAWPQ9Z1CygG+0DzG6gU/wCrFcqv0YqzTFWDecFbzJ5t0ryeg5aZacNa&#xA;8x/ytFDIRZWrdR+/uELsp6rGfHFWc4q7FXYq7FXYq7FXmH5m3d753sdR8i+T5Jjqiuq6lrkFxJbW&#xA;mnMjBjFLLFUzSuPhMCg0Bq/GgxV5z5A/JefyFo3l3VNejU+bdV8x2K3R5LJ6FurSFYVdSwYuRzcg&#xA;77D9mpVe6ea9V8oRwnTfMLq0bqs7QFJZNlYlGPpKxBJQ8R1ahpWhxViGj69+UM97LNHp31K4hkMB&#xA;mmhNS6ol0UT02kJAST1TQUX4mam5JVbp+p/lRpesXenWxllj1gNZ3QKcba2S2Uzemdo5FUifmHo3&#xA;UHlQbKppNB+VGl6jYa07QWzelNPaUV/RKhkZpioUgcfq6iMnbb4e2KofWdX/ACe/SFwt5BBdXdxK&#xA;xvQInI/cs0c0jcuKMimVhJwrUPuCH3VV5tQ/KWwmmtkt4fXuZ3t54oLeUl5TczWMwJVQp4S3cweh&#xA;6MxxVE39z+Vd5bv5kvTavFduLR75lkVmcKk3SgYH07dH50+woNeIxVJfMP8Ayp57TUvswXcSyLM1&#xA;lEy3IFu6ysI/UQxhDIy0b7HN9jybFU+hk/Lez0KztlEaaXfK9jb8km+IRTn1Fc8eUfCdjyZ+NGxV&#xA;LIJvyhkWLTrWzW4+t3CxiGO3uWIkmaCLm7Mo4AiKH4iRVQKbYqjvzbsbQ/lzc2PpD6p9Y0yD0f2f&#xA;T/SFuvH5cdsCvHfyRtvzX8l+f/8ACWtX0sPkj63eWGmNqMbMlzLbDmi2TEhovUT94u/psA1AWBoq&#xA;+mcVdirsVdirD/KUjJ5689Wv7Bu7C7A7cpdOhhP00tRirLLi4gtreW4ncRwQo0ksjbBUUVZj7ADF&#xA;WIflfazXGk3fmu8jKah5ruDqRVx8cdnxEdhCen2LZUJFPtM3fFWZ4q7FXYq7FXYq8/u9W1nz3dy6&#xA;Z5buZNO8qQOYtS8ywmkt2yNxe20167KCCslx47JU/EFWZ6NoulaJplvpek2sdnp9qvCC3iFFA6k+&#xA;JZjuzHcnc74qxb81Zvq1j5fvnjle2sdcsrm7aCKSdkiTnycpErvQVHQYqgdS86flZqV5HeXpvpLi&#xA;IKFYWGroCI2LJzVIVV+DOxXkDSpp1xVLE1D8kkZ3jgvo3dzKzx2mto3NoxEzBljBHKJQjU6r8J2x&#xA;taQzyfkksc31SO/tZ5UnjE4sdXl4LcxehLxSaGSP4ojxoVoPDG1pMrrzD+Td22nNdW9zMdKhFvYh&#xA;tN1TikSqFCMogCuBTbkDTtitJeW/Ibmr/UryqwC1A+p61T0hHHFQr6dCSkCAsfiNNzXG1da6j+Q5&#xA;uXngjvJbmGVvWk+ra3I4maX6yxkJRqyGR+ZLfFvja0ri/wDyPGijRfqd1+jRcfWxB9Q1evr+n6PP&#xA;1PS9T+6/d05U4fD02xVZ9a/I799S3v1FxzEwW11xQyyEM6UEY+AsAeH2agGlQMbWkbqHmb8qr+S0&#xA;9eS/MFpNcXAtlsNWVJJbqX1pDJSAF1MlW4H4falMVpD6fqn5LadA8NjFqFvHI8Up4Wut8g0BUx8W&#xA;9PkgXgNlIGNrS/z1568t655a/Q+kG9ur+4vNOEEJ0/UFLenfwO1XlgVdkQklmxVnfmzyzZ+ZdCuN&#xA;KuXaFpOMlreR7S21zEQ8FxEdqPFIAw+7piqB8heZLzWdIkg1VFg8w6TM1hrlsuwFxGARKg/33PGy&#xA;yx/5Le2KslxV2KuxVh3lNGfz755uADwFxp9rWm3KOwjlO/jS4Xb5eOKtfmo0t15et/LkBdZvNN7B&#xA;o7NH9pbaWst6w+VnDNirMIoo4o0iiQRxRgKiKAFVQKAADYADFV2KuxV2KuxV55qE1z+Y17LpWnTy&#xA;W/kezlaHWNShYo+pyxni9lbOvxLbowpNKp+P7CbcmxVn1paWtnaw2lpClva26LFBBEoRERBRVVRs&#xA;AB0GKquKuxV2KuxV2KuxV2KsP/L3/e/zn/4EE3/UHa4qzDFXYq7FXYq7FXYqwbzAh8u/mBpPmKL4&#xA;dP8AMJTQ9aUfZ+sfE2nXBAp8XMtAT/lr4YqznFXYq7FWG/lcfrWmaxrYYPHrms393A3cwRSCygY/&#xA;60VorD2IxV18p1H82tMgZawaBpE98SD0uNRmFtCT8oracD54qzLFXYq7FXYqwTzVfXvmnW5fI2jT&#xA;vb2cKK/mzVYjRoYJRVLGBh0uLhPtN/uuP4vtMuKsz07TrHTbC30+wgS2srWNYre3iAVERBRVUDwx&#xA;VEYq7FXYq7FXYq7FXYq7FWH/AJe/73+c/wDwIJv+oO1xVmGKuxV2KuxV2KuxVIfPnl+TzB5O1fSI&#xA;drq5t2Nk1QON1F+9tnqdvgmRG+jFUT5T11Nf8r6TraKEGpWkF00YrRGljDMm+/wsSMVTXFWOfmHr&#xA;11onlG+urEctWuAllpEVQC99duILcDxpJIGP+SCcVTLy3odtoPl/TdEtTW3022itY2pQsIkCciPF&#xA;qVPviqQeVInl8+eeL5t1S40/TkPtb2Ed1T77/FWYYq7FXYqxvz35mutF0uKDS41ufMWrSix0O0Y7&#xA;NcOCTK//ABVAgMsh/lWnUjFUV5Q8r2vlrRItOhla5nZmnv7+X++uruY8priU/wA0jb+woBsBiqdY&#xA;q7FXYq7FXYq7FXYq7FXYqw/8vf8Ae/zn/wCBBN/1B2uKswxV2KuxV2KuxV2KuxVh/wCVKR2/lOTT&#xA;kNRpmqatZAUIokOpXCxDf/irgcVZhirBnZvNP5joifHoXkyryt1SbWbiOip3U/VLaQse4eQd1xVn&#xA;OKsN/Llg915xlGwfzFdCnf8Ad29vEa/PhX5YqzLFXYq7FWCeTl/xN5p1LzrN8dhbGXSPLAO6/V4n&#xA;peXa+9xcR8Vb+RF/mxVneKuxV2KuxV2KuxV2KuxV2KqV0bkWsxtQjXQRvQWQkIZKHiGI3pXrirwP&#xA;/nHT8z/N3mrzh5p0++0iCytFnk1HU5VMnOK7kEVsluAxpuLd2332OKvoHFXYq7FXYq7FXYq7FWH/&#xA;AJUvHceU5NRQUGqanq18DUmqT6lcNEd/+KuA2xVE+fPM93o9jb2GkItx5m1qQ2mh2rbr6tKyXEoG&#xA;/o26fvJD8l6sMVTDyl5atfLeg22lQSNcNHykuryT+9uLmVjJPcSf5csjFj92KpvirEPIi+jrfna1&#xA;Yj1Y9c9YgfyXGnWcqHf5lfmDirL8VdirFfzM1i807ylcQ6c/p6xq8kWk6S1SCtzfOIVkBHT0lZpf&#xA;kuKp9oukWWjaRZaTYJ6dlp8EdtbIeojiUItT3NBviqMxV2KuxV2Ksf8AOnme68v2NlLZ2A1G81C9&#xA;h0+2tmm+rr6k/KjNJwloBx/lxVL/APEH5nf9ShZf9xgf9kmKu/xB+Z3/AFKFl/3GB/2SYq7/ABB+&#xA;Z3/UoWX/AHGB/wBkmKu/xB+Z3/UoWX/cYH/ZJirv8Qfmd/1KFl/3GB/2SYqx7yxo/nLy3qWv6hp3&#xA;kyzW48xXx1C9Y6wK+oUVSoP1T7PPnJ83OKsh/wAQfmd/1KFl/wBxgf8AZJirv8Qfmd/1KFl/3GB/&#xA;2SYq7/EH5nf9ShZf9xgf9kmKu/xB+Z3/AFKFl/3GB/2SYqg9V88+edGtVvtW8qW0Onie3gnmh1QS&#xA;uguZ0gDLH9WTlRpBtyGKs8xVjn5ha9caH5Q1C7sxy1SVRaaTED8Ul9dMILZVG9f3sik7dK4qptea&#xA;F+XnkWxivZW+p6TbW9jAsacprmVVWKOOKMbvLM42HianucVQ3kry1qn16582+ZlA8y6mgijtFYSR&#xA;6dZA8ks4nGzNX4pnH2n9gMVZhirsVYbpHCx/NXzDaEn/AHMabYalEKUHO3ea0n+ZCiD7/vVZlirs&#xA;VYb5gH6R/MvytpocGHS7e/1q4iO49QKljbGnj/pUxH+rirMsVdirsVdirsVYZ+Zf/TKf+BFYf8zM&#xA;VZnirsVeRaR5h/NuHRLR3tZJGt7O3R4Lmwne5klj0qzuZHeTmp5SXUs0J+DZlI+0DhUqK+dvzLvo&#xA;kvtOspL1LczMvCzuYIDJwvEMTVJ+sJGI4XDJszHiKnYKo6DzP+btzbpMbKO1Iohj/R9y/MEXjCUc&#xA;2hdDS3gBVk2L+6jFV9l5u/Nq+1g2b6RHYWks0cYuXtLp/RjLqOZ5enG/KNmbZ/gIo3hiqJ03zP5x&#xA;0/yjrWu60r/XLKe1u5rOa3kgX6qba3kuorb1COTUMoQAmkgo29cVW2vnD8xbe4RdT0t3CmA38VtY&#xA;XTiGNprVXeKdSy3BKSzkoi8l4A02+JVPvIurebtVkvbjXITZ20ZRLS2e1kt5G5IrtIWkapG/Hjx2&#xA;PfFWW4FYf+bX/KD3H/MZpn/dSt8VZhiry/XfNuk3nmhtZv5CfLPlKdrXT4Y19SXUvMEimL0raLrM&#xA;1sjNGoA/vGY1/dk4qnXlry5q+r6rD5u83xCLUYwf0JofISRabG4oWYj4ZLt1+3J+yPhXapZVm2Ku&#xA;xV2KsM87FtM80eU/MYJWCO6k0bUCB/ujVQqxFj4C8htxv/NirM8VdirErKFZPzZ1iZvtWug6YkXy&#xA;ubzUC/8A1DJirLcVdirsVdirsVYZ+Zf/AEyn/gRWH/MzFVbzh+ZGj+Wrl7CdHl1A2r3MCAoEJCSt&#xA;GrVb1KMYCCyoQu1aVxVSg/NHRZpIoEs72S6uCyWkUcaf6Q8bOkgg5OtQrQSfa47KT0pU0qCf83dP&#xA;nW3n0nTbm+s7iW3ihuD6cSy/Wbuztg0JZ9wov1J5Bd6DpyKhVHSvzh0X9BafdXOkXtpLc2Ud/Law&#xA;xRukcLwxzPKpDryi/e7GnI/y1wqneo/mRoOn+XY9duY50t5LiezMBEayrPaPLHOjc5FSqtbuBRzy&#xA;/ZrUYFVNH/MPy/qsmqJbesp0mL6xceoqqzRUY80j5GSh4GnJVrsRUGuKoeD8wfL2qeXW1aK0mvLY&#xA;XsVgLRVgldrl3j9ILxkaFhykQhudB9GKoaP83fLcsc8sFrfSw2/97IsKUHG1S8m2Lhv3EMqmTbqa&#xA;LyONKqn81NBN6lpFZ30zzSNFaukScJgkkkTPGWkU8VaB+oB2rTcYaVBwfnR5VuFDW9tez/baT0kh&#xA;l9OOP6tWRikrLT/TotgS3UEAjArvzB1e21f8tZL+3V0jkvtPQxygB1eLVYI5FbiWFVdCNiR4Yqk/&#xA;5n/mVqMmqHyD5Hjl1DzVcqP0jNaEA2Fu/UtMapFKwPws2yfaoW4Kyqdfl/8AldbeXltb/VnjvtZt&#xA;YfQskiUiz0+Jt2iso3q1WJ/eTPWSQ1JIrxxVnmKuxV2KuxVKPN3l6HzF5Z1LRJX9P69A8cUw6xS/&#xA;ailFO8cgVx7jFUP5E8wz6/5Xs767QQ6oga11a22rFfWzGG5SnYeohK1/ZIPfFU/xViNpOIvza1WA&#xA;je80DTnQ/wDMJeXwb/qLXFWXYq7FXYq7FXmv53fm835c6Na3dna22p6hPKA+nyTmKVbejVnCKrsU&#xA;DgKW2FTirDPL/nj8xPO2k+Wdf8yaVaaRo0/mDTv0RFEsv1ifeTlMTI5Aipsvw1br0pVV6p5nsfy+&#xA;fU4z5iFrHez27yK9y5iVoLZljZmYlY/ga84jlv8AGabVxVIU0H8q7LWL03WowXdxqMpUWjSQlYHM&#xA;vqMq/V1RkPO4qWdq0Na/aJKp5aWX5aXSW2mWT6bKJeTWdrbzxlj6MkcjGJY3r+7ktI2+H7JT2wK4&#xA;Wf5aFYLVZNNoIm0m3hE8deEKKrWqjnuUULVeoxVaJPyz1qCXTUuLG8itWuNQeGOYEAzl2uZlKN8S&#xA;sZ39QqStWIPhiqnpI/LH9EfXrY2Vvp2tQCFhcOIhLDccj6ZjmYcfVJYstAWNa74qh723/LGa1bQB&#xA;fQRxG7F/cxQT8/39m6M5mlq/CnpLzqwPy64VRsGj/llqEP6Ktl025jdRdfVIJY2JRbdLX1OKNXh6&#xA;CpGf2StK4FS3QPLH5brrlzfWup2uqXd+zzwWxltHWNQ8xk9FIFRmWssgYsW9/i5ElUdb6P8AldaT&#xA;mCI6dHcTRFfTNwpkaFxBJ0ZyxUrDAf8AVC9qYql/5r6dZN+WF9ZabKbS3mvLILPasOSPLqsJkdGP&#xA;IBubMfY4FZH5P8keWvKGmfo/QrQW8bt6lzOxLz3Ep6yzytV5HJPUn5UGKp7irsVdirsVdirsVYLK&#xA;R5S/METfY0HznIscp6JBrMUfFDQUAF5AnEnvIg7virOsVYZ5nb9G/mF5S1c0SC+W90K5kP8ANcxp&#xA;d2wP/PSyZR7tTvirM8VdirsVYh5l8z6vdas3lTyl6ba4EWTU9SmUvbaZBKDweRRT1J5B/cw13+01&#xA;F6qojRvy58r6fpl3Z3NsNXm1NeOsX+ohbm4vSaV9d3H2dvhRaIv7IGKoL8yERE8poihUXzDp6qqi&#xA;gAHqAAAYqmnmnyPo3mWW1l1BpkltEkjgeFlFFlkhlaodXU/HaxncdvfFUn/5U/5WVpPSlu4opDHW&#xA;BJE9PjE3NVAKHq9GLfaNAK0FMNqrWn5a2ll5psNasr2SK3swpksmXl6skdvPbRs0nIABEunNAnXv&#xA;4BUmi/Lj8tLmGOSLUX9An6z6RniWsbhJAjq6c1ULEPB6VqcKE60bRfJ1vc3DW+ptcXEYdLiWWWPf&#xA;14EcmoVFP7ni3w7DFKCT8ufI01g1muoyTWksTWUaC4hIUXFrNalUYJXm6XMjbk79NtsVU5vJ3kCT&#xA;11Oqyyx2ltNNJbxzpIIrUjjsFRn4x8Tx7168sUJp5d8leVo4pNS0y5lu01A3Esl2JVb1XugFnkDI&#xA;q0LMnL4aAHoAKDFLtA/LHy9omqW+pWkty1zbhgpkaOjBlZaPwjQkD1GIFaVNSCQKC1QVp+T/AJcj&#xA;so4Z5ZmlFWleA+kjSBpjC6o3qsPq63TpEpYgLQNyoMNq1+YelwaX+Wz2MDySxw3unESSkNIxfVIH&#xA;YsQFFSWPbArPMVdirsVdirsVdirsVSvzP5dsPMWhXej33IQXSgLLGeMkUiEPFNG37LxSKrqfEYql&#xA;XkPzHe39tc6LrZVfNGgsttq6qOKzBhWG8iH++rlByHg3Jf2cVVfzD0O91jyneRabQaxZmPUNIagN&#xA;L2ykFxAN+gd4+Df5LHFUy8t69ZeYNA0/W7In6tqECTxqftJzFWRvBkaqsOxGKpliqQ+efMc3l/y3&#xA;cX1pCLnU5WjtNKtCaCa9unENuh/yfUcFvBQTirfkzyrD5a0VbP1mu7+d2utV1GT+8uryXeaZvmdl&#xA;X9lQB2xVPcVYZ+Zf/TKf+BFYf8zMVZnirsVdirALv8mvLb6TJZWss0dwYfQS7cQu4HFkq37sV+F6&#xA;fQMNqpv+SHlmQuz319zmaZ7ji0CqzXHEvxT0eKDlGCoWgHTpQBtUdc/lJ5XlukuYWntGWb1mSD0U&#xA;Rq3E9yVK+n05XLKD1CgAHrVtVfTfyx8v6bb3ttZyTx29/YDTLiMeiP3S28dsrqRGKOEir4EkmnSg&#xA;VPdC0ZNHsEsYriSeCIkQiURjglSQo9NEr8zU4qmOKuxVh/5tf8oPcf8AMZpn/dSt8VZhirsVdirs&#xA;VdirsVdirsVYl518u6m91a+afLiqfM2kKyC3ZvTS/s2PKWxlftypyiY7JJQ9C2Kpz5Z8yaX5k0aD&#xA;VtMdjBNVXikXhNDKh4yQzRndJI2BVlPQ4qxjy5/zq3ne/wDLEnwaRrzS6v5dP7KTk8tQs17Cjt9Y&#xA;RR2Z/wCXFWd4qw3zaDdefPJOnOA1tHLf6o6MOstpbehEf9ib0sPcV7DFWZYq7FUt8weW9E8w2AsN&#xA;ZtVu7RZFmWNiy0kSvFgyFWBFfHFWPf8AKnfy4/6tH/Txdf8AVXFXf8qd/Lj/AKtH/Txdf9VcVd/y&#xA;p38uP+rR/wBPF1/1VxV3/Knfy4/6tH/Txdf9VcVd/wAqd/Lj/q0f9PF1/wBVcVYz5L/LHyPf3nmh&#xA;LvTjKtjrUtraA3FyOEK2tu4QUkG3KRj9OKsm/wCVO/lx/wBWj/p4uv8Aqrirv+VO/lx/1aP+ni6/&#xA;6q4q7/lTv5cf9Wj/AKeLr/qrirv+VO/lx/1aP+ni6/6q4qvh/KH8uop4pk0dTJDIksfOa4dQ8bB0&#xA;JVpCpoyg7jFWYYq7FXYq7FXYq7FXYq7FXYqwXzHo+p+WdXuPOXlq2e8juAp8yeX4et0i7fW7Vdh9&#xA;bjXqP92qOP2gpxVH67p+m+e/KNte6Jfqs9U1Dy/q8XxehdxVMTkeFaxyof2SynfFUX5J81DzFpBk&#xA;uIfqes2MhtNb00mrW15GB6iV/aRq842/aQg4qlvnM/U/OPkrV3YLbi8utLmPh9ftWaL6DNbInzYY&#xA;qzLFXYq7FXYq7FXYq7FXYqw/8vf97/Of/gQTf9QdrirMMVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVYLrHl/WPK+qXPmbylA93a3Terr3lZCFW4Y/bu7IMQsd1/Ouyyjr8dDiqBvrpL70PzJ8hn9I&#xA;yiP0Nd0mIcZL62iPxRNG1Cl7amvphqN1jOxFFU81+Cy89+QZJdAu0druNLzRL8VAjvLaQTW7mo5K&#xA;Y54gHGzDcbHFU08o+YofMXl2y1eNDDJOnG6tW+1BcxkpPA/+VFKrIfliqcYq7FXYq7FXYq7FVO4h&#xA;E9vLAXeMSoyGSNijryFKqw3DDscVfO//ADjRoPn6388ec38x6xfXVro9y9hJDPNK8NzfOw5XJDMQ&#xA;zLDCm534uMVfRmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVh2v+TtRttUl8zeTpY7PXpKH&#xA;UbCYsLHU0UcQtwFqY5lH93OoqOjBl2xViFj5ik0zWL/XdAsbiDgfV88+Q3UfXIJW/wCllZIDwkJp&#xA;8ZjPCZfiHx4qm2n63pWh+YYPMOmXKXPkXzxJG7XcZrFa6s9I0k7cEvKBHqPhmUVpyOKvSsVYf+Zl&#xA;1qcVjotrYX8+mtqWsWllcXVrwEwhl58whkWRQTxG/HFXf8q9v/8Aqc/MH/I6z/7JcVd/yr2//wCp&#xA;z8wf8jrP/slxV3/Kvb//AKnPzB/yOs/+yXFXf8q9v/8Aqc/MH/I6z/7JcVd/yr2//wCpz8wf8jrP&#xA;/slxVTi/LSeF5Xh83a9G87+pOySWSl34hOTkWnxNxRVqewGKqn/Kvb//AKnPzB/yOs/+yXFXf8q9&#xA;v/8Aqc/MH/I6z/7JcVd/yr2//wCpz8wf8jrP/slxV3/Kvb//AKnPzB/yOs/+yXFUk846DrflvQ/0&#xA;zZ+bdauJ7e7sVEFzJaPC6zXsMLq6rbISCkh74q9LxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpB5q8la&#xA;T5hENxI0ljrNlU6brVoRHd27HqFcghkb9uNwUbuMVeQeZV13yhLexeYtOiutF1omLWY4v3Wk6mZK&#xA;KbiPkf8AcbqJFCVdvRlYVV1emKsy/Kr8wYbwx+W9Qvmu7hVf9CalODHNdwQj95b3KNQx31oKCeNt&#xA;2FJBUEnFU5/Mv/plP/AisP8AmZiqL/MHVfMFppMFl5bVm17UphDZsixP6aoplmkKztHFQRxlfiYb&#xA;sO+2KsXH5r689leakmlwpZQOtqiStIsq3Js7e5k9T4eHCOSd4yagVXdgKnDSqWmfmn5luYIL06aH&#xA;TUZhp1tbjdY71p54IXLx8/3Mn1cs7ciBtRt6lVo/m/rQSGS3sbTUori4mjiktpQjenCY1UPG8haO&#xA;S4Z2MKElmVCeO9Aqnvmzz7rGi64+lW+mrP8AuorwXbFxElmz/V5pJCoO8M7IzAf7rJI3GKpJc/nB&#xA;rMdmxi0uJ70vKIIyZQk0EVteSC6Q8eXoyy2kYQ0+zIO+Kp75g88axo2vaVpDwWk9xdwwyXEatKHk&#xA;eS6jt5Ftlo1eCyGT4uy9uoVSb/laXmeC3t2utJge7uLVLhbOAzl6TWcl2Jh8DVhiKLDIaV5nbfiG&#xA;VUF/NnzG8N7PFaWElrY+jG10ryCOV5r66tQ0byGOMIEs+f7x1FWA5d8VbsfzZ81Xdv8AXho1vHaJ&#xA;D60sTtN637uzs7uUL8PE1N8UT/VqfDFWTfm1/wAoPcf8xmmf91K3wKzDFXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FVO5tre6t5La5iSe3mUpNDIodHRhQqytUEEdjirw/z7/zjtcJI2r/l5fHTb2JkmTSZ&#xA;XYQ84qmNrab7cLofsVqB9lSilgyqDsvzT1LW5/LHlPznYSaL560/XdPkntpk4JdwqXT6xAR8B3Px&#xA;BTTuu1Qqr2TzL5ts/L81gl1FI0V68oknVHZIY4YjI7sUV99gFXqxO2Ku0/zr5b1C8eztbmRp4rdr&#xA;ucPb3EawxLLJCfXeSNVif1IJBwkIb4TttiqR3n5g+RZb2C8u45ZI9PiN1a3j2l0ZI3lHp/u4PS9Y&#xA;8on5B1SnE1BphVde/m75SguYooGuLxJCimWG2ueNZLm0tgUZogkoU36M3BiR0oWIGBU607VvKd19&#xA;e1+ykif0oYxfahwZaQiBbpAXYCqiKZX28d98VQw/MfyfSMteSx81DES2t1GUDVCeqHiUxeoUIj50&#xA;5/s1xVAr+Zf5emeXUDPNHPCqW8lzLYX0ZCSRi5C8ngX4RE6yt2VSGagIxVV1n8wPJPoT2l80lzYM&#xA;bi3v5DazvbCOGGeSdi/p8JY1FrIjGMtvt44q7TvO/wCXunQQ2FncLZRFpKW5triH039Rg/rK8amJ&#xA;nk5U9Shc9K4qidO/MbyfqNzY2tneySz6iGNqn1a6WoUlauWiURgkfCXpy7VxVCfm1/yg9x/zGaZ/&#xA;3UrfFWYYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwb80bOznl8nzTQRyyweY7AwSOisyE8yS&#xA;hIqv2R0xVlGteX9K1qFYdRiMsac+AV2QgupUkFCCCK7EdDuMVUNJ8p6LpcdylvG8hvU9O8eeR5Xl&#xA;BkllYuzk1Je4evzp0AxVJrn8p/J11DHFcx3M/o8fSklup5HURp6aKGdiaKnwj7/tb4bVfP8Al75N&#xA;srC3VgbSOzKra3Ek7rwka4tJozyLCpM9hBTfelP2jgVfoPkjS9B0G50+7uRPp01tLHqETVhtiJXl&#xA;knfgXf014ScAOfwoqiu2KoSx8nfl/q7SG0vW1RoRFFfGO/kuOfp8pbZbjjI1fS9QvED0rXFUXcfl&#xA;55L1WzKGIywPOJ/VhnevqR2sdgwDq3T0bdUYeIr9rfFVSX8ufLEiSxFLgQyySyegLib009dJ0lVE&#xA;5cVVxdy8gPH2WirV3+WnlC71U6pNaubx5PVlkWaVObczIvLiw2RyWWnQ42qFh/Kjylb+g9sk8c9t&#xA;I89vMZ5CVncUE1OQHNfEUr3rhtVv5pRGH8v5IS7SmO60pDI5q7cdRthyY9ye+BWaYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqwz8y/8AplP/AAIrD/mZirM8VdirAfPnkrzZrfmC0v8ASb6O1tre&#xA;GNCGuJ4m5B5PVBjWOVGV45AKgodvi5CnEqlN5+Vvmd7xVivY7jTI7y3ntYLm8u6wLGLKSaUAK4lk&#xA;kmtZ/hc0o9a7suKozzf+XPmfXNfvrqLVmTTLtERbU3MsSiNURWgMccRPEyKZeQl6mnHviqCj/K3z&#xA;RaLNFa3yTWMreqdPm1C/SNp3nv3ecyIGkVwt1bN8P23jNSCFfAqrc/lr51m1CWX9NsttLFNHwS6l&#xA;jCrIkqiMIImb7ciy8xKCGWlDscNq6/8Ay91+A30jXLz2AiuVsFhubx7q0RpbqSMW8VUSV2W4jHxt&#xA;8Ppj7QpRVmPkmx16y0RE1z0zqM5N1cvG7P8Av7n99OhBFFWOR2jjAJ+BV+WBU/xVh/5tf8oPcf8A&#xA;MZpn/dSt8VZhirsVdirsVdirsVdirsVdirsVdirsVdirsVdirDPzQE6WegXcdtc3UVjrlldXS2dv&#xA;NdypDHz5v6NuksjBa78VOKor/lZPl3/lk1z/ALgGt/8AZHirv+Vk+Xf+WTXP+4Brf/ZHirv+Vk+X&#xA;f+WTXP8AuAa3/wBkeKu/5WT5d/5ZNc/7gGt/9keKu/5WT5d/5ZNc/wC4Brf/AGR4q7/lZPl3/lk1&#xA;z/uAa3/2R4q7/lZPl3/lk1z/ALgGt/8AZHirv+Vk+Xf+WTXP+4Brf/ZHirv+Vk+Xf+WTXP8AuAa3&#xA;/wBkeKu/5WT5d/5ZNc/7gGt/9keKse8+ea7HXvLjaVpen6zLfXF5p5jSTRNWgSkV9BK7NLNaxxoF&#xA;RCSWYDFXpWKuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:FA7F1174072068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FA7F1174072068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T09:36:24+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -327.599 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 327.599 li
272.7 327.599 li
272.7 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 327.599 mo
272.7 327.599 li
272.7 0 li
0 0 li
0 327.599 li
cp
clp
99.8999 1.7998 mo
213.3 1.7998 li
213.3 42.2998 li
99.8999 42.2998 li
99.8999 1.7998 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
0 327.599 mo
272.7 327.599 li
272.7 0 li
0 0 li
0 327.599 li
cp
clp
1.35 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
99.8999 1.7998 mo
213.3 1.7998 li
213.3 42.2998 li
99.8999 42.2998 li
99.8999 1.7998 li
cp
.746 .676 .668 .898 cmyk
@
grestore
128.311 10.4619 mo
129.251 10.4619 li
129.251 14.5557 li
129.251 15.2681 129.171 15.8335 129.01 16.2524 cv
128.849 16.6714 128.559 17.0122 128.139 17.2749 cv
127.719 17.5376 127.168 17.6689 126.486 17.6689 cv
125.824 17.6689 125.281 17.5547 124.86 17.3257 cv
124.438 17.0967 124.138 16.7656 123.958 16.3325 cv
123.777 15.8989 123.688 15.3066 123.688 14.5557 cv
123.688 10.4619 li
124.628 10.4619 li
124.628 14.5537 li
124.628 15.1699 124.685 15.624 124.799 15.9155 cv
124.913 16.2075 125.109 16.4321 125.386 16.5903 cv
125.664 16.7485 126.003 16.8271 126.404 16.8271 cv
127.091 16.8271 127.581 16.6709 127.873 16.3584 cv
128.165 16.0454 128.311 15.4438 128.311 14.5537 cv
128.311 10.4619 li
cp
0 0 0 1 cmyk
f
130.707 17.5498 mo
130.707 12.4121 li
131.489 12.4121 li
131.489 13.1421 li
131.865 12.5825 132.41 12.3032 133.121 12.3032 cv
133.43 12.3032 133.714 12.3584 133.974 12.4697 cv
134.233 12.5811 134.427 12.7266 134.556 12.9072 cv
134.685 13.0874 134.774 13.3018 134.826 13.5493 cv
134.858 13.7104 134.875 13.9922 134.875 14.395 cv
134.875 17.5498 li
134.003 17.5498 li
134.003 14.4277 li
134.003 14.0732 133.97 13.8086 133.902 13.6328 cv
133.834 13.4575 133.715 13.3174 133.543 13.2129 cv
133.371 13.1079 133.169 13.0557 132.938 13.0557 cv
132.568 13.0557 132.249 13.1729 131.98 13.4082 cv
131.712 13.6436 131.578 14.0898 131.578 14.7471 cv
131.578 17.5498 li
130.707 17.5498 li
cp
f
139.527 17.5498 mo
139.527 16.8979 li
139.202 17.4053 138.724 17.6592 138.092 17.6592 cv
137.684 17.6592 137.307 17.5464 136.964 17.3213 cv
136.621 17.0962 136.355 16.7817 136.167 16.3779 cv
135.979 15.9741 135.884 15.5103 135.884 14.9858 cv
135.884 14.4746 135.97 14.0103 136.14 13.5938 cv
136.311 13.1772 136.567 12.8579 136.908 12.6362 cv
137.25 12.4141 137.631 12.3032 138.053 12.3032 cv
138.362 12.3032 138.637 12.3687 138.879 12.4995 cv
139.12 12.6304 139.317 12.8008 139.468 13.0112 cv
139.468 10.4619 li
140.339 10.4619 li
140.339 17.5498 li
139.527 17.5498 li
cp
136.775 14.9883 mo
136.775 15.644 136.914 16.1343 137.192 16.459 cv
137.47 16.7837 137.798 16.9463 138.176 16.9463 cv
138.557 16.9463 138.881 16.791 139.147 16.481 cv
139.414 16.1709 139.547 15.6973 139.547 15.0605 cv
139.547 14.3599 139.412 13.8457 139.14 13.5176 cv
138.869 13.1895 138.535 13.0259 138.137 13.0259 cv
137.75 13.0259 137.425 13.1831 137.166 13.498 cv
136.905 13.8135 136.775 14.3101 136.775 14.9883 cv
cp
f
145.221 15.8867 mo
146.121 16.0059 li
145.98 16.5293 145.718 16.936 145.335 17.2251 cv
144.953 17.5146 144.464 17.6592 143.869 17.6592 cv
143.12 17.6592 142.526 17.4282 142.087 16.9668 cv
141.648 16.5049 141.428 15.8574 141.428 15.0244 cv
141.428 14.1621 141.65 13.4932 142.094 13.0171 cv
142.538 12.541 143.113 12.3032 143.821 12.3032 cv
144.506 12.3032 145.065 12.5361 145.499 13.0029 cv
145.934 13.4692 146.15 14.126 146.15 14.9722 cv
146.15 15.0234 146.149 15.1006 146.146 15.2036 cv
142.319 15.2036 li
142.352 15.7666 142.511 16.1982 142.797 16.4971 cv
143.083 16.7964 143.441 16.9463 143.869 16.9463 cv
144.188 16.9463 144.459 16.8618 144.685 16.6934 cv
144.91 16.5249 145.089 16.2559 145.221 15.8867 cv
cp
142.369 14.4912 mo
145.229 14.4912 li
145.191 14.0586 145.082 13.7349 144.901 13.519 cv
144.625 13.1836 144.267 13.0156 143.826 13.0156 cv
143.427 13.0156 143.092 13.1494 142.82 13.417 cv
142.548 13.6851 142.398 14.043 142.369 14.4912 cv
cp
f
147.21 17.5498 mo
147.21 12.4121 li
147.992 12.4121 li
147.992 13.1992 li
148.192 12.834 148.377 12.5938 148.547 12.4775 cv
148.716 12.3613 148.902 12.3032 149.105 12.3032 cv
149.399 12.3032 149.698 12.3945 150.002 12.5781 cv
149.691 13.3823 li
149.479 13.2637 149.269 13.2041 149.058 13.2041 cv
148.868 13.2041 148.699 13.2612 148.548 13.3755 cv
148.397 13.4897 148.29 13.6484 148.227 13.8511 cv
148.13 14.1602 148.081 14.498 148.081 14.8652 cv
148.081 17.5498 li
147.21 17.5498 li
cp
f
150.17 16.0156 mo
151.031 15.877 li
151.08 16.2222 151.215 16.4868 151.436 16.6704 cv
151.657 16.8545 151.967 16.9463 152.363 16.9463 cv
152.764 16.9463 153.062 16.8647 153.255 16.7021 cv
153.449 16.5396 153.546 16.3486 153.546 16.1299 cv
153.546 15.9331 153.459 15.7783 153.285 15.666 cv
153.164 15.5884 152.867 15.4902 152.395 15.3711 cv
151.758 15.2104 151.316 15.0713 151.07 14.9541 cv
150.823 14.8364 150.637 14.6738 150.51 14.4668 cv
150.382 14.2593 150.318 14.0303 150.318 13.7793 cv
150.318 13.5508 150.371 13.3394 150.476 13.145 cv
150.58 12.9502 150.723 12.7886 150.902 12.6602 cv
151.038 12.5605 151.223 12.4761 151.455 12.4067 cv
151.688 12.3379 151.939 12.3032 152.206 12.3032 cv
152.608 12.3032 152.962 12.3613 153.266 12.4775 cv
153.57 12.5942 153.795 12.752 153.939 12.9507 cv
154.084 13.1494 154.185 13.4155 154.239 13.7485 cv
153.388 13.8672 li
153.349 13.5996 153.237 13.3911 153.053 13.2407 cv
152.867 13.0908 152.606 13.0156 152.269 13.0156 cv
151.87 13.0156 151.586 13.082 151.416 13.2139 cv
151.245 13.3457 151.16 13.5005 151.16 13.6777 cv
151.16 13.7905 151.195 13.8921 151.266 13.9824 cv
151.337 14.0757 151.447 14.1528 151.599 14.2139 cv
151.686 14.2461 151.941 14.3203 152.365 14.4365 cv
152.979 14.6006 153.408 14.7349 153.652 14.8394 cv
153.897 14.9438 154.089 15.0957 154.229 15.2949 cv
154.367 15.4946 154.437 15.7422 154.437 16.0381 cv
154.437 16.3276 154.353 16.6001 154.183 16.856 cv
154.014 17.1113 153.77 17.3091 153.45 17.4492 cv
153.131 17.5889 152.77 17.6592 152.366 17.6592 cv
151.699 17.6592 151.189 17.521 150.84 17.2446 cv
150.49 16.9683 150.267 16.5586 150.17 16.0156 cv
cp
f
157.357 16.7734 mo
157.477 17.542 li
157.231 17.5938 157.014 17.6191 156.82 17.6191 cv
156.506 17.6191 156.261 17.5693 156.088 17.4692 cv
155.914 17.3691 155.792 17.2373 155.721 17.0742 cv
155.65 16.9111 155.615 16.5684 155.615 16.0449 cv
155.615 13.085 li
154.972 13.085 li
154.972 12.4121 li
155.615 12.4121 li
155.615 11.1406 li
156.486 10.6187 li
156.486 12.4121 li
157.357 12.4121 li
157.357 13.085 li
156.486 13.085 li
156.486 16.0952 li
156.486 16.3438 156.501 16.5039 156.532 16.5747 cv
156.563 16.646 156.612 16.7026 156.681 16.7446 cv
156.75 16.7866 156.849 16.8076 156.978 16.8076 cv
157.073 16.8076 157.2 16.7959 157.357 16.7734 cv
cp
f
161.575 16.9067 mo
161.251 17.1816 160.939 17.376 160.641 17.4893 cv
160.343 17.6025 160.022 17.6592 159.68 17.6592 cv
159.114 17.6592 158.681 17.5215 158.377 17.2466 cv
158.073 16.9717 157.922 16.6206 157.922 16.1929 cv
157.922 15.9424 157.979 15.7129 158.094 15.5059 cv
158.208 15.2983 158.358 15.1318 158.544 15.0068 cv
158.729 14.8813 158.938 14.7866 159.171 14.7222 cv
159.343 14.6772 159.601 14.6338 159.946 14.5918 cv
160.65 14.5083 161.168 14.4087 161.501 14.293 cv
161.504 14.1743 161.506 14.0986 161.506 14.0664 cv
161.506 13.7129 161.423 13.4644 161.258 13.3198 cv
161.035 13.1235 160.704 13.0259 160.265 13.0259 cv
159.854 13.0259 159.551 13.0977 159.355 13.2417 cv
159.16 13.3857 159.016 13.6406 158.922 14.0059 cv
158.07 13.8872 li
158.147 13.522 158.275 13.2275 158.453 13.0029 cv
158.631 12.7783 158.889 12.606 159.225 12.4849 cv
159.561 12.3638 159.95 12.3032 160.394 12.3032 cv
160.833 12.3032 161.19 12.3545 161.465 12.458 cv
161.74 12.5615 161.942 12.6914 162.071 12.8481 cv
162.201 13.0049 162.291 13.2026 162.343 13.4414 cv
162.372 13.5898 162.387 13.8569 162.387 14.2422 cv
162.387 15.3975 li
162.387 16.2031 162.404 16.7139 162.44 16.9297 cv
162.477 17.1455 162.548 17.3521 162.654 17.5498 cv
161.743 17.5498 li
161.656 17.3667 161.6 17.1523 161.575 16.9067 cv
cp
161.506 14.9761 mo
161.188 15.1045 160.713 15.2129 160.079 15.3027 cv
159.721 15.354 159.467 15.4121 159.318 15.4761 cv
159.169 15.54 159.055 15.6338 158.974 15.7573 cv
158.893 15.8804 158.853 16.0176 158.853 16.168 cv
158.853 16.3989 158.94 16.5913 159.116 16.7451 cv
159.292 16.8989 159.55 16.9756 159.889 16.9756 cv
160.224 16.9756 160.522 16.9028 160.784 16.7573 cv
161.046 16.6113 161.237 16.4121 161.36 16.1587 cv
161.454 15.9634 161.501 15.6748 161.501 15.2935 cv
161.506 14.9761 li
cp
f
163.723 17.5498 mo
163.723 12.4121 li
164.505 12.4121 li
164.505 13.1421 li
164.882 12.5825 165.426 12.3032 166.138 12.3032 cv
166.447 12.3032 166.73 12.3584 166.99 12.4697 cv
167.249 12.5811 167.443 12.7266 167.572 12.9072 cv
167.701 13.0874 167.791 13.3018 167.843 13.5493 cv
167.875 13.7104 167.891 13.9922 167.891 14.395 cv
167.891 17.5498 li
167.02 17.5498 li
167.02 14.4277 li
167.02 14.0732 166.986 13.8086 166.919 13.6328 cv
166.851 13.4575 166.731 13.3174 166.56 13.2129 cv
166.388 13.1079 166.186 13.0557 165.954 13.0557 cv
165.584 13.0557 165.266 13.1729 164.997 13.4082 cv
164.729 13.6436 164.595 14.0898 164.595 14.7471 cv
164.595 17.5498 li
163.723 17.5498 li
cp
f
172.544 17.5498 mo
172.544 16.8979 li
172.219 17.4053 171.74 17.6592 171.109 17.6592 cv
170.7 17.6592 170.324 17.5464 169.98 17.3213 cv
169.638 17.0962 169.372 16.7817 169.184 16.3779 cv
168.995 15.9741 168.9 15.5103 168.9 14.9858 cv
168.9 14.4746 168.986 14.0103 169.157 13.5938 cv
169.327 13.1772 169.583 12.8579 169.925 12.6362 cv
170.266 12.4141 170.647 12.3032 171.069 12.3032 cv
171.379 12.3032 171.654 12.3687 171.896 12.4995 cv
172.137 12.6304 172.333 12.8008 172.484 13.0112 cv
172.484 10.4619 li
173.355 10.4619 li
173.355 17.5498 li
172.544 17.5498 li
cp
169.792 14.9883 mo
169.792 15.644 169.931 16.1343 170.209 16.459 cv
170.486 16.7837 170.814 16.9463 171.192 16.9463 cv
171.573 16.9463 171.897 16.791 172.164 16.481 cv
172.431 16.1709 172.563 15.6973 172.563 15.0605 cv
172.563 14.3599 172.428 13.8457 172.156 13.5176 cv
171.886 13.1895 171.551 13.0259 171.153 13.0259 cv
170.766 13.0259 170.442 13.1831 170.182 13.498 cv
169.922 13.8135 169.792 14.3101 169.792 14.9883 cv
cp
f
179.375 16.7734 mo
179.494 17.542 li
179.25 17.5938 179.031 17.6191 178.838 17.6191 cv
178.523 17.6191 178.278 17.5693 178.105 17.4692 cv
177.932 17.3691 177.81 17.2373 177.738 17.0742 cv
177.668 16.9111 177.633 16.5684 177.633 16.0449 cv
177.633 13.085 li
176.989 13.085 li
176.989 12.4121 li
177.633 12.4121 li
177.633 11.1406 li
178.504 10.6187 li
178.504 12.4121 li
179.375 12.4121 li
179.375 13.085 li
178.504 13.085 li
178.504 16.0952 li
178.504 16.3438 178.519 16.5039 178.55 16.5747 cv
178.58 16.646 178.63 16.7026 178.699 16.7446 cv
178.768 16.7866 178.866 16.8076 178.995 16.8076 cv
179.091 16.8076 179.218 16.7959 179.375 16.7734 cv
cp
f
180.236 17.5498 mo
180.236 10.4619 li
181.107 10.4619 li
181.107 13.0117 li
181.512 12.5391 182.021 12.3032 182.638 12.3032 cv
183.017 12.3032 183.346 12.3779 183.625 12.5278 cv
183.903 12.6777 184.104 12.8843 184.224 13.1484 cv
184.344 13.4126 184.404 13.7959 184.404 14.2983 cv
184.404 17.5498 li
183.533 17.5498 li
183.533 14.3008 li
183.533 13.8667 183.439 13.5503 183.252 13.3525 cv
183.064 13.1543 182.8 13.0557 182.457 13.0557 cv
182.201 13.0557 181.96 13.1221 181.734 13.2559 cv
181.509 13.3892 181.348 13.5703 181.252 13.7988 cv
181.155 14.0273 181.107 14.3428 181.107 14.7451 cv
181.107 17.5498 li
180.236 17.5498 li
cp
f
189.246 15.8867 mo
190.146 16.0059 li
190.005 16.5293 189.743 16.936 189.36 17.2251 cv
188.978 17.5146 188.489 17.6592 187.895 17.6592 cv
187.146 17.6592 186.551 17.4282 186.112 16.9668 cv
185.673 16.5049 185.453 15.8574 185.453 15.0244 cv
185.453 14.1621 185.676 13.4932 186.119 13.0171 cv
186.563 12.541 187.139 12.3032 187.846 12.3032 cv
188.531 12.3032 189.091 12.5361 189.524 13.0029 cv
189.959 13.4692 190.176 14.126 190.176 14.9722 cv
190.176 15.0234 190.174 15.1006 190.171 15.2036 cv
186.345 15.2036 li
186.377 15.7666 186.536 16.1982 186.822 16.4971 cv
187.108 16.7964 187.466 16.9463 187.895 16.9463 cv
188.213 16.9463 188.484 16.8618 188.71 16.6934 cv
188.936 16.5249 189.113 16.2559 189.246 15.8867 cv
cp
186.395 14.4912 mo
189.255 14.4912 li
189.217 14.0586 189.107 13.7349 188.927 13.519 cv
188.65 13.1836 188.292 13.0156 187.852 13.0156 cv
187.452 13.0156 187.117 13.1494 186.845 13.417 cv
186.573 13.6851 186.423 14.043 186.395 14.4912 cv
cp
f
138.28 33.0239 mo
138.28 25.9155 li
139.072 25.9155 li
139.072 26.5908 li
139.259 26.3296 139.47 26.1333 139.705 26.0029 cv
139.94 25.8721 140.226 25.8066 140.561 25.8066 cv
140.999 25.8066 141.385 25.9194 141.72 26.1445 cv
142.056 26.3696 142.308 26.6875 142.479 27.0972 cv
142.65 27.5073 142.735 27.957 142.735 28.4458 cv
142.735 28.9702 142.641 29.4424 142.453 29.8623 cv
142.264 30.2822 141.99 30.6035 141.631 30.8271 cv
141.272 31.0508 140.895 31.1626 140.499 31.1626 cv
140.209 31.1626 139.949 31.1016 139.719 30.9795 cv
139.488 30.8574 139.299 30.7036 139.151 30.5171 cv
139.151 33.0239 li
138.28 33.0239 li
cp
139.072 28.5156 mo
139.072 29.1748 139.206 29.6621 139.472 29.9771 cv
139.739 30.292 140.062 30.4497 140.441 30.4497 cv
140.827 30.4497 141.157 30.2866 141.432 29.96 cv
141.707 29.6338 141.844 29.1279 141.844 28.4434 cv
141.844 27.7905 141.71 27.3018 141.441 26.9771 cv
141.173 26.6523 140.853 26.4897 140.48 26.4897 cv
140.11 26.4897 139.783 26.6626 139.499 27.0083 cv
139.214 27.354 139.072 27.8564 139.072 28.5156 cv
cp
f
143.774 31.0537 mo
143.774 25.9155 li
144.557 25.9155 li
144.557 26.7026 li
144.757 26.3379 144.941 26.0972 145.111 25.981 cv
145.28 25.8647 145.467 25.8066 145.671 25.8066 cv
145.964 25.8066 146.263 25.8984 146.566 26.082 cv
146.256 26.8862 li
146.045 26.7671 145.833 26.7075 145.622 26.7075 cv
145.433 26.7075 145.264 26.7646 145.113 26.8789 cv
144.963 26.9932 144.855 27.1519 144.791 27.3545 cv
144.694 27.6636 144.646 28.002 144.646 28.3687 cv
144.646 31.0537 li
143.774 31.0537 li
cp
f
146.755 28.4844 mo
146.755 27.5356 147.019 26.833 147.548 26.376 cv
147.989 25.9966 148.527 25.8066 149.163 25.8066 cv
149.869 25.8066 150.445 26.0376 150.894 26.499 cv
151.342 26.9604 151.566 27.5981 151.566 28.4121 cv
151.566 29.0718 151.467 29.5903 151.269 29.9683 cv
151.07 30.3462 150.781 30.6396 150.403 30.8491 cv
150.024 31.0581 149.61 31.1626 149.163 31.1626 cv
148.443 31.1626 147.862 30.9326 147.419 30.4727 cv
146.977 30.0127 146.755 29.3501 146.755 28.4844 cv
cp
147.646 28.4873 mo
147.646 29.1431 147.789 29.6338 148.077 29.9604 cv
148.364 30.2866 148.727 30.4497 149.163 30.4497 cv
149.596 30.4497 149.956 30.2856 150.243 29.958 cv
150.531 29.6299 150.675 29.1299 150.675 28.458 cv
150.675 27.8247 150.53 27.3452 150.241 27.0186 cv
149.952 26.6924 149.593 26.5293 149.163 26.5293 cv
148.727 26.5293 148.364 26.6919 148.077 27.0166 cv
147.789 27.3408 147.646 27.8311 147.646 28.4873 cv
cp
f
153.388 31.0537 mo
152.576 31.0537 li
152.576 23.9653 li
153.447 23.9653 li
153.447 26.4951 li
153.814 26.0361 154.283 25.8066 154.854 25.8066 cv
155.17 25.8066 155.47 25.8701 155.751 25.9971 cv
156.033 26.124 156.266 26.3027 156.448 26.5327 cv
156.63 26.7627 156.772 27.0405 156.876 27.3652 cv
156.979 27.6899 157.03 28.0376 157.03 28.4072 cv
157.03 29.2856 156.813 29.9644 156.378 30.4438 cv
155.943 30.9229 155.422 31.1626 154.813 31.1626 cv
154.207 31.1626 153.732 30.9106 153.388 30.4063 cv
153.388 31.0537 li
cp
153.378 28.4458 mo
153.378 29.0605 153.461 29.5049 153.629 29.7783 cv
153.902 30.2261 154.272 30.4497 154.739 30.4497 cv
155.119 30.4497 155.447 30.2847 155.725 29.9551 cv
156.001 29.625 156.14 29.1333 156.14 28.48 cv
156.14 27.8101 156.007 27.3159 155.741 26.9976 cv
155.476 26.6787 155.154 26.5195 154.778 26.5195 cv
154.398 26.5195 154.069 26.6846 153.793 27.0146 cv
153.516 27.3442 153.378 27.8213 153.378 28.4458 cv
cp
f
158.07 31.0537 mo
158.07 23.9653 li
158.941 23.9653 li
158.941 31.0537 li
158.07 31.0537 li
cp
f
163.793 29.3906 mo
164.694 29.5093 li
164.553 30.0332 164.29 30.4395 163.907 30.7285 cv
163.525 31.0181 163.036 31.1626 162.441 31.1626 cv
161.692 31.1626 161.098 30.9316 160.659 30.4702 cv
160.22 30.0088 160.001 29.3613 160.001 28.5283 cv
160.001 27.666 160.223 26.9971 160.666 26.521 cv
161.11 26.0449 161.686 25.8066 162.394 25.8066 cv
163.078 25.8066 163.638 26.04 164.072 26.5063 cv
164.506 26.9731 164.723 27.6294 164.723 28.4756 cv
164.723 28.5273 164.722 28.6045 164.718 28.7075 cv
160.892 28.7075 li
160.924 29.2705 161.083 29.7017 161.369 30.001 cv
161.656 30.3003 162.013 30.4497 162.441 30.4497 cv
162.76 30.4497 163.031 30.3657 163.257 30.1973 cv
163.482 30.0288 163.661 29.7598 163.793 29.3906 cv
cp
160.941 27.9946 mo
163.803 27.9946 li
163.764 27.5625 163.654 27.2383 163.475 27.0225 cv
163.197 26.687 162.839 26.5195 162.398 26.5195 cv
161.999 26.5195 161.664 26.6533 161.393 26.9209 cv
161.12 27.1885 160.97 27.5464 160.941 27.9946 cv
cp
f
165.791 31.0537 mo
165.791 25.9155 li
166.573 25.9155 li
166.573 26.6411 li
166.734 26.3906 166.948 26.1885 167.216 26.0361 cv
167.482 25.8828 167.787 25.8066 168.128 25.8066 cv
168.508 25.8066 168.819 25.8853 169.063 26.043 cv
169.306 26.2007 169.477 26.4209 169.576 26.7041 cv
169.984 26.1055 170.515 25.8066 171.169 25.8066 cv
171.68 25.8066 172.073 25.9473 172.349 26.2295 cv
172.623 26.5112 172.761 26.9453 172.761 27.5313 cv
172.761 31.0537 li
171.89 31.0537 li
171.89 27.8203 li
171.89 27.4727 171.861 27.2217 171.805 27.0688 cv
171.748 26.916 171.646 26.7925 171.497 26.6992 cv
171.348 26.606 171.174 26.5591 170.973 26.5591 cv
170.611 26.5591 170.311 26.6792 170.07 26.9189 cv
169.831 27.1592 169.712 27.5435 169.712 28.0718 cv
169.712 31.0537 li
168.841 31.0537 li
168.841 27.7188 li
168.841 27.332 168.77 27.0425 168.628 26.8491 cv
168.486 26.6558 168.255 26.5591 167.933 26.5591 cv
167.688 26.5591 167.462 26.6235 167.254 26.7524 cv
167.047 26.8813 166.896 27.0698 166.803 27.3179 cv
166.709 27.5659 166.663 27.9238 166.663 28.3906 cv
166.663 31.0537 li
165.791 31.0537 li
cp
f
174.286 31.0537 mo
174.286 30.0635 li
175.276 30.0635 li
175.276 31.0537 li
174.286 31.0537 li
cp
f
99.8999 90.8999 mo
213.3 90.8999 li
213.3 131.4 li
99.8999 131.4 li
99.8999 90.8999 li
cp
0 0 0 0 cmyk
f
1.35 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
99.8999 90.8999 mo
213.3 90.8999 li
213.3 131.4 li
99.8999 131.4 li
99.8999 90.8999 li
cp
.746 .676 .668 .898 cmyk
@
113.431 102.6 mo
113.431 95.5117 li
115.873 95.5117 li
116.424 95.5117 116.845 95.5454 117.135 95.6133 cv
117.542 95.7065 117.888 95.876 118.175 96.1206 cv
118.549 96.4365 118.829 96.8408 119.014 97.332 cv
119.199 97.8237 119.292 98.3853 119.292 99.0171 cv
119.292 99.5557 119.229 100.033 119.104 100.448 cv
118.978 100.864 118.816 101.208 118.62 101.48 cv
118.423 101.753 118.208 101.967 117.974 102.124 cv
117.74 102.28 117.458 102.398 117.128 102.479 cv
116.797 102.56 116.418 102.6 115.989 102.6 cv
113.431 102.6 li
cp
114.372 101.769 mo
115.883 101.769 li
116.35 101.769 116.716 101.725 116.981 101.638 cv
117.247 101.55 117.459 101.428 117.617 101.27 cv
117.839 101.047 118.012 100.747 118.136 100.371 cv
118.26 99.9946 118.322 99.5386 118.322 99.0024 cv
118.322 98.2598 118.2 97.689 117.957 97.29 cv
117.714 96.8916 117.419 96.624 117.071 96.4883 cv
116.82 96.3916 116.416 96.3433 115.859 96.3433 cv
114.372 96.3433 li
114.372 101.769 li
cp
0 0 0 1 cmyk
f
123.975 100.937 mo
124.876 101.056 li
124.735 101.58 124.473 101.986 124.09 102.275 cv
123.707 102.564 123.219 102.709 122.624 102.709 cv
121.875 102.709 121.28 102.478 120.841 102.017 cv
120.402 101.555 120.183 100.908 120.183 100.074 cv
120.183 99.2124 120.405 98.5435 120.849 98.0674 cv
121.292 97.5913 121.868 97.353 122.575 97.353 cv
123.26 97.353 123.82 97.5864 124.254 98.0527 cv
124.688 98.5195 124.905 99.1758 124.905 100.022 cv
124.905 100.074 124.904 100.151 124.9 100.254 cv
121.074 100.254 li
121.106 100.817 121.266 101.248 121.552 101.547 cv
121.838 101.847 122.195 101.996 122.624 101.996 cv
122.942 101.996 123.214 101.912 123.439 101.744 cv
123.665 101.575 123.843 101.306 123.975 100.937 cv
cp
121.124 99.541 mo
123.984 99.541 li
123.946 99.1089 123.836 98.7847 123.656 98.5688 cv
123.38 98.2334 123.021 98.0659 122.581 98.0659 cv
122.182 98.0659 121.846 98.1997 121.574 98.4673 cv
121.303 98.7349 121.152 99.0928 121.124 99.541 cv
cp
f
125.628 101.065 mo
126.489 100.927 li
126.538 101.272 126.672 101.537 126.894 101.721 cv
127.115 101.904 127.424 101.996 127.821 101.996 cv
128.222 101.996 128.519 101.915 128.713 101.752 cv
128.907 101.589 129.004 101.398 129.004 101.18 cv
129.004 100.983 128.917 100.829 128.743 100.716 cv
128.622 100.639 128.325 100.541 127.852 100.421 cv
127.216 100.26 126.774 100.121 126.528 100.004 cv
126.281 99.8867 126.095 99.7241 125.967 99.5166 cv
125.84 99.3091 125.776 99.0801 125.776 98.8291 cv
125.776 98.6011 125.829 98.3896 125.933 98.1948 cv
126.038 98 126.18 97.8389 126.361 97.71 cv
126.496 97.6104 126.68 97.5259 126.914 97.457 cv
127.146 97.3877 127.397 97.353 127.664 97.353 cv
128.066 97.353 128.42 97.4111 128.724 97.5278 cv
129.028 97.644 129.252 97.8018 129.397 98.0005 cv
129.542 98.1992 129.642 98.4653 129.697 98.7983 cv
128.845 98.917 li
128.807 98.6499 128.695 98.4409 128.51 98.291 cv
128.326 98.1406 128.064 98.0659 127.727 98.0659 cv
127.328 98.0659 127.044 98.1318 126.874 98.2642 cv
126.703 98.396 126.618 98.5508 126.618 98.7275 cv
126.618 98.8403 126.653 98.9419 126.724 99.0322 cv
126.795 99.1255 126.905 99.2031 127.057 99.2642 cv
127.144 99.2964 127.399 99.3706 127.823 99.4863 cv
128.437 99.6504 128.866 99.7847 129.111 99.8892 cv
129.355 99.9937 129.547 100.146 129.686 100.345 cv
129.825 100.544 129.895 100.792 129.895 101.088 cv
129.895 101.377 129.81 101.65 129.641 101.906 cv
129.472 102.162 129.227 102.359 128.908 102.499 cv
128.589 102.639 128.228 102.709 127.824 102.709 cv
127.157 102.709 126.648 102.571 126.298 102.294 cv
125.948 102.018 125.725 101.608 125.628 101.065 cv
cp
f
130.924 96.5015 mo
130.924 95.5117 li
131.795 95.5117 li
131.795 96.5015 li
130.924 96.5015 li
cp
130.924 102.6 mo
130.924 97.4619 li
131.795 97.4619 li
131.795 102.6 li
130.924 102.6 li
cp
f
132.962 103.026 mo
133.804 103.145 li
133.839 103.405 133.938 103.596 134.099 103.715 cv
134.315 103.876 134.61 103.957 134.984 103.957 cv
135.388 103.957 135.699 103.876 135.918 103.715 cv
136.138 103.555 136.287 103.33 136.364 103.041 cv
136.409 102.864 136.43 102.493 136.427 101.927 cv
136.046 102.375 135.572 102.6 135.004 102.6 cv
134.298 102.6 133.751 102.346 133.364 101.837 cv
132.977 101.328 132.784 100.717 132.784 100.005 cv
132.784 99.5161 132.873 99.0645 133.05 98.6504 cv
133.227 98.2363 133.484 97.917 133.821 97.6914 cv
134.157 97.4658 134.553 97.353 135.007 97.353 cv
135.613 97.353 136.113 97.6006 136.506 98.0957 cv
136.506 97.4619 li
137.308 97.4619 li
137.308 101.899 li
137.308 102.699 137.227 103.265 137.064 103.599 cv
136.901 103.932 136.644 104.196 136.292 104.389 cv
135.939 104.583 135.505 104.679 134.99 104.679 cv
134.378 104.679 133.884 104.542 133.507 104.267 cv
133.131 103.992 132.949 103.579 132.962 103.026 cv
cp
133.675 99.9429 mo
133.675 100.615 133.809 101.105 134.077 101.414 cv
134.344 101.723 134.68 101.877 135.083 101.877 cv
135.483 101.877 135.819 101.724 136.09 101.417 cv
136.361 101.109 136.496 100.628 136.496 99.9717 cv
136.496 99.3447 136.356 98.8716 136.078 98.5532 cv
135.798 98.2349 135.462 98.0757 135.068 98.0757 cv
134.681 98.0757 134.353 98.2324 134.081 98.5459 cv
133.81 98.8599 133.675 99.3252 133.675 99.9429 cv
cp
f
138.626 102.6 mo
138.626 97.4619 li
139.409 97.4619 li
139.409 98.1919 li
139.785 97.6328 140.33 97.353 141.041 97.353 cv
141.351 97.353 141.634 97.4087 141.894 97.5195 cv
142.153 97.6309 142.347 97.7764 142.476 97.957 cv
142.604 98.1372 142.695 98.3516 142.746 98.5996 cv
142.778 98.7607 142.794 99.0425 142.794 99.4453 cv
142.794 102.6 li
141.923 102.6 li
141.923 99.478 li
141.923 99.1235 141.89 98.8584 141.822 98.6831 cv
141.754 98.5073 141.635 98.3672 141.463 98.2627 cv
141.291 98.1577 141.089 98.1055 140.857 98.1055 cv
140.488 98.1055 140.169 98.2231 139.9 98.4585 cv
139.632 98.6934 139.498 99.1396 139.498 99.7969 cv
139.498 102.6 li
138.626 102.6 li
cp
f
150.239 101.957 mo
149.915 102.231 149.604 102.426 149.306 102.539 cv
149.007 102.652 148.687 102.709 148.344 102.709 cv
147.779 102.709 147.345 102.571 147.041 102.297 cv
146.738 102.021 146.586 101.67 146.586 101.243 cv
146.586 100.992 146.644 100.763 146.758 100.556 cv
146.873 100.349 147.022 100.182 147.209 100.057 cv
147.395 99.9312 147.604 99.8364 147.836 99.7725 cv
148.007 99.7271 148.266 99.6836 148.61 99.6421 cv
149.314 99.5586 149.833 99.4585 150.165 99.3428 cv
150.168 99.2241 150.17 99.1484 150.17 99.1162 cv
150.17 98.7632 150.088 98.5142 149.923 98.3696 cv
149.7 98.1738 149.368 98.0757 148.929 98.0757 cv
148.519 98.0757 148.216 98.1475 148.02 98.2915 cv
147.824 98.4355 147.68 98.6904 147.586 99.0557 cv
146.734 98.937 li
146.813 98.5723 146.939 98.2773 147.118 98.0527 cv
147.296 97.8286 147.553 97.6558 147.889 97.5347 cv
148.226 97.4136 148.615 97.353 149.058 97.353 cv
149.497 97.353 149.854 97.4048 150.13 97.5078 cv
150.404 97.6113 150.606 97.7412 150.736 97.8984 cv
150.865 98.0547 150.956 98.2524 151.008 98.4917 cv
151.036 98.6401 151.051 98.9072 151.051 99.292 cv
151.051 100.448 li
151.051 101.253 151.069 101.764 151.104 101.979 cv
151.141 102.195 151.212 102.402 151.318 102.6 cv
150.407 102.6 li
150.32 102.417 150.265 102.202 150.239 101.957 cv
cp
150.17 100.026 mo
149.854 100.154 149.378 100.263 148.744 100.353 cv
148.385 100.404 148.131 100.462 147.982 100.526 cv
147.834 100.59 147.719 100.684 147.638 100.807 cv
147.558 100.931 147.517 101.067 147.517 101.218 cv
147.517 101.449 147.604 101.642 147.78 101.795 cv
147.957 101.949 148.214 102.026 148.553 102.026 cv
148.889 102.026 149.188 101.953 149.448 101.807 cv
149.71 101.662 149.902 101.462 150.024 101.209 cv
150.118 101.013 150.165 100.725 150.165 100.343 cv
150.17 100.026 li
cp
f
152.388 102.6 mo
152.388 97.4619 li
153.17 97.4619 li
153.17 98.1919 li
153.547 97.6328 154.091 97.353 154.803 97.353 cv
155.111 97.353 155.396 97.4087 155.654 97.5195 cv
155.914 97.6309 156.107 97.7764 156.236 97.957 cv
156.365 98.1372 156.456 98.3516 156.507 98.5996 cv
156.539 98.7607 156.556 99.0425 156.556 99.4453 cv
156.556 102.6 li
155.685 102.6 li
155.685 99.478 li
155.685 99.1235 155.65 98.8584 155.583 98.6831 cv
155.516 98.5073 155.396 98.3672 155.224 98.2627 cv
155.052 98.1577 154.85 98.1055 154.619 98.1055 cv
154.249 98.1055 153.93 98.2231 153.661 98.4585 cv
153.393 98.6934 153.259 99.1396 153.259 99.7969 cv
153.259 102.6 li
152.388 102.6 li
cp
f
164 101.957 mo
163.677 102.231 163.365 102.426 163.066 102.539 cv
162.768 102.652 162.447 102.709 162.105 102.709 cv
161.54 102.709 161.105 102.571 160.803 102.297 cv
160.499 102.021 160.348 101.67 160.348 101.243 cv
160.348 100.992 160.404 100.763 160.52 100.556 cv
160.634 100.349 160.784 100.182 160.97 100.057 cv
161.155 99.9312 161.364 99.8364 161.597 99.7725 cv
161.768 99.7271 162.026 99.6836 162.371 99.6421 cv
163.075 99.5586 163.594 99.4585 163.926 99.3428 cv
163.93 99.2241 163.931 99.1484 163.931 99.1162 cv
163.931 98.7632 163.849 98.5142 163.684 98.3696 cv
163.461 98.1738 163.13 98.0757 162.689 98.0757 cv
162.279 98.0757 161.977 98.1475 161.781 98.2915 cv
161.586 98.4355 161.44 98.6904 161.347 99.0557 cv
160.496 98.937 li
160.573 98.5723 160.701 98.2773 160.879 98.0527 cv
161.057 97.8286 161.313 97.6558 161.65 97.5347 cv
161.986 97.4136 162.376 97.353 162.818 97.353 cv
163.259 97.353 163.616 97.4048 163.891 97.5078 cv
164.165 97.6113 164.367 97.7412 164.497 97.8984 cv
164.626 98.0547 164.717 98.2524 164.769 98.4917 cv
164.798 98.6401 164.813 98.9072 164.813 99.292 cv
164.813 100.448 li
164.813 101.253 164.83 101.764 164.866 101.979 cv
164.902 102.195 164.973 102.402 165.079 102.6 cv
164.169 102.6 li
164.081 102.417 164.025 102.202 164 101.957 cv
cp
163.931 100.026 mo
163.614 100.154 163.139 100.263 162.505 100.353 cv
162.146 100.404 161.893 100.462 161.743 100.526 cv
161.595 100.59 161.479 100.684 161.399 100.807 cv
161.318 100.931 161.277 101.067 161.277 101.218 cv
161.277 101.449 161.366 101.642 161.542 101.795 cv
161.718 101.949 161.975 102.026 162.313 102.026 cv
162.649 102.026 162.948 101.953 163.21 101.807 cv
163.471 101.662 163.663 101.462 163.786 101.209 cv
163.879 101.013 163.926 100.725 163.926 100.343 cv
163.931 100.026 li
cp
f
166.129 102.6 mo
166.129 95.5117 li
167 95.5117 li
167 102.6 li
166.129 102.6 li
cp
f
168.187 103.026 mo
169.027 103.145 li
169.063 103.405 169.161 103.596 169.323 103.715 cv
169.539 103.876 169.834 103.957 170.209 103.957 cv
170.612 103.957 170.924 103.876 171.143 103.715 cv
171.362 103.555 171.511 103.33 171.588 103.041 cv
171.634 102.864 171.654 102.493 171.651 101.927 cv
171.271 102.375 170.796 102.6 170.229 102.6 cv
169.522 102.6 168.976 102.346 168.589 101.837 cv
168.201 101.328 168.008 100.717 168.008 100.005 cv
168.008 99.5161 168.097 99.0645 168.273 98.6504 cv
168.451 98.2363 168.708 97.917 169.045 97.6914 cv
169.382 97.4658 169.777 97.353 170.231 97.353 cv
170.838 97.353 171.337 97.6006 171.73 98.0957 cv
171.73 97.4619 li
172.532 97.4619 li
172.532 101.899 li
172.532 102.699 172.451 103.265 172.288 103.599 cv
172.126 103.932 171.868 104.196 171.516 104.389 cv
171.163 104.583 170.729 104.679 170.214 104.679 cv
169.603 104.679 169.108 104.542 168.731 104.267 cv
168.355 103.992 168.173 103.579 168.187 103.026 cv
cp
168.899 99.9429 mo
168.899 100.615 169.033 101.105 169.301 101.414 cv
169.568 101.723 169.904 101.877 170.308 101.877 cv
170.707 101.877 171.043 101.724 171.313 101.417 cv
171.585 101.109 171.721 100.628 171.721 99.9717 cv
171.721 99.3447 171.581 98.8716 171.302 98.5532 cv
171.022 98.2349 170.687 98.0757 170.293 98.0757 cv
169.905 98.0757 169.576 98.2324 169.306 98.5459 cv
169.034 98.8599 168.899 99.3252 168.899 99.9429 cv
cp
f
173.524 100.031 mo
173.524 99.082 173.788 98.3794 174.317 97.9224 cv
174.759 97.543 175.297 97.353 175.933 97.353 cv
176.639 97.353 177.215 97.584 177.663 98.0454 cv
178.111 98.5068 178.336 99.1445 178.336 99.9585 cv
178.336 100.618 178.236 101.137 178.038 101.515 cv
177.84 101.893 177.552 102.187 177.173 102.396 cv
176.794 102.604 176.381 102.709 175.933 102.709 cv
175.213 102.709 174.632 102.479 174.189 102.019 cv
173.746 101.559 173.524 100.896 173.524 100.031 cv
cp
174.415 100.033 mo
174.415 100.689 174.559 101.181 174.847 101.507 cv
175.134 101.833 175.496 101.996 175.933 101.996 cv
176.365 101.996 176.726 101.832 177.013 101.504 cv
177.301 101.176 177.444 100.677 177.444 100.004 cv
177.444 99.3711 177.3 98.8916 177.011 98.5654 cv
176.722 98.2388 176.362 98.0757 175.933 98.0757 cv
175.496 98.0757 175.134 98.2383 174.847 98.563 cv
174.559 98.8877 174.415 99.3779 174.415 100.033 cv
cp
f
179.346 102.6 mo
179.346 97.4619 li
180.127 97.4619 li
180.127 98.249 li
180.327 97.8843 180.513 97.6436 180.682 97.5273 cv
180.852 97.4111 181.038 97.353 181.241 97.353 cv
181.535 97.353 181.834 97.4448 182.137 97.6284 cv
181.826 98.4326 li
181.615 98.3135 181.404 98.2539 181.192 98.2539 cv
181.004 98.2539 180.834 98.311 180.684 98.4253 cv
180.533 98.5396 180.426 98.6982 180.361 98.9009 cv
180.265 99.21 180.217 99.5479 180.217 99.915 cv
180.217 102.6 li
179.346 102.6 li
cp
f
182.652 96.5015 mo
182.652 95.5117 li
183.523 95.5117 li
183.523 96.5015 li
182.652 96.5015 li
cp
182.652 102.6 mo
182.652 97.4619 li
183.523 97.4619 li
183.523 102.6 li
182.652 102.6 li
cp
f
186.74 101.823 mo
186.859 102.592 li
186.615 102.644 186.396 102.669 186.204 102.669 cv
185.889 102.669 185.645 102.619 185.471 102.519 cv
185.297 102.419 185.175 102.288 185.104 102.125 cv
185.033 101.961 184.998 101.618 184.998 101.095 cv
184.998 98.1353 li
184.354 98.1353 li
184.354 97.4619 li
184.998 97.4619 li
184.998 96.1909 li
185.869 95.6685 li
185.869 97.4619 li
186.74 97.4619 li
186.74 98.1353 li
185.869 98.1353 li
185.869 101.145 li
185.869 101.394 185.885 101.554 185.915 101.625 cv
185.945 101.696 185.995 101.752 186.064 101.794 cv
186.133 101.836 186.232 101.857 186.36 101.857 cv
186.457 101.857 186.583 101.846 186.74 101.823 cv
cp
f
187.602 102.6 mo
187.602 95.5117 li
188.473 95.5117 li
188.473 98.062 li
188.877 97.5894 189.388 97.353 190.004 97.353 cv
190.382 97.353 190.711 97.4277 190.99 97.5776 cv
191.27 97.7275 191.469 97.9346 191.589 98.1987 cv
191.71 98.4629 191.77 98.8462 191.77 99.3486 cv
191.77 102.6 li
190.898 102.6 li
190.898 99.3511 li
190.898 98.9165 190.805 98.6006 190.617 98.4023 cv
190.431 98.2046 190.165 98.1055 189.822 98.1055 cv
189.566 98.1055 189.325 98.1724 189.1 98.3057 cv
188.874 98.4395 188.713 98.6201 188.617 98.8486 cv
188.521 99.0771 188.473 99.3926 188.473 99.7949 cv
188.473 102.6 li
187.602 102.6 li
cp
f
193.105 102.6 mo
193.105 97.4619 li
193.888 97.4619 li
193.888 98.1875 li
194.049 97.9365 194.263 97.7349 194.529 97.582 cv
194.797 97.4297 195.101 97.353 195.442 97.353 cv
195.822 97.353 196.133 97.4316 196.376 97.5894 cv
196.619 97.7471 196.791 97.9673 196.891 98.2505 cv
197.298 97.6523 197.829 97.353 198.482 97.353 cv
198.994 97.353 199.388 97.4941 199.662 97.7759 cv
199.938 98.0576 200.075 98.4917 200.075 99.0776 cv
200.075 102.6 li
199.204 102.6 li
199.204 99.3667 li
199.204 99.0186 199.176 98.7686 199.119 98.6152 cv
199.063 98.4624 198.96 98.3389 198.811 98.2456 cv
198.662 98.1523 198.487 98.1055 198.287 98.1055 cv
197.925 98.1055 197.624 98.2256 197.385 98.4658 cv
197.146 98.7056 197.026 99.0898 197.026 99.6182 cv
197.026 102.6 li
196.154 102.6 li
196.154 99.2651 li
196.154 98.8789 196.084 98.5889 195.942 98.3955 cv
195.801 98.2021 195.568 98.1055 195.247 98.1055 cv
195.002 98.1055 194.776 98.1699 194.568 98.2988 cv
194.36 98.4277 194.21 98.6162 194.117 98.8643 cv
194.023 99.1123 193.977 99.4697 193.977 99.937 cv
193.977 102.6 li
193.105 102.6 li
cp
f
112.516 114.3 mo
112.516 113.675 li
112.189 114.151 111.747 114.389 111.186 114.389 cv
110.939 114.389 110.708 114.342 110.494 114.247 cv
110.279 114.152 110.12 114.033 110.016 113.889 cv
109.912 113.746 109.839 113.569 109.797 113.361 cv
109.768 113.222 109.754 113 109.754 112.697 cv
109.754 110.096 li
110.467 110.096 li
110.467 112.423 li
110.467 112.794 110.481 113.044 110.51 113.173 cv
110.555 113.36 110.649 113.507 110.794 113.613 cv
110.938 113.72 111.118 113.773 111.331 113.773 cv
111.543 113.773 111.744 113.719 111.93 113.609 cv
112.117 113.5 112.249 113.352 112.327 113.164 cv
112.404 112.975 112.443 112.702 112.443 112.344 cv
112.443 110.096 li
113.156 110.096 li
113.156 114.3 li
112.516 114.3 li
cp
f
113.99 113.044 mo
114.695 112.931 li
114.734 113.213 114.845 113.43 115.026 113.581 cv
115.207 113.731 115.46 113.806 115.785 113.806 cv
116.113 113.806 116.355 113.739 116.514 113.606 cv
116.673 113.473 116.752 113.317 116.752 113.138 cv
116.752 112.977 116.681 112.851 116.539 112.758 cv
116.439 112.695 116.196 112.615 115.81 112.517 cv
115.289 112.386 114.928 112.272 114.727 112.176 cv
114.525 112.08 114.372 111.947 114.268 111.777 cv
114.164 111.607 114.112 111.42 114.112 111.215 cv
114.112 111.028 114.154 110.855 114.24 110.696 cv
114.326 110.537 114.442 110.404 114.59 110.299 cv
114.7 110.218 114.851 110.148 115.042 110.092 cv
115.233 110.035 115.438 110.007 115.656 110.007 cv
115.985 110.007 116.274 110.055 116.523 110.15 cv
116.772 110.245 116.956 110.374 117.074 110.537 cv
117.193 110.7 117.274 110.917 117.319 111.189 cv
116.623 111.287 li
116.591 111.068 116.5 110.897 116.349 110.774 cv
116.197 110.651 115.983 110.59 115.708 110.59 cv
115.381 110.59 115.148 110.645 115.009 110.752 cv
114.87 110.86 114.8 110.987 114.8 111.132 cv
114.8 111.224 114.829 111.307 114.887 111.381 cv
114.945 111.458 115.036 111.521 115.159 111.571 cv
115.23 111.597 115.439 111.658 115.786 111.752 cv
116.289 111.887 116.64 111.997 116.84 112.082 cv
117.04 112.167 117.196 112.292 117.311 112.455 cv
117.424 112.618 117.481 112.821 117.481 113.063 cv
117.481 113.3 117.412 113.523 117.273 113.732 cv
117.135 113.941 116.935 114.103 116.674 114.218 cv
116.413 114.332 116.117 114.389 115.787 114.389 cv
115.241 114.389 114.825 114.276 114.538 114.05 cv
114.252 113.824 114.069 113.489 113.99 113.044 cv
cp
f
118.324 109.311 mo
118.324 108.5 li
119.037 108.5 li
119.037 109.311 li
118.324 109.311 li
cp
118.324 114.3 mo
118.324 110.096 li
119.037 110.096 li
119.037 114.3 li
118.324 114.3 li
cp
f
120.122 114.3 mo
120.122 110.096 li
120.762 110.096 li
120.762 110.693 li
121.07 110.236 121.515 110.007 122.098 110.007 cv
122.35 110.007 122.583 110.053 122.795 110.144 cv
123.007 110.234 123.166 110.354 123.271 110.501 cv
123.376 110.648 123.45 110.824 123.492 111.027 cv
123.519 111.159 123.532 111.389 123.532 111.719 cv
123.532 114.3 li
122.819 114.3 li
122.819 111.746 li
122.819 111.456 122.792 111.239 122.736 111.095 cv
122.681 110.952 122.583 110.837 122.442 110.751 cv
122.302 110.666 122.137 110.623 121.947 110.623 cv
121.645 110.623 121.384 110.719 121.164 110.911 cv
120.944 111.104 120.834 111.469 120.834 112.007 cv
120.834 114.3 li
120.122 114.3 li
cp
f
124.494 114.648 mo
125.183 114.746 li
125.212 114.959 125.292 115.114 125.424 115.212 cv
125.601 115.344 125.843 115.41 126.149 115.41 cv
126.479 115.41 126.734 115.344 126.914 115.212 cv
127.093 115.081 127.214 114.897 127.278 114.66 cv
127.315 114.516 127.332 114.212 127.329 113.749 cv
127.018 114.116 126.63 114.3 126.166 114.3 cv
125.587 114.3 125.14 114.092 124.823 113.675 cv
124.507 113.259 124.349 112.76 124.349 112.177 cv
124.349 111.777 124.421 111.407 124.566 111.068 cv
124.711 110.73 124.921 110.468 125.197 110.284 cv
125.473 110.099 125.796 110.007 126.168 110.007 cv
126.664 110.007 127.072 110.209 127.394 110.615 cv
127.394 110.096 li
128.05 110.096 li
128.05 113.727 li
128.05 114.381 127.983 114.844 127.851 115.117 cv
127.718 115.39 127.507 115.605 127.218 115.764 cv
126.93 115.922 126.575 116.001 126.154 116.001 cv
125.653 116.001 125.249 115.889 124.94 115.664 cv
124.632 115.439 124.484 115.101 124.494 114.648 cv
cp
125.078 112.126 mo
125.078 112.676 125.187 113.077 125.406 113.33 cv
125.625 113.583 125.9 113.709 126.229 113.709 cv
126.557 113.709 126.832 113.583 127.053 113.332 cv
127.275 113.081 127.386 112.687 127.386 112.149 cv
127.386 111.637 127.272 111.25 127.043 110.989 cv
126.815 110.729 126.54 110.598 126.218 110.598 cv
125.901 110.598 125.632 110.727 125.41 110.983 cv
125.188 111.24 125.078 111.621 125.078 112.126 cv
cp
f
132.928 113.665 mo
133.025 114.293 li
132.825 114.335 132.646 114.357 132.489 114.357 cv
132.231 114.357 132.031 114.316 131.889 114.234 cv
131.747 114.152 131.647 114.044 131.589 113.911 cv
131.531 113.777 131.502 113.497 131.502 113.068 cv
131.502 110.647 li
130.976 110.647 li
130.976 110.096 li
131.502 110.096 li
131.502 109.056 li
132.215 108.629 li
132.215 110.096 li
132.928 110.096 li
132.928 110.647 li
132.215 110.647 li
132.215 113.109 li
132.215 113.313 132.228 113.444 132.252 113.502 cv
132.277 113.561 132.318 113.606 132.375 113.641 cv
132.431 113.675 132.512 113.692 132.617 113.692 cv
132.695 113.692 132.799 113.683 132.928 113.665 cv
cp
f
133.365 112.198 mo
133.365 111.422 133.582 110.847 134.014 110.473 cv
134.375 110.162 134.816 110.007 135.335 110.007 cv
135.913 110.007 136.385 110.196 136.752 110.574 cv
137.119 110.951 137.302 111.473 137.302 112.139 cv
137.302 112.679 137.221 113.103 137.059 113.412 cv
136.896 113.721 136.66 113.961 136.351 114.133 cv
136.041 114.304 135.702 114.389 135.335 114.389 cv
134.748 114.389 134.272 114.201 133.909 113.825 cv
133.547 113.448 133.365 112.906 133.365 112.198 cv
cp
134.094 112.2 mo
134.094 112.737 134.212 113.139 134.447 113.405 cv
134.683 113.672 134.979 113.806 135.335 113.806 cv
135.69 113.806 135.984 113.672 136.22 113.403 cv
136.455 113.135 136.573 112.726 136.573 112.176 cv
136.573 111.658 136.455 111.266 136.218 110.999 cv
135.981 110.732 135.687 110.598 135.335 110.598 cv
134.979 110.598 134.683 110.731 134.447 110.997 cv
134.212 111.263 134.094 111.664 134.094 112.2 cv
cp
f
138.136 115.912 mo
138.136 110.096 li
138.784 110.096 li
138.784 110.649 li
138.937 110.435 139.11 110.274 139.302 110.167 cv
139.495 110.061 139.728 110.007 140.002 110.007 cv
140.36 110.007 140.677 110.099 140.951 110.283 cv
141.225 110.468 141.432 110.728 141.572 111.063 cv
141.711 111.398 141.781 111.767 141.781 112.167 cv
141.781 112.596 141.704 112.982 141.55 113.325 cv
141.396 113.669 141.172 113.932 140.878 114.115 cv
140.584 114.298 140.275 114.389 139.952 114.389 cv
139.714 114.389 139.501 114.339 139.313 114.239 cv
139.125 114.14 138.97 114.014 138.849 113.861 cv
138.849 115.912 li
138.136 115.912 li
cp
138.784 112.224 mo
138.784 112.763 138.894 113.161 139.111 113.419 cv
139.33 113.677 139.594 113.806 139.904 113.806 cv
140.22 113.806 140.49 113.672 140.715 113.405 cv
140.94 113.138 141.052 112.725 141.052 112.164 cv
141.052 111.63 140.942 111.23 140.723 110.965 cv
140.503 110.699 140.241 110.566 139.936 110.566 cv
139.633 110.566 139.366 110.708 139.133 110.99 cv
138.9 111.273 138.784 111.684 138.784 112.224 cv
cp
f
142.356 112.559 mo
142.356 111.846 li
144.56 111.846 li
144.56 112.559 li
142.356 112.559 li
cp
f
148.051 114.3 mo
148.051 113.767 li
147.784 114.182 147.393 114.389 146.877 114.389 cv
146.542 114.389 146.234 114.297 145.953 114.113 cv
145.673 113.929 145.455 113.671 145.301 113.341 cv
145.146 113.011 145.069 112.631 145.069 112.202 cv
145.069 111.784 145.14 111.404 145.279 111.063 cv
145.419 110.722 145.628 110.461 145.907 110.279 cv
146.187 110.098 146.499 110.007 146.844 110.007 cv
147.097 110.007 147.322 110.061 147.52 110.168 cv
147.718 110.275 147.878 110.415 148.002 110.586 cv
148.002 108.5 li
148.715 108.5 li
148.715 114.3 li
148.051 114.3 li
cp
145.799 112.204 mo
145.799 112.741 145.912 113.142 146.14 113.408 cv
146.367 113.673 146.636 113.806 146.944 113.806 cv
147.257 113.806 147.521 113.679 147.739 113.425 cv
147.958 113.171 148.066 112.784 148.066 112.263 cv
148.066 111.69 147.956 111.269 147.733 111.001 cv
147.512 110.732 147.238 110.598 146.913 110.598 cv
146.596 110.598 146.331 110.727 146.118 110.985 cv
145.905 111.243 145.799 111.649 145.799 112.204 cv
cp
f
149.581 112.198 mo
149.581 111.422 149.798 110.847 150.23 110.473 cv
150.592 110.162 151.032 110.007 151.552 110.007 cv
152.13 110.007 152.602 110.196 152.968 110.574 cv
153.335 110.951 153.519 111.473 153.519 112.139 cv
153.519 112.679 153.437 113.103 153.274 113.412 cv
153.112 113.721 152.877 113.961 152.566 114.133 cv
152.257 114.304 151.918 114.389 151.552 114.389 cv
150.964 114.389 150.488 114.201 150.125 113.825 cv
149.763 113.448 149.581 112.906 149.581 112.198 cv
cp
150.311 112.2 mo
150.311 112.737 150.428 113.139 150.663 113.405 cv
150.898 113.672 151.195 113.806 151.552 113.806 cv
151.906 113.806 152.201 113.672 152.437 113.403 cv
152.672 113.135 152.789 112.726 152.789 112.176 cv
152.789 111.658 152.671 111.266 152.434 110.999 cv
152.197 110.732 151.903 110.598 151.552 110.598 cv
151.195 110.598 150.898 110.731 150.663 110.997 cv
150.428 111.263 150.311 111.664 150.311 112.2 cv
cp
f
154.891 114.3 mo
153.619 110.096 li
154.364 110.096 li
155.035 112.522 li
155.272 113.425 li
155.283 113.38 155.355 113.092 155.491 112.559 cv
156.156 110.096 li
156.886 110.096 li
157.52 112.537 li
157.726 113.338 li
157.968 112.526 li
158.694 110.096 li
159.387 110.096 li
158.067 114.3 li
157.331 114.3 li
156.663 111.785 li
156.495 111.066 li
155.645 114.3 li
154.891 114.3 li
cp
f
159.981 114.3 mo
159.981 110.096 li
160.622 110.096 li
160.622 110.693 li
160.93 110.236 161.375 110.007 161.957 110.007 cv
162.21 110.007 162.443 110.053 162.655 110.144 cv
162.867 110.234 163.025 110.354 163.131 110.501 cv
163.236 110.648 163.311 110.824 163.353 111.027 cv
163.379 111.159 163.392 111.389 163.392 111.719 cv
163.392 114.3 li
162.68 114.3 li
162.68 111.746 li
162.68 111.456 162.651 111.239 162.597 111.095 cv
162.541 110.952 162.443 110.837 162.303 110.751 cv
162.162 110.666 161.997 110.623 161.808 110.623 cv
161.505 110.623 161.244 110.719 161.024 110.911 cv
160.805 111.104 160.694 111.469 160.694 112.007 cv
160.694 114.3 li
159.981 114.3 li
cp
f
169.451 114.3 mo
169.451 113.767 li
169.185 114.182 168.793 114.389 168.276 114.389 cv
167.942 114.389 167.634 114.297 167.354 114.113 cv
167.073 113.929 166.855 113.671 166.701 113.341 cv
166.547 113.011 166.47 112.631 166.47 112.202 cv
166.47 111.784 166.54 111.404 166.68 111.063 cv
166.819 110.722 167.028 110.461 167.308 110.279 cv
167.587 110.098 167.899 110.007 168.244 110.007 cv
168.497 110.007 168.723 110.061 168.92 110.168 cv
169.117 110.275 169.278 110.415 169.402 110.586 cv
169.402 108.5 li
170.115 108.5 li
170.115 114.3 li
169.451 114.3 li
cp
167.199 112.204 mo
167.199 112.741 167.313 113.142 167.54 113.408 cv
167.768 113.673 168.035 113.806 168.345 113.806 cv
168.657 113.806 168.922 113.679 169.14 113.425 cv
169.358 113.171 169.467 112.784 169.467 112.263 cv
169.467 111.69 169.355 111.269 169.134 111.001 cv
168.912 110.732 168.639 110.598 168.313 110.598 cv
167.996 110.598 167.73 110.727 167.519 110.985 cv
167.306 111.243 167.199 111.649 167.199 112.204 cv
cp
f
174.108 112.939 mo
174.846 113.037 li
174.73 113.465 174.516 113.798 174.202 114.034 cv
173.89 114.271 173.489 114.389 173.003 114.389 cv
172.39 114.389 171.904 114.2 171.545 113.823 cv
171.186 113.445 171.006 112.916 171.006 112.233 cv
171.006 111.528 171.188 110.981 171.551 110.591 cv
171.914 110.202 172.385 110.007 172.964 110.007 cv
173.524 110.007 173.981 110.198 174.337 110.58 cv
174.692 110.961 174.87 111.499 174.87 112.191 cv
174.87 112.233 174.868 112.296 174.866 112.38 cv
171.735 112.38 li
171.762 112.841 171.892 113.194 172.126 113.438 cv
172.36 113.684 172.652 113.806 173.003 113.806 cv
173.264 113.806 173.486 113.737 173.67 113.599 cv
173.854 113.461 174.001 113.241 174.108 112.939 cv
cp
171.775 111.797 mo
174.116 111.797 li
174.085 111.443 173.995 111.179 173.848 111.002 cv
173.622 110.728 173.328 110.59 172.968 110.59 cv
172.642 110.59 172.367 110.7 172.145 110.919 cv
171.922 111.138 171.799 111.431 171.775 111.797 cv
cp
f
175.461 113.044 mo
176.166 112.931 li
176.205 113.213 176.315 113.43 176.497 113.581 cv
176.678 113.731 176.931 113.806 177.256 113.806 cv
177.584 113.806 177.826 113.739 177.985 113.606 cv
178.144 113.473 178.223 113.317 178.223 113.138 cv
178.223 112.977 178.152 112.851 178.01 112.758 cv
177.91 112.695 177.667 112.615 177.281 112.517 cv
176.76 112.386 176.399 112.272 176.197 112.176 cv
175.996 112.08 175.843 111.947 175.738 111.777 cv
175.635 111.607 175.582 111.42 175.582 111.215 cv
175.582 111.028 175.625 110.855 175.711 110.696 cv
175.797 110.537 175.913 110.404 176.061 110.299 cv
176.171 110.218 176.322 110.148 176.513 110.092 cv
176.704 110.035 176.908 110.007 177.127 110.007 cv
177.456 110.007 177.745 110.055 177.994 110.15 cv
178.243 110.245 178.427 110.374 178.545 110.537 cv
178.664 110.7 178.745 110.917 178.79 111.189 cv
178.094 111.287 li
178.062 111.068 177.971 110.897 177.819 110.774 cv
177.668 110.651 177.454 110.59 177.179 110.59 cv
176.853 110.59 176.619 110.645 176.48 110.752 cv
176.341 110.86 176.271 110.987 176.271 111.132 cv
176.271 111.224 176.3 111.307 176.357 111.381 cv
176.416 111.458 176.506 111.521 176.63 111.571 cv
176.701 111.597 176.91 111.658 177.257 111.752 cv
177.76 111.887 178.11 111.997 178.311 112.082 cv
178.511 112.167 178.667 112.292 178.781 112.455 cv
178.896 112.618 178.952 112.821 178.952 113.063 cv
178.952 113.3 178.883 113.523 178.744 113.732 cv
178.605 113.941 178.406 114.103 178.145 114.218 cv
177.884 114.332 177.588 114.389 177.258 114.389 cv
176.712 114.389 176.296 114.276 176.009 114.05 cv
175.723 113.824 175.54 113.489 175.461 113.044 cv
cp
f
179.795 109.311 mo
179.795 108.5 li
180.507 108.5 li
180.507 109.311 li
179.795 109.311 li
cp
179.795 114.3 mo
179.795 110.096 li
180.507 110.096 li
180.507 114.3 li
179.795 114.3 li
cp
f
181.462 114.648 mo
182.15 114.746 li
182.179 114.959 182.26 115.114 182.392 115.212 cv
182.568 115.344 182.811 115.41 183.116 115.41 cv
183.446 115.41 183.701 115.344 183.881 115.212 cv
184.061 115.081 184.182 114.897 184.245 114.66 cv
184.282 114.516 184.299 114.212 184.297 113.749 cv
183.985 114.116 183.598 114.3 183.133 114.3 cv
182.555 114.3 182.107 114.092 181.791 113.675 cv
181.475 113.259 181.315 112.76 181.315 112.177 cv
181.315 111.777 181.389 111.407 181.533 111.068 cv
181.679 110.73 181.889 110.468 182.164 110.284 cv
182.439 110.099 182.764 110.007 183.135 110.007 cv
183.631 110.007 184.04 110.209 184.361 110.615 cv
184.361 110.096 li
185.018 110.096 li
185.018 113.727 li
185.018 114.381 184.951 114.844 184.818 115.117 cv
184.685 115.39 184.475 115.605 184.186 115.764 cv
183.897 115.922 183.542 116.001 183.121 116.001 cv
182.62 116.001 182.216 115.889 181.908 115.664 cv
181.6 115.439 181.451 115.101 181.462 114.648 cv
cp
182.045 112.126 mo
182.045 112.676 182.154 113.077 182.373 113.33 cv
182.593 113.583 182.867 113.709 183.197 113.709 cv
183.524 113.709 183.799 113.583 184.021 113.332 cv
184.242 113.081 184.354 112.687 184.354 112.149 cv
184.354 111.637 184.239 111.25 184.011 110.989 cv
183.782 110.729 183.507 110.598 183.186 110.598 cv
182.868 110.598 182.6 110.727 182.377 110.983 cv
182.155 111.24 182.045 111.621 182.045 112.126 cv
cp
f
186.097 114.3 mo
186.097 110.096 li
186.736 110.096 li
186.736 110.693 li
187.045 110.236 187.489 110.007 188.072 110.007 cv
188.325 110.007 188.558 110.053 188.77 110.144 cv
188.981 110.234 189.141 110.354 189.245 110.501 cv
189.351 110.648 189.425 110.824 189.467 111.027 cv
189.493 111.159 189.507 111.389 189.507 111.719 cv
189.507 114.3 li
188.794 114.3 li
188.794 111.746 li
188.794 111.456 188.766 111.239 188.711 111.095 cv
188.655 110.952 188.558 110.837 188.417 110.751 cv
188.276 110.666 188.111 110.623 187.922 110.623 cv
187.619 110.623 187.358 110.719 187.139 110.911 cv
186.919 111.104 186.809 111.469 186.809 112.007 cv
186.809 114.3 li
186.097 114.3 li
cp
f
195.598 113.773 mo
195.333 113.999 195.078 114.157 194.834 114.25 cv
194.589 114.343 194.327 114.389 194.047 114.389 cv
193.585 114.389 193.229 114.277 192.981 114.052 cv
192.732 113.827 192.608 113.54 192.608 113.189 cv
192.608 112.984 192.655 112.797 192.749 112.627 cv
192.843 112.458 192.966 112.322 193.118 112.219 cv
193.27 112.117 193.44 112.039 193.631 111.986 cv
193.771 111.949 193.982 111.914 194.265 111.88 cv
194.841 111.812 195.265 111.73 195.537 111.635 cv
195.54 111.538 195.541 111.476 195.541 111.45 cv
195.541 111.161 195.474 110.957 195.339 110.839 cv
195.156 110.679 194.885 110.598 194.525 110.598 cv
194.189 110.598 193.941 110.657 193.782 110.775 cv
193.622 110.893 193.504 111.101 193.427 111.4 cv
192.73 111.303 li
192.794 111.004 192.898 110.763 193.044 110.58 cv
193.189 110.396 193.399 110.255 193.675 110.156 cv
193.95 110.057 194.269 110.007 194.631 110.007 cv
194.99 110.007 195.283 110.049 195.508 110.134 cv
195.732 110.218 195.898 110.325 196.004 110.453 cv
196.109 110.581 196.184 110.743 196.227 110.938 cv
196.25 111.06 196.262 111.278 196.262 111.594 cv
196.262 112.539 li
196.262 113.198 196.276 113.616 196.306 113.792 cv
196.335 113.969 196.394 114.138 196.48 114.3 cv
195.735 114.3 li
195.664 114.15 195.618 113.975 195.598 113.773 cv
cp
195.541 112.194 mo
195.281 112.299 194.893 112.388 194.374 112.461 cv
194.08 112.503 193.873 112.551 193.751 112.603 cv
193.629 112.656 193.535 112.732 193.47 112.833 cv
193.403 112.934 193.37 113.046 193.37 113.169 cv
193.37 113.358 193.442 113.516 193.586 113.642 cv
193.73 113.768 193.94 113.83 194.218 113.83 cv
194.492 113.83 194.736 113.771 194.95 113.651 cv
195.165 113.532 195.321 113.369 195.422 113.162 cv
195.499 113.002 195.537 112.766 195.537 112.454 cv
195.541 112.194 li
cp
f
197.355 114.3 mo
197.355 110.096 li
197.995 110.096 li
197.995 110.693 li
198.304 110.236 198.749 110.007 199.331 110.007 cv
199.584 110.007 199.816 110.053 200.028 110.144 cv
200.24 110.234 200.399 110.354 200.505 110.501 cv
200.61 110.648 200.684 110.824 200.726 111.027 cv
200.752 111.159 200.766 111.389 200.766 111.719 cv
200.766 114.3 li
200.053 114.3 li
200.053 111.746 li
200.053 111.456 200.025 111.239 199.97 111.095 cv
199.914 110.952 199.816 110.837 199.676 110.751 cv
199.535 110.666 199.37 110.623 199.181 110.623 cv
198.878 110.623 198.617 110.719 198.397 110.911 cv
198.178 111.104 198.068 111.469 198.068 112.007 cv
198.068 114.3 li
197.355 114.3 li
cp
f
204.572 114.3 mo
204.572 113.767 li
204.307 114.182 203.915 114.389 203.398 114.389 cv
203.063 114.389 202.756 114.297 202.476 114.113 cv
202.194 113.929 201.977 113.671 201.823 113.341 cv
201.669 113.011 201.592 112.631 201.592 112.202 cv
201.592 111.784 201.661 111.404 201.801 111.063 cv
201.94 110.722 202.15 110.461 202.43 110.279 cv
202.709 110.098 203.021 110.007 203.366 110.007 cv
203.619 110.007 203.844 110.061 204.042 110.168 cv
204.239 110.275 204.4 110.415 204.523 110.586 cv
204.523 108.5 li
205.236 108.5 li
205.236 114.3 li
204.572 114.3 li
cp
202.32 112.204 mo
202.32 112.741 202.435 113.142 202.661 113.408 cv
202.889 113.673 203.157 113.806 203.467 113.806 cv
203.778 113.806 204.043 113.679 204.262 113.425 cv
204.479 113.171 204.589 112.784 204.589 112.263 cv
204.589 111.69 204.478 111.269 204.256 111.001 cv
204.033 110.732 203.76 110.598 203.435 110.598 cv
203.117 110.598 202.853 110.727 202.64 110.985 cv
202.427 111.243 202.32 111.649 202.32 112.204 cv
cp
f
109.519 123.559 mo
110.215 123.655 li
110.139 124.134 109.944 124.509 109.629 124.78 cv
109.314 125.051 108.928 125.187 108.47 125.187 cv
107.896 125.187 107.435 124.999 107.085 124.624 cv
106.737 124.249 106.563 123.711 106.563 123.011 cv
106.563 122.559 106.638 122.163 106.788 121.823 cv
106.938 121.483 107.167 121.229 107.473 121.059 cv
107.78 120.889 108.114 120.804 108.475 120.804 cv
108.931 120.804 109.304 120.92 109.593 121.15 cv
109.883 121.381 110.069 121.708 110.151 122.133 cv
109.462 122.238 li
109.396 121.956 109.279 121.744 109.112 121.601 cv
108.944 121.459 108.741 121.388 108.503 121.388 cv
108.145 121.388 107.853 121.516 107.628 121.773 cv
107.404 122.029 107.292 122.436 107.292 122.991 cv
107.292 123.555 107.399 123.965 107.616 124.22 cv
107.832 124.476 108.114 124.604 108.462 124.604 cv
108.742 124.604 108.976 124.518 109.163 124.347 cv
109.35 124.176 109.469 123.913 109.519 123.559 cv
cp
f
110.815 125.097 mo
110.815 120.894 li
111.455 120.894 li
111.455 121.538 li
111.619 121.239 111.77 121.042 111.908 120.947 cv
112.047 120.852 112.2 120.804 112.366 120.804 cv
112.606 120.804 112.851 120.879 113.099 121.029 cv
112.845 121.688 li
112.672 121.59 112.499 121.542 112.326 121.542 cv
112.172 121.542 112.033 121.588 111.91 121.682 cv
111.787 121.775 111.699 121.905 111.646 122.071 cv
111.567 122.324 111.528 122.601 111.528 122.9 cv
111.528 125.097 li
110.815 125.097 li
cp
f
113.521 120.108 mo
113.521 119.298 li
114.233 119.298 li
114.233 120.108 li
113.521 120.108 li
cp
113.521 125.097 mo
113.521 120.894 li
114.233 120.894 li
114.233 125.097 li
113.521 125.097 li
cp
f
116.866 124.462 mo
116.963 125.091 li
116.763 125.133 116.584 125.154 116.426 125.154 cv
116.168 125.154 115.969 125.113 115.827 125.031 cv
115.685 124.949 115.585 124.842 115.527 124.708 cv
115.469 124.575 115.44 124.294 115.44 123.866 cv
115.44 121.444 li
114.914 121.444 li
114.914 120.894 li
115.44 120.894 li
115.44 119.854 li
116.153 119.426 li
116.153 120.894 li
116.866 120.894 li
116.866 121.444 li
116.153 121.444 li
116.153 123.907 li
116.153 124.11 116.165 124.241 116.19 124.299 cv
116.215 124.357 116.256 124.404 116.313 124.438 cv
116.369 124.473 116.449 124.49 116.555 124.49 cv
116.633 124.49 116.737 124.48 116.866 124.462 cv
cp
f
117.57 120.108 mo
117.57 119.298 li
118.283 119.298 li
118.283 120.108 li
117.57 120.108 li
cp
117.57 125.097 mo
117.57 120.894 li
118.283 120.894 li
118.283 125.097 li
117.57 125.097 li
cp
f
122.114 123.559 mo
122.811 123.655 li
122.735 124.134 122.539 124.509 122.225 124.78 cv
121.91 125.051 121.523 125.187 121.065 125.187 cv
120.491 125.187 120.03 124.999 119.681 124.624 cv
119.333 124.249 119.158 123.711 119.158 123.011 cv
119.158 122.559 119.233 122.163 119.383 121.823 cv
119.533 121.483 119.762 121.229 120.069 121.059 cv
120.376 120.889 120.709 120.804 121.071 120.804 cv
121.526 120.804 121.899 120.92 122.189 121.15 cv
122.479 121.381 122.665 121.708 122.746 122.133 cv
122.058 122.238 li
121.992 121.956 121.875 121.744 121.707 121.601 cv
121.54 121.459 121.337 121.388 121.099 121.388 cv
120.74 121.388 120.448 121.516 120.224 121.773 cv
119.999 122.029 119.887 122.436 119.887 122.991 cv
119.887 123.555 119.995 123.965 120.211 124.22 cv
120.428 124.476 120.71 124.604 121.058 124.604 cv
121.337 124.604 121.571 124.518 121.758 124.347 cv
121.945 124.176 122.064 123.913 122.114 123.559 cv
cp
f
126.165 124.571 mo
125.899 124.796 125.645 124.955 125.4 125.047 cv
125.156 125.14 124.894 125.187 124.614 125.187 cv
124.151 125.187 123.796 125.074 123.548 124.849 cv
123.3 124.624 123.175 124.337 123.175 123.987 cv
123.175 123.782 123.222 123.594 123.316 123.425 cv
123.41 123.255 123.533 123.119 123.685 123.017 cv
123.836 122.914 124.008 122.836 124.198 122.784 cv
124.338 122.747 124.549 122.711 124.832 122.677 cv
125.408 122.608 125.832 122.527 126.104 122.433 cv
126.106 122.335 126.108 122.273 126.108 122.247 cv
126.108 121.958 126.04 121.754 125.905 121.636 cv
125.723 121.476 125.452 121.396 125.092 121.396 cv
124.756 121.396 124.509 121.455 124.349 121.572 cv
124.188 121.69 124.07 121.898 123.994 122.197 cv
123.297 122.101 li
123.36 121.802 123.465 121.561 123.61 121.377 cv
123.756 121.193 123.966 121.052 124.241 120.953 cv
124.517 120.854 124.835 120.804 125.198 120.804 cv
125.558 120.804 125.85 120.847 126.075 120.931 cv
126.299 121.016 126.465 121.122 126.571 121.25 cv
126.676 121.378 126.75 121.541 126.793 121.736 cv
126.817 121.857 126.829 122.076 126.829 122.391 cv
126.829 123.336 li
126.829 123.995 126.843 124.413 126.873 124.59 cv
126.902 124.766 126.96 124.936 127.047 125.097 cv
126.302 125.097 li
126.23 124.947 126.185 124.772 126.165 124.571 cv
cp
126.108 122.991 mo
125.849 123.096 125.459 123.186 124.941 123.259 cv
124.647 123.301 124.439 123.348 124.318 123.4 cv
124.196 123.453 124.103 123.529 124.036 123.63 cv
123.97 123.731 123.937 123.844 123.937 123.967 cv
123.937 124.156 124.009 124.313 124.153 124.439 cv
124.297 124.564 124.507 124.627 124.785 124.627 cv
125.059 124.627 125.304 124.568 125.518 124.449 cv
125.731 124.33 125.889 124.166 125.989 123.959 cv
126.065 123.799 126.104 123.563 126.104 123.251 cv
126.108 122.991 li
cp
f
127.906 125.097 mo
127.906 119.298 li
128.619 119.298 li
128.619 125.097 li
127.906 125.097 li
cp
f
129.704 125.097 mo
129.704 119.298 li
130.417 119.298 li
130.417 125.097 li
129.704 125.097 li
cp
f
131.486 126.713 mo
131.405 126.055 li
131.561 126.097 131.697 126.118 131.813 126.118 cv
131.972 126.118 132.099 126.091 132.194 126.039 cv
132.289 125.986 132.367 125.912 132.428 125.817 cv
132.473 125.745 132.545 125.568 132.646 125.286 cv
132.659 125.246 132.68 125.188 132.709 125.111 cv
131.113 120.894 li
131.875 120.894 li
132.753 123.32 li
132.867 123.628 132.969 123.951 133.059 124.291 cv
133.141 123.971 133.239 123.656 133.353 123.345 cv
134.248 120.894 li
134.96 120.894 li
133.371 125.17 li
133.199 125.63 133.065 125.947 132.97 126.121 cv
132.843 126.354 132.698 126.526 132.534 126.635 cv
132.37 126.744 132.174 126.798 131.946 126.798 cv
131.809 126.798 131.655 126.77 131.486 126.713 cv
cp
f
140.688 123.736 mo
141.425 123.834 li
141.31 124.262 141.095 124.595 140.782 124.832 cv
140.469 125.068 140.069 125.187 139.583 125.187 cv
138.969 125.187 138.483 124.998 138.124 124.62 cv
137.765 124.242 137.585 123.713 137.585 123.031 cv
137.585 122.326 137.767 121.778 138.13 121.389 cv
138.493 120.999 138.964 120.804 139.543 120.804 cv
140.104 120.804 140.561 120.995 140.916 121.377 cv
141.271 121.759 141.449 122.296 141.449 122.988 cv
141.449 123.03 141.448 123.093 141.445 123.178 cv
138.314 123.178 li
138.341 123.638 138.471 123.991 138.706 124.236 cv
138.939 124.481 139.232 124.604 139.582 124.604 cv
139.843 124.604 140.065 124.534 140.25 124.396 cv
140.434 124.259 140.58 124.039 140.688 123.736 cv
cp
138.355 122.595 mo
140.696 122.595 li
140.664 122.241 140.575 121.976 140.427 121.799 cv
140.201 121.525 139.908 121.388 139.547 121.388 cv
139.221 121.388 138.946 121.497 138.724 121.716 cv
138.501 121.935 138.378 122.228 138.355 122.595 cv
cp
f
143.481 125.097 mo
141.895 120.894 li
142.657 120.894 li
143.556 123.411 li
143.654 123.683 143.744 123.965 143.827 124.258 cv
143.89 124.037 143.978 123.77 144.092 123.458 cv
145.026 120.894 li
145.758 120.894 li
144.175 125.097 li
143.481 125.097 li
cp
f
148.909 124.571 mo
148.645 124.796 148.39 124.955 148.146 125.047 cv
147.901 125.14 147.639 125.187 147.358 125.187 cv
146.896 125.187 146.541 125.074 146.293 124.849 cv
146.045 124.624 145.92 124.337 145.92 123.987 cv
145.92 123.782 145.967 123.594 146.061 123.425 cv
146.154 123.255 146.277 123.119 146.43 123.017 cv
146.581 122.914 146.752 122.836 146.942 122.784 cv
147.083 122.747 147.294 122.711 147.576 122.677 cv
148.152 122.608 148.576 122.527 148.849 122.433 cv
148.852 122.335 148.853 122.273 148.853 122.247 cv
148.853 121.958 148.785 121.754 148.65 121.636 cv
148.468 121.476 148.196 121.396 147.837 121.396 cv
147.501 121.396 147.253 121.455 147.094 121.572 cv
146.934 121.69 146.815 121.898 146.738 122.197 cv
146.042 122.101 li
146.105 121.802 146.21 121.561 146.355 121.377 cv
146.501 121.193 146.711 121.052 146.986 120.953 cv
147.262 120.854 147.58 120.804 147.942 120.804 cv
148.303 120.804 148.595 120.847 148.819 120.931 cv
149.044 121.016 149.21 121.122 149.315 121.25 cv
149.421 121.378 149.495 121.541 149.538 121.736 cv
149.562 121.857 149.573 122.076 149.573 122.391 cv
149.573 123.336 li
149.573 123.995 149.588 124.413 149.617 124.59 cv
149.646 124.766 149.705 124.936 149.792 125.097 cv
149.047 125.097 li
148.976 124.947 148.93 124.772 148.909 124.571 cv
cp
148.853 122.991 mo
148.593 123.096 148.204 123.186 147.686 123.259 cv
147.393 123.301 147.185 123.348 147.063 123.4 cv
146.941 123.453 146.847 123.529 146.781 123.63 cv
146.715 123.731 146.682 123.844 146.682 123.967 cv
146.682 124.156 146.754 124.313 146.897 124.439 cv
147.042 124.564 147.252 124.627 147.529 124.627 cv
147.804 124.627 148.049 124.568 148.262 124.449 cv
148.477 124.33 148.634 124.166 148.733 123.959 cv
148.811 123.799 148.849 123.563 148.849 123.251 cv
148.853 122.991 li
cp
f
150.65 125.097 mo
150.65 119.298 li
151.363 119.298 li
151.363 125.097 li
150.65 125.097 li
cp
f
155.211 125.097 mo
155.211 124.472 li
154.885 124.948 154.441 125.187 153.881 125.187 cv
153.634 125.187 153.403 125.139 153.188 125.044 cv
152.975 124.949 152.815 124.83 152.711 124.687 cv
152.607 124.543 152.534 124.367 152.492 124.159 cv
152.463 124.019 152.449 123.798 152.449 123.495 cv
152.449 120.894 li
153.162 120.894 li
153.162 123.22 li
153.162 123.591 153.176 123.841 153.205 123.971 cv
153.25 124.157 153.345 124.304 153.489 124.411 cv
153.634 124.518 153.813 124.571 154.025 124.571 cv
154.238 124.571 154.438 124.516 154.625 124.407 cv
154.813 124.298 154.944 124.149 155.021 123.961 cv
155.1 123.772 155.138 123.499 155.138 123.141 cv
155.138 120.894 li
155.851 120.894 li
155.851 125.097 li
155.211 125.097 li
cp
f
159.715 124.571 mo
159.449 124.796 159.195 124.955 158.951 125.047 cv
158.706 125.14 158.444 125.187 158.164 125.187 cv
157.702 125.187 157.347 125.074 157.099 124.849 cv
156.85 124.624 156.726 124.337 156.726 123.987 cv
156.726 123.782 156.772 123.594 156.866 123.425 cv
156.96 123.255 157.083 123.119 157.234 123.017 cv
157.387 122.914 157.558 122.836 157.748 122.784 cv
157.888 122.747 158.1 122.711 158.382 122.677 cv
158.958 122.608 159.382 122.527 159.654 122.433 cv
159.656 122.335 159.658 122.273 159.658 122.247 cv
159.658 121.958 159.591 121.754 159.456 121.636 cv
159.273 121.476 159.002 121.396 158.643 121.396 cv
158.307 121.396 158.059 121.455 157.898 121.572 cv
157.739 121.69 157.62 121.898 157.544 122.197 cv
156.848 122.101 li
156.91 121.802 157.015 121.561 157.16 121.377 cv
157.306 121.193 157.517 121.052 157.792 120.953 cv
158.066 120.854 158.386 120.804 158.748 120.804 cv
159.107 120.804 159.4 120.847 159.625 120.931 cv
159.85 121.016 160.015 121.122 160.121 121.25 cv
160.227 121.378 160.301 121.541 160.343 121.736 cv
160.367 121.857 160.379 122.076 160.379 122.391 cv
160.379 123.336 li
160.379 123.995 160.394 124.413 160.423 124.59 cv
160.452 124.766 160.511 124.936 160.598 125.097 cv
159.853 125.097 li
159.781 124.947 159.735 124.772 159.715 124.571 cv
cp
159.658 122.991 mo
159.398 123.096 159.01 123.186 158.491 123.259 cv
158.197 123.301 157.99 123.348 157.868 123.4 cv
157.746 123.453 157.652 123.529 157.586 123.63 cv
157.521 123.731 157.487 123.844 157.487 123.967 cv
157.487 124.156 157.559 124.313 157.703 124.439 cv
157.847 124.564 158.058 124.627 158.335 124.627 cv
158.609 124.627 158.854 124.568 159.067 124.449 cv
159.281 124.33 159.438 124.166 159.539 123.959 cv
159.615 123.799 159.654 123.563 159.654 123.251 cv
159.658 122.991 li
cp
f
163.02 124.462 mo
163.116 125.091 li
162.917 125.133 162.738 125.154 162.58 125.154 cv
162.322 125.154 162.122 125.113 161.98 125.031 cv
161.839 124.949 161.738 124.842 161.681 124.708 cv
161.623 124.575 161.594 124.294 161.594 123.866 cv
161.594 121.444 li
161.067 121.444 li
161.067 120.894 li
161.594 120.894 li
161.594 119.854 li
162.307 119.426 li
162.307 120.894 li
163.02 120.894 li
163.02 121.444 li
162.307 121.444 li
162.307 123.907 li
162.307 124.11 162.319 124.241 162.344 124.299 cv
162.369 124.357 162.409 124.404 162.466 124.438 cv
162.522 124.473 162.604 124.49 162.708 124.49 cv
162.787 124.49 162.891 124.48 163.02 124.462 cv
cp
f
166.592 123.736 mo
167.329 123.834 li
167.213 124.262 166.999 124.595 166.686 124.832 cv
166.373 125.068 165.973 125.187 165.486 125.187 cv
164.873 125.187 164.387 124.998 164.027 124.62 cv
163.669 124.242 163.489 123.713 163.489 123.031 cv
163.489 122.326 163.671 121.778 164.034 121.389 cv
164.396 120.999 164.868 120.804 165.446 120.804 cv
166.007 120.804 166.465 120.995 166.82 121.377 cv
167.176 121.759 167.353 122.296 167.353 122.988 cv
167.353 123.03 167.352 123.093 167.349 123.178 cv
164.218 123.178 li
164.244 123.638 164.375 123.991 164.609 124.236 cv
164.844 124.481 165.136 124.604 165.486 124.604 cv
165.746 124.604 165.969 124.534 166.153 124.396 cv
166.338 124.259 166.483 124.039 166.592 123.736 cv
cp
164.259 122.595 mo
166.6 122.595 li
166.568 122.241 166.479 121.976 166.331 121.799 cv
166.104 121.525 165.812 121.388 165.451 121.388 cv
165.125 121.388 164.851 121.497 164.628 121.716 cv
164.405 121.935 164.282 122.228 164.259 122.595 cv
cp
f
173.348 123.736 mo
174.084 123.834 li
173.969 124.262 173.754 124.595 173.441 124.832 cv
173.128 125.068 172.729 125.187 172.241 125.187 cv
171.629 125.187 171.143 124.998 170.783 124.62 cv
170.424 124.242 170.244 123.713 170.244 123.031 cv
170.244 122.326 170.426 121.778 170.789 121.389 cv
171.152 120.999 171.623 120.804 172.202 120.804 cv
172.763 120.804 173.221 120.995 173.575 121.377 cv
173.931 121.759 174.108 122.296 174.108 122.988 cv
174.108 123.03 174.107 123.093 174.104 123.178 cv
170.974 123.178 li
171 123.638 171.13 123.991 171.364 124.236 cv
171.599 124.481 171.891 124.604 172.241 124.604 cv
172.502 124.604 172.725 124.534 172.909 124.396 cv
173.093 124.259 173.239 124.039 173.348 123.736 cv
cp
171.014 122.595 mo
173.355 122.595 li
173.323 122.241 173.234 121.976 173.087 121.799 cv
172.86 121.525 172.566 121.388 172.206 121.388 cv
171.88 121.388 171.605 121.497 171.383 121.716 cv
171.161 121.935 171.038 122.228 171.014 122.595 cv
cp
f
177.729 124.571 mo
177.464 124.796 177.209 124.955 176.965 125.047 cv
176.721 125.14 176.459 125.187 176.179 125.187 cv
175.716 125.187 175.361 125.074 175.112 124.849 cv
174.864 124.624 174.74 124.337 174.74 123.987 cv
174.74 123.782 174.787 123.594 174.881 123.425 cv
174.975 123.255 175.098 123.119 175.249 123.017 cv
175.401 122.914 175.572 122.836 175.763 122.784 cv
175.902 122.747 176.113 122.711 176.396 122.677 cv
176.973 122.608 177.396 122.527 177.668 122.433 cv
177.671 122.335 177.672 122.273 177.672 122.247 cv
177.672 121.958 177.604 121.754 177.47 121.636 cv
177.287 121.476 177.017 121.396 176.657 121.396 cv
176.321 121.396 176.073 121.455 175.913 121.572 cv
175.753 121.69 175.635 121.898 175.559 122.197 cv
174.861 122.101 li
174.925 121.802 175.029 121.561 175.175 121.377 cv
175.32 121.193 175.531 121.052 175.806 120.953 cv
176.081 120.854 176.4 120.804 176.763 120.804 cv
177.122 120.804 177.414 120.847 177.64 120.931 cv
177.864 121.016 178.029 121.122 178.135 121.25 cv
178.241 121.378 178.315 121.541 178.357 121.736 cv
178.381 121.857 178.394 122.076 178.394 122.391 cv
178.394 123.336 li
178.394 123.995 178.408 124.413 178.438 124.59 cv
178.467 124.766 178.525 124.936 178.612 125.097 cv
177.867 125.097 li
177.795 124.947 177.749 124.772 177.729 124.571 cv
cp
177.672 122.991 mo
177.413 123.096 177.024 123.186 176.506 123.259 cv
176.212 123.301 176.004 123.348 175.883 123.4 cv
175.761 123.453 175.667 123.529 175.601 123.63 cv
175.534 123.731 175.502 123.844 175.502 123.967 cv
175.502 124.156 175.573 124.313 175.718 124.439 cv
175.861 124.564 176.072 124.627 176.35 124.627 cv
176.624 124.627 176.868 124.568 177.082 124.449 cv
177.296 124.33 177.453 124.166 177.554 123.959 cv
177.63 123.799 177.668 123.563 177.668 123.251 cv
177.672 122.991 li
cp
f
182.24 123.559 mo
182.938 123.655 li
182.861 124.134 182.665 124.509 182.351 124.78 cv
182.036 125.051 181.649 125.187 181.191 125.187 cv
180.618 125.187 180.156 124.999 179.808 124.624 cv
179.459 124.249 179.284 123.711 179.284 123.011 cv
179.284 122.559 179.359 122.163 179.51 121.823 cv
179.66 121.483 179.889 121.229 180.195 121.059 cv
180.502 120.889 180.836 120.804 181.197 120.804 cv
181.652 120.804 182.025 120.92 182.315 121.15 cv
182.605 121.381 182.791 121.708 182.872 122.133 cv
182.184 122.238 li
182.118 121.956 182.001 121.744 181.833 121.601 cv
181.666 121.459 181.463 121.388 181.226 121.388 cv
180.866 121.388 180.574 121.516 180.35 121.773 cv
180.125 122.029 180.014 122.436 180.014 122.991 cv
180.014 123.555 180.121 123.965 180.338 124.22 cv
180.554 124.476 180.836 124.604 181.185 124.604 cv
181.464 124.604 181.697 124.518 181.885 124.347 cv
182.072 124.176 182.19 123.913 182.24 123.559 cv
cp
f
183.326 125.097 mo
183.326 119.298 li
184.039 119.298 li
184.039 121.384 li
184.369 120.998 184.787 120.804 185.291 120.804 cv
185.601 120.804 185.87 120.866 186.099 120.988 cv
186.327 121.111 186.49 121.28 186.589 121.496 cv
186.687 121.712 186.736 122.026 186.736 122.437 cv
186.736 125.097 li
186.023 125.097 li
186.023 122.439 li
186.023 122.083 185.946 121.825 185.793 121.663 cv
185.641 121.501 185.424 121.42 185.144 121.42 cv
184.934 121.42 184.736 121.475 184.552 121.584 cv
184.367 121.693 184.235 121.841 184.156 122.028 cv
184.078 122.215 184.039 122.473 184.039 122.802 cv
184.039 125.097 li
183.326 125.097 li
cp
f
190.081 126.709 mo
190.081 120.894 li
190.729 120.894 li
190.729 121.446 li
190.883 121.232 191.055 121.072 191.247 120.965 cv
191.439 120.858 191.673 120.804 191.947 120.804 cv
192.306 120.804 192.622 120.896 192.896 121.081 cv
193.17 121.265 193.377 121.525 193.517 121.86 cv
193.656 122.196 193.727 122.563 193.727 122.964 cv
193.727 123.393 193.649 123.779 193.495 124.123 cv
193.341 124.466 193.117 124.729 192.823 124.912 cv
192.529 125.095 192.221 125.187 191.896 125.187 cv
191.66 125.187 191.447 125.137 191.259 125.037 cv
191.07 124.937 190.915 124.811 190.794 124.658 cv
190.794 126.709 li
190.081 126.709 li
cp
190.729 123.021 mo
190.729 123.56 190.839 123.958 191.057 124.216 cv
191.275 124.474 191.539 124.604 191.85 124.604 cv
192.165 124.604 192.436 124.47 192.66 124.203 cv
192.885 123.936 192.997 123.522 192.997 122.961 cv
192.997 122.428 192.888 122.027 192.668 121.762 cv
192.448 121.496 192.187 121.363 191.881 121.363 cv
191.579 121.363 191.312 121.505 191.078 121.788 cv
190.846 122.07 190.729 122.481 190.729 123.021 cv
cp
f
197.331 124.571 mo
197.066 124.796 196.812 124.955 196.567 125.047 cv
196.322 125.14 196.061 125.187 195.78 125.187 cv
195.318 125.187 194.963 125.074 194.715 124.849 cv
194.466 124.624 194.342 124.337 194.342 123.987 cv
194.342 123.782 194.389 123.594 194.482 123.425 cv
194.576 123.255 194.699 123.119 194.852 123.017 cv
195.003 122.914 195.174 122.836 195.364 122.784 cv
195.505 122.747 195.716 122.711 195.998 122.677 cv
196.574 122.608 196.998 122.527 197.271 122.433 cv
197.273 122.335 197.274 122.273 197.274 122.247 cv
197.274 121.958 197.207 121.754 197.072 121.636 cv
196.89 121.476 196.618 121.396 196.259 121.396 cv
195.923 121.396 195.675 121.455 195.516 121.572 cv
195.355 121.69 195.237 121.898 195.16 122.197 cv
194.464 122.101 li
194.527 121.802 194.632 121.561 194.777 121.377 cv
194.923 121.193 195.133 121.052 195.408 120.953 cv
195.684 120.854 196.002 120.804 196.364 120.804 cv
196.724 120.804 197.017 120.847 197.241 120.931 cv
197.466 121.016 197.632 121.122 197.737 121.25 cv
197.843 121.378 197.917 121.541 197.96 121.736 cv
197.983 121.857 197.995 122.076 197.995 122.391 cv
197.995 123.336 li
197.995 123.995 198.01 124.413 198.039 124.59 cv
198.068 124.766 198.127 124.936 198.214 125.097 cv
197.469 125.097 li
197.397 124.947 197.352 124.772 197.331 124.571 cv
cp
197.274 122.991 mo
197.015 123.096 196.626 123.186 196.107 123.259 cv
195.813 123.301 195.606 123.348 195.484 123.4 cv
195.363 123.453 195.269 123.529 195.203 123.63 cv
195.137 123.731 195.104 123.844 195.104 123.967 cv
195.104 124.156 195.176 124.313 195.319 124.439 cv
195.463 124.564 195.674 124.627 195.951 124.627 cv
196.226 124.627 196.47 124.568 196.684 124.449 cv
196.898 124.33 197.055 124.166 197.155 123.959 cv
197.232 123.799 197.271 123.563 197.271 123.251 cv
197.274 122.991 li
cp
f
199.081 125.097 mo
199.081 120.894 li
199.721 120.894 li
199.721 121.538 li
199.885 121.239 200.035 121.042 200.174 120.947 cv
200.313 120.852 200.466 120.804 200.632 120.804 cv
200.872 120.804 201.116 120.879 201.365 121.029 cv
201.11 121.688 li
200.938 121.59 200.765 121.542 200.592 121.542 cv
200.438 121.542 200.299 121.588 200.176 121.682 cv
200.053 121.775 199.965 121.905 199.912 122.071 cv
199.833 122.324 199.793 122.601 199.793 122.9 cv
199.793 125.097 li
199.081 125.097 li
cp
f
203.333 124.462 mo
203.431 125.091 li
203.23 125.133 203.052 125.154 202.894 125.154 cv
202.636 125.154 202.437 125.113 202.294 125.031 cv
202.152 124.949 202.052 124.842 201.994 124.708 cv
201.937 124.575 201.907 124.294 201.907 123.866 cv
201.907 121.444 li
201.381 121.444 li
201.381 120.894 li
201.907 120.894 li
201.907 119.854 li
202.62 119.426 li
202.62 120.894 li
203.333 120.894 li
203.333 121.444 li
202.62 121.444 li
202.62 123.907 li
202.62 124.11 202.633 124.241 202.657 124.299 cv
202.683 124.357 202.724 124.404 202.779 124.438 cv
202.836 124.473 202.917 124.49 203.022 124.49 cv
203.101 124.49 203.204 124.48 203.333 124.462 cv
cp
f
204.24 125.097 mo
204.24 124.287 li
205.051 124.287 li
205.051 125.097 li
204.24 125.097 li
cp
f
99.8999 180 mo
213.3 180 li
213.3 236.701 li
99.8999 236.701 li
99.8999 180 li
cp
0 0 0 0 cmyk
f
99.8999 180 mo
213.3 180 li
213.3 236.701 li
99.8999 236.701 li
99.8999 180 li
cp
.746 .676 .668 .898 cmyk
@
123.168 193.05 mo
123.168 185.962 li
124.108 185.962 li
124.108 193.05 li
123.168 193.05 li
cp
0 0 0 1 cmyk
f
125.652 193.05 mo
125.652 187.912 li
126.434 187.912 li
126.434 188.638 li
126.595 188.387 126.809 188.185 127.076 188.032 cv
127.343 187.879 127.647 187.803 127.988 187.803 cv
128.368 187.803 128.68 187.882 128.923 188.04 cv
129.166 188.197 129.337 188.417 129.437 188.7 cv
129.845 188.102 130.375 187.803 131.029 187.803 cv
131.541 187.803 131.934 187.944 132.209 188.226 cv
132.484 188.508 132.622 188.941 132.622 189.528 cv
132.622 193.05 li
131.75 193.05 li
131.75 189.817 li
131.75 189.469 131.722 189.218 131.666 189.065 cv
131.609 188.912 131.506 188.789 131.357 188.695 cv
131.208 188.602 131.034 188.556 130.833 188.556 cv
130.471 188.556 130.17 188.675 129.931 188.916 cv
129.692 189.155 129.572 189.54 129.572 190.068 cv
129.572 193.05 li
128.701 193.05 li
128.701 189.715 li
128.701 189.329 128.63 189.039 128.489 188.846 cv
128.347 188.652 128.115 188.556 127.793 188.556 cv
127.549 188.556 127.322 188.62 127.115 188.749 cv
126.907 188.877 126.757 189.066 126.663 189.314 cv
126.57 189.563 126.523 189.92 126.523 190.387 cv
126.523 193.05 li
125.652 193.05 li
cp
f
133.899 195.02 mo
133.899 187.912 li
134.691 187.912 li
134.691 188.587 li
134.878 188.326 135.089 188.13 135.324 187.999 cv
135.56 187.868 135.845 187.803 136.18 187.803 cv
136.618 187.803 137.005 187.916 137.34 188.141 cv
137.675 188.366 137.928 188.684 138.098 189.094 cv
138.269 189.504 138.354 189.954 138.354 190.442 cv
138.354 190.967 138.26 191.439 138.072 191.858 cv
137.884 192.278 137.61 192.6 137.251 192.824 cv
136.892 193.047 136.514 193.159 136.118 193.159 cv
135.828 193.159 135.568 193.098 135.338 192.976 cv
135.108 192.854 134.919 192.7 134.771 192.514 cv
134.771 195.02 li
133.899 195.02 li
cp
134.691 190.512 mo
134.691 191.171 134.825 191.658 135.091 191.974 cv
135.358 192.289 135.681 192.446 136.061 192.446 cv
136.446 192.446 136.776 192.283 137.051 191.957 cv
137.326 191.63 137.463 191.125 137.463 190.439 cv
137.463 189.787 137.329 189.298 137.061 188.974 cv
136.792 188.648 136.472 188.486 136.099 188.486 cv
135.729 188.486 135.402 188.659 135.118 189.005 cv
134.833 189.351 134.691 189.853 134.691 190.512 cv
cp
f
139.384 193.05 mo
139.384 185.962 li
140.255 185.962 li
140.255 193.05 li
139.384 193.05 li
cp
f
145.106 191.387 mo
146.008 191.506 li
145.866 192.029 145.604 192.436 145.222 192.725 cv
144.839 193.014 144.351 193.159 143.755 193.159 cv
143.006 193.159 142.412 192.928 141.973 192.467 cv
141.534 192.005 141.314 191.357 141.314 190.524 cv
141.314 189.662 141.537 188.993 141.98 188.517 cv
142.424 188.041 143 187.803 143.707 187.803 cv
144.392 187.803 144.951 188.036 145.386 188.503 cv
145.819 188.969 146.037 189.626 146.037 190.472 cv
146.037 190.523 146.035 190.601 146.032 190.704 cv
142.206 190.704 li
142.238 191.267 142.397 191.698 142.684 191.997 cv
142.97 192.296 143.327 192.446 143.755 192.446 cv
144.074 192.446 144.346 192.362 144.57 192.193 cv
144.796 192.025 144.975 191.756 145.106 191.387 cv
cp
142.255 189.991 mo
145.116 189.991 li
145.077 189.559 144.968 189.235 144.788 189.019 cv
144.512 188.684 144.153 188.516 143.712 188.516 cv
143.313 188.516 142.978 188.649 142.706 188.917 cv
142.435 189.185 142.284 189.543 142.255 189.991 cv
cp
f
147.105 193.05 mo
147.105 187.912 li
147.888 187.912 li
147.888 188.638 li
148.048 188.387 148.263 188.185 148.529 188.032 cv
148.797 187.879 149.101 187.803 149.441 187.803 cv
149.821 187.803 150.133 187.882 150.376 188.04 cv
150.619 188.197 150.79 188.417 150.891 188.7 cv
151.298 188.102 151.829 187.803 152.482 187.803 cv
152.994 187.803 153.387 187.944 153.662 188.226 cv
153.938 188.508 154.075 188.941 154.075 189.528 cv
154.075 193.05 li
153.204 193.05 li
153.204 189.817 li
153.204 189.469 153.176 189.218 153.119 189.065 cv
153.063 188.912 152.959 188.789 152.811 188.695 cv
152.662 188.602 152.487 188.556 152.287 188.556 cv
151.925 188.556 151.624 188.675 151.385 188.916 cv
151.146 189.155 151.025 189.54 151.025 190.068 cv
151.025 193.05 li
150.154 193.05 li
150.154 189.715 li
150.154 189.329 150.084 189.039 149.942 188.846 cv
149.801 188.652 149.568 188.556 149.247 188.556 cv
149.002 188.556 148.775 188.62 148.568 188.749 cv
148.36 188.877 148.21 189.066 148.116 189.314 cv
148.023 189.563 147.977 189.92 147.977 190.387 cv
147.977 193.05 li
147.105 193.05 li
cp
f
158.857 191.387 mo
159.759 191.506 li
159.617 192.029 159.355 192.436 158.973 192.725 cv
158.59 193.014 158.102 193.159 157.506 193.159 cv
156.757 193.159 156.163 192.928 155.724 192.467 cv
155.285 192.005 155.065 191.357 155.065 190.524 cv
155.065 189.662 155.287 188.993 155.731 188.517 cv
156.175 188.041 156.751 187.803 157.458 187.803 cv
158.144 187.803 158.703 188.036 159.137 188.503 cv
159.571 188.969 159.788 189.626 159.788 190.472 cv
159.788 190.523 159.786 190.601 159.783 190.704 cv
155.957 190.704 li
155.989 191.267 156.148 191.698 156.435 191.997 cv
156.721 192.296 157.078 192.446 157.506 192.446 cv
157.824 192.446 158.097 192.362 158.322 192.193 cv
158.547 192.025 158.726 191.756 158.857 191.387 cv
cp
156.006 189.991 mo
158.867 189.991 li
158.829 189.559 158.72 189.235 158.539 189.019 cv
158.263 188.684 157.904 188.516 157.463 188.516 cv
157.064 188.516 156.729 188.649 156.457 188.917 cv
156.186 189.185 156.035 189.543 156.006 189.991 cv
cp
f
160.857 193.05 mo
160.857 187.912 li
161.64 187.912 li
161.64 188.642 li
162.016 188.083 162.561 187.803 163.271 187.803 cv
163.581 187.803 163.865 187.858 164.124 187.97 cv
164.384 188.081 164.577 188.227 164.706 188.407 cv
164.835 188.587 164.925 188.802 164.977 189.049 cv
165.009 189.21 165.025 189.492 165.025 189.895 cv
165.025 193.05 li
164.154 193.05 li
164.154 189.928 li
164.154 189.574 164.12 189.309 164.053 189.133 cv
163.985 188.958 163.865 188.817 163.693 188.712 cv
163.521 188.608 163.319 188.556 163.088 188.556 cv
162.719 188.556 162.399 188.673 162.131 188.908 cv
161.862 189.144 161.729 189.59 161.729 190.247 cv
161.729 193.05 li
160.857 193.05 li
cp
f
167.995 192.273 mo
168.114 193.042 li
167.869 193.094 167.651 193.119 167.458 193.119 cv
167.143 193.119 166.898 193.069 166.726 192.969 cv
166.552 192.869 166.43 192.737 166.358 192.574 cv
166.288 192.411 166.253 192.068 166.253 191.545 cv
166.253 188.585 li
165.609 188.585 li
165.609 187.912 li
166.253 187.912 li
166.253 186.641 li
167.124 186.119 li
167.124 187.912 li
167.995 187.912 li
167.995 188.585 li
167.124 188.585 li
167.124 191.595 li
167.124 191.844 167.139 192.004 167.17 192.075 cv
167.2 192.146 167.25 192.203 167.318 192.245 cv
167.388 192.287 167.486 192.308 167.615 192.308 cv
167.711 192.308 167.838 192.296 167.995 192.273 cv
cp
f
171.569 195.024 mo
171.47 194.22 li
171.66 194.271 171.827 194.297 171.969 194.297 cv
172.163 194.297 172.317 194.265 172.434 194.2 cv
172.551 194.136 172.646 194.045 172.72 193.929 cv
172.774 193.842 172.863 193.625 172.986 193.28 cv
173.002 193.231 173.028 193.161 173.063 193.067 cv
171.113 187.912 li
172.044 187.912 li
173.117 190.878 li
173.256 191.254 173.381 191.649 173.491 192.064 cv
173.592 191.674 173.711 191.289 173.85 190.908 cv
174.945 187.912 li
175.814 187.912 li
173.873 193.14 li
173.662 193.702 173.499 194.089 173.383 194.301 cv
173.228 194.586 173.05 194.796 172.85 194.929 cv
172.648 195.063 172.409 195.129 172.132 195.129 cv
171.964 195.129 171.776 195.094 171.569 195.024 cv
cp
f
175.965 190.481 mo
175.965 189.532 176.229 188.829 176.758 188.373 cv
177.199 187.993 177.737 187.803 178.373 187.803 cv
179.079 187.803 179.656 188.034 180.104 188.496 cv
180.552 188.957 180.776 189.595 180.776 190.409 cv
180.776 191.068 180.677 191.587 180.479 191.965 cv
180.28 192.343 179.992 192.636 179.613 192.845 cv
179.234 193.055 178.82 193.159 178.373 193.159 cv
177.654 193.159 177.072 192.929 176.629 192.469 cv
176.187 192.009 175.965 191.346 175.965 190.481 cv
cp
176.855 190.483 mo
176.855 191.139 176.999 191.63 177.287 191.957 cv
177.574 192.283 177.937 192.446 178.373 192.446 cv
178.806 192.446 179.166 192.282 179.453 191.955 cv
179.741 191.626 179.885 191.126 179.885 190.455 cv
179.885 189.821 179.74 189.341 179.451 189.015 cv
179.162 188.689 178.803 188.526 178.373 188.526 cv
177.937 188.526 177.574 188.688 177.287 189.013 cv
176.999 189.337 176.855 189.828 176.855 190.483 cv
cp
f
185.151 193.05 mo
185.151 192.286 li
184.753 192.868 184.211 193.159 183.526 193.159 cv
183.225 193.159 182.942 193.101 182.68 192.985 cv
182.418 192.869 182.224 192.723 182.097 192.548 cv
181.97 192.372 181.881 192.157 181.829 191.903 cv
181.794 191.732 181.775 191.461 181.775 191.091 cv
181.775 187.912 li
182.647 187.912 li
182.647 190.755 li
182.647 191.209 182.665 191.515 182.7 191.673 cv
182.755 191.901 182.87 192.081 183.047 192.211 cv
183.224 192.341 183.442 192.407 183.703 192.407 cv
183.963 192.407 184.208 192.34 184.436 192.206 cv
184.664 192.073 184.825 191.891 184.92 191.661 cv
185.016 191.431 185.063 191.097 185.063 190.659 cv
185.063 187.912 li
185.934 187.912 li
185.934 193.05 li
185.151 193.05 li
cp
f
187.29 193.05 mo
187.29 187.912 li
188.072 187.912 li
188.072 188.699 li
188.272 188.334 188.457 188.094 188.627 187.978 cv
188.796 187.861 188.982 187.803 189.186 187.803 cv
189.479 187.803 189.778 187.895 190.082 188.078 cv
189.771 188.882 li
189.56 188.764 189.349 188.704 189.138 188.704 cv
188.948 188.704 188.779 188.761 188.629 188.875 cv
188.479 188.99 188.371 189.148 188.307 189.351 cv
188.21 189.66 188.161 189.998 188.161 190.365 cv
188.161 193.05 li
187.29 193.05 li
cp
f
109.714 205.91 mo
109.39 206.185 109.079 206.379 108.78 206.493 cv
108.481 206.606 108.161 206.663 107.819 206.663 cv
107.254 206.663 106.819 206.525 106.516 206.25 cv
106.212 205.976 106.061 205.625 106.061 205.197 cv
106.061 204.946 106.118 204.716 106.232 204.509 cv
106.347 204.302 106.497 204.136 106.683 204.01 cv
106.869 203.884 107.078 203.791 107.31 203.726 cv
107.481 203.681 107.74 203.637 108.085 203.595 cv
108.789 203.511 109.307 203.412 109.64 203.296 cv
109.643 203.177 109.645 203.102 109.645 203.07 cv
109.645 202.716 109.562 202.468 109.397 202.323 cv
109.174 202.127 108.843 202.029 108.403 202.029 cv
107.993 202.029 107.69 202.102 107.495 202.245 cv
107.299 202.389 107.154 202.644 107.061 203.009 cv
106.209 202.89 li
106.287 202.526 106.415 202.231 106.592 202.007 cv
106.77 201.782 107.027 201.609 107.363 201.488 cv
107.7 201.367 108.089 201.307 108.532 201.307 cv
108.972 201.307 109.329 201.358 109.604 201.461 cv
109.879 201.565 110.081 201.695 110.21 201.852 cv
110.34 202.008 110.43 202.206 110.482 202.445 cv
110.511 202.594 110.525 202.861 110.525 203.246 cv
110.525 204.402 li
110.525 205.207 110.543 205.717 110.58 205.933 cv
110.615 206.149 110.687 206.356 110.793 206.554 cv
109.882 206.554 li
109.795 206.371 109.739 206.156 109.714 205.91 cv
cp
109.645 203.98 mo
109.328 204.108 108.852 204.216 108.218 204.306 cv
107.859 204.358 107.605 204.416 107.457 204.48 cv
107.308 204.544 107.193 204.638 107.112 204.761 cv
107.032 204.884 106.991 205.021 106.991 205.171 cv
106.991 205.403 107.079 205.595 107.255 205.75 cv
107.431 205.902 107.688 205.98 108.027 205.98 cv
108.363 205.98 108.662 205.907 108.923 205.761 cv
109.185 205.615 109.376 205.416 109.499 205.163 cv
109.593 204.966 109.64 204.678 109.64 204.296 cv
109.645 203.98 li
cp
f
111.842 206.554 mo
111.842 199.465 li
112.713 199.465 li
112.713 206.554 li
111.842 206.554 li
cp
f
113.899 206.98 mo
114.741 207.098 li
114.776 207.359 114.875 207.549 115.037 207.668 cv
115.252 207.83 115.548 207.91 115.922 207.91 cv
116.326 207.91 116.637 207.83 116.856 207.669 cv
117.076 207.508 117.224 207.283 117.302 206.994 cv
117.347 206.818 117.368 206.447 117.365 205.88 cv
116.984 206.33 116.51 206.554 115.942 206.554 cv
115.236 206.554 114.689 206.299 114.302 205.791 cv
113.915 205.281 113.721 204.671 113.721 203.958 cv
113.721 203.47 113.81 203.017 113.987 202.604 cv
114.165 202.19 114.421 201.87 114.758 201.645 cv
115.095 201.419 115.491 201.307 115.945 201.307 cv
116.551 201.307 117.051 201.554 117.444 202.049 cv
117.444 201.416 li
118.246 201.416 li
118.246 205.853 li
118.246 206.652 118.165 207.218 118.002 207.552 cv
117.839 207.886 117.582 208.15 117.229 208.343 cv
116.876 208.537 116.443 208.632 115.928 208.632 cv
115.316 208.632 114.822 208.496 114.445 208.22 cv
114.068 207.946 113.887 207.533 113.899 206.98 cv
cp
114.612 203.896 mo
114.612 204.568 114.746 205.059 115.014 205.368 cv
115.282 205.677 115.618 205.832 116.021 205.832 cv
116.421 205.832 116.756 205.677 117.027 205.371 cv
117.298 205.063 117.434 204.582 117.434 203.925 cv
117.434 203.298 117.294 202.826 117.015 202.507 cv
116.736 202.188 116.4 202.029 116.006 202.029 cv
115.619 202.029 115.29 202.186 115.019 202.5 cv
114.748 202.814 114.612 203.279 114.612 203.896 cv
cp
f
119.237 203.984 mo
119.237 203.036 119.502 202.333 120.031 201.876 cv
120.472 201.497 121.011 201.307 121.646 201.307 cv
122.352 201.307 122.929 201.538 123.377 201.999 cv
123.825 202.46 124.049 203.098 124.049 203.912 cv
124.049 204.572 123.95 205.09 123.751 205.468 cv
123.553 205.846 123.265 206.14 122.886 206.349 cv
122.507 206.558 122.094 206.663 121.646 206.663 cv
120.927 206.663 120.346 206.433 119.902 205.972 cv
119.459 205.513 119.237 204.85 119.237 203.984 cv
cp
120.128 203.988 mo
120.128 204.643 120.272 205.134 120.56 205.46 cv
120.848 205.787 121.209 205.95 121.646 205.95 cv
122.079 205.95 122.439 205.786 122.727 205.458 cv
123.014 205.13 123.158 204.63 123.158 203.958 cv
123.158 203.325 123.013 202.845 122.724 202.519 cv
122.435 202.192 122.075 202.029 121.646 202.029 cv
121.209 202.029 120.848 202.192 120.56 202.517 cv
120.272 202.841 120.128 203.332 120.128 203.988 cv
cp
f
125.059 206.554 mo
125.059 201.416 li
125.841 201.416 li
125.841 202.203 li
126.041 201.838 126.226 201.597 126.396 201.481 cv
126.565 201.365 126.751 201.307 126.955 201.307 cv
127.249 201.307 127.547 201.398 127.851 201.582 cv
127.54 202.386 li
127.329 202.267 127.117 202.208 126.906 202.208 cv
126.717 202.208 126.547 202.265 126.397 202.379 cv
126.247 202.493 126.139 202.652 126.075 202.855 cv
125.979 203.164 125.93 203.501 125.93 203.869 cv
125.93 206.554 li
125.059 206.554 li
cp
f
128.365 200.455 mo
128.365 199.465 li
129.236 199.465 li
129.236 200.455 li
128.365 200.455 li
cp
128.365 206.554 mo
128.365 201.416 li
129.236 201.416 li
129.236 206.554 li
128.365 206.554 li
cp
f
132.454 205.777 mo
132.573 206.545 li
132.329 206.597 132.11 206.623 131.917 206.623 cv
131.602 206.623 131.358 206.573 131.184 206.472 cv
131.011 206.373 130.889 206.242 130.818 206.078 cv
130.747 205.916 130.712 205.572 130.712 205.048 cv
130.712 202.089 li
130.068 202.089 li
130.068 201.416 li
130.712 201.416 li
130.712 200.145 li
131.583 199.622 li
131.583 201.416 li
132.454 201.416 li
132.454 202.089 li
131.583 202.089 li
131.583 205.099 li
131.583 205.347 131.598 205.507 131.628 205.579 cv
131.659 205.65 131.709 205.707 131.778 205.748 cv
131.847 205.791 131.945 205.811 132.074 205.811 cv
132.17 205.811 132.297 205.8 132.454 205.777 cv
cp
f
133.315 206.554 mo
133.315 199.465 li
134.187 199.465 li
134.187 202.016 li
134.591 201.543 135.101 201.307 135.717 201.307 cv
136.096 201.307 136.424 201.381 136.704 201.531 cv
136.983 201.681 137.183 201.888 137.303 202.152 cv
137.423 202.416 137.483 202.8 137.483 203.302 cv
137.483 206.554 li
136.612 206.554 li
136.612 203.304 li
136.612 202.871 136.519 202.554 136.331 202.356 cv
136.144 202.158 135.879 202.059 135.536 202.059 cv
135.28 202.059 135.039 202.126 134.813 202.259 cv
134.587 202.393 134.427 202.574 134.331 202.802 cv
134.234 203.031 134.187 203.346 134.187 203.749 cv
134.187 206.554 li
133.315 206.554 li
cp
f
138.819 206.554 mo
138.819 201.416 li
139.601 201.416 li
139.601 202.141 li
139.762 201.891 139.976 201.688 140.243 201.536 cv
140.51 201.383 140.814 201.307 141.155 201.307 cv
141.535 201.307 141.847 201.385 142.09 201.543 cv
142.333 201.701 142.504 201.921 142.604 202.204 cv
143.012 201.606 143.542 201.307 144.196 201.307 cv
144.708 201.307 145.101 201.448 145.376 201.729 cv
145.651 202.011 145.789 202.445 145.789 203.031 cv
145.789 206.554 li
144.917 206.554 li
144.917 203.32 li
144.917 202.972 144.889 202.722 144.832 202.569 cv
144.775 202.416 144.673 202.292 144.524 202.199 cv
144.376 202.106 144.201 202.059 144 202.059 cv
143.638 202.059 143.337 202.179 143.098 202.419 cv
142.859 202.66 142.739 203.043 142.739 203.572 cv
142.739 206.554 li
141.868 206.554 li
141.868 203.218 li
141.868 202.832 141.797 202.542 141.656 202.349 cv
141.514 202.156 141.282 202.059 140.96 202.059 cv
140.716 202.059 140.489 202.124 140.282 202.252 cv
140.074 202.381 139.924 202.57 139.83 202.818 cv
139.737 203.066 139.69 203.423 139.69 203.89 cv
139.69 206.554 li
138.819 206.554 li
cp
f
153.175 205.91 mo
152.851 206.185 152.54 206.379 152.241 206.493 cv
151.942 206.606 151.622 206.663 151.279 206.663 cv
150.715 206.663 150.28 206.525 149.977 206.25 cv
149.674 205.976 149.521 205.625 149.521 205.197 cv
149.521 204.946 149.579 204.716 149.693 204.509 cv
149.809 204.302 149.958 204.136 150.144 204.01 cv
150.33 203.884 150.539 203.791 150.771 203.726 cv
150.942 203.681 151.2 203.637 151.546 203.595 cv
152.25 203.511 152.768 203.412 153.101 203.296 cv
153.104 203.177 153.105 203.102 153.105 203.07 cv
153.105 202.716 153.023 202.468 152.858 202.323 cv
152.635 202.127 152.304 202.029 151.864 202.029 cv
151.454 202.029 151.151 202.102 150.955 202.245 cv
150.76 202.389 150.615 202.644 150.521 203.009 cv
149.67 202.89 li
149.748 202.526 149.875 202.231 150.053 202.007 cv
150.231 201.782 150.488 201.609 150.824 201.488 cv
151.161 201.367 151.551 201.307 151.993 201.307 cv
152.433 201.307 152.79 201.358 153.065 201.461 cv
153.34 201.565 153.542 201.695 153.671 201.852 cv
153.801 202.008 153.892 202.206 153.943 202.445 cv
153.972 202.594 153.986 202.861 153.986 203.246 cv
153.986 204.402 li
153.986 205.207 154.005 205.717 154.04 205.933 cv
154.076 206.149 154.147 206.356 154.254 206.554 cv
153.343 206.554 li
153.256 206.371 153.199 206.156 153.175 205.91 cv
cp
153.105 203.98 mo
152.788 204.108 152.313 204.216 151.68 204.306 cv
151.32 204.358 151.066 204.416 150.918 204.48 cv
150.77 204.544 150.654 204.638 150.573 204.761 cv
150.492 204.884 150.452 205.021 150.452 205.171 cv
150.452 205.403 150.54 205.595 150.716 205.75 cv
150.893 205.902 151.149 205.98 151.488 205.98 cv
151.824 205.98 152.123 205.907 152.384 205.761 cv
152.646 205.615 152.838 205.416 152.96 205.163 cv
153.054 204.966 153.101 204.678 153.101 204.296 cv
153.105 203.98 li
cp
f
154.977 205.019 mo
155.838 204.88 li
155.887 205.226 156.021 205.49 156.242 205.673 cv
156.464 205.858 156.773 205.95 157.17 205.95 cv
157.57 205.95 157.868 205.869 158.062 205.707 cv
158.256 205.542 158.353 205.352 158.353 205.133 cv
158.353 204.937 158.266 204.783 158.092 204.669 cv
157.971 204.592 157.673 204.494 157.201 204.375 cv
156.564 204.214 156.123 204.075 155.877 203.958 cv
155.63 203.839 155.443 203.677 155.316 203.47 cv
155.188 203.263 155.125 203.034 155.125 202.783 cv
155.125 202.555 155.178 202.343 155.282 202.148 cv
155.387 201.954 155.529 201.792 155.709 201.664 cv
155.845 201.564 156.028 201.479 156.262 201.411 cv
156.495 201.341 156.746 201.307 157.013 201.307 cv
157.415 201.307 157.769 201.365 158.072 201.481 cv
158.377 201.598 158.602 201.755 158.746 201.954 cv
158.891 202.153 158.99 202.419 159.046 202.751 cv
158.194 202.871 li
158.155 202.604 158.044 202.395 157.859 202.245 cv
157.674 202.095 157.413 202.02 157.075 202.02 cv
156.677 202.02 156.393 202.085 156.222 202.218 cv
156.052 202.35 155.967 202.504 155.967 202.681 cv
155.967 202.794 156.002 202.896 156.072 202.986 cv
156.144 203.08 156.254 203.156 156.405 203.218 cv
156.492 203.25 156.748 203.324 157.172 203.44 cv
157.786 203.604 158.215 203.738 158.459 203.843 cv
158.704 203.947 158.896 204.099 159.034 204.298 cv
159.174 204.498 159.243 204.746 159.243 205.042 cv
159.243 205.332 159.159 205.603 158.989 205.859 cv
158.82 206.115 158.576 206.313 158.257 206.453 cv
157.938 206.593 157.576 206.663 157.173 206.663 cv
156.505 206.663 155.996 206.525 155.646 206.248 cv
155.297 205.972 155.073 205.562 154.977 205.019 cv
cp
f
166.381 205.91 mo
166.058 206.185 165.746 206.379 165.447 206.493 cv
165.149 206.606 164.828 206.663 164.486 206.663 cv
163.921 206.663 163.487 206.525 163.184 206.25 cv
162.88 205.976 162.729 205.625 162.729 205.197 cv
162.729 204.946 162.785 204.716 162.9 204.509 cv
163.015 204.302 163.165 204.136 163.351 204.01 cv
163.536 203.884 163.745 203.791 163.978 203.726 cv
164.148 203.681 164.407 203.637 164.753 203.595 cv
165.456 203.511 165.975 203.412 166.308 203.296 cv
166.311 203.177 166.313 203.102 166.313 203.07 cv
166.313 202.716 166.229 202.468 166.064 202.323 cv
165.842 202.127 165.511 202.029 165.071 202.029 cv
164.66 202.029 164.357 202.102 164.162 202.245 cv
163.967 202.389 163.822 202.644 163.729 203.009 cv
162.877 202.89 li
162.954 202.526 163.082 202.231 163.26 202.007 cv
163.438 201.782 163.694 201.609 164.031 201.488 cv
164.367 201.367 164.757 201.307 165.2 201.307 cv
165.64 201.307 165.997 201.358 166.271 201.461 cv
166.547 201.565 166.749 201.695 166.878 201.852 cv
167.007 202.008 167.098 202.206 167.149 202.445 cv
167.179 202.594 167.193 202.861 167.193 203.246 cv
167.193 204.402 li
167.193 205.207 167.211 205.717 167.247 205.933 cv
167.283 206.149 167.354 206.356 167.461 206.554 cv
166.55 206.554 li
166.463 206.371 166.406 206.156 166.381 205.91 cv
cp
166.313 203.98 mo
165.995 204.108 165.52 204.216 164.886 204.306 cv
164.527 204.358 164.273 204.416 164.124 204.48 cv
163.976 204.544 163.861 204.638 163.78 204.761 cv
163.699 204.884 163.659 205.021 163.659 205.171 cv
163.659 205.403 163.747 205.595 163.923 205.75 cv
164.099 205.902 164.356 205.98 164.695 205.98 cv
165.03 205.98 165.329 205.907 165.591 205.761 cv
165.853 205.615 166.044 205.416 166.167 205.163 cv
166.261 204.966 166.308 204.678 166.308 204.296 cv
166.313 203.98 li
cp
f
171.282 208.524 mo
171.282 201.416 li
172.074 201.416 li
172.074 202.091 li
172.261 201.83 172.472 201.633 172.707 201.503 cv
172.942 201.372 173.228 201.307 173.563 201.307 cv
174 201.307 174.387 201.419 174.722 201.645 cv
175.057 201.87 175.31 202.187 175.48 202.597 cv
175.651 203.007 175.737 203.457 175.737 203.946 cv
175.737 204.47 175.643 204.943 175.454 205.363 cv
175.266 205.782 174.992 206.103 174.633 206.328 cv
174.274 206.55 173.896 206.663 173.501 206.663 cv
173.211 206.663 172.951 206.601 172.721 206.48 cv
172.49 206.357 172.301 206.204 172.153 206.017 cv
172.153 208.524 li
171.282 208.524 li
cp
172.074 204.015 mo
172.074 204.675 172.207 205.162 172.474 205.477 cv
172.74 205.792 173.063 205.95 173.443 205.95 cv
173.829 205.95 174.159 205.787 174.434 205.46 cv
174.708 205.134 174.846 204.628 174.846 203.943 cv
174.846 203.291 174.712 202.802 174.443 202.477 cv
174.175 202.152 173.854 201.99 173.481 201.99 cv
173.112 201.99 172.785 202.163 172.5 202.508 cv
172.216 202.854 172.074 203.357 172.074 204.015 cv
cp
f
176.776 206.554 mo
176.776 201.416 li
177.559 201.416 li
177.559 202.203 li
177.759 201.838 177.943 201.597 178.113 201.481 cv
178.282 201.365 178.469 201.307 178.672 201.307 cv
178.966 201.307 179.265 201.398 179.568 201.582 cv
179.258 202.386 li
179.046 202.267 178.835 202.208 178.624 202.208 cv
178.435 202.208 178.266 202.265 178.114 202.379 cv
177.964 202.493 177.856 202.652 177.793 202.855 cv
177.696 203.164 177.647 203.501 177.647 203.869 cv
177.647 206.554 li
176.776 206.554 li
cp
f
179.756 203.984 mo
179.756 203.036 180.021 202.333 180.549 201.876 cv
180.991 201.497 181.529 201.307 182.164 201.307 cv
182.87 201.307 183.447 201.538 183.896 201.999 cv
184.344 202.46 184.567 203.098 184.567 203.912 cv
184.567 204.572 184.469 205.09 184.271 205.468 cv
184.072 205.846 183.783 206.14 183.404 206.349 cv
183.026 206.558 182.612 206.663 182.164 206.663 cv
181.445 206.663 180.864 206.433 180.421 205.972 cv
179.978 205.513 179.756 204.85 179.756 203.984 cv
cp
180.647 203.988 mo
180.647 204.643 180.791 205.134 181.079 205.46 cv
181.366 205.787 181.729 205.95 182.164 205.95 cv
182.598 205.95 182.958 205.786 183.245 205.458 cv
183.533 205.13 183.677 204.63 183.677 203.958 cv
183.677 203.325 183.532 202.845 183.243 202.519 cv
182.953 202.192 182.594 202.029 182.164 202.029 cv
181.729 202.029 181.366 202.192 181.079 202.517 cv
180.791 202.841 180.647 203.332 180.647 203.988 cv
cp
f
185.427 206.98 mo
186.269 207.098 li
186.304 207.359 186.402 207.549 186.563 207.668 cv
186.78 207.83 187.075 207.91 187.449 207.91 cv
187.854 207.91 188.164 207.83 188.384 207.669 cv
188.604 207.508 188.752 207.283 188.829 206.994 cv
188.874 206.818 188.896 206.447 188.893 205.88 cv
188.512 206.33 188.037 206.554 187.47 206.554 cv
186.764 206.554 186.217 206.299 185.829 205.791 cv
185.442 205.281 185.249 204.671 185.249 203.958 cv
185.249 203.47 185.338 203.017 185.515 202.604 cv
185.692 202.19 185.949 201.87 186.286 201.645 cv
186.623 201.419 187.019 201.307 187.473 201.307 cv
188.078 201.307 188.578 201.554 188.972 202.049 cv
188.972 201.416 li
189.773 201.416 li
189.773 205.853 li
189.773 206.652 189.691 207.218 189.529 207.552 cv
189.367 207.886 189.109 208.15 188.757 208.343 cv
188.404 208.537 187.971 208.632 187.455 208.632 cv
186.844 208.632 186.35 208.496 185.973 208.22 cv
185.596 207.946 185.414 207.533 185.427 206.98 cv
cp
186.14 203.896 mo
186.14 204.568 186.273 205.059 186.542 205.368 cv
186.81 205.677 187.145 205.832 187.548 205.832 cv
187.948 205.832 188.284 205.677 188.555 205.371 cv
188.826 205.063 188.961 204.582 188.961 203.925 cv
188.961 203.298 188.822 202.826 188.543 202.507 cv
188.264 202.188 187.928 202.029 187.533 202.029 cv
187.146 202.029 186.817 202.186 186.547 202.5 cv
186.275 202.814 186.14 203.279 186.14 203.896 cv
cp
f
191.082 206.554 mo
191.082 201.416 li
191.864 201.416 li
191.864 202.203 li
192.064 201.838 192.249 201.597 192.418 201.481 cv
192.588 201.365 192.774 201.307 192.978 201.307 cv
193.271 201.307 193.57 201.398 193.874 201.582 cv
193.563 202.386 li
193.352 202.267 193.141 202.208 192.929 202.208 cv
192.74 202.208 192.57 202.265 192.42 202.379 cv
192.27 202.493 192.162 202.652 192.098 202.855 cv
192.001 203.164 191.953 203.501 191.953 203.869 cv
191.953 206.554 li
191.082 206.554 li
cp
f
197.744 205.91 mo
197.421 206.185 197.109 206.379 196.811 206.493 cv
196.512 206.606 196.191 206.663 195.85 206.663 cv
195.284 206.663 194.851 206.525 194.547 206.25 cv
194.243 205.976 194.092 205.625 194.092 205.197 cv
194.092 204.946 194.148 204.716 194.264 204.509 cv
194.378 204.302 194.528 204.136 194.714 204.01 cv
194.899 203.884 195.108 203.791 195.341 203.726 cv
195.512 203.681 195.771 203.637 196.116 203.595 cv
196.819 203.511 197.338 203.412 197.671 203.296 cv
197.674 203.177 197.675 203.102 197.675 203.07 cv
197.675 202.716 197.593 202.468 197.428 202.323 cv
197.205 202.127 196.874 202.029 196.435 202.029 cv
196.023 202.029 195.721 202.102 195.525 202.245 cv
195.33 202.389 195.186 202.644 195.092 203.009 cv
194.24 202.89 li
194.317 202.526 194.445 202.231 194.623 202.007 cv
194.801 201.782 195.058 201.609 195.395 201.488 cv
195.73 201.367 196.12 201.307 196.563 201.307 cv
197.003 201.307 197.36 201.358 197.635 201.461 cv
197.91 201.565 198.111 201.695 198.241 201.852 cv
198.37 202.008 198.461 202.206 198.513 202.445 cv
198.542 202.594 198.557 202.861 198.557 203.246 cv
198.557 204.402 li
198.557 205.207 198.574 205.717 198.61 205.933 cv
198.646 206.149 198.718 206.356 198.823 206.554 cv
197.913 206.554 li
197.825 206.371 197.77 206.156 197.744 205.91 cv
cp
197.675 203.98 mo
197.358 204.108 196.883 204.216 196.249 204.306 cv
195.891 204.358 195.637 204.416 195.487 204.48 cv
195.339 204.544 195.225 204.638 195.144 204.761 cv
195.063 204.884 195.022 205.021 195.022 205.171 cv
195.022 205.403 195.11 205.595 195.286 205.75 cv
195.462 205.902 195.72 205.98 196.059 205.98 cv
196.394 205.98 196.692 205.907 196.954 205.761 cv
197.215 205.615 197.407 205.416 197.53 205.163 cv
197.624 204.966 197.671 204.678 197.671 204.296 cv
197.675 203.98 li
cp
f
199.892 206.554 mo
199.892 201.416 li
200.674 201.416 li
200.674 202.141 li
200.835 201.891 201.049 201.688 201.316 201.536 cv
201.583 201.383 201.888 201.307 202.229 201.307 cv
202.608 201.307 202.92 201.385 203.163 201.543 cv
203.406 201.701 203.577 201.921 203.677 202.204 cv
204.085 201.606 204.615 201.307 205.27 201.307 cv
205.78 201.307 206.174 201.448 206.449 201.729 cv
206.725 202.011 206.861 202.445 206.861 203.031 cv
206.861 206.554 li
205.99 206.554 li
205.99 203.32 li
205.99 202.972 205.962 202.722 205.905 202.569 cv
205.849 202.416 205.746 202.292 205.598 202.199 cv
205.448 202.106 205.274 202.059 205.073 202.059 cv
204.712 202.059 204.411 202.179 204.171 202.419 cv
203.932 202.66 203.813 203.043 203.813 203.572 cv
203.813 206.554 li
202.941 206.554 li
202.941 203.218 li
202.941 202.832 202.87 202.542 202.729 202.349 cv
202.587 202.156 202.355 202.059 202.033 202.059 cv
201.789 202.059 201.563 202.124 201.354 202.252 cv
201.147 202.381 200.997 202.57 200.903 202.818 cv
200.81 203.066 200.764 203.423 200.764 203.89 cv
200.764 206.554 li
199.892 206.554 li
cp
f
109.188 217.611 mo
109.285 218.24 li
109.085 218.283 108.907 218.303 108.749 218.303 cv
108.491 218.303 108.291 218.262 108.149 218.18 cv
108.007 218.098 107.907 217.991 107.849 217.857 cv
107.792 217.724 107.763 217.443 107.763 217.015 cv
107.763 214.593 li
107.236 214.593 li
107.236 214.042 li
107.763 214.042 li
107.763 213.002 li
108.475 212.576 li
108.475 214.042 li
109.188 214.042 li
109.188 214.593 li
108.475 214.593 li
108.475 217.056 li
108.475 217.259 108.488 217.39 108.513 217.449 cv
108.538 217.507 108.578 217.553 108.635 217.587 cv
108.691 217.622 108.772 217.639 108.877 217.639 cv
108.956 217.639 109.06 217.629 109.188 217.611 cv
cp
f
112.76 216.886 mo
113.498 216.983 li
113.382 217.412 113.167 217.744 112.854 217.98 cv
112.542 218.217 112.142 218.335 111.655 218.335 cv
111.042 218.335 110.556 218.146 110.196 217.769 cv
109.837 217.392 109.658 216.862 109.658 216.18 cv
109.658 215.474 109.839 214.927 110.203 214.538 cv
110.565 214.148 111.037 213.954 111.615 213.954 cv
112.176 213.954 112.634 214.144 112.989 214.526 cv
113.344 214.908 113.521 215.445 113.521 216.137 cv
113.521 216.179 113.521 216.243 113.518 216.327 cv
110.387 216.327 li
110.413 216.788 110.543 217.14 110.778 217.385 cv
111.012 217.63 111.304 217.752 111.655 217.752 cv
111.915 217.752 112.138 217.683 112.322 217.546 cv
112.506 217.408 112.652 217.188 112.76 216.886 cv
cp
110.427 215.744 mo
112.768 215.744 li
112.737 215.39 112.647 215.125 112.5 214.949 cv
112.273 214.673 111.98 214.537 111.62 214.537 cv
111.293 214.537 111.019 214.646 110.796 214.865 cv
110.574 215.083 110.451 215.376 110.427 215.744 cv
cp
f
114.113 216.991 mo
114.817 216.877 li
114.857 217.16 114.968 217.376 115.148 217.527 cv
115.33 217.677 115.583 217.752 115.908 217.752 cv
116.235 217.752 116.479 217.685 116.637 217.552 cv
116.796 217.419 116.875 217.263 116.875 217.084 cv
116.875 216.923 116.804 216.796 116.662 216.705 cv
116.563 216.642 116.319 216.561 115.933 216.464 cv
115.412 216.332 115.051 216.218 114.849 216.123 cv
114.647 216.027 114.495 215.894 114.391 215.724 cv
114.287 215.554 114.234 215.367 114.234 215.162 cv
114.234 214.974 114.277 214.801 114.363 214.642 cv
114.448 214.483 114.565 214.351 114.712 214.246 cv
114.823 214.164 114.974 214.095 115.165 214.039 cv
115.355 213.982 115.561 213.954 115.779 213.954 cv
116.108 213.954 116.397 214.001 116.646 214.096 cv
116.895 214.191 117.079 214.32 117.197 214.484 cv
117.315 214.646 117.397 214.863 117.442 215.136 cv
116.745 215.234 li
116.714 215.014 116.623 214.843 116.471 214.72 cv
116.32 214.598 116.106 214.537 115.83 214.537 cv
115.504 214.537 115.271 214.591 115.132 214.699 cv
114.993 214.806 114.923 214.933 114.923 215.078 cv
114.923 215.17 114.952 215.253 115.01 215.328 cv
115.067 215.404 115.158 215.466 115.282 215.517 cv
115.353 215.543 115.562 215.604 115.909 215.699 cv
116.411 215.833 116.763 215.943 116.962 216.029 cv
117.163 216.115 117.319 216.238 117.433 216.402 cv
117.547 216.564 117.604 216.767 117.604 217.009 cv
117.604 217.246 117.535 217.469 117.396 217.678 cv
117.258 217.888 117.058 218.049 116.796 218.164 cv
116.535 218.279 116.24 218.335 115.91 218.335 cv
115.364 218.335 114.947 218.222 114.661 217.997 cv
114.375 217.771 114.192 217.435 114.113 216.991 cv
cp
f
119.994 217.611 mo
120.091 218.24 li
119.891 218.283 119.712 218.303 119.554 218.303 cv
119.296 218.303 119.097 218.262 118.955 218.18 cv
118.813 218.098 118.712 217.991 118.655 217.857 cv
118.597 217.724 118.568 217.443 118.568 217.015 cv
118.568 214.593 li
118.042 214.593 li
118.042 214.042 li
118.568 214.042 li
118.568 213.002 li
119.281 212.576 li
119.281 214.042 li
119.994 214.042 li
119.994 214.593 li
119.281 214.593 li
119.281 217.056 li
119.281 217.259 119.293 217.39 119.318 217.449 cv
119.343 217.507 119.384 217.553 119.44 217.587 cv
119.497 217.622 119.577 217.639 119.683 217.639 cv
119.761 217.639 119.865 217.629 119.994 217.611 cv
cp
f
120.714 213.257 mo
120.714 212.447 li
121.427 212.447 li
121.427 213.257 li
120.714 213.257 li
cp
120.714 218.247 mo
120.714 214.042 li
121.427 214.042 li
121.427 218.247 li
120.714 218.247 li
cp
f
122.513 218.247 mo
122.513 214.042 li
123.152 214.042 li
123.152 214.64 li
123.461 214.182 123.906 213.954 124.488 213.954 cv
124.741 213.954 124.974 214 125.186 214.089 cv
125.397 214.181 125.557 214.3 125.662 214.448 cv
125.767 214.595 125.841 214.771 125.883 214.973 cv
125.91 215.105 125.923 215.335 125.923 215.666 cv
125.923 218.247 li
125.21 218.247 li
125.21 215.692 li
125.21 215.402 125.182 215.185 125.127 215.042 cv
125.072 214.898 124.974 214.783 124.833 214.698 cv
124.692 214.612 124.527 214.569 124.338 214.569 cv
124.036 214.569 123.774 214.666 123.555 214.858 cv
123.335 215.05 123.226 215.416 123.226 215.953 cv
123.226 218.247 li
122.513 218.247 li
cp
f
126.885 218.595 mo
127.574 218.692 li
127.603 218.906 127.683 219.061 127.815 219.158 cv
127.992 219.291 128.233 219.356 128.54 219.356 cv
128.87 219.356 129.125 219.291 129.304 219.16 cv
129.484 219.027 129.605 218.843 129.668 218.607 cv
129.706 218.462 129.723 218.158 129.72 217.696 cv
129.409 218.063 129.021 218.247 128.556 218.247 cv
127.979 218.247 127.531 218.039 127.214 217.623 cv
126.897 217.206 126.739 216.707 126.739 216.124 cv
126.739 215.723 126.812 215.353 126.957 215.015 cv
127.102 214.676 127.312 214.415 127.587 214.23 cv
127.863 214.046 128.187 213.954 128.559 213.954 cv
129.054 213.954 129.463 214.156 129.785 214.561 cv
129.785 214.042 li
130.441 214.042 li
130.441 217.673 li
130.441 218.328 130.375 218.791 130.241 219.064 cv
130.108 219.336 129.897 219.552 129.609 219.71 cv
129.321 219.869 128.966 219.947 128.544 219.947 cv
128.044 219.947 127.64 219.835 127.332 219.611 cv
127.023 219.386 126.875 219.046 126.885 218.595 cv
cp
127.468 216.072 mo
127.468 216.623 127.578 217.023 127.797 217.277 cv
128.016 217.529 128.291 217.656 128.621 217.656 cv
128.948 217.656 129.223 217.529 129.444 217.279 cv
129.666 217.027 129.777 216.632 129.777 216.096 cv
129.777 215.583 129.663 215.197 129.434 214.935 cv
129.206 214.675 128.931 214.544 128.608 214.544 cv
128.292 214.544 128.022 214.673 127.801 214.929 cv
127.579 215.186 127.468 215.567 127.468 216.072 cv
cp
f
136.623 216.886 mo
137.36 216.983 li
137.245 217.412 137.03 217.744 136.717 217.98 cv
136.404 218.217 136.004 218.335 135.518 218.335 cv
134.904 218.335 134.418 218.146 134.059 217.769 cv
133.7 217.392 133.521 216.862 133.521 216.18 cv
133.521 215.474 133.702 214.927 134.065 214.538 cv
134.428 214.148 134.899 213.954 135.478 213.954 cv
136.039 213.954 136.496 214.144 136.852 214.526 cv
137.207 214.908 137.384 215.445 137.384 216.137 cv
137.384 216.179 137.383 216.243 137.38 216.327 cv
134.25 216.327 li
134.276 216.788 134.406 217.14 134.641 217.385 cv
134.875 217.63 135.167 217.752 135.517 217.752 cv
135.778 217.752 136 217.683 136.185 217.546 cv
136.369 217.408 136.515 217.188 136.623 216.886 cv
cp
134.29 215.744 mo
136.631 215.744 li
136.599 215.39 136.51 215.125 136.362 214.949 cv
136.136 214.673 135.843 214.537 135.482 214.537 cv
135.156 214.537 134.881 214.646 134.659 214.865 cv
134.437 215.083 134.313 215.376 134.29 215.744 cv
cp
f
141.005 217.72 mo
140.74 217.945 140.485 218.104 140.241 218.197 cv
139.997 218.289 139.734 218.335 139.454 218.335 cv
138.992 218.335 138.637 218.223 138.389 217.998 cv
138.14 217.773 138.016 217.486 138.016 217.136 cv
138.016 216.931 138.063 216.744 138.157 216.574 cv
138.25 216.404 138.373 216.268 138.525 216.166 cv
138.677 216.063 138.848 215.986 139.038 215.933 cv
139.178 215.896 139.39 215.861 139.672 215.826 cv
140.248 215.757 140.672 215.676 140.944 215.582 cv
140.947 215.484 140.948 215.422 140.948 215.396 cv
140.948 215.107 140.881 214.904 140.746 214.785 cv
140.563 214.625 140.292 214.544 139.933 214.544 cv
139.597 214.544 139.349 214.603 139.189 214.721 cv
139.029 214.839 138.911 215.048 138.834 215.347 cv
138.138 215.25 li
138.201 214.951 138.305 214.71 138.451 214.527 cv
138.596 214.343 138.807 214.201 139.082 214.102 cv
139.357 214.003 139.676 213.954 140.038 213.954 cv
140.398 213.954 140.69 213.996 140.915 214.08 cv
141.14 214.166 141.305 214.271 141.411 214.4 cv
141.517 214.528 141.591 214.689 141.633 214.884 cv
141.657 215.006 141.669 215.225 141.669 215.541 cv
141.669 216.486 li
141.669 217.144 141.684 217.562 141.713 217.739 cv
141.743 217.916 141.801 218.084 141.888 218.247 cv
141.143 218.247 li
141.071 218.096 141.025 217.921 141.005 217.72 cv
cp
140.948 216.14 mo
140.689 216.246 140.3 216.334 139.781 216.408 cv
139.488 216.45 139.28 216.498 139.158 216.549 cv
139.037 216.602 138.943 216.679 138.876 216.78 cv
138.811 216.88 138.777 216.993 138.777 217.116 cv
138.777 217.304 138.849 217.462 138.993 217.587 cv
139.137 217.714 139.348 217.777 139.625 217.777 cv
139.9 217.777 140.144 217.716 140.358 217.597 cv
140.572 217.478 140.729 217.316 140.829 217.108 cv
140.906 216.949 140.944 216.712 140.944 216.4 cv
140.948 216.14 li
cp
f
145.509 216.708 mo
146.205 216.804 li
146.129 217.284 145.934 217.658 145.618 217.929 cv
145.304 218.201 144.918 218.335 144.46 218.335 cv
143.886 218.335 143.424 218.148 143.075 217.773 cv
142.727 217.398 142.552 216.861 142.552 216.16 cv
142.552 215.708 142.627 215.312 142.777 214.972 cv
142.927 214.632 143.156 214.378 143.463 214.208 cv
143.77 214.039 144.104 213.954 144.465 213.954 cv
144.921 213.954 145.293 214.069 145.583 214.299 cv
145.873 214.531 146.059 214.857 146.141 215.282 cv
145.452 215.387 li
145.386 215.105 145.269 214.892 145.102 214.75 cv
144.934 214.608 144.73 214.537 144.493 214.537 cv
144.134 214.537 143.842 214.666 143.618 214.921 cv
143.393 215.179 143.281 215.585 143.281 216.14 cv
143.281 216.705 143.389 217.114 143.605 217.369 cv
143.822 217.625 144.104 217.752 144.452 217.752 cv
144.731 217.752 144.965 217.667 145.152 217.496 cv
145.34 217.326 145.458 217.062 145.509 216.708 cv
cp
f
146.594 218.247 mo
146.594 212.447 li
147.307 212.447 li
147.307 214.533 li
147.638 214.146 148.055 213.954 148.559 213.954 cv
148.868 213.954 149.138 214.015 149.366 214.137 cv
149.595 214.259 149.758 214.429 149.856 214.645 cv
149.955 214.861 150.004 215.175 150.004 215.585 cv
150.004 218.247 li
149.291 218.247 li
149.291 215.587 li
149.291 215.232 149.215 214.974 149.062 214.812 cv
148.908 214.65 148.691 214.569 148.411 214.569 cv
148.201 214.569 148.004 214.624 147.819 214.733 cv
147.635 214.842 147.503 214.99 147.425 215.177 cv
147.346 215.365 147.307 215.623 147.307 215.952 cv
147.307 218.247 li
146.594 218.247 li
cp
f
153.519 218.247 mo
153.519 214.593 li
152.887 214.593 li
152.887 214.042 li
153.519 214.042 li
153.519 213.597 li
153.519 213.316 153.544 213.106 153.594 212.969 cv
153.662 212.785 153.782 212.636 153.954 212.521 cv
154.126 212.407 154.367 212.349 154.679 212.349 cv
154.879 212.349 155.101 212.374 155.343 212.421 cv
155.236 213.044 li
155.088 213.019 154.948 213.005 154.816 213.005 cv
154.601 213.005 154.447 213.052 154.357 213.143 cv
154.269 213.235 154.224 213.406 154.224 213.658 cv
154.224 214.042 li
155.041 214.042 li
155.041 214.593 li
154.231 214.593 li
154.231 218.247 li
153.519 218.247 li
cp
f
158.347 218.247 mo
158.347 217.621 li
158.021 218.097 157.577 218.335 157.018 218.335 cv
156.77 218.335 156.539 218.289 156.325 218.193 cv
156.11 218.098 155.951 217.979 155.848 217.835 cv
155.743 217.692 155.67 217.516 155.628 217.308 cv
155.6 217.167 155.585 216.947 155.585 216.644 cv
155.585 214.042 li
156.298 214.042 li
156.298 216.369 li
156.298 216.74 156.313 216.991 156.341 217.12 cv
156.386 217.306 156.48 217.453 156.625 217.56 cv
156.77 217.667 156.948 217.72 157.161 217.72 cv
157.375 217.72 157.574 217.666 157.762 217.556 cv
157.948 217.447 158.08 217.298 158.157 217.11 cv
158.235 216.921 158.274 216.648 158.274 216.291 cv
158.274 214.042 li
158.987 214.042 li
158.987 218.247 li
158.347 218.247 li
cp
f
160.104 218.247 mo
160.104 214.042 li
160.744 214.042 li
160.744 214.64 li
161.053 214.182 161.498 213.954 162.08 213.954 cv
162.333 213.954 162.565 214 162.777 214.089 cv
162.99 214.181 163.148 214.3 163.254 214.448 cv
163.359 214.595 163.434 214.771 163.476 214.973 cv
163.502 215.105 163.515 215.335 163.515 215.666 cv
163.515 218.247 li
162.802 218.247 li
162.802 215.692 li
162.802 215.402 162.774 215.185 162.719 215.042 cv
162.664 214.898 162.566 214.783 162.425 214.698 cv
162.284 214.612 162.119 214.569 161.93 214.569 cv
161.628 214.569 161.366 214.666 161.146 214.858 cv
160.928 215.05 160.817 215.416 160.817 215.953 cv
160.817 218.247 li
160.104 218.247 li
cp
f
167.354 216.708 mo
168.051 216.804 li
167.975 217.284 167.779 217.658 167.464 217.929 cv
167.149 218.201 166.764 218.335 166.306 218.335 cv
165.731 218.335 165.27 218.148 164.921 217.773 cv
164.572 217.398 164.397 216.861 164.397 216.16 cv
164.397 215.708 164.473 215.312 164.623 214.972 cv
164.773 214.632 165.002 214.378 165.309 214.208 cv
165.615 214.039 165.949 213.954 166.311 213.954 cv
166.767 213.954 167.139 214.069 167.429 214.299 cv
167.719 214.531 167.904 214.857 167.986 215.282 cv
167.298 215.387 li
167.231 215.105 167.114 214.892 166.947 214.75 cv
166.779 214.608 166.576 214.537 166.339 214.537 cv
165.979 214.537 165.688 214.666 165.463 214.921 cv
165.239 215.179 165.127 215.585 165.127 216.14 cv
165.127 216.705 165.234 217.114 165.451 217.369 cv
165.667 217.625 165.949 217.752 166.298 217.752 cv
166.577 217.752 166.811 217.667 166.998 217.496 cv
167.186 217.326 167.304 217.062 167.354 216.708 cv
cp
f
170.205 217.611 mo
170.303 218.24 li
170.103 218.283 169.924 218.303 169.766 218.303 cv
169.508 218.303 169.309 218.262 169.166 218.18 cv
169.024 218.098 168.925 217.991 168.866 217.857 cv
168.809 217.724 168.779 217.443 168.779 217.015 cv
168.779 214.593 li
168.253 214.593 li
168.253 214.042 li
168.779 214.042 li
168.779 213.002 li
169.492 212.576 li
169.492 214.042 li
170.205 214.042 li
170.205 214.593 li
169.492 214.593 li
169.492 217.056 li
169.492 217.259 169.505 217.39 169.53 217.449 cv
169.555 217.507 169.596 217.553 169.652 217.587 cv
169.709 217.622 169.789 217.639 169.895 217.639 cv
169.973 217.639 170.077 217.629 170.205 217.611 cv
cp
f
170.91 213.257 mo
170.91 212.447 li
171.623 212.447 li
171.623 213.257 li
170.91 213.257 li
cp
170.91 218.247 mo
170.91 214.042 li
171.623 214.042 li
171.623 218.247 li
170.91 218.247 li
cp
f
172.441 216.144 mo
172.441 215.369 172.657 214.792 173.09 214.419 cv
173.451 214.109 173.892 213.954 174.411 213.954 cv
174.989 213.954 175.461 214.142 175.828 214.52 cv
176.194 214.898 176.378 215.419 176.378 216.085 cv
176.378 216.625 176.297 217.049 176.134 217.359 cv
175.972 217.667 175.736 217.908 175.426 218.08 cv
175.116 218.25 174.778 218.335 174.411 218.335 cv
173.823 218.335 173.348 218.148 172.985 217.771 cv
172.622 217.394 172.441 216.853 172.441 216.144 cv
cp
173.17 216.146 mo
173.17 216.683 173.287 217.085 173.523 217.352 cv
173.758 217.619 174.055 217.752 174.411 217.752 cv
174.766 217.752 175.061 217.619 175.296 217.35 cv
175.531 217.082 175.648 216.673 175.648 216.123 cv
175.648 215.605 175.53 215.212 175.294 214.945 cv
175.057 214.678 174.763 214.544 174.411 214.544 cv
174.055 214.544 173.758 214.677 173.523 214.943 cv
173.287 215.208 173.17 215.61 173.17 216.146 cv
cp
f
177.212 218.247 mo
177.212 214.042 li
177.852 214.042 li
177.852 214.64 li
178.16 214.182 178.605 213.954 179.188 213.954 cv
179.44 213.954 179.673 214 179.885 214.089 cv
180.097 214.181 180.256 214.3 180.361 214.448 cv
180.467 214.595 180.54 214.771 180.582 214.973 cv
180.608 215.105 180.622 215.335 180.622 215.666 cv
180.622 218.247 li
179.909 218.247 li
179.909 215.692 li
179.909 215.402 179.882 215.185 179.826 215.042 cv
179.771 214.898 179.673 214.783 179.532 214.698 cv
179.392 214.612 179.227 214.569 179.037 214.569 cv
178.734 214.569 178.474 214.666 178.254 214.858 cv
178.034 215.05 177.925 215.416 177.925 215.953 cv
177.925 218.247 li
177.212 218.247 li
cp
f
186.713 217.72 mo
186.448 217.945 186.193 218.104 185.949 218.197 cv
185.705 218.289 185.442 218.335 185.163 218.335 cv
184.7 218.335 184.345 218.223 184.097 217.998 cv
183.849 217.773 183.725 217.486 183.725 217.136 cv
183.725 216.931 183.771 216.744 183.865 216.574 cv
183.959 216.404 184.082 216.268 184.233 216.166 cv
184.386 216.063 184.557 215.986 184.747 215.933 cv
184.887 215.896 185.098 215.861 185.381 215.826 cv
185.956 215.757 186.381 215.676 186.652 215.582 cv
186.655 215.484 186.656 215.422 186.656 215.396 cv
186.656 215.107 186.589 214.904 186.454 214.785 cv
186.271 214.625 186.001 214.544 185.641 214.544 cv
185.306 214.544 185.058 214.603 184.897 214.721 cv
184.737 214.839 184.619 215.048 184.542 215.347 cv
183.846 215.25 li
183.909 214.951 184.014 214.71 184.159 214.527 cv
184.305 214.343 184.515 214.201 184.79 214.102 cv
185.065 214.003 185.384 213.954 185.746 213.954 cv
186.106 213.954 186.398 213.996 186.623 214.08 cv
186.849 214.166 187.014 214.271 187.119 214.4 cv
187.226 214.528 187.299 214.689 187.342 214.884 cv
187.365 215.006 187.377 215.225 187.377 215.541 cv
187.377 216.486 li
187.377 217.144 187.392 217.562 187.422 217.739 cv
187.451 217.916 187.509 218.084 187.596 218.247 cv
186.851 218.247 li
186.779 218.096 186.733 217.921 186.713 217.72 cv
cp
186.656 216.14 mo
186.397 216.246 186.008 216.334 185.489 216.408 cv
185.196 216.45 184.988 216.498 184.866 216.549 cv
184.745 216.602 184.651 216.679 184.585 216.78 cv
184.519 216.88 184.485 216.993 184.485 217.116 cv
184.485 217.304 184.558 217.462 184.701 217.587 cv
184.846 217.714 185.056 217.777 185.333 217.777 cv
185.608 217.777 185.853 217.716 186.066 217.597 cv
186.28 217.478 186.438 217.316 186.537 217.108 cv
186.614 216.949 186.652 216.712 186.652 216.4 cv
186.656 216.14 li
cp
f
188.188 216.991 mo
188.892 216.877 li
188.932 217.16 189.042 217.376 189.223 217.527 cv
189.404 217.677 189.657 217.752 189.982 217.752 cv
190.31 217.752 190.553 217.685 190.712 217.552 cv
190.87 217.419 190.949 217.263 190.949 217.084 cv
190.949 216.923 190.878 216.796 190.736 216.705 cv
190.637 216.642 190.394 216.561 190.007 216.464 cv
189.486 216.332 189.125 216.218 188.924 216.123 cv
188.722 216.027 188.569 215.894 188.465 215.724 cv
188.361 215.554 188.309 215.367 188.309 215.162 cv
188.309 214.974 188.352 214.801 188.438 214.642 cv
188.522 214.483 188.64 214.351 188.787 214.246 cv
188.897 214.164 189.048 214.095 189.239 214.039 cv
189.43 213.982 189.635 213.954 189.854 213.954 cv
190.183 213.954 190.472 214.001 190.721 214.096 cv
190.97 214.191 191.153 214.32 191.271 214.484 cv
191.39 214.646 191.472 214.863 191.517 215.136 cv
190.82 215.234 li
190.788 215.014 190.697 214.843 190.546 214.72 cv
190.395 214.598 190.181 214.537 189.904 214.537 cv
189.578 214.537 189.346 214.591 189.206 214.699 cv
189.067 214.806 188.997 214.933 188.997 215.078 cv
188.997 215.17 189.026 215.253 189.084 215.328 cv
189.142 215.404 189.232 215.466 189.356 215.517 cv
189.428 215.543 189.637 215.604 189.983 215.699 cv
190.485 215.833 190.837 215.943 191.037 216.029 cv
191.237 216.115 191.394 216.238 191.508 216.402 cv
191.621 216.564 191.679 216.767 191.679 217.009 cv
191.679 217.246 191.609 217.469 191.471 217.678 cv
191.332 217.888 191.132 218.049 190.871 218.164 cv
190.609 218.279 190.314 218.335 189.984 218.335 cv
189.438 218.335 189.021 218.222 188.735 217.997 cv
188.449 217.771 188.267 217.435 188.188 216.991 cv
cp
f
194.74 219.862 mo
194.659 219.204 li
194.815 219.246 194.951 219.267 195.067 219.267 cv
195.227 219.267 195.353 219.241 195.448 219.187 cv
195.543 219.134 195.621 219.061 195.682 218.966 cv
195.727 218.894 195.8 218.717 195.9 218.435 cv
195.913 218.395 195.935 218.337 195.963 218.26 cv
194.367 214.042 li
195.129 214.042 li
196.007 216.469 li
196.121 216.777 196.223 217.101 196.313 217.44 cv
196.395 217.121 196.493 216.805 196.606 216.494 cv
197.502 214.042 li
198.214 214.042 li
196.625 218.32 li
196.453 218.78 196.319 219.096 196.225 219.269 cv
196.098 219.503 195.952 219.675 195.788 219.784 cv
195.624 219.893 195.428 219.947 195.2 219.947 cv
195.063 219.947 194.909 219.919 194.74 219.862 cv
cp
f
198.337 216.144 mo
198.337 215.369 198.553 214.792 198.985 214.419 cv
199.347 214.109 199.787 213.954 200.307 213.954 cv
200.885 213.954 201.356 214.142 201.724 214.52 cv
202.09 214.898 202.273 215.419 202.273 216.085 cv
202.273 216.625 202.192 217.049 202.03 217.359 cv
201.868 217.667 201.632 217.908 201.322 218.08 cv
201.012 218.25 200.674 218.335 200.307 218.335 cv
199.719 218.335 199.243 218.148 198.881 217.771 cv
198.518 217.394 198.337 216.853 198.337 216.144 cv
cp
199.065 216.146 mo
199.065 216.683 199.184 217.085 199.419 217.352 cv
199.654 217.619 199.95 217.752 200.307 217.752 cv
200.661 217.752 200.956 217.619 201.191 217.35 cv
201.427 217.082 201.544 216.673 201.544 216.123 cv
201.544 215.605 201.426 215.212 201.189 214.945 cv
200.953 214.678 200.658 214.544 200.307 214.544 cv
199.95 214.544 199.654 214.677 199.419 214.943 cv
199.184 215.208 199.065 215.61 199.065 216.146 cv
cp
f
205.854 218.247 mo
205.854 217.621 li
205.527 218.097 205.084 218.335 204.523 218.335 cv
204.276 218.335 204.046 218.289 203.831 218.193 cv
203.617 218.098 203.458 217.979 203.354 217.835 cv
203.25 217.692 203.177 217.516 203.135 217.308 cv
203.105 217.167 203.092 216.947 203.092 216.644 cv
203.092 214.042 li
203.804 214.042 li
203.804 216.369 li
203.804 216.74 203.818 216.991 203.848 217.12 cv
203.893 217.306 203.987 217.453 204.132 217.56 cv
204.276 217.667 204.455 217.72 204.668 217.72 cv
204.881 217.72 205.081 217.666 205.268 217.556 cv
205.454 217.447 205.587 217.298 205.664 217.11 cv
205.742 216.921 205.78 216.648 205.78 216.291 cv
205.78 214.042 li
206.493 214.042 li
206.493 218.247 li
205.854 218.247 li
cp
f
133.423 224.054 mo
133.423 223.244 li
134.136 223.244 li
134.136 224.054 li
133.423 224.054 li
cp
133.423 229.044 mo
133.423 224.839 li
134.136 224.839 li
134.136 229.044 li
133.423 229.044 li
cp
f
135.221 229.044 mo
135.221 224.839 li
135.861 224.839 li
135.861 225.433 li
135.992 225.228 136.167 225.064 136.386 224.939 cv
136.604 224.814 136.854 224.751 137.133 224.751 cv
137.443 224.751 137.698 224.816 137.897 224.945 cv
138.096 225.074 138.236 225.253 138.317 225.485 cv
138.651 224.996 139.085 224.751 139.621 224.751 cv
140.039 224.751 140.36 224.867 140.585 225.097 cv
140.811 225.328 140.923 225.682 140.923 226.162 cv
140.923 229.044 li
140.21 229.044 li
140.21 226.398 li
140.21 226.114 140.188 225.909 140.141 225.784 cv
140.095 225.658 140.011 225.558 139.889 225.481 cv
139.767 225.405 139.625 225.367 139.46 225.367 cv
139.164 225.367 138.918 225.464 138.722 225.662 cv
138.526 225.857 138.428 226.171 138.428 226.604 cv
138.428 229.044 li
137.716 229.044 li
137.716 226.316 li
137.716 226 137.658 225.761 137.542 225.603 cv
137.426 225.445 137.236 225.367 136.973 225.367 cv
136.772 225.367 136.587 225.419 136.417 225.525 cv
136.248 225.63 136.125 225.785 136.048 225.988 cv
135.972 226.19 135.934 226.483 135.934 226.865 cv
135.934 229.044 li
135.221 229.044 li
cp
f
141.969 230.656 mo
141.969 224.839 li
142.617 224.839 li
142.617 225.392 li
142.77 225.179 142.942 225.018 143.135 224.912 cv
143.327 224.804 143.561 224.751 143.834 224.751 cv
144.193 224.751 144.51 224.843 144.783 225.027 cv
145.058 225.211 145.265 225.471 145.404 225.806 cv
145.544 226.142 145.613 226.51 145.613 226.91 cv
145.613 227.339 145.537 227.726 145.383 228.069 cv
145.229 228.412 145.005 228.675 144.711 228.859 cv
144.417 229.042 144.108 229.132 143.784 229.132 cv
143.547 229.132 143.334 229.083 143.146 228.983 cv
142.958 228.883 142.803 228.757 142.682 228.605 cv
142.682 230.656 li
141.969 230.656 li
cp
142.617 226.967 mo
142.617 227.506 142.726 227.906 142.944 228.164 cv
143.162 228.421 143.427 228.55 143.737 228.55 cv
144.053 228.55 144.322 228.416 144.548 228.149 cv
144.772 227.882 144.885 227.468 144.885 226.908 cv
144.885 226.375 144.775 225.974 144.556 225.708 cv
144.336 225.443 144.073 225.31 143.769 225.31 cv
143.466 225.31 143.199 225.451 142.966 225.734 cv
142.733 226.017 142.617 226.427 142.617 226.967 cv
cp
f
146.456 229.044 mo
146.456 223.244 li
147.169 223.244 li
147.169 229.044 li
146.456 229.044 li
cp
f
151.139 227.683 mo
151.876 227.781 li
151.76 228.208 151.545 228.542 151.232 228.778 cv
150.919 229.015 150.52 229.132 150.032 229.132 cv
149.42 229.132 148.934 228.944 148.574 228.566 cv
148.215 228.189 148.035 227.66 148.035 226.978 cv
148.035 226.272 148.217 225.724 148.58 225.335 cv
148.943 224.945 149.414 224.751 149.993 224.751 cv
150.554 224.751 151.012 224.941 151.366 225.324 cv
151.722 225.705 151.899 226.242 151.899 226.935 cv
151.899 226.976 151.898 227.041 151.896 227.125 cv
148.765 227.125 li
148.791 227.585 148.921 227.937 149.155 228.183 cv
149.39 228.427 149.683 228.55 150.032 228.55 cv
150.293 228.55 150.516 228.481 150.7 228.343 cv
150.884 228.205 151.03 227.985 151.139 227.683 cv
cp
148.805 226.541 mo
151.146 226.541 li
151.114 226.187 151.025 225.922 150.878 225.746 cv
150.651 225.471 150.357 225.333 149.997 225.333 cv
149.671 225.333 149.396 225.443 149.174 225.662 cv
148.952 225.881 148.829 226.174 148.805 226.541 cv
cp
f
152.773 229.044 mo
152.773 224.839 li
153.413 224.839 li
153.413 225.433 li
153.545 225.228 153.72 225.064 153.938 224.939 cv
154.157 224.814 154.406 224.751 154.686 224.751 cv
154.996 224.751 155.251 224.816 155.449 224.945 cv
155.648 225.074 155.789 225.253 155.87 225.485 cv
156.204 224.996 156.638 224.751 157.173 224.751 cv
157.592 224.751 157.913 224.867 158.139 225.097 cv
158.363 225.328 158.476 225.682 158.476 226.162 cv
158.476 229.044 li
157.763 229.044 li
157.763 226.398 li
157.763 226.114 157.74 225.909 157.693 225.784 cv
157.647 225.658 157.563 225.558 157.441 225.481 cv
157.32 225.405 157.177 225.367 157.013 225.367 cv
156.717 225.367 156.471 225.464 156.274 225.662 cv
156.079 225.857 155.981 226.171 155.981 226.604 cv
155.981 229.044 li
155.269 229.044 li
155.269 226.316 li
155.269 226 155.21 225.761 155.095 225.603 cv
154.979 225.445 154.789 225.367 154.525 225.367 cv
154.325 225.367 154.141 225.419 153.971 225.525 cv
153.801 225.63 153.678 225.785 153.601 225.988 cv
153.524 226.19 153.486 226.483 153.486 226.865 cv
153.486 229.044 li
152.773 229.044 li
cp
f
162.389 227.683 mo
163.127 227.781 li
163.011 228.208 162.796 228.542 162.483 228.778 cv
162.17 229.015 161.771 229.132 161.283 229.132 cv
160.671 229.132 160.185 228.944 159.825 228.566 cv
159.466 228.189 159.286 227.66 159.286 226.978 cv
159.286 226.272 159.468 225.724 159.831 225.335 cv
160.194 224.945 160.665 224.751 161.244 224.751 cv
161.805 224.751 162.263 224.941 162.617 225.324 cv
162.973 225.705 163.15 226.242 163.15 226.935 cv
163.15 226.976 163.149 227.041 163.146 227.125 cv
160.016 227.125 li
160.042 227.585 160.172 227.937 160.406 228.183 cv
160.641 228.427 160.934 228.55 161.283 228.55 cv
161.544 228.55 161.767 228.481 161.951 228.343 cv
162.135 228.205 162.281 227.985 162.389 227.683 cv
cp
160.056 226.541 mo
162.396 226.541 li
162.365 226.187 162.276 225.922 162.129 225.746 cv
161.902 225.471 161.608 225.333 161.248 225.333 cv
160.922 225.333 160.647 225.443 160.425 225.662 cv
160.203 225.881 160.08 226.174 160.056 226.541 cv
cp
f
164.033 229.044 mo
164.033 224.839 li
164.673 224.839 li
164.673 225.437 li
164.981 224.98 165.427 224.751 166.009 224.751 cv
166.262 224.751 166.494 224.796 166.706 224.887 cv
166.918 224.978 167.077 225.097 167.183 225.245 cv
167.288 225.392 167.361 225.568 167.403 225.771 cv
167.43 225.902 167.443 226.132 167.443 226.462 cv
167.443 229.044 li
166.73 229.044 li
166.73 226.49 li
166.73 226.199 166.703 225.982 166.647 225.839 cv
166.593 225.695 166.494 225.581 166.354 225.496 cv
166.213 225.41 166.048 225.367 165.858 225.367 cv
165.556 225.367 165.295 225.462 165.075 225.656 cv
164.855 225.847 164.746 226.212 164.746 226.75 cv
164.746 229.044 li
164.033 229.044 li
cp
f
169.865 228.408 mo
169.962 229.037 li
169.763 229.08 169.584 229.101 169.426 229.101 cv
169.168 229.101 168.968 229.06 168.826 228.978 cv
168.685 228.896 168.584 228.789 168.526 228.654 cv
168.469 228.521 168.439 228.24 168.439 227.812 cv
168.439 225.39 li
167.913 225.39 li
167.913 224.839 li
168.439 224.839 li
168.439 223.8 li
169.152 223.373 li
169.152 224.839 li
169.865 224.839 li
169.865 225.39 li
169.152 225.39 li
169.152 227.853 li
169.152 228.056 169.165 228.187 169.189 228.246 cv
169.215 228.304 169.256 228.35 169.312 228.384 cv
169.368 228.419 169.449 228.436 169.554 228.436 cv
169.633 228.436 169.736 228.427 169.865 228.408 cv
cp
f
172.821 224.054 mo
172.821 223.244 li
173.534 223.244 li
173.534 224.054 li
172.821 224.054 li
cp
172.821 229.044 mo
172.821 224.839 li
173.534 224.839 li
173.534 229.044 li
172.821 229.044 li
cp
f
176.167 228.408 mo
176.264 229.037 li
176.064 229.08 175.886 229.101 175.728 229.101 cv
175.47 229.101 175.27 229.06 175.128 228.978 cv
174.986 228.896 174.886 228.789 174.828 228.654 cv
174.771 228.521 174.741 228.24 174.741 227.812 cv
174.741 225.39 li
174.215 225.39 li
174.215 224.839 li
174.741 224.839 li
174.741 223.8 li
175.454 223.373 li
175.454 224.839 li
176.167 224.839 li
176.167 225.39 li
175.454 225.39 li
175.454 227.853 li
175.454 228.056 175.467 228.187 175.491 228.246 cv
175.517 228.304 175.558 228.35 175.613 228.384 cv
175.67 228.419 175.751 228.436 175.855 228.436 cv
175.935 228.436 176.038 228.427 176.167 228.408 cv
cp
f
177.074 229.044 mo
177.074 228.234 li
177.884 228.234 li
177.884 229.044 li
177.074 229.044 li
cp
f
99.8999 269.1 mo
213.3 269.1 li
213.3 325.8 li
99.8999 325.8 li
99.8999 269.1 li
cp
0 0 0 0 cmyk
f
gsave
0 327.599 mo
272.7 327.599 li
272.7 0 li
0 0 li
0 327.599 li
cp
clp
99.8999 269.1 mo
213.3 269.1 li
213.3 325.8 li
99.8999 325.8 li
99.8999 269.1 li
cp
.746 .676 .668 .898 cmyk
@
grestore
108.184 286.201 mo
110.893 279.112 li
111.934 279.112 li
114.821 286.201 li
113.753 286.201 li
112.934 284.052 li
109.948 284.052 li
109.179 286.201 li
108.184 286.201 li
cp
110.224 283.29 mo
112.64 283.29 li
111.909 281.322 li
111.681 280.726 111.508 280.234 111.392 279.844 cv
111.294 280.306 111.164 280.761 111.001 281.208 cv
110.224 283.29 li
cp
0 0 0 1 cmyk
f
115.456 286.201 mo
115.456 281.062 li
116.238 281.062 li
116.238 281.792 li
116.615 281.232 117.159 280.953 117.871 280.953 cv
118.18 280.953 118.464 281.009 118.723 281.12 cv
118.982 281.231 119.176 281.376 119.305 281.557 cv
119.434 281.738 119.524 281.952 119.576 282.2 cv
119.607 282.361 119.624 282.642 119.624 283.044 cv
119.624 286.201 li
118.752 286.201 li
118.752 283.078 li
118.752 282.724 118.719 282.458 118.651 282.283 cv
118.584 282.107 118.464 281.967 118.292 281.863 cv
118.12 281.757 117.918 281.706 117.687 281.706 cv
117.317 281.706 116.998 281.824 116.729 282.058 cv
116.461 282.293 116.327 282.74 116.327 283.397 cv
116.327 286.201 li
115.456 286.201 li
cp
f
124.316 285.556 mo
123.993 285.832 123.681 286.026 123.383 286.139 cv
123.084 286.252 122.764 286.309 122.421 286.309 cv
121.856 286.309 121.422 286.171 121.119 285.896 cv
120.815 285.622 120.663 285.271 120.663 284.843 cv
120.663 284.592 120.721 284.363 120.835 284.156 cv
120.95 283.949 121.1 283.783 121.286 283.657 cv
121.471 283.531 121.68 283.437 121.913 283.373 cv
122.084 283.328 122.342 283.284 122.688 283.242 cv
123.392 283.158 123.91 283.058 124.242 282.943 cv
124.246 282.824 124.247 282.749 124.247 282.716 cv
124.247 282.363 124.165 282.115 124 281.97 cv
123.777 281.774 123.445 281.675 123.006 281.675 cv
122.596 281.675 122.292 281.748 122.097 281.892 cv
121.901 282.036 121.757 282.291 121.663 282.656 cv
120.812 282.537 li
120.889 282.171 121.017 281.877 121.195 281.653 cv
121.373 281.429 121.63 281.255 121.966 281.134 cv
122.302 281.013 122.692 280.953 123.135 280.953 cv
123.575 280.953 123.932 281.005 124.207 281.108 cv
124.481 281.211 124.684 281.341 124.813 281.498 cv
124.942 281.655 125.033 281.853 125.084 282.091 cv
125.114 282.24 125.128 282.507 125.128 282.892 cv
125.128 284.047 li
125.128 284.853 125.146 285.364 125.182 285.58 cv
125.218 285.795 125.289 286.001 125.396 286.201 cv
124.484 286.201 li
124.397 286.017 124.341 285.802 124.316 285.556 cv
cp
124.247 283.626 mo
123.93 283.754 123.455 283.863 122.821 283.953 cv
122.462 284.003 122.208 284.062 122.06 284.126 cv
121.911 284.19 121.796 284.284 121.715 284.408 cv
121.634 284.531 121.594 284.667 121.594 284.818 cv
121.594 285.048 121.682 285.242 121.858 285.395 cv
122.034 285.548 122.291 285.626 122.63 285.626 cv
122.966 285.626 123.264 285.552 123.525 285.408 cv
123.787 285.261 123.979 285.062 124.102 284.808 cv
124.195 284.613 124.242 284.325 124.242 283.943 cv
124.247 283.626 li
cp
f
126.445 286.201 mo
126.445 279.112 li
127.316 279.112 li
127.316 286.201 li
126.445 286.201 li
cp
f
128.623 288.174 mo
128.524 287.371 li
128.714 287.421 128.881 287.447 129.023 287.447 cv
129.217 287.447 129.372 287.416 129.488 287.351 cv
129.604 287.287 129.699 287.195 129.774 287.08 cv
129.829 286.992 129.917 286.775 130.04 286.43 cv
130.056 286.382 130.082 286.31 130.118 286.216 cv
128.167 281.062 li
129.098 281.062 li
130.171 284.028 li
130.31 284.404 130.435 284.799 130.545 285.214 cv
130.646 284.824 130.765 284.439 130.904 284.058 cv
131.999 281.062 li
132.868 281.062 li
130.927 286.29 li
130.716 286.851 130.553 287.239 130.437 287.451 cv
130.281 287.736 130.104 287.946 129.903 288.08 cv
129.703 288.212 129.463 288.279 129.186 288.279 cv
129.018 288.279 128.83 288.244 128.623 288.174 cv
cp
f
133.152 286.201 mo
133.152 285.492 li
136.405 281.736 li
136.037 281.755 135.712 281.765 135.43 281.765 cv
133.351 281.765 li
133.351 281.062 li
137.538 281.062 li
137.538 281.634 li
134.753 284.892 li
134.22 285.498 li
134.61 285.464 134.977 285.448 135.319 285.448 cv
137.696 285.448 li
137.696 286.201 li
133.152 286.201 li
cp
f
142.067 284.537 mo
142.969 284.656 li
142.827 285.179 142.565 285.585 142.182 285.875 cv
141.8 286.165 141.311 286.309 140.716 286.309 cv
139.967 286.309 139.373 286.078 138.934 285.617 cv
138.495 285.155 138.275 284.507 138.275 283.674 cv
138.275 282.812 138.497 282.143 138.941 281.667 cv
139.385 281.191 139.96 280.953 140.668 280.953 cv
141.353 280.953 141.912 281.187 142.346 281.653 cv
142.781 282.119 142.998 282.776 142.998 283.623 cv
142.998 283.673 142.996 283.751 142.993 283.853 cv
139.167 283.853 li
139.199 284.417 139.358 284.848 139.644 285.148 cv
139.931 285.447 140.288 285.596 140.716 285.596 cv
141.034 285.596 141.306 285.511 141.531 285.343 cv
141.757 285.175 141.936 284.906 142.067 284.537 cv
cp
139.216 283.141 mo
142.077 283.141 li
142.039 282.708 141.929 282.384 141.749 282.169 cv
141.472 281.833 141.114 281.666 140.673 281.666 cv
140.274 281.666 139.938 281.8 139.667 282.068 cv
139.395 282.335 139.245 282.693 139.216 283.141 cv
cp
f
146.779 288.174 mo
146.681 287.371 li
146.871 287.421 147.037 287.447 147.18 287.447 cv
147.373 287.447 147.528 287.416 147.645 287.351 cv
147.761 287.287 147.856 287.195 147.931 287.08 cv
147.985 286.992 148.074 286.775 148.197 286.43 cv
148.213 286.382 148.238 286.31 148.274 286.216 cv
146.324 281.062 li
147.255 281.062 li
148.328 284.028 li
148.467 284.404 148.592 284.799 148.701 285.214 cv
148.802 284.824 148.922 284.439 149.061 284.058 cv
150.155 281.062 li
151.025 281.062 li
149.083 286.29 li
148.873 286.851 148.71 287.239 148.594 287.451 cv
148.438 287.736 148.26 287.946 148.06 288.08 cv
147.859 288.212 147.62 288.279 147.342 288.279 cv
147.174 288.279 146.986 288.244 146.779 288.174 cv
cp
f
151.175 283.63 mo
151.175 282.682 151.439 281.979 151.968 281.523 cv
152.41 281.142 152.948 280.953 153.583 280.953 cv
154.289 280.953 154.866 281.183 155.314 281.646 cv
155.763 282.107 155.986 282.745 155.986 283.558 cv
155.986 284.218 155.888 284.737 155.689 285.115 cv
155.491 285.493 155.202 285.787 154.823 285.996 cv
154.444 286.205 154.031 286.309 153.583 286.309 cv
152.864 286.309 152.283 286.08 151.84 285.619 cv
151.396 285.16 151.175 284.496 151.175 283.63 cv
cp
152.066 283.633 mo
152.066 284.29 152.21 284.781 152.497 285.107 cv
152.785 285.433 153.146 285.596 153.583 285.596 cv
154.016 285.596 154.376 285.432 154.664 285.105 cv
154.951 284.777 155.096 284.277 155.096 283.605 cv
155.096 282.971 154.951 282.492 154.661 282.166 cv
154.372 281.839 154.013 281.675 153.583 281.675 cv
153.146 281.675 152.785 281.837 152.497 282.164 cv
152.21 282.488 152.066 282.978 152.066 283.633 cv
cp
f
160.362 286.201 mo
160.362 285.436 li
159.964 286.018 159.422 286.309 158.737 286.309 cv
158.435 286.309 158.152 286.251 157.891 286.135 cv
157.629 286.019 157.434 285.873 157.307 285.698 cv
157.18 285.523 157.091 285.307 157.039 285.052 cv
157.004 284.882 156.986 284.611 156.986 284.242 cv
156.986 281.062 li
157.857 281.062 li
157.857 283.906 li
157.857 284.359 157.875 284.666 157.91 284.823 cv
157.965 285.051 158.081 285.23 158.258 285.361 cv
158.435 285.492 158.653 285.556 158.913 285.556 cv
159.174 285.556 159.418 285.49 159.646 285.357 cv
159.875 285.222 160.036 285.041 160.131 284.81 cv
160.226 284.581 160.273 284.247 160.273 283.809 cv
160.273 281.062 li
161.145 281.062 li
161.145 286.201 li
160.362 286.201 li
cp
f
162.501 286.201 mo
162.501 281.062 li
163.283 281.062 li
163.283 281.849 li
163.482 281.484 163.668 281.244 163.837 281.127 cv
164.007 281.011 164.193 280.953 164.396 280.953 cv
164.69 280.953 164.989 281.044 165.292 281.228 cv
164.981 282.033 li
164.771 281.914 164.56 281.854 164.348 281.854 cv
164.159 281.854 163.989 281.912 163.839 282.025 cv
163.688 282.14 163.581 282.298 163.517 282.501 cv
163.42 282.81 163.372 283.148 163.372 283.515 cv
163.372 286.201 li
162.501 286.201 li
cp
f
168.56 288.169 mo
168.56 281.062 li
169.352 281.062 li
169.352 281.738 li
169.538 281.476 169.749 281.28 169.984 281.15 cv
170.22 281.019 170.505 280.953 170.84 280.953 cv
171.278 280.953 171.665 281.066 172 281.291 cv
172.335 281.516 172.588 281.833 172.758 282.244 cv
172.929 282.654 173.015 283.103 173.015 283.592 cv
173.015 284.117 172.92 284.589 172.731 285.009 cv
172.544 285.428 172.27 285.75 171.911 285.974 cv
171.552 286.197 171.174 286.309 170.778 286.309 cv
170.488 286.309 170.229 286.248 169.998 286.126 cv
169.768 286.003 169.579 285.849 169.431 285.664 cv
169.431 288.169 li
168.56 288.169 li
cp
169.352 283.662 mo
169.352 284.322 169.484 284.808 169.752 285.124 cv
170.019 285.439 170.342 285.596 170.721 285.596 cv
171.106 285.596 171.437 285.433 171.711 285.107 cv
171.986 284.781 172.123 284.275 172.123 283.589 cv
172.123 282.937 171.989 282.449 171.721 282.124 cv
171.452 281.798 171.132 281.636 170.759 281.636 cv
170.39 281.636 170.063 281.809 169.778 282.155 cv
169.494 282.5 169.352 283.003 169.352 283.662 cv
cp
f
174.054 286.201 mo
174.054 281.062 li
174.836 281.062 li
174.836 281.849 li
175.036 281.484 175.221 281.244 175.391 281.127 cv
175.56 281.011 175.746 280.953 175.95 280.953 cv
176.243 280.953 176.542 281.044 176.846 281.228 cv
176.535 282.033 li
176.324 281.914 176.112 281.854 175.901 281.854 cv
175.713 281.854 175.543 281.912 175.393 282.025 cv
175.242 282.14 175.135 282.298 175.07 282.501 cv
174.974 282.81 174.925 283.148 174.925 283.515 cv
174.925 286.201 li
174.054 286.201 li
cp
f
177.034 283.63 mo
177.034 282.682 177.298 281.979 177.827 281.523 cv
178.269 281.142 178.807 280.953 179.442 280.953 cv
180.148 280.953 180.725 281.183 181.173 281.646 cv
181.621 282.107 181.846 282.745 181.846 283.558 cv
181.846 284.218 181.746 284.737 181.548 285.115 cv
181.35 285.493 181.062 285.787 180.683 285.996 cv
180.304 286.205 179.89 286.309 179.442 286.309 cv
178.723 286.309 178.142 286.08 177.698 285.619 cv
177.256 285.16 177.034 284.496 177.034 283.63 cv
cp
177.925 283.633 mo
177.925 284.29 178.068 284.781 178.356 285.107 cv
178.644 285.433 179.006 285.596 179.442 285.596 cv
179.875 285.596 180.235 285.432 180.522 285.105 cv
180.811 284.777 180.954 284.277 180.954 283.605 cv
180.954 282.971 180.81 282.492 180.521 282.166 cv
180.231 281.839 179.872 281.675 179.442 281.675 cv
179.006 281.675 178.644 281.837 178.356 282.164 cv
178.068 282.488 177.925 282.978 177.925 283.633 cv
cp
f
182.705 286.626 mo
183.546 286.745 li
183.582 287.005 183.68 287.195 183.842 287.314 cv
184.058 287.476 184.353 287.556 184.728 287.556 cv
185.131 287.556 185.442 287.476 185.661 287.316 cv
185.881 287.155 186.029 286.929 186.106 286.64 cv
186.152 286.464 186.173 286.092 186.17 285.527 cv
185.789 285.976 185.314 286.201 184.747 286.201 cv
184.041 286.201 183.494 285.946 183.107 285.437 cv
182.72 284.927 182.526 284.318 182.526 283.605 cv
182.526 283.116 182.615 282.664 182.792 282.25 cv
182.97 281.836 183.227 281.517 183.563 281.292 cv
183.9 281.066 184.296 280.953 184.75 280.953 cv
185.356 280.953 185.855 281.201 186.249 281.695 cv
186.249 281.062 li
187.051 281.062 li
187.051 285.5 li
187.051 286.298 186.97 286.865 186.807 287.199 cv
186.645 287.533 186.387 287.795 186.034 287.989 cv
185.682 288.183 185.248 288.279 184.732 288.279 cv
184.121 288.279 183.627 288.142 183.25 287.867 cv
182.874 287.592 182.691 287.179 182.705 286.626 cv
cp
183.418 283.542 mo
183.418 284.214 183.552 284.706 183.819 285.014 cv
184.087 285.323 184.423 285.478 184.826 285.478 cv
185.226 285.478 185.562 285.324 185.832 285.017 cv
186.104 284.709 186.239 284.228 186.239 283.572 cv
186.239 282.945 186.1 282.472 185.82 282.154 cv
185.541 281.835 185.205 281.675 184.812 281.675 cv
184.424 281.675 184.095 281.833 183.824 282.146 cv
183.553 282.46 183.418 282.925 183.418 283.542 cv
cp
f
188.359 286.201 mo
188.359 281.062 li
189.142 281.062 li
189.142 281.849 li
189.342 281.484 189.526 281.244 189.696 281.127 cv
189.865 281.011 190.052 280.953 190.255 280.953 cv
190.549 280.953 190.848 281.044 191.151 281.228 cv
190.841 282.033 li
190.629 281.914 190.418 281.854 190.207 281.854 cv
190.018 281.854 189.849 281.912 189.698 282.025 cv
189.547 282.14 189.439 282.298 189.376 282.501 cv
189.279 282.81 189.23 283.148 189.23 283.515 cv
189.23 286.201 li
188.359 286.201 li
cp
f
195.022 285.556 mo
194.698 285.832 194.387 286.026 194.089 286.139 cv
193.79 286.252 193.47 286.309 193.127 286.309 cv
192.563 286.309 192.128 286.171 191.824 285.896 cv
191.521 285.622 191.369 285.271 191.369 284.843 cv
191.369 284.592 191.427 284.363 191.541 284.156 cv
191.655 283.949 191.806 283.783 191.991 283.657 cv
192.177 283.531 192.386 283.437 192.618 283.373 cv
192.79 283.328 193.048 283.284 193.394 283.242 cv
194.098 283.158 194.615 283.058 194.948 282.943 cv
194.951 282.824 194.953 282.749 194.953 282.716 cv
194.953 282.363 194.87 282.115 194.706 281.97 cv
194.482 281.774 194.151 281.675 193.712 281.675 cv
193.302 281.675 192.998 281.748 192.803 281.892 cv
192.607 282.036 192.463 282.291 192.369 282.656 cv
191.518 282.537 li
191.595 282.171 191.723 281.877 191.9 281.653 cv
192.078 281.429 192.336 281.255 192.672 281.134 cv
193.008 281.013 193.397 280.953 193.841 280.953 cv
194.28 280.953 194.638 281.005 194.912 281.108 cv
195.188 281.211 195.39 281.341 195.519 281.498 cv
195.648 281.655 195.738 281.853 195.79 282.091 cv
195.819 282.24 195.834 282.507 195.834 282.892 cv
195.834 284.047 li
195.834 284.853 195.852 285.364 195.888 285.58 cv
195.924 285.795 195.995 286.001 196.102 286.201 cv
195.19 286.201 li
195.104 286.017 195.047 285.802 195.022 285.556 cv
cp
194.953 283.626 mo
194.636 283.754 194.16 283.863 193.526 283.953 cv
193.168 284.003 192.914 284.062 192.766 284.126 cv
192.616 284.19 192.502 284.284 192.421 284.408 cv
192.34 284.531 192.3 284.667 192.3 284.818 cv
192.3 285.048 192.388 285.242 192.563 285.395 cv
192.739 285.548 192.997 285.626 193.336 285.626 cv
193.672 285.626 193.97 285.552 194.231 285.408 cv
194.493 285.261 194.685 285.062 194.808 284.808 cv
194.901 284.613 194.948 284.325 194.948 283.943 cv
194.953 283.626 li
cp
f
197.17 286.201 mo
197.17 281.062 li
197.952 281.062 li
197.952 281.788 li
198.112 281.537 198.326 281.335 198.594 281.182 cv
198.861 281.029 199.165 280.953 199.506 280.953 cv
199.886 280.953 200.197 281.032 200.44 281.189 cv
200.684 281.347 200.854 281.568 200.954 281.851 cv
201.362 281.251 201.894 280.953 202.547 280.953 cv
203.059 280.953 203.451 281.093 203.727 281.376 cv
204.002 281.658 204.14 282.091 204.14 282.677 cv
204.14 286.201 li
203.268 286.201 li
203.268 282.966 li
203.268 282.619 203.24 282.369 203.184 282.215 cv
203.127 282.062 203.023 281.939 202.875 281.845 cv
202.727 281.751 202.552 281.706 202.352 281.706 cv
201.989 281.706 201.688 281.826 201.449 282.066 cv
201.21 282.306 201.09 282.689 201.09 283.218 cv
201.09 286.201 li
200.219 286.201 li
200.219 282.865 li
200.219 282.478 200.148 282.189 200.006 281.996 cv
199.865 281.802 199.633 281.706 199.311 281.706 cv
199.066 281.706 198.84 281.77 198.633 281.899 cv
198.425 282.027 198.274 282.216 198.181 282.464 cv
198.088 282.712 198.041 283.07 198.041 283.537 cv
198.041 286.201 li
197.17 286.201 li
cp
f
108.466 299.704 mo
108.466 295.239 li
107.693 295.239 li
107.693 294.566 li
108.466 294.566 li
108.466 294.021 li
108.466 293.677 108.496 293.421 108.557 293.253 cv
108.641 293.029 108.787 292.846 108.997 292.707 cv
109.208 292.566 109.503 292.497 109.883 292.497 cv
110.128 292.497 110.398 292.525 110.695 292.583 cv
110.564 293.346 li
110.384 293.314 110.213 293.298 110.052 293.298 cv
109.788 293.298 109.601 293.355 109.491 293.466 cv
109.382 293.578 109.327 293.789 109.327 294.095 cv
109.327 294.566 li
110.327 294.566 li
110.327 295.239 li
109.337 295.239 li
109.337 299.704 li
108.466 299.704 li
cp
f
110.684 297.134 mo
110.684 296.185 110.948 295.483 111.477 295.026 cv
111.919 294.646 112.457 294.457 113.092 294.457 cv
113.798 294.457 114.375 294.687 114.823 295.149 cv
115.271 295.611 115.496 296.249 115.496 297.062 cv
115.496 297.722 115.396 298.24 115.198 298.619 cv
115 298.996 114.711 299.291 114.333 299.5 cv
113.954 299.708 113.54 299.812 113.092 299.812 cv
112.374 299.812 111.792 299.583 111.349 299.123 cv
110.906 298.663 110.684 298 110.684 297.134 cv
cp
111.575 297.137 mo
111.575 297.792 111.719 298.285 112.006 298.611 cv
112.294 298.937 112.656 299.099 113.092 299.099 cv
113.525 299.099 113.885 298.936 114.173 298.608 cv
114.46 298.281 114.604 297.781 114.604 297.108 cv
114.604 296.474 114.46 295.996 114.17 295.669 cv
113.881 295.342 113.522 295.179 113.092 295.179 cv
112.656 295.179 112.294 295.341 112.006 295.667 cv
111.719 295.992 111.575 296.482 111.575 297.137 cv
cp
f
116.505 299.704 mo
116.505 294.566 li
117.287 294.566 li
117.287 295.353 li
117.487 294.988 117.672 294.748 117.842 294.63 cv
118.011 294.515 118.198 294.457 118.401 294.457 cv
118.695 294.457 118.994 294.548 119.297 294.732 cv
118.986 295.537 li
118.775 295.417 118.564 295.357 118.353 295.357 cv
118.164 295.357 117.994 295.415 117.844 295.529 cv
117.693 295.643 117.586 295.802 117.521 296.004 cv
117.425 296.314 117.376 296.652 117.376 297.019 cv
117.376 299.704 li
116.505 299.704 li
cp
f
125.92 297.823 mo
126.771 297.941 li
126.678 298.527 126.439 298.985 126.055 299.316 cv
125.67 299.647 125.198 299.812 124.638 299.812 cv
123.937 299.812 123.373 299.583 122.946 299.125 cv
122.52 298.667 122.307 298.009 122.307 297.154 cv
122.307 296.601 122.398 296.117 122.582 295.702 cv
122.766 295.287 123.045 294.976 123.42 294.768 cv
123.795 294.56 124.203 294.457 124.645 294.457 cv
125.202 294.457 125.657 294.597 126.011 294.879 cv
126.365 295.162 126.592 295.562 126.692 296.08 cv
125.851 296.208 li
125.77 295.865 125.627 295.605 125.422 295.431 cv
125.217 295.256 124.97 295.169 124.679 295.169 cv
124.24 295.169 123.883 295.326 123.609 295.64 cv
123.335 295.955 123.198 296.451 123.198 297.13 cv
123.198 297.819 123.33 298.32 123.594 298.631 cv
123.858 298.944 124.204 299.099 124.629 299.099 cv
124.971 299.099 125.256 298.996 125.485 298.787 cv
125.714 298.578 125.859 298.256 125.92 297.823 cv
cp
f
127.494 299.704 mo
127.494 292.615 li
128.365 292.615 li
128.365 299.704 li
127.494 299.704 li
cp
f
133.068 299.06 mo
132.744 299.335 132.433 299.529 132.134 299.642 cv
131.835 299.755 131.515 299.812 131.173 299.812 cv
130.608 299.812 130.174 299.675 129.87 299.4 cv
129.566 299.125 129.415 298.774 129.415 298.347 cv
129.415 298.095 129.472 297.867 129.587 297.66 cv
129.701 297.453 129.852 297.286 130.037 297.16 cv
130.223 297.035 130.432 296.94 130.665 296.876 cv
130.835 296.831 131.094 296.787 131.439 296.746 cv
132.143 296.662 132.661 296.562 132.994 296.447 cv
132.997 296.328 132.999 296.252 132.999 296.22 cv
132.999 295.867 132.916 295.618 132.751 295.473 cv
132.528 295.277 132.197 295.179 131.758 295.179 cv
131.347 295.179 131.044 295.251 130.849 295.396 cv
130.653 295.539 130.508 295.794 130.415 296.16 cv
129.563 296.041 li
129.641 295.675 129.769 295.38 129.946 295.157 cv
130.124 294.932 130.381 294.759 130.718 294.638 cv
131.054 294.517 131.443 294.457 131.886 294.457 cv
132.326 294.457 132.684 294.508 132.958 294.612 cv
133.233 294.714 133.435 294.845 133.564 295.001 cv
133.694 295.158 133.784 295.357 133.836 295.595 cv
133.865 295.744 133.88 296.011 133.88 296.396 cv
133.88 297.551 li
133.88 298.357 133.897 298.867 133.934 299.083 cv
133.97 299.298 134.041 299.505 134.147 299.704 cv
133.236 299.704 li
133.149 299.521 133.093 299.306 133.068 299.06 cv
cp
132.999 297.13 mo
132.682 297.257 132.207 297.367 131.573 297.457 cv
131.214 297.507 130.96 297.566 130.811 297.629 cv
130.662 297.694 130.547 297.788 130.467 297.911 cv
130.386 298.035 130.346 298.171 130.346 298.322 cv
130.346 298.552 130.434 298.746 130.609 298.899 cv
130.785 299.052 131.042 299.129 131.381 299.129 cv
131.717 299.129 132.016 299.056 132.277 298.911 cv
132.539 298.765 132.731 298.566 132.854 298.312 cv
132.947 298.117 132.994 297.828 132.994 297.447 cv
132.999 297.13 li
cp
f
135.207 299.704 mo
135.207 294.566 li
135.988 294.566 li
135.988 295.353 li
136.188 294.988 136.374 294.748 136.543 294.63 cv
136.712 294.515 136.899 294.457 137.102 294.457 cv
137.396 294.457 137.695 294.548 137.998 294.732 cv
137.688 295.537 li
137.476 295.417 137.265 295.357 137.054 295.357 cv
136.865 295.357 136.695 295.415 136.545 295.529 cv
136.394 295.643 136.287 295.802 136.223 296.004 cv
136.126 296.314 136.078 296.652 136.078 297.019 cv
136.078 299.704 li
135.207 299.704 li
cp
f
138.513 293.605 mo
138.513 292.615 li
139.384 292.615 li
139.384 293.605 li
138.513 293.605 li
cp
138.513 299.704 mo
138.513 294.566 li
139.384 294.566 li
139.384 299.704 li
138.513 299.704 li
cp
f
142.602 298.927 mo
142.721 299.696 li
142.476 299.748 142.258 299.773 142.064 299.773 cv
141.75 299.773 141.505 299.722 141.332 299.623 cv
141.158 299.523 141.036 299.391 140.965 299.228 cv
140.895 299.065 140.859 298.722 140.859 298.199 cv
140.859 295.239 li
140.216 295.239 li
140.216 294.566 li
140.859 294.566 li
140.859 293.294 li
141.73 292.773 li
141.73 294.566 li
142.602 294.566 li
142.602 295.239 li
141.73 295.239 li
141.73 298.249 li
141.73 298.498 141.746 298.658 141.776 298.728 cv
141.807 298.799 141.856 298.856 141.925 298.898 cv
141.994 298.94 142.093 298.96 142.221 298.96 cv
142.317 298.96 142.444 298.95 142.602 298.927 cv
cp
f
143.156 301.678 mo
143.057 300.874 li
143.248 300.925 143.414 300.951 143.556 300.951 cv
143.75 300.951 143.905 300.919 144.021 300.854 cv
144.137 300.79 144.232 300.699 144.307 300.583 cv
144.362 300.496 144.451 300.279 144.573 299.933 cv
144.59 299.885 144.615 299.814 144.651 299.72 cv
142.701 294.566 li
143.631 294.566 li
144.704 297.532 li
144.844 297.908 144.968 298.303 145.078 298.718 cv
145.179 298.328 145.298 297.942 145.438 297.562 cv
146.532 294.566 li
147.401 294.566 li
145.46 299.792 li
145.25 300.355 145.086 300.742 144.97 300.955 cv
144.814 301.24 144.637 301.449 144.437 301.583 cv
144.236 301.716 143.997 301.783 143.719 301.783 cv
143.551 301.783 143.363 301.748 143.156 301.678 cv
cp
f
147.552 299.704 mo
147.552 298.714 li
148.542 298.714 li
148.542 299.704 li
148.542 300.069 148.477 300.364 148.348 300.588 cv
148.218 300.813 148.012 300.987 147.729 301.109 cv
147.492 300.734 li
147.676 300.653 147.812 300.535 147.898 300.378 cv
147.986 300.222 148.034 299.998 148.044 299.704 cv
147.552 299.704 li
cp
f
156.185 297.823 mo
157.036 297.941 li
156.942 298.527 156.703 298.985 156.319 299.316 cv
155.935 299.647 155.462 299.812 154.902 299.812 cv
154.201 299.812 153.637 299.583 153.21 299.125 cv
152.784 298.667 152.571 298.009 152.571 297.154 cv
152.571 296.601 152.663 296.117 152.847 295.702 cv
153.03 295.287 153.31 294.976 153.685 294.768 cv
154.06 294.56 154.468 294.457 154.909 294.457 cv
155.466 294.457 155.922 294.597 156.275 294.879 cv
156.63 295.162 156.856 295.562 156.957 296.08 cv
156.115 296.208 li
156.034 295.865 155.892 295.605 155.687 295.431 cv
155.481 295.256 155.234 295.169 154.943 295.169 cv
154.505 295.169 154.147 295.326 153.873 295.64 cv
153.6 295.955 153.462 296.451 153.462 297.13 cv
153.462 297.819 153.594 298.32 153.858 298.631 cv
154.123 298.944 154.468 299.099 154.894 299.099 cv
155.235 299.099 155.521 298.996 155.749 298.787 cv
155.979 298.578 156.123 298.256 156.185 297.823 cv
cp
f
157.451 297.134 mo
157.451 296.185 157.716 295.483 158.245 295.026 cv
158.687 294.646 159.225 294.457 159.859 294.457 cv
160.565 294.457 161.143 294.687 161.591 295.149 cv
162.039 295.611 162.263 296.249 162.263 297.062 cv
162.263 297.722 162.164 298.24 161.966 298.619 cv
161.768 298.996 161.479 299.291 161.1 299.5 cv
160.722 299.708 160.308 299.812 159.859 299.812 cv
159.141 299.812 158.56 299.583 158.116 299.123 cv
157.673 298.663 157.451 298 157.451 297.134 cv
cp
158.343 297.137 mo
158.343 297.792 158.486 298.285 158.774 298.611 cv
159.062 298.937 159.424 299.099 159.859 299.099 cv
160.293 299.099 160.653 298.936 160.94 298.608 cv
161.229 298.281 161.372 297.781 161.372 297.108 cv
161.372 296.474 161.228 295.996 160.938 295.669 cv
160.649 295.342 160.289 295.179 159.859 295.179 cv
159.424 295.179 159.062 295.341 158.774 295.667 cv
158.486 295.992 158.343 296.482 158.343 297.137 cv
cp
f
163.272 299.704 mo
163.272 294.566 li
164.055 294.566 li
164.055 295.353 li
164.255 294.988 164.439 294.748 164.609 294.63 cv
164.779 294.515 164.965 294.457 165.169 294.457 cv
165.463 294.457 165.761 294.548 166.064 294.732 cv
165.754 295.537 li
165.543 295.417 165.331 295.357 165.12 295.357 cv
164.932 295.357 164.762 295.415 164.611 295.529 cv
164.461 295.643 164.354 295.802 164.289 296.004 cv
164.192 296.314 164.145 296.652 164.145 297.019 cv
164.145 299.704 li
163.272 299.704 li
cp
f
166.569 299.704 mo
166.569 294.566 li
167.352 294.566 li
167.352 295.353 li
167.552 294.988 167.736 294.748 167.906 294.63 cv
168.075 294.515 168.262 294.457 168.466 294.457 cv
168.759 294.457 169.058 294.548 169.361 294.732 cv
169.051 295.537 li
168.84 295.417 168.628 295.357 168.417 295.357 cv
168.228 295.357 168.059 295.415 167.908 295.529 cv
167.758 295.643 167.65 295.802 167.586 296.004 cv
167.489 296.314 167.44 296.652 167.44 297.019 cv
167.44 299.704 li
166.569 299.704 li
cp
f
173.381 298.041 mo
174.282 298.16 li
174.141 298.683 173.879 299.089 173.496 299.378 cv
173.113 299.667 172.625 299.812 172.029 299.812 cv
171.28 299.812 170.687 299.582 170.247 299.121 cv
169.809 298.659 169.589 298.011 169.589 297.178 cv
169.589 296.316 169.811 295.647 170.255 295.171 cv
170.698 294.695 171.274 294.457 171.981 294.457 cv
172.667 294.457 173.226 294.69 173.66 295.156 cv
174.094 295.623 174.312 296.279 174.312 297.125 cv
174.312 297.177 174.31 297.254 174.307 297.357 cv
170.48 297.357 li
170.512 297.92 170.672 298.351 170.958 298.651 cv
171.244 298.951 171.602 299.099 172.029 299.099 cv
172.348 299.099 172.62 299.015 172.846 298.847 cv
173.07 298.679 173.249 298.41 173.381 298.041 cv
cp
170.529 296.644 mo
173.391 296.644 li
173.353 296.212 173.243 295.888 173.063 295.672 cv
172.786 295.337 172.428 295.169 171.986 295.169 cv
171.588 295.169 171.252 295.303 170.98 295.571 cv
170.709 295.838 170.559 296.197 170.529 296.644 cv
cp
f
178.736 297.823 mo
179.588 297.941 li
179.495 298.527 179.256 298.985 178.871 299.316 cv
178.486 299.647 178.015 299.812 177.455 299.812 cv
176.753 299.812 176.189 299.583 175.763 299.125 cv
175.336 298.667 175.123 298.009 175.123 297.154 cv
175.123 296.601 175.215 296.117 175.398 295.702 cv
175.582 295.287 175.861 294.976 176.236 294.768 cv
176.611 294.56 177.02 294.457 177.461 294.457 cv
178.018 294.457 178.474 294.597 178.828 294.879 cv
179.182 295.162 179.409 295.562 179.509 296.08 cv
178.667 296.208 li
178.587 295.865 178.443 295.605 178.239 295.431 cv
178.034 295.256 177.786 295.169 177.496 295.169 cv
177.057 295.169 176.7 295.326 176.426 295.64 cv
176.151 295.955 176.014 296.451 176.014 297.13 cv
176.014 297.819 176.146 298.32 176.41 298.631 cv
176.675 298.944 177.02 299.099 177.445 299.099 cv
177.787 299.099 178.072 298.996 178.302 298.787 cv
178.53 298.578 178.676 298.256 178.736 297.823 cv
cp
f
182.222 298.927 mo
182.34 299.696 li
182.096 299.748 181.877 299.773 181.685 299.773 cv
181.369 299.773 181.125 299.722 180.951 299.623 cv
180.778 299.523 180.656 299.391 180.585 299.228 cv
180.515 299.065 180.479 298.722 180.479 298.199 cv
180.479 295.239 li
179.836 295.239 li
179.836 294.566 li
180.479 294.566 li
180.479 293.294 li
181.351 292.773 li
181.351 294.566 li
182.222 294.566 li
182.222 295.239 li
181.351 295.239 li
181.351 298.249 li
181.351 298.498 181.365 298.658 181.396 298.728 cv
181.427 298.799 181.477 298.856 181.545 298.898 cv
181.614 298.94 181.713 298.96 181.841 298.96 cv
181.938 298.96 182.064 298.95 182.222 298.927 cv
cp
f
183.083 299.704 mo
183.083 294.566 li
183.865 294.566 li
183.865 295.295 li
184.241 294.736 184.786 294.457 185.497 294.457 cv
185.807 294.457 186.091 294.512 186.35 294.624 cv
186.609 294.734 186.803 294.88 186.932 295.06 cv
187.061 295.241 187.15 295.455 187.202 295.703 cv
187.234 295.865 187.251 296.146 187.251 296.548 cv
187.251 299.704 li
186.38 299.704 li
186.38 296.582 li
186.38 296.227 186.346 295.962 186.278 295.787 cv
186.211 295.611 186.091 295.47 185.919 295.367 cv
185.747 295.261 185.545 295.208 185.313 295.208 cv
184.944 295.208 184.625 295.327 184.356 295.562 cv
184.088 295.796 183.954 296.244 183.954 296.9 cv
183.954 299.704 li
183.083 299.704 li
cp
f
192.092 298.041 mo
192.993 298.16 li
192.852 298.683 192.59 299.089 192.207 299.378 cv
191.824 299.667 191.336 299.812 190.74 299.812 cv
189.991 299.812 189.397 299.582 188.958 299.121 cv
188.52 298.659 188.3 298.011 188.3 297.178 cv
188.3 296.316 188.521 295.647 188.966 295.171 cv
189.409 294.695 189.985 294.457 190.692 294.457 cv
191.378 294.457 191.938 294.69 192.371 295.156 cv
192.806 295.623 193.022 296.279 193.022 297.125 cv
193.022 297.177 193.021 297.254 193.018 297.357 cv
189.191 297.357 li
189.224 297.92 189.383 298.351 189.669 298.651 cv
189.955 298.951 190.313 299.099 190.74 299.099 cv
191.059 299.099 191.331 299.015 191.557 298.847 cv
191.781 298.679 191.96 298.41 192.092 298.041 cv
cp
189.24 296.644 mo
192.102 296.644 li
192.063 296.212 191.954 295.888 191.773 295.672 cv
191.497 295.337 191.139 295.169 190.697 295.169 cv
190.299 295.169 189.964 295.303 189.691 295.571 cv
189.42 295.838 189.27 296.197 189.24 296.644 cv
cp
f
193.745 298.169 mo
194.606 298.031 li
194.654 298.375 194.79 298.64 195.011 298.824 cv
195.232 299.007 195.541 299.099 195.938 299.099 cv
196.339 299.099 196.637 299.019 196.83 298.856 cv
197.024 298.693 197.121 298.502 197.121 298.283 cv
197.121 298.087 197.034 297.932 196.86 297.82 cv
196.738 297.742 196.441 297.644 195.97 297.525 cv
195.333 297.364 194.892 297.225 194.645 297.107 cv
194.398 296.99 194.212 296.828 194.084 296.621 cv
193.957 296.413 193.894 296.183 193.894 295.933 cv
193.894 295.705 193.945 295.494 194.051 295.298 cv
194.155 295.104 194.298 294.943 194.478 294.814 cv
194.613 294.714 194.797 294.629 195.03 294.56 cv
195.264 294.492 195.514 294.457 195.781 294.457 cv
196.184 294.457 196.537 294.515 196.841 294.631 cv
197.146 294.748 197.37 294.906 197.515 295.104 cv
197.659 295.302 197.759 295.569 197.813 295.902 cv
196.963 296.021 li
196.924 295.753 196.813 295.544 196.628 295.394 cv
196.442 295.245 196.182 295.169 195.844 295.169 cv
195.445 295.169 195.161 295.236 194.99 295.368 cv
194.82 295.5 194.735 295.654 194.735 295.832 cv
194.735 295.944 194.771 296.045 194.841 296.136 cv
194.912 296.229 195.022 296.306 195.174 296.368 cv
195.261 296.4 195.516 296.474 195.94 296.589 cv
196.555 296.753 196.983 296.888 197.228 296.993 cv
197.473 297.097 197.664 297.25 197.803 297.449 cv
197.942 297.648 198.012 297.896 198.012 298.191 cv
198.012 298.481 197.928 298.753 197.758 299.009 cv
197.589 299.265 197.345 299.462 197.025 299.603 cv
196.706 299.743 196.345 299.812 195.941 299.812 cv
195.273 299.812 194.765 299.674 194.415 299.398 cv
194.065 299.122 193.842 298.712 193.745 298.169 cv
cp
f
198.695 298.169 mo
199.557 298.031 li
199.604 298.375 199.739 298.64 199.961 298.824 cv
200.182 299.007 200.491 299.099 200.889 299.099 cv
201.289 299.099 201.586 299.019 201.78 298.856 cv
201.974 298.693 202.071 298.502 202.071 298.283 cv
202.071 298.087 201.984 297.932 201.811 297.82 cv
201.688 297.742 201.392 297.644 200.919 297.525 cv
200.283 297.364 199.842 297.225 199.595 297.107 cv
199.349 296.99 199.162 296.828 199.034 296.621 cv
198.907 296.413 198.844 296.183 198.844 295.933 cv
198.844 295.705 198.896 295.494 199 295.298 cv
199.105 295.104 199.247 294.943 199.428 294.814 cv
199.563 294.714 199.747 294.629 199.98 294.56 cv
200.214 294.492 200.464 294.457 200.731 294.457 cv
201.134 294.457 201.487 294.515 201.791 294.631 cv
202.095 294.748 202.319 294.906 202.465 295.104 cv
202.609 295.302 202.709 295.569 202.764 295.902 cv
201.912 296.021 li
201.874 295.753 201.763 295.544 201.577 295.394 cv
201.393 295.245 201.132 295.169 200.794 295.169 cv
200.396 295.169 200.111 295.236 199.94 295.368 cv
199.771 295.5 199.685 295.654 199.685 295.832 cv
199.685 295.944 199.721 296.045 199.791 296.136 cv
199.861 296.229 199.973 296.306 200.124 296.368 cv
200.211 296.4 200.466 296.474 200.891 296.589 cv
201.504 296.753 201.934 296.888 202.178 296.993 cv
202.422 297.097 202.614 297.25 202.753 297.449 cv
202.893 297.648 202.962 297.896 202.962 298.191 cv
202.962 298.481 202.877 298.753 202.708 299.009 cv
202.539 299.265 202.294 299.462 201.975 299.603 cv
201.656 299.743 201.295 299.812 200.892 299.812 cv
200.224 299.812 199.715 299.674 199.365 299.398 cv
199.015 299.122 198.792 298.712 198.695 298.169 cv
cp
f
204.219 299.704 mo
204.219 298.714 li
205.209 298.714 li
205.209 299.704 li
205.209 300.069 205.145 300.364 205.015 300.588 cv
204.885 300.813 204.68 300.987 204.397 301.109 cv
204.16 300.734 li
204.344 300.653 204.479 300.535 204.566 300.378 cv
204.653 300.222 204.702 299.998 204.712 299.704 cv
204.219 299.704 li
cp
f
130.385 312.564 mo
130.061 312.839 129.75 313.033 129.451 313.146 cv
129.153 313.259 128.832 313.316 128.49 313.316 cv
127.925 313.316 127.491 313.179 127.187 312.904 cv
126.884 312.628 126.732 312.277 126.732 311.851 cv
126.732 311.599 126.789 311.371 126.904 311.164 cv
127.019 310.957 127.168 310.789 127.354 310.664 cv
127.54 310.539 127.749 310.443 127.981 310.38 cv
128.152 310.333 128.411 310.291 128.756 310.25 cv
129.46 310.166 129.979 310.066 130.311 309.951 cv
130.314 309.832 130.316 309.755 130.316 309.724 cv
130.316 309.371 130.233 309.121 130.068 308.976 cv
129.846 308.781 129.514 308.683 129.075 308.683 cv
128.664 308.683 128.361 308.755 128.166 308.898 cv
127.97 309.042 127.826 309.298 127.732 309.664 cv
126.88 309.544 li
126.958 309.179 127.085 308.884 127.264 308.66 cv
127.441 308.435 127.698 308.263 128.035 308.142 cv
128.371 308.021 128.761 307.96 129.204 307.96 cv
129.643 307.96 130 308.011 130.275 308.115 cv
130.55 308.218 130.752 308.349 130.882 308.505 cv
131.011 308.662 131.102 308.859 131.153 309.099 cv
131.182 309.248 131.197 309.515 131.197 309.9 cv
131.197 311.054 li
131.197 311.861 131.215 312.371 131.25 312.587 cv
131.287 312.802 131.358 313.009 131.464 313.207 cv
130.553 313.207 li
130.466 313.023 130.41 312.81 130.385 312.564 cv
cp
130.316 310.632 mo
129.999 310.761 129.523 310.871 128.89 310.96 cv
128.531 311.011 128.277 311.07 128.128 311.132 cv
127.979 311.197 127.865 311.291 127.784 311.414 cv
127.703 311.539 127.663 311.675 127.663 311.826 cv
127.663 312.056 127.75 312.25 127.926 312.402 cv
128.103 312.556 128.36 312.632 128.699 312.632 cv
129.034 312.632 129.333 312.56 129.594 312.414 cv
129.856 312.269 130.048 312.07 130.17 311.816 cv
130.264 311.621 130.311 311.332 130.311 310.951 cv
130.316 310.632 li
cp
f
132.533 313.207 mo
132.533 308.07 li
133.315 308.07 li
133.315 308.798 li
133.692 308.24 134.236 307.96 134.948 307.96 cv
135.257 307.96 135.541 308.015 135.8 308.126 cv
136.06 308.238 136.253 308.384 136.382 308.564 cv
136.511 308.744 136.602 308.958 136.653 309.207 cv
136.685 309.369 136.701 309.65 136.701 310.052 cv
136.701 313.207 li
135.83 313.207 li
135.83 310.085 li
135.83 309.73 135.796 309.466 135.729 309.291 cv
135.661 309.115 135.542 308.974 135.37 308.871 cv
135.197 308.765 134.996 308.712 134.765 308.712 cv
134.395 308.712 134.076 308.83 133.807 309.066 cv
133.539 309.3 133.404 309.748 133.404 310.404 cv
133.404 313.207 li
132.533 313.207 li
cp
f
141.354 313.207 mo
141.354 312.556 li
141.029 313.062 140.551 313.316 139.919 313.316 cv
139.51 313.316 139.134 313.203 138.791 312.978 cv
138.448 312.753 138.182 312.439 137.994 312.035 cv
137.805 311.632 137.711 311.167 137.711 310.642 cv
137.711 310.132 137.796 309.667 137.967 309.251 cv
138.138 308.835 138.394 308.515 138.735 308.292 cv
139.076 308.072 139.458 307.96 139.879 307.96 cv
140.189 307.96 140.464 308.025 140.706 308.156 cv
140.947 308.289 141.144 308.458 141.295 308.667 cv
141.295 306.119 li
142.166 306.119 li
142.166 313.207 li
141.354 313.207 li
cp
138.602 310.646 mo
138.602 311.302 138.741 311.792 139.019 312.117 cv
139.297 312.441 139.625 312.603 140.002 312.603 cv
140.384 312.603 140.708 312.449 140.974 312.138 cv
141.241 311.828 141.374 311.355 141.374 310.718 cv
141.374 310.017 141.238 309.503 140.967 309.175 cv
140.695 308.847 140.361 308.683 139.964 308.683 cv
139.576 308.683 139.252 308.841 138.992 309.156 cv
138.732 309.47 138.602 309.966 138.602 310.646 cv
cp
f
149.799 311.544 mo
150.7 311.664 li
150.559 312.187 150.297 312.593 149.914 312.882 cv
149.531 313.171 149.043 313.316 148.448 313.316 cv
147.698 313.316 147.104 313.085 146.666 312.625 cv
146.227 312.162 146.007 311.515 146.007 310.681 cv
146.007 309.82 146.229 309.15 146.673 308.675 cv
147.116 308.199 147.692 307.96 148.399 307.96 cv
149.085 307.96 149.645 308.193 150.078 308.66 cv
150.513 309.126 150.729 309.783 150.729 310.628 cv
150.729 310.681 150.728 310.757 150.725 310.861 cv
146.898 310.861 li
146.931 311.423 147.09 311.855 147.376 312.154 cv
147.662 312.455 148.02 312.603 148.447 312.603 cv
148.767 312.603 149.038 312.519 149.264 312.351 cv
149.488 312.183 149.667 311.914 149.799 311.544 cv
cp
146.947 310.148 mo
149.809 310.148 li
149.771 309.716 149.661 309.392 149.48 309.175 cv
149.204 308.841 148.846 308.673 148.405 308.673 cv
148.006 308.673 147.671 308.806 147.398 309.074 cv
147.127 309.341 146.977 309.701 146.947 310.148 cv
cp
f
158.125 306.376 mo
157.867 306.208 157.362 306.07 156.927 306.07 cv
155.58 306.07 154.838 306.89 154.838 308.148 cv
154.838 308.416 li
152.818 308.416 li
152.818 308.238 li
152.818 307.822 152.897 307.386 153.135 307.128 cv
153.284 306.98 153.481 306.88 153.759 306.88 cv
153.977 306.88 154.204 306.96 154.353 307.05 cv
154.601 306.406 li
154.422 306.316 154.086 306.199 153.759 306.199 cv
153.225 306.199 152.809 306.376 152.531 306.664 cv
152.125 307.06 151.957 307.654 151.957 308.248 cv
151.957 308.416 li
151.294 308.416 li
151.294 309.08 li
151.957 309.08 li
151.957 313.207 li
152.818 313.207 li
152.818 309.08 li
154.838 309.08 li
154.838 313.207 li
155.699 313.207 li
155.699 309.08 li
157.62 309.08 li
157.62 313.207 li
158.491 313.207 li
158.491 308.416 li
155.699 308.416 li
155.699 308.177 li
155.699 307.416 155.977 306.773 156.888 306.773 cv
157.293 306.773 157.649 306.89 157.867 307.029 cv
158.125 306.376 li
cp
f
163.224 311.326 mo
164.075 311.445 li
163.981 312.031 163.742 312.488 163.357 312.82 cv
162.974 313.15 162.501 313.316 161.941 313.316 cv
161.24 313.316 160.676 313.087 160.249 312.628 cv
159.823 312.169 159.609 311.513 159.609 310.658 cv
159.609 310.105 159.701 309.621 159.885 309.205 cv
160.068 308.791 160.348 308.478 160.723 308.271 cv
161.099 308.064 161.507 307.96 161.947 307.96 cv
162.505 307.96 162.96 308.101 163.314 308.382 cv
163.669 308.666 163.896 309.066 163.995 309.583 cv
163.154 309.712 li
163.073 309.369 162.931 309.109 162.726 308.935 cv
162.521 308.759 162.273 308.673 161.982 308.673 cv
161.543 308.673 161.187 308.83 160.912 309.144 cv
160.638 309.458 160.501 309.955 160.501 310.634 cv
160.501 311.322 160.633 311.824 160.897 312.134 cv
161.162 312.447 161.507 312.603 161.933 312.603 cv
162.273 312.603 162.56 312.5 162.788 312.291 cv
163.017 312.082 163.162 311.759 163.224 311.326 cv
cp
f
164.817 307.109 mo
164.817 306.119 li
165.688 306.119 li
165.688 307.109 li
164.817 307.109 li
cp
164.817 313.207 mo
164.817 308.07 li
165.688 308.07 li
165.688 313.207 li
164.817 313.207 li
cp
f
170.52 311.544 mo
171.421 311.664 li
171.279 312.187 171.018 312.593 170.635 312.882 cv
170.252 313.171 169.764 313.316 169.169 313.316 cv
168.419 313.316 167.825 313.085 167.387 312.625 cv
166.947 312.162 166.728 311.515 166.728 310.681 cv
166.728 309.82 166.95 309.15 167.394 308.675 cv
167.837 308.199 168.413 307.96 169.12 307.96 cv
169.806 307.96 170.365 308.193 170.799 308.66 cv
171.233 309.126 171.45 309.783 171.45 310.628 cv
171.45 310.681 171.448 310.757 171.445 310.861 cv
167.619 310.861 li
167.651 311.423 167.811 311.855 168.097 312.154 cv
168.383 312.455 168.74 312.603 169.168 312.603 cv
169.487 312.603 169.759 312.519 169.984 312.351 cv
170.209 312.183 170.388 311.914 170.52 311.544 cv
cp
167.668 310.148 mo
170.529 310.148 li
170.491 309.716 170.382 309.392 170.201 309.175 cv
169.925 308.841 169.566 308.673 169.126 308.673 cv
168.727 308.673 168.392 308.806 168.119 309.074 cv
167.848 309.341 167.697 309.701 167.668 310.148 cv
cp
f
172.52 313.207 mo
172.52 308.07 li
173.302 308.07 li
173.302 308.798 li
173.679 308.24 174.223 307.96 174.935 307.96 cv
175.243 307.96 175.527 308.015 175.786 308.126 cv
176.046 308.238 176.24 308.384 176.368 308.564 cv
176.497 308.744 176.588 308.958 176.639 309.207 cv
176.671 309.369 176.688 309.65 176.688 310.052 cv
176.688 313.207 li
175.816 313.207 li
175.816 310.085 li
175.816 309.73 175.782 309.466 175.715 309.291 cv
175.647 309.115 175.527 308.974 175.355 308.871 cv
175.184 308.765 174.982 308.712 174.75 308.712 cv
174.381 308.712 174.062 308.83 173.793 309.066 cv
173.524 309.3 173.391 309.748 173.391 310.404 cv
173.391 313.207 li
172.52 313.207 li
cp
f
181.38 311.326 mo
182.231 311.445 li
182.138 312.031 181.899 312.488 181.515 312.82 cv
181.13 313.15 180.658 313.316 180.098 313.316 cv
179.396 313.316 178.832 313.087 178.406 312.628 cv
177.979 312.169 177.767 311.513 177.767 310.658 cv
177.767 310.105 177.858 309.621 178.042 309.205 cv
178.226 308.791 178.505 308.478 178.88 308.271 cv
179.255 308.064 179.663 307.96 180.104 307.96 cv
180.661 307.96 181.117 308.101 181.471 308.382 cv
181.825 308.666 182.053 309.066 182.152 309.583 cv
181.311 309.712 li
181.23 309.369 181.087 309.109 180.882 308.935 cv
180.678 308.759 180.43 308.673 180.139 308.673 cv
179.7 308.673 179.344 308.83 179.069 309.144 cv
178.795 309.458 178.657 309.955 178.657 310.634 cv
178.657 311.322 178.79 311.824 179.054 312.134 cv
179.318 312.447 179.663 312.603 180.089 312.603 cv
180.431 312.603 180.716 312.5 180.944 312.291 cv
181.174 312.082 181.318 311.759 181.38 311.326 cv
cp
f
182.935 315.181 mo
182.835 314.376 li
183.025 314.429 183.192 314.455 183.334 314.455 cv
183.528 314.455 183.683 314.421 183.799 314.357 cv
183.916 314.292 184.011 314.203 184.085 314.087 cv
184.14 314 184.229 313.783 184.352 313.437 cv
184.368 313.388 184.394 313.318 184.429 313.224 cv
182.479 308.07 li
183.409 308.07 li
184.482 311.035 li
184.622 311.412 184.746 311.806 184.856 312.222 cv
184.957 311.832 185.076 311.445 185.215 311.066 cv
186.311 308.07 li
187.18 308.07 li
185.238 313.296 li
185.027 313.859 184.864 314.246 184.748 314.458 cv
184.593 314.744 184.415 314.953 184.215 315.085 cv
184.014 315.22 183.774 315.287 183.497 315.287 cv
183.329 315.287 183.142 315.251 182.935 315.181 cv
cp
f
187.359 313.207 mo
187.359 312.216 li
188.35 312.216 li
188.35 313.207 li
187.359 313.207 li
cp
f
156.6 42.9751 mo
156.6 79.9648 li
.746 .676 .668 .898 cmyk
@
156.6 87.8848 mo
159.57 79.9648 li
153.63 79.9648 li
156.6 87.8848 li
cp
f
0 lc
0 lj
156.6 87.8848 mo
159.57 79.9648 li
153.63 79.9648 li
156.6 87.8848 li
cp
@
1 lc
1 lj
156.6 132.075 mo
156.6 169.065 li
@
156.6 176.985 mo
159.57 169.064 li
153.63 169.064 li
156.6 176.985 li
cp
f
0 lc
0 lj
156.6 176.985 mo
159.57 169.064 li
153.63 169.064 li
156.6 176.985 li
cp
@
1 lc
1 lj
156.6 237.375 mo
156.6 258.166 li
@
156.6 266.085 mo
159.57 258.165 li
153.63 258.165 li
156.6 266.085 li
cp
f
0 lc
0 lj
156.6 266.085 mo
159.57 258.165 li
153.63 258.165 li
156.6 266.085 li
cp
@
gsave
0 327.599 mo
272.7 327.599 li
272.7 0 li
0 0 li
0 327.599 li
cp
clp
1 lc
1 lj
99.8999 297.451 mo
99.8999 297.451 35.1001 257.081 35.1001 204.3 cv
35.1001 163.443 73.9321 130.021 91.4751 117.007 cv
@
97.9785 112.485 mo
89.7808 114.568 li
93.1709 119.445 li
97.9785 112.485 li
cp
f
0 lc
0 lj
97.9785 112.485 mo
89.7808 114.568 li
93.1709 119.445 li
97.9785 112.485 li
cp
@
1 lc
1 lj
213.975 207.85 mo
217.899 204.857 237.6 188.594 237.6 163.8 cv
237.6 145.67 227.066 128.59 219.87 119.037 cv
@
214.798 112.948 mo
217.585 120.935 li
222.148 117.133 li
214.798 112.948 li
cp
f
0 lc
0 lj
214.798 112.948 mo
217.585 120.935 li
222.148 117.133 li
214.798 112.948 li
cp
@
1 lc
1 lj
99.8999 297.451 mo
99.8999 297.451 67.5 270.042 67.5 244.8 cv
67.5 228.841 80.4521 218.492 89.9775 213.039 cv
@
97.1152 209.613 mo
88.6904 210.361 li
91.2607 215.716 li
97.1152 209.613 li
cp
f
0 lc
0 lj
97.1157 209.613 mo
88.6899 210.361 li
91.2603 215.716 li
97.1157 209.613 li
cp
@
1 lc
1 lj
99.8999 297.451 mo
99.8999 297.451 2.7002 249.921 2.7002 171.9 cv
2.7002 107.669 68.5757 47.6362 91.8633 28.4204 cv
@
98.0664 23.5039 mo
90.0146 26.0947 li
93.7041 30.7505 li
98.0664 23.5039 li
cp
f
0 lc
0 lj
98.0664 23.5039 mo
90.0146 26.0947 li
93.7041 30.7505 li
98.0664 23.5039 li
cp
@
1 lc
1 lj
213.3 208.35 mo
213.3 208.35 270 176.081 270 123.3 cv
270 82.54 236.185 44.3501 220.781 29.0703 cv
@
215.007 23.6509 mo
218.75 31.2363 li
222.815 26.9033 li
215.007 23.6509 li
cp
f
0 lc
0 lj
215.007 23.6509 mo
218.75 31.2363 li
222.815 26.9033 li
215.007 23.6509 li
cp
@
1 lc
1 lj
184.95 90.8999 mo
184.95 90.8999 197.1 80.3682 197.1 66.6001 cv
197.1 60.146 194.43 54.4033 191.594 50.123 cv
@
186.465 44.084 mo
189.328 52.0435 li
193.855 48.1978 li
186.465 44.084 li
cp
f
0 lc
0 lj
186.465 44.084 mo
189.328 52.0435 li
193.855 48.1978 li
186.465 44.084 li
cp
@
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (006x013.eps)%%CreationDate: 27/05/15 9:36 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6pNe;Ldl=ir^cd3bCuYMdK/:n8*9V-J_m+WK!<\qfSaVWQp/S)fDKXFa1h",UlomN&*"6Si6KK\rUia2pqJ"MERW!o2Iohf=%+X\"'8ntAte86^u:@ES#f":oB=]:W&W0iiL;^So[X<u+GH,[uGWhGOK9!-^;YBmO!dV6DG]A6qsdHYgTP/Y2:c/`=+NBF0eDsE<O%lT`KXU\ahT8EY3iVohN)?>4PrWkG2ZB-esjQ)DLF8#(8"oCZ#MX<^g#L19h42L3[rD38Gh3u79C?Q25;q?^lC?JGE&O1XnsI%oNE%lFe7,#T8Im#$F($fbXla9%j79GGk,CO)D."m<u@1%iNr0Vq(dHG!=%6')CFHQ)&+Eq!>ZmeS\?5FUB?nd^(tP.fFJ(Z^PEf[$G0_%#I9KA/Z<+KM7K:[s7K7hcUr5U?EMa>#bcXDGP:PkABM3T8J6L3PLH-n]lVU!k`O8l:h1f,%U6>eK667g?YNKsfF1:QmO)$pYBJdf%4bE<,is4_\P-fHE"9f%\^Zunn*cuAVXuF[2QZSJ8L1Vba>mL/XP*L]MMLg:Mb,XTG.(c,(0!k[snA\1SRM1:Sj3G^"7ruXA/h9!B%E4b^=F&?U#8IIcHpp6:UcfY7HTOc?]?G4Gb:2$YPkdD^-fu#W4i;B.-=gRrj!%*p"bDMPf/gq9?BU5[3.P6rCJs--\$\.o$[NtF9%WktZB^o)%eB<fNN<>GM5.Qg^2GcIe=Zr2IanL_Y/>)!'m$j15^#1PDe8qj`ggJGr!ToNsl\\MRNA_U#h^;22H.Me^YYm>7`Mt!NE%KK>A*4KVQk"5^1[i-D/Nn)0"A]Jpu!&YHq0r4,E*$pL@#bR$J,(<hW]'VE4#i"PCkN8PB3boqZ,_OTNtI_h!$'3[^^@EU>Lpk3q1%?RUUg6(\EWllTuY]\jIg<%:_anH1"+(aB_,9(7[UillE73-H8\p'r>138ugb5H"bWK26.e0o30UB8A;;$ajAk*5`$sHl(oMTC<5#%L\QX#*''8!-e*bD_'`\(W<D1;rBlX9#%6M^IQ5VlHjFknKlH'k_3s?I@H9C#lk`mgpqdsI5H"[jj-0kVK=>jOp_;iqT25p[)s2o0%_0=iOlG2a!Bhm?OG7\fI"&_(U@88>Cg0iu4.7ai:0/u]=mPm7\3qeJNK9:56n@@N1Tbd);>K?L.3W=dY8'XM;7[t]>Y_<G_&*_^-%G'k["k1o6B(5J)HqafP5mTo[A[p9p3SF0jS6eTE\N/0h6hKGU/a3)HGqo*aK9j*eGJ++8NU<NU8'R\p>`W&2I_11l[r%F2`FY%P4%id[h^^YQ["T4Qu"bMmqSm([ohT=BC@^HqsN]79@c7(Q@7')+'Y="`NOpFlLn3WGd8#Md-CiY?t7?hfu3:XP&g?7@<+JpC!jbS'_a%`;?#pa/oZ?Q',=R<8^iS,\_OubfiuAK)\@:99c6U"C&l0TJr]DWAl1.PXp(eA#1GLRY#HU!G=!u-WpR+FG0,l>3<TAdgG^OI7%k!%"7)'f[a:Yq&p[elYUDM.UCcCGiD1"C0!ll[BP]YK>p[8/Zr[^O_)q/$Xrok%kUc:0=(tA:na1%o9ZKp._12BpVl[bojF>p8DuiS<%Jmp3AJ#a8NoPLLeP!o="B#TAlOqs^f<O(J1g-UYHdf@*92h2g#:RTM8N,@bc[%Wko%>.NEKok5p#]HabW0\Cq=?ZKj)$=_KB5Q$V%i7i-4(Ku3@c9F3:MK_]DOHq_j2tR?]E?LT\\A`W%15h<q<%8=J\dMqo)rG3YOtITA%7]"OR)=E4c:@efpr:^s#aM\O6;rs]+odYL%SUX+J/XQIMARsj]5K_MKd@#&>hT54+nj.a7TGus(+84nSS2]@3.8-g_:'<aG3[LU8LPB7^2:M",oZcTRe0Z$-DaJ<hL(*I#XMpJ?%=_nu4_S0U7RCUUUXsd&W-2nA=!GokV($\Z<7)'Br2-^V62(<\<5$<f4-jO/:FLEsb9emMtL,r3rems1ZI#Kh-S(9F72H`b>[j)][%nN,)-lf$U(lAW3f\ONj:USRQ>kF7HLe!d_t-I,ZCOagmLq1h;P(*Ufa>^!&?2B>m#[E5epP1-2jD;1m&;J&oKD!%.%KDMZTbtH@t%W_9S)3udmZiaAIuj;ap,g/9!,_:qeMd:qGfai".Qlp6KpI6osMrs"*7rT;Hp+t]Q*,S\5;B/@82e4(TdEQ7?3?&--CHo7$M?/.HE%F5PAMD2TVLR[GRl?,"TgQ=ah@O6cR!:a&^`f)Z9bGu(&DZn1\gj%u62=/&Q.*##HJU5#DR`YSQIrmd*67"14'*TS[9jFZ#7eaFec%2I\bp2]iL:Gfj.+*?-G)o+q@dZHn(UZ[+$Y.3B>sSpkgsmcW#^g&Qp`!Rf3_Z(3hQ<oA)F\Ua:b+;KfnVHhg8:m^6^YZu2o%]:('%$5\Vl^OTlWN8EBQ]3Im2[RIaF,^9LiFYsidW?MdrD)XK_8%V&]`T#4JDaqpMBG\6X%d^'MKs_NX@'a"chP@F\`kuU-DX$_!BP6fi%2OXu&:.J(6jHc4LAX5mU>]P\]6OlPsKBk1JD2ojD#@/A4aE0GgBoU8SJ[4O=SQ7&?mE&N3fttHXX?gd-(?:YAb't"L!4>FQ6cA's%c8Dc$m/CSGB/#`WnWY7e(u2]GF?+]';3d.$V"1&1Der0dhn41%(k?80Sa+dJm<LlSZkr<De0uXO#83>1Bc8Vu3aC[uX<eIiSF7</%3=]?91Mbf'GY>2GF0.a8p-uMJURj7+Ehrp!A4[TET]oR79In4GC*iYU'jMb'l56Z5fSg6qL26=Q*Ps[e3th8:J@E)NkL_kVSou\C%[r8Vl:i?]0W9EkPoOn:P0;Hb^>Chf.27Pd3fFdKqAdao$U:Rc>jUuP[Wafs-nkjRPU6PE<@;^A#<iR[Z=j=T=->or[%1I/*]%@OG%XR/95cc!(6G_CZP*fbY=Z!DIJMp%f1A>[f`H\]o$jF$%X0=?\bg12$LUNGVG#4R/m_XQbma-Nn>=nGuFBA?D(I2d$'rXORJiQTHP%U+;6UC30C:g6:(;SXu@^8nDp*+KLoqlb;P,P`j)(AtDR8/Q@`Pf,)BgXq"quDI>R,4[l6]%G0n(qUW'd?#(@W0CQbSGOSck9lB>Q%8X($<j]4HXm]bmgQ)QLu<;gee2K+f499(mq7ZJn3RZq7iqG$JJ4^K\GXuVP)mi%G.*K80"e$u^Dqf<YDC)n+K/-[?2\2S]jbY"])%KG3Z*\=LDl9Gsr?O6h(,A=[^"IHpB.hP"4^Y?Y_N^;$_"'pEDrMG:KFUH>"3?0^F\KM-Vl-SKdY/=soK+0IbH:8i`C<Fh"G'"=)f%[*.MUfCV`tPTAL7cXhVg;n9\cVPB8nA6f#,,j"UC#:1FBFF5e?$a?=Fc"EMlHEOaicUu1)>UtNSRp59*7rRDR`UA=o2eM>Y'o=d"%LjA.5MKn[8J5WW;QXIIdgF`3HKa./ND7Vo(:uhj5%i>b7JGLP8NsL=<>/HTFg+/qhMLGWP>.8dQQ@!4k^)/rm["&]RrJg<5SbZ1+%6G?DZgmOGLj<d>>O@rhml<;NXNc=*FjidnmK1]Yqn)TU1_$Y/GNCO%$a23?b<BBS(JV;92!3\>sm&#Z`lg,LI\%(sE:/ai=(I`]-%NAGS0,.6o[oZ-TkpS?6p[V3c<NjjRCE-/Z=mYu(q>)MW6Y!'=#F)=-R)7/NhmAl1H.)Q5]qE[_olK>F!7MCe&.+fY;I)h4*EICOJ%(4t"EhMllmRbOmr"DqCcq\Id7TFUkbqSEuS6\K_$h7a%e?0$I+#QCaEKl5+naqe'E)PSKIN@jAV,*s0"c1$i/WT1e*_E<*YAN7,[%C[IhnA)<a)3i@'goV"+^)KY:1/j1`4^;6b>"ga5Z33+`N(WMIO)\fgmqWEiMMc):>2RT"/=;en?k0ek/H%2&>oH1OtnkRD=^cuT"%1Q+X7Bc3Z]4?a4N.Z]<c>T_Il;1p0t#B/)SRL!287qf0c[%iK-_r@Y5M_$b2`j.#e;h(%\&ZJhu\]/ErCG&;9PrY(BX(=$:8T"/.%V_ubTW0s=qDf$:#9VQ%?5\i?BME>9kj@k_;R.N%G/C'8cK%Rc`3g2.'SYLms0k7>IQN]LpY0Y%/k\1!jhPP^fRK)M:6'QA>Z1pH@%s6!T6lJiK)43(re`u&(K`)[oR8u0Dm<?.nJ%5C8_SCEd#3cOC\Ud2,Z;OM0V[;Z9M.@^$jFJ?>YB8e[BQ,RI'58,V(Pc:A]FsB.d%N6J%c>Dc?8C-A@llM&pN:6No:<SWBbLD]:\XtRGN8Vf%I<E,W;Y_]Z<5e1Q2>3J8INlQ9U*#mMiJu)EYX`E#OTRE.eSCgNg)@>,`%0"7Lebe;fE&/k,n>V+I!g5J?MfC'Mp:01A&78>QtXMrc^Q@LP&k7fZ7Y191E_Ob#5"frXIH^1`kX%n>XK$d]'U#A#LL?b]3]LW'7%:AJd$e()\OHY',<10]*%OJ6iNCN,O$DN>itQX(#@h;E`poCgjordQ,oHcmUV%JY)i3%`e<1I6E#nR^YggP#ZS\(hq^<6";@G`FXd%X9Q(dhC3prs#PK:S=KbP?b"l#*Z+Q%*4QOdjSGW(cSI(D*0J'["Hs=H^%=Z'BcO2\[EKpPoW(6<19ZU>`:`>eQZTc@KC,K0Xk<K%%rOuROdIa6`C:)jeRIct53NMn'g:1j_rdHnCOkLmOfZ9L@U/.kgPK",Y[,#Hp[!/"S>D`0'Xn>RfSp.3<Ug!?aj\Pi_QV#K/!r(I&%cUY11Xa[W5OUY;/eP88a&'<#e-iZ:'m8En,X7PGeNhtk"?hHmh/MudX<1C;V<OL9sh"415g8oI\[+oBki8ZK]Ue5%U[dBC"BXHX\%[L'b5/$t2;K89lOUDP"OHgf'CUY`(pS[S'dGMlR]\@o4Mf^dfh(-4\9pZ-V#eSpuM5&sh>`O$?Es#^':TeA6`Rg>\dSlc/G:\dcS%?e5[b*SpmDpht&`=D]lYhE'3\qo<JK#6E/AT((DeK_>)k9<7U1rGq-o-on8MH69>MqUsc^?MuCS21W^8O(O@_,*d'6BNnh\aD+;<%]iWs2g1Kfe6>N/Q%I-_W!fJgWGr]('g@tf61jXX1lJ4jG^Y/HZPQ"+U,j+QOoW.sJH4QESm\ot^:G*r6B-1Jt1)3hY8ff?*Q7DDr%^7?Tqg;JGlB5:&[lbCQ&4n@\F.Jch<QBI$F]*Bcf,K894$-99ZXsJ*:p/VjK*9igfV'@6aElU+XOsedLSIdt*`Q:as/3a?Ye4oRH%c()En:'s`D]WGU-GX.]2iRTpm>%&+MaV$d(_LcD!031abneHm9cGn!?G#4qujnNbG:AFMP$IG_prhdH,A8[_rRO:8?8Z*n8m)alp%oBiIP7YFL:%16X&e<cB0!auu?_F^Z^X`oSu3NrIlQRp`PHI\@C`^fK9XNVW=7&>:/?HlF)K?mMR4?]fJBiB3GpnuaCkp9-+KS;H/%s$JN,FOP^.Sb]n8HL9bU96^H4HdVb9D:Jp:G/0aVS-hp!+ace8ge.^ZA#"n`!BWkDV:f]!_kHo&GOhm-;+l'srho0X7[SI\\,Y,t%]mdE2d,.[CqPr8k2IYeZC$4f[;0AcLdb4qo=1)+*^497\edtg+>ot+-OVq&UbtmrbAEnQfs8?[h8VLaNBKB'"If<EVn\Zj/D!p<C%hVW2D1mdZQW^nJn&U`,UeJb-anHU1t2LrQBSW>7O&OC=/h_9ldj(%lAKYj`nkOneK;'Xl5lM+nJ:m#^(kMt[%#6S8+O8A,;YE`u?%F:ZHps(0-gSs"<9nBTs#cHeD\:Tm"=?L)AaUp;[djaS'UHk-,=TFY*&MDm[bLY[IGjBrHjEQE,f.Nid[jGF:U&?K2%W*#DdI@q3c%d8(/[U?(UI_=MHNRUK%f5<(ScqL=Y8L6)T=AnHl+,k'O#^]3nT9ETGW+0Y^::k*R2B<@fOCRlMcn?8@GO6-ZWd5dbKRJQq!;@eq1%Ih/%Y*\h(?s0C>U*Aj8cI+3K20kR4l9hA7^AM[eJn"8-WrT!9nYdpkcAlcD.IiG-WkkjQ9dcqG9n=]cmLSmfSAh<@7r_'->5Cn<@%Z6d*Hs5gh8EXHGGK,4S#U6^@<8%$fmBiR7&j=?bnK$SR.;ln>,8L=2lTOD6Y%QEDV?!$^gRdr.l^3/]\&-JDE"s=kbV)gJZ\>`SI%r`/?W3C+n;D"5=YNpC*sY`mX.ZZfSkS@;7UHU,-fT<u0On,e$<33Yl/G*5)_$%guNSdguS-XBr*Sj,fhrS]N@)@tGb5.^,Np$]e5%k7\r)Q=V=9e(063dNR%+IRJpWhuoe,PEL@4abNH=(/1-r,LbDt)FK5#\[U/ha?!6cW-hUWC_@_i"HsiJkdp.^chCbRn_k+.IQ*\p%l*[&F,aZ?Y-\QbIn%K;<?k+G8JJ?'oX-EPL">JRmk1][4hJ#=WQjn.Df!E:Y&VStQI^emsBQ2tDXEV6d.-)fjHA3VZCc'#_+Im3=%"Hn/e*K1[fR+>':n^4Ec]=gu*PD]\mUs3sNTSC_Y[IMWkY^e.KIgN0hOjW_X?!-unh.[IG\!fC1Eg?=%b/J\%;'b;3MsoSMPt%h)%3WAuh>PD&c#R#JHs74G]+fI"om82M=rekkcOSr'o<1C'r7Tm/G8"cU782E,Fa=oJQnc5XX1jI1)=?'Qb12g6$ST'%&<J6Z?QWRXM%):CaOm0mB19m?#oDOFo99</C6X':]"/-!*A.'SN-Va+0i>q)Rr39cCN[d4forlSlWeHVM+BbE:2anEMo@*k7jk"#0:YVrV<%?Pd*%".C"+!SEQ#]Lss/r(WRP&5A\(g;<_q0QF+"IWRen?0J@kmF@uhU50fg2*huE2J`!c<^&S#!TWddE`R[,27ZJeFTPTD2IaQ,fMA:W%b:qsbQI=DfW22))M-IFu061P5!cZ'm4(Hl]^4PtLaCL.(d;t#7(+Q]maHc%+4l:X&%'3-8ii=(l!m[kLM9XJuGZ<V0j!OpX\ZAHP%_"[0!3;?RG&q:HEKZd]U[7BqJ<^pJ68+oE(7F4%,,+;OIjR+LVo<m,JeSG*f>V^NQl?OG/C/oIZD,3@p>AoV+Iabu=W:pF)99te'%PI'<N-skOt!h6LZ'"$QSEd\Vpb-B9+o%7nL'GFD`]2Ph[^`]:M2!TIjHH/?ZMDZ)\VY$-`AiZB<[aP4qnbM6N[k--[qteON2!Xa;%lhBl7:Ua)l=Fd#L09X:u?GEf$NbnCFl^^^_lU&kJYJ3<8(7q]R!GgMbf_K!7n51c?3SlsEX*4&_IeW1g.4^-b/h8H0,\d"@IW)$c%ldkNc7Qkd:?fZ?Z5ZFi5WHGdT>^p6.Mscn^Y;Vk%f=saZpJp4M>rMi5=Ri<b3hT*Y$1#*[0B6nk&DQtu459+CjEq\GmFom:$Je!"%]XG[s5q7Bc+'kSj,TPH(Ij)*N<`?6'ooPW\BaWeETUHmN9iDS*kV:?b$)!:AO%)=46lZJN4[F>fX1lKf](P:\)D_(XeQuc4!kTLZ%M2SJ,"cV7P\"j/WCY%CCm^A[J8hV8/Z.K1H#%%>1h?\&\GI*Y'rk/#C2LguqUYYb%ElE692-27EJ`$a+8InT$To%1?f[W'dV\u7Q%YLSY=[m:ECT4]&plGZW@W%O#i7Vuef1$X'S*NYlHJE*K[M'?i9f+E2mKqk#9D-,VN[eUpeOKdnC.mbMl'4D!d.XL<3C\?SXZ%^_b%TR$HL]b#YVI9#$NBer$Ecp#P*]oO49H#_\+e`NmR:tTr"KAll-GgoP4l<cW\/;0T5eTUYiR.VYr"k@q;mcJlP!gPmIdsZX]7L9=$%dr)ht/OX$!8(@e;Ru_u*^%Xg6m(<d^"0(n[%7BumZrpcnHA7+Pg@)/hs7!g:=M7`?/D06<"rj,7'1@5!A+-2YEo#PhoqG,Q;UZAp%!sf`g-/*6f)K^M[/i$FcWe/J4A>qW_?J%;c<.hT)pZ&A9#a4Ru-VHCZ7M,]$H>e(=MBUOL'<dk7TGZ(D/$J).p"r/heWMS8-VGJS%eN3j9%!g[JO!Ot!6DW$7>\E!B8@iM)<u1FjCdhEJPgQ.]XsUG2-*4*P2;J`XpKk'-MG$jDL+=hfEgK`D_Y*-d)Q\7s>mp*>Wj/^t%H8/SMFb)7d_?t"9Q[hru*RDlLjFFHupLAjbK.'O!eS*I3hs7F7XZCgQ8V>,IYFG_#fk7rZhEA$Uj=W1(?4`+k&=:PGBcNRtfI?7E%ZV@2$b_89*SWqJ^*]IFG3Xl9]N4^f_:kVi3,$Q?R'j!u&YS`!S^_$VV+9oHM+)R_rR\/P,i(E9(,K_++oa%l:EVUAW9CSc5iN5Cu%i3*QNn3DALiFRM8%e3jdh)YP9'1AI>XVXOu&ZAY%@CRu]e41tHGkFP*YkI!/eR4Q<",igs=\N@>[bN1Lj@>E:dt,p+kDm9ln9aIc%4!->0PC:uMec,2tZg(oj6R"`Y#YaeqFKY<NYFAGNc%,n_@;ZMC!IpEV6+L)!%$<b)md=8)W=HiPXY+MTcfX6Lj\&@k/KQMrDSGjE%pnh_?^K+=s_(XsjIB]_hT(`SghtHd,cLg@I[Id\7fl3N4MsI:\HRbfYXJ_A*F/Ok:C2r9T/X8?-[8T`e+6:i@mqcb/BB:\PFEh(`%/PCkVPZtnjVqp[<@cj$.<P!rrE2??IoD!Su/Qf#ag_sP/CWk%hQ?f<!2>=)Wo2I@id[e\'qFc::IC-JkDg+.AS[GM7V0/hEQ94iM%;X(W1F'`"qYJ83fH*bV=;.kWQ)M&`#Y1(cr9:(^OWF]ku8hIbhcX9chPa,0?:Gk;#q=nd%1;1O09J%Ja9j9ZDEn]3Gdkaahc/gtA%8>MqkRpfh*7ROBq>2:G$`a1dkP$sSG#M5TF^BtCUF'lW0ZKd#6Zad92RWX1Mc#p/U6sBDsH%$n?gC:,?HW(QH?0tsB*\sQZ(oV(l%"OuMg`ER1O=]llNaV9u[6Dk>17`k$SOnNpus&)'C@@]T+*klt;+e9BUN77't'%AAHIb2/o_reP*g$/EIE2RJMZe`0[<]d8/cHgQT%B)ZB(oU^5`GS.NP.amH_8>jK"N4&N:%dm<.\X+f/KjR-:-IU_L8p_k4r,Hs"1fnC<\oeS<l.k-HFr1G?MpD:%Z3Qq4#UT3GGj7mq%lb,=LU=SVIlH7<Tlh"_*cA,?cgtZeo:'l!TPhf)c.p'=nSVPB)9(SJM:04%ZMqVAfYg^YSo:sZ-c.qco3SJ0kmH^'GQ*=qGA[*30%l&#57?,%I4"a/OigUNAu3_cDA\,(G`Y#+!cRO_e=7]P+h;.-;#PrEdHoLh1Sl;XcG4B-!l+HubF25\ipc,4!mVc@GXl1m*EdqpNu%=._EiI%<#Qf',m^D6g_//C43\B(JPt^W0*mpR`0rVmgHiJ[m=!V[IpDmaPI*;\NlnXkEEop#,8H)UbT>D1:%cO("TFUr.lkgXdn=%"hWUh?J52(3B@W9oPAYF%IJ8PI\o^\S_bqkB2=pEdS&M'pNPmmGIO"9^eQQGRW"mjT"Y/5db!k#H=>WI9:,PC[GXdjeFZ1@CMc5E%e+VWtBW%1mgJ^88pB0T)/7!,\Q\%:^gaGBMrd&epm.B93F4]"mm=f][k=2XT69;fhUk`ht3OmP55OGXagJS,8IG.sR1-'HZSb1TE%.\tO_$`X'o[27JpFgO8rg3QjRP>52nBr=@W\Ph\Taa@Qg^8Mnkdq!>,WXH14ASu",a#h`Pl$6\`&"P?GBptqahhh!,]_?MC\m=e"%7:EY_]?WJ)D(bZsRNdVQK:NcqjB\r3>j?Da2H%n9Q?Gm_,"e]fANn^Tce%F@lHYWFSSlUIbFVK%pSG<AoLq>HB3'oehG.]KnlK1e%d&lB$CF<J-EVeKaq;ngZB;NC)?29cYJTn+oIm-Bq<j+\)53kPm\X7e]Xgl]*:N(^(?^G1shnf$_$$s`>57tT*foWZL%V?N8C%h0p%h=Nif/GY-`]DH=<T/PT)XqU'HkN9nSb'iJP93F6&%Y+=]I@PANqB0BDkEX`Tf?gu;(7UdcpsYSihlB%=.E%20j/LXsSWL=_S_9RA%M_73l4nigjg:g\e=T-./b#9hiV_<C09b+FYkEi#6DIj#7]h6'#;W1F?9.T>rdlrRNV]X0Od's&I:>.e':HpLt_QTW1$t<S9Q&Whg%\&i`AXm2TUpCqK)3qVZPoB#<]*+H7Rg"lOZd&6"'iCc?+l(51@-&4i=T2K8V.j8is4&U?PJ^8UQIb"17nbcI4P<CL0fDJmaF8ihc%O:QY4H$3V.PFKHU:H*4$Nl@p72%r*iipoDJCm_cFU?e>+Y$'jXO)W@.h@+YC`ROIMI7$-S5NhNuKsF<cWH;<sO"2F>ll!%IR59X3%L@nV2/TA8RR8W1u:R7D,OOKqYfU,]j`V7*nfcdMd^eM@,X#W]*aQjq0ai*!Y4oSc/qO>cYXM8;%Cmuo,]<gi9embP8CWbD8OA:f"%l&0`F:=T/Y\"IVW6TZSDk`6_;WDr\AF;E@TitkOZY<d5`:2==:g=_G3WHD0"'0<8?c;)!BG,O6`Vh3c,I/r.!T)#tXSSgAKSRub+%4!ifj=+WJEei<=CS@PX`!/'b0(t.Zn6hj?Q.UC;opUtXE^-cS3i&eRVGIj*_#'EOd1"u$2>UY-%72"<'fH]Q#SCVQ64oNC):Q2F8%D=&jb-J!PAq.^D@B2!e>QEQ?<#np38IqNlDj@+XDq*)PA7&4)-I@gK07XKsdYP`L@E$8ULgL;qkI51IN]s?^JCp`A@kKMJSnL=Ui%NHSp9/]<^CJIQs=jprKML:r":,%@TVL7VE5nHf<M.&Yb=dUA&V5RhD`JNFc*[IlFYnO1Nucn"26l_Uu[EU*3J=NKg\WEt0_[`.Jp%mqqV=?_!4MZf'(+/9'gGc0l%irLuLHX8kR/jJ>"&SYdJoP#m9joP*au%4REOK6mB^,G][rUs*[J]5GR,(T=,p<uuetq_$6J5n4uQ%kZS@(9)]\p$m69pIe7+mrm$>o3Z*LucMSGEk6Hb174A/N'9@o7^gG8TT`]kbRKDfL^G1#-n>A%?YrK\9]'SYZYpjJcr];%dM>3/[%VU=deSE&^Z!\C0eC[[5g/?e9Z\>"cCI57D7Z59q6W7WNUmrh)!P4lC5mNLCh.XXQjpK2US)`!kYne-C*f^VLN5LnUAHb!#ggVI,d%@sNW(]CBm;K8j<:VJ]_3+%?>Nn?T_l$faD[)+nTtcE-:Yfia(.5%61o?7oGl:C(4ACLIV]'7(tKF(U^Hn%'3bVPU_+SXJ4M7"HLh%JR01$UenkfhHPp(S9>lEV?*Au(sBXjS2a3T`k6].d'*#@Pp!6)&]J2SXu^_('8ahFH0IY%Jr_uO(Ui&E7i4WLcBn8m&^&K-*sA-P%&A+PmWc7(/:C;u=*WL-a-&df,V7.I)Y)Vh8DU9X8-'RLr;S@::la+GP:pS`7P1k)XN_?08KhjBsIp1Z)K-8ZQFEF>a^VlSOlU<9M%5CUMS]+#>)nQN.\`>%'QWbm+EZsPC2OE=dI)_n;Jk$H,jN_e>A6A?c*/oXYG-Coe#=ST48Ho?JH@1dAJHgoXG2Wt^%`#">a_<mGi%EJQp-aO&RBF&J7a;(!d4`b=]cg5-[W@KYu.i?7jDR2Ek1M)GFRg7F90AuEspm;;WPOJp-QZ&X$_E<T-*jB1C;4VcSR$0KCek1%>Z%Z>fb*'>m[:S,[S-=Nq;*cDJ7(&/RAnUIh8H_TgTsR*aOM3bgZS-G)0)Y\CU'===Rp#kUH<'&UY9+%V&!8>P:_`+rQe2\<>KFp>:d%cSJf7d@+u8&A#UIOc&I_"o3n_W9FMs:YceOL[If9#\T?>]0PoJa9[X;"5IY<#<QB$`X-Ac_?8GCm8WW8EgI[c6hnRX6^f(Wn&H1D%&&%Uc3/^%3d/m^"(]iQeT?#h:1RoC*keSD9=:0WU`CI=E[eub'=:i-&0u$,&+9kJ%\bsh1NZZU2pW8iD8#ZGnSJ\U-(d'Kq&IV\A%/07ClP`e2Fo!5bd@t3XR/AC:[nN\JH'3ts%O:\F_)E3tdkD!O'2%/kt@QP<3HX?S41d^1.b(`W-DOd]"jPPSq%>P&aiMc7cVS)Z`%<QhCD<t5XXclj&`pf9kSO?gp7I9LcH\BibJ/.CG2^_3<Z"p/C5XNr7$Ld)tt>68o*(sij_JLAn(25Rd2E;u;=9G9IC'20B^9(0Bh%F;Vd2JDJAOFS'6O29=gD@>[n;]J/LQ;oAYnM#=RI=+hem/JC1Q6oq2Eg@'*ILS/^TP2#k_br=((;I5V))XE:q!1Od=I<YeNf`fV#%oAgG2O(?EHfJna@P*4kYZERFg-goiA=cp"Kcf5t0mttX4ff0R^mdUJ,qYJFN"?DpZUXhD=Cf9e(BW@]tL6]lr1bfapI$EpPS^-a@%Wq>:K4Di&[,Pgbf&_dWM^n=`TJrOGVN0OaZ(#nZmXnb:&o<&UY=r4GE.Nk9iC#3WD(?lUd:sNLMU+t\77CmVaG]a\`=$gChG/uPT%:f..j00gL("IL@UglW5OqjH]4B\h"R_uSU6=/$;BCjci0b@#,RqI1G$k)7$=`[3%[/mO5k\toOLl*q?XP4o:>-6U\ap:[0);;6qn%BSlNON5,'YgPK#C=t7`XlSuF?cLE+&k<[R>A78>+=?6l!;V4Gl^'g'J4FOJS..](,NkFN^(;XJe+gB2+)@n`/MhKE;UEsDd+\QLM%I".P&gT'Gs\sWn4H]@8H?=/`V97-11Gk5cf)FZ&>.iuT7N$o1f:?3/r?RoPH<G4Jm0(gWf=dd$a>iCZ!ao.2f"gWaRO%!bM1;?8m%2C)kWd@?DVY77O2Vh&%TL@Y,BY9mc:@oH]>(eS:X[,G"if/f%S,*DckiU-M+Gt5*)8<9q`Tq,k&(f-(;G%02";-Jpe1U_]BXT[lT%a57t6)r?'7Z!j7W`5krS2LOds.>G-:2?<kc6FGdpI*@"@mP^$^g!a5A:RqcULnG0]"[jEC%cV?/NuXe(YD9E*&MKj5I3"6X#E!@&%YuiP@fXW8pbQ`'4fIjQC]8",m1)Guq#"O"(TOLee0QVNi''rLHAs`B/;_]4TjIr)#V/T`;$/[f_BBP_->iD^`i:.8m???FpjEB9E%@tRj$iiLs$;i.kBZatW?!?s..bujMsYdFKb/t_-*qUecGO*hVOq:7nFZ%f(Lf#3@!pkk$rlE^ruYSlY-34r&YjgoB0jlW`o4@Ea@%Y<G;8>WH[3SV,5'$p&],^]\]AU,2!Gl,i#5ol]QATL3ERIL]Y*"s%4^:*PH'GqCS"Nd2CMkKlY1d'7E'Z#f+14*<=BK!GPMae=X<%T]9[/N130NSO)H$^5\IH(S*hsEbl@KFFFh`h%(O=?9*BC?,%j&[j0?-8Q[=da]rD=#;,dgiH[]89Cug4c_)J:'X`E?_+_aK),lf<%jJJjE&<hSiZ/iBD#Jqq6qRnDi\t8@j(_KNW&6&W&G(`b&E#RTuJqm_9p6i%tbX\R_d5=*Y_u!BIS.%OamDJMl0/;^!Fa9q]$0s8C%a_otV<>a'f%k6[G)&WVACe01&=&FSW9q(*:$r34c1cC_/bPlq?6V%*R-be)g],;l?.nF@#fH9@;&N26P^D/":=7g*MHL,1OJ=Vds%-+aVm'dPU`EN))rW634Xb=1(]6NAH\.u<,<,\$O<jj4F<Qp+7!]8PTMmU*;G;8*:_Gs%L"XUO[l#,CcY%GX4j,Dni7R9$3qrE4p'%JMW2^0]/H%.q1(l7c95\%CnsbppAbh0F<%%@RB<5G`lC#fek/gba/JKC35Gsa7hA\,7TdUpCa%s1@5BOKr:eB7I5SdE?'[F8FP#9%6eW/nXC<J4%G1bI`%HYq[PrdU?k12r?cS.6L>%q\1cEFq.+<6`j#&_C74)bShGmEdClkD(J!+\oFTN,4:(nW\@Y9\-(]Z9tp.XHA%B%afHBdY`a-E\rDEt]\])jAqWFaS;>S9#=^J0mIX#)qMDH'I:J3Jb.uIH*C&F8"I6]Ren3ZYgaq0=6R%ih<OVT7hLEM*;nJ`:OUt%ErMSk_&.K]id*^q]FQH/EJ"[.n-j?r_YhPqE"#?u%9er%YkcCo#4f;P)A'0=ItaICI-Sn[.eSO91W)"sHuP.@j8nL8dHPWlWT0L/%*0eq'm=jisU$T$iR*1.Brm.a.j+H^'G]8NXhXMK;IJ]3OF"B6f&oaC.-au.nTE9kD`#+ZAF#YWOD5`7aA;6X5+ZKqTH]8r.2^4IQ%O2u_9KgoT>BIkDQZSu>]`[bKYrL(bqACR$4lti3E7?!&HhB[7UOXB3<O>==onhp,d8d+=0,;P*8BkV!HA72h!rmiCsR#'gn^7=qr%bq>*Rk@M2k>=uCpp>qucT(aM6Z+N:L%lML3(/LZ$2_PrEa!?E5IS`SU]2L#Qf0Y]qXOL)pU_BGaajaARa.=2,G6QhFJO1N./3LN)%:+.hVYAW]J_qP!llXkriZXIN>7ISfc[<iGb1J[56kU#Ud#!iJ@fD.AjSI"P[%OFL,i5LH`oAPEgYA]YQ\BqXZM<;]A0B4CS%aKif%R:e6d5+IgLiQ6lp3I<"s+)]/Ye.M<2K!PV.SI[Y]>#$7`cE[48:Xt8`%i>*_P-OT:!q>cY^+ef!3:@1@4EkK*AK@)W2L]7$W409p%6ge]3=ND*n)g>)R/,:i&Z1^Qqb4nkeT\[@l'kIR`q_q')P`8Gm=W5n.0)E"47-'18DJ(/]>d0P<e8HDn/5i^m+Ls*e+?&SHB<]#a%Hq]@ifDn=XAAcSe&))@3e\GFe&_C[u,)Xb"Up_W-ZmcZKB8m##j*6IaXRY:<:'8LP_:!j%X>oQ6=p\i6fOoCBh>If#O%-?]MpY#r%&%2#`G9h.sfn2X30p>c*O't?>RE)!2a;9cDQO;`%YlP[fa+cc]3%?/\3qX2S7QNk*C3Aef0OQS>7dAN71/dSU-]sMuX\9o`(%T<j%Oc^"<N1Z4>XnX\M_iB9hSA03sk?iQo/:b)I\BW+<L<BU6GT@gVMSInhS5d!@/N3E(\59h31_n;!#<n1.5&)QP0Z5</$5_0p*&A<^%&UR@7Ur)flL_qi]0%qunEiX,Q(0?5P&\dJ`+Q6ZF)*Y5Vcn4gjfHem"enh"a==86Fm0WETdS(Pu.m,7Ib]C^Apfc,(`<D^I(?^(Q%Bsq=cU)mXP;+in=PlmVTFjkQcpTT!@`<agPhANd:]SD1!J6n>JEW!Q,\?%lZVJAEXMES<==?57u.<"<oF2c;tVKkP41G@RM4'VM$%j*\%4aM&FJL"njs6?(N<asc*8a'`&oad\8)Oa"7"\dQ9`c2+hgif,@4PMK8HNt95!Zd>]N^5uYo[DJ*_Xs5^g\l4kt:1OoCZJ0XJ%4MqX]eZOXLqAbo3\%QScSbhe2>?U;RSbeQ+i2UMS<^SSB%.E5GO%OSZZ_<pBY-!/,A_7mLe)/0kI;"Akc!=<*fiM.-?0hDNW)J-e%ha.4S(7&B1O3/dHFWK=Qq<2^#nAY;*SnY4*:LTgnl6@UlY,m!HNR@Po!;;%\Y/Y3R]0D+S#JI?h`tPPr<9JfE@#B!EXo($Rl87cW%[4PgrD9QMi(Roj-jA0Ald<dbaZ1DX<*TA\>9qq'\qMlUrllgY8F!%pTC?V/JJui>/Q'8jP/k@/F3q@egfAj^sFGo4!qdE)ODB/0`%R$%-WNHg:b:fET84Z:N_F>33i&[5^?B,EV,!I"u@%8"qDV-u;]7L[BT3?Ef[[d+$u+`]NRMAZthaefFaTmnq.r+rs;>e7X2;o[+[%$OV.K]/V1)9c'$e([L/(TsEq"f./5:9c#-.-_!gh<n'0R2I2F9&O=HJB%)$a"I;^Djo%b]dfnj]"\G*OZKZu=k/>3El%3s?S@-t*%A^`BOd$%,CGM>kFRk?+UcAf_8.[r$r]/47cd;6DP<RFBNdfg10+cL%hflTOT$U!*eXDGJ@>e4TABp<GFTV`>h2E!Oa0'3N0R+ZT\%VL[YR"gMa1E(Gf(aJOk+Z#R)6Jo^*pokflFF@!HZ_)LJ8P>)kC5_%)#\Cks*=Idp)Yagj'Zg!'XkCik#ZE^b#Jo^)[gabEP2I-lK%,0oBn0q1q.0$gAPk?!Ci,A-dHpr`K4flTLnnt0V\<&U:k8.c>>6q43.!=W(MrNdI;kb\AeddEcD.c]W"&VrSl^BZL*#l[-aeHK.n%PJ44Qp:Ub7n#MA9Zdr?NoBq5O'i(T3Zsh@3U/&X,DVbMM@>Dd<r]"!0`D,gf^Oe@+;g8;4#$M#@;pHQk'u#rB\01mf7)qNE7&JQ\%g6D?C^/2@$A%-l4^OQ8\S1rSLfA))'jLpBj%0!ZtLY0]F&L4KiM]KDHl^Bnj?_T0aMk-^ZG0Si^qiaO`k0A0C5k%3d_hHnJY.5L!%dmV88KqYZ[j17#:U-&D7dGSg.igpP0hB+g7Vf#h^Bs2t'Gm!&TN6J"a9V]555L)H?7`f1]l^>!kksBS8%^FWS-IRm><926^9TP_F%]-"D6A,*,^\=7AIrcSk5H8^n>h2t=&'.XA9?9SstZ0=8u7M-W/)SONVep>[9ad:n7))4En^i&WbG!hD3@dQUE[2Xu[(2$-]o_rk\%q'M:#3:%ZL%ZU;=)*=a^[_c!M\?q4J:A?09U$bLB`'omfT#?I4et2[r:!e5#cC0qX'bHf@YjVYa/)t01OO;&[B&9"(6?hjg`rr7&%8-YFmDWE:Rd-o@L0&Gf)"8K3p-BOYT5PI.q>_Uh0%&C.\kcBR`DD3>s:1>ae&%]U'Z/<UFI#OQ9&:MS1Znq-P\^8JE:'n`%jJ%TX%GB`oAG._WNbb]F[pEW5*1(9_pYfO';A])^5YbCN?]@$4#LUlB(ob,Q)'=m'3f.=f-\/U/3_f*%(1@oM(I%l.\o#>=[^)QL[\1)>%%?TRbT]PobKnqK6=r?qN=n,\OEZR8(W\/Vg@->$`S<V6!^\8ps8HQ4i>0DB<mM7**8r`]@l]R;C*/a:ZNO,"Ci9.-iPa5:r,gDSp:%-/u?hQM\UsA`)X=On7>t]"Ft)MSnVdYKSZmZ/Nj<5;P<-?XG?B]H/PZ.52+lbm8Y)2'uf\0f_00Y0;Z.%lVpX'/\g3k4Cqjma:1D%=<+IPO'?oRer4Tj>V*Y\3c5j7<"dYY-WJF??A?XC]cK@oM<7ioRt^sa-.5bl+Uu>nqtQ'%nb:^V:r9naPKRsZ$!jfUm'6=GXuF6?%9bi-&e]hX-HfR-I9dn&iR*C=;i$?a!NJ6K(p2.\QV22i/oq+MQK:9SuO":>8BK.\S/jVb\VB9?]mAuqH5365s[s(i@Y4%pH2Aa]b%f3?RZ#5P]UK"6<]pQ_1&[kUlL`Bsa>,/j8#:E&*;k,I"4-QfKQI<flXL8qo\YcSW.DLD8!6=*Q7)IDUiGsr51<2rIs@@;VboSe'a%Gn@YjDo1(RGf&E=V6,Jr\ikIgiTl_#IXVg^mS!7*llNT/6u(G4*hEnoSMOn?_Hq$.QfXU&hn3`XUo%]IDk*m)1]QYK<<p>:CF:9r%)UiEfW:V'q&,-dcl1U(pi>;M_GJC"n6TVVu4K4VF:/?;/ik>eUIePM54"ZdP.UK4%^saUm)b\$F=]j#Gl64+BCT9fP7Z5^d_Fd!]%4T_mR<j1ki8M]TNc+e&1=fr'-S](m/8N7S=k/Kso<'B8I%4]?Q2AtNjZh<P3VS3=-5kY`Br1tRG<eV'`(q?bD34U>QC/]?O^#[!f%9OC%DhU\^B/1Js30m>qoJCE2%%;>:<dUI$pMOTkh@#nn>HK%YU93q_ooFB$TMn)K=HPR3GlJ&3or/bS-kA4q4I9KK8$B>a[^b;gG%?!;&$!B3aJ`)ZV^A&0[ub%&JZRJ0>-hMndJ3$>CU<&tP<pX@CXJ?:LkmVdo7R6Z#mZ0^3?,KIiZ3\W0K5$"8nP4`=Q7[>:F+GuGh%foC%XD'B0l7eKr:.(L&@.?:`K`4s+1m]`2%1!l0lqT.40nA4%e3'S\D7G(a1"Tk]hr]'q^-P(K4.b]+(W=,>!BCP;bYnP6^UJ<fg%Hq&c:'l]8j(5Ue>SLV&7Jbe\Q1R[ToRk5K?S:g=t[]#Be@p%c_6%s7.O-'\r7RmbQ5A)=-b3<21UoQU&VZI@BoEq'#DOH>r/G`]5%J`Cc,;PCApRuKq/AD_^p=H*d4jV\83"'.%0K@k^>bFp8.T\YAiX=mj=e<q?B7Qj&PN0"2[2[@^IPs]0bp5^@V#LHt?&"Nk@Z18kf%SfB6g0Q%BY^`1qDRMb<Z]tiH#Z*OGjjo>UXdi14R0J5J?FCkA$^plCT0mr&</ASbUJ-/j0U9aj/E&@O"nmBOpHPAW"#QMT9HikgC%5h8uK9DJd_6nt*&q,"rprkk)nq<goPLG%Zr\K?+6QgtS!KcBtg56"c#s3.<e*\I)H?-3ss.E.")&RdcMd0r2XC:JWhL-$>he9h-^%&_2B3hoKFtq<mp6hRkfjlT+[PIZ[Qu++Kp2hIOodMKQ,[^pB^]Ej&jBXaWXu=,rCN&Wi29d_1)q#.o5_TC3Q%$#CLi]%(_`9Wm>u%.u%\W%<o!_oW<RPhd=Lnoc#Q%)>@IPkc?l"b678+Mr(WZDhmW9Hi;sd=,qL.T8+Nb11gS:H%^PCgr-lK72KNr%<J^[1a^,GdO(4H%c>N<5&a,3tY@"ZFMn9@Cd(Onun)G?Kk<8H<^QIsE)d;>,ho@Yc#J.%IZ9**GC5@68##!-2h!5cISq7RLnaH./hGbWSA0d.SY?rA"%4h(8Vi^HtK)0E&hoW<SY)+2=!lPFCJ%a%D59R8)8PnV>f#eni-B\j91f.Yhd#eZ4:KR<Y!>$2bsrSd5<Mf*+AI=/<goo$Q704KoZ%\@dTCe?+1!N_SG<^Z\o#''WiW0`57l+g]TDQ=VZ)l5*N^%D(/04DR(I]mathiuA#)^Z\o#L:`Lb<;,k>a#E:sIbn-'a8?*RV@7sX%?ViFnW"X;_h<PmE:t'Kf-ZH7roW<QE][ur#n<(3V#r`Z]Fg'\!V`'N^YFdHgdC5])qL*b/7'e*+iu:3#T&&Zjm[bqXY?sg[Rr,*4%4&s;7f.YG&l/U[e(EM,uhT7YO]m`93A$3!MTZ'C3f.Yipa.:-.hs2*G[emUUe9h.G+;T#Gj:M(^`Uk\$][ngfm_Q0sp$4CB4h(8J%]o76?T7be3>Q'6(k/Y'b001771!&%-H*:TIMN%V@Z0q;VNlrN7*8-):h<Plj\1li_T\0#87GmBckOsjaY9+iaE'c+YM%>):8hN@h%gkI9`bi-6kF,9)#p3Y\RMR4p^%?k_Cn%U5)+E>e!:C%UmL:+;C(1]$RfiV>I?7kl@D7P1ZElW=?61U/Y(Hpu*3_K-07F]IdC@U_*%7`o"dRTKaaWDYO-)nT6e^7!-WhR,5Ko=e9L&8OD\^Fg;aQbP:sL$sW#o6-@jrr+>`WV^F)-/Y<'AusOTo'G?*pSn/jH#mW`=maa#%XB]E4Z^m>0YcU&):-UBiCM/FBebaXj8H6DoYQ(3)b%J*0T;hG2rC$L'V6P4"Wc-0A^Rra=FD%Xg*2Tfu2Wn]%q/%ATqegU:oCG.o%VmYsY.hoBJZZG0dr9Q2(?$tF".<"+1MehV5Q;f="(So4Bf0*j&Qp'hYT'c>Kf=E1(d[bhD?Fp!Vh2.=&GeU\Z>JA7[#PJj-Hi'#m%FRNFQfpk2G]^"h)/mZ.RGd?qE^Y0eWce8k8i',8TB0!Yeh`BBt!YtqER;QrOdnsaUOY_EXYKkZoVCul62eJML*5Th"U:pM!2eo<1%jHAs$jNuE&;Hl57rG%*^RZj,]=3f.@dS.>Db"c,HK>$Y^+#:6fU)R6HnRU.7_YocgX9Cn!_akSn9"1)^28)2[poo0mD&a:+;d6fh%g>5l5>?e5^e"8#LX"F",J??Aeh71,3:SdSD7d>]7F8=(M`="Ncji("/Or80Z[oO#;*BL8!=6lNKhnQaK=tF#en%^k;h31;DP'32=%WSc'@3n/56EkQbNMt#6V5&sEEcLGiD4H1?pR$^V=dp/Pk^I7#H[`Qkg-2Ng=Z+CMA=j6Hg._//S3OD>`447SP.K*25hq?hNQfd.s%&nsPVrJ^NmmT#e_MrKAA`E26=ZM<A*X?-r5ie)FE:$>"]*c2_-+hurK5qKX8J)QZRQGa#H>0V>SV=tqO4#:(RW.Z%6B=Xa7]mh<&%Mic]-:]MI<7+Il7r2Aag.7\%TOrfr,!)Id)3UQht0QD2TOJPt@7X4Lq<)OdK0/E@%_9Zm#:XNED2pVfD6JkCI-C\Gb]@j#?+MAKN%<S$EZEL-<m(+e!>XZpEH(Z14pEM6f8>Cs>hEAID[/L;00oI4pT?VQtPbmiQHhb?T=c!EqYZc9u\8hkfM]D>c[2tu)&o6g-:["5=n%mM6io:RShC-1cH]_=;QK\g1&;jE?*+!;-96_32\@<C4XW02ctN/-(6_%">6P>qXTE"T2m?poSM9mXVmZ;'(2;G3Lr.`r>7c#2XI#%Z:t')HMP2r`p;-_9JC/)d7:#"r&fG/c4nkJ8j9;51R]-._8RaNn>:2+\^d7]]Vq;9("eTAC]TM5\'(UQF_u<`XZ:T&=Y"9;qN?$2%YCA8k(-cCob6,o'RRi^W],Zb@kUoZoS>B)m]gXIe`nbu?Bc/Y;(<^e^mV%R6YFS/IGIi.8[C1@_jnGsTBqMro[1?ktdaA_>6V,Cc%LZ?s5q5SDD=3*3ZE&<-N;^b;lo,qc3^M\9+=dS.u_gELLoU4XKr`hi$.pP:Ok51[kk!#Y;AeFpgI(!7.rVX+'KS5gAY&BV?Pa)qr%)4K>STXY.i<u-Xkpp0u&E65r]4aH'cK!Hr8j^>u#Q6K#ZI`t-+@415B0M=BfU`I$hV<EScB).)XH._`b/MB]?B1M.t.C\11Pa@9l%2B25,()7PA9q;o*[BZ3boTsuVp-,##j:S"^BlC+"O\3["6a_u2*9>f?o`[OoUIC&I^j,sX!PsSeAaFlX]`R?Z&c"+6G7s0"o4Pe_%"P`XLco*'Ae;r3$/;hi'Jj7)',D]G2[G^!*@\m_51.SfsC@O0n"WrHJP#=<WT:**^Q.47Dj)/Tl2g:]or&$>>:X;q^H$'3QC8n&I%l^_"Pdof9pV4Qk#/1t3PB)W1#A*]&GGhI?Cjnm30@kOq$?DFWCost"2ebm]UDdCYZhW3!as3-gQmu4sXg!BR1@@Bg>+nfj+ABVZa%>>+tG"RJ$9Vo=_>CkqY,rOpb8l.f70Q?K.sa)>_uq=Bb-;u6HnHV,lnDX(Z5,h:>f&jU:3G++j09'Q"ne*H)5mJ0iJpM>2&74jg3%aM_GXI+'A[3F]kM%VbH,o6YjM7BdaoLM%O0@iZ&K^h_+Q67F^#8Q*%I/0(9u4XAI@P-."[!G^?[]ff?@*&"[;jn3=rC\@]*WK]Po%mM(/S2d^"oh$(?Xn"`QA+TEg'CuaMhU"gHp_F%UbI0^'omX;?m1+H):ea9<3VcO@'[oUZEO2C)Xr3,\:abRP%S^6Cj]3cZ98uWsM%QoCk,5)A,[m3,QVA[S*,f3"E#KJntjiUG]/q1VSf`m8JDkB[XrEC.db9\hMppk2+T1Pn?h3"t1Sh3\q"F7jmj5;P`MKqlTM_VFce%C?`?Y!+PR#>ipJ*@(?BVo.7;6fclT&Ts0bb[[&!Kku?f?6%j%Ff0-bu61mqhe;VGC+-P<*XA5uAMqQ,_1RE69rQG04h9&[b4B6hg%No+>&qoBBsCr0]*2L]O>jFlPg(C1IfMmn-h<jM5G:&"+g(`19pF!ecjEX#;@+.:mCnf"4,EQ*54Th[/8Tsa[b3h4q%P;cZ7d:2-0%QNGljk@8=)%l7L#_,=2&&6`L[`1B?Zgo&*m3GV;,,C2T.?5lA:TJPa8c<P"BXc1UCMhS7.&D-=3.)48t[dpW:N[gmM7=?i(e687b%IU;Jo3,[&4>JJM=X6%XEbH]oKH(6>^<)8O`Eh2&\iV?#)X4Ynt7`CrZXVDrOVKZ'jhDUZ4ksAG:>Ujfa$erDj(dH4p7utX3dc^fu%`K!!ce(sTSa6e6Qr:6ko>.6ScAG3!Ho6]ZmTNnVEA]qQjWHWNSQ@OU0l_+S"JjMS0H.Ok<\380^&3JnK*\]j0?[TMa`WX[BK?T2?%&Nd=8KMJ_8;Du.17I9*5hLiJK](^Igc\A-aHB!`3el*bU[c&&jT$t@[Z#o^gRN&B,heV)>_o'>Q0!m",`J1[_G5>e)GhnRo9Z2C9%mQ$CNhG4tp^Aa=f39f9^@Cd'`nNHJd0IGd(i#\\$fDqH0n&C@g,gq=Q$9dHkO#,MdWF)Vj(l05ei"J*<q@WLfRr@H3_o\THP_ZM4%51U'/;+r(ZT5/5c]euNM[L\2R3BPm9oeuR948MC3W11sdnl)QibdL+oV<OElr?M.b^&W\o":3e&h,U)WNN6F+lT((cVVB(!iH)/I%?cngYh.Y@(;lp#2qIPb#_gS`k5s</.M1fThpjt5KGtF21`Xni881uogX[Y]h@+amKpLd+mV=![C:EifgD`Vm<?XdGi*#"44N!u[m%LF;U[H@fS0d%6Yr*$=>g0ioP^'RPg!h%2S)#)rd\2hK&$fP:mU2?\AdaBT<6(;sN(1)K@#]+OduH+0Eo(RIal$AA&3;N&$U>H,Sr%<_4l+eb7qa>\`O%cN?T)NaU[R'nUeQWQasP$Pl^a:lk73>2HT(gu.'86[t+r8%dF[8)&ZTRm_SNEJdU<,Qef`U>u09%Uctj<)7X)%+*f&MMP,e>lpo%s-f`-qs"[J#EiAC2`aD:Hqht1?aRQO/-ltM@0O'!HbD@D!CU>V^&&quZgo#dtp_[G=q45pmA'K1pEk\MY;jX:h%:]6ZS^.OKbK)8p\oD.0hnKW1CM5t1B4b8N,+3#%!Y])'p[5W]`.aQXl`HUpI*\H,K2@#RiF:Y#CF`hmlHNs@P<nOk.ThUKjdtR\s%q8JuHQsLF(<d@<"DlZMJNt[,<nYcoko2BtY=.VSp$^H+7qBlJkdr2%Q`C`(srkN_U<PPk+in_;qi#b9J76B<9o1pQ:LlhOeLo4nk%rUQ!nSt[7nZM@!&cW>Dk=i=7GO0lnc%,tRLs!JCSd11Lor_^U4ZpOtF@YeZOI;a2S[suQV"-5OBSA"g(B3Vm36^U0Z6V;B'I-oBh%nF"`VqbM#"mnDe(Vl>\\>X'aj\7,:r.s=?=l.Z-%X%AT9q26TV@Ra"g^Q"jQhSaKhho*jaagYZ1cJC$t_@1*\CAm;<nP1`"GPX#^%ogT>pcg%Wi^Bo&Wc>DPLRp_(D"=A6^)t*L'4O#=CYC['p#P7N[j-p0n5e)uB<kfGQl0$P?D#AE7J_'Z;,a^C$h8m.FB4:+@Th<FY%4J7&i:0R)Q4pc.^`6pbXh:8]-cV6WoVcOfR7ki:=G];]VltG7pbB9hM/)tgL:>t>1i6(fiQ^Q<L\N6R(_p3_7<6DX/`-tV2BaR/*%Fmip&?dWY[ltLZ#0&5\S<_A8P@7q>cOBtRCF!,-V(C2^`:Z95uH:8<qT[Z,G5]H1DJFp/DF*HsN_0=/R;CE)]&?&gJk3!TfWgh$M%&?KuEh,(3-P_bKR5_+LD\r?=jR=,;C3tL#D58QLE5^r7[o>FEj6R"FL58b#s+'GClfAjb&3g`;1MPF5/IL14=4iD5)TLI9sN!?4f%.5l`Y#n>@:^B&YkLR0(o06&uRdNGt7LED/QQ8BtPj@Ib8;lBfNRR/RV1dL>:7iVV'r],,@rlg?h<7+Z:+?$H\H''^H\3#k_kNP%5%6^K#T+]@E8&nYIG9<j>`'JWC_P!^e5$#pCQ-=!PZ8*B$WB+qM19e<+=9aGi$$=V8m<(Z4-=q`Mg7_jRr#4d4M'+S;?4/K8"kLR/?%[pI'#5,iR/E5m4qi2[ZX`Zf#[M';\F`ZglXTs;+LSe5[Q1lfo#Q$b3Dof"&@fLXI&Bl(_%K[Eo[(m)c8UPPV+;fef4?Yg-CpX.a2%JktqD)EBDq(0mku3sNGh?AKd%U;nBS-)ZP!N?!M/"]lp=$SJ((&iB0rW#D)8>kL>S*-9ApM\`i^]SO*\1Ld4fjlqW"m$tG-*nXV"%?@$tQT["k,nq0=UGh5MTb0ci#BZiO8p88CgNB;)t!q#OPgc'Jj4,`Igauid[43R!RJ]=/RIBh5\=\ZMkPEPM[k)4)D)>=.P5=A$3%dJBU,8B;e*-n`+B`/M0bh44@-SQUBao*<!G,E,iEY:mD^,4)ar9>Ue)kO%(VORiMc&,.oU%J]kI%o#'9"(;u,S]t)P++@W:..P5i%imZ**,"*H#/YW4<3b,<H$n`R/0YcjpGo`EY?TB#rO^C%k!F``Rp;X9Dg+;#D\i*:31>sEZ6p#X@b8T<s>f^AS17MLK:/KlUd)`pQ%jA0*3+-cJC;eKu3*4!(%!R*\?W1[[E.Vh@EC%QRt*NV>t.HnI/RJQWpXn@uEqjI7.hptOFHgP&b2!/=S.M"b)><MHJ;<:2nXpL:C%D4430mhJ`n;YjAr:[KXPo9$4IgFj'Tpa/)cOQ]b&af>U&<9Ka*9pA_o%.a"U[J9At!V#"/GZs",jEqW(JDmpL-\(bh'm&8skL/N%%@tr;o\s&LqLs%N4ZZLK7c9-!H8s_>l_KMa<H$7[h:<<CL\[]\YD<ML5[o7E-EsuH)+<NODi+>3pc8S1nGPJ%$R2.KF?^9ftRpmRI%>-p&M9)7u)Ej86tC:taE`XjJD?S(HHnruGV<1Va<L<LjF6KAYcUb#1A7W[I@V`=eTpS>Ukcoc;AItUHs4aH%")A=nWoA<fsCb=,7%(^Qg>_H`EY&\WX&1,2C3d[g+BDWaj.hiD"9IK77fa=RXCngB]T%,>33#5l87f84UDfoUk;M%/rWBM:96hMcK3jt&j=@a.Uu-8K*X%"6_qE7oU&`=>Ia2qdSD+SF^p:8@-AlrUESaJT?ud1)[C<F"F_>qcKSe8JH]B5RtgB]QaDENJ)"K7af^:1RU?'C",5bSWC7@Ao]?*%R`OT7Abi''CK3FgqK`%S]i+1hkH!J+-!-8?r)n#`f@!=bf2f#FU_eXIc__8k5R#+.G2`NCT)AX;"%p>qmE_?fe+IJ?[ret8h^spe%GLgIL,r)&.2a5hI?YJ^&iuPQ3A5eCN.qaqU<(\`8LC._6_"3nGW9gYVFh>*[>\TU-W`0Z-Mf&4C=F\FG[?($ip?h:&[Bk%AXgDuR%bAueF<[up+DU'cuq=Rf-IZ'aol5oO?*Y7^2Kpm_6;%;Z6#r=00AkH)6o:/A)*peYA_OV;"_5<;a]'ql=JN0:ps-j,j5')7[+=&%%%\W\U]3K^1/B<]>BP6t$R?>tTHa=[kQh]fAeR%X063/7_u'X#2`aNk53cYL<@"&A:6gu6p6BVtAif.`kX+Il#BF5R,^RJ.o&fagdQ%GE+!89DZ+2Bem\?EIocg<f]"_eh>e3-3huN>lD=B>?ann6QN=@`tD3:F/SObc,f4JWX/ne#itZ!N$gBb#l;_5NZV)[Hb#I'Q\4*&%q0",Ap%@mSCtQ?,_:;1YjkjekD1\JTo5kk2D1JD!aNs/lHh[,,inkeg!W+OmgucEW5GFjK$>2:[VUQtULZ8.!43`b=0-f&q(mU]t%>F+4tO+6(B>4/@,^$DcKkpn!DhP2?7b?OT!>?0hCC@8nNY:R/tpIA^`H&:S/H^C"Obf6Z.\NG":Gs4pVie^^0-S2OQScV+W!`"j:%901@L@;HaugraG+dE5OEn&qh<DkXOOle37Ag8;PTO):QS4QO?TVRpi!DOKFI'l9`m7PIer2cJZ"e6rfOiQW(:ObYbmL,W%Ml#/OK%AQUb-4chG_PU+Z9m5m>WD_ug$i7d`R^Nl-3C$ASO5NOH3?2E.ATI_<GZ1Loe26^2QfdmM(NUuk'.P@(8d]'4*c#(2EfNRbr20PlI%'mDIVN`;Y!F1qj]Y>=^a"!@-[2G?75A@k-)Ma/rQY:cl^X*6<bHt`m^d_IXLBc.m1P/X_^mZU77SBKN^Sd4[7&i=@MFO$9c>?bX9%B!!TO$5]cl4jXor@ZU16o.;l@=lt>eY+*-?0"16g[)Nif_BghX$k\:.Jj>4q&FMUE$O6`=H0%:>hUWbD8gbL9#Qg)F+Ws$1#!c:X%&V.)gr,.A7I.O2[nB8N);YdgQ1:\5PSV_I<Ec5PrJ0J9m%3VLg"u;,)QCebY=GT$CC+0<EYrEFf">o$h)A@pd2N?gl5T.M*RI%H4%aSEh@2\li]%4MKYq&8b!?"W0VS+&8=PR6>d$F.+r]sKJfG]5V%/<)/gQBjiU=BFL"a&lLTD'EL!@KZ7!\ts3OCddZG=Rm,jD[_U!%,Gu[o`>\geaMO7k#Y7AQ`fe1X0W&.<l:u3b(OZk</\!ZNRd0/EX',6r4>#^T&4k0L>T1d;N<ttW(kJd0,)o$RBeBmHKT6'V2Ln1"%:IC!D-/U$_22uUP:/2+lZ+(dG;[8@lLL>W1YdfK`F>e6kdtBKZe5;M7N>t->a>&>]Q#@)67eVle4!mBEJoQuFO!M6"iM;L4Of=gE%*3u\!7ctTYpNb0Rh7f=J\%m+sbE"/hbkX<&2jnl9rOK!lmF7Hc3DOsYl(RuLrC-A>eBNn#HK+$+O693_d5tt(JVE=b3X6GKT.GRZ%4CA$^d&l=GYNj?cg,"_8J<0W<p#^Lli]qp)&./r*C$1T.IIWELV$ks:A9D6]'nPZbhU[/aI]iRno$$O6F"hBa\Zc<;cM=_8iq]jt%Bl_drNl:O!\(`DG*oQ<7(`c2XY.%m\!#gnP=t@?MVOb/F/Rk!3[LADuCY>t[B/%)QP\&P5TM^ACIR,Vpd*&USa0^@Sqg*T:o2AmE%Mb]?FI<$WDX>k_jcc0(;U=.K%"P"<UE8:!TgaGg!Cf)gp77l:fSX]&M/RGN%N/\54-uV<!k1Kgrm9,=es6e[`e[%nT9'3&FkoS`/%[3Vn"m]6NZ?Y.n'ipA?&2;lCtSUG9Y..#^7h'8L6:sN%4fJhndLB_jDE/=(,]*0eCB'JGUjf*6Ma87>^5GtUMkKL>$D7<t*o6Ib;%a*F<aB=GHnH+llcKd;_8F]j/\TC7<VZu:Y!:&jQ@_4QK&EqueWTs<,NL_f4@>H-m=F$?P(k2f\$5FUWlq*V".R!R#LT&7kZ?^A1(%3)1!R^@P9o22b%rTGi-*.eq'u4$barr)EE(eHqb=)L?jI,!EaU<("u-Kk5bs"P)*']ocDCrU.i!;n6$EQNn2g1atGcpO:gm6%:B6%h`dJ6e\CF@KUg!\-1X9JRW_S0XJDTVjG+5A#;:pZ=uRmCOpApEHHP>2^!ar:n"\F7G5b7>5gf8`_8U:@\WXnB:SdDnEh84ZH6Tc=%UC=4q5*6F@-)>(Cr4Dr(ig]j+:.RtSs"bh'JWPY:P95/4b9'XST;4"a&!M2J;R-K[SgG.=c5O!!-$<G<>,n8B^CmQGB-g\9h6I-V%9\6U#QFZJTZ:7*+#Dq>[Gc(isCMH=:ar2W*1bA33fiE-c^i#3lNf5ZmlH0)(Y7.E]JgDS()Q#(=8]?q"P%r.87nqO>ROlX"fn!A)%gLf#5%>C$,mlG$>JG'Hcmtn)51[uu(-g*;-lRN!G1;T>ePDY7!-[!VVb,2&!&O;b$.%4@`+I9!0ac[("T3J1'<Pq^t:h!Q_RB\&N%M2!d"M5^KV8;V)\<q;NiV]-8:N<Kc)(9ODM[SBJg7E)R=QHlM/L9/7-UeF]5KpG<=AWU(rehV(t!7N8(R49eND=YXpJbRBiY%jh9%bK/DG_HO7dm%Hg+!EIL=/Eudi,:dQV3[rNX)u:e(e4@VV@[Rjp&;mc5H3E7"4[#iKQ:f=oQ1d^]_R:;S'\3mI@Gi[`KJFA1A.5J1%gCGcdG82,piKboqbqO*s0P2_pA274I705@e(8(f.L^96O)M&R(ABCp9,&)];8]R!2.^VUlFIPR\0EHdA1/1roPViT/-.t$t6Ilm\%"CAEb-krqPSQ0K/B9]'i["QXr`rVR)`=QsU"te8?$-@l5X[:ADo\u/jQkTWn)e=P0'*--jn<-5.>U\(-MPA4Wi)S44D2+8eI^D[L%K9kc!U!S+KXoc^\=]pjq>,&#H/[/3nq$e=:'@Hr2G,c+B;03P"K5!]0@;4AOC`#3[c.5jPoq_c.&K4YD*0Etb6q\630PH<B:itAU%$G&ujF@)G'P%Nqs/Q#MBV^4A0$n*9,iU?#cX\thGMN7/ipn!p31sK5iJ>?#O4(Si;#B]#:Jb5:kG9r0qYumkB.K]d<+)9A)#Sk]!%:iUTQP,^7PkSfqOC]Yb)5d?V)>6n%,@2k?,3-_+o:EcK8$s0<c[<,eM-m:?<F%bFSNF9l6`**:3#^"<f2>Z(3AUI-J;!b0W?Np7k%L`_g];Cj:naD<_$'2'%V=uO7H.2-+PVdc=dKcd&;9&u[7Y\U2E&ORcY_3\7NU[3UG6U=2j-2_UQ$F7B^&rq_jgK>Df:H2BVJ5-B"%8eqb+,5>tX6:PV!-*IVT!dS\*DAe]&[Z'ZX)BiB7Z#gA-O0%XsI?/beA(!U^5QS\F)n'L>"Ua3Mh.1H/1'/ng!!CtQ&?r$+`&[N<%,CRb@A[5/GS\VJ,&]9-Z>LTj1W,<&WVcg<0Jl'i'8b:Mr<@S,B9=cTOBG-_ePU3@G6BaZ>VR:r?_+JdRU(YFQ.*6qn'a\=qJlOj)%Q-Rei>b3\a^,5&TCfs3Z/*&>t&-Kd7rF_QS:.bSE`(P&IW_FaiVj8Sa,YDH!d0Z2Ob-[sVZUq,Gb&gpa<@#IiRR!d6`?^O!;+4A>%_+Q,:"X;YS'UdMrAs.`i>qrtqL<]efPS$2T5afQFR!:=;CCZp^+p$=-;=+@(CcY$8A#Y8@.G"Z6CatM!$T91GA3XW@!Zb"D"G(E&%9g^cATal%-9L6rkJVpg%RK<#D;Oh<.1PB-q'j<*9"d5Z+N>(%Qa%(4pUM&&q.2Z$r#t9kt,K:<m$^)E+k"(AY;PMV"JdW,i,-XGS%+E/Ye"A0mcP9t!=;$2_%"c6;>l1>D$D+n;-Z:54XXB$4j;4.JsWi@j8X=Ne/%MYhIfh#<*BHp[^n*.na67iY+9\PXuq3QnI<C4bU%`%n"SOfpefPqFSo(,=!0&<eJVZ>[T4ducYj1>3eHAg8]tVToM8OuFg<9J5]=<[7cdBVIpa3E)(T>!hU(.&"XC_LaHLZC%`7#XX,'%b@O$J$O]X:QW`Rs<QPefO]`;9*4]AW:k7U_Yrfk-2>S5R1-2aBM24uB/QoK$1+$ZkTnMnUOd,2q<^p&UWQDL_29RFX2&/b88Mcc2%[.uBj@V6ftgH'rC;DaM+!7S6?O,*ra)jX<UOHjN&43E^3;ckN.3qu>p(aMf3'#pYJ_@[D+bE=?@-jXsCbq0$u!_XfGeTFkNYXCFS%6mGTuEZZGA<DqYY#*s7g8h;A9:dpMoq#S*ed\gV2*NM6n8UM@%0o5ut@3Y$C/S\(PCFVWjlJTZs@P'o.L5kYiVM>#h/3fjC1r\T6%VbhY+`ZWG5^,@eD<J&/"5M6iM5S2crQCqc8Q&nr,=N[X3`1s-N+_?=4M<Jd&,$Rs-N2UMWHnWpNM2bC.%4-mL17>,:jsFZ._FR'<%"/N=1*`\P?8:`'CU1#l&_h9=1W'eoUfgq*5O<uP6AVG8&Ae2DK[?qN#(1[N:ZC)#lRNTO>ItZX"2EO6r:gt?/iKiE;#pNr!/PVNF%ee4T.ZRlnZiq"H/MqPSX1.!rts-O'Lb64O_TL>]:0Kubl.&t+.U#HXYerXStP;+g-VJ^sJ"Z]IS\0Za@n7*L2"i.pZ,a9WT+;7q?%8McgPj9\B5#+!q5Djh*OK+usOS'1#('2aG3@X]F73jOW/"\R#T71R`8VC>W9`!.B*>>mY36-;#_1VC,O4f^BQOEF_n]:o2&-jjMS%ZR"\sg)r^mn/)Sr%"efM.FBG/Aa_WjPeOCK)ZaF\FCTg/JM=<&8R^Yd9_;a>NE%0E/u&`K)72YpFKD2R]$-g6/6*&]%fd26L_=56%YsEY$!IunuAhh.)Br3UQ"1(@OW_mFZ(rh+>7:F3#bZ"cq,92:\"HFf\:ma:$5RWJR6r)J6/M%!B;TH3lVS%b<LkCpDAftltXK^:j%`Z2cRn68gkj<.**]e_Po&-[r?AMhG0(-DXj?hbO,.A\]8@+*-I3I0:9Zghj)7InkiidpTb=#J+X9\Q5*+X8k4]O6>I%a=F"/+O5`%6A6>S&7&a'OC`,U/Rb3fgi]1$7Po`LfJbS,I-/OL<'cAC9?a;a=A4jk8)n)Y'Gr7%5b'Q17oBdA/mI?Qd<$8Z"AN&/[0BBndA2L<%2M/`o">^J%`$HKaejp[PFkKuW,+c6=CCDZIH6YJ&U!hL$R?7gND5>**\_j8>m'78.k:E1;kEHSIP0nfu4=d-5RFFO@!1m1C@jpeS%\:O@O!nNa<A#UlGLePb]S8eW#(as3#)_;Uo4NnWhd,qWjH$_A_K]"\'AjoAB\,]Z_Sqk1!Al>?AWld;dnIqT+M$4G">JXK:B+r;9%kf@o9OAT0mObWLCO>/^="mel"Jsn#B;Q/do$?Y$cfkX>#&cVPDJL6ZoqN2XEWWj-_&f68!_F1T1:i:ecW.^mH<D5"bAS1L:*%I8o%@KQ`R87_LaA)C0tRU.K]A0FsDDCkj_KJjDO5>o%io>%L\)dLTX1=I/+X^pjMaO#j-m+6)CWptm8CbV'r15Jp-U1LXL,;I-VU>0@3%[DekGBZ+"*A0dQQeH3WiF\?'*Hd)&'C7/UC19*Ir=51+#ZrmAu7LtXr),.^U2\Y'm1;RRd[dYjX%6B<Y/*nj"_F',ca4Fu9JqCfm%D/Y8KPKLjt:^2k0;^[cj#>m<I8==5p]'fig)+5&JSiEBn^b@r?T4QJQ-G8Xe,cFBRMt:g_)4;G'ja)duS)K@Zb1pK)<%QEr%O>3?%GV`@<[r#&tA!'?fYR&cJ[)?PnYW*e0&4f,M=dk>XFIa<GQ==8/dJ(4VK(#*C1OGWq[`l7=R!^S_5HP^W#U('(-T#draFFR?.n#,d%6<);XK+^mU\ZGnt:*Cqo/i""*8#NN2S?N8t=^]&r1jk+&"iUe40P`p>I15R94O+9<L&pao\ZE+P$OL@6,4Q4(iC;;%fmAIl"Hf[9%S5k*6=c!.l`D]*^-'c1,PUWgb6X/!,cRroM[U^habY]Xlq+7*A9RKW*ZQ,eHW&=gHK6q58.R40sQ'rlI,2c98OdPWl_Um@AIsc]5%k]:N;U*>hd0L[R7GS9+Hb"/BJaK8O$;;#>B!.tDObUAgFSsia_$A)/D59V$9a9Oi4%%2qWN-rE;%-Eoi@fRmqbSH:'5^0"leJXnk%-,Se4=%9,";cOLqLr.#kgn]TO;Ssa:.6_iN^+5Ai6o)+Z--T^AO";7'_fj^c3;Nhj#")t,D+W<,-(:]Gloh8jYea\%&g!sX.0mpP%%s&:c<[Ia:/R+_u9V`rU?kcDPK=%`D)V-VW[&lofVQisMWA=l<1rb.r&/8bGQ,$_W*1B9?K"5D:n7990KrdXRTUTVBOT%+l#*h\H%LuF&`7Hog:c4t:^>oFkuN.seT/^p('$0W2(7YNgmi@?X!bB]/6+n1"Q<>AeDU>?`,)\ueX1&*_bs2JkMYRi7YYZ2S[Dl;B%MK*rq%$?:QC[1ktt$^2ETaJg^OX^ST+9-RtV.QU[0+GgeE.GCGW-sfm8"jr]EO\qOj/PNOWD8)eHiD'j(`Puj\Z"PC0S7E'(\\Td=CG^Pu%jtMCs6BS!PTF"5,<QA41$uu`RXI(bI[fd5.inY.]('/L[(4&kt@MH$`<SLH-R\$l(l=g?p9V'.-9M8gXe9%*1FIF-!,).pq`\^"*%:h!TZe8AH'9Iesh3RKmD2^ttMa5ZVg2aW)@4:dhc48Kk?Nm*-/V(l.]S*6E3&8(X#&8Y6ijqNBR-%se[b<T-[K<AnUij>g9fXQm_%!5c-uc:6_oG+&lcQD3or%,kf[0MnJ^\e$GB1-fQZ>LoHYWaRAN:>3d'FJAkRh,5+lGpG!Q\g][aKAE2i>NT*Q$3X*Af)!R[-#4pX%dALVMf#0>ajTq1u9YSul,o_bh7_B59?8PD8YatnBVSl#YX]\"/Vdii6<Y]'s'CndW/(ROk?pL9d=@84jBnicm6]'*`A?]H9$TQD8%"`%:Rl"l'=#"M4@+j%smUN0Hb?jkOPR2b^KWMkt$;W]N4Hcfa4)@?n[+k_H)/Q(/`10^u;1>Q=^N@n<X1_h@+A.,*1QkG==-k6lW%CX3ct.Agns8"iT':h#4an<ur8=j7^4);H0C/(RO+ntd!'=caK]kY\VhCFC?i7?5iZ/"I;c_-/6#@-=Fr@DSE%,kkB1"`'fj/QbAs%Ts:7IciOp615iKD'l-fL\-^J^XJ(=F($"AT_P>Coe50/-UP2l$pUU*W2(>etQcKuE<=SnAGK!a>XT9?/Q#t"!/T=dmh(l]RXjUci%-J`@r"+!=siN?:`Y[D%HQjI''L2h8TLK]b_Nke`hkXJIIEGR_EA1kLYMD[Y_i",.X'l+.sY4q.;[=B%$@bm)-BCQCBM)LDF\&:&9%@]]^@g.3l=`EMB'`\IC!;Mq8rbX7a3om+JZ`&HW&fZ)mUKfNeb)Tl$nM[L_4jL8Z>M?2,!K))T)?NF60ToA1=N8W,!CFCoJ(1i17%CJOt8YnkL7MD[!Eo"e_;=U#8PYn_%8,aF)>@*K5i'UrrGThEsm)TlUg%4CL5Q`L3)Wbr.%9NAnoN?H^M+5Yj#7rr"i()oQaTgl70%n]c7NliIS4n-H=4=1)q`e$mmQ81HE>k5s6p^cm7NP4V=VO:4U[=Njq8['.TVSjgej_]Y+\:0GIk'fqA>FiM&jrKOUB6-j:%<6BMS%4$B-MG[s$IHiEeP928VSIM3pLhEs@O;a=[\`[YFQ"dt(c@5'$,Y/jU2[&%#2D9eMBJP?>iM-"9`FOQ?k`ag./\Y^+*H(\29qn7V;%%oQ>Z_AJM_OD!HbmY$0I&!Z1<7o0DG3+!8^3KXTiChs>9nkeKEB5G0cqqdsL*L&i_BHOI21)o!BmN201g[DH:r<Z[oR1iIp#"\<f%9L5(e`L_G^AUmL=9Gs$Cn?T5gqS;PN/,-J^1;J4S>IXih<V-P)0\TFUA?]Q!"e<RT35nlR-if.HI'ZgB'd%O`r[.>TC_)Hpb^oMX%+*q<3A`@88D!$mN-`EM"H;;L[:eFE4CFU`O^3VrFJ]AN^$>)RHAo:SE,B4[TGi?qV/cmeGn&%2Pbu,c#JuC:NS^3qS_p&rfM1*dg%-dU1D#Jt?Na0,U";aWkAp@Ph$)"+Nu_,%/]#;=_%3U+D@5qC0FA>bK8eY?]eab=<]\uLnn^>,[hf"o0-r+%afI?-$JrpoV&\;NDF%'Mjn9]^*:RRq.rpVko>W[$*G.YF4B-T>o#ZpL2m%^7g,7EYo%%0=dZF;M=Ar1ng]?^7+-IXd'K4ai+ai=6*9r3s\[Rk"P-7HL9<]%WhX$-D>%_kKBfk4-)(Xp.me3;9.CVHjZDMp@!Be,`p%cpB-;L4AbrJN\m!psV?]8O*P\6PiVO=c#^XkL04#\05-eqW$$K-Vc<(!P%d"<fM"d/:$4m52_*`;R&H:LeMdt?"2&c3;+W.Njs8pM+e?>=n67eh!Z<q]N<gdKVDb-Pr@!-QY@*fLg39b2O]#:kBI[#n&ng/u^S%pa#a9U'KZOneF:0)6`;/H-h35iaqP'M*2lCO=)M7JX1.[;qK54oUq'YY=EEI==X5,n%qU,6:^8\K-7O`9b;VZ,R=u2cFble8&R-n%+:(,;E`MRdJfk24QjG3n&6b`KF!ItB1cr;\"<fVED1=nU+kV*Z#75TY_6Kh^Yc7,?>kPIg*O$Xl<=im2'a6l/<`^86(-r3X/Cmi5%KYAB(`tne#Ee=(F2T:CMG@JX>O<"V(.Xn<>b=,Ufo8<^'pd(L.:*^SXBJCSmfJCi#?IbHcIh6W+5]XN*I1>8$`5bIlqRfFl2P3Bh%(<//C2#LYrTB"(k<^6&P@-WAD`%HR>C_[FjU&\Wu^4e!@N@1uNqrOISIZNsNYPil@'EDO)JKVTcEu"X3gBZUpq'72"Q]Wt1m&P#X%Gke(p7285:$_@u[%jBh+nUjtZcnB$JcJIi7No/ak04m?9?74ADch&DrkJ%,bXt9Bio_*dNY+e?&Dq!(F*NA2PC]g"8DCkThfOOZ&%e,=/3Dt*O6UR8Tkd7.U.-:^Q.;.Ff-aLWiOs26;@9ao*Uaq@T;!)_p&<`ScrjV;>'h<N`t&AS=I'Vc(-c&2Ri)dL[K#omaO`Jo4V%b;Sjk?3iQ&]$K%(:]/qQZ+UJ!do=1s]p%^ST#1\DY;1CnL9gu&%rgVURs\7a4Lmmd%N8o1l2Zd.)aKLk!`3DuM1j(I><SY;bJ*+>%$Ajg0_%f%l)uBkS[09_5\P6.nEJg:1V,s*GM'i22`u`N./3\M'QjrN1&&oHU_Q18^KjU'4gC<MVaJN82c^;0JU,nVF%O/KVA0J0*%23MnN2NVQ.$#*8_d#O5Sk1S:U*SgpU[IPAW1W=H8`qq4qBg*u0n4+8+hZ/=u&)K7]BY_7SC1]6MUd1M/8).7$s1A"QI"RqJTGMk(%m<2fhJ70$F\uEhU(&29%5.L9e(MMe3UPO`?#iaVdV)":Yq8^D=C#>t+$p6TerEQ3-K5m&IIO"3PO'`.SIfAq+hk.XK2>9J09dM$D%)g`?t`rJ\gI*M[iaUG9aAg`2s?dH+_6r"@Kf6RN+.QkOW;7\p6*>`/6G]g'RW$de3+b+>[@N9e;^(\B-@.+Q+^g*)[aBU`p'-$Zt%4r(ulCjhZQIkGH_GW`q4[qt]53Or]UA6@^0`J,FMHs?Yd'=GW$O]mSP@P:2To&jiVCi6s`<HG?-)HTYJ^\?IEkJNX:B8qBABDUM:%@FDhk-npl^U$Z1S@:aI=T8UBNIe&c:cF?MI-aAEbn^T?pT;JUIkHBg%NAQ^?Bd.%s((Mp[[F#$LXC@ZZQKVq$H:2*Is(qlsT1Z>Z%N"%'qa][Yo!pa7(OBf7D>Jtn3;c('2+Vu8=-#6mCld"YEk#NNZo.VBqZV:k*5%H=7DTA4?Q^R<]!IX!4cAU&i/<7Qa0-`F)+rC[3%M[INX*^e7a?[j.<4Hpl`hW8*l:J`&:6>3Wqr]@BY(d)MGa?Xf4j^&2)4*]BPD'i[U`OdANoYD@n,0N_sjVkq\-ZVC4LO&K/B4'2[%4l\LL'+^>/l>I\eE3f?-\%6Hn7W5pJQf;FlBHpGfVY_,e(mX9J\ctGq,Qr8VV`jVA#j.LF\=NW3^1K&!$qo\G$/`dBB-@&bqjQWZ%W]IZ6-f*Su=0FD3RIGlc?u$hMC<k@4j#1E:h0j(?03[\HW8@m0o_Z#r/?CqinjhbY2ZJijX_M,2A<e^_*5K653a>GQ)W"TDlBb)8%R4l(RlJ%;H>Y!3-8>#DLZ9#Ynl1IfnN'DZX,[$7pL:r29eJsN(`A4tBq^V/:l$cBrpgZ$LN3]])_,1&.XL"a[cITNI4G`1#"%h5#%ChUa22*gX^?DJ,G]1;Kt=&$-;Y/N6EDj"gsBLY=&cQ5ktVYk$%W;g;.ke=!QUr*E`o4DhJcZGI[XQS3Hs*l%WNRMbH47%NOYk2;,%e%WO[mrU6SLe@C0Z"m4>^>?D=m'#uRiD*[L3V_mh$V'J.$03hf;8%=gF3l*XM=b%MV^MhYb]/S1&/SZJ;_3lVT@[V=n8m&m^)2if%hV;Ch.AG6Yphkd'roACK*Z;D)+2#U/M?s8]2l^Wm.A\RcDijlK2F8VT*2Z-$92fO4%1*uZKNWPEWOh/b4BTa#S\T`n=81.(9o;I^%.DJOaj:(1"pJoO0?FH>PRFIOL]Kt:o^<80t]#[<UWYY2U,L=SVB`U4K(4PI=p8g7^ki_;9h(%3r42p'J.3A37Hu3fTbN6FN72q22%:0+SK7f)p+ngs+`Kl[:o1eYda#'ta@rVJGo+)2c$4tg#u-cVN0OX0!#MmU#-Z41Xs4u>m7<&aMP=>!eAT7J-==(fqpnY'2U1V8Bg%VWA`g1f8%mZK<W8mO=c'p9oXf7OQ[l\P(OS8dJm$l'ILRI37$imBJAoV]C;2d1Rp$_":O+q>P:-MojGUof6WYJ;tX`MNIIk(t)R[%2YTVm"$!Q^RVEI.Ka0.I\;e1pM'eun_"2=W.jh,)S'A8Z;buI.Y)Gd(33UJ\FBmK0;GOlK5FJ3dkH]"ZBQSKLLffB*^8mFM?F$j!%<lG\MpGI-HLfn@%MJG:\+IPZG^1Ij%l+/@6%uN7^c;p-?NE<\p:bo?6r$H7`k&K-=8*oVsJ@VM8[\.,U@)DhVrrn%E;l<b/_XKP[%^LVP17gBDP^jt3?f0&1qr-cO'qStQ`9@</5^&W@mRJ\>>An:7n6:0mqI);Bn`pU;c.tG"c&Atn9(--sblRJm6aCSo>Gq$_LdA,$g%NO@uQgY*I2:8Wjn6K!*qU?5_5d<$1f_rJL>@,<B[YqR`$/@*E"'Tp0U@_5lGahb$(LQeo<%)PV]M-6]df(rti`6+F48^m?Bk>aIY%dQk`T*RZlUcO;Jb"2U-+d;[nYRRkrM,ZP:8%/?-8"CnOg%PM/e'%8CUq/ZF/jTTn[g!FWLYB(7j3A\>'duXKP@NBVPf^]L5VYRu7%7h:#rSp9??'XjjC:j\.Dr05nBm#]pNcZ>8RFmm3HrpW&KhZ&i:fDiE`qB+ZC^.#P,8[-^6"H3[U_qO,er-PY#"('XOp^X!WHU@d*%HIbA)o7f4o+"A$N1*pf-@'eia9c<ELVi"K*OOOO]K=D142pRH!k[YHdq`JI$Uk<4YKZ$(tUGO)Vb#K)gOI%YILP[kg]PiUlqa+JP%7+fLELhV/c<k&-<DAidjSWqeMI0NM>7G+rMCAL%^)&Qq>PXchX-mK@1kb\BED?LS!\ki;SJVbK7ijB$\Z$Rsn5<j6rPZ+@f`M]O2%@KG<"NE)cu5i2:2Y""F6+SG@9?Y<ep>nDa@>ZAZ,8=TmY>oPsj<NnXuW^dnt]f=sl,(g),Rsi9ViH8q4;;8#6:M&K/&.5)8=V7E%%UaHm#S8EE+7#V731pD_3iSk^t+>Y%RLb/$'UD+UgP\H:d`BHQ..00Jd7)-as3:%12:VJ+>TE19f_obft!-6[0\(q<;Z\M#q2QSWi%:s4iQ26-M1RrV^KfE&dLo_#`Ai(=9rZOa>`FB=MBB+3J\]lb9[YG*25b8GM/aN"hRnlBEqi,<-aaAD1"+8+[X0J2XpYhCqBfK)8I%C+OppH<Z<1FnOK8-R1>jNsQ8!7o4n3@.Ro(-A^a!G$(Mdf8\_&//%2e("/g^j0g'r#:)U.!6F!9oR.NV]L!@5)]"0=D:[=g66l:%%bpt6"Y8lijL>:3A.bc]QTa=A<L#B8%R/F`LTYqpW*qhaa5a;&U/kr`Ih-&+n*q$pMD8?6Q-N8Y;B3P-uoM*Q,*EOP`K4H,m8?GI>%_r8E!4(lme\&QggW?M*m:8"(9\<3JR4[#WV#,TA:hjWu&k#%@38]Nf&&KK\sEXgC4_EO+\bdrHmE$)+8&J<_ueX/\n,cF-p#e_>Z%hT2Ci8F@`"*e=Sh&4.(hDr0+M$gHZ:=f=#.;La?6XXq]j#e;aR4;\dL2a=Hphq2:qS_L#-@KlW40fQ7[KDbjT[9#;A[G7B^LSD!K%TSd5[OZ@cl>k_q;7atJ@VX_B8VW&sLW[qVl:X'4d5Vfslg!C._V4LCdZX,-E9?><G^!EK>US]7$>5k;n@a[*^PQUq9XEYB&+H6KF%,E-P9M/4qk+hsbO)i);Sr.'/jl8E[F3^3-!oc0hL9`^B>HllEUq(oW+DCLCiIPj?jo;=BCI&GDi<(68MOfZ\!6lt6pqS%Zg#P]Rk%+P??'eH@N;Z%1&/R5(c^8ZhQbJ%CO!qCnZP],lE,PH?-"bKqZmC=CbF>-;N?kZD)dMTMkDRPpP6'%:B>"#+b0J;gPOBLs?M_GhW^%aW8hu=(OHIQIZ-eUO1/%]^S7Zn%F.AYpm,o"B%B;4H"O7mhO+?/Fh,)LiNNjg+;-%g*,dg(OdCf8%NB57AE[W"LCFH^H#C$XkAAB%4>\b%2+7:7@:3Wn;3?o<SqCduN&)3c4JsJ:=KiNC(JV"*QZ&W01.)Q?\q7mn92WIJ:e(XA-*%?,'JaT4XqkCc#I)7fRU4c10@D8a%?4]H9'+ou%Kl)Xa9)[N0.BeAY-nX8$e*.pR)!$$YEg^BRENGs?$YM(Lq9>o%_)D?k>A[2D$hYdUm'TT`n)o+*1pe8LJs'+VO"4E$%K;XfMV1t%)"gX9Scf?HZRYM]2[=!)R\$/'6%U,!/5(8aQi*#5c:")YO/"jV,(6)$)NFa[XQqI/5bq4.P-;-@TAM-G+T;a37k'!IC%%`_P:e#g_D!Cu"FRP@A4/eSrL>VOSh4C0V2G`.riD%:[oDlHcWGs_$D9k/Kn1uka-g[/,INlAZQ]A`AbWnRhBCJXY0!AT;Qa4OD!%jkNH_C3Go10s#RE@8&f1_EH;DmR`]:oCPdu&+`DWqnAd6]r(:=GWKS1qK%G\1UR0BXr>`[UDMHs-eIJQPi]*;AQnag0W`Ub.`X"E%<Q+?aS!=F*MV;MKMEP!JRTuq*SOJtA#s0-pn';@B@6Y@7r%d-DZ?L?d=+8#6n"1\npVkZQlO9s$%:S"@DsX3G-?^k;X[G+,9"MpP%GSUERd$I1g>089mg(Z*7WDlLm1[)Oal#,A,RjMM8//`.35:M7EjZ#3hf.FY7"T_3/B'E$F"0ThiRfT`m?Zuepg0[BLe6A6qMLLNI%ChqH*8^ViY9p^Pq#eY<Sj@jP8ITuP(6p_kRh=%DCFe^<q\)m5dBjRJQX?ee@9mCd%5V`9,n,9[TPST7qi*\F6HF+mW$]Ln!^K*5c%i(I46U_GP6X70E"?/a4k)EP"M*%7>9Z?Q->`^J,iR8'_MH`q*N/]\([EKsZ;a-4*a$hSetoR3KRDD0kM@.p*r+%*W'/>6`@@!5`P%I&BX3;4ih=\M]Y7IRYT,bm/>oom<L(ETV#&hNP#=hG^2ImrR^(?">,EWb3r#%ZjP*MLs42,G`YbY(e-eN0n'FM-X(;Zkth`&GUBc%QA,,rJT)^LeVkG=I!N'#F1otLe#RV_'NhLfMPm3QGCbL"gmV\\A_8+oDW[a<'e=j%F-"=A)>WAL_-'M$X&p9JT8g)cN5XI',K6ND%IP'nDM,&&"^I)1^g7VRR<2<Ve\R#+<c)';q:[[d3+]m6)=s1kL`^jfiN&7[G=ZRJ.Z7F$X;_60qOf([$p"A<0F/i$[@'EcdqGdT5%/)!e>2-&)BI*=-.dQR4d\TpWQOqi``p!J[WZ2B^;/LUN9r(C3,]8g4CeSAS`Mip>P3uI],PJ^_&!tFt0\*_u2;[OAT\%8#MkaG7n%+<R&;l2.2+Dc891(QD^B2Yunp(t+K:iVidF*hPZb/p*Z5'^;K_[IkhqRW#g=`>:Zj.<A:[Lfn"-P*)#j#;i;:2V99J>.&+-W,mft%)BjJ,j4Aja-(SBV+i3W7<=f)C1$Oj+:>on%ki.WSLh0AH<P+os`MPmGE42^Z-oD$LO$VYln[YU[U38gg,!/H3fQ9HEK`^+o&.t?-%SthoZh+Ek$8U"4'Kd.mBbX(d).14!P0;dQ8L8Uq4><;i7njm\/5tBCP[H!Gl'=qq9m?jDVi>+k&a<eD4FO<ie@]lP.H-0Qoi0I-A%Y6cohadq-AkK!Y?V3d!RiP@o571U2=nsZ;PF$>p7ob;1nNd*<P*dqV$?WC0I4OCcUA%[q5mGnAD3Ye67f>u)K4f:\ME*0[>;K@D=%YjYa=,?=5cSD&#@Lt[Nf0s@XV'!)=L&NE?0j0/:5+E8A!8<u1`^_)6!>6Yhlnb(u?L:249("Ph4F>=*/JaTneG8")A;ktU!&5EHu%`mJ8MEYUBmU\U':d0'Oih!AGhUd&m^@8Y9D<n4HnT`N\alqu:!AR<D`"pbUIZu87E(2RHl#WZ*kH`3*3mER_-8FDWmMJVj7^uP(:%E+"nX\ZhkE=UTg<@_4[1FLe^Lil9c+Tpsr0D<?dh;6fk=$AHXMqDMA/EoW&JGaY9rSj[!I31@m4b@/5)b7;K,[>Eq?h#dk`RiHc$%>uJ[^--s>!<KX*_S5jq)LNs;.W7n-Fn@Wh?qtFMR6NtC]Ub5:KKFJ0-SIXo>acBkV;6t-Jnofkk@Z^pKdeWLe%o?FjYIOC.D-nh[%hcFfJ2J5^<-NieN's<Z5g9pXs'@BoX#LdJ0/Cfr?N++2XnR2O#&M9DSO+s$cb1k!^R)Innefds4&Y*hHSd'W=72Z3Xba.Wk%Y'Gu%V\gYj_gGEk75k4i+$7.Vm_b@'4rfIW()^[jFIPLA;=6eg/tM9cAPsZTX%I;"%P;Hij]T=m<%UHdG"YsOUYC#5O1s6]&$7jU4L0X$%q]1u"8dNKnQG[$r9i@_!h-.q4$1eO4*TG,C"(PZCL>92@VGOk&pQor]&dq2:_NS(97KJFGc/[*<`Li=UOH_b^ALT&LWBrJl3&X!I%LF_9=,%38[M::afk7WIjkA2)t.&9nO&)<1Y@&MH[g"(/f+0j9,V*K2GLEd/n=B=d+RqQEHS;%[\<VreV\rq)YU(f>iQ/#a-:mWC6%G5Q298WG2iemUStLk<D^Q:".V]PAIHr(r9%p@3/kJ^qXI`S[f*_[SbkE'lRmr?cp7XS'>9gC6;#\Y5_X]%t`F9.o@K6\-ORMWKR^%F"TEDDW4fjDWl`GAgW91;"EL,YK=\pSW>i1:iNr!GmuPnmI3G\o-R6d'V,*E>@`#QP\QihE'lRirQpNENVCt`?Td^*50E,GK#j?p%3ZQOH<0+a5;(069FhA^APa/<%N[TSNoG->@L*k^?Lk<,TBc]:/i*am3*0)G/gIO;>Bh\ZfLdJmqN-mUZ-XoU<KHubM79nT--ktmF%-_,-Dn`D8EZG);"jkIh/^g8MPjbZkPmjde,>54ZZ7)?#8YB,+33:EFBjb].,>7O.;eG7edQQljWm4^b]N[X`_[siRr)d0?-2^A*=%E7]Asiou?[7>>;LnjQK:.3j4;:l)_n;rNXtBH.V*.K(!@k3Z`sL@05("k<+BhWI<V/dbYo;NA6\!9&h_QKi?`Pj5:j#4b/@Z9?SK%P>Ik&hrT\m^\4Z\:DD=Oiq0fedEo8VY%X%.S??P2<loMRBoF*[E^_uN]QFK]'ZR)K$s+-Jn(dNnMGcDh]f]0?inJm+U?Ke$oYV?u%k-84>[-"H/7CU6h.s`BsXh0Ojjm"1!a;)\?:T)d\'hti%gTDr;+-U[)AAXQ`H[+M,6=4dp:uJC[Wp$lAMKVpYH+Te"LRT0a-mflI%eSeM']i+6iLFW]nE6'ds;*^lZK?23T\#4CpU9N,Z_$bUai:j\d&7(Taoh6!iBSqFs%Smer2^?L=:Gc2VEk;[WMP92)iD:dQ'$"!P%WUoM7U@Y;eH+9TJlMSccM'gF202FEe48Enb+bH*;]Q-E(H"l"H"k()B#Yu/oSB?_C-^n66q=[3P+?\&2D,57`iJ@UbpYgo0Lc$:p%dF;Xk+-%b2TLm6;KimCJpA&YPbl^n,;kGd-:(8sV@CI'LD5'0c,q*qWHD,m1.5g[qGms*Of]`imHeqDGo$[GcjOdekA\gU^lE)%q%8fR-^43,?=L2Ifu3AqX.glYN#p5C!fHQ61t:TG@npI2bV&N;!i\44M2Z'"<9X-96!ic:>/qoZ1W&1?-@bZQheaeXUPiWIW]GERsS%PeH0hP)TVHZ_&1FI,(!J[$thkmWQlQ;=UoSCo^=laKheel]Gd@H:;PVmp3EgcS.=!nHg!b>BTL-Z`.W7B^M)_,\efm'3`@nH\j8W%dVSg_,p/Km;p@[,U4JWCoLY)hRgLWc3j3S[e+"^M"EXNi,h^ff4Zec[U;,-Yn<K5:fRlOW0.5FT*)[d;@ZkS"4K]s!OC2KGa[V9>%EBDC!'GYaiYBC<sIUA\eNlA+E$X$P^W7uEZc?.0d<3VO%/@s2ci@GoZDpt7g4-5_=4"t=#f^2bA=ido=fqWdt;jNDS+"^Nl8\J1>%h3aYP1`Hn!<Zt5Ed1WCK*,.;HXc,'8`ce&?n$2SZodDE&YDTZ!,0e+^=`1G2`>(k^c:p4(0R3f?&(m"X4"t=$W5.)&g!$g#HZd%8%D,g8Zb2l$\$Bl;rEi)RNf9@e/VG5$39"mks)H0hMFqTcDUEF_*g*jsee(3QJ9;KdsBOf'sBD%d."%J-o8@5YR8!`PkAbeOf^ZYg]%7bLh+bW.ZdK!R'YY1k5Q/Q*b(W.E309"AO21W_[u_PJlI]3Q\g*!*9okhncoMK<VUI+8cq=q>'Kdnh>8IkGLYQfh[s3)*2J&Soi$%De((0-gNBp6cBphNZC.29'Fls<kc/RnU)\t\iJ1(^%6"l?XJ$$psB61U=DlbjitChVk0iqFGo1UL@/!<%'*3Rl*mcQ>UB6DIu"FY%6c3P3jnbT)UEIBYI&5d=iiNj>N/"a4GYnGp@k$fKdHb_"NU\/@R,b4*PO@q98laa4h<`Wok3<l)\[4N8R7u]TcW)\1'[^folO:GP%?S@?Cohq3d6j^f=.4C86,Ts%X1N2oR.14,[%'jr>e/I2uUC!BW3eK,=Mc[cp\oea%CO:iJ/R`R-;')%ol`(`"7aU)*\n,1u>2]:X%ZbA"@%p*\DTSfrKV9?c#K[+<q_e]91G#"J:7S`)AR(W&DmGK6Q()dL%$BnF^bnob81=`_M.[:!@Z:nhK:P&#6\n)uqnt[\S@7Ce.%/LTEs#[Ig%*-0UqUqk1sBBNDM-0ro_D<N6M<NOWnYG$Jjag&%A@`7jYY+.GF=#Y9u\B=6a<0U(K*1PUXMGI!dr(nE.=H[3i\bK(^%n7g+<*3DWtI7eEWd:ngu1eHfSADZ[Z*@`Gb`>/FJF^WtOs47!hoI5+@Edh5HZ'PVn.mEu`]mf22o2nSpT=F*9#Ia@TqcA6`()??9%o9Sn=fG-uV^\pZYA6ut^:488gUb/6mWC"k:44_@AcO+pZFT\8coQ2GU\1#sb:J3=PmoWl:[hd;Sg@KI/pl=;9.[0-c,5Y5U.=aRK%2cj#-B1+@H?(0RZT].quO'`h-B3CeR`%LuhHM+1Rr"6N*CAXbqT\KMskb&%I_N%jV'gH-iMtkjFTdC8bh`"$T06Kb.KnC#jh.cC+%SKP=fX57(PW,<`+eVH!=!2R6g7p5,ZUZCNrgDl*!GcSOgM:4*<;_l/F%]kT:@ZJakh[EInf17p"A'aX_A*6[=<%3aQJ&"HUQ`PPQ%M<a%g(JF(s<0a=Vb3tYdRUg3fI_;l$+_PDjYn.\,e.]B=9BNi5"f=9No0AoTm`q&,o3<mn"]:&,BXf]#_ZIpib1:0iVi)2frgU1B%O'`.#Vk"1^N*6,f2H3oTpPj;b?YWJuVt*ngY/P;.$QB10qSHIqbGc$RokjSobGhsMC<q8<1j=:c"QQLToQC?oo<\R@AAkf@aQu0I%^o6s)<s9-T<9t_N$*CZVi\]u0UiJkpR&@!$*B^%!T1E$Ej5[M?@j:qfPFT^03MPoLeA0@\?E8aCI_q<RQ+fgY@)l<q-MsQ1do!PA%60tJK$<^VrV)Fq`::l1l88T"24)DD'1lp,&];:2,X#SQ#,^B60m'nK7&+1AuRE*0^+OpL)(<?PbOAt(f2KEpERt!KB;6c$BI_K*R%*B@H3?&JY(<uo2F-*TY?%;Vmp"H\JeQjL!oZo^VP%](3P/7`]^D/Arq]=dq;!"J<brk9N+U&go@1o't#OD)-s)CE^T-m&&6(U[AN%&uqgZeDrAg1-p"hI'V%P@bZlP`1_<\A3b8<$^4m5j^>COd-X.Q9jbd,KfY`=iUY>,lDZ"k.`9=)S-W3VO'`-89LN1WEBdr#6&33n%N+?fK4RAH;a$X6MfC<<d.W7X]e@2oc$6[qAn^dB\bn:7Ob;:7*rjlcC_3G4c'4W[:Pc^ol>HE0-eq=r%96;rh*c#Z!Jit;3%QDqV%O\d8G1NY8#Jb5nr4KtUJ^.q!G60U?c!M2JN2rKN)09#'W69-08>K+L=;013KLW46@a).CW)8[X<5gam5Abs&1Yq_gq!+L"FRR6cV%6UcA#Fs`)2a/a(aLm?qXGbV!r?Se^[+NoBH!K4uA!'itWpousN!-KO9Jf[7W[\__\Ws*eK]BH]?Jn)s;K=-+OE(rNF*>!=3.CkP)%!rN@U':[O<$U[rIAN%B2):JuCBnWC)QT.r;NQHK&]f?fdP#LC;U/+^IWNA%l2q/e0Ne1ek;U$HN>S/k-%M(j<?>tQ6o#WL[[?UDc%4KDBk!oG'qFtBuXcaE$7GZn7,F1,dFIVl;r?snp)o&HCjqamR3AeH\UEsIQ[E,E!BHY"@#kI5j:3j@/q"W?:u,@Vnto7Q";3)oMD%fb$.nZ?e<b*4c:ios0C97&L^=d1o@\6LZKYb)A02:Y@X+`;lG0BJgpNl_)nGl:s6XVT!^Y?S:E';BDp733F0[>11hF#/S**H=ElZ%LU)R!$#$S@f`e:%Pi:Zc?V&km/dioOJkoii'2N,>H3*e$0]Ba1:O!!Lq[:M0]_8u\#6>8>/54P=iF@793PS;eM=WLM5#eg<<0BKq%-X)rR*KX$8/S@SQG*O)H3gj_3R/g#c77U+MpS#H#<H[2]=%&9]0N'iS(!e'+_Es8!;HsBJ@Q_\j#hPToUfbUnWuS<;>:.%\$>OS'%&I[NDPB-n\r#QuK[;INaoDiW<P+l@S*blHkq5WA!aL4XCToGE63@ZQ^H[I<bJ_]m7L23oA8>%1=)-<:Z^TX*-2TO9LL5"K=;m/,V%4Z9BPp`3Il9pHj&8c660'QRrG-FeK]]X!ui1f,Cm^#lVr5,BjNDEn4#6e4pI"Nh7R&sJt_^2?)loa?.G-Lh:-Ha7T_ZiPG7[c)/%%p*JU)'\OsOL\[gD$=W6R7/'tC]rl)m!p]M,!j(aXFQqJEl=(!MoY@s$^9?D&Y2\gG6<H/5qZ7uOJr"l8<RCYjFr=Vd2=>4eW`=9h%,i>RXrB@VOpteiEjBuYD>7`0WVODC*&D(i]-V[BB6[4#"pb>^"9tCG_lE2+gGr?$>>qoq;o)n<oYh.MK'#%L)#5JP3"T#KXFKSHe%O[935'tB>nW)&-CkcX$,<2B_()!?9\3b]M1:l7roMr)*=(ckIOT^.1"3?#K\6#MW<dhY[E1`F\q.;MYSY`YgQEM))aVcr*'ASP++%4t^S2*JP(+l')ihdA"HU8i917c.V$)--f&U$M32GXuZ$c\4*e]-*k[u55mXK=@FC_<-nERg$@q4B5q55-t8"?^OK\7:O#%m-d;>a%q;HUK6EUH/@]Jlm=kJ&j,er@eUkp]"f8;5QS&pqiQ:kue0iasUYL-Yi.UC<N7E+4:cDM@!.TRe0USg3s/?Rt9oB3'*;PXB:q=O3V%,kj'3h03LiKg=e3HNrKp^b^%MNG[ANf%2G0?GU7;19'[A;[\V7-W8_(ZFl/r3IDp`%d`EO,5'6RYps,Ymtinn>,rg0-a_RW1nrt?%0oXU;p--85Jg\'4ZmkGS`(MV5`&Tm<N_]!>3@?mJItR.pUldn[Lu`gqT0BGf#+88]k6pOHY1DXtMGd[<BcVTmbjIfp_pe;7I%-6J%j,gR.Z(q!+g@<!69(Y0!AlkQ_p$]g1A[hH^R,6@IXp)?<#1km8>ul=;HG7$kIVZCo+cehT&l,)qZOj1B1s]`+QD#)kK[5jFoe];=%?A\PMSBtJCs+^=iq2P!"<#rG[R?>:pf]Ymu2S^QS/3HhCVM88FAHht8i%n`QC323Ea0-^>3=q*=h"Q&#V+`*U1t>@IMJT>pg,$"Y%B:*b(\<Qjonb(UbJ+('&51Xi.BRu$T7e/c.&Wo5JZa\H)<6YH%lg>qI6NBDm35tdqTVN4k5ag)NddB]<5MT9bEA4?0;s2qlRZOEZ%*ESqfLo]?XP(e,PEu&)8:lq<pj/aMAjHl$J`]bAgdd/QMSKp7H,P'8/I?gjHG2]n9cr)fg3HhTTr[!HUYMmAPdp-WU%Dj?7NiV*_%3QaV%Rd+hPCG?[#H@5,r\njA#Y,go!HHJF5qB%e[-UaShU2elS.sI-Ns%lOS5MP3VAeS^#fVH=@ZFs'[:/Vof?1FA`5>L0OC,/rA%8[PP30Qe2QSZ<QL?L)meON]X"VURp6a7EfP[4H.8/*]Om;Yh!I)FAr2(u879G/P%CT@1ckAQq-i6RJO"!Z5<ZdZSU:+MeQ<&fM^u%P.):.qDO*ZR)dU`;3A$NN(**Sd3aiOr>ic5*'$t8g/g.c1iE+9lk0r&EE7:M7LJl==^OL(@.s?e^nFEqIE733)Q6,NBUPD&LAj]E%CYtU=)>tj.jWAf:Q]rUJMb&(:3(DRP;Vta#-hUt]\`\5Q_J"*TH-QX+$@R!R>q,1lIK]o;5c(L:6Vl,tOgIG_c>+ZH>tP"=rA]p$%4*JRp_MQY75COVTdo"5Q\KMFO7kC`Yht\918rF$$XTf9uFnP[Pet&it^*CZ[XS[I`MFb.)h\_aq7&Ycl[Qkss86`2p<gO7c0!A#!%M;nB&#l5)Mp*D-T/h%)UJAr9-KPYiV-/3*r?$RW[*MJSBGnjC3+uN#LjDCb9LS$p(=k.C">b6Em<4#O)nR@4Q'Ql!rCKcHpZluQ8%rH_!7;KcYG7k>MjA*m3J`#Lb+o\AX,.`p618O_W&bZ3li'J`[1?+kDQ+,";%dRSkKc%09kl?a:%.3s_)<!OtcJ)%12B(-kA.?[`o%,[R:*PNB<.o<CMs]-t8lelAc5pnVo<A;bM<NqR@jb^4IGO%fH%EEd?0b*;Z3_`_`?X("qedOS.9N$GrL,1(q,g[EKXnMg!:f+bmh%^%.]N*U=A]K?fi"2-_@e(?-p+?U"3C/VeC<_I%WqWqXcO4&C$@,?:W9q<PhRc8Cd)b\cCum[lW9WT!0L[AYg$oa&.p2Q!Pm7He;b%N64H\HKFq5?LMi3;RLOC5(a';TeC7$cq;?HNBoc>]0m@NUZPMGFO$tkX?kidQtOG6I<6hPS)<+Lr;6#c.ak&sD2R@VN>8'6oH4eG%AAFg`!LK434?pBs8Y"k_CNc+,L,@'`4aa(bE[&*@"*e+*PYu`Ebm0r.Quc2dZRT1m<odJb-nQeWo"1FuV!_,#Z>'dl:fYhZZ1VY)%JA7C5&mH0oTBBO,F!:rKhHQ,6DB41R>rdF2MlDs5^.?5/g]gU&j-%ESp-!/SbIT5AjWJubHAY,,msTC$c2)7?jZ?=>p>:^P%6X(Y%N`aA0a0N/5fo2Jr^5nX?!jXkr1H\@q#tkf+g4/3MCS4Vf@s[(t]m"e5Y>ciXSonD*>\k:<0KY6KFh5cL[nSs-O%8U/Fc/U6@cq!!%5oBI\I7YDA?B%!'A]seG4q:>:o<GM-+W8r,"fAjBSe\==_Lo#dF3Vm+^-hmTLEXgAWTeu/2j.Gunh;3I1Ig_amPqtKk94S<)/;/=%4Kdp88$8_4:+A;H[=5Y9h8rUACm+Kh,nZa9NrsaF)`Z%>>WS43F'nLKXL3=+U-@2LY62,]rV=8Bf=A!%8q(G>'Oq&g@ib4c5(g7)%`r$LiHiO$5][p;Y<!424"Hrtr('[R3l9Nq_.BQ.#a(OXN>o;jbiIX;f@?Roc0'tNEN<gdMPM?^fn@35%\&@N/qB%g`:iiX=[$QV-%as.^<M3)"spXVI2O@l[3DHi2tGN4=ek7aoL:mOD]7?-'g=#T/bptCt=#qpuSQX6g'>MtB,=^6&o6F0E\\,8d5Zp&W>m;:1%NmFbu%k26Qi?[H[_pGjh.Yp74@N.^l.FaU2J6.I/P;ARp&@Yd)?)EbnPnG=\gd;"=R3&PiL%^3^;j/\]W`K9LOkdQ97>P(dmgL(jt]Or4X%X'K(`Ajtf1[nZqQOAS(N;I4J&_?N=3HBN>L1bbI`m#2^@C=-hf1^lf@bO)Wc*DEt)c=15f3O\eNG,Oe-/Ic@Q+_skD[%*+Y]aCoF%ICKo*?\Jo^QOGMXdoGL57)C'>`:d=290Ja&[q*mU7#AcbKHp!VlbHOBK$%N,<W%lZ0^X)%HE48J;'du$g(bWiG=@a*dD!c8,&5]=%J*k&,6-EM>%V/mTa/2Gf%e]X-.XA7q0^s(I9'0S]"N:`qNK-^FYcPf5]-77JpY$8!TAC+G5::SAMU&)*Rj%``e+%:IA@qH=(U_,c%Pl(41YWljJ+T'(.<NC,P);5P0p-M8"HS>$V*$$."[C\U4NNk=dXjBPM';@Z&R>eBaU/VU1oCbq806[/D\.b$[:d3>"YE+]0EG$*\%n#M?1Vm-s<dWu&*[2%]kQGkRuDM<2"WcLJ]$6@4A$6<6*,@9]E&oNE%Stc"tg'U^!LP;bb$ILV<\eILR#H_aS=^*''6EGFe$IKX;%32b9T]OTqichB3?X-*sM?X"\r7"pQYXUkZKaJ&9-BQkhJ6=9V:BcJud=H@TX#68,/B7)Xr;Og92/\!Lc4DHniGcfnRL!?@J<2rr-%46HMV"fWrlF.$+I]toI6nng%0*@Iu7P8K#F7m1Ea0iWh*FHDF(aMr$b<SHUsc]mU2m\cmca"Y2uhtn:!(Nqg1^7aGI=f#=K-n1#,%</=ui,GjL^>JIU1$.nF%R*+i\NNMqL4KSMe@-)nf3C;P^a8tVbaEh_k+<kf[eN]n+6#Pl"W9>5ePlm>T9uJWJ"/aY&]L1k4.6*JR%ZZ5jc/J%$AmPqb_\6L\-^_E$\[&"`rJS+b;F25^BV%G^q8r$Z3h.Z:oAEA=PD"e&rL[&qF@Oh\2@*SeR+d2T"/.;]VjZ[_#PY3dl%MCIJY6(J(SF9a+.FpaUO370A7as>ea-8,R"DeJR1!2cF2?!g[,\h8072r?>m`,]L@-)+?:hDsgaNtQ)U%qK7%&+!uAY;Z=,S/OR6%le%;8/2ea[R5@\eg6&3,T-+H[L*To\CMua?#[a*"OFMd!kuutN"AV3u,JC9qfpgAhJA(Y@hN4Dq]fBW*%11>L>]a(c82db3,U]As%#p7ZeC?:I$?`jc#FsM;[S!GrXG\u_b/PdNsZ%Lm3"Ie70>R\'(f'V+PUq,+$fTDtDiJFre3BKhpP&FX8bDpM-e/u$JM8bJXh`3h1%C.Ejh.k-^fQ95KhoOI3i[r\))\4VnoCIaO9]Ao9SG9kO#)4n.A,Jg@B_*6D8,[&^^glgTgfn_4p99P$ar8*U,88Ljm9O!Yo3W%Hk%i%W<@6t/ZL`[7$c7tMQ'ds4jZ8D$3Lm'.d,/>"UX-X/5j66LXKSh^0;*1sG7UmLfZFb-(/L_WF5Q\!ePT_FVIG\p%CV0(,AP+^Fq%*&L$"8N+#d+8PWh8O$[20)9*^?a_5AL/9k.8dA-,mir"`&(k5u4E?.^fu.+r,h?[q!rubhN(.7'2qPaI17"6,%uhGM=I2fR<=*^f%Ug$cG?fgL.\YGCVW(sY"1LkK"6qs1`b"c2JkSR=trlJgG^LSQs[\tF7SjTWB&=OYp/Z+1&\ZI'<LX^peNAt.NEXt<==7YEeWUF9k%'Gd<JY'/1-bXE-GkO=2b7bm1-nd^D0r!H^t\[=HY=2o&,[j[r@I[c_M6_P$dlARp_B<:@-,X#jd#?@hcJ5V:2Ft"Rfdp`^%PIAkO%//6e?V1aVQN2A#=hcJ@qYa'#*LFY^5/BjD,!)I$)W4b`WTap[7GiHVl<71D^ho;fM2$cd;OF)9WiZZ*\rNM0:m=q"R?T*26kYOpC%aD<IC'h>\H$G/U@?F8iVd]#fTV*a[bW#h8/QJNfO_rIaHL&mDs1beN?G2p_./<=h^Z<4P8eY2OB1/End\+.Ks-[0@KmE,]B_[Ep]%,61I$``O$CAV]?kMJ<Xmn@Z<S+t.Xi,)^irZA+Y5p*U>MO1uS7;g4Ym<R](o6Zit@b\gd1&X:D9:.K$1RsCHmhOAX"0>quF08t#c%I$4?LFV0k[Lr(067dqF]X(4c*Q?Gb7YF9>i5;+bn/rcN59#$D_#TscMN;<f<\0<9#4p"jA`psB8-@33d!f1C,GC9TJSL#sp+$o.V%WNjG5L_D0[?F:pl8+87dMZeq_pg]5u<7X.:(6rBTnnduifTl.Z5,7#(8mE<$P8iBVOD%>jMa1\/ecuDF@NAKh"Imi#@Vl5Wm%.kF%1&G(\f;peTgq,4+N8<Q$C%7n70=qEWV%GNuWoFPT7R1BNVp>d<7KDs`]h0N"AWo`o\s4dpcBSu,WbM>_N1^bhp3U'^_7/^da0@=M%7S&AiiPGk['g#)AN0%HXG81H0e-)s4(lBs)6,uS,LG44garq>J7F64U?0F8b*1^.O'kCSQm<PMcE6e#D>SlqI,c?JHh(HKOAH\.X%jiWi#I"t8gpS!pGCR)N4&5rg8@>(`&"D%?\1nWjjK7so+T=WV#om(Th?ku4&U$).;&$.-nmmMQNKb:[$asTVdKIk"S#4oYfNAY.'%476mK@?/21+tYkmO2?\h&o#Q'UOPfjRo)3N[o90f4GYL4pf=lu!N_6QSO[L!&OB1#Z!4cj6s=6i4![TZ/NC51)mndb\0'-LVh.[X%]IL-DK!WI6ZC?as3!!U>LDUH9Uud"Y".7u4[uZVs\V$lr2e<qda:Z@*K"M$tfl$SoB1_5sTrU*2^p[afTD0).l6*f*mu+MZZF/mS%Hi1\'*iCPc1JpfF#R/^5(XIn":.:SoZmZ6gPnh(i/KBQ_W'qbo3_cj.FB./M<0G:QoR+^JQ+2m^ZUGq%,)_e.P/e)DOiLfGal@]1%;d(H-oCk*(JijOAbT,;lY)?=F.kjdl\CWfg^da.99jErPO#;8hXk=_J(OKD(^(Qm)s&Zt&4oW.hf"M<.9\ldhZcDaW>85Qm^]Dp^%D>#rNWG+ukEP.h%H](#s9L\>7qW;E;'6C_Q@:Nus\EMsd1+I>c=4N[4f9<3=h*E,qJ+TE4egcU)M;UZA="cJ<B13mi2P"\-I@S!#%R?,Lo&JE4XZ#%jK+t;UJ4(%$(BCb@\5)-FKV:F0tfgc/R;okr8FhJXQlmjQX#D4#;nrq0<5EK97^E>;QM+lCPk\jDjX#P&N#!&Nl%`XH<!26jGERDa<s><=?N!]c753XR(f9IW$lF1XeUP&kQ>L<L7%p/THiZ%nR4"IUOj2&:c@Km=$u)<F(+Ma@?Z\BG%0]giKO!&`GO%`?5D]UCVrB%`DX^#.a)[6[LQ/BdK2Obol26TKL!"iG=aKINJ]5NrOLak=+'Z]EEp.Lcs0T+_T,8hCsYRQ4k?1$MjF9^U3<Q,gDCH%X7&HfgN5iseTYQe6->!t-h8Bk7aPUeoA"Hi@1;h7EmM<(E]_Mh3$gm6dk`1fmmP6LmEIj/+]/*qTdD9%nfT`9nOS<u.B)(=%I_^T%ibH":+a&L%G9R0Q6^L<&&g9LsdmkTm,<HLCZ+\:IL?L,Y^L0,8ZEZrRTHX.=+*TY<m$sROJV6lO'$>mo(6(unUkt6NQcOiE'bQI*%8-u]FQ/sDM!bXS2;Wc89Y,`PZO'G3n52>/=KbSdQ-AX&d!_p4PAXRt=Odum5f\nf<[H'+[!nimt.O3I6O('VT1JIlc+?E#Fjbm#R%\Z?=W:roQa<ZM.Md0eB0)YU%je->Ed(#HC^*#^Ck(RcBNL$!1$PX:$pLKYps?)6edqecub&3[iFVW)5.-D86S$RqCj40c^K>4A?Q%+G<cX]YP#Ni"R16n#gUUI"ENh.+bPnLp\O%dPq^mm,LCUk&LaV=1+D;kTb8YDDSbi]11U863ZG5#1)o&AuE$h]q%6S:Vq89;k9n+%A*fS4>BOM=26qb4;lDpp)o+L\j8"J<KN#_J+0hk+T%4`!XQ3u\i'mIKApm9RgXrV>2(^r>JHh@b@W';.p%OK#4]0NG9.dcC133o.%AS:ja9_p-eH4#Atf]lE0jbV,P&+`1+$da;0CR+MR8i%7e](p1(A1=j]]2j=CREguPWB2<JKAEIJP\..R]5Nmbh=-i[1<!HbVW,r8%%M*ge<Dl(?7IAr[&.C+PLFZi+%/"rRRT7%4YDT?Q?`G4@godea=37^MjoH"]%Z>Aqk]$YUoAiU9h6-AS:damNl\%m61:qmt@!#3#%FVUegqHP4?k$0`!AFRkVr74mKQBY1FOrD:(9'[scbt))_#sYQ*#[R:oHCP#&9HCPhrd5as`t$37%tWH>&)3BP0t@7e$m=+Fl9*Mq%Jj75L7in>Tnd`CO!91\k2Q'^&87q@p`o5I,O%Ib;?e;Au_Ll+Cht*d-6p&*<8@>W9%$%C4Ne',Td72>&_cq,FQE*)1RM[oH+IKkQ%26dGI5r@qO:?!<T9P:0E?,\B$OD3"o^j.k(B#O&)j8-Q[FYn>r*0H=!@("bt\OrlnaGfr9T>)aS838"LH3CUchMfN:B5LI/WMjEh%(W\%2=5B3!].A0).j!kBotq6h%O-M]+C"#enP'),'B[c')BJ:'2I'(7`'pC[>gSIa_c^Ut&\fRF"`9;NH'a_Po,t6m#R(1Mg]))6%A-e3RC'oHWr[4N>,#''VB4Ge5UWW3n>M>Aps0JQH&deTE-(eMSr6H/4`o2EU'EkK(IfaC<b*)c2,^_m0*#mT1kJjs:K[4ACrtfMK%T,S1<P7>o7+qE*7LSLmC563dK/GF3EBXj[r=WHg'`'HnXkgAg*ZQg-D-"IPLrMJR>dkLR.lRHUn0))\L./Q`XWK<W,[8ZK@CoYgF%MR/H4IW"NAhS37al$g)#!tl+ocGkHndh$3bL0moM<d\N8_8U+7[cP?EBgl[>mgN9uZ$k;NYZ?1,om)g_HjME#X*Ylo/l$1G,]7UA%g2_7dMmJPb`Ao)]EU]VU>j4d3%XtQ@Xra'?]MjJ1j;6jih`Mj*?)d:3)VQ;N'>CJ7\fo]cB[%[%#9*nb*c%D#3+lTTNUs:H<]COq%3V("]q"Md[NRJH,oA2lOS6#[]WheTD"]7?$_cD.abeD4`r[-[4399u[j"tC>2]8O4)-r/ZdrK+;Cbj:gAKIkYa>cGf=D^UK3KYHE%S=%AWHr<#Y3;C2aNlich1@\C&#ZG9oZk\K-2@]u2ok*6W'mS0O@cO,XnpN7q>)`m!A"l19\*L%o7j'i&#=WsfES:a&#9=&hI,?:l%#Mku(+_Ed\`ca2Q[:!GBKH7Dh=47NLU5gI:IM_2mWhbJ<Qr(%@cqk_14M/G0]*[H@.=,.U](F55('&2C+nSm5+;cIS6Qf;'SX62H%TZB^XQ%""F)TZu,S&d#&j/P"#66Ricg4!d5S]:<SH-?r&N#Q7tH7,;4!$kFW(1.+brBP%Z^<Mb?Y^ks8oNju4k+e'##@`i(YfH>)%R](I+HMBa5[8=TBqo&f;T5Ihf5#:@<;]lN\ZOK3_.V)B0$a%k.he5Y^1oC/[jL/]QVas;H<mH<3Y&f1C4?AHnl2h<iSc)N1p]11,%R91Tm_+SC)1>flL(G6Ygn:&CflI'IJ7]/=?%RdUVe01pZeR^4$J9KaMW^#Y1PtFGuWe%+>Pf-d-[HT+W:I8&9&CpeW*AM3aGN7mX%^*i7Qa@3qC??K<,JNRO@io_(F+$gFKA3I#mjj,54),MX@GpId8U9X:Um+U-\)8QR4\/NhP)Po-gFC$7N#s@Gn6<MA=,`T@S<7>^8%N0S^9L[52p2W)FJK*nBqJjfAEUltbK(p#DgiJc[P(B4]9ZF,@21[EbA#\`m-HD`SBFlssSgoVG:Pu\&=nGM7G-Bt(1=Vjl?LZoTs%S:+WeE>C$%65p,<X7t]t6^LHA<T9r2oKj.25&,ar(5hXIs4@m^[:PcY"0oB&\k?+9HPPB'0RbWqo+^;N3!1'&ALoU^b@7p3e2qYu%@8g2;WZ%%V:e)BEHml*?P)"c?V=+r5qCE`'%a<c,kD-4L)[Tq:*Z=dZM1luK?`ihn,Bj"3fB7jrX\jnYNr8mATuu<F'7[lHn"1\n%[oP5R*TE2Q)>ep%>*%9gfU9Z><H(=Qib\-[maeVr%-jStpi'pl<l==2S6'j(JB'$/NgDaV4^7)?;>YIT_Sn7c*LlB9',:hGZAKUB%Ho?8aD%19X(5PdHTMpRm^QIA+#nntn8^ld^KK1KFoj=rRWQ2^0Z2P0aL%.:[6IjODEnn5%j(E2Aa`6cn%$MS5lsCS=>!:<`+L>8H%2d.V/D7`ed1o,l/U;P0jP19L]=FfK]QpRn#k#ji?8sFlg,/jVhb/+?lnRIG#S6%;7jG#k`G=rB6b`7>0i<,YrEa_Ho:5>Hj`/YH*%om%I<$U$u?_N*$QT(itBN6&3K>H4&Nf"p`V;NOGoA&ja@AG6WU93.S]?>_(_(YJo3DC$Jll1,C_>D__UrSlom+q*/[JOh7f"`*ub%Ud=Bqb,p%&WBMA@jZnL>bHTdEE@IB^h9(^.[rOjp<^)<eZu@PcBXqd1XW4g6l-$1K\#I*bXW5N@gMS<8aJ6`LV=kg`%G.k(;I&k^%kMjX]lhS%;]+/9FQ"79t4ZN@3Q7G`-As,tXBVER9Q=#KOp%fVF-2*DENchjsgf#P.E[uc1[G=I&\:1&V,r>#`394'LT1HNk71`;4%/I8NmNC)%Zo;\9-].^?#am`PEiKdQeh#$R-;i]TNaNLL:aRUcU83S=@'+UO[9)KOf4LS$GU-s5dQ0Lt9DHFo,;RGo^.G4\GT,1?g%`:FRh9!i,u6GfWgQWNYMMHX6)/1mdjgK6WS\"4&o\F#13]Dqhma<TkD</X?dZ=!1)g%s:&Rm]e:Z$%./T>5KT<akZL$2To9BYm0C%NNl[&)7o_j91,#_M28aDC/FC-/o)\4#9%m77$3;-FCXh%&t(kDes;3\_W^[`l*o8[Sr_&RM"QWN$>VA&?4/A*m4(uRkV;/;.(hOQ%W]3pHn]lSidpq^1`AXQk,l&k`[F%@";<Nu!SLt:e.aj+Hm["VLH'XMmZ%k<>VbY2'\eQ1Q;Vh41]oe7]lc43*LlA88+)CQ8em\aO%/<`n+/dXr2:")tNRtY?^q&1Jg.@'59'L&M4f][&jF#p80jW.0*B;Bo]KfQ.0iQZ,Ve\6)HSl)QQ]s/DN*#Zk$Nh2=4?3mOJRN*,5%c9EV>F11`Vr>^m$TGcX2R$G$afr,JW-Z:,CqP^mBOmPs(<*0[gk?CR1+CQHmk3/rbf;0k"#`;0/F^jeP=&C^^k(lArJTtI9hVFq&%IbHnDPAjYt?03OEhHk>JjC'*07lc%P4M9(`f58pYgRFYUZT_]O:LuPkL,:UoZt_';/RQN9p5WKh+Hc9+B$[WC$dJL=I`R@JLc%tt%QbmlFd]dUM.WES1G-X3I\1#,H*LUO2b9b"Xcf3SV9&e!sK3T5nm>ecno)B'_^2`5.M<40U.j*jh@0+IkiSt/u)RlHN4<c%b]&S%4%K>8AA!aOH>9Akp(^$]1AT]%^JR'aPX(3[#IL2Q/"\u+eP>Wl]!]ig^hjK_T>\ak(8-AC9\^TH?==W#]gM%AaC2!jE<_<MY9/^:n,%(3rbrRAHk<3UIAdG5Li\59bBQ'DTEt,iPEiO'`,mP]?JF@Qo*m8@>4bZpYC8p,H3>(@TUP5)EFF?b2,q5,T9D%3W3@_b:#K>NN5s%^V?S"m5nM\ZIi=j*aA2PU((C0aP4"rjOdUOD#<tuMR^r-f\TbYHQIAHo2`EFnKSE&SsN+aq[qStnb$Vm#qr.ZOiN]sGlaeiJ#bV"%C8\$M$CTL469#OJhCu3qjIX2D`(o'[.sbGXY%\%:*"&EHN+UeQUM)+VCm@>K;(g"tU>Sg5$WZWMX[4u4UJ`NY(_8BQ5,u9""BD[?%;-h5YR:t#sR7CojS!WPQ\W7N8+b`sn1DlN.d^7!`9-o28g,.+:B-17'@>A*@mQ*`'\+aLlBh7$g7=;thQGmm/N).M`T>g.gqG*:l%OY<p:T6)-Dh6]#8kmRm?YOBtgkhM#GO_.+VePIPmOZOHm/fn@lY0="&KD25i*':Z"Mg?f/RXLttli(>nR!hnjHL&/D@L8BmgX+-U%'Gq2gj8b@TN2;Yl*f,cVVY;t-8ccbXI(/[agP0+l1U]0mnbB28eClESlPo^oN!tS]O+Dn1RZp*kZ!ug)Qem/%edWgO\(:qt?W+WY%a+fG&HkFBk[L02aJ^Sts(#P%7fI78!.cG'!W007_S9R+Pha=C5E?^(#b>OPm:YpD4(^*3t3;9BO,ZpGOqmmCH/QW^)L"=qRcU_AN%M*oA:L=:2r/)*8`pj7_i0I3XsfU_-P=lX1SR1Bg-+2sf;E>8sK//m<n/uH]t//Pc`k])nqpYIT&AJPGA/^d][.V9ou9%E4]N)^J!%ocPi7UXI/Z<L_W&4k)M]5OOiSibN`cC3Z*l4$(\to`o$Z0!7d;C7CMY$=,\p@K2!IQc#B<";s;#3HM"-kD^2CY!.?KYtMBgGI8A/%JsEelbp"an%uh-s*K<W%<&K/=8a<H&_ra2pFt5DpgZb&F/`UZt$)!d,k:gs:=DNi^rni7[8Bf*FU:$o1ah-Ysb^OX@%8.[H)b+Qm%-0GT>0e>3>m6*F)=7n"0HgsPZcpWn.'8htd:cYd1DCfGZUlt#D8g])U<@Muk?&H\),3k#g)WC+c3l+VK-_5hV@Lj[Q`gGQ^$mt_R%2[?>C6\9h#Kj(Zk=k570lCHJr$GM#d8X-cha;@B_!g)]f'UsVp*fidMcia=a662bV/\`-r$*"*I:5kkQ+?`WG%S]Joe+ktX-DWK^%`K[&&+=aDHTa>0?\<`<5`RF>+Z4'I?&;MT=(desa;KJS(TaAFHR7fUu_0<(kfDW.6Ad\`M#AP7pLVSP\$Y@3jMMS<T:2g=`fY@i$%Y2BFDJcE94'C6LW_F/?p3et\R<<jo(T.L#"huo/J2).)\66)NjAd=6sI:(R'hSBN48e'+8P7q9s\rPtW5"_`umcXf89(*$A+?Dee%.X%Ds&4@PV\Qjf(pV(Bu$LHsZV+J)2=j[P7%opY<FFqr-fg.qo-XMV('/,<l#pMO,PXQ*\);L6I:d_QL"=TEbUd]Pc5X[!hRc;ob%kQF+]l8GoKY7O<ei.M;+eq4s4TKu?MTaX]#j[^2JhujL0GiG/L\j4sT&Y22=q'&<V%f9AU$/()D(lV30(?=Vs)]<_M@pk6jct[2T%_@nc(VB(#NI^_Oa2iHr^Id+WMLXclGlg/#,/S-a3<C7Ch.m+usd\:A)4Mf#hNl>+#(HZ.($XNVV_nlg44<a#_o!oa3TF'DfOl6V8%5dG$O8J!c)#X+OSZ/;)1#u,>-lHjA$VAB5f-hqtLp0`,s9e\LbJ-/Q$Zi$$aZ6!4T_s+nT;l4.F8J(7P">CG4,<>j9I2\jocsfrt%jGlt8dpY9LSY0Ge!rS'R&1Og@"JK^S@rR%@E$gCWM&510`.>&K`.9p.+jnBi*,!D\6sncd$"DGk%YGE/UV&He0fC1(d<+`u5MT08%aSl.h,V&):@M8m%k=`fA^<a,Yatgs"fUg:+<f@$YS'N(BrX60jJT&kE]fQ?KAT5\n/.?E.\Li3.dKt@/qLqMNA%m]CVWrns)>pYB%GTBkbdY_g+QZ0(eKLt>YIo<,MNIr9;Q."`)7>4N]M4p*>H.Hj.p'Q7C#UMaZ[+IJ#RI<Nr'9($#epVad;M&Yr6mA`bor*k#.!`/O%Bk,m4]8K&eItEP_l+\m->"o-SZeml!Sa*==8.b6h>))J1.&b1Db<oE58]>";`8<\3lh2G<U1RIqC7ds#6u;H[FJ%X2pJhYMOP3&o%*#d)u1Anhb[qts+;RjKD;'k[hqQ4^Q;c(P'8\W$_pL]XM+sQ"c(,8Tk#aN1iIN@(gjSb`<ID_(Bn^[VG_N)r9d,t<(E0A[ep9:+K%FBN$cH-,<.D#3jgmqLI/jX!9QQ,PQ&97@H:'HCF7jBns3"E]eK5a#*i8\V+'$P+VQ9!Yq8a-'ZH@B1XOhG3WuKTgdmEg#sg'tp?*%N*!TKL/0eNGkL>2O.9a.Smp[;r]\T$)OSE6:7'87H<jNTM+I#Q"*\AZ_b!Ui.nZ.lN,As>P`qX*TM'rrN8@5?s.G:ora"43SDHfH%aBu&W\]F$lH]`90nKQ3i%_9Z*fur>I\]F#U8c7Nk6brHi4@p(Z!H&@7202Nl!h@a*oPl_N79;@sMB;=O,#Gm7A7uL_.q1&$=/cU?%H,q?G*qG006O#<Y[A/M98,(XlgI&\FKIOf+^(2Sl*qDHFa+&?Tpm*$/a@2sdHM#BLjp84NC_%E739)2C2DZ\Gn;q(<1F^:U&"1+?%`iM:58gl'@MrZ%"o@P*>Z0mDW4lgH6i?>rIHcRQ]%iNH"^9Ke2=qb2K0`,92YT.0^%P$Klf,$fSk5+ssOR]S,MHEr"GabHQ#8s8a%Rb*jXI)cO/b<a/7PKi3RK8^;>p>P?\_ZHj;/E%`/A!91>+N"8D1LY<c@Al;Ol#;aQODnJ814CoTF**MkgR"BP*990kbZG?1qn!m*%0?.4E"n3R$;Bb@h47_as+JXR0`8L#*5M/U!a[&\rr\QXVl';Omi?+uPQ&<aL:<DZi/H6QC_I_If#,WY<364@>H0]L4:F$q@NGSoG%A)SOpLrp?sK+'$[1C=@)=S&U=#<=)'A1\<0lJ4!X4?R.4<Bf!k^R@MIQ.nY1:cr%+6iK!gL5/G[DGOc>[Si0UU,SRq$EU?\)@0D0%]WX,*Q&=/ahS:LWPEt%=#RcDNB^32pCj\_?;:W$MYV$E=drS6/rt^Hn5k=Pr_SfJab997*4].0]SfN'X0>tNS"'[<RC11nsr##ld%ke-XO[WnoPo'T,!P1P"&a.97eI`Bs.*;=p&(9dCbOk6W4YdZlC9E6r=aD%*]jHKOjNK58b<<;2lp%R;Y"_mbG'HKGJ.qR$Ol:f>M%XlafJf#1Tu*^]0:C#F4,>/-QkRC,X8c'q4X9%r7PR5qQR&7&loj@WWRR!Ca0U=I'BoGh#7e0Qr\ZW7BKe8uCc!0N)^OgRg+7l'G3%g30E[[7Y;&QpfLT[E(?uegc@TeB1sCqrF$M_M;J.LdorFl#bl/B*HQJj=*Z<g^jQB102o"p9$J4<bRu]4XLhCcW@T<cNkfM@J4mJ%123"6/o'@/3+%BcH+&`V@[4/!VYWJ(X8o>=)&$$UZ4^1Ck(FHk2!uSu`LkV6G%[mSMZT]q=J_,*?&MjpnCOr'FWYV<XuU_S?4Xj?%G]RVMH(u9</'=)Hr(fNFh"g9W=hV&?q4]-b3@b(AT8oFA$5&LIB*BhA0$IIpk#3BHB*HbCNCDp0cm1>M-t`].0C;G'D%kPnWs:0J%b=*r%YFJVX>,ol<'aNb)/%(d+eJVMjDta1l4@c>6-aTRWEe%89F0%)C#7>^&jD/dd.'_RlQlI5S9O[U(G0&Sp\9g(pj>d!INVeZ$%Ua+"[8VQ7e=45S78U>DO%[d?bW2?oD/DPr$+-Qdj0YBnIOam>h;[E<$hGM;J5R$d8?aBifWhXbt464!E4IR@bcQ&XZQle*U=N3HM%L^],qH0i#m'_UP/X"@@pVlp.D5=\;B5H;p?gj.-U)1GRrT.$de+%FKm@O$5SfN??/Hr(6lC1Zn%hDIISNLHWYRN?Ko)]nhAjEq`0%naf`k'\ARDAC0ZCQ132X*]oftZ-o![QAG4&*B(39LDOP7D7ei"*=/1glOSF^AIm)>JPt`mO`>Qc.<>?X*FPAm3S]uBcm%(HbBC=/%\/0/pr8%C"G//X=?[6SDNQGe$*h]aO4cm5@mE/k7>rq>PI9tC?2j=8&4j5>.>N%$p"/d01b/;8oXQ\/sfKGs-d-j\(4=N=V6[rZ9%Vk=U'n[tVq&9@14)4lH61kfpNGUcqGjU=pNmknR[$;U\Z<`F>/6m=a9@L>m3M%IG=;cL5d$3>p[nEpuH>i@,ZT6=`WGbRBAKL?fO%U2"^s?fY3EU/RJ2N8J8e.Sku\Y2C!_RnH/>0+7,)B87]oL#*4o<Hr9#5HjS+M*uURWth`*'_IFWI*p.5.Uo\OGRDU-_22*8$>R_(%"*Snr>//`p(<*0ohV@6jM_6mV1T,"%Ts3O%Q'<R>5a@fL,Wc',eG>5(@0WZLZ2c1Y<e0I',!^9[$;fhrs4m,n4BY75*M:J+Opr"q%_E2$5+XoVJ+S2/=Kh1`N#(rXK[)OY`:=1MNOR,f._c'B4^E]^>XL2pQ@YCZ+\<iWLF,>4t?]FOhqD-4='qX.AZ,9Ks%ssBF:Mk`@%nC.hcGj<3]ScYVm35SU="4`5b^Z'A&Q,6H:*>,AMi!Db#BJpHoU1Sd6Zb.9Lk%#r('lrq.3eaGJ6#A6?_p;1]V<AUSUj7mZkS,U!%Bf1e3<2M.&QdBQLl,@og7Aho[F5H78Qu[GlMGA/'9:K54W@%aL&Y6ej\Z/9<.@qc'mqf+d)E?;S2:BS/-(*m,C,pX=?8$%RQ+afk%',6pf&q,.p@T-)+0D.acQXYF1#T9/,/p]UXj[:N\IKZR!c240";h=jeP$Po''8bYs`cc<9@hG6*R^m'<"fHm88G>,("g!''VVi0\%gTr+s$;Nl94f4_T:9gq@;(*pMIYi8=E!fP/RCrJV`@eRMCrNEgC-3Y$gZ!'Mj=+q\Y=r'q.8B-$a.4bT*@WL=GuA^p7"gIbR*_[H%f==O+3.Wm!\$@;_-u<75n"M!$L#r$uCGG:,;Sh-%]rO9CHugoAeO&jsU<<(X>igeIn]^W*jU!1]H+'_8J`R.>Zc\Ib2-jB`,lE'\%8nD"J8picB<LuHjBfj>8<Z/)(0UqJM=(pFV8$g@%>nEn%.ShLL0/?%_p@=*+Vf(mE9,4tXPHrK?"SK:Nd/Qk'"W3T`5bnr-Gu>`q%R*O\@:VM'tgb33US\gC]=\1Z`inV,=9gV9X?'RlBMEHIB'j=%t1mMmS1!;\1XIWPCW*2`VH+kDeH0R\%[!>=YIP(98Wq,4$Km0>H%A9VU0fd-gFE;SX2K%T>PW`@jdR;ZhWHTU[O:UYM\<)J"glTWHR^CTK<SeY'h&n>u12R_9U<8@HbBk4PA2qqcak"T=la!D/#s6$uM%[_#f1I>L]rK'd_V[QTe'D=+^QYZ*(V:SR79$m=m(8AogV;[bQ]Y##\,U5:E@an_c,%@a#jm"t4jf8i;6qFJ1^YLTC!rB'/jPQ&;$%>1oT4\FW]j`U]d*M,W"5MjC@!WnnB`m]kT._fJHAYsX(iZ561@40J//_l(&A?_;qiI8s(*D'ro9Ju7tLZ5='K:qo-@K^Ee]</]RA%7KfW()+O9r8F\X5':M8s*"DYm$=@ht8Oj<7ERf%E-[&&m1I]S5Msq"J2_RQMRJGolF0nd9Tgj'_*4ps[oCpN\HVi;+e0o]A;5@HX%BbIcFPb3(RaJUjkA"7;]L?.SFa.3@-'5/O-*>%A/Tgq0\9W<7en:ludqU5,oL$l0h^@dF.$9`T^gC-DQf,<B=rqX:jMV.crWOJ=>%&!Nc_G1?&)oSJ[_fKFi-'EtbVp=kIWe_As@V8G@n*RN*Em/):PmP29Mi*E3]N?WL]oR(1&)(n4i7o[!6a&I,ET/YksJE2iRq5U1+%kIoO!ZEq*QVFWJOo+7^8SQc?)X,eKXeF>6MOCf]aD3I4"[Y3.Jl9QAjTkh=3niD4=WkD:+F*28U)hAH$T(]rt#l3U28Jnj,s#5X6%6+&TthC:!(=OSpcB"O;gZ-jVuH$S3NEn:rjEK!5ahr]a%Kr9[FHkE(&#9GbC<HjGV0-73HY%pn41M<(^&+u,EVhRD^'&d>tWmNI#%@_?rP9_!^NGCR>rig6EWlL=&u4$6MEemIsH3g@//nYt5dfIu5_[7<Yp`2=_tHhTo,J<J:.r/le25npns6iK=`eanke+<ikqN__r#%](AAhJ4S`&'q[OLLejS/i_r*oe>N'UL"Dl`M"h\@4kPOI:Z;1?GVT[j5pNp/lnO11HT699W]7)&"fTeb1U<C.:t6._O,-W+?UD%g%&ZQ)`kr2+c$6<=@+b64<^1/V6l&A)alDl(E8U-jkIKZV=-Je*A!`X;1_D20lFbC1U%T(\q,jQ>@Wf*pm`^^Pf_.+2<b`fC"JF`M/%*%M`s;gg);!*^m_"fNp,!BZT.pYe@]5]pNC:]Zt]VGZuYHUbE%,?0aR%mn$b]Q)Gidt`fW6/4TNBb@+l7/(PiQ)38?P[[+@MPJ+S%[tmmY[_!Rf#].-6\?YaTBO?t7*25d7%'u]CU-`d)>&+kHg?,Xb<5cp&J8c?!7&XFJ,?-%f#SiF;IgWr/k05Z/a%3SB_!hWl]OF[$%$_MhlC6"V3hTAp]#R;eFKdKI['L6'L7]K3,.a0fiKr#,RnR)PWUE$#&D3^FfJop:u+b1\(p<_[^551b0nP7ZPR,cF+U>k6GKHVhh%5$O(eBrua5L_pjAg!d3o`dmCJ]tP!t14*?V[uS=)H`tLg7&fI1YnU'83qp*48l]ljpNTW8lATJpLf2b@7%]95!=9-m-l"Gt@3\CP%"O:)5l9lgg[BUaKg/pbBC)f7FU/XBancrCMHGug*OI]*CZF`1UcH[7A>:Pq[a/FLlZ[jj2]$fjUV><6t7ZaWU?GH7.F[=c!Cj1R3%J&\R<8`fI[J],ncf?s9Ig6Y&eq^h,-W2<d2cJ"U!G7T>!*C7(rm(p-]P/AgI'(`ggI0kU;mV_f(P.oFGee,1Z,qt,9/:ArfpY[Ab%erh\*`MQGjQ[Hu!?X0G&c+:kIot=,G>5WCk]m#BA;T)iI(Q2Wmf%n.ePO[&5`VWnT?P83d0=<GDA8,Blf\SB4m<DZ`5f["lYh=+4%!4O<oCq<ZUhM0[)d"Ku93/DSaIXJ+6q;ct7ZnGMN]Z89pK)g-UT'"L!W&b03]!GbqYDH$[KSR8_Ho`Z^QPalke,d*#$PK0$7"S7E%Yt\#H-,nI(-Z"d"j507W-IfF_Ir#_^2KIT`qVu4)]ub9_GAIrX:/$=%p.,aoVKD@!S_8ZW?o,t`'VQ#2i7['L99+W-(E/A^e3Og5%6?XR&[7.tAXrPF!K61`m*VAI^]=tJ;!K^.Pbu-cB^Q-\^e(MUD%c`i2GNU^F5@VYUq>*4aXnog4k?#M;]b,(ji>jcC`-Vc""nlS=%(j/eor3Pitf\[dBVr.A9IpJF1Im\g<s81#Wd+&uJs7^/qotUI>J,eE@;6]cks8DuZQ2\hq9)j[9iI76SH=#RI/)^/I/ehbF(P:PH%=P6U)NEND\)KQ&7j!QDGrU[quW-(IEGcV,4Y:OL)A,V0l6/7Iu">NhX/RbG1860_+M]X8Ec!3#XM!05]WmVeX@&arI,ba<S/^]>?%>6n+l$4+90!'[A!FHJ`uf0DY.kC;\Md(Gp9rA>;#K!;E4Gd.),A.oZ-V!#hA="$%&PeRbIfFmbXgFCNo&n2>I]"-0mqra0,J]B8b%U3G5LRd?+a4s"G?eG17r!:Ot^nXUUH%Kj>lO>+nb*E,o.0]Em8O6,ERJaH3f+q[hVI`/h!jR7p7SKL7P@WJEAL&Mr(A8liBJ;V.8%^+eGHUesYlZf!d+&q_Ced\Sapga8Jr>Z.Ikph[@p(%!Fs-4gI>!9#)r$djCNe(@a<.=`)K1?E9aObQ$V8YU!^H+K0qW_d^"2S/sS%`%[/Ql/Jdmr&V'Woe%?VqBP,pjhE0t0`b]`(hiH?P*6%0VD'4[d&#h4]<4Nqc&jB5J$@F;IIrmf0)TOSJ`;ePhH+D-In_ZZ0_cKK%@cn.-0b1Cd'PA8VI+Cf0F=)SF"[=<0m+]suFOBdJ^*KbFZ&kWW>EZ,o@Y(He*>?oR.HlSu6^=W)q>*56:=B*r(prob#$048Y$=)q%S,bR.!*W#NSo.C.aGptCJ%#n@e3+A]"emtH+Ll?WmCTP?._Oi+q"k?m`6WSJ6-e^o_UUt$C2/G+_G`l5";/+$I,DdFQ;g&iXY29(%&MH0<`sqj*1)i-fcnU-B7Z'E*6FDBC;&%&7YMuhNHkOksCeX9_nU()_gt#qV%LG>4HE%KX`4*I=\3"f?,g6Q4T:9W^JaFaq5N-76%aj.YIS)O/ghj<4<&K/mH88kj3Ze$BJkk4TT^+,c43&1%gdqd7s3`bO9f-ASGXoW1L`e&K8A$:1bU!fr%<acK>1qJFp8N([e[+Efa%L`C[dL$k*OfK5uN10'dV.3nRRm\rS%2V&R>j`<IFYcB3R$A;/2N4/I%`i%k_C"X8Eb)'J'Fl"^aG4MTY$f7`;'#C6Kp'_ff9;[7S%R8FJN1858O48?BZ[2F3eG*aVVr?)R2TJAarFZu0\,pD0c6WpUe5V<M"iA$;G_uhk-b_GlT#@mZFE_!V4U5*ZoZ0cC"AZ=d`Ys#(7%J)6Su]Pte$D5\\^/&epYI<].L-"8^D5)9Pt0(-0CJlFgn1?H<U!<87lV3DI"UWQHWiFZ=1?V3=sjHI/F=7T8LX,<^=37/j,J?HMt%Lu!q8??%;/?E$h@/XsSn"ZK(Rli"Y(Dlm0\'e^"Lnt2.5eD\IQ?H#M[ia5s,UU[m<FdJ"Nn>r$<$Y&.;heig5B^mO.3a'_OTJ/aA%7J*43'joMQgT7GP%],*A&Q&sp]L%ujLa?UGFRb[@@o=]"K2]CtNDPX[pqDI,Nans],c#ph[ZZ?OH-(JFgsKu296e-0g6(iPD-rPM%GE66+6Nc*^^Mui81ep7U;75RE<:u+*b.au^jFf$\Q_mQ`=)_OB!4ljU\nOGhim@mtbZqCh,$C*E]C/)hK[ORc8TBfR-XaJZ=m(4\%H%.r-9SL:An137Cfr$[;0->1-4"$.8(3s%J*N(CfX:J*f^8gG=:g+i64l](s7p6WR[`+BKN-CB?@F/O62Kn?!\(*.^[:)@kEuJ67%=r8^O_t<kff\3,m4):elq*WTUb.:Nh'm`?SRqYoe_4f`AM]@A$pZ:U*(_(S%Wg@<:(;sM"7m4"Pa?6nFcr/8R!dgD+I?eVML&3\L%eH!'m!)uk#[V8]U\bp$oV?*ZOiBq(-l(I&?MrS+/Rd-WSfVDC8U[+tn7g#PHBC+$Eq8)oefV?+kn'MV]0+56V1-\'?LUJ@Ed'grN%2eW?DAo!%=YNp?>BbM25BjMdh6'E4G+70LU[9rjRQQ!/3bp'S4B\Ib"2q7idrgjpgocLe%G1#pt`4IhtUf>XP3s-V^@-l/KAF7YP%ltEo`qI)TtCNjr0hOO[Eq,?Y*J4TEKn'5Ul[hh-oc6T\PoD-Xt-m!$=KXAO?&W`GfRkkO74_S]XW&)u;A`T6?:o.Q!CsFFu-7<6h%c8`bK]lWVe-t5W]MqFT6&FIaQk\s_>c9<o?_]C>fG$:P"6N5QpZiH#nl&o3uq)Vds#ee`Sa)\@T.6JBe.bsaUjblB6V4Trq-fkq^%Y/J%h`#^:2Q5bHi]NgaAIXX@aQ?t2ViNdk.gg+_(WKm!s=\rkZjQGL-Ul`Z$/dlbUR+GRq$a__N6u81n8efm"\h'*)8>jW422@NF%U;l\/IU*-Qm]p,a]/p"@\1H"sTt9$"=eIH:C!l%JCh1./-RP16:E##/ElWG;LW>!JMN*`\(;BK*O%C3h5@Xf$%ri*>)QLN9dq+(;%7Hn`W"]@6@X<_$dMC-QbAQcfl=\e1h"pst2[`_"5gb4utOkr!&*XbYteC3Nai9T\[LW=Frn=I,0E_"C$nlT;_AA^!+A/i>X=J4lO%?12d`\GGHp5gMfKU@#4)4SI66iL"J[a7@L=Q^1$sJ(Pgc`jU'mJV8?Ws+1\#"8/!_-QV,cQC8-_rH(1D5iTQ55YqH0`/O4FO"BIt%FfL*oW?];g>)QR4n'UW'<Rotu)m6/Momg_n1RC]MlCfYX&jZgH?42N[#!b#W%NXc9qfJW,8?iea[I7_r[(Z)p@u<D,NU;Q@+7jX>%gDJ.P'n!3]O1B*b_]:65kND-;lK,75Re*dcqtf-fqJOZRh)LMZk8cWV$:UU,Z?t`Nd9T"*gKLX$<#t+GYF,rS8@-(7dRfjiUm1Yp%cqXf%KRW@Zppq]^4S##2+fm31#;[a@OY-^Za0,S,Rd[9t1Uij*VJqr",@L`r?%a_jSc;?aP(jIJYb<4"k5D$!7VU+_7R!XT^maG7%<H-041p.`?*lXL;eB!P@NL@KU2@63(:c!lE>9Qi,rdD'rT>thX2F+p0!,KED]I_U;Kj\lTdd^KX,$d-;*Y0TkJH(5'+b&5D%D,d.%dYJ>A:HDe["eBk?me@Z(DmF<[#(^6&>7O"k2)PsG[<4JG;`SHW6Hf)5X4s3r2.t9]8cD$8Jj=@b6:6Y"o2K]60Q#.9,^a;;1IB9!%#a*P=+M(?hNTX;A6*`j9ibbPdlt043YWi]c\nSf;S*5*rC?2QJ\B1PX:t&?BY?eP%c;H-#9fEA8JUI#PGo,e@U-VS.K]A$D&D(cX%37U&RZT0h](FlmH8M4Oj#qV.18oVOU^S:),OL'+AP8C16:c&TGPXW-mg65>)D0Ep=!^kAAH_(i9W>9a:)<MoY1V5hWQ)080j_RB;%'+:Zm6?V5:r$=8=(!%W!!ahIQ.h6BN!l3o67.'QDE]$o&=.s;k$4Q4rVCVo_'aimnfZu+cXR/19:d(63HND-gT&1UTCR0@pc7eL*%3kgokS``6%`T_GV&W"u5FBsFe(i_HA@s>'/kRt(eNXj9RI8EM#eQpT>!eR2RBMkQU"X5JG&H_,qcH%,D-kV3CSY%r/-p;M-]2m27%)f(a;bu2E8oZaDWh)QOBSe$0L/<+oT0kHZ_KegqN?9[$EWK-Ya86KXhVYjJ_@'Ket>f_'b3,?7TN*<rq%7^;JF>54ehnmB=<,JML%m`UC6lM$gMUpcfM;CsqObe%1CgRD6#;LFr7[>5bE0%t/!`7NcRM'#Zi@^PfiVXUXA=?QSrcaK342rfhr;TZ?#(h,.u*M23m4EI()%=3CP^j'%K.BcZUCNt@KgMc._X]ZB-&m:R1G^lAdh_N<L`X<AlbZXAg\g1>Pia#EM.J<X_d8ZQ['X!0q*)/EQL;2Qj`_(#YlF@d7S%U8<b>N%.WO[B\$;,S?=U;S)VN+$"W+lneKFW],$KDH.WK^h@R3=(CS;-VC;S%Fmm-Gf/<W,'67*#S3cDKslPIK^d9dX2j"Lm6<3.%Is:K6%rORTn(;Jn$mY&K>o'@_G</8^"_#i[h&fUE;!IL=V>,#^I8u-F:sn]g26>90<i^+Yb[i#JYIj@&HgN#6(fm`XB'^F'pZ3Ec%:9>en=aI1m's]g#=[i/79e%U.63.mmjdM&\R0*=R83m+JF^TPr^rOqX>IBGJ\NbT$)#<O!iYk%LDREFMa+u@[g1:H=Hfjs!>\f1]%Y>uD9p=OgXY&dqJi(-:o1;I,m:pgr=iYXpdHa?UUK5b-SWBJ9L@7O._lfdQ8>u?EFD37e$"AlEfWa;^j(Nmk$Gm>rNDm<Gnm.U!M%%`1+E'_Xj?A@"LL*SAd)I1q@L@sb!AD$Y*U;BVQO`1$]Hd.+ad_t,5aZ#qgK$hDYn]mPs]IQ<3B]tJ[k&em=si;an&Z`hGt@+1*1%H]WEjhuPh.[\hRNX@Mm+=?SneNj<hE^/ZiJr''m2+2;npEj-K1$N2:5$pPG'&Oh'Y$)@%F=F#0pni@>qG@MBJH'NWBHr>?0OIt5A%TBiHm!O&B$0%4T<:dEr^(68j`V]&W6>m/Fa%5--#?9Ca\X6,6]hYZj/J.>NQdci-IVVaFT,Yt&OqiBBpZ,#qK0H@^UH.iB%<i`*P%\&/g^\lWJI1GFNTGmGI/CK"gB6qDoCgtWP#nO^=Z!aBr=nb^NKSut<bRf]Nr"2JQn4qK`dJ5@OXJ7;>2.3e[V-rB'\!i$_]OibAC%h;`E`,0JBYEkUC:Ggic+3kl&[qEW\H5U]O?&=gjkWB>'*ocTY,LF4C>*H++cInu]V;r-(N+R\-skXI^Id9EppEFPHQXG`*pIY?Pm%^E:Q;odjPt;tZsl?qn%i+1cqBT%fqG>DD%C2&jP`h.d792kQF:i<aaK,\m$G7:;OR8\a&WPELGNb_,V`R6E-s6Me'\"G\iGFk:G@%S6$/2QhbaA+Ftfj5*.b8ZZSpRU#eQN!CD5L)jNOd'4I+qpFWITZ2m:D8esR0&n-nD9j#GC5Hd>$Sf1X!"b$m#&-&@**L\t,GL\n-%'?b]W7i^&g3%C(48b^\WW)h+TW<8lp:*:UD*Q;J*B*9tbc(W=qOVsf@h0`3B\V2g`[oF,FKoHCc%\-$k_j%/B,Hg>?Bf^A.`7.id%G2`.J;`F@Gb^0CGD%-,u6:O5*a%YNY):G'qjuEj+2<f[j3BFlo?\RXP0)aSsRVG9n\$PA$9$]HO),6>:FU`YO5Pa:M94i[p&BLik%83t#NUB!"RoN0]3HG%O=Hu=>c\Is0M!82#!3-i>ueN(n!8^.Q55u0h94do,Yk"BIWBOW%K`L1KG()NsgE&J`%MKVT<Vi@X'=a"sn%"b*d!K:"SZNk<)@[nrVu#@"/Vh["n)&tG/Bq@ipjX/s#\"Tl.ZOkfT:+H(B,n_EtC\ktk-=N)!O[p.c/fMuUa8ZG*nD^=dX#X.L7%?O)<hM1UE7JL-#.M3(dmDg?UrOMBoDG3MucSeP2bm"Pra&QW(tom7!R[1?oUOZ\=uW7V@I<tOBo\.<_sS5!/bb%G'"$1I[IcHJ`Q%aT'<8TBfUb,Z.t-(XtZ3OeXbMfC4l#itO0a.\pAX6.R8G:uLducXQ;XRFs(;6GKnuM!O$#/]Wm2<qlLjbp"j_?:[A]aQTe^&jOM1%kjRtYHenYL8^fYR!:BRU/Q7LMA2Xp'/;.%iE76CtlY%n&1'I9M^@1$CESCkXM[^Z!O=9oS,^=.)MG\,r<"&T9B^^q\Z,C/-_TdKq%.HpY;iW4Bhpmr]Q>G[pSW#IS:fD(kGr;ut#SQ`,6S+S\U$5[[EIK?'C/97:WV##M3:Da+G7^#jZ"XO*18Eq?6%b3O^TAL$-q_TC#%<Kk/Cg4mslSetuuKJ#4F,(bd!g:rfU8Bc.3NOCTDQ+qYPGZ2TPoJqEe;q%4&Jmsl\@fcKIH0tAN(9`LHM\qW1C6E65Y;U$2[HshS%Dh9Y*mf#AcShV/lcN+``_ZZG&d+>K1"6Yb>?MNYhp[T01Sg2nh-+?r#Q#TBM(+cN>l1Y>0JLV8FU;@YWLS$NRB(r7r\PaC-B0P&J%bjpA(SLhA/s(J^<ZnpR-PmPUalDXA$M.pJlQt7\*1tcR;mtos_?OU$HO4%(0T43@hXl65s(O-dPpRKsgIDu9u%8PfX@SkBM*18U3%nY"aJafWPU\oX1MpSl\@"rQfmjW-uD(0oFKl(^g.2=A4.HNpRK+([l1l/+%5'b<k5d?i9]4pCTLCR')sPqd63/g_1jn&cd!kMLB5%BZX[@O\MM^g/tE!CR*ZV4:t'3Wb9"5m=TO'M,"31m\pr&s/K+A"*.^-Rcm#)SigU@2l8]'bJ9V]O+`L42(bEoepgWOecf6]:dT_2%q_u]u.-)PF6-jTe#LodRO`"ID>`L@rWq%B<bP:j4`B[.7)qES)9h'hO[KOpa@k"of=*ao)1mjl_71H$Ldt1s*gbufERC+ppD2[_L%A=hs8l_<ptS%9kaB^4c8:]%F>6Wm9'Pd^Qg^LoaMce"`*rf"[2[E!![RckV_r0m?$)=T8W=dkSX8eKsYDP-[hZM0m/>NL-[A6iFK%GeOro>LZ%aOi)j!s(_O`&mAaYT%:Nfp@.nIZdVu7@c4WY5c@4JAL%qgLZB-.i&JtjR<sL[JY`MVlaP$X!6Y=4RV;-]gm24g4+Td.%m*#t"EWAeBC)Ign,qJnj3&.dLka\D3p.R&mcTP:1lR<QWJK_s44UK1`"OpA17=#1"fWC'ZO0;SaQsdWKqBdP?1psVdAZIC]6*fO\%rQf:\XhsOJ*bs`(.QNaC`ZmN7k<^ps=oUqQ_";!Vm\.h^Ic/CP-H"fL[R[<,jmmGbpY@i;pQ-gi1lbJSb**X_;SBcq1'4-;GqGf3%U_@tdW'$I,`_:IG!"lmTVmpG:<Mc/dSbh!uRnmS)g"IWm[IW)?H6hc@YH,BAeZj3`[_#4_Yh/DXht4aW__Q,cXJKuI!T(D0big7f%=KWe\S((8\NW]fuYu,>%&fF;2lR,7;>MR9&,hjgJf9s+*YB8Fm1*hnDbWaUVo\6!KqcCMGNN'cbaPc'Eh`-A4H/DCQ5Pt>5pGq\s%$*_/5M2_=uU:Qe91Z/<5;WcXc?DMP=a;7cST9U;'omVoHP#g>LdD[l2OMK>+4O`CX2?]*JW]D;]_M(Z[IJiud0VG6<7D'0'>T[DM%?$`T9T)mfJl,U5C/>o(WfhgK&2q(X#)uM*W'=sh78OhR6gPN`=Tm[=4A$9fRH8apG#>sd.Ie"j(df/^p<9#R2bL>#pqqW)DX)_D/%:oAL*Bd:;!N(%JsiLm'$[Qc$QKh$@+F:T5pf#MR95:HVJ$PGKX[RAFrd$7dc:uh9()`'OiXOIdKP9Gt@]G7n(D2FsBkKgFWp)`<R%ZB1W[fVWK:<Kc6p8Y"k`9nt:*m79`j=tT>i@NGPR@32H`+Jf&(7)#S`HB@%S5mdCb6hY-[q4iAUdrS+8I3)BHj(VYi9g\Dm3H.)_%8^a&*f!ji_4Y&)?+%4=lkFa(4aju\pph8kTT,X#V!t8I=;LC/H,RQojR3[-7kA/`/Jc*E'c##k7ifoRi=om?P^O[87!c%+GF\93_%-pPFDkbkK2[VkuUAlX__6N)s)8cN`90^LE_%^tA"'VJ(@Iq+2hFBBU;)7;-@O<MI+$HILpbp;#t)juSce=T/sV.0I&`7ms9K6^Zi%ZnhObf)184Vd%W_7"0L1rTCX#.)Z,QO?>JQ.O8QK9.O31DmSM*HYZDk"rB,)/+")5HBI-=SO+;<P$2[]I]=to3F[#dg>[:a?`c4q%)2:D`R/K/g)!7R:h4,s2Q<I#3lXCFV;FPYQ?J)/K#`.d^3)k63NN?m1D]4+O<IF]O6-Lr[b4]-8<Fh-W^Mb!4;.c`j,4"6,</+rT%65=Da5&8DdG'G6rc$Q&32b\Wu/:k1#IVaMuLf&Ol9cK$oFiD)V?m$7.nk6$aHU#nJ#up6P-FMV`fjia=Gj_Pa5l0AOC!_!l-+nam%IO3Yb];GEM5DiRUc5DFB,\)BB7e`*3\OI"h]R:Fgqcm!%LFA\AQOWQY`RV?PH!IAC(:f_$7X,bY_.(kVhNsb+5MW=6ZB!8KT6mtk%(GGppP$sQBShrT"2^h0lksiW04-,<m,Y:q=jPs=)S\b2DoXsaN\rr"M@%&C`+,,RiQ\OGH)&r<6ZHJg[jOEFG">d$$%SSZSm(P'F%K+Fr6Fm7_B9LG\&LsWMD]FW\*XF4'J$KR`(1dtK0l9Z/a\=D^l9tqq`9tt3I:%LesHn`iGp,qfrZn`\l4^lU7PA>n3L+5o3+q%2O%BdQ+YV3G3+'B.:pa7]fCBU<_JXm==j'*XfY&><eb'Af't3<uIME]C[)F9\X#]8j6B31U163;n73Cgp<i3emB0_.e']k$a*_XmQ43%Cmt0V_i]>eVO=):Ckq=MB7ckjj##UIU^n'ma2HS?N0RV4cj1V[B"$Xg%321$V20D?LSgIkf^,_JB_j#pB_j$M'9Eh9Zf7.E.+.#W%VNmVF`1ZB5emMNhROO<8;%eS[R<dP(EdF]clP2Nj\L/R,XhZb0Tn^pFBoZ<#jna4+C'o,lRZkSc:WK?C]C0=-#4A(i.!BE115Bid%.QOQ*7ttrJ9G^o.165N2Neu]$<fi:i"fJoj(&`/lRbK#KKM'k6?4(%rrINaF2MU"c$BDN(di>dk$;GS\n&r0A29rL;Oq(3-6F7:J%1p&WX]gC1Q%DspOioT/2O!E+IDk.JPY>4[>+P>;=YkAB`,on$:9f)*=8&l*6oBQPB:hZ<hr<`Niic+kDMi^4u8F:-As!-EXA(/S$%%O[HCk`Llg6D_;P'!smJ0e6$*:,>1_fr*ri1h=h[h8*gfC_MjK_.cM.cZ*om1=E0jE12sQ:;Q1]`51[`gVN,"F)[TDho5!`#,`p?%\`MJNP/N?#;=(GnJsHm_g+na,/JGC'NE#[D(n5-cq"-/TGcK35YD@O4O[l"(f>,q&)(/UQ$gh;u0CC?@OYimk3^?P2UWb"(357jC%=Pu2T2Vt?0%$B[s7o3GL24tRFKb@M.4H+4a(RX?pm(dVAkGW.fSZ-:JeS._/J.met(tFK]&g)tsI,\ba&lq>#.ccnPj.30k;car;%[?OX)LmfQW9NNR10f05@+=R%<N>Zhs<N4)@L:r@!/sXTgH4JlT9G',h8[faq>Yb!i>WcTFZK*$%o4R?n13sqj&q"k#laBLSb)'kh%%RJmmoVK)N97uOp8bf]BXSICW#S)W#g%Ies9W>eXBDW=&,s(PJ!hQGB+.,G04G.<8+@B7;*FNVtI%,)k49VZ_Z((\uT.8Wu-$J$L%X*$f_3(jWU7`[9LfQ\E:5QTqU8MaH5l_JiW]=&*+=J92WXF=MH'c)[=AK"L([-cit8*_!pZm-$1*[?f$r@(@?<CtfHCab,jQ))/:%>0iNu"n[BD<Dp3jk2?Xjj\^bqY*j<W[p1L;U\J;6.`6BBMMbcHUP7a?;JaRUrD+;P%plAqFAtN9SRBb(B7=/ajWr(,XC2]8AO3A!%$Ln^>AP&5_U$&k#FglCY[gO<Eag,\q%WdtQ^J@qA&GA`ZB9.+QWS2M4GHlOa_huX0(Q])#/.\\ZpQT;[B"BaRkb5.C0Vgt.'["i<%48RE^A(E^)<f.VDi52]j9^aEs5p$+k]]46?R_$g477FSeE4T"gQb=Z^Pfm4Li$7,)%r503\/(fW$eeF'DM8%[]HPK6O8DOU\RHP8%+;c\r(aGK^T"8t=rRf]$0pq>3$fr@m\*e\Ek;H#OWqS*PN)]7o)K&oa]Gr47Z12sigO6]l?FAj\R'a1kMB^q=:;S@VPgj<G;5Y0b%_+@dmCsm(8q.#V_lLsKL/02:bfd'#+2=J"kOtu(/*jda;Y%<B)P8#4sn2<j@5Q/_OBpOEDRUn6GnY5".&d*sXD"t;1;Y9g+$q(F\%''SML9i@e1?h4GfAcd<4fd*]oJ$*UM,'!Ab[$\VpFs=r78228Kgqk7(p$hj->GT=l^.X&NF)oGbE9SW-(?r:CYUrcNb>V_dBm+&+%.Ns`"[Eah%b-LR'KpH?(oW[7bOk(sR]X-Os)>j!5i+/(b/a<m7ce0,BX$g8P8S`N6m5@P:9622=1eY\2bqb]_[C\?<2G.aD<Q$Ua%CKHLaD3Ubj\$HO^">Jl[X79Wl^ULn(qs^JH=iu/toMh3S=GZ!/G\N1AEU`nrc=HoU1.s>H;qD=OF&\oA,?q!W@2u>4$_nuJoW4:]%8m`38V-2p]"2+QS<[h(s4YgQ:X+&Q7Q/^-sr2`J#U9[1m8o%CNb,nX`At,V6[<lZj,o0Nd`0prO3iuu"[#S5sgFU=T>5-c&`Hnao%/@1Qt&,+pZErg&HfYCp\@NG3.XO8#h[oEc]MI,1@Bm&+=D3].QN@Br)=(aKBNiIkEAmAKjj!!l1Lfcu];2\tc'P%RP=HHMi7Kt;%%Z:X?p&SAIC/$`FK"ILO(^_OYYB&We4#fe8<jhR'sd^mn>_C!NjYXsoBfVCANgrLgrKP&648KiqX[;F?,2O7j:K"GENCm0I_i%>m#%/Q.IZWDj,DflV%.8BRK?dVfBWf4+,!]\-$Tb5Z'V[BBl_k0*<qd$<-gQ<f]U;>3R+!lHsZ%$8R/5PAY-@7VCh'WL\2g8kQU'.Sb_%HkIGF5TM@g.l\g$*D7dg/(CZ)A-iq2oU'4KU;Dhgoj6>\D+5Vfq6gm4]d'rE$Lmkcr%rfU;j6:')%7^K6*9ih+6@+Nfhe2g6+lV-%:;KkGV77H8Ss1jNZgUh:o!fnE!dnOXb2_>EOV<R6Dtlm^G&7]\k4UO/:cRXqL>?uPd8P/-eq5*Fol+kF_oRGci1(D;7(@:`:kO13%5^'1Geuf%]S@,STSk%p,b%"61Q/$HoU(hda!l,2!"3RB'NW]sZnqS+3NYck/1Jl%Pi.*@qP9`l3[[u6Zih%I.>$$&LlEqV#<M-6s%g>u1,1&1XO91S_DRuRS;hmc^G$L:=K!#Smk/AHBc(G\[KkG@'Db\NMa?Dd\s,]XYH828KGMC"SMjmDC<f<*W^FQ)/1;I[Xh0!8:s%Z<2LhIoqdu%,=lkl?<s@Lsi#F<&+>afnSC`&GG-D3["T5;:&o5rf38_CZGa-J&f^kHZRufd+?5)22LPQZ;8e=m4<alhQ;`u2#`Nc%U]X\/r#JuJ-Y39!W=O`YOTaU),9VB]K\!C5FpJq7Vc)P"anR</36:PDrP:R'H,g09gKk6HmoWOoeqW^=.PkrochKR3Yep%Phl4Eg%dW<@a--=0a-/";fI\$<T`<6iA]Y_2E,`BXkIIbDfctao'`[0#0D!B5H8T1;A`H;:BJ3+):-lr=k1H4S2!A`l-3V6ecaSXP)5g]u&%!&L&>#e,g[f.Y6.cWOl,[GDUrS>Z/Fq?qDI:0C'9[6!0N5.eStW3^+B;Bl^96.^H32s0rFG)se^oh<#Io\6J7$OJpEdg=6Q>UPp_%fAt=m5+@i8#B#T2:lupQm+PGQj;Qj`kB$+/q!,4dc&@`&NA)Q9\0eu,'bGL2Y$"/<GY#BH=DF8,LHo)la[TOMAAgs!)*pcM&_CPh%==#2p<I;8n`&26G[^J`?!SoBgKt&JO6]8WGh&S"3MFX35HVD`8d-VuJNG8UX%(IVf9&uEYE/f^[fdOXYRS*ac^X)Zk]sHVQ7jj/]%-'NW)mr7\SMiK[1LBG'3U4[8]B-ktfhnf1JN$d'&I%53Llmt3=85/Mf7;DMoU2a>@5$<!g@;*sS(b..q>9ItV\Q6#SH#uX?6or$'%S",=Wr4UKE'pKGg:>J"@JiAS1*Ma/B`5.YG3<nI1\^e!hm;XJD7akt6F6PODc51%I?()QWds[k%Zd\A.k3Z\?^/7)oSP7(Emtq?3%R1>BX$m6,.$,*,0E0BHf\".EJ8:cC]9.nZR0H,WTR?L;LREA"^<nn5_7A,heEoZ6/OdSOEF6Cu6]OEo@9$6##AA@J)3_G\Z,5d4;%Ii1Pn6omm@JMK]rOBS4DV?488%nWHdIb@=_TEdm.,MF8us7TY8a70WAb?8qW-#)L:UVl'_fS`74If,`h.8(BE_CJ%#)&[OXeEYg'%B@&rqY8196;i=6(ZH!i)m-s&i`u0!oWb/:sqEAN%k"H#>`KtNWfiF\laC@n2_Vr>H7o\1KF@gZ*92_GTra01tJM,'75Y&pr[?,)8%JN9PG#bqM`;Q'#S<WX:u;lUMr":jKR]2qUt,:*[mr^`^B8\i,TUrI-9c^[5?D*Rlf)hGZm)CL#pZbjQ6q/[*]&Oua>=&&?oi7e.<%fd#F7@c#F(X5B'sRMu7tPO'^jUE*.%P^6:Q\*ZbPI[D3,X7W>t:'.f)dLVN]VT$sC*]m#.o])]eWtA5";!H$ir]V8!#R]Lld>nkg%?D5cAnG7t1,aJ&-PJ3&L5IMLW[;lL=V8ihMl]kAc6!:X=V:(E:T4DX-&6sCpL.76O/\[OHdA*`=lm\\V8WH8iA6Yi/1@&):+0O7[%@mI+$qaa*&]nDj.O/)Q/!O;"]5</duU;rV*!)g$t't@JC<p5-8f>B;O3K'oX4YksZbX0k?B#Y[BJ5ClCfZb*fa\=(h6U22>$PWZb%OpD)"R6j/`G:bjq)$@aZ5@L!?#/lDb<E=i`5cAVWI,HNdK8R^3[M1Hh6#+,r>HKl/,768n?-#)5KVHLE_G^$CUM+RchOI(KMM7g7%&HosUL6I6E+AT)qKCj=._2/2@>62:iH631CE=<+9$*@.<!L;QC.;T\$@Kgp"(F'3=>2O=R.L:\B'W83Xgi9rpEmfV$)^C,q=LUEL%?<l7?b0gRtN=fc*"G+QPp_A'IZ6Y#e=f0)Zm''+cJadR5loPK+WpIno`)p'J`?'%oGXntY"[]2*V)YrtJlrE?7"MR"L8QPr5cbo2%2-l(@@4<g]P998<<?jIV_dI;P+btWgF0l((J^2t/@A'k['+P,8`=cUPQXoN1eQ_/ZH\0Nl_E_?ses.6[@QAT^!/puQf.5Un@i_aF%W70CCJU;L>4.Kmp"N$h>q2POHgbH1-5p2-d1DTIX&899i$p+_O>idgJJM?nn^+0OI,3sZ4JP^g/\WaHD`]W`R?@Or)'OQhJ&C-ii%WML11_UgO?&lBcFGC(4S,P:STI3LAoZL8Q%i/[-pG!5I5d%L^IYsu=^Y3)ZG?4Hj4+:,BqL[uN1&2^(Y7;RtkqRe"q&qQ\^^"Ra5%&I<t>TT9E_5pGc;"G3p)!^T>"!^T<lJKRLLc"I944sd<LlOf7%a9$3%=4jE==8n3_c-%'a7"RBta-EN2l_IHAJKUJ^b9jLnj4c#p%bH7*2F)GRVLlQ)%>3"pC16H)pQ"eh0[T"a*XH@iN\P/r"?1$X2>c*q<-(,]/Rjp%]V)4[?BCg^B+m<C[d]L*Z,^1jSC,b$RVNK"X%7g-sYQ"^^C-Xa]Wau%.iA47us*5N=)WD%@;e9M#m$q2`?nd]c`DKQ3:-rQHuJeaSKUb[MlWl7P/e]>7caC[JrPL+D^><)dW>Ia:>%M,$fEQ:\i\5`.QcVOSu(8jMF,e2.bA[jJ/OVKm*-SmiT/%^50CBpuLTCcXmGS;qVX<mKK6UQ`;GB?KIu<i,Y/i6P.dm#5J8S>J;W%U7[sQ#o]0r(GMa99-U:uaNiF\\[?l#m@:%)P)F$l2e:u+c$nHQiQmuI?L33mp-f;a3FCeJf1RdcEG80igJ&YmMhEGD]SK`\6IW":%M2m69m+<iO1JK:0Ob2kO->[dLh'/P,7W`l&1`a\0BKEFTEaOhL-HVIu&P)#q<5.g.b#hE:h4Tq$Ub2Y6,+3'e'=lKo&DA^-'7j[A%9nEPCG9]P(DF8dmrk:g%q5KE<'G*-3mQ;+dJH(@/)tQqO?V";>LkL`YdYi&&&Lk>l\k%o<8a30cY"Noe?4obLPDm"aejEfA:&8!\%oBH#HamZMfpt9R_9O^YHCBQ\<(7ci!<;\:g8(*T.-'ns`r-aF[3Y9CZ)1O7bV/g<cN6Pf*r7#M;A5$gS_m+jU@BrmI'bEXne73O<%5ZYIprq`X`<n^oV9dJRB,UWPd[?OnOpSA@)QPhmBlgl?B`5-5LFTEDLVht\cMfLjHIjO*6#a--T]U>E9;.\cLhuTK@M;`-VkWtjD%D^6U0?cg,#\IrcAGpI]2*h^u^P"TXP=%c58QB9;;/;)Ga8Bt/Q$qQ\2p)A5QpCBI[CA;UkC_>[f5bL5l-^+O]^Q`"dJ$BF#Y_cS2%C")R2O9flXbnb-#865?5lJa5i1i#SRAk*1a7q.MU8G#XNn2bM=\G1%ki(Y,JigaQO@#BI>*/2V-j`1P!/SH9)(GO5h8Q,90EF^+O%^.B;J3,M+]q39P!NsPl=)o1F@RRiLmEA>Zp3A(&Pe3H?pM5F2p[0#3]9@Cr5H)%%Q,Dh<gE#Rdf"A-WH7@"Rad.+%+/5[uP4a'49%L7k21d(jol8`cbc\buX?V-k;e'+H88o#k"\LP9bSjrCt5\LB3;,=j4Ioc9Y/,e(Wg014nVU!TuSY]TVZgXQ%:`1Q/:8"L0E8J#b\%1hM($c6hIajY2)mmqe-u'_6D&Dk>)P7$*^m$iQ46XEmaK32+t/<L!P;]Vda7<%X!"btU.a1Vfu7R<K8:k2iA]P`dLpE4uq\g\NZ:%!)Ut,>:kU[p`d!ZK77dYOW,j4,UI)q`,rJY0ZO:0]`mIi$7\$YQukS"j$B(,p?4qSI0Omo/"7ZB$4UMVGMf\I^>Mj1jr.cR*,)$R%#jU^mVrTl`cfI!e*YrS>;!Qb@7C>-Dj6*bYW+m"l,/toF=;>U[TfWmWA>L(1#4^H"^5>Q,QmcoYc=ad9e;!m'aJOt'`.s[)Mjhn4%&PAYHAh'D'Ts9SI'1nnMUfPs\9p.gu4"ocBlT&+63"SWWKEXhA+0PDlDF78%o%l<hibb4t-OZ"n>[VZXT<ea)U*lKqH;9aM:93<,%JqV?BR.;u6B>jY@9uB_8E5ZYiW09&A82YYJ50$.C[IBQhj'6Crr*#@Y=1!faQg`jP[#C'cUd/el.iCKbR$:d^iYqcf9C?\7'OQU@%?DjErdTRP(7=P6lo?DW?,9U@>\*5_EUZlFpFfI(^6WWa9Y;N?_"HZ?]P=m^0$j0fgm>E5,Q*Q@&,UhW&\>mnNU92,9j:"JPm.S$O%\^+S:`kh!.;*RL?!/\isC@,\4GhHls<)!]eL>9Jmqf%&AZ>Bj&ii8lf]tMGm[,XK`>Ou17A+?Y4l,jm<KR_9]d2l5VZ8Nihrnu)L%g6&"o7gdp[+-W/OE$@AIQ;#\oB+akT?UPD1Not,"?+LMkUrGtS,hT4qY8BKP!=a%k/urMZ9^Wf-^g_8Vd6i@ejFpoa<bQB_e?[eL%,@foe$3dSK_6Di&O1j;F&Yi9nnS;;#,3_&4VCN@hX%;fqfuW-*POe:\*bHDTZ)j90a*B0kR;k3TCT(o+f+u&(a(?"Xh\BXr2ODS%%Cc`,t+`1Pkj)>[ZT&4]2/m06WgQ'0&L:.Y:*+\S[fl?f^gT$(r\1@qJm`:E"KXgL-f\])*A`Y;SbDmU`qiLR*1$"?G4hG@eB:6Ap%+8mNI[To-GR,`:qkFZ8.5uM3CCqW(l]MN._5pGNHNB,eMj0EZ9@h-u6U.<t*K7lG#D5N#uR>naGEi&VM2=<.5C!;!0V)IJO5fp#d%>YhkRr_9[\Lb7tc+(Xp.miUCV?cRF:EeckLjRk#jMV.5rIZjN[h`nb,#Q[69=ZntGF$c2)%N=!Nreml#$hK\fTlRU%I\tDp,(Fam%o4sd&+__$/ppG1DXaJ?IdrImMK\Cq_@rE/Mi9q-F7`tP@=@DVO`/8&gB3!:"c>G+6ZFN&:A+Da7jQY4KQ`0<'/abUTR>;n]&iZ]5%cQam]^bORhAU3:5$Ieo$_m@-arlqaK)bK):XHlZpLSS(>E=sbc/=5g01;B_!F`'>fKB`!W*BZ++O^\_np$X?M&s@N5U*s>=bUD6/%bcQWi'mMf06M.Nm>3B)6cWuJ?T^U&\`1fe.;5`MHMI7kT^Q'k+hq-DKC&3Bt@H@[ZFuXOBIETQ2$$=Ft5DmCbj@a(\#S+6cUPb_L%>F&'9G!X9qX4TIBAHLf+>*f(00dk.']imQNS6L;<&S=JHVnkfTq=[NT_a>"[lQkQ,cB8bM=TYTnW(DAr<E8m_q.&6llQriWoVgE<%5dCn^h+RMd?l\.S(h3l/*`M(=DM:Acn8UOd0U0QF<hW-GpZ&)DWpDkn<G7K_o6,qZ!=tSZ:U,g8Tp9_`d%b%T5nTm.M])j<F@]dd%6^+7(LlPId67S/T#`l;GB]]f,%DEJgeZjA[E7b5OK,j`ud3<ehIM(Ah`Quqtf5)2-k25LKn`TaGVeB1OqAuUbQV#[]ai3"ba^:8h%DZYBG,fLR+^LD0oa\A%U[3%TE.C=56*e#-1l\.a%1;aKm<pML;!T*J(UATH)#VTs$@c2Ncqk@A2-."*J#',YD8Ps`LKYemB@6`%`%XZddAM7=@[_94*&FW.J!(LKo%j&NcPRGb&ek<k4heG;)S\E*krcOM5d$'UV*'$'')`iZ-9VB1%e'kcOR9m:jmT&ECs2>?Y,-&YE]%q/bZn=bcai7f*"Jd0tZG.esE0f&HK"mI6b1?"aa":R2.d;M?n/,B\:f&Qo2LU<5#1I"mi4$h;27JZ192.@@L\fE"XXM&8S5Xg%O*%'numn)tS'f*?D(>]@JaK!o4Rhon\\#e9osI?^U\XLLq4IrcTub&q?;hmZ<^WNb^,C:XlDs%X5.J'%`Zom[uZ/G>2]hpeI[(L91sV%AL;gOM]N#-F1th/eY$N@4$pfnq\1Z,!AUtFj`2_N__-Fas1WsQ4sqG)B=GeW#ma"@\3J&.[;d[Oqm4KlYT<.>[B0q7Ku4qd\&B,Y%*:=>n6i'D5-(&'(lV3].1Q@__Xemf?a5N'*qu(QEPNem-Iu_/>fq.;E[m/!d*#@CnKtEmoZ5,lQ4+D(b"h%mO9!bNIG<<Ba4g,M"%*8Ag:5kl=MSdu.1W[g0c*u&IhC(eg89L81obLqo4H5pX]Zi*G'Zi)30^4.+phTg::8iSrpC^6tjl-RQ*r^=`lm;9lL&/_[cm9#rJ%XWDEX1VGlZ[iOf4Fq@C9A$(<KNu@$$CTVe*nWe!14#S##pa'i?2WVH^#W,</Zr7T_gYZfG9<nlf5K=Fi318iT<L936T](F4W[jW]%J8fIXH]n^e(n+HX4'.8`-(t1GM6G)2L6)s^G$X&9.nXCJ6de`MD/clAf"&:.2>GME@kNl6q>:fDNEi)epqs=@YKQ#\l"7cNT-Xof%la\TWoE$\7*^ngakRjM&a2V`;HW\eA)SKO[gE38""8Ier=;;I.b%,@eghPO0,&A<TGM3]ARC?R/Q-jV4([IfmC+gKD-.X76\#nej%Cgp_JS`']U"8P&a=-aP/nihM)"ri/O6L(Ad@;i'q7h:+'AB++=`ChJ[&XES\RB6f"Z4ll7oMXV;,:o8,Y@7!c;]0@a^5b]X7Ou$s%jl^p9ih*BsYlEGa5WT>)Y`k.!3@)XG!Gg.W1AoK7g_Zs3iT.<)`b.LH@BFV1f_+%_Y_BP#Y,Y-W+E!UX[*38(3fCS-e)O)e?_r]1%/B6WX6=qZ`&+.Aea'gPP:R;?d0Q,)KKS0n"XMnb[mj_D_!$PMW_=tdJcHKSXPV]M&WbA<^e@=nK-=l;@QHqul8E3@kKp0ce6+/\Q%f>k#tEVFH%l.*`PHf6K_W>R"@m;["1_5E=r=ki6$pKmTA\%8rMS)]_M2k=c@7uVlk>jA.&m4N]4mFi]\!HZ]$*=n(=gfsu@L,'`&%Dr)B*I7cX@3WQAC\;:dY(ED9i+WZs2.U]g^eO42.+"[C,J_\UHS!a[Zl%?1MK1'j-b-Q_W>HY_YAF@tuhpS"tngHlRIGRc3M+@rH%a0_<Q'>s7Q>'sO1L[in=)UWZ4r%SHLo&jIHJ>i>8,#Gf[8@nam[qZYAc$EO?X?7_)RDDfL]dHH*g_(^DP,r>Ps37jmG8;Ib/6YnI%pAt_sh,<=D=!'WP-ClTCo71tqKRH?4fbHcrYQ6sN;D$RUIs$W$4'IEjrS;j/8jiN&c3=IfKp^&)qu$FUg&@i7.1m+<bk8O^)O@;>%`9s_bc1g&VK5[hRMr21!%UQ,h4JfU6VKj6.@67ILicQLWo8fGC_[/&B'5prKgTR$*h`kR8Dt[,QOTq9P=T]kbU"PSA*eBZ:K0V3j%nFJMX(?"!\&WU\_X1PP-$?QgRgr&DR-jr2q#&7.)h\Fe\M!dSRP2NZ^VN[VChO5e83j%fP.h[]SFW8RuYH0T(:i1AoP+fEa.LQ\-%*XT;3V!u3q#<BO9^3T!-?3h?[-N(0/e_fCeh8K2kfPRj_Xb!'fJ"ND+i8X2Ofkb3U^YWs5N_<bmghO>_B_XV[ZX8,[Ej=pjiq-=.%4SqqLg-io,,Z[JnT0'&>i.Klrh+bTpr#0jKQa,^[YKa,lG7*LhC#tl2fb,c(UXHat<4g\nA"-A/_e97eKc,O"=8W>?8#@q\WXO`J%BB@mfra>,PA]B66KfH@OgA&$Q<8d^f=]6*q?clP2nrT._,ki8b-2#s-DiPgY`-.VSXa$%]Vkob"JaXB1/hZ+VjZkaV=JMemj'm'_%;3nQVPZEs'LG,1Qa2Or#U[L0iZ@kUBna"8VO.1P)XQgT6T'SiVAW[hTbN8%M!%*e`g_ZHUlGbEBo6J`-VP9B9U9psCP'mT'Z5-Xt%LfRRsqc%T<:Z4%P)t1Lg>XgW-n.ZC;8`<!#8Xa`EMoT\GP,5DnL<!6^PI!$EbN^'=;(1KMXe.Fphps#&]RV$7B%Q4\8[\_rjPG@R%qnJ!Se9a@S?.NR"rI)k"!0r(GUXibX`-VY1r?1>O!Q9j8dt3emSkqd2gPi%t4$jH/Ar!Sb_%OD!b<U/?R]n[TRU2lWr8^nQRqK6d%9Y#?MG_Z8N++-h@&1[ql*Y0IB-R.793e0b#l?":ki:j7DUI9MA9hK:Lq[mbe,u]Dh&(N-a%f0^C'&C,A,cqFe/b[R:C!nCnI_B9=%lDClOIMTm`(oE#e6'V-3f7h6+#7fgW([Ab,`ZopG'lQ=NkUoF3]<X"[C?Dum:))[=Gde%8/.KqB!lTC\mqq[r163lW'4_`I!>cWD%`7m.3mmf!;4id?%@M1e_DU\%f"`W^#Xf\i+=7?piDLl-;1DW+)O0O<E9k4Pdl99YC=dl#0n%%:_MBj^`8H3;TjTor7_T@>::ndqF%XI'k.]2hQWf<>Gmnmc=/a9o`SgtYu^m/&OO&*^,Y-/&RSPKDu,R%-N#/K1kLjtTQ!atU"B",>l1F&eQ74^j[:I#f\1fPAq46^M*/%l@o[44N<-hZ&(ggP&LI0V0F7S8,C90,WfKG2Wj1^PrQ(V0>?fRm0d%mUVHOlaRU:N'Ae2&D$U5SWojp)L/r;PBA9]"s1Hj75@igh%'E)Xp%of"u#4f>Xa.*QG+E8e#Wrg(%*`mo;%:C<FkOcH%!!E%&R:Ke1K?-1rasDXjP3"[7&Id`N/Io9_;hh)/-Eh99,TFR=A9g5I%PDF[N*<\`m)8Vts(nh5!dC229E[;W@?ra;Fdqn$"3Yt*%B'i)!0Rs1fUX\Z20L.r=jO$A1f_e<JW@^l7eB4dt..t!:6g"Fd+ENBS%!uN.8I!]o^Doi2;**F>sYA78k4SV1*2-caR/8oU>55)a-F1=8mEm.r)M->853P9''[lI]G6>#*XjQ`<-F^KZPH/DkA'o@t**3N]g%-?C#gh95S=RD[qrNnCQb=1@7X_c\=-(m8HtX3BPfFQ[0DK<06MB8oA0."+_kK84_cY@:cgXC9K-7M^]B[i.ptB8["#EBXX^GkZHl%'%bpIL+s&f0[$nZ0ip6<05(i*5)Y%X15@#u]E,kh`o>A,[*<#5b''[rG`sdZrbZ_d0#Kf83K1+*r]lmh+IQMZ14K&@Us2Hm0F!9%%"fKm&3,RA0G;pS&3K3Vd_BKkdd#DOu.=!2Z*^6m6L[h*&,2cn@BdY/HHPi<brLE,^@n*r(>N;_Zp+Q_[Q$4_^@CA<-ro)40C^st!%"]l(Q(fM/0%5N^Rm;/6/X_^e"&[EP'PR2DLKIiRo&hZ*aLFikZh*SkC_!Mee5CBJsokpPDIg[FsWN#f.7@Z[&;i'j"&jR4qfaNY$%#1P8<RGJl*93Jo3`aHDfN>Wl9Or,=2A6Vp6)!XXlq_!aF4[8aJ[K3ZR#0'^S5W6a4ZS<7\MVO?li&B&<a1c*V'6#RY1"1eo6deV@%@rf]"8E(/)/0q*%&j2J3E5tB1%Wc!K=RIGK0)nKlN*Isd8.n'2hP]/o?BO<de=Nkee'M3ud=X*],.;'.r6/13K.(#ZhqlARn@WZA%A!?8(L%]H_+PICZmr/+%KabT*[L>qROV/_gjhaY5e?p)rF]lMkgROtWi^\L>f%YDUPPtcj)UFOdbt'Zsle<9^?K9\S]@D=rOl(8-%B)$^/3/fAEgt=4Q#"V5Mj=io$P%<`8-!>Au8%tttP\.FU^ZWZL6_SuBfCC][%m-AX<TisOr+ZbZBse2G.Vs;uZQ@]c)"ME,b*eO[%7%\C=GM'.3,C7Plr-u&S)EusQ$-$fTEg=FohI(Y)E-tH2PM?d&C8(%l5C[lj$)Dfpkn7BYhT0CdI""[u^Cqe8e$.Z29XL)E[S-_?%YU&u+Q4tpl5JLM[h0k@fXHe&WGdkB?VI7pBWI+N>,K[>L/EB/`ceFBYd>[N-(D(dDrXnI)4ZVeuQ[:-GD)_jhZl00f+Jf]meId#'%V5"4A>%HTT*dpiJAHLD#diQ?&#.S.'Q,L3JZ@#2+#I<r,Fppq2/)LpqU]Cdrjq=O6LU1?j<g;0'8+`ss=qt*rgEu!ZA3>#mLC)Xl%;d?a;fo,1$D%j3V=8,<6A2dBU2Bf[_V/?YRJgZ.C1*FEt>:btU$&Ptg1h0a/bf:9ko,X@+odW2LP4a'1@6JW>SFIrl&X$`n/Z_GR%c7UW`g*pYk_gDS%GE8\^bt#uElsH0A+QmXnk[bT_S3-Z$[N><W:e,D&!cBY3(f];>mej:1gZ,kDgNiu;GM':.*foAaO'@pRbc_EM%7A7CYca3M.GlktML2/p6ICtKo?OBnf`Ug[tQmY^[?@J5G%%e.InCs>.:PmT;KR)i=&h4"ToI1C&IUJa4P8q<K^cXn0(O0>Z5b7hs%N-WR/^cZ0GOUucb1q6oD#^TJ8)tVRS,fI\bp$);R)pLdZe+UdDJKV;oK\NV.<b[2X0YY"0`<5a#^=1I)BTlk2\d`-Er'>bcI97H]%KF*o<(T8]VEQb;Y,<;^#D[U!KSj4;8GQ=M1d$&E2$MB)/14$<):H_iXJU.CDCF&ArGJ"f*pVG^a=I@P$ce6AWMIP<])>)G!8a%to%#r7VPKq!WMg!.5B66]a!iJ4jlTI3?4E"+olJAIa3SKB'&'1p$<d1udHJYW)s\<8<DGeE:i:7rt^M4DB_HK&[uBU&?Q<>R3;T!0&a%&j_U"N#QJp2WtI*nHiU05u4!b4XSNS?`+L8@e\;1TI7mZiMO7<cXI4-dn=/s;jIa^e;Z(FTI6fd4!Ok"eF/XG9VmE_:J",'gf,LG%TBJ:\UJ@k_YhPfu*(X.U+A*UY.aP@c:H3dV'o260M.kfWkXhgj^-GJ!"E>s6l%VW'j1&`$[7B&A"F@p7.+WT":c"WD!IDVAql'QY%iU`'[\Lp['c_.1RHEF8FU`=G7>3\]6TVio5:7s!*"5>m`ckFNe*Uj^*$"W&S;@V"%Vp&:IJU6VN9g'Be"NcJ$1oY@(h(tgt+B`nX%4_73XSrW01SrP?u:Z+IgFWRJ/86R-uNHudAZ;jbqT"q!oTYa/]ouBOG69SbUApL/CqDqC'TnTZg$6/[1opcI['Fa'K8l;F777A6q%2\cU0h+SY@%``/SRUmr[85`dI'-u$Q+SVV:Nrs/:Qc&Xjf`W>G7<;3S(eOEjM3`0]k@UnbBjI88[7g`*M&iOh!dP)G"nIhu:!4>5%$n/b)I]`J_2&-C-\nRJ05TgXHDGYoBlVo1s:k<R^jARoP#e@F6!MeZ?^?elnFu&9k=n3oL5f>3k/cjL!"$cPIoA!Rn,aH,]BEnLH%IF%$WGtH3`nrbH5$;">@bI$kA)E&B;q\7dhf.RErLEdmu%cU.JcnuPo(0tJ$M?DS5:NhMBhS.`="i?slW/?K!N"T6Q3.XO*hYhLj%%4&$^%*l]=/RpLmoU,1bNjr1uF%&h-<UWe[dZCFn+PA]4WB`^JD:#L#DCAXFTK&ap"b&8UD9/t"f$;uK+RG8RQt-8li7]!+3[AJ"%'hf`RPU8(-'8XAOhf+XraH$;\@g?ZEHHNjb!AC;OiLE<uAi$@VFdP12?peu1@\tq:$-WL77AKsXTLIdictQ#lqgbCb'fO?nbWK5.%kYZ8\G4Xq=\H3(K)A''@LnKUsMsJCHCXr7B_.8gGIp<!CK*R(Y'V&o!a1t"/X_Sgd/rFO]1:cqc,^`K<DLhs&G*$u7+;=4-Bg='X%*%(5<Z=KDu3Jh9V5pC2rd=>p/=^)XN#Xk@shd6:kH+D0$U/TH3[qg9L#ZTfT8O.B>O/-<%*-:[:m+^^RlE\uaRfnDB7.<L1"GA/J%%\H9D5b'R%Xpf)q]@.VU!&$4u%AXX=p\lgW8p`p'Coc#!`rmA9F]O,R"'r3a76ek+6LmY=h)*e\X4sK5q'Kpn&R;++^&Di6CXu]5%a%@)5HrD!7+b5*?!Rc)QZ`0)If6m.=)Lb@#65hVc_a%.-N0C6`[&2'"/.X66h&^hV.tH[jjo?(^DckS16\-u'4`;SR#cdW1-`rYu%c+7(iTRmS8["Q9<D^-E0U?XZ$jMQ)6p'R\[8/2aDoKXV^/QY:'Fde]-Q7kuiE&Q>IV5NW)&-_MRIZnl[aCZGTbCeIUEtNgB0unKs%W,*\T"B!:Y!".Y1]65K4lVU,$:FeRt"t-KAqLc"1GToT1.T_j.e",9oQ,b0#eB1N<$pJg*Y:Db;_Oaimod@ImA.`19Q\u=A!5gA/%PdJ$b!5g?gc$*7i/?1L(JZ-'&HE`FqYe=ptTA=8-427__1-`_oAojr4*FAfWlnI=ZiX87soVNjkp]B>`n@$hUrn\A2rt=\(U*#Ej%!r>(SKimot,u\fE_.g<tamk'@Qm]UeL-,MGB3HLpn87`>J,pYNI0Zli9WM_:?m&+P\_@g+R$SiJ.DRW1+T*G!0[&&!Ub(Wr%[@B3%]['7@Rc0UgnV%:-doKbm(M8RB7sIa@U)'"4Ij?DUOC^3/+h?rudZ$\I@f*\[^&WcEgZ]T5021HGpngu;@>7LKiX9->XrD_@e[)g,%pEc,,HX(\1]_^\/Nd80E_i?C#@f=uQ'cF"B$F\(_0UrH/!5l9[hi-j0Fl!g?fWp1cS@8MR)n?9Xl_ipaPWA+7cQ@kBh7McL_pp!@%rsb4CNiN;)Et4ln:JcNNj7P?QEt0"e9@1r:I?JL3-4&.g%g,*V+UR_qJ8R[h3=6,`6#tLHgr'5^,lugaZ?'U8F35:)mZAORk)fgh%PMFti\;ni+/pM,_DLrar-&jg)'9ZusA0,qA(ra*)cN:\GVaAa)&<V`()*/i6iU:nsRX`Cb^)(%]\HD4j#7O_]D_Jj*DGHO]h7-01%T>rH[^eHMa>8mt*-<\u\6'+$7;pfO=k)gY=k)lJ@?RI_nRk2N)^9)n*,q>t>E<.YN^qWHagIq:119iG/,`?;bs6r48Bq71@Wm%Xg%ku-\N5Ot"3O8f.X[U@O0VSPh!>=+YQrAb]R-i7No&L)_D+eSsG>Eqm9(BJOkSHfheQ'#)N%/XO(MkO1QQQ`@0%Y%K8!D%=mKLEA`%WcEMkTsj8crME5e`06^ZpV*#_&h:@m<@F(<U#[<1_cT;nW1]/N+jN;Es((0qmo'/H->n#<PZ_<^mO+2[7rD8MAV'BIrrfm>nXa_5%bDk/[\]S_ac"$8IO<sP2I/H%2Z_Eg_>S.>=8Tko@iIB`?B5&)"6T8atgm3bjV/0u_18Y_YB1cW$o:gMrmXHAaqFlsK.\%Zcr:V=D%!e:pT2%Xd[?1`IiM'c\W7,@'aCrg?^!ltII/+/N^;G?Gk2-Nc+]1eNAnRJ(F95)=pr&V-rDh3>4C@QrC2BC'"[nN<2T+]Obh^W+>%JK4G%Wn(o9mH/7p(6)mTFF5nj#!VF:+l*GT^una-%D&YMOoD/&;mIs=GV'sP&4.I,LN*P&<)N:?gNu%$51[a(Es>h_);CB(T=('0%pIHpQJ3JE&=WY;\a&.j#,EK301V-Q*ptrPSqCqMAH"B2!c!k;Li14kX%`g5u>5FVeQ:\>\3?fX*MF+-_q8;8]U$PRUBf-E>;WdLk%O]MD8P/<%97*Z*"78s/R<cuf0/<29kK;E)$TGnTY>_NnI!V@euk7m#0WgKdKY!0N8kYSjFbE(R,+[?m:a#'NPkjuq;B:rFVC/*=?%7Ar'=*XkY0p6A*GQ()\.:f$[\P_JUDo![@oTfArm%K`p89sSirUc83&,I,O$F[gWDPHR"^`2tY5EJ9uS_Y"sqVt+Z`N,BOVA`TCL%)qsLH8%fu@1`082jiTpTB@EBuFM[DNNBi0rd)kRn<-"O0$&6l)(&'+sK)SW%\VR5BhoSR^Y#`MEbSFHqCi#D;&LZ@kbg/eedZf^G%,T2^P3F/S>CE**u\kVB9Wc_.-`lA[.n0tp:^"QItQFjXs$Ld!_8]fek[Bq4u9-N&2.liG0@0@'=7rn"-1ojf/F1V(,!_QO\kmiR'%1TVX;kJDiNpm#ArH,"i2NP?^KJ'%)''W!BBWY\']"9q*4o$.'nD>B\PiNL,sKC+_Ybt-e!fjDk$(C4;tOI3&@\:.S;-kmGZj!:HB%*JQ)H<+d(Hc)Ae_V(4\3J!;Rub'GujpZ"8FOEW6kp>!/K`1=Vr7B0BfBpeX3n_^P=h+%R]O?!Tq`(Cl'(5DX[o%8F@;ofbF/fc#;%%\'.m$9=GfV`pEb:p@,klkYLNH.(4\P^<^G.-Or0$Pd%*U2#rs?0<u4:XrPq;M?1I=!S)&aGt_,:ZG;@+atSeU0DYFb&u'PQGF$[%opj/Lh[\*)pR^C/EOOlgJ6")4m!-cF)CO6O;]KKgK@smT[J^lkIeXOI7ejM<%1okmX9e#*s-0Hs,Pk-\e<+!%h>*3_L^FH`PGi66%$]pNc#s:'er4K0Ge$?aB4-pF<V.*g@R*1+#8&T^^OV09u8Jo=FPb@*R8`q(:0ei'SriCaI%[?8>SC7i/\#JQ/LKX`g0R!]]@_<e0%TRj+d181%&;gqsIiKbqKR6g'[g9PfXQD"X25Ds?].4]a-a'N8qFn>:&l>&r&<hO$YCWsCk%,U[rF-hfe?*B]rUlX-]RS;Xc20sKS%KXli-=3"s6+126c43TQok9aCBIu;#5fP9LpL?=k<AXQrbr;*_n3-Xo_q0#rP<8k:9OBU@Ta+UQq"0&PB[<`^&\8AW)$!V8idd9l*%`mmkjA?0:0Cc+cE\.;dQP0<Q-fP:3"@>dmh)R=7!Y9;M5jY<,PfkSKMk:tOIJG5W$0ICMK9bO<-f<;:r4:H!7ZaE9pa`ke'\a^qL%%8#89>dpi$-"3ik=WY7a<r#=1CpfU'f]BCVY@Xbs.,_E%BNpH&s3&Ql;PfNFT>,T]VJ70;)2[UieM-AV(i%iQH^nWF6"XjV)eu0C%=CFu0Dh>J&NhOJ+*p/ueU,W]*>JgMG*6C+gN\$7If2F(J0XV&QoI)E7H+gp?0ZZF)L2&4maF[]A<a_9uqlH+cK07f7Oog7]=CG<!%2lR:N,R&o?YB@MtGoMD<;l_]qditm4"XCJXKC=.ZdU9e;nCD":M9ctI#-$$kF<1kq$.\[5C^gUEa%VQI)@VAiYu`;0(_"a%Z3F6s%$QO*@U`*C"2&L^%[CObdR'LaJ0X\D3CXQU*Z%]\FR!LdSC25M-Ou/ON$Oqi/>$6Kon*L5,ft,.Z,?odda7"D/F/Hu^K;gFZb2').%+SOAoOJcC9>D)a9fpr`o%-D;jQ8FsR3>tSW8V<_tar1[%jR9P^;dI="CG:jl'bi,+AqlZ-<ai4+H.OAXL5WSf'aEu0.VU:YB-A60%VFG+fZt`>>hC8s-)gr/cKrIplH`Jho@'<^eq6ouaKrMuS]Ldh1ZD=ZH004"6T4G%Dn<Yn;!nE"bO\"6pI"tdV[\*H19KoYMqfU@4%C%dG'`+'&*`BJ(RcM*)3ZJ3d*A7VL`/h\M>^mIRVjjkD)6%8F#a/Y;j+!YgoYeQ9.?/i#1$kG+.00"F!6a2!q-2)5>0LOdYf9)n.%)^!PDpjfg^cZ\F6Ask=s*!RL:Z75'"3Wpg#T;]WgfKXaL*`,/^OfKINrLJ%X)u4u=qMa[5'5cWd(#bPCI=p*4Hs`k<Y!hOib^,ks%D-*I)!G&:GcFssaL4"??qhjNS_50QkO'c+U#OgtNrp<BmiU?"i=nHAN7?oa)fM\)@juJ3c7o11gAtSR:&D>Kh]tbfeo1Q(.ldb9@%;*C4=SrtM4BWcah\'#m<pdp:aDqFfu`JA:;#<=n/!$UX<,+lqdQW/n@K^$GCQ\6>`+2<j&2GL`fT0ntE5nppn5P\U9KQNJQR1gu[%#fl:)QCa'Rq(K&;8q-K'%),r0<b**>UbsOKpYqqk&fcQlUikOsA,k"l%)MRY8rO,Kg8W1iL'78cOF*%Lhr7mQR7KI+0.djjlljbt%/m4`Kl-bSRinI)]=jc&>1?jVOZ93pF`PK^CZF!KC]h]SY^G02f8TYqck=9ua76pJ!gVS#e%+3i+f%uFroXi^u]UbI2[c;5mbd5[s%R^9&7Db!X'?a!Kr.<;jATPj(@DoZQuN3aPfq)rZ:)46;g*G9&1HTO\;U9bl(A8fMMji'Bq,6*R;cY7_!].@eiL\LCh$rM=+B&p_J%G#-DY?U]5r*g-3Vm1dsS)/n-KcC=>^>'b,,gNdsT1PXdLD8tN23h,ZJ'l^V7mHZ':`W/Tm<d0&A?MqB.`Mrsp@XQjb>P8?Rm?HJp%;u.h6)tE7kPXhYOrU7Md$jq*\Ket)\U7<iUTcs;]A<kOK:B#]cbPqM155a:;q>#sKdk@Mlc@8rXiu\JZraC-C5QBV:/+S2fVu6/$%rUY;bNIUrrs&V8SIslM)J,C:<cQE,``A1kO?7O<Mi?%sl=8tBikfMSbha]R9c"n&Kc@0r[rr2E$hnT0B?iT`$s5V`2s4?kgs7$'a%kC<<"_g9&rq>Y_($Kcu,#gTu4b/a*s$1:93kE,XC$"-fR+ff!P:&--tP<OrBntCTtd0Y,7PsA76Fh8aGL'HZLR6>J>LesC^HTi"C%`i`me>F@6I5CVg/jCbb$4e3N\WFGn5c7t<R!_/VSQ.Gp&j"6]`cf<.)X=i8*h==e$D<NZ1TLXq)iK=J)MemS"afetX<"'-$cMQGZ%&5A;Fr-#@(p"s:I?kjD`rDXK]Nik@-oUML()P!&mq(dsuV)[`033APJCp,:<qCMD4,W*(T&/\&/51QtAj-eFCQ[(#[FG4t[1!Q$[%7"IX$Z(^Kb.]P%Oa'P]MWc1^[M.b=(r1(/i=iL>28`Q;OlPjIC:S!PR8TlG6(q\B!Ml[<Vp@g/n,qK4^KX^6\DjS2Fs-c>C)B7qQ%`H\sNUdK.d\tUHP)9T#M<"LaDZ+4#0*D5XmYC9RkMB#.\F!OVuGI?5KPY665]FHIogFp6Rge/Aof4V"]A;$5J'^sKD+sQM&WU4CP%rG,Qi*FICgX16pr.f&ZNb]s&PU=o@=n1:ge)W6lJgIiiJal$>BQ18>^PSMn2`Q=^Mkboa.lp5Fu8FHBG7_Mb9AMl:=,C2cM#[hq"%I!nUX#Zo,d2AL@T1-]<AMaok!0Rl]tM"C_Hq3%g'Zq?W=H'T(4JIr]PMhaG,8S;%\K:_tIo[N0SF'Z`&$j(EIiT.W%O_@jMQH62"%HPF4c"UF--B'dTG2h[JdQZ1qn<n?;UY/\oU7o<YG)bfGVEFLt^-FdbJkmr57L`?Bh^'s__NJ`Q\DmQWKnH)RQjoW>"=+/$5!S",Z%+HP%b#q!H^Mu':+T\s9G$V3\<#>&Jq;\10ob?CWk(]E-'eXRp_*!N;%I=Cgc>M7ht8_jlu\^"q);]+QPXIj\>;&VA=9gf:=5oQH@%Wl:$0XeB=^>p,9oNL'a=]HYaufL78n8Z!4[@>$q=VNT]1V`"DIAuBiGqkNE:UdjaZW1iR\U5$'H,'QSbB=`0$+Mk)/qG:3I]_AM4%[t[P.ibZ;0am5]l?@cWccfreK.u*#T/0JNBT<tUfN8/@mFrnA(N7<`,ps*";/H<cs,;^,,H8o*%dZ.F%&KRQ5b=d-+\WodLi(]#f%@,0>@FGeOaj7B0:PS53JSi5%\E!=5C<RGC/I<]m7IENr6OfO$1p:))P?/AS"U,S"2i:<O'X2Tp;0bkJ5oAuUn3AP/]Y`h+:-H"U7%hQ+"u<M4%bZ'+e-('<T^F:-H%O-`TrS<aUUj0&n.oHJ"Wl^`WlUaiN9]FlJ"ktg-7XNOe:'T_7j5,d<VJY`T@.kA:+VMk:O+[k8.%LMsub+$]L6[]1&o>#gJd=t;57]Hpk4q=,uWRXd&@Z`Ka*'Sm#bmTi>_:5dS1bc'q[`_N%G>ubofaL/16\V6,u\62$Y9VWVrIU9Yg%`S`]sX2Bh^C9C8-3bL[OcnU>M`qh&uU.9B+AQF]L#Q5o@]%#@+$#4pG:#UD/ao4qq<PM0`IX`eF3G-?)=%-,c!#24(<K>OYR,Vk<%.*X5<c>Ef+*U]NB[;qn<7i&<HQ]E`d6gKd?<-G"d!<)+-.`qsoB^D1`K05t2b$hPG_Hi#s-n7ih9,R.d(Y_:gn$[&B33C'C7;,5X%Tk&;)@[=kA%^YZlaU1<#e;G=/8QMW_$-KQbb@/gLJ]e4RX/q@2@dY^PHUn:d!03ijQ-MaqB,W&4oCtVsrR@;RX+b)i^`g+hV)h-V%]'"<^X#lRqb7H+F70qUflKY:HVkL!jJN]K.P4m\K]t]=MH45k7_EpL=?'hE^j]S`V"K\,b@T69p`*So%;"Vi03iQ=<:RK&t\?NiQ%3Ge?SX4?F#-',+#^=N/d2aPps:L!5-WbeHfXrKG*Pi2j-lbPI^UTpm4=D^Ee<K6YeqmIV>E@o(d4<,OASRlM!*cg?@(D2m.6)SQ;%Rk.VoUXd3[j$`miG)b#G`Q/E&LQm3o`Nk6DITf#&85r!XP<CF,^U*8H1#L"@"l[Hu0Vp-.r[FqPU1YYH.iCuWil^B9EKU)dj&]O%%WnS)U8if@3X49>N%.IWsg`in>;]S%1M)#X6AY[VSM@iW800ttL0afZ&W4AX+@(D6(Lg#!P7Z(LcC\[:D1[8-=ho3eF!j`8]$4@&q%L="-s:iOe*oa\Z9eTY3P>t+,6)@NB^@i"L,!PEgC:lT'91%fB6g\gP&G.q.Fcq]Jic)uRX;R,*3)"efQNp)sE3mFr^U?aj5#l/Ki%50:Cke9[>@7tj00?a=p"k)*uDlNrUZ8Mo(>j),RJa%S9[G-i?O_0e,7G4##d6AAk-/m1IbTUZE*"Pt9BK6g\PZ9h5\<gL7?FHSMZ%(/pq`fi[bc``/.:o&7e.)^42"`]>:P^BDFV/'?O7eb6flp!pm;:et^_^/3L+=R4<(jRp.kppY:(7-tdB^iFS`D]5.E'$"8*;?IAI%D3[+r!-,Uh>O3o"Y7(?i!3:=O,HDn;AL#O_<^.^:Zotc,#^#?$.Ns>nEgU_*K8">no=NBpGKJE!FAn-\FV"2"gEq"QhG$j)8AT<$%?eq:.V=u#Y6Z54DYe,"eL[Lk*E7M%;#g[:E=^2Gu#h3-((F+f6*:3j#Hnj](mKU`Rnt.110l^RK4uag3J>J_ibD(1ErSY^'?G+f!%iO,F\Yo5!'<N$uha](`15H*r^GanRFM"Pt!<C,lJ+8ei/iuZGtUoq*9FhWX"3JP-qNf_UOp`HtX?1dTQT\K</R`<0)'qp%pOjF1I%HA+sMebbu7I;f@)A+*IA6,(]0^9@:TX[!u_XTO\laFCOtBfpX5ki8]TAFpAaoeZ_]gdRIKI<sSB(Bhia)cu96Q/N(+TE%R2@Yt=f%n*!X_Rrnm4$Q8k%]gbE:6&;>-*USc\$UUlV[Z#@"cASDH#_1*^THn'?A5S3pO.C11oM6R;*<bWeGH3kl_ZcS(.#siHG(t=1W%(T*%n3>eWm?PJkGYrVB;Z;*f":N5P)4hDk*br]9&67Oq5)XFq,+jZ3G\Xh9cA/#bYKYcEpeC8kq0?kAm9j0?"Y10*])=ghSJ+rf:DE7r%Q<a/:F(ADe#8pq&XLX1KINAZX3]CMfDQ=gWFI$ZbMh%'m)Bl61EH88"MDf:,jg)>&D:knfCps=`7c\5CFEWXFX(Gl^[2cATZ'H*q%0k`-E_cj&Xm*8ioUU7b[p]eD4=P].Cr,7m$"bh[1S$u<PPcY.cAGA7:h<K=Fq4iHbQg)"El8b;XgHbJ5aF5/AOA[=MNBbIkpVc2E%:3J0cCp'!s3*c/_>I?dH+nmVeX%Yq_'\l34&]cK&/lef8Q??5eQXQ'(_=[7JajMd28.kl)etdHdIEPTF#EhX/fG19,q@AK_BOFe&%P2-pBrcXH)Q^9kV5NkNK^"\qY>E"XLn/B"](5]'i#kZcpZuMl#WX4%b6-dGN$@hIM3:?b[iU[$km8hgI4N/*,]IYFV!a!Pj=Ub1H%.oE")@/e:]ZD%`2C=sKs]'l;aAD7Cf^&_1Zkjukq/3.R*/PC$KYsX#(_3K8G%b?G@[-@LB3fYAV)n6CLXjN[hP6+9=nkRT)3nQu^%_>ES0.A&\i%mgo?#%)*kNr0Of(rR]fJF';U&irb2PT>6Zo>gP%P\u2L6auCWW?uVUk*6I6\h;"RdqV8mK&2cbr&Dpb49>r8@k1Us%+mNW%H;%9X/>.-d"0<BAa-?KkRr.HRF<a;PYTtX"NNtue6%#7"lmZVF/loW\:Lbf^N#2d$i>uW70a^C+)f71.s.VRp`B[BAZ<BC[%@@CU>(7.nQ@@ki!=u?\)ZtSFQ$>le#B>,^`X0jpc@KWu,(GEBom=,MTEjYL=LkP57mE?[<WURsfL>/?N>QpI#$;=M/^-/jA2lR5C%oEQhaXU&Phb"+Wu>qe^$%^6e9X()irG<,O[--cp@C]*)PknL5/]QgF=:*GrjQ?MeD_bW$t&R:+2/h_bt3Ruj7oS0ds#qSi7f-f2Q%2LW9HlKU6Ra0lmfrRod3*ge>DIM?8%6\Ds,OUb\l`JOR*Jp8_(3)(jo.1mraG"Mcj1bI[3V!"U[f%niJ%1+3O-&q%Z&6m$0Un4oo%\R\Rl[7$KE!:Y?kpPmiHd4(pO<[k\`)6aBp98,$fks:5a#.3;n)7>8USI7(@8>UE9eZJ3qGBk5soi%pNb]9^19.T=Oih`=LJk%IO%g5E'o'm'1.V-BQ8P5jRoOi=X'rPMOgcqs3l3!:82c]P's3*!HIBA'hD:`uT=^"2T"K$e&b5!UK%QGi.mk[EfcY5;g;m'HV-;o7Wb%HA;O+>:oH&m)u:1Q8Mr3B[ptp`9#IV,9\Z]i"9b*kup@p,$#VK%m!n]:u/87_:Y(b^UT9Tjb%Oj5.l"5!$\I^NnXf6\Oq5)4oij5%5/k6a+DKE:?"tZWir1sDErg]YrRV5FS<nmTIUllD[jP&ej1t+b<0of#!\11.ShCW(i[Dk9VCF'U2!>#+8[WUIPqLmi39m"fNfe/J%*fND>(@TenFdV/mE%LN)irAU%eiT\Hp7:\u$uu!^3fKKkdH;4C:S2b<nal"WeK1;9`6TPI9Df3@=Q4U`A;Pf*Zu[1gE,-Lf4Nk*o%>*L>gQ?_-fJr_4<MC>soBX5SRA^Bl&M<E(.IRVAJn:nGQ21>H^a*VquE\b\I.=AT^hHOg]Yf=!pXRROA2;Xf5Pq^4)1K@.)`d:Wq%\RUTmlLO5p(e8#)`u(I'`k,Y;`u%;U*,-C4m%6R(QUBXA`dKj0-=kuQGRI9MA;m:"bk)C.0n,uUN:ChMrpd.UejgQ[?%Ac$ZRka\%^'fNo.hek`TG$B6dJi`1jYUlBf>[lI.-/gFUM-Zh17aXCP!>s=e*JN-X';5"]a=^iMC^Y/BA)BJ'LbHgkeTbpMIH2]V=G^"=3d)&%gTk*'L#k8'Y=M]OT5,`p_&?loWiq0m2,9a+SSn54JAgff5':hB<l<V>Hr5g<oW*>?pgKIcU,cMF@S`9=Y&BN5pNl<.$*D"I7_Xu6%P46>`hl;E.*=.bLe;*:W[u6kI1oeFn<FeUeBVl*#+Hf3>%'h]+o,P&LLJ$,>k!N*5klsej<E,;FDn<jDkn6#qq$jWkI>E1oh(T+7%\qlLej\e5p09G]&.)R*hjVYmC)'DQ<8)CX;8?>(YcTSR@VOU7#4[Vb&,bsK[,:nUZ073/>@*/ZeD`-Z+_UDK`H?\ot%D:5t,i)Km%VJE2ULIcBG1S_9$HeJMqk!H>dRsL^Y%#j.@M$US9\AMm3No,#![,.QQO%?LalAl7dB!rj:.._aH?86QnINA0F(kUdS"*LrO%CQKW%grHTM3Jo0KR#q737p/i@i86(9<hT;H090u[8q6'!\s1nD7s/bprZs^e<Hi>72Mcb/OrMA+Y<.aW7l6gI]V`"&GP$O,CCIV,(^Wrf%<cb%_p[B50Vnpo@fSjl70r)"K[!92\)#,OIF8jneiH]#)MX,u_8?t%K]+Dc=ZD6KeKL*"eSk;2h*&RO?2'ee,,9r5359ec5P^F2=%Qo/[TUR]\:/0gHjGk,;_Y'FunI+FC85dn(J[OTj>XQ>(M^Y'&A/K`LKl3]&]2%-"='RKFWTUOY,eTSBacS)`u.$T+<bIAdc%jc^i%'C*r?NtNV5UZA0M_rFB^8j5m''_t:qjC_%4q+#Umr,8p6Q$i/npJ;EC<IiI]U23/4%E!6F!ZmMQ;!iPncH6S!4=&l(;;pT`,As^d%n<!#SKNL6(2Z\=,i#sPofWhAe2gR.t7HJAWb*;tr08T`!0:Ah15nZI%5s!BqSUqd\cb>IU]>nu:L:^qpjDm3[Gf\+UP?RcY&c`u)%-QEitlXn'SKn/?f4EdfQ0Tko=YpGSk@m4It)?EW*A-.T",tj2Is1StdFZH\fLQQ-R4PB6Xq_OOqmn=gj!J/9]l&Ib8GfYUqO9@lg%_jR9(pDq'ZOu-^p7dITb$Uee"i/AFDe4.6[)FuZNPZ2_RkFgrL&GVU10ngi-#bI;F=o\_LV&:Xf(^&+\+H#S+"4'.GYBEpK*:R_^%n7W@q^P*(_!J8pLS<hN?`'*ZNf4DOX;>4H:"4-'g*6%TZ)(q"k0_!l@C`XF<Y,kG@#ZXDGA7OOn"cpI7^Xe@X+A7ZF:U1RB2bd9e%0R0`Jj,8SBLW!$uUYshoaC]H]LiG,'Tl4EG$C\5(ooj;^8)";a_ukVSpdPUW9K&D#G=s''cH>^.)[3Es6gKGXk;ikPJ$2RNG_X%%%@ZBZGXKXUKJZ+7`N#nmR@IWXGWYl#ecQaLR0R1k<b"<InSaO=9V[aNH4KYKk_#ahEWYj:u>eC[Q9:hDFn1;+YYIZO5:lM7)3FEO`%.s6eA(8D4tEZY/ckF.<Q$jUb\Ju;.OVEs^9oU\>;8[:YO8[^qS8QO:N:7IZW2b/bV)[+JZ,g@B:WIh(qE_Ylnc%BCDcpkmYo#R*"%@b&H&bo/FD3*i@'#RUP0\D9d4$<&6"EEe_C[`<KR5K](P\[5&&n8?NZWGuN&f38ql0VW6\,k<%C<%oiZ<,![[h0?JZAdS%2Zf#G8%Aq+]0'Gt.ESfUh^$'".@'/a?(E-n6I`Z3"\0X*^XHT-V;qSN@LNjVW;rb(i+S.>0fc;HTJ0\l%r;(<RG8NN8J8snUKdQafTTV?Wu%d#oFN9P+LLC>Bn%VigK=.uB:tL,'4so`$Q0Wa><Vb=:!.l)s<,PBL-(H71b1W_UXG0A'\r!oH[X*?9OfA*Dlt*WJuW/4BL&iJ7_n%DoPXI.sCV"ZuQ3rX+s(gc`PoX]#sJn;DQ^<L3^4(9I=.;Y2iFHGTjSah+X!WSD#5\UBb,hkPd-?0#R0sQ45pMk4Vl:i!h-UG8lRW%\]pS:4Zn@@jEraS:!/fb\H4Uq>=G5.?@$-.\^$[Ha\C)1(<O1Gje+LaEX3K'boP*/>qtk0+>6#4+W8#gBpC&s&ZS?c%#V59&T_VN%j*d+p*<i&"ABq\r`$,;YW0DAN1&`S:Z;lA:B7H5PeDB)l%,2*jTj#'lF<HqR#lFJr_l#m<#08f"0h@*2!$YQaTl(D?D_)5Yo4]!N%OYW\%aKeli?';*15mN?J9`,=@T3pS`=Kbd!2GjN=TTX_FkW.AJ+!_.8WeOlt6nWFLM,(Y*)b8J1b)u!F-R$$5X%/m*FAp*G7]iU`%?,^/;`Um),<$/6*bHEO._O%u3l.&&SK:_0N)9P4fU-3L(MS/,%Oe%2VB*h9-6+.T\miN<L:?i&("5-=Ds57<D=,9uP!ZMIZVTZ:[%!NH$9KX5T^bFloE&"+08$`SQQ1Ve*3:f!a!)9[*Z[Y/0s/P5r'V1C)?WR\f_VcGnk+e^hm^S`X#H`GGFHA.%)H`A\(HiB2do>Z($%ZD-)GDn7!fEZhKJ^K6XLn0hd7]rKeF6j]mV<AVGGchP-aBN.qi3jmp#kqs<](ejmqpQ()7>s_`KRAhC5[Vp4'0'u7P\Y5'r`O-p>%@XKK$#-F2l]'9@,4dM*M)Pu_P(p>TZ&Okl@cOZ1dV(]9q"*HaY\!g.oTaI\M\rQ2e;;D>q"D>5LdLgR(opY/iA*WQG>e6'tr7WnQ%L]H$r)?V$[O"$+amV?MC4"(6"BND?F2=8c?X,:O<Rhn6V9k?'C3n<t!7"VtC.XQl"Jb$7:R$-%2-/K`EO5-bWn&ut7T1bf>CG:$R%76*A'<FI&4-!JHY:"H=QM3'A(*XSP7Jo98uf8O:Edfj97lXpfEKK!0X&$dfFARpWDM8a5`&PAL(q6K8gU2/t+7$4h@,uR<ko4To)%!WfPq.I4C#5gl?95..u*mZUMT$Llp/l6cUW+/Um*eZ56XNG-E&pCnrU"6C-Ln2@h4!]/G_9TmQYmRbF%@B]eGOKe#>]@+ZUlE<P:%9,]69=9pI%3H`=qN>DZY;.,0gZM^*>'s)W8=fh>aj=l*5?P7sT5(7A%le)4uq:%OXmC[9UOU+'!8!nihXs[VOr_iH8%9L\sr@/c]%dbZ*X-f/tjh1iO1nL)C],W-2J`PcHW]NFku#4G?5D%7nYhg':ETj0?i%eA4nL"WjoMA?N84%4L+5&/%7c&\hq^f+/$aWrA<ZB.aH%>"0)^MJmr+K<5AqM*/)RELC;FEe32%N?Ktg&C;YP4Y^#cg`Xog2qY4WRdVQ+mHM,Qh>rG$esTauY%E\Q25Z/dZ+I%$iVh`rM(8=A%F_sld>YLJ45s?Ze[0nY.bs+15.eSg;!XIIeb.88+W;En/D>BDcOH$g<c,TedGrm$Q5M/fYK$!u7=d=Y?M%nkt7hRoqV<1ggG(!:G%Qp@GY.F7SIR_`S[/0/mI33YuFU-ke+_^A#.c%i0<h[>C#l:mU?f7mIXr4QlZ0C\9#P_*:Bb"h=YV),)*pccVlZEhAF-sp.T_`5+:%`Y2l"WaR6f(t2;eYtY!?-gQo5,Q)\&1KA]`RZr1+KT$g+Cb;KWHdR5-j`BP<qm&9YF=3'g&1]EfOhXQAC8@/R1BRBA.QR`5VJ0dS%ofpu<F<OR\kiX:VT&q^9,ihFFi6hs!^:Q7$"q$S/^RFgu$lr6lankWl6:C)nqN4bXY,E*6>"i0J6V!FR;XER57Y[MT=FSO:!!;ML%C<N_59UR((9H@BUO56SqGU9*s`oMH?\6XJ%eA>5CXdFd<(P.)GUUuhA0#"Ij%dQk=`>h.hU;c,sm&Hc"YOf$s(b5cXN^_64fD!]P%^*T9sA5.ONYRWQa&H:cth@s'r=s8;&%0iA;OHcoaYTcREBs5HFCb-+@W2X"IRIkGQc`Dpc2%57]f3ge@".WC<l2eJJ12.n4;3tse%Lh2)s+hE/TLn\YN76e*^NuW+b.RYueq"JMYYO6+V$Pp/2P._O(5qO/--9;N[@'P^2-->QQdEc;PFq*OU<\\Ai;t<WLR7:d/'I/i<%Nr')Laa@PWj>h1$B0me+NCZ1DXru?Z[+N#8Ssu4?Qk\>W]P,U].#6m$_*FqZB+7"tkdU5NoJ6/>(4"t%ms&/-`UE'?-3W;q?Mht*%`<?;R'mIa,P"g[J2/W9DDStl]X/%Z(K`7==n8ckmf#GC9+t3rgm%Jg`H;6#KQW%ZZ-$B"3DI'q\>M].2.NX]"7"1JC<i*sC>pfCj%)o`0TdS*LK\LXKg>[2;L-OFo.pSj@KL5'!8!5Vm5CQNdqoA-_jLCO"5De&8#G(cJgNh8o#kIU(jb7h!Cmsa\u[gl]B4G\O;e7d_:%r=LZQWmJR(E`@GOeXe1P;E[kqChr7\0[q">i0.X&lcA@Ugl9Z1]ED6^1C6%/U>2s]+>!*TKSV]PIW"H/?a2(N0Zgg7R<h-cLIW??%8e9oc,qR54Ou9Q:k/5)Y-S>>$82J71Z]UKdPQ2c&[pM2QhoBQcKIE9kXD!AM&@-*PJrZ)Se/r8B.`<2s&,!@<Ts$-(9X5"FL+5pr%=G8.c=^+O"+nVDmH1FR2s,dsA/N9%Ao@<%bAtk5N*3@`,_^;0$+I#p]KQrdVJ4r;`fCQD7<c!Y'&op7XrGJGO^MOVSK5DBW8][rK%,`@aCR>hb]KUe/_?PXfcC>*Kg70raWASMZWKNSp'@E>b:p20)s\PWg:D<<^\ASM.gUeuW+V3cX\+-ZHE)i`-irQ8/%e$&Zpo<Z2]%Gi(-ff7emCq_0LL&n]?/Fn5%KHQ..mZ8Y*LOADMm8OG6/Oo-q^`RWkJNhmas*N<8J'nY<Fk291NBl,FVrI_/IqZr\cN"tGhDW$?j%5"o&](j1:GX-<On/U8%TqY7I0aZHS=^$cM"P,11pci,0lEM_t6[NN%5NR(7`T(Rd7/5(EEc[M4#$SU500,^PIP`.W8LR3JT;qLcH%Nj3E;1\+pf5"3QA_54I8aeW@2ZG'ejn&tR,#WptnNrrI?^K<V#Q6Z4CDks^#[H^@N="RbT0u#8?np#4<l0/a2U/pcC^^PB@EI_6/%/Ab$t@Es[k<!fE/YVNjoNoU^$B6L6fWR[p&J,;Z5Tp<6XmjWd8(B`ZCf-9Dfoh7H.Y%_]'MTKUhDg?4!W5.ce'2MGOeGQ-*rOIRV%!YOb$2QR4fkA1U_ia9<0:oiET,6u>lZ1Y![FS8VH**d$orN`)IUQH<cgs9>-d"NiCG2^m4OBR49YNZ8u4ON:qmcI]6X[:Ro^6KNZ%LDj0kgK>qk$bq+OrhK2\jYR-4s4<:fMGEZA`=gF)X4+AS4)ugQL6EkTCPKu?T7cu$kZND0g`AqHdA]ouZ:?W0ElCauV)@qIGKpB6%W$rM'FUr7>9oI(i,"qPJ9+epBfe*PhdFZ@?*UkIbrjn9$Ce81Pr<m]!I[4iAkp>*.4D"=HF9]]qf*^)H^K"k=&Zm:5[2Olq0J%u:%k[I**%*8K*j+mJW2=2+o55n2X>>n<1a@,0X>1EkSq#N3EG:RtC^r7DE"Bbt/hEFS[g'9EV!'[\`P4&*n%!`;K>G\rp#FJHu\r*p$%Qo#."a))>@$hH*c&ftFOY3)c51(]=Y(MjU9CGalhHgu86^Xf6qD3Zo_?Y[]b7P)e!)!W`H6h14qZF'!#-LMC7<k*[h+M!#dX@+[N%(NF58J41W!"jJZ-!N5:V'\*j>--RkF(U*mA_[<VQ^r.MR='U<rFfV<@BX0t$?-/>ZB^U\i>MTJlLC75'&?UH9"g%!S<u=QRZs$f2%i<&-M:K]gR!-<-Z)bTf(PO)ZA8I:i_cRrJ:]2di&m/Q-H3\Ff`rNRqL#:5417)3Et/jFXR,l'g%(?Jen<^S2"[L8J\Qdu+-*ak"S%.+kPO83BD-m]:Hi8$Y:n>IH]1I+.1mJ0&+tS@lPi!uq<,m/YuV\m;oeXHad@)M9$s-D=-aIZnGR:aG+ojSn7s08KI!l#?O_T,?@e%q`6N%U#,";IoTqV/_XW^dZHY8S]^J!))fsI36VmN'E!$@?^*?0q74U(&h7XDG]ii:eB5Lg*TguL\l%J]UjSjG>spah+fXNfrb"as%6]cot8)tN%?F.:,36EdtkE(a7r9BHEm_f6-O.0g4eo;AjDa/)$4?L3j#;Lr,pJC>JI[VF8pV4u+iJDmY9fp(]6k8^mP&':Xc5T,Z%4e&p@n<7c;p8sK+:j]J/3)ob>F"C>D^9d!'2(j-/pfV6n'L*t`&".oAH"+D6@KcIiA-_n=C^9`<;=O:JG[/a>$KSMQql3B#7bUtP%"fJTbqs64n8gh=`),!ospcd;IZ"BZ@l)aAqK7TA%PZKA6$1%XVBpPcY4pUl)W[+47"8mL,GD-"NS8Y.#/la+]8Kl8L,Y25QX8Q20%h)QadR6H#_c68=pn<T0QL8p+gbX8"sTVE)pS_Z:OXgrNJ*YOaHcO8tqFSrMW'*fsb7r":B3Y!1=Rbi5h-Ek63&0;jTkr<cU<t2ba%@_P6g1sKa+>;;1d4*:,:p7U-5_gu6rA9`4;\&5d6p?8`pq/PPQ--.fB]aej@_nLA8-"Vq(3Eqet/Dhd\"A,4D`OacM3EZ!DqT%gK%+(].H=G9Gl@2G]rbMb0Y8mW!glR8@dn2T*A:NX4_W&B.H]ce;_ge%m[HTA=IS`_2_"'_&f[2`?m7/(^e8OJ%:A#@Y/H9^lknAJ&+%f7P;*Bg"SuV!%F?6kEe1LW;58HT`VcaBfQXip/.Qa3a7\.$A*o$Hlb6ip66O3%>oEi+p07/c$+7*L?Z#bW(t<DqTa4i,ZaB9JT:;%iK^k)AXL')Mf5S[]ecA'D8r?HmXZbJ=]sP_S^''nN^e5NHG5d&3J)9Cn6P\N0qXTNH<uGIk5E8ShuP8T7G#Ltd:lRcP@O;`=@QfZ%,CPu2Ud=U2TY;gqL+4q)kpq[ooa!,*:9J@tPE'G]JIr0Yb;T^@*18.Q<=QN]g`TnX2ZXCrg#>4G:0F1XIZXX<+[q"c6kNo0Q&-*3%3>T0"3T!bps,cKrb./",hKn697fei>8cGKI[/j$E9bInm=KtZ&DDhU2#o62:rL2'qa;)T4>Wng/\4#(nfukmJmZ-@+B_KcUQ]09&%$8+hFRB,$'_$4n[J!b`,H]>>Gg,cP85>M@7-C>UbUD<#6ROOMT_Bc4r8=p0(bL6Z)W,VK&$U3n7kfPJB`2?TOUFb<@!u1tjLBIRc%@a3\pKICoPHA!<!-<'6>FWYo4Lc)bds6pBfU7I^c!o5EGa",N?KO<[]"b%+p'K.PZ2D)cpcj[TY9-#M-I.)h:RekOtNkteT'546b%bs$]%.i[jM"B\R.+.%NXc5qNg$ASU`LKN8NHN_Da'IJGq!am^>kV=.[.-MNBP8jYfoY*-K&83RNMJriOIjE+=]g&+80[_T-Y/t@2%Z!Dp<UdG+qd!Rp/6_IeDHle%Cpf4?Q=)nRSEf36(i=Q(GNcsg[#kUc?L#Wb1+2X&)7f]nTbQ(BZJbFaE+ZohaC5GU$L]?CnKQKR(%$>8k?)_De&4:ZpSof[X)^e)M@]^6:r(!X=p#\.DenHag7GQdN5&U7c2"Rpbq=rr_)VK@eZ\HHA6dlr4[TBN];+(eHa)QEAQ2I&Le%<:'GiT)`JsQ^W:'R&ad,PK*@O[\e,R2e`LG5h;JKSc`N:M/rD[a?UBF*2-F"$Z&1k<RZbcFlrn*<`PCs:5"QO;@]$]Lod'TmY&YH%*>Ae_$B]mCMO>tD6j?dO%TO[XN\fIg`;Vnm:5CH33SXa8WW3QWQQ9Z54St?/KZH]G<#"MP&D<2BB0@P*b>M^@Zeo=S7$_C^_KoTc%GDN=ZeKi9\ZL7)H'-`'>=T_NWN'pL6K*[TJ*Rs$ob7GQdUT1G")1nZO.S6At2JQX/Em-C-A7(\(eo2GoHa\#_p):jYrV/rbjWtYV%cboUtZmm]WOZXN76<^/MD6SPdV;1[u8Bf(1ICf2NB"3<7`n=F\crK$*ENQV&BD+#$9A$*-Y+F*nbNUB%b_e^fW7jK`X^sQ[b@!"e%pI+8(c0`BZ)EcVc\Ru4#XcHgnQAl=D]u3e<7E/u6VZ)"eUbG,%MCo\&BOZj]3cL@*Y2+ur*&#\WdRk5TJt89,KC\+>e'MY9#]``Z%K>EI=lpSN/aWL()bn2RB[@5Onq4d2CAo,V]o04SkZE^l0OojX886+V;]*4P$(4?#ed;.gWY2^>Ya;&CPA$UXeTieE+P7?dGJKC#s%L89+hk)QhFe__,]'(Wq(k-ojXVEamN*S'LakrKm%c#Hnj$[ES*Uj''N'F#Mt>hYGP2LO>lZGH8%HaghGYJ.)hLVZHgJmMaf)[HhK%okPF]huQXg3=N@4>,*a'/Jp4&_)>JqOJ-u0/4On(CuDn8?9p)hB#)5nY`7rc#%=bG<(sp0`<PHB@7kCAKcjN77hc^Xhr>spD5;0^%qHpP\7agp>Z!kWRaIm%$1Yn5TO3'Oc[b-=qlXR2^kooW-Xrs2GQ,bf80N66-[1'Jg3<i]Rd9r`bVO.cM8>Q2*K+3`.MsV?tO>X(X%1>'A^oX&G=NFL[j1>"95[]*f@@BnF7AQ(TNbM[&QUB^@/[qbOt*chd[D;K2P%@cpfopBM3hV/<b)/S3]rMDOk5eM@3RkP_e'ZFf:%5sqAD;#O;)EaBq2)40B[U03qWK3A=p=+aDka:<TJ\Kg*cpF"gTT=bBfF4%aFfs+9`=)Pm[%"u&QTuZT`4(#D"O>h#`N+`fe_"F,%%B_8,Z%Z<P4)>IE[$2o'k5=RO?b/@\p7*W^G!pe1kgQjd*$%Ao/$o_F(60`KELOo0?fNC>gk&U\hMi>[!AWB#(;B:K+^C1F!]'nK8%,K:5>$KhW0eK^!9B3UN%C*q+l-4J"8HrsKir*6a)SbF\\(b8%TU^iuj.oJ\U'5k%C)\#q+*0LoS:3PIJ>[Y#ce7?;2$<,I08uPhD%*IqXS^ds4.ZRuF@P:'65j&!;hhm-J&3!b5=Gh,BA%[\;KTo*Im@gjW!fSGdN4WYIRHO0U)Vn_%O4*`fF-X>0OC;G-o7[(.YEek8*%S2;4a3m,179X-p[)cSEA6/j?)Xc"IF7GZdRjTlom50iA_N-S^FpIR^,(\R0!\>L&c0NN3o=9UL%):).<B@k@`dIT,!+?>4%g@Lc4%r@O^e:=!dFm,&CD$A`H3e,rLkVo0+"N@k^R:$R>BJn,Y\p%#Vh5!Fi:'c4gNlEPB/:`21]n?3(D51YU#?ItSIA$dkh8h9i>fWV.P%HBa-"I8/<#f1#HIVj<M]GQWlrfZ)9#,,3iUTuXO1=i0`OH>^o*Zj(G`"rFf,%QEU)^AXG4^<:CnXRT_cK]6f1C@-P]5SWPuYo!d?%VHt8&H>KW>(sDc9G@D$`JF$;BSCskh>661,9t+k9&Vn\LZZCq:bf$I^ELH.ZICmnhS!SZVq9B(lcA[-Hhg+,o#p'*&H*`<fmTb(%%2#s9#V)NUA5[8WAMX'0UB4057T&c?ZEuE7XRpnMC_OJ'tXYIbR#DSd\OG@^9OM:p58QT5a`1<6+](GKhB=)dFI7dHn4'd.u,]bS$%&BS1"Ue;6J5dIE8V$ES.Z>Ar%%h('_nW$6Q_bCcIFQn@p7Cb-ml&ke?V)o3X/qGO14)\FXA$dmPo"=TV?$]WdQX6!Bd_hP,TD,qh%n9a8SY`^V%FK2j90"lP0&Ga'3AiW_i\FZrgDP,[po=2U,Q&#&*C`Kgb4HejF:"=m8kme"QZVQDb0Vg306p86HW$j"]=ZP8$aX-Gf%nn'\)o"OZ[3n3M>d$6Q%.?i5G2u@Sin0A41;6d[6.h@ftNmtT0B%n\Ygj&%I0fM/#YSD$lgsh%5mBW6p'c.pXAd^6sB/=:fm&LQl%0PE<&_S^',S@_c-TQ".\R$Zc6@U(7I]OdK`4=o`06mSl-[j3T=/CT;3K?ejOGh=X/m`$.)kWiBtkg9_G$no72$!\d#d8#h6n$mJ@%+6pSXrk86iESk2LMj";<'Y)_imlN(ajg=6]n$">G15u*jMdk1XiF*0hlbd`$bqA_BF5]Ctn2aj"=V;NWQKc72Xk*HH$]h@8G-inb%ZBD'MDC,]/?$ADDSN[Y;*R6usQ/fTJ7P:4#N+6!(++`UJoc19SFOq+MUHSpkQSgBX*'Dt?bmSGrL\O4QhRBO[(Z#^s;Kd(%fg.aH%.9-#eZ@dbS14_aS4O=_5n+-\E!X1`bN6d-.Sl>"=#6d8'3'IfZHL?C9#6d8gr#u@LN@,f\e-M$fB4T^;'Jt89BYcr":E]F:7R>?L%QHP5=r\fM7I.aMFpW/mQ3q6RBG#r"agtp\&s%dW9Z6Mq]>e_E]+YO:$#86!"KZB3+:k5JI.$=Y1)pp&lL.fgNe33#Hra,C9oC/j(%(8q#Ge+?b]QL<o'[_6=XEr$\r(Q3Mk$0G;/)mW-VWf+"t0_rD#@Q>Q>(jj$8[&7F`U(N3ak'^58$kgG#`0.rdOQ]lO@hr8BW>)t6%9,<\r'sSth)DFfdj/2^.9PEtA^7o4"@.FT\<&Tk<n<`H)VN8[<_<:nCpu5q*>piU=,ScWT_)aaMj/O@XRM)`eA9nElcbGNKk>bT/%XX;GHMKrWQCNq2<nbZ!E!rVZ@4>*TN`LfjcU8$L3^n'HKJJK5=orR#tqV#1@5;lAn(ib[sVs.^c$YChAL?qA6USBID:n;_?B=40]%qL?lpJ;e?u%Z(prZq2VDKd;NI"$?[T?G@3gS90j)`*?+J&bX3dd:P_3+Ya_m,[1H<jccKdeGTlP[Rr^=CBZJ:9[e=?rCP`r[2/L>%h\?DDh8M::R&ijrp!DY9r"hdP`nVJmj]`C\7jAP$,%IS19"IeK#+E&>^8A*-;*rZ\8RjQ$?T$AAdKh`;WQ#]U.>b'Bl\GIA=j/o\%8I/aLSlNoC-WRKn^)[ED,41Pt:r%t7WX]H22J-(.9f'VA2A]BfA5FK;Jie:&&J^TBlJ<'J[d"d/m5VsGM%58FI,'4/5<qJFb_gLO%MnW?*4R)+;j$Xc\3&d)CMKrDKd^6.@-%""d"OTNm*IEuVB>"i?,&^N[mqi_@@jd5mMm,!eJ0<3sb!mi5GU>'jA-pAa+n]ul#b-7J%,\smrVVj_<b7,WmCODQ_r&<(pGNHOF@c,!$a59g]h7"i93e$hk*nVGE*H7q_$*>mO$tO_4N#)MnOX8fT,aTM[aVNR+8[bo)k;nN)%A6#sn>.E=ihBDVQ!LDGl%=m)Alm\s(.I&&%4YDX#i9!"4q]bCmal?@l+k%7'fIi0Zao2b*I/U6mf`>+YD+RIB"2CC<]+0E#dIk!!%<kfdC,&t;b5+lS0`<upp=gaDq,L#>!V`'([D10.@dI?R9YdC?lFi8+p`%A:m],Q2O40_t/*)0d`Ih@1AOQ&:`m%)u&L_>$?DN:S1%SL.VeU\i-"aXtQ4#*Od]jn8ZiLBIUGVpcp^(^oQbl5)jXWbS_]U4"cq\Lj;8RDbK"eR[8'BR<:okE^P'-r.UpXPO5R::lo3qCOP8%4:,3_rNIc\`B2eV>([)GKgbZt.Xnr9#@;5PWc18!bjKE'CeHU+k&;\aAuOX"e$i^CQm>ADM)E/UC%P^]nsnfq8!V;_[L:D9M2mNs%dL$Rg#Mtp[h592=B;+C/fJe"8V+]LS[b2E)%XT[hjS:'64KO5Lr0<pnjcd8!)n.V#Q<Y/e1P-_/UR"cPD0$kf)aY*LfoU#?"goa%%Tes_P^6BVKD6E`SI?^]BI?1Bc+)oBp/l"c0k9AaD^8:WTe12<,9$4[qMBdr`:H;)W\.63TP(PJ6RolLoc.Y]gitokf)4T2&Zi,87%.0a;)3g!&k,`sE`:[BA(I\'5"KuR#^Y?DV^iZ!OLLZ-Nrr[.T<e@I9t;7c%6VB*H*OZS,SD_^PfinCG-C74S'HC`Ff>[8I5,_MY%%a>URjI*uK1CleJ59TrCFpPG`)Mpq#C6tl1.A[%*!e$L3\o3&hHdnK5iYu4u*n&MTuW6DX'CH24*hd,?:S;[h'6>B]s"[bY-<=@-R%D@X"\ps*`G=>6_&pr-%,6O$I"V*cFe&22@FdBR,m<ijJmK=[nKXG`TsSHKmGcl$#1V2X@cfrMa^LW#M&I>WHgp/LM3+Speg2D(H+%*6,!.p&V0gCHa#iKHZOXi4+Y0kgY#;0*3s@Q:]YG4S.`X)5,eV3rD8>jS3\Fe6`.8"!m'\Yk!khEs:oWSttk_A?V5SJe%Z]NOFDC%MlN\a.=t+aW7%)u'Wg@p&;Pq9=fk@JQ"(t)@TpC][N0-"km("ai@8.4+^XV`k%,4>!^BS&f1d:,najC?-4,UUFe<5L`4911WP*3"%#7,atl1&ZGNDf)FQIL\VC#s$.QcYPZL2<s:4K_<=Au6C'^,0:q31L!AngRH^c5NTQhmjV+3(l4q]$E/3AkIqV*&gu?f1a2&?iiQ,%V(D=9.D&2QPJ\s<:U#'GP(Uu,?s!4Sc@a<[QgdnAlgLM8`B9DH9rSF^hjq=A6aghbY1fnISX;?.6)k,fh7X`:/pBHNkn(#Rc#.oP%_rZ6qO.$Z2%u[n<G%2)(P^R?b`F&^Og4QOQ70>RrY%)rbPu%NsGu+$#WtJ<fq5e:nE7a11]TZn@H='G4bdWolb)1OlcSDs6WPQ7O%H3aG!NsIuY*N?LmWQ?Ac)$CN.$nL7/Rp.g*V`uHQ`-6"'RBPWLLBh\a]1/S1?e<i*!^/A<MR_W^HmG2nA9j[$)qkufMH1>gKJ\#B%iR<]p!5>H;dO.JU\*BLim]N&:U4ncmH&6DHjVK+>h4;iY"EZAj::"WXJs/ceASr93R;REq3mOp=rZ91Y>DJ5$P"kZp&A7'WaJO<.%@qQk*NdH?.?1O=mdg1nV4I2[am5g)sSA[5q`G_#^]?RK*3^`J^:E'=7?aU9,4tWnAC)=9gG^?U*Ka=eU>/6Cg'_kl5J%JE9T(2s^%%N\j:d37HY_[T2ic_`$E1a/DlcIIbf$lTY@N*[-24p_88<fH3$$$0.HkB'^a!-E?u4"$bh,)5ne\34Qd\c"8#QW(gkE=eF_!UJN`%Rq:!K2Q-%j])os!o^8puF*P977-JsT`D++Z]C-'Ri^FJ\g?HZNAX?*D^5P20*'qrEoXd)8L9B?<<F$3X\/b'XR"X6=KHP=]\"E`@%R0ls3F=rT&#ec9j-ZZ9^kaI(#pXS[^?/mGH>;npV3of-;F>A#NFs*b16A^V(roIl5$bGLjo!:GhfR;F9oOdD#"!bEl>_V[6A!uu7%aja]oO6'afi=]IKCi)u],l8NIqok47M;'Rb`Sdd%'clkFX2`n=W0"H7bi^tGpGPf[SDO$X[B+Rbr%S95WbOj#dY&j'MP8fGQ4H^s%'Y2pS:fRV[am[j.^0K1Mq>^Sf$lH>>H,rHo%)@+QK05AmgY^3;Bho$ac5.nIr0GH[),GW.o=^Iqc[4X'!(TcCkfL(9D"$`CPc3.N%N_RW1bAoR#5d\PJ&'(QC8@!n];hF:YBOt>"LRE:o\1R.)<@Y!dSk\)7O4gk]]3;K]SdhpaMu=K<2QqT$JR-R(*M5H`;Uk;Zp2!>X%m22Ehaf:pRSdeMte_-d<D$]s^g:l\&PS>\>YuP9f[MN?Y6L"6VD4dd1SYpLF5V]LXn87`8iPN(GrNP6T*\^1&[lJ!XgYbY=ME&mr%,eYB,LMqgKWfbo+;8k2\*#["D8p=Jq1"PYO?^68f5?s\@_sfip)pH/iqp;ae>j4&^[@&=\dN,W4D'4s*)6ODpX,ac1D4ii9\&5Ts%%mechEc&+G)i&224^Bu5?NUnP\7U3b2J$muqq0;p$@T\DpI\>+dWAKpFZZ*4X>uTK:!O4"VDgk&2dF+'?R=mtQ1fuS;el6hf_Q*2%Z-=#-]mM@M\H5+F]?bG9b^^fY:3rtVC9FmG;-&f*9NQ'\"W>D`@[?bE<OqiU:o>m=EcT\32Vag#@-LBO?\_pr3EZ>b?5uRG8MC:Z%X_.jiLeFjF$oh<2XK"WA3oqMnNZsViG7l20-IHg&!:QGencd];(Ym-"0@2BeLOL+?KgaUnOY;6dO<Qp["k.u_?U2F$)QCa,X9^.>%*;KY2f<@KXCp?IpIcLl-$F"kjHrVuaeZ_T[!jUBmM(X26JP`H(q1?Gc1%GKl''BWLfee.2Q2+nEY)mjk/IueGgDinq4Fk&O7i8]A%6FeRJ'=L"gS1O9"CjEg<lXD6".R4"%Su,5q-I_ri><e51AEc=]3bfUEao`cX>Z<Je\5E/:`]T@0$B!K'T*8ZI+0mT_bAMX7@E]O2%ic?a+`]Ogs@C41E#D,"\D&Ms?DN4-ob`gu#=36i5M+iK@$HJg83NoO#FA-g^jjqn9/Pg2">0jN,&!Um5,<iOA\\"PrnR9UNJlMqn%f^_k!lio%Mb?*`;N`BDl^itPc?Us8TYiYEBb\r1e%qp#ik"'DJ?urc3C5VfOFHq`s`lb9=C7o3L^)D?J)"U"uY<>K4dX!RO0n5"r%R-0+_Z-&BQgK'*VCs1k&'QFCgIS=CE<]-ispO&iX"O]><Q,TtNf^]$M2kOfhHXY@U/RTFeS>^kAk$K_+!''jlam+m0J9.b2W$3&X%.KCnJclo0q<3]+_?pl]m]t,;KB0oJK(#eS\ZL`=!RaKj+Sgf:4#nU./Pf;H:JV7$g6Zd2m2V)6g<)<Q4]=1*R7Pb%IPo>[;ho+2/%d*<cs1\&">nu=r=FUaNeg/(.7gl.(Rr=]E)6uUNt?^jlRGHs(uNE.@<XsX7#D(H9Z"<b4T'4fSDeZ@0N\<:%o!_@-=&6hk7,9Q$,%)%r9BXBNY?!_I1X:*141A*uS2=jj=I6Mf&'a'`n2<.(&_D2QIlp$J@HD*X[#\Z:(ca\WGpkh26BQlCHff(#j['IuXc15m$+*3oh@%$$9qHLHp&8GF+tH6'bQPfC1:RQhEpNR`V![A8^4L&L;P-6iC23*2p'4V\6c%T,:Ee'/Y%_;"kBmP^`W+S*Tm>F#s?gN"!`%7o?9q%Fl$0(r/>PA)+&[`7X7#miV(p]Ids[m^]!gak66p[HRAQ8PG3+ian+bbU;FSQm>tTqh"qb6d`\9Rf%44L^@kKaea_8&U.k/rN+t6f%o..k[Ad%Tl<tZV@BD2.2L[=lqhRAQnRpUMfpt>s_KVEDIqkl`CFi0U;<t,f@<34a:C\>oYc!NPCf*D&aI?<=`g<7CcIQIGR(o@^H%7#LnlB+t#mqX\6P,665J?n\gr5EBS0ki]Ib(\D4JH'<C,9QT*1k,mg(<ft1C4hYR61Ve5p>q/TuWC@*R_1)8i[3J>Z@ENXYV8Z.R%lIJhkc4[Kcp\s6irqb5Q*klgG89?[7gqB2dnMZB]/si9)N0,rQ,X6l],7TNVPp%PN38HLj+_tW=^"jI3Ncj16UT_;?(-\tiH[=`I%(Gq0V0Y*pj"aFR+/r>/E7RSaaN0_Fh3R9X.NP">RH[iW4J+[S1%q#4us&J_#?:_r`o&eBU+_dfPqE/&k3cpdj4($sqe;+U1#"3=G%)ajDfXm4b;$4^tVE+S5RMZ$u5^l_'Q#s+B3amG,K>T_bu#'K+2g[!JNkIu7Z5$iS]E:6"0mR2./[hdIeg^KAiWQ:UF_Z"pf<KTg`%M0W7NKR(76"Uk&><c[$/;0eIGhcRBfg.)!?nHpWbVkICB<F852@rMB^5jreP$[[$^S+`,NHL'\O>OT$9nWg=PRbPu%*u53i,2\,,%r/dROG.F$QT9$#kf_*W!]^2LSD_8P,_d7uufiCMlgKSml_Y2=1c+)GapciZ>)1@)K%r0$Aadg;L5p:58S,:(bnuqM1dk:36YJ!&G%m53U?6#OiucjKs`qlONB_EcB0+*0ugUPhCTkNOHcj;&oLl0pXMM:gk$'`htd.Bc?mlYtH.Ua[Xp200W]0c%4O'SNt-*_rW2eQi4T%l[sP6qJ^rWCG-3*MrF[*[LZJ)o5/N(PC[=mD]#e'+_ub0Xa%^mGK?otSp*3njn-UBGGj>hp@HW0jnrJ8r274!nuL6O?iF:,e$$O`%oB#rNIe`^0T:auRqiCL/I/)$Kn,I_4nF?.qVtZfJSDShjh=j.Hs5CkFhu7Zqk2V4m5CEM$_thbg^Aee.gF[F@]6D$hmD#7l&(p[Vm/~>%AI9_PrivateDataEnd