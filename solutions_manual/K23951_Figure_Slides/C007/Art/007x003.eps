%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 007x003.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 397 188
%%HiResBoundingBox: 0 0 396.0127 187.8955
%%CropBox: 0 0 396.0127 187.8955
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 5812 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD46FF7D7DA87DA87DA87DA87DA87DA87DA87D7DFD6FFF7DFD0FFF%7DFD6FFFA8FD0FFFA8FD6FFF7DFD08FFA8FD06FF7DFD6FFFA8FD04FF527D%27A87D527DFD04FFA8FD6FFF7DFD04FFA8FD057D7EFD04FF7DFD6FFFA1FD%0FFFA1FD6FFF52FD0F7D52FD73FFA8FFFFFFA8FFFFFFA8FD77FF7DFFFFFF%7DFFFFFF7DFD77FFA8FFFFFFA8FFFFFFA8FD52FFFD267DFFFFFF7DFFFFFF%FD1D7DFD36FF7DFD28FFA8FD1FFFA8FD36FF7DFD28FF7DFD1FFF7DFD35FF%5227A8FD26FF524B7DFD1DFF522752FD34FF27F8FD27FF7DF87DFD1DFFA1%F87DFD35FF27FD28FF27FD1FFF52FD2DFF52FD127DFD13FFFD197DFD05FF%FD1B7DA8FD20FFA1FD11FFA8FD13FFA8FD17FFA8FD05FFA1FD1AFF7DFD20%FF7DFD11FF7DFD13FF7DFD14FFA8FFFF7DFD05FF7DFD1AFF7DFD20FFA8A8%7DA8A859FFFF7D7DA87DA87E7DA87DFFA8FD13FFA8FFFF7EA8527D597D7D%7D52A87DFF7E7D7D7D52A852FFFFA8FD05FFA8FFFF7D7DA8A87DA87DA8A8%7DA8FF7DA87D7D7EA87DA852A8A8FF7DFD20FF7D7D52527D52FFFFFD0752%7D27FF7DFD13FF7DFFFF7D7D7D527D52A8527D7D52FFA852A87D527D52FF%FF7DFD05FF7DFF527D527D52277D52527D27FFA8527D52527D277D525252%7DFF7DFD20FFA8A87DFD08FF7DFD06FFA1FD13FFA1FD06FFA8A8FD0FFFA1%FD05FFA8FD06FF7DFFFFFFA8A8FD06FF7DFD07FF7DFD20FF7DFD11FF7DFD%13FF7DFFFFFF7DA8FD0BFFA8FD06FF7DFD05FF7DFD1AFF7DFD20FF7D7DA8%7D7D7DA87DA87DA87DA852A87DA87DA8FD13FFA8FFFFA8527D7D527D2752%7D52527D52A87D527D27FFFFFFA8FD05FFCA7DA87DA87DA87DA87DA852A8%7DA87DA852A87DA87DA87DA87DA8A8FD24FF7DFD04FF7DFD04FF7DFD17FF%7DFFFFFF7DA884A8A8527DA87DA87D7DA87E7DA87DFFFFFF7DFD0FFF7DFD%07FF7DFD2CFFA1FD05FF7DFD05FFA1FD16FFA8FD08FFA8FD0EFFA8FD0FFF%A8FD07FFA8FD2BFF7DFD06FF7DFD06FF7DFD15FFFD0C7D76FD0C7DFD0EFF%A8A8FD08FF7DFD28FFA87DFD07FF7DFD07FF7DFD20FFA8FD1AFF7DFD09FF%7DFD27FFA8A8FD08FF7DFD08FF7DFD1FFF7DFD19FFA8A8FD0AFF7DFD24FF%A8A8A8FD08FF5227A8FD08FF7DFD1DFF524B52FD17FF5252FD0BFF7D52FD%22FFA82752FD09FF27F8FD0AFF5227A8FD1AFF7DF87DFD17FF51F8A1FD0A%FFF827FD22FF522752FD0AFF27FD0AFF52F852FD1BFF27FD18FF277DFD0C%FF27FD14FFFD0E7D527D7DA8FFA8FD0F7DA8FF7D7D7D52FD0F7DFFFFFD15%7DFFA8FD147DA8FFA8FD0D7DA8FD0AFFA8FD10FF7DFF7DFD0FFF7DFF7DFD%11FF7DFFFFA1FD13FFA1FFA8FD14FF7DFF7DFD0DFF7DFD0AFF7DFD10FF7D%FF7DFD0FFF7DFF7DFD11FF7DFFFF7DFD13FF7DFF7DFD14FF7DFF7DFD0DFF%7DFD0AFFA8FFFF7DA87D7DFFFF52FFA87D7D7EFFFF7DFF7DFFA8FFA8A8A8%FFA8A8A8FFA8A87DFF7DFF7DFF7DA8A87DA8FF7DA852A8A87DA8A87DA87D%FFFFA8FFFF7DFFA8A87DA852FFFF7E7EA87DA852A8FFA8FFA8FFA87E7DFF%A852A8FFA87D52A8A87DA8A8A87DFF7DFF7DFFFFA87DA87D7D7DA852FFFF%FF7DFD0AFF7DFF7D52277D52FFFF52525227A87DFFFF7DFF7DFF27522752%A8FF7D5252597D277DFF7DFF7DFF277D2752A8FF5259525252277D27527D%7DFFFF7DFFA852597D5252527DA8FF527D52537D277DFF7DFF7DFF7D5252%7D527D84FF527D525327FD04527DFF7DFF7DFFFFA85252A85252527DA8FF%FF7DFD0AFFA1FFA87DFD0DFF7DFF7DFF27A8A8FFA8FFA8FFA8FFA8FFA8FF%7DFF7DFF7DA8FD0EFF7DFFFFA8FD13FFA8FFA1FF7DA8FD11FF7DFF7DFFFF%A8A8FD09FF7DFD0AFF7DFFA8FD07FFA8FFA8A8FFFFFF7DFF7DFD0FFF7DFF%7DFD04FF7DFD07FFA8FD04FF7DFFFF7DFFA8FD09FFA8FFFFA8FD04FF7DFF%7DFFFFA8FD11FF7DFF7DFD0DFF7DFD0AFFA8A8527DA8527D7DFF7D7D52FF%7EA87DFF7DFF7DA87DA87DA87DA87DA87DA87DA87DA8A8FF7DFD04FF7DFF%7D52A8527D7D52A8FFFFFF7DFFFFA8FF7D7D7DFFFF7DFFA8527DA852A852%7D7D52A8A8FFA8FFA8527D7D7DA87D59A87D52A87D52FF597D7DFF7DFF7D%FF7DA852FD047DA852A87DFF7DFD0AFF7DAF597DA87D527DFFA87D7DA87E%7D7DFF7DFD13FF7DFD04FF59A8527D52527D7D52A8FFFFFF7DFFFF7DFF7D%7D59FFA852A8FF52A8FD047D52A852FF7DFF7DFF84A852A8527D52527D7D%527D597D7E5252A8FF7DFF7DFFFD057D597D52277D52FF7DFD0AFFA8FD10%FF7DFD13FF7DFD09FF7DFD07FF7DFFFFA1FD13FFA1FFA8FD06FFA8A8FD0C%FF7DFF7DFD09FF7DFFFFFF7DFD0AFF52FD117DFD13FFFD127D52FFFF52FD%137D52FFFD167DFFFD0F7DFD0FFFA8FD05FFA8A8FD77FF7DFD07FF7DFD75%FFA87DA8FD08FF7DA8FD73FF272752FD08FF27F8FD73FF5227FD09FF7D27%52FD66FFA8FD0B7D52FD047DA8FFFFFD047D52FD0C7DA8FD5AFFA1FD10FF%7DFFFFA1FD10FF7DFD5AFF7DFD10FF7DFFFF7DFD10FF7DFD5AFFA8FD06FF%A8FFA8A8A8FD05FF7DFFFFA8FFA8A8FFA8FF7DFFA8A8FFFFA8A8A8FF7DFD%5AFF7DFD06FF277D2752A8FD05FF7DFFFF7DAF277D27275227FFFF277D52%277D7DFF7DFD5AFFA8FD06FF52A8A8FFA8FD05FF7DFFFFA8FFA8FFFFA8FF%A8FFFFFFA8FFA8FFA8FF7DFD5AFF7DFD10FF7DFFFF7DFD10FF7DFD5AFFA8%FF7D597D7DA87EFFFF7DA8A87DA87DFF7DFFFFA8A8527DA8A8A87DFFA827%7DA852FF7EFF7DFD5AFF7DFF52A8527E7D2784FF7D5227525227A87DFFFF%7DFF527E7D525227A8FF527E7D7D7D27FF7DFD5AFFA1FD10FF7DFFFFA1FD%10FF7DFD5AFF7DFD10FF7DFFFF7DFD10FF7DFD5BFF7DA8A8A87DA8A8A87D%A8A8A87DFD04A8FFFFA87DA8A8A87DA8A8A87DA8A8A87DFD04A8FDFCFFFD%DDFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T09:38:14+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T09:38:15+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T09:38:15+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>124</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqxrUbQah5vSznnukto9PMyxW91cWw9Qz8eTehJHyNPHFUZ/hLSv8A&#xA;f+o/9xPUf+yjFVsnlfRo1DSXWoIpKqC2qagBychVG9x1LEAYqu/wlpX+/wDUf+4nqP8A2UYqgbvS&#xA;YNM1nQXtLi9/f3skMyTX15PG6fUbmTi0c0siH40U9OoxVk+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsW1HV9J0zzukmpXsFlHLphWN7iVIgxFxUhS5WtK&#xA;4qu1vX/IWsaVdaVd6/p4t7yMxy8bu2LcT1oHLqfpU4qxOx8sflfYSBrbzeqOWtXAN7p7KGsZVlgK&#xA;o0ZVSnHj8IHwkjvjap/5Uu/y/wDLFjJY2fma0mgmmMyrPd2Y4MUVSqCIRKAfT5HbqScVRV/5j8va&#xA;hrnly30/VLS8n/SErejBPFK/Eafd1PFGJpirKsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVSy880eWbG5e1vdXsrW5jp6kE1xFHIvIBhVWYEVBBxVR/xr5N/wCr9p3/AElwf814q7/G&#xA;vk3/AKv2nf8ASXB/zXirv8a+Tf8Aq/ad/wBJcH/NeKu/xr5N/wCr9p3/AElwf814q7/Gvk3/AKv2&#xA;nf8ASXB/zXirv8a+Tf8Aq/ad/wBJcH/NeKu/xr5N/wCr9p3/AElwf814q7/Gvk3/AKv2nf8ASXB/&#xA;zXiqCg1vRtT85af+jb+2vvR06/8AV+rSpLw5T2fHlwLUrxNK4qidY/5Sny//ANHn/JkYqt813cFl&#xA;c6DeXJKW0GoM00gVnChrG6QE8QTTkwH04qu/xz5W/wCW3/klN/zRirv8c+Vv+W3/AJJTf80Yq7/H&#xA;Plb/AJbf+SU3/NGKu/xz5W/5bf8AklN/zRirv8c+Vv8Alt/5JTf80Yq7/HPlb/lt/wCSU3/NGKq9&#xA;h5r8v6hdrZ2l4sly6syRFXQsF+1Tmq1pXFU2xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV57+W/wCY&#xA;On+ZPNnnXSrXT721n0rUFF5JdLAI1dYI7X0wY5ZSzF7R2FBTjTeppir0LFXYq7FXYq7FXYq7FXYq&#xA;7FXnfnLz7Y6T+aXk/wAuS6df3F5qQma3nt4o2gAlBjbkzSI37kJzkopolDv0xV6JirsVdirsVdir&#xA;sVdirzbzx56n0j81fJfl5dGubz9Ket6N7ER6Y5/BPUEV/wBHjAlf/JOKvScVdirsVdirsVdirsVd&#xA;irsVdiqF1a4lt9KvbiI8ZYYJZI2pWjKhI2PuMVSbS9K1m60y0uZPMeoCSeGOVwsengcnQMaf6J74&#xA;qiv0Dqv/AFMeo/8AIvTv+yTFUDYeRv0fd6heWetX0F1qky3GoSrHp/KWVIkhVmradkjUUG3U9SSV&#xA;Ud+gdV/6mPUf+Renf9kmKoQrq2neYtKtn1e5vra9FwJoblLQAGKMMpUwQQtWvvirJMVdirsVdiqT&#xA;eY5b719HtLS8ksfr160M88KxNJ6a2lxNQeskqCrxL+zirv0Dqv8A1Meo/wDIvTv+yTFXfoHVf+pj&#xA;1H/kXp3/AGSYqgLvyKt5qthq1zrd/LqOlCYWFwUsOUP1lQk3EC1p8aqBuMVR/wCgdV/6mPUf+Ren&#xA;f9kmKrJNG1CJOcnmbUESoHJk04CrGgFTadyaYqstV1Ox8yWljNqlxqFtdWd1OyXKWy8XgltlQqYI&#xA;YD0nata4qn+KsZ0q11jVIbi7fXb23/029hSCGOx9NEt7uWFAPUtpH+xGK1Y4qjf0Dqv/AFMeo/8A&#xA;IvTv+yTFXfoHVf8AqY9R/wCRenf9kmKoK68kG71Kx1K41u+lv9N9X6jcNHp/KL11CS8f9E/bUUOK&#xA;o39A6r/1Meo/8i9O/wCyTFXfoHVf+pj1H/kXp3/ZJiqC1W11jS4be7TXb24/02yheCaOx9N0uLuK&#xA;FwfTto3+xIaUYYqybFXYq7FXYq7FXYq7FUBr/wDxwtS/5hZv+TbYqxGTy15p1O40q5s9XksNI/Qy&#xA;2xSGWRHjuXQ/v/SWiSfCVUcjsKlSrAHFWTaJot9pz3jXGoNem69FgZBICskcKxyNvI60kZeXFAtO&#xA;m+KsUm8gecIIkFn5jPFYo7f6tFHcwRAfWjM8o43ZPL02CGh5MB9ocicKpivkfWxdeu/mO4mEUjPb&#xA;CUS8lWRZA6uY540Y1kXjRVChaU3riq600u70q/8AKun3d9JqVzAL0SX03LnIWTlU83lbatN2OBWX&#xA;4q7FXYq7FUm17/jq+XP+2jJ/3TrvFUB5g8qWd7fTTy6zc6fLqaw20SxTCNucL+rSAtvyKodh7nFU&#xA;it/ymuIrxQdbunsjHe+owkZZfVu1RE4g81pEFJXfY9u+G1TKL8tYUgnUatdxXNybZprq34wuWtTR&#xA;TUAmnAKONaVFfYNqjfNHlC31fUbbUJdVuNPWGKS2McLIiu04aKJuTAlXR5fg4nckVrtgVAP+WgZZ&#xA;66vc+pLNaTK5qf8AeSMIFkUsVcOy822B5b+FDap5d/8AKZaX/wBs7UP+T9lgVOcVYXDoF3rOjW6Q&#xA;X31NbPXru9lQxmRJhbarNKqMFeI/aQEfFT/JO1FUBqXkHzj9UQWfmR/WjiWBYYRc20RLXhmknfjd&#xA;MzMIWKU5Bm/nHYqjD5E8wwyyS2Wv+gHvRfTRRW5ha5/0aO3kjuHjmClpfS5mRUFGJYDpQKmtt5d1&#xA;n/CEekzavPFqrANPqaO0rhzJ6jKrOQ3CnwClDTwxVLrzyb5lLXlxFr8s7kytYQt68ZRZI3HAyJcB&#xA;eXNko/pgKBslTXCqknkLzE9tHDceZp5FWOJiGFxyE8U0UobmtyCU4Q8OJJbcsXJxVEXejX+l6NMt&#xA;5qUmpNd65Y3UbSc/3KSajbcYU5ySnilOxA8AMCswxV2KuxV2KuxV2KuxVbJHHJG0cih43BV0YAgg&#xA;ihBB6g4qw7W9J8mWM9vpen+W9OvNbvFJtbMWsCpHGuxnuGCH04UOxNKk/CoLbYqitF/Lbylp9s4u&#xA;NNs767nczXVxLaw8TIQARFFxKxRilFRfpLMSxVUNE8oeU5NS19JNEsHWG/RIla1hIRTYWr8VBXYc&#xA;mJoO5OKqGr+QdGsb1tZ0rQ7O9QoFvtEa3t+Mqr0ktTIoWKZR+zUI/RqGjhVO/L+meTpEj1XRNOso&#xA;XIZBPDbRwzIa8ZI3oqujKRxdGoQdiMVTzFXYq7FXYqkHmq8tLK78v3V5PHbWsWouZZ5mWONeVhdK&#xA;OTMQBVmA+eKpXr11+Xut3EM915iso3gguLdPTubI/DdIEc1kEhDAD4aH51xVjmueWfy6vNHvbOw8&#xA;3RWk89jHZQAajbiBWhDenI0IqnLkxLEL1JYUf4sbVVuPL/5aXHqet5xCGdrhhBFqNokSC6t0t3RI&#xA;woVlRIwULqWB3rjaoy1078ubZf3Xm2Iyc7SX13u7B5A1kU9IB2jJVeMaqVWi0rQAsxLar9Jsfy40&#xA;zVrfU4vNaTy2r3LxR3Oo20y1uyWcVeslAW2+L51JNVU9g1jSdU832D6Ze298kGn3wna2lSYIZJ7M&#xA;oHKFuPLg1K9aHFWS4qlE3k/ylNNJNNolhJNKzSSyvawszu55MzMVqSxNSTiq3/BXk3/qw6d/0iQf&#xA;80YqkWr+U/Kt1r2m6Na6NYRrH/uR1N47WEEQQnjBESEqvrT0P+Ukci4qnv8Agryb/wBWHTv+kSD/&#xA;AJoxVIdd8peVNN1fTNU/Qth+jpXGnahD9WiKKbl1W1nC8aVWekRoOklTsuKp9/gryb/1YdO/6RIP&#xA;+aMVXQ+T/KUM0c0OiWEc0TLJFKlrCrI6HkrKwWoKkVBGKpvirsVdirsVdirsVdirD778xdLuPMF/&#xA;5Q8vSx3vnCzCmWzlDrDbo6q3rzSAfEkYdaqh5FiF2qWCqfaHocWlwyM8rXeoXREl/qEoAknkAoCQ&#xA;NlRRsiLso+nFUyxV59+W35g6Z5l81edNMs7G8t59K1FRePcpEqK6wR2vAFJJCWL2kh6U4033pir0&#xA;HFUg1XRL21vX1vy+ETUHIOo2LfDDfIq8QGP+651UAJL/ALF6rTiqpeVPzD8q+abzUbDSblm1LSCi&#xA;arYyxvFNbyPyBjcMACyMjK3EkAjrirJMVdirsVdirsVdirzrzn+YGmaR+aXlDy3NZXs99qIla3lg&#xA;iR4aT1iPJi6n91w5yfDsu++KvRcVdirsVdirsVQOu6xbaLoeo6zdK72umW015OkQBkaOCMyMEDFQ&#xA;WIXapGKsZ/KzzJp3m3RrvzfZ+qV1e5dYhNE8TR29sfSgiBfZwADIxQlfUdwDtirNMVQ2p6da6lp1&#xA;zp92vK2u4nhmUGh4upU0PY77HFWF/lN+aWk+eLS/tLQzy32gNFa6jdyxejHcSNzUTRI3GRQ/olir&#xA;opWtMVZ7irsVdirsVSLWpdXl1vT9N0+9Fik1td3M0npLMxMEluiKAxAA/ftXFXfofzT/ANTB/wBO&#xA;cP8AXFXfofzT/wBTB/05w/1xV36H80/9TB/05w/1xVhumflhp/krU5fMtlLFdatqOoW41C9ubdXu&#xA;ZPr12kU3GZmZoqicmkdBsKjFWVSSeYNQ8walaWmpLY21ituEQW6SljKhdiWc4qiP0P5p/wCpg/6c&#xA;4f64ql+m+SNR0y81G8sNWjt7nVpxdahKllCDLKsaxBjv/LGNh3qepJKqYfofzT/1MH/TnD/XFUtb&#xA;XNcg8raxO9ykuoWF3Jaw3RiCggSIqs0YNKgPiqUaR+TVjovmibzNo18mm6tcxPDdva2qRQyo5Vjz&#xA;gVvSryQNUKDXFWU/ofzT/wBTB/05w/1xV36H80/9TB/05w/1xV36H80/9TB/05w/1xVT0ufW7fzJ&#xA;Jpl/fLfQtZi5RvRWFlYS8CPgO4IxVC6HD5r1TRdP1NtcELX1tDctEtpEVQzRh+IJNaDlTfFUd+h/&#xA;NP8A1MH/AE5w/wBcVS698j6le6xpusXWsCXUtIE4064NpGDF9aQJNQBgp5KoG4xVMf0P5p/6mD/p&#xA;zh/rirv0P5p/6mD/AKc4f64qlq65rk/lbR50uUi1C/u47Wa6EQYAGR1ZljJpUhMVTL9D+af+pg/6&#xA;c4f64q79D+af+pg/6c4f64qhNW8p63q2lXmlX+uetYahBLa3cP1WNecMyGOReSsrCqsRUGuKqll5&#xA;b16xs4LKz1pLe0tkWK3gjsoVRI0HFVVQaAADFVmoJ5m0tLe7k1gXURu7OCS3a1jQMlzdRwN8SmoI&#xA;WSoxVfJJr+oa/qVpaakthbWC24RBbpKWMqF2Zmc/RtiqB0z8v7vS9X1TV9P1RLa/1kxPqcsdpGBM&#xA;8IYI5TlwDfvDVgKt3riqa/ofzT/1MH/TnD/XFUJqUfmjTIre6bWhcxm8soJYGtY0DR3F3FA45Kag&#xA;8ZDTFWUYq7FUmu/+Uy0v/tnah/yfssVY3ZeTvNd3qF/c3/mKZLSXUJ5oIrSeVke0cMi27KSqxGJT&#xA;xrH1NSRyCsCqdzeUppfKdpoTajKJ7Q27Jfo06szW8qyDlSb1CG48SDL+oYFSi98l39zdmWfzZcmy&#xA;nmuT9W9SWOqXy+mkKtFPGlI2B9KqHelP2uRVNNWspbHyvp1nLMbmW3vdKjec86uV1C3Ff3jyv/wT&#xA;k++BUu1iLzBLL5uj8vOI9YZLEWrHiKfB8dORC8vT5cakb9x1xVU0/wAsecPrFpdX2uyMkNzb3H1H&#xA;kxAiW3aOe3klj9H1qyMGDMtKrXjvTCqK8weX/Nl7qs1xpWufo+ze0EccBRnK3IkNZPtBOLRHj9mo&#xA;aje2BUHL5S83zXUU0uus8UWpx3htj9hraJ0cIpCKyE0eq1YfEN6KBhVQvf8AlFvM3/bUk/5PRYEr&#xA;73yj5yvfM2q3g1+Wx0y4e0k01IJJWMSwKolhaElYqSupcsN+gPJeSlQmmn+XXXyvd6ZZaxK31iSd&#xA;7TUkkkkki5yFlHNpXLcG2NGAO+w3xVKW/L7zEksMsHmeWJons5ZZWS4aSY2kDROJmN2FZZXYSFeP&#xA;EU6GpOFVOw/LrW4LScW/m26rcl5o540IrJI6SCV6SkSFinx9ARQLwXmrqpxpto9n5ptbN5nuXt9G&#xA;SJriUlpJCkwUu7MWYs1KmpwKoabpU2q/l5oNlBfy6dM1lYSLNCzozenEjlCYnhk4sBQ8XU/Rtiqh&#xA;q3kXzHdwyrbea7u2mlluXMpEpCpOnCNEWKeAL6RPIdq9htQqmnlvyzeaPc3NzdanJftcxRJIJDNQ&#xA;NCvAOBLNMN0Va/tE1JY12CpK/kXW4rGQHzjeKHM/CeRpKBZ4khgFfXU/uygaoYFm325PzKptoHlG&#xA;60rXrvVJdUlvkurWC1WGf1HeMQVNRJJLJVSzsaFeW+7Md8CpRZf8ot5Z/wC2pH/yelxSr6b5V8wN&#xA;eT3Nxq6rMmpXdzFG4e7kgt5xJHEkUkstIm9OUGnAp8K/BszOUJpoXla70zUzfz6pPfM9mlpMkzSk&#xA;F45XkWRQ0rqKLJw3UtQVLkliwVJrv8vdelM7R+Z7gTPcXsttLMs8ht4bqCSGKKLjcx0MJl5+ofiN&#xA;ABxGKtw+QNeW5Ez+abhplgWASLG3qKiyq6hWeaQ0om/Pkzt9tmT93hVVm0K+0fRJY7zVZ9Ve41rT&#xA;poZLgtWGE39sqQLyd6heP2u5OBU20f8A5SnzB/0Z/wDJk4qk1t5M8zSazNf3WuzxWg1N7uHTlluW&#xA;RrYK4SMss8fEMzqxSnAcFHH7RYqh2/LbXZIxC/mSRLZLNLVLaBbuKMSRTNMk1PrjHl9hW35MB9oV&#xA;xVkXmhGTRrVGbky3+lgse5GoW++9cCp5irsVYx5i1HTLHzNpraheW9jFNpupRJLdSLGhZpbPb4mS&#xA;vyBrirGodO8lwQNFD5ztbNfqcFnGbO8SAJ6MpleVUM8kfOYtSQ8amg3G9VUdokvlPTLPV7VvONpe&#xA;Lqhdl9e8RxCZAwPENOxp8Q2UqNtqYqoWaeT7KJIbTzTpEcccNjEkZeIqG0+ZpkkC/WBQuznnTG1p&#xA;Ue88u29lJaWvmdNZuNQ1uxuoYJLuGeSMPqFuxihVDy4JxJA7DFWW3nlnSru8kvH+sxXEoVZXtru6&#xA;tg4QUXksEsakgHqRiql/hLSv9/6j/wBxPUf+yjFXf4S0r/f+o/8AcT1H/soxV3+EtK/3/qP/AHE9&#xA;R/7KMVS7zVp2naR5K1FLesUHJZ5pJpXlYs0yF3eWZnY/MtiqY/418m/9X7Tv+kuD/mvFWGXVl5Zn&#xA;ijjTz1bWiRvev6FrcwwwP9elaY80WbkTG7koQ4pt4GpVBadpujLq73eped7C6S2e1fTZjeI8g+rw&#xA;tBIJIpJWiAdXJJALFviJp8ONqyjyrq3lHQdJXTm802F3HG37lnuohwTiBwHOaU0qCevfbbAqI07W&#xA;NJ1Pzw76be296kemASNbypKFJuKgMULUxVj9rfeWdR8naBat5lsNOubbTUhkYzx+vG8tmIGApNGU&#xA;ZOVdxXkB03qqjL668uXXlmDR08729rcwOrrqMN3CJCEcsqHlK7EBSB9uu257Yqv8wXPlHV9Ss70e&#xA;b7S2W2hnimtEuoDBOZYyiNIBIr/umYsArCvfFUmn0jyrNBcwP56thHcm3Zo1uk9PlbRJGAY2uGXg&#xA;3DmyrSrmte2G1pMbFfKVrrVpqbeeUuVtTMXtZ763eOT1OQTl8QP7v1Cdtie2ygC1dBfWMHkry1ez&#xA;XEUVmNSic3LuqxBDNLRuZPGhr1rilY1t5IbU3vh5rsofVvZr6UW92sLuZYhGis6XFGEfHkOSkcqb&#xA;bYbRSVS6Noha0gT8xBJbQ2M1o882oxNMJXmjkikChgj8UV0+Leh6nG1RZ07ywdTkvm/MHn6z3LtG&#xA;b+McFu1RWWHhMqqI+B9LkrcK+O5Cqs1p5WktZrdPPUNqZobSI3NteQpcA2cjyK3qNK/2vVKkU6Be&#xA;tDU2qtFceXLHSRp1p5kh1i7vdbsbpEN1HNKOd/bkxxrzd+KhK07b9BsAqvrVzo8mqeZ9Kvddj0Oe&#xA;8Sy9K49eOGYAJUlObKaGnE0+/FUC1j5VaSOf/HypcLcwXMhjvoFjkEKENE6GRqpLIzO4r3p0AobW&#xA;kv1jS9LfTDDpH5g28Nx9US1aOS/AikKzrK8hf1pJVZ1BUmrbE8eNcbVM1uPL1naNDD5oi1W51HVd&#xA;JeOyN5HMsTJe26slspd5OG2wJOwHepIV6RirsVdirz+187+XfOvnK48qafdV/wANzvPrtpIAjyzW&#xA;s3pwxopNXiWYeo7KKVCKftEYq9AxVjHnqe30axHm4yxwSaErvctKwRZrOSnr25JIHJuKtF/xYqjo&#xA;WqqmHlPzXonmzQbfXtDmNxpd00q28zK0ZYQytCzcWAYAtGaVANMVTfFXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWOafcebNSjnuYL6wt4Fu7u3iieymlcJbXMkCl&#xA;nF3GCSI6n4RiqK+qecv+rpp3/cPn/wCy3FXfVPOX/V007/uHz/8AZbiqQeVPy81DyudQl0u804Xu&#xA;rXMt7ql/Lp8z3FxNK7OTI/1wfCpc8VFFHhUklVP9JvNY/TF9pupS29wbe3trmKa2he3/AN6HnQqy&#xA;vLcVp9XrWo64ql+nr5o13QLa5nutM+qaraJJLZS6fNMnp3EYZonreKrji3E/Dv4YqgPJn5fan5O0&#xA;240zQdQsbfT57mS7W1axuHSJpQoZIq3tQlVqASdycVT/AOqecv8Aq6ad/wBw+f8A7LcVd9U85f8A&#xA;V007/uHz/wDZbiq/QL3U55NTttReGWfT7sW6y28TwoyNbQzglHknIIM5H2u2KptirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSbyl/xyp/8Ato6n/wB1G4xVZ52tvMdz5Zu4&#xA;fLkvo6uxi9CTkqngJUaUKW+EM0QZQT0JriqW2PljzYL+1vL3XXkihuVnFj8XFYTDwaBnQxesVbjR&#xA;nXehalWIwqy7AqTWn/KZap/2ztP/AOT97iqQ6Ro2u3/l/wAqzafqj6dbQ6QqTrHQlpZLaMQSFGVl&#xA;cRsCeNRXx7YqhL/yT+Yt3Y3VpJ5qSSO4ghjUGDgRJGAGPMFmHI/EWWlaAUG5JVk2u6Fq19fQXlhq&#xA;smntHa3Vs0a8nj9SdV9Kb0+Sxs0TL+0pqD2wKksPlDzmbpZbrzA0qxyWkkYVpY1JhThcB0RkBEvI&#xA;tStKgeJoVT3Qf+Or5j/7aMf/AHTrTAqc4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FWH2GgnVrGykMwjj07XNSu3iZXZZSt7dKgPCSMDg7BwSDQqMVUm8g6uLdlt9bW0ujZt&#xA;ZC+t7YrOFNx66/G07NRVqnXlQkhg2+FU313QNZ1AWBs9ZksJbQETuiORMWMfIlFljT7KOByDU5VF&#xA;CMCsdt/y886xwur+eLp5HgEAl9Bqji6sH4tOw5cU4lhRjU74VZNZBh5w1MMeTDTdOq3Sp9e93wKk&#xA;OneWbjWPLHla5ivjaNZ6SqxUWUkSz2iRpMvCaEBo96bHqdxirepeQfMtxbxxWfm68tGjSFeZEshL&#xA;xIwdifXRiHdudCfEEsoQIqnOueWJdU1K1vvrQj+q2t1bpGVlI9W6VU9YcJowCihl6Vox3GKpavkf&#xA;V4+bW2ufUppDYtNNa2wjaVrJDGfVrI/ISClQKfZAJZaqSqb6D/x1fMf/AG0Y/wDunWmBU5xV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsUv/APlVX16f9IfoL69zb6z9Y+p+&#xA;r6lfi9Tn8XKvWuKof/kDf/fu/wDTjirv+QN/9+7/ANOOKu/5A3/37v8A044qnnl3/CXpTf4c+oel&#xA;yH1j9Hejx5U+Hn6O1adK4qk03/KoPVf1v8P+ryPqc/qXLlXflXetcVWf8gb/AO/d/wCnHFXf8gb/&#xA;AO/d/wCnHFXf8gb/AO/d/wCnHFWQ6B/hz6if8P8A1P6jzPL6h6XpepQcq+j8PKlK4qmWKuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:FD7F1174072068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:FD7F1174072068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F1174072068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T09:38:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -187.896 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 187.896 li
396.013 187.896 li
396.013 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 187.896 mo
396.013 187.896 li
396.013 0 li
0 0 li
0 187.896 li
cp
clp
0 187.896 mo
396.013 187.896 li
396.013 0 li
0 0 li
0 187.896 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.84258 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
216.648 2.31689 mo
268.889 2.31689 li
268.889 24.2236 li
216.648 24.2236 li
216.648 2.31689 li
cp
.746 .676 .668 .898 cmyk
@
237.819 16.3628 mo
237.819 16.0752 237.625 16.0752 237.291 16.0752 cv
237.291 13.8325 li
237.291 13.647 237.291 12.5903 236.466 12.5903 cv
236.188 12.5903 235.809 12.7109 235.549 13.0723 cv
235.409 12.7573 235.15 12.5903 234.845 12.5903 cv
234.548 12.5903 234.27 12.7202 234.047 12.9238 cv
234.028 12.646 233.843 12.646 233.677 12.646 cv
233.38 12.646 li
233.241 12.646 233 12.646 233 12.9238 cv
233 13.2114 233.194 13.2114 233.528 13.2114 cv
233.528 16.0752 li
233.194 16.0752 233 16.0752 233 16.3628 cv
233 16.6406 233.25 16.6406 233.38 16.6406 cv
234.195 16.6406 li
234.335 16.6406 234.575 16.6406 234.575 16.3628 cv
234.575 16.0752 234.381 16.0752 234.047 16.0752 cv
234.047 14.416 li
234.047 13.5913 234.427 13.1558 234.808 13.1558 cv
235.021 13.1558 235.15 13.3135 235.15 13.916 cv
235.15 16.0752 li
234.974 16.0752 234.742 16.0752 234.742 16.3628 cv
234.742 16.6406 234.992 16.6406 235.122 16.6406 cv
235.817 16.6406 li
235.956 16.6406 236.197 16.6406 236.197 16.3628 cv
236.197 16.0752 236.003 16.0752 235.669 16.0752 cv
235.669 14.416 li
235.669 13.5913 236.049 13.1558 236.429 13.1558 cv
236.643 13.1558 236.772 13.3135 236.772 13.916 cv
236.772 16.0752 li
236.596 16.0752 236.364 16.0752 236.364 16.3628 cv
236.364 16.6406 236.614 16.6406 236.744 16.6406 cv
237.439 16.6406 li
237.578 16.6406 237.819 16.6406 237.819 16.3628 cv
cp
0 0 0 1 cmyk
f
242.713 16.3535 mo
242.713 16.0752 242.481 16.0752 242.343 16.0752 cv
241.953 16.0752 241.86 16.0288 241.786 16.001 cv
241.786 13.999 li
241.786 13.3413 241.286 12.5625 239.951 12.5625 cv
239.553 12.5625 238.607 12.5625 238.607 13.2393 cv
238.607 13.5171 238.802 13.6655 239.024 13.6655 cv
239.163 13.6655 239.423 13.582 239.433 13.2393 cv
239.433 13.165 239.441 13.1558 239.627 13.1372 cv
239.757 13.1279 239.877 13.1279 239.96 13.1279 cv
240.665 13.1279 241.146 13.415 241.146 14.0732 cv
239.506 14.1011 238.366 14.5645 238.366 15.4541 cv
238.366 16.0938 238.95 16.6963 239.896 16.6963 cv
240.238 16.6963 240.813 16.6313 241.249 16.3442 cv
241.452 16.6313 241.897 16.6406 242.25 16.6406 cv
242.509 16.6406 242.713 16.6406 242.713 16.3535 cv
cp
241.146 15.3989 mo
241.146 15.6118 241.146 15.8066 240.785 15.9736 cv
240.452 16.1309 240.034 16.1309 239.96 16.1309 cv
239.386 16.1309 239.006 15.8159 239.006 15.4541 cv
239.006 15 239.803 14.6572 241.146 14.6201 cv
241.146 15.3989 li
cp
f
246.995 16.3628 mo
246.995 16.0752 246.754 16.0752 246.615 16.0752 cv
245.633 16.0752 li
245.633 13.0259 li
245.633 12.7388 245.577 12.646 245.262 12.646 cv
243.955 12.646 li
243.816 12.646 243.575 12.646 243.575 12.9238 cv
243.575 13.2114 243.816 13.2114 243.955 13.2114 cv
244.993 13.2114 li
244.993 16.0752 li
243.881 16.0752 li
243.732 16.0752 243.501 16.0752 243.501 16.3628 cv
243.501 16.6406 243.742 16.6406 243.881 16.6406 cv
246.615 16.6406 li
246.754 16.6406 246.995 16.6406 246.995 16.3628 cv
cp
245.679 11.4966 mo
245.679 11.2373 245.471 11.0332 245.206 11.0332 cv
244.952 11.0332 244.752 11.2373 244.752 11.4966 cv
244.752 11.7563 244.952 11.96 245.206 11.96 cv
245.471 11.96 245.679 11.7563 245.679 11.4966 cv
cp
f
252.38 16.3628 mo
252.38 16.0752 252.148 16.0752 252 16.0752 cv
251.592 16.0752 li
251.592 13.9248 li
251.592 12.9888 251.119 12.5903 250.388 12.5903 cv
249.767 12.5903 249.35 12.9053 249.173 13.0815 cv
249.173 12.7852 249.173 12.646 248.803 12.646 cv
248.126 12.646 li
247.978 12.646 247.746 12.646 247.746 12.9336 cv
247.746 13.2114 247.987 13.2114 248.116 13.2114 cv
248.533 13.2114 li
248.533 16.0752 li
248.126 16.0752 li
247.978 16.0752 247.746 16.0752 247.746 16.3628 cv
247.746 16.6406 247.987 16.6406 248.116 16.6406 cv
249.59 16.6406 li
249.72 16.6406 249.961 16.6406 249.961 16.3628 cv
249.961 16.0752 249.729 16.0752 249.581 16.0752 cv
249.173 16.0752 li
249.173 14.4346 li
249.173 13.5078 249.859 13.1558 250.332 13.1558 cv
250.823 13.1558 250.953 13.415 250.953 13.9717 cv
250.953 16.0752 li
250.591 16.0752 li
250.443 16.0752 250.211 16.0752 250.211 16.3628 cv
250.211 16.6406 250.462 16.6406 250.591 16.6406 cv
252.01 16.6406 li
252.139 16.6406 252.38 16.6406 252.38 16.3628 cv
cp
f
31.5972 103.742 mo
83.8369 103.742 li
83.8369 135.76 li
31.5972 135.76 li
31.5972 103.742 li
cp
.746 .676 .668 .898 cmyk
@
42.9707 113.627 mo
42.9707 113.415 42.7949 113.127 42.2944 113.127 cv
42.1924 113.127 41.7383 113.136 41.312 113.452 cv
41.1636 113.35 40.8394 113.173 40.4126 113.173 cv
39.5415 113.173 38.8833 113.869 38.8833 114.656 cv
38.8833 115.055 39.041 115.361 39.1802 115.537 cv
39.0781 115.685 38.9946 115.889 38.9946 116.167 cv
38.9946 116.491 39.1245 116.723 39.208 116.834 cv
38.5313 117.251 38.5313 117.882 38.5313 117.984 cv
38.5313 118.781 39.5005 119.346 40.6816 119.346 cv
41.8682 119.346 42.8413 118.771 42.8413 117.984 cv
42.8413 117.641 42.6743 117.177 42.2017 116.927 cv
42.0811 116.862 41.6919 116.658 40.8574 116.658 cv
40.209 116.658 li
40.1348 116.658 40.0142 116.658 39.9399 116.64 cv
39.8013 116.64 39.7456 116.64 39.6343 116.51 cv
39.5322 116.38 39.5229 116.176 39.5229 116.176 cv
39.5229 116.139 39.5415 116.01 39.5786 115.917 cv
39.6064 115.936 39.9585 116.148 40.4126 116.148 cv
41.2656 116.148 41.9419 115.481 41.9419 114.656 cv
41.9419 114.378 41.8618 114.109 41.7104 113.85 cv
41.9019 113.739 42.1201 113.702 42.2388 113.692 cv
42.2944 113.943 42.5073 114.008 42.6001 114.008 cv
42.7578 114.008 42.9707 113.896 42.9707 113.627 cv
cp
41.3027 114.656 mo
41.3027 115.185 40.8945 115.592 40.4126 115.592 cv
39.9121 115.592 39.5229 115.157 39.5229 114.666 cv
39.5229 114.137 39.9307 113.729 40.4126 113.729 cv
40.9131 113.729 41.3027 114.165 41.3027 114.656 cv
cp
42.3037 117.984 mo
42.3037 118.392 41.6084 118.79 40.6816 118.79 cv
39.7603 118.79 39.0688 118.392 39.0688 117.984 cv
39.0688 117.817 39.1514 117.521 39.4438 117.335 cv
39.6724 117.187 39.7549 117.187 40.4312 117.187 cv
41.2563 117.187 42.3037 117.187 42.3037 117.984 cv
cp
0 0 0 1 cmyk
f
47.4199 116.213 mo
47.4199 115.954 47.1509 115.954 47.0952 115.954 cv
46.9282 115.954 46.8545 115.981 46.7896 116.158 cv
46.5854 116.63 46.085 116.714 45.8257 116.714 cv
45.1304 116.714 44.4351 116.25 44.2871 115.454 cv
47.0488 115.454 li
47.2437 115.454 47.4199 115.454 47.4199 115.11 cv
47.4199 114.054 46.8267 113.146 45.6216 113.146 cv
44.5186 113.146 43.6289 114.072 43.6289 115.212 cv
43.6289 116.343 44.5649 117.279 45.7607 117.279 cv
46.9839 117.279 47.4199 116.445 47.4199 116.213 cv
cp
46.7617 114.897 mo
44.2964 114.897 li
44.4258 114.221 44.9727 113.711 45.6216 113.711 cv
46.1035 113.711 46.6782 113.943 46.7617 114.897 cv
cp
f
52.1465 116.056 mo
52.1465 115.889 52.1465 115.694 51.8223 115.694 cv
51.5161 115.694 51.5068 115.889 51.5068 116.046 cv
51.4976 116.621 50.9692 116.714 50.7563 116.714 cv
50.0425 116.714 50.0425 116.232 50.0425 116 cv
50.0425 113.794 li
51.5625 113.794 li
51.7017 113.794 51.9336 113.794 51.9336 113.517 cv
51.9336 113.229 51.7109 113.229 51.5625 113.229 cv
50.0425 113.229 li
50.0425 112.469 li
50.0425 112.293 50.0425 112.089 49.7275 112.089 cv
49.4033 112.089 49.4033 112.284 49.4033 112.469 cv
49.4033 113.229 li
48.5967 113.229 li
48.4482 113.229 48.2168 113.229 48.2168 113.517 cv
48.2168 113.794 48.4482 113.794 48.5874 113.794 cv
49.4033 113.794 li
49.4033 116.056 li
49.4033 116.946 50.0332 117.279 50.71 117.279 cv
51.396 117.279 52.1465 116.881 52.1465 116.056 cv
cp
f
61.8784 116.056 mo
61.8784 115.889 61.8784 115.694 61.5537 115.694 cv
61.248 115.694 61.2388 115.889 61.2388 116.046 cv
61.2295 116.621 60.7012 116.714 60.4883 116.714 cv
59.7744 116.714 59.7744 116.232 59.7744 116 cv
59.7744 113.794 li
61.2944 113.794 li
61.4336 113.794 61.665 113.794 61.665 113.517 cv
61.665 113.229 61.4429 113.229 61.2944 113.229 cv
59.7744 113.229 li
59.7744 112.469 li
59.7744 112.293 59.7744 112.089 59.4595 112.089 cv
59.1348 112.089 59.1348 112.284 59.1348 112.469 cv
59.1348 113.229 li
58.3286 113.229 li
58.1802 113.229 57.9487 113.229 57.9487 113.517 cv
57.9487 113.794 58.1802 113.794 58.3193 113.794 cv
59.1348 113.794 li
59.1348 116.056 li
59.1348 116.946 59.7651 117.279 60.4419 117.279 cv
61.1274 117.279 61.8784 116.881 61.8784 116.056 cv
cp
f
66.8833 116.213 mo
66.8833 115.954 66.6143 115.954 66.5591 115.954 cv
66.3921 115.954 66.3179 115.981 66.2529 116.158 cv
66.0493 116.63 65.5488 116.714 65.2891 116.714 cv
64.5938 116.714 63.8989 116.25 63.7505 115.454 cv
66.5127 115.454 li
66.707 115.454 66.8833 115.454 66.8833 115.11 cv
66.8833 114.054 66.29 113.146 65.085 113.146 cv
63.9824 113.146 63.0923 114.072 63.0923 115.212 cv
63.0923 116.343 64.0288 117.279 65.2241 117.279 cv
66.4478 117.279 66.8833 116.445 66.8833 116.213 cv
cp
66.2251 114.897 mo
63.7598 114.897 li
63.8896 114.221 64.4365 113.711 65.085 113.711 cv
65.5674 113.711 66.1416 113.943 66.2251 114.897 cv
cp
f
72.0459 116.946 mo
72.0459 116.658 71.8047 116.658 71.6655 116.658 cv
71.2949 116.658 li
70.1089 115.166 li
71.165 113.794 li
71.5361 113.794 li
71.6655 113.794 71.916 113.794 71.916 113.517 cv
71.916 113.229 71.6748 113.229 71.5361 113.229 cv
70.4517 113.229 li
70.3125 113.229 70.0811 113.229 70.0811 113.507 cv
70.0811 113.794 70.2847 113.794 70.5352 113.794 cv
69.8491 114.73 li
69.1445 113.794 li
69.3857 113.794 69.5898 113.794 69.5898 113.507 cv
69.5898 113.229 69.3579 113.229 69.2188 113.229 cv
68.1343 113.229 li
67.9956 113.229 67.7544 113.229 67.7544 113.517 cv
67.7544 113.794 68.0049 113.794 68.1343 113.794 cv
68.5054 113.794 li
69.5991 115.166 li
68.4497 116.658 li
68.0791 116.658 li
67.9399 116.658 67.6987 116.658 67.6987 116.946 cv
67.6987 117.224 67.9492 117.224 68.0791 117.224 cv
69.1631 117.224 li
69.3022 117.224 69.5342 117.224 69.5342 116.946 cv
69.5342 116.658 69.3394 116.658 69.0522 116.658 cv
69.8491 115.519 li
70.6738 116.658 li
70.4146 116.658 70.2104 116.658 70.2104 116.946 cv
70.2104 117.224 70.4424 117.224 70.5815 117.224 cv
71.6655 117.224 li
71.7954 117.224 72.0459 117.224 72.0459 116.946 cv
cp
f
76.4761 116.056 mo
76.4761 115.889 76.4761 115.694 76.1519 115.694 cv
75.8457 115.694 75.8364 115.889 75.8364 116.046 cv
75.8271 116.621 75.2988 116.714 75.0859 116.714 cv
74.3721 116.714 74.3721 116.232 74.3721 116 cv
74.3721 113.794 li
75.8921 113.794 li
76.0313 113.794 76.2627 113.794 76.2627 113.517 cv
76.2627 113.229 76.0405 113.229 75.8921 113.229 cv
74.3721 113.229 li
74.3721 112.469 li
74.3721 112.293 74.3721 112.089 74.0571 112.089 cv
73.7324 112.089 73.7324 112.284 73.7324 112.469 cv
73.7324 113.229 li
72.9263 113.229 li
72.7778 113.229 72.5464 113.229 72.5464 113.517 cv
72.5464 113.794 72.7778 113.794 72.917 113.794 cv
73.7324 113.794 li
73.7324 116.056 li
73.7324 116.946 74.3628 117.279 75.0396 117.279 cv
75.7251 117.279 76.4761 116.881 76.4761 116.056 cv
cp
f
39.875 123.86 mo
39.875 123.304 39.1338 123.304 38.9854 123.304 cv
38.2441 123.304 37.5303 123.73 37.5303 124.537 cv
37.5303 125.028 li
36.6035 125.028 li
36.4551 125.028 36.2236 125.028 36.2236 125.315 cv
36.2236 125.593 36.4551 125.593 36.5942 125.593 cv
37.5303 125.593 li
37.5303 128.457 li
36.5942 128.457 li
36.4551 128.457 36.2144 128.457 36.2144 128.735 cv
36.2144 129.022 36.4551 129.022 36.5942 129.022 cv
39.106 129.022 li
39.2451 129.022 39.4858 129.022 39.4858 128.744 cv
39.4858 128.457 39.2451 128.457 39.106 128.457 cv
38.1699 128.457 li
38.1699 125.593 li
39.3008 125.593 li
39.4395 125.593 39.6714 125.593 39.6714 125.315 cv
39.6714 125.028 39.4487 125.028 39.3008 125.028 cv
38.1699 125.028 li
38.1699 124.592 li
38.1699 123.869 38.791 123.869 39.0688 123.869 cv
39.0688 123.906 39.1523 124.268 39.4766 124.268 cv
39.6621 124.268 39.875 124.119 39.875 123.86 cv
cp
f
45.2046 125.547 mo
45.2046 125.361 45.0933 124.972 44.3242 124.972 cv
43.8516 124.972 43.2583 125.139 42.7485 125.723 cv
42.7485 125.408 li
42.7485 125.12 42.6929 125.028 42.3774 125.028 cv
41.3584 125.028 li
41.2192 125.028 40.9873 125.028 40.9873 125.306 cv
40.9873 125.593 41.21 125.593 41.3584 125.593 cv
42.1089 125.593 li
42.1089 128.457 li
41.3584 128.457 li
41.2192 128.457 40.9873 128.457 40.9873 128.735 cv
40.9873 129.022 41.21 129.022 41.3584 129.022 cv
43.7773 129.022 li
43.916 129.022 44.1572 129.022 44.1572 128.744 cv
44.1572 128.457 43.916 128.457 43.7773 128.457 cv
42.7485 128.457 li
42.7485 127.298 li
42.7485 126.427 43.2954 125.538 44.4165 125.538 cv
44.4258 125.76 44.5835 125.945 44.8154 125.945 cv
45.019 125.945 45.2046 125.797 45.2046 125.547 cv
cp
f
49.8853 127.021 mo
49.8853 125.862 49.0229 124.944 47.9849 124.944 cv
46.9468 124.944 46.085 125.862 46.085 127.021 cv
46.085 128.197 46.9653 129.078 47.9849 129.078 cv
49.0044 129.078 49.8853 128.188 49.8853 127.021 cv
cp
49.2456 126.956 mo
49.2456 127.817 48.6709 128.513 47.9849 128.513 cv
47.2993 128.513 46.7246 127.817 46.7246 126.956 cv
46.7246 126.112 47.3271 125.51 47.9849 125.51 cv
48.6523 125.51 49.2456 126.112 49.2456 126.956 cv
cp
f
55.2051 128.744 mo
55.2051 128.457 55.0103 128.457 54.6768 128.457 cv
54.6768 126.214 li
54.6768 126.029 54.6768 124.972 53.8521 124.972 cv
53.5737 124.972 53.1938 125.093 52.9346 125.454 cv
52.7954 125.139 52.5356 124.972 52.23 124.972 cv
51.9336 124.972 51.6553 125.102 51.4331 125.306 cv
51.4146 125.028 51.229 125.028 51.062 125.028 cv
50.7656 125.028 li
50.6265 125.028 50.3857 125.028 50.3857 125.306 cv
50.3857 125.593 50.5801 125.593 50.9141 125.593 cv
50.9141 128.457 li
50.5801 128.457 50.3857 128.457 50.3857 128.744 cv
50.3857 129.022 50.6357 129.022 50.7656 129.022 cv
51.5811 129.022 li
51.7202 129.022 51.9609 129.022 51.9609 128.744 cv
51.9609 128.457 51.7666 128.457 51.4331 128.457 cv
51.4331 126.798 li
51.4331 125.973 51.813 125.538 52.1929 125.538 cv
52.4063 125.538 52.5356 125.695 52.5356 126.297 cv
52.5356 128.457 li
52.3599 128.457 52.1279 128.457 52.1279 128.744 cv
52.1279 129.022 52.3784 129.022 52.5078 129.022 cv
53.2031 129.022 li
53.3423 129.022 53.583 129.022 53.583 128.744 cv
53.583 128.457 53.3887 128.457 53.0547 128.457 cv
53.0547 126.798 li
53.0547 125.973 53.4351 125.538 53.8149 125.538 cv
54.0278 125.538 54.1577 125.695 54.1577 126.297 cv
54.1577 128.457 li
53.9814 128.457 53.75 128.457 53.75 128.744 cv
53.75 129.022 54 129.022 54.1299 129.022 cv
54.8252 129.022 li
54.9644 129.022 55.2051 129.022 55.2051 128.744 cv
cp
f
64.2046 123.86 mo
64.2046 123.304 63.4634 123.304 63.3149 123.304 cv
62.5732 123.304 61.8599 123.73 61.8599 124.537 cv
61.8599 125.028 li
60.9331 125.028 li
60.7847 125.028 60.5527 125.028 60.5527 125.315 cv
60.5527 125.593 60.7847 125.593 60.9238 125.593 cv
61.8599 125.593 li
61.8599 128.457 li
60.9238 128.457 li
60.7847 128.457 60.5439 128.457 60.5439 128.735 cv
60.5439 129.022 60.7847 129.022 60.9238 129.022 cv
63.4355 129.022 li
63.5742 129.022 63.8154 129.022 63.8154 128.744 cv
63.8154 128.457 63.5742 128.457 63.4355 128.457 cv
62.4995 128.457 li
62.4995 125.593 li
63.6299 125.593 li
63.769 125.593 64.001 125.593 64.001 125.315 cv
64.001 125.028 63.7783 125.028 63.6299 125.028 cv
62.4995 125.028 li
62.4995 124.592 li
62.4995 123.869 63.1201 123.869 63.3984 123.869 cv
63.3984 123.906 63.4819 124.268 63.8062 124.268 cv
63.9917 124.268 64.2046 124.119 64.2046 123.86 cv
cp
f
69.2466 128.744 mo
69.2466 128.457 69.0059 128.457 68.8667 128.457 cv
67.8843 128.457 li
67.8843 125.408 li
67.8843 125.12 67.8286 125.028 67.5137 125.028 cv
66.2065 125.028 li
66.0679 125.028 65.8267 125.028 65.8267 125.306 cv
65.8267 125.593 66.0679 125.593 66.2065 125.593 cv
67.2446 125.593 li
67.2446 128.457 li
66.1323 128.457 li
65.9844 128.457 65.7524 128.457 65.7524 128.744 cv
65.7524 129.022 65.9937 129.022 66.1323 129.022 cv
68.8667 129.022 li
69.0059 129.022 69.2466 129.022 69.2466 128.744 cv
cp
67.9307 123.878 mo
67.9307 123.619 67.7227 123.415 67.458 123.415 cv
67.2036 123.415 67.0039 123.619 67.0039 123.878 cv
67.0039 124.138 67.2036 124.342 67.458 124.342 cv
67.7227 124.342 67.9307 124.138 67.9307 123.878 cv
cp
f
74.2144 128.744 mo
74.2144 128.457 73.9922 128.457 73.8438 128.457 cv
72.6392 128.457 li
72.6392 123.739 li
72.6392 123.452 72.5835 123.359 72.2681 123.359 cv
70.8037 123.359 li
70.6553 123.359 70.4238 123.359 70.4238 123.646 cv
70.4238 123.925 70.6646 123.925 70.7944 123.925 cv
71.9995 123.925 li
71.9995 128.457 li
70.8037 128.457 li
70.6553 128.457 70.4238 128.457 70.4238 128.744 cv
70.4238 129.022 70.6646 129.022 70.7944 129.022 cv
73.8438 129.022 li
73.9829 129.022 74.2144 129.022 74.2144 128.744 cv
cp
f
79.0527 128.012 mo
79.0527 127.752 78.7837 127.752 78.7285 127.752 cv
78.5615 127.752 78.4873 127.78 78.4224 127.957 cv
78.2188 128.429 77.7178 128.513 77.4585 128.513 cv
76.7632 128.513 76.0684 128.049 75.9199 127.252 cv
78.6821 127.252 li
78.8765 127.252 79.0527 127.252 79.0527 126.909 cv
79.0527 125.853 78.4595 124.944 77.2544 124.944 cv
76.1519 124.944 75.2617 125.871 75.2617 127.011 cv
75.2617 128.142 76.1982 129.078 77.3936 129.078 cv
78.6172 129.078 79.0527 128.244 79.0527 128.012 cv
cp
78.3945 126.696 mo
75.9292 126.696 li
76.0591 126.02 76.606 125.51 77.2544 125.51 cv
77.7363 125.51 78.311 125.741 78.3945 126.696 cv
cp
f
206.538 53.5034 mo
278.999 53.5034 li
278.999 85.5215 li
206.538 85.5215 li
206.538 53.5034 li
cp
.746 .676 .668 .898 cmyk
@
217.893 65.9746 mo
217.893 65.7148 217.624 65.7148 217.568 65.7148 cv
217.42 65.7148 217.327 65.7334 217.262 65.9189 cv
217.206 66.0396 217.03 66.4751 216.345 66.4751 cv
215.557 66.4751 214.89 65.8262 214.89 64.9829 cv
214.89 64.5381 215.148 63.4722 216.4 63.4722 cv
216.595 63.4722 216.956 63.4722 216.956 63.5557 cv
216.966 63.8799 217.142 64.0098 217.364 64.0098 cv
217.587 64.0098 217.781 63.8521 217.781 63.5835 cv
217.781 62.9067 216.817 62.9067 216.4 62.9067 cv
214.806 62.9067 214.25 64.167 214.25 64.9829 cv
214.25 66.0952 215.121 67.0405 216.289 67.0405 cv
217.577 67.0405 217.893 66.1323 217.893 65.9746 cv
cp
0 0 0 1 cmyk
f
222.768 64.9829 mo
222.768 63.8242 221.905 62.9067 220.867 62.9067 cv
219.829 62.9067 218.968 63.8242 218.968 64.9829 cv
218.968 66.1602 219.848 67.0405 220.867 67.0405 cv
221.887 67.0405 222.768 66.1509 222.768 64.9829 cv
cp
222.128 64.918 mo
222.128 65.7798 221.554 66.4751 220.867 66.4751 cv
220.182 66.4751 219.607 65.7798 219.607 64.918 cv
219.607 64.0747 220.209 63.4722 220.867 63.4722 cv
221.535 63.4722 222.128 64.0747 222.128 64.918 cv
cp
f
228.088 66.707 mo
228.088 66.4194 227.893 66.4194 227.56 66.4194 cv
227.56 64.1768 li
227.56 63.9912 227.56 62.9346 226.734 62.9346 cv
226.456 62.9346 226.076 63.0552 225.816 63.4165 cv
225.678 63.1016 225.418 62.9346 225.112 62.9346 cv
224.815 62.9346 224.538 63.0645 224.315 63.2681 cv
224.297 62.9902 224.111 62.9902 223.944 62.9902 cv
223.648 62.9902 li
223.509 62.9902 223.268 62.9902 223.268 63.2681 cv
223.268 63.5557 223.463 63.5557 223.796 63.5557 cv
223.796 66.4194 li
223.463 66.4194 223.268 66.4194 223.268 66.707 cv
223.268 66.9849 223.519 66.9849 223.648 66.9849 cv
224.464 66.9849 li
224.603 66.9849 224.844 66.9849 224.844 66.707 cv
224.844 66.4194 224.649 66.4194 224.315 66.4194 cv
224.315 64.7603 li
224.315 63.9355 224.695 63.5 225.075 63.5 cv
225.288 63.5 225.418 63.6572 225.418 64.2598 cv
225.418 66.4194 li
225.242 66.4194 225.011 66.4194 225.011 66.707 cv
225.011 66.9849 225.261 66.9849 225.391 66.9849 cv
226.086 66.9849 li
226.225 66.9849 226.466 66.9849 226.466 66.707 cv
226.466 66.4194 226.271 66.4194 225.938 66.4194 cv
225.938 64.7603 li
225.938 63.9355 226.317 63.5 226.697 63.5 cv
226.91 63.5 227.04 63.6572 227.04 64.2598 cv
227.04 66.4194 li
226.864 66.4194 226.633 66.4194 226.633 66.707 cv
226.633 66.9849 226.883 66.9849 227.013 66.9849 cv
227.708 66.9849 li
227.847 66.9849 228.088 66.9849 228.088 66.707 cv
cp
f
232.694 64.9829 mo
232.694 63.8428 231.869 62.9346 230.887 62.9346 cv
230.441 62.9346 230.024 63.1016 229.71 63.3887 cv
229.71 63.1201 229.691 62.9902 229.339 62.9902 cv
228.662 62.9902 li
228.514 62.9902 228.282 62.9902 228.282 63.2773 cv
228.282 63.5557 228.523 63.5557 228.653 63.5557 cv
229.07 63.5557 li
229.07 68.4771 li
228.662 68.4771 li
228.514 68.4771 228.282 68.4771 228.282 68.7646 cv
228.282 69.0425 228.523 69.0425 228.653 69.0425 cv
230.127 69.0425 li
230.257 69.0425 230.497 69.0425 230.497 68.7646 cv
230.497 68.4771 230.266 68.4771 230.117 68.4771 cv
229.71 68.4771 li
229.71 66.5679 li
230.09 66.957 230.488 67.0405 230.784 67.0405 cv
231.795 67.0405 232.694 66.1602 232.694 64.9829 cv
cp
232.055 64.9829 mo
232.055 65.8726 231.405 66.4751 230.757 66.4751 cv
230.034 66.4751 229.71 65.6597 229.71 65.2148 cv
229.71 64.5381 li
229.71 63.9912 230.247 63.5 230.831 63.5 cv
231.517 63.5 232.055 64.1768 232.055 64.9829 cv
cp
f
237.782 66.6973 mo
237.782 66.4194 237.541 66.4194 237.411 66.4194 cv
236.994 66.4194 li
236.994 63.3701 li
236.994 63.083 236.938 62.9902 236.624 62.9902 cv
235.947 62.9902 li
235.799 62.9902 235.567 62.9902 235.567 63.2773 cv
235.567 63.5557 235.808 63.5557 235.938 63.5557 cv
236.354 63.5557 li
236.354 65.5298 li
236.354 66.3638 235.604 66.4751 235.308 66.4751 cv
234.575 66.4751 234.575 66.1694 234.575 65.8726 cv
234.575 63.3701 li
234.575 63.083 234.52 62.9902 234.205 62.9902 cv
233.528 62.9902 li
233.38 62.9902 233.148 62.9902 233.148 63.2773 cv
233.148 63.5557 233.389 63.5557 233.519 63.5557 cv
233.936 63.5557 li
233.936 65.9282 li
233.936 66.8179 234.575 67.0405 235.252 67.0405 cv
235.632 67.0405 236.012 66.9478 236.354 66.6885 cv
236.364 66.9849 236.559 66.9849 236.726 66.9849 cv
237.402 66.9849 li
237.551 66.9849 237.782 66.9849 237.782 66.6973 cv
cp
f
242.064 65.8169 mo
242.064 65.6504 242.064 65.4556 241.74 65.4556 cv
241.434 65.4556 241.425 65.6504 241.425 65.8076 cv
241.415 66.3823 240.887 66.4751 240.674 66.4751 cv
239.96 66.4751 239.96 65.9932 239.96 65.7612 cv
239.96 63.5557 li
241.48 63.5557 li
241.619 63.5557 241.851 63.5557 241.851 63.2773 cv
241.851 62.9902 241.629 62.9902 241.48 62.9902 cv
239.96 62.9902 li
239.96 62.23 li
239.96 62.0542 239.96 61.8501 239.646 61.8501 cv
239.321 61.8501 239.321 62.0449 239.321 62.23 cv
239.321 62.9902 li
238.515 62.9902 li
238.366 62.9902 238.135 62.9902 238.135 63.2773 cv
238.135 63.5557 238.366 63.5557 238.505 63.5557 cv
239.321 63.5557 li
239.321 65.8169 li
239.321 66.707 239.951 67.0405 240.628 67.0405 cv
241.313 67.0405 242.064 66.6421 242.064 65.8169 cv
cp
f
247.069 65.9746 mo
247.069 65.7148 246.801 65.7148 246.745 65.7148 cv
246.578 65.7148 246.504 65.7427 246.438 65.9189 cv
246.235 66.3916 245.734 66.4751 245.475 66.4751 cv
244.78 66.4751 244.085 66.0117 243.937 65.2148 cv
246.698 65.2148 li
246.894 65.2148 247.069 65.2148 247.069 64.8716 cv
247.069 63.8149 246.476 62.9067 245.271 62.9067 cv
244.168 62.9067 243.278 63.8335 243.278 64.9736 cv
243.278 66.1045 244.215 67.0405 245.41 67.0405 cv
246.634 67.0405 247.069 66.2061 247.069 65.9746 cv
cp
246.411 64.6587 mo
243.945 64.6587 li
244.075 63.9819 244.622 63.4722 245.271 63.4722 cv
245.753 63.4722 246.328 63.7041 246.411 64.6587 cv
cp
f
257.209 63.2681 mo
257.209 62.9902 256.986 62.9902 256.819 62.9902 cv
255.754 62.9902 li
255.587 62.9902 255.364 62.9902 255.364 63.2681 cv
255.364 63.5557 255.577 63.5557 255.754 63.5557 cv
256.208 63.5557 li
255.744 66.3174 li
255.735 66.3174 li
255.698 66.0767 255.577 65.6504 255.466 65.27 cv
255.3 64.6865 255.271 64.5845 254.947 64.5845 cv
254.854 64.5845 254.679 64.5845 254.576 64.7881 cv
254.549 64.853 254.178 66.1323 254.141 66.3174 cv
254.132 66.3174 li
253.649 63.5557 li
254.104 63.5557 li
254.271 63.5557 254.493 63.5557 254.493 63.2773 cv
254.493 62.9902 254.28 62.9902 254.104 62.9902 cv
253.038 62.9902 li
252.871 62.9902 252.648 62.9902 252.648 63.2681 cv
252.648 63.5557 252.844 63.5557 253.121 63.5557 cv
253.678 66.6699 li
253.715 66.8828 253.742 67.022 254.113 67.022 cv
254.483 67.022 254.512 66.9385 254.679 66.373 cv
254.91 65.5576 254.92 65.4277 254.947 65.2236 cv
254.956 65.2236 li
255.003 65.7061 255.346 66.79 255.383 66.8643 cv
255.494 67.022 255.661 67.022 255.772 67.022 cv
256.115 67.022 256.143 66.8735 256.18 66.6699 cv
256.736 63.5557 li
257.015 63.5557 257.209 63.5557 257.209 63.2681 cv
cp
f
261.694 64.9829 mo
261.694 63.8242 260.833 62.9067 259.795 62.9067 cv
258.757 62.9067 257.895 63.8242 257.895 64.9829 cv
257.895 66.1602 258.775 67.0405 259.795 67.0405 cv
260.814 67.0405 261.694 66.1509 261.694 64.9829 cv
cp
261.056 64.918 mo
261.056 65.7798 260.48 66.4751 259.795 66.4751 cv
259.108 66.4751 258.534 65.7798 258.534 64.918 cv
258.534 64.0747 259.137 63.4722 259.795 63.4722 cv
260.462 63.4722 261.056 64.0747 261.056 64.918 cv
cp
f
266.746 63.5093 mo
266.746 63.3237 266.635 62.9346 265.865 62.9346 cv
265.393 62.9346 264.8 63.1016 264.29 63.6855 cv
264.29 63.3701 li
264.29 63.083 264.234 62.9902 263.919 62.9902 cv
262.899 62.9902 li
262.761 62.9902 262.528 62.9902 262.528 63.2681 cv
262.528 63.5557 262.751 63.5557 262.899 63.5557 cv
263.65 63.5557 li
263.65 66.4194 li
262.899 66.4194 li
262.761 66.4194 262.528 66.4194 262.528 66.6973 cv
262.528 66.9849 262.751 66.9849 262.899 66.9849 cv
265.318 66.9849 li
265.458 66.9849 265.698 66.9849 265.698 66.707 cv
265.698 66.4194 265.458 66.4194 265.318 66.4194 cv
264.29 66.4194 li
264.29 65.2607 li
264.29 64.3896 264.837 63.5 265.958 63.5 cv
265.968 63.7227 266.125 63.9077 266.356 63.9077 cv
266.561 63.9077 266.746 63.7593 266.746 63.5093 cv
cp
f
271.844 66.6973 mo
271.844 66.4194 271.603 66.4194 271.473 66.4194 cv
271.056 66.4194 li
271.056 61.7017 li
271.056 61.4146 271 61.3218 270.685 61.3218 cv
270.009 61.3218 li
269.86 61.3218 269.628 61.3218 269.628 61.6094 cv
269.628 61.8872 269.869 61.8872 269.999 61.8872 cv
270.416 61.8872 li
270.416 63.3516 li
270.11 63.083 269.73 62.9346 269.332 62.9346 cv
268.321 62.9346 267.432 63.8149 267.432 64.9922 cv
267.432 66.1416 268.266 67.0405 269.248 67.0405 cv
269.768 67.0405 270.157 66.79 270.416 66.5215 cv
270.416 66.855 270.416 66.9849 270.787 66.9849 cv
271.464 66.9849 li
271.612 66.9849 271.844 66.9849 271.844 66.6973 cv
cp
270.416 65.1865 mo
270.416 65.7061 269.999 66.4751 269.285 66.4751 cv
268.628 66.4751 268.071 65.8169 268.071 64.9922 cv
268.071 64.1025 268.72 63.5 269.369 63.5 cv
269.962 63.5 270.416 64.019 270.416 64.5288 cv
270.416 65.1865 li
cp
f
220.052 73.6211 mo
220.052 73.0649 219.311 73.0649 219.162 73.0649 cv
218.421 73.0649 217.707 73.4912 217.707 74.2979 cv
217.707 74.7891 li
216.78 74.7891 li
216.632 74.7891 216.4 74.7891 216.4 75.0762 cv
216.4 75.354 216.632 75.354 216.771 75.354 cv
217.707 75.354 li
217.707 78.2183 li
216.771 78.2183 li
216.632 78.2183 216.391 78.2183 216.391 78.4961 cv
216.391 78.7837 216.632 78.7837 216.771 78.7837 cv
219.282 78.7837 li
219.422 78.7837 219.662 78.7837 219.662 78.5054 cv
219.662 78.2183 219.422 78.2183 219.282 78.2183 cv
218.347 78.2183 li
218.347 75.354 li
219.478 75.354 li
219.616 75.354 219.848 75.354 219.848 75.0762 cv
219.848 74.7891 219.626 74.7891 219.478 74.7891 cv
218.347 74.7891 li
218.347 74.353 li
218.347 73.6304 218.968 73.6304 219.245 73.6304 cv
219.245 73.6675 219.329 74.0288 219.653 74.0288 cv
219.839 74.0288 220.052 73.8804 220.052 73.6211 cv
cp
f
225.381 75.3076 mo
225.381 75.1226 225.27 74.7334 224.501 74.7334 cv
224.028 74.7334 223.435 74.8999 222.925 75.4839 cv
222.925 75.1689 li
222.925 74.8813 222.869 74.7891 222.555 74.7891 cv
221.535 74.7891 li
221.396 74.7891 221.164 74.7891 221.164 75.0669 cv
221.164 75.354 221.387 75.354 221.535 75.354 cv
222.285 75.354 li
222.285 78.2183 li
221.535 78.2183 li
221.396 78.2183 221.164 78.2183 221.164 78.4961 cv
221.164 78.7837 221.387 78.7837 221.535 78.7837 cv
223.954 78.7837 li
224.093 78.7837 224.334 78.7837 224.334 78.5054 cv
224.334 78.2183 224.093 78.2183 223.954 78.2183 cv
222.925 78.2183 li
222.925 77.0596 li
222.925 76.1885 223.472 75.2988 224.594 75.2988 cv
224.603 75.521 224.76 75.7065 224.992 75.7065 cv
225.196 75.7065 225.381 75.5581 225.381 75.3076 cv
cp
f
230.034 77.7734 mo
230.034 77.5137 229.765 77.5137 229.71 77.5137 cv
229.543 77.5137 229.469 77.5415 229.403 77.7178 cv
229.2 78.1904 228.699 78.2739 228.439 78.2739 cv
227.744 78.2739 227.05 77.8105 226.901 77.0132 cv
229.663 77.0132 li
229.857 77.0132 230.034 77.0132 230.034 76.6704 cv
230.034 75.6138 229.44 74.7056 228.235 74.7056 cv
227.133 74.7056 226.243 75.6323 226.243 76.7725 cv
226.243 77.9028 227.18 78.8389 228.375 78.8389 cv
229.599 78.8389 230.034 78.0049 230.034 77.7734 cv
cp
229.376 76.457 mo
226.91 76.457 li
227.04 75.7803 227.587 75.2705 228.235 75.2705 cv
228.718 75.2705 229.292 75.5024 229.376 76.457 cv
cp
f
235.576 80.563 mo
235.576 80.2759 235.354 80.2759 235.206 80.2759 cv
234.752 80.2759 li
234.752 75.1133 li
234.752 74.937 234.752 74.7334 234.437 74.7334 cv
234.112 74.7334 234.112 74.8906 234.112 75.2432 cv
233.861 74.9741 233.481 74.7334 232.953 74.7334 cv
231.915 74.7334 230.97 75.6138 230.97 76.791 cv
230.97 77.9399 231.841 78.8389 232.86 78.8389 cv
233.491 78.8389 233.917 78.4961 234.112 78.2832 cv
234.112 80.2759 li
233.658 80.2759 li
233.519 80.2759 233.287 80.2759 233.287 80.5537 cv
233.287 80.8408 233.51 80.8408 233.658 80.8408 cv
235.206 80.8408 li
235.345 80.8408 235.576 80.8408 235.576 80.563 cv
cp
234.112 76.9854 mo
234.112 77.5137 233.658 78.2739 232.897 78.2739 cv
232.212 78.2739 231.609 77.625 231.609 76.791 cv
231.609 75.938 232.259 75.2988 233 75.2988 cv
233.695 75.2988 234.112 76.0122 234.112 76.624 cv
234.112 76.9854 li
cp
f
240.211 78.4961 mo
240.211 78.2183 239.97 78.2183 239.84 78.2183 cv
239.423 78.2183 li
239.423 75.1689 li
239.423 74.8813 239.367 74.7891 239.052 74.7891 cv
238.375 74.7891 li
238.228 74.7891 237.995 74.7891 237.995 75.0762 cv
237.995 75.354 238.236 75.354 238.366 75.354 cv
238.783 75.354 li
238.783 77.3281 li
238.783 78.1626 238.032 78.2739 237.736 78.2739 cv
237.004 78.2739 237.004 77.9678 237.004 77.6714 cv
237.004 75.1689 li
237.004 74.8813 236.948 74.7891 236.633 74.7891 cv
235.956 74.7891 li
235.808 74.7891 235.576 74.7891 235.576 75.0762 cv
235.576 75.354 235.817 75.354 235.947 75.354 cv
236.364 75.354 li
236.364 77.7271 li
236.364 78.6167 237.004 78.8389 237.681 78.8389 cv
238.061 78.8389 238.44 78.7466 238.783 78.4868 cv
238.793 78.7837 238.987 78.7837 239.154 78.7837 cv
239.831 78.7837 li
239.979 78.7837 240.211 78.7837 240.211 78.4961 cv
cp
f
244.632 77.7734 mo
244.632 77.5137 244.362 77.5137 244.308 77.5137 cv
244.141 77.5137 244.066 77.5415 244.001 77.7178 cv
243.798 78.1904 243.297 78.2739 243.037 78.2739 cv
242.343 78.2739 241.647 77.8105 241.499 77.0132 cv
244.261 77.0132 li
244.455 77.0132 244.632 77.0132 244.632 76.6704 cv
244.632 75.6138 244.038 74.7056 242.834 74.7056 cv
241.73 74.7056 240.841 75.6323 240.841 76.7725 cv
240.841 77.9028 241.777 78.8389 242.973 78.8389 cv
244.196 78.8389 244.632 78.0049 244.632 77.7734 cv
cp
243.974 76.457 mo
241.508 76.457 li
241.638 75.7803 242.185 75.2705 242.834 75.2705 cv
243.315 75.2705 243.89 75.5024 243.974 76.457 cv
cp
f
249.942 78.5054 mo
249.942 78.2183 249.711 78.2183 249.563 78.2183 cv
249.154 78.2183 li
249.154 76.0679 li
249.154 75.1318 248.682 74.7334 247.949 74.7334 cv
247.329 74.7334 246.911 75.0483 246.735 75.2246 cv
246.735 74.9277 246.735 74.7891 246.365 74.7891 cv
245.688 74.7891 li
245.54 74.7891 245.309 74.7891 245.309 75.0762 cv
245.309 75.354 245.549 75.354 245.679 75.354 cv
246.096 75.354 li
246.096 78.2183 li
245.688 78.2183 li
245.54 78.2183 245.309 78.2183 245.309 78.5054 cv
245.309 78.7837 245.549 78.7837 245.679 78.7837 cv
247.152 78.7837 li
247.282 78.7837 247.523 78.7837 247.523 78.5054 cv
247.523 78.2183 247.292 78.2183 247.144 78.2183 cv
246.735 78.2183 li
246.735 76.5776 li
246.735 75.6509 247.421 75.2988 247.894 75.2988 cv
248.386 75.2988 248.515 75.5581 248.515 76.1143 cv
248.515 78.2183 li
248.153 78.2183 li
248.005 78.2183 247.773 78.2183 247.773 78.5054 cv
247.773 78.7837 248.023 78.7837 248.153 78.7837 cv
249.571 78.7837 li
249.701 78.7837 249.942 78.7837 249.942 78.5054 cv
cp
f
254.382 77.7734 mo
254.382 77.5137 254.113 77.5137 254.058 77.5137 cv
253.909 77.5137 253.816 77.5322 253.752 77.7178 cv
253.696 77.8379 253.52 78.2739 252.834 78.2739 cv
252.046 78.2739 251.379 77.625 251.379 76.7813 cv
251.379 76.3369 251.639 75.2705 252.89 75.2705 cv
253.084 75.2705 253.446 75.2705 253.446 75.354 cv
253.455 75.6787 253.631 75.8086 253.854 75.8086 cv
254.076 75.8086 254.271 75.6509 254.271 75.3818 cv
254.271 74.7056 253.307 74.7056 252.89 74.7056 cv
251.296 74.7056 250.739 75.9658 250.739 76.7813 cv
250.739 77.8936 251.61 78.8389 252.778 78.8389 cv
254.066 78.8389 254.382 77.9307 254.382 77.7734 cv
cp
f
259.155 78.5054 mo
259.155 78.2183 258.914 78.2183 258.775 78.2183 cv
257.793 78.2183 li
257.793 75.1689 li
257.793 74.8813 257.737 74.7891 257.422 74.7891 cv
256.115 74.7891 li
255.977 74.7891 255.735 74.7891 255.735 75.0669 cv
255.735 75.354 255.977 75.354 256.115 75.354 cv
257.153 75.354 li
257.153 78.2183 li
256.041 78.2183 li
255.893 78.2183 255.661 78.2183 255.661 78.5054 cv
255.661 78.7837 255.902 78.7837 256.041 78.7837 cv
258.775 78.7837 li
258.914 78.7837 259.155 78.7837 259.155 78.5054 cv
cp
257.839 73.6396 mo
257.839 73.3799 257.631 73.1763 257.366 73.1763 cv
257.112 73.1763 256.912 73.3799 256.912 73.6396 cv
256.912 73.8989 257.112 74.103 257.366 74.103 cv
257.631 74.103 257.839 73.8989 257.839 73.6396 cv
cp
f
264.095 77.7734 mo
264.095 77.5137 263.826 77.5137 263.771 77.5137 cv
263.604 77.5137 263.53 77.5415 263.465 77.7178 cv
263.261 78.1904 262.761 78.2739 262.501 78.2739 cv
261.806 78.2739 261.11 77.8105 260.963 77.0132 cv
263.725 77.0132 li
263.919 77.0132 264.095 77.0132 264.095 76.6704 cv
264.095 75.6138 263.502 74.7056 262.297 74.7056 cv
261.194 74.7056 260.305 75.6323 260.305 76.7725 cv
260.305 77.9028 261.24 78.8389 262.437 78.8389 cv
263.659 78.8389 264.095 78.0049 264.095 77.7734 cv
cp
263.438 76.457 mo
260.972 76.457 li
261.102 75.7803 261.648 75.2705 262.297 75.2705 cv
262.779 75.2705 263.354 75.5024 263.438 76.457 cv
cp
f
268.915 77.625 mo
268.915 76.6611 267.719 76.4663 267.423 76.4199 cv
266.792 76.3086 li
266.523 76.272 265.894 76.1606 265.894 75.7988 cv
265.894 75.5581 266.189 75.2705 267.07 75.2705 cv
267.84 75.2705 267.97 75.5488 267.997 75.79 cv
268.007 75.9473 268.025 76.105 268.313 76.105 cv
268.637 76.105 268.637 75.9102 268.637 75.7251 cv
268.637 75.0854 li
268.637 74.937 268.637 74.7056 268.358 74.7056 cv
268.136 74.7056 268.099 74.835 268.081 74.8999 cv
267.673 74.7056 267.265 74.7056 267.089 74.7056 cv
265.541 74.7056 265.328 75.4653 265.328 75.7988 cv
265.328 76.6519 266.301 76.8096 267.153 76.939 cv
267.608 77.0132 268.35 77.1338 268.35 77.625 cv
268.35 77.9678 268.007 78.2739 267.163 78.2739 cv
266.728 78.2739 266.208 78.1719 265.977 77.4487 cv
265.931 77.2822 265.894 77.1802 265.652 77.1802 cv
265.328 77.1802 265.328 77.3745 265.328 77.5601 cv
265.328 78.459 li
265.328 78.6074 265.328 78.8389 265.606 78.8389 cv
265.689 78.8389 265.838 78.8301 265.949 78.4868 cv
266.403 78.8203 266.895 78.8389 267.153 78.8389 cv
268.618 78.8389 268.915 78.0698 268.915 77.625 cv
cp
f
229.709 24.2236 mo
229.709 34.2505 li
229.709 36.2305 li
177.433 36.2305 li
115.328 36.2305 li
115.328 45.1621 li
.746 .676 .668 .898 cmyk
@
115.328 51.9028 mo
117.856 45.1621 li
112.801 45.1621 li
115.328 51.9028 li
cp
f
0 lc
0 lj
115.328 51.9028 mo
117.856 45.1621 li
112.801 45.1621 li
115.328 51.9028 li
cp
@
1 lc
1 lj
242.769 24.2236 mo
242.769 45.1621 li
@
242.769 51.9028 mo
245.296 45.1621 li
240.241 45.1621 li
242.769 51.9028 li
cp
f
0 lc
0 lj
242.769 51.9028 mo
245.296 45.1621 li
240.241 45.1621 li
242.769 51.9028 li
cp
@
1 lc
1 lj
91.3149 103.742 mo
139.342 103.742 li
139.342 125.649 li
91.3149 125.649 li
91.3149 103.742 li
cp
@
100.582 114.47 mo
100.582 114.257 100.406 113.97 99.9058 113.97 cv
99.8037 113.97 99.3496 113.979 98.9233 114.294 cv
98.7749 114.192 98.4507 114.016 98.0244 114.016 cv
97.1528 114.016 96.4951 114.711 96.4951 115.499 cv
96.4951 115.897 96.6523 116.203 96.7915 116.379 cv
96.6895 116.528 96.606 116.731 96.606 117.01 cv
96.606 117.334 96.7358 117.566 96.8193 117.677 cv
96.1426 118.094 96.1426 118.724 96.1426 118.826 cv
96.1426 119.624 97.1118 120.188 98.293 120.188 cv
99.4795 120.188 100.453 119.614 100.453 118.826 cv
100.453 118.483 100.286 118.02 99.813 117.77 cv
99.6924 117.705 99.3032 117.501 98.4692 117.501 cv
97.8203 117.501 li
97.7461 117.501 97.6255 117.501 97.5513 117.482 cv
97.4126 117.482 97.3569 117.482 97.2456 117.353 cv
97.1436 117.223 97.1343 117.019 97.1343 117.019 cv
97.1343 116.982 97.1528 116.852 97.1899 116.759 cv
97.2178 116.778 97.5698 116.991 98.0244 116.991 cv
98.877 116.991 99.5537 116.324 99.5537 115.499 cv
99.5537 115.221 99.4731 114.952 99.3218 114.692 cv
99.5132 114.582 99.7314 114.544 99.8501 114.535 cv
99.9058 114.785 100.119 114.85 100.211 114.85 cv
100.369 114.85 100.582 114.739 100.582 114.47 cv
cp
98.9141 115.499 mo
98.9141 116.027 98.5063 116.435 98.0244 116.435 cv
97.5234 116.435 97.1343 116 97.1343 115.508 cv
97.1343 114.98 97.542 114.572 98.0244 114.572 cv
98.5249 114.572 98.9141 115.008 98.9141 115.499 cv
cp
99.915 118.826 mo
99.915 119.234 99.2197 119.633 98.293 119.633 cv
97.3716 119.633 96.6802 119.234 96.6802 118.826 cv
96.6802 118.659 96.7627 118.363 97.0552 118.178 cv
97.2837 118.029 97.3662 118.029 98.043 118.029 cv
98.8677 118.029 99.915 118.029 99.915 118.826 cv
cp
0 0 0 1 cmyk
f
105.031 117.056 mo
105.031 116.796 104.762 116.796 104.707 116.796 cv
104.54 116.796 104.466 116.824 104.401 117 cv
104.197 117.473 103.696 117.557 103.437 117.557 cv
102.742 117.557 102.047 117.093 101.898 116.296 cv
104.66 116.296 li
104.855 116.296 105.031 116.296 105.031 115.953 cv
105.031 114.896 104.438 113.988 103.233 113.988 cv
102.13 113.988 101.24 114.915 101.24 116.055 cv
101.24 117.186 102.176 118.122 103.372 118.122 cv
104.596 118.122 105.031 117.288 105.031 117.056 cv
cp
104.373 115.74 mo
101.908 115.74 li
102.038 115.063 102.584 114.554 103.233 114.554 cv
103.715 114.554 104.29 114.785 104.373 115.74 cv
cp
f
109.758 116.898 mo
109.758 116.731 109.758 116.537 109.434 116.537 cv
109.128 116.537 109.119 116.731 109.119 116.889 cv
109.109 117.464 108.581 117.557 108.368 117.557 cv
107.654 117.557 107.654 117.075 107.654 116.843 cv
107.654 114.637 li
109.174 114.637 li
109.313 114.637 109.545 114.637 109.545 114.359 cv
109.545 114.072 109.322 114.072 109.174 114.072 cv
107.654 114.072 li
107.654 113.312 li
107.654 113.136 107.654 112.932 107.339 112.932 cv
107.015 112.932 107.015 113.126 107.015 113.312 cv
107.015 114.072 li
106.208 114.072 li
106.06 114.072 105.828 114.072 105.828 114.359 cv
105.828 114.637 106.06 114.637 106.199 114.637 cv
107.015 114.637 li
107.015 116.898 li
107.015 117.788 107.645 118.122 108.321 118.122 cv
109.007 118.122 109.758 117.723 109.758 116.898 cv
cp
f
120.037 114.35 mo
120.037 114.072 119.814 114.072 119.647 114.072 cv
118.582 114.072 li
118.415 114.072 118.192 114.072 118.192 114.35 cv
118.192 114.637 118.405 114.637 118.582 114.637 cv
119.036 114.637 li
118.572 117.399 li
118.563 117.399 li
118.526 117.158 118.405 116.731 118.294 116.352 cv
118.127 115.768 118.1 115.666 117.775 115.666 cv
117.683 115.666 117.506 115.666 117.404 115.87 cv
117.376 115.935 117.006 117.213 116.969 117.399 cv
116.959 117.399 li
116.478 114.637 li
116.932 114.637 li
117.099 114.637 117.321 114.637 117.321 114.359 cv
117.321 114.072 117.108 114.072 116.932 114.072 cv
115.866 114.072 li
115.699 114.072 115.477 114.072 115.477 114.35 cv
115.477 114.637 115.671 114.637 115.949 114.637 cv
116.505 117.751 li
116.542 117.964 116.57 118.104 116.941 118.104 cv
117.312 118.104 117.339 118.02 117.506 117.455 cv
117.738 116.639 117.747 116.509 117.775 116.305 cv
117.784 116.305 li
117.831 116.787 118.174 117.872 118.211 117.946 cv
118.322 118.104 118.489 118.104 118.6 118.104 cv
118.943 118.104 118.971 117.955 119.008 117.751 cv
119.564 114.637 li
119.842 114.637 120.037 114.637 120.037 114.35 cv
cp
f
124.522 116.064 mo
124.522 114.906 123.661 113.988 122.623 113.988 cv
121.584 113.988 120.723 114.906 120.723 116.064 cv
120.723 117.241 121.603 118.122 122.623 118.122 cv
123.642 118.122 124.522 117.232 124.522 116.064 cv
cp
123.883 116 mo
123.883 116.861 123.308 117.557 122.623 117.557 cv
121.937 117.557 121.362 116.861 121.362 116 cv
121.362 115.156 121.964 114.554 122.623 114.554 cv
123.29 114.554 123.883 115.156 123.883 116 cv
cp
f
129.574 114.591 mo
129.574 114.405 129.462 114.016 128.693 114.016 cv
128.221 114.016 127.627 114.183 127.118 114.767 cv
127.118 114.452 li
127.118 114.164 127.062 114.072 126.747 114.072 cv
125.728 114.072 li
125.588 114.072 125.356 114.072 125.356 114.35 cv
125.356 114.637 125.579 114.637 125.728 114.637 cv
126.478 114.637 li
126.478 117.501 li
125.728 117.501 li
125.588 117.501 125.356 117.501 125.356 117.779 cv
125.356 118.066 125.579 118.066 125.728 118.066 cv
128.146 118.066 li
128.286 118.066 128.526 118.066 128.526 117.788 cv
128.526 117.501 128.286 117.501 128.146 117.501 cv
127.118 117.501 li
127.118 116.342 li
127.118 115.471 127.665 114.582 128.786 114.582 cv
128.795 114.804 128.953 114.989 129.185 114.989 cv
129.388 114.989 129.574 114.841 129.574 114.591 cv
cp
f
134.671 117.779 mo
134.671 117.501 134.43 117.501 134.301 117.501 cv
133.884 117.501 li
133.884 112.783 li
133.884 112.496 133.828 112.403 133.513 112.403 cv
132.836 112.403 li
132.688 112.403 132.456 112.403 132.456 112.69 cv
132.456 112.969 132.697 112.969 132.827 112.969 cv
133.244 112.969 li
133.244 114.433 li
132.938 114.164 132.558 114.016 132.16 114.016 cv
131.149 114.016 130.26 114.896 130.26 116.074 cv
130.26 117.223 131.094 118.122 132.076 118.122 cv
132.595 118.122 132.984 117.872 133.244 117.603 cv
133.244 117.937 133.244 118.066 133.615 118.066 cv
134.292 118.066 li
134.439 118.066 134.671 118.066 134.671 117.779 cv
cp
133.244 116.268 mo
133.244 116.787 132.827 117.557 132.113 117.557 cv
131.455 117.557 130.899 116.898 130.899 116.074 cv
130.899 115.184 131.548 114.582 132.197 114.582 cv
132.79 114.582 133.244 115.101 133.244 115.61 cv
133.244 116.268 li
cp
f
86.6807 53.5034 mo
143.976 53.5034 li
143.976 75.4106 li
86.6807 75.4106 li
86.6807 53.5034 li
cp
.746 .676 .668 .898 cmyk
@
95.7163 64.2314 mo
95.7163 64.0181 95.5405 63.731 95.04 63.731 cv
94.938 63.731 94.4839 63.7402 94.0576 64.0552 cv
93.9092 63.9531 93.585 63.7773 93.1582 63.7773 cv
92.2871 63.7773 91.6289 64.4722 91.6289 65.2603 cv
91.6289 65.6587 91.7866 65.9644 91.9258 66.1406 cv
91.8237 66.2891 91.7402 66.4927 91.7402 66.771 cv
91.7402 67.0952 91.8701 67.3271 91.9536 67.438 cv
91.2769 67.8555 91.2769 68.4854 91.2769 68.5874 cv
91.2769 69.3848 92.2461 69.9497 93.4272 69.9497 cv
94.6133 69.9497 95.5869 69.375 95.5869 68.5874 cv
95.5869 68.2446 95.4199 67.7813 94.9473 67.5308 cv
94.8267 67.4658 94.4375 67.2622 93.603 67.2622 cv
92.9546 67.2622 li
92.8804 67.2622 92.7598 67.2622 92.6855 67.2437 cv
92.5469 67.2437 92.4912 67.2437 92.3799 67.1138 cv
92.2778 66.9839 92.2686 66.7803 92.2686 66.7803 cv
92.2686 66.7432 92.2871 66.6133 92.3242 66.5205 cv
92.3521 66.5391 92.7041 66.7524 93.1582 66.7524 cv
94.0112 66.7524 94.6875 66.085 94.6875 65.2603 cv
94.6875 64.9819 94.6074 64.7134 94.4561 64.4536 cv
94.6475 64.3428 94.8657 64.3057 94.9844 64.2964 cv
95.04 64.5464 95.2529 64.6113 95.3457 64.6113 cv
95.5034 64.6113 95.7163 64.5 95.7163 64.2314 cv
cp
94.0483 65.2603 mo
94.0483 65.7886 93.6401 66.1963 93.1582 66.1963 cv
92.6577 66.1963 92.2686 65.7607 92.2686 65.2695 cv
92.2686 64.7412 92.6763 64.333 93.1582 64.333 cv
93.6587 64.333 94.0483 64.769 94.0483 65.2603 cv
cp
95.0493 68.5874 mo
95.0493 68.9951 94.354 69.3936 93.4272 69.3936 cv
92.5059 69.3936 91.8145 68.9951 91.8145 68.5874 cv
91.8145 68.4204 91.8965 68.124 92.1895 67.9385 cv
92.418 67.7905 92.5005 67.7905 93.1768 67.7905 cv
94.002 67.7905 95.0493 67.7905 95.0493 68.5874 cv
cp
0 0 0 1 cmyk
f
100.165 66.8174 mo
100.165 66.5576 99.8965 66.5576 99.8408 66.5576 cv
99.6738 66.5576 99.6001 66.5854 99.5352 66.7617 cv
99.3311 67.2344 98.8306 67.3179 98.5713 67.3179 cv
97.876 67.3179 97.1807 66.8545 97.0327 66.0571 cv
99.7944 66.0571 li
99.9893 66.0571 100.165 66.0571 100.165 65.7144 cv
100.165 64.6577 99.5723 63.7495 98.3672 63.7495 cv
97.2642 63.7495 96.3745 64.6763 96.3745 65.8164 cv
96.3745 66.9468 97.3105 67.8828 98.5063 67.8828 cv
99.7295 67.8828 100.165 67.0488 100.165 66.8174 cv
cp
99.5073 65.501 mo
97.042 65.501 li
97.1714 64.8242 97.7183 64.3145 98.3672 64.3145 cv
98.8491 64.3145 99.4238 64.5464 99.5073 65.501 cv
cp
f
104.892 66.6597 mo
104.892 66.4927 104.892 66.2983 104.568 66.2983 cv
104.262 66.2983 104.252 66.4927 104.252 66.6504 cv
104.243 67.2251 103.715 67.3179 103.502 67.3179 cv
102.788 67.3179 102.788 66.8359 102.788 66.604 cv
102.788 64.3979 li
104.308 64.3979 li
104.447 64.3979 104.679 64.3979 104.679 64.1201 cv
104.679 63.833 104.457 63.833 104.308 63.833 cv
102.788 63.833 li
102.788 63.0728 li
102.788 62.8965 102.788 62.6929 102.473 62.6929 cv
102.149 62.6929 102.149 62.8872 102.149 63.0728 cv
102.149 63.833 li
101.342 63.833 li
101.194 63.833 100.962 63.833 100.962 64.1201 cv
100.962 64.3979 101.194 64.3979 101.333 64.3979 cv
102.149 64.3979 li
102.149 66.6597 li
102.149 67.5493 102.779 67.8828 103.456 67.8828 cv
104.142 67.8828 104.892 67.4844 104.892 66.6597 cv
cp
f
114.689 67.5493 mo
114.689 67.2622 114.448 67.2622 114.309 67.2622 cv
113.326 67.2622 li
113.326 64.2129 li
113.326 63.9253 113.271 63.833 112.956 63.833 cv
111.649 63.833 li
111.51 63.833 111.269 63.833 111.269 64.1108 cv
111.269 64.3979 111.51 64.3979 111.649 64.3979 cv
112.687 64.3979 li
112.687 67.2622 li
111.575 67.2622 li
111.426 67.2622 111.195 67.2622 111.195 67.5493 cv
111.195 67.8276 111.436 67.8276 111.575 67.8276 cv
114.309 67.8276 li
114.448 67.8276 114.689 67.8276 114.689 67.5493 cv
cp
113.373 62.6836 mo
113.373 62.4238 113.165 62.2202 112.9 62.2202 cv
112.646 62.2202 112.446 62.4238 112.446 62.6836 cv
112.446 62.9429 112.646 63.147 112.9 63.147 cv
113.165 63.147 113.373 62.9429 113.373 62.6836 cv
cp
f
120.074 67.5493 mo
120.074 67.2622 119.842 67.2622 119.694 67.2622 cv
119.286 67.2622 li
119.286 65.1118 li
119.286 64.1758 118.813 63.7773 118.081 63.7773 cv
117.46 63.7773 117.043 64.0923 116.867 64.2686 cv
116.867 63.9717 116.867 63.833 116.496 63.833 cv
115.819 63.833 li
115.671 63.833 115.439 63.833 115.439 64.1201 cv
115.439 64.3979 115.681 64.3979 115.811 64.3979 cv
116.228 64.3979 li
116.228 67.2622 li
115.819 67.2622 li
115.671 67.2622 115.439 67.2622 115.439 67.5493 cv
115.439 67.8276 115.681 67.8276 115.811 67.8276 cv
117.284 67.8276 li
117.414 67.8276 117.655 67.8276 117.655 67.5493 cv
117.655 67.2622 117.423 67.2622 117.275 67.2622 cv
116.867 67.2622 li
116.867 65.6216 li
116.867 64.6948 117.553 64.3428 118.025 64.3428 cv
118.517 64.3428 118.646 64.6021 118.646 65.1582 cv
118.646 67.2622 li
118.285 67.2622 li
118.137 67.2622 117.905 67.2622 117.905 67.5493 cv
117.905 67.8276 118.155 67.8276 118.285 67.8276 cv
119.703 67.8276 li
119.833 67.8276 120.074 67.8276 120.074 67.5493 cv
cp
f
124.717 65.8252 mo
124.717 64.6855 123.893 63.7773 122.91 63.7773 cv
122.465 63.7773 122.048 63.9438 121.733 64.2314 cv
121.733 63.9624 121.714 63.833 121.362 63.833 cv
120.686 63.833 li
120.537 63.833 120.306 63.833 120.306 64.1201 cv
120.306 64.3979 120.546 64.3979 120.676 64.3979 cv
121.093 64.3979 li
121.093 69.3198 li
120.686 69.3198 li
120.537 69.3198 120.306 69.3198 120.306 69.6069 cv
120.306 69.8848 120.546 69.8848 120.676 69.8848 cv
122.15 69.8848 li
122.28 69.8848 122.521 69.8848 122.521 69.6069 cv
122.521 69.3198 122.289 69.3198 122.141 69.3198 cv
121.733 69.3198 li
121.733 67.4102 li
122.113 67.7998 122.511 67.8828 122.808 67.8828 cv
123.818 67.8828 124.717 67.0024 124.717 65.8252 cv
cp
124.078 65.8252 mo
124.078 66.7153 123.429 67.3179 122.78 67.3179 cv
122.057 67.3179 121.733 66.502 121.733 66.0571 cv
121.733 65.3804 li
121.733 64.834 122.271 64.3428 122.854 64.3428 cv
123.54 64.3428 124.078 65.019 124.078 65.8252 cv
cp
f
129.806 67.54 mo
129.806 67.2622 129.564 67.2622 129.435 67.2622 cv
129.018 67.2622 li
129.018 64.2129 li
129.018 63.9253 128.962 63.833 128.647 63.833 cv
127.97 63.833 li
127.822 63.833 127.59 63.833 127.59 64.1201 cv
127.59 64.3979 127.832 64.3979 127.961 64.3979 cv
128.378 64.3979 li
128.378 66.3721 li
128.378 67.2065 127.627 67.3179 127.331 67.3179 cv
126.599 67.3179 126.599 67.0117 126.599 66.7153 cv
126.599 64.2129 li
126.599 63.9253 126.543 63.833 126.228 63.833 cv
125.551 63.833 li
125.403 63.833 125.171 63.833 125.171 64.1201 cv
125.171 64.3979 125.412 64.3979 125.542 64.3979 cv
125.959 64.3979 li
125.959 66.771 li
125.959 67.6606 126.599 67.8828 127.275 67.8828 cv
127.655 67.8828 128.035 67.7905 128.378 67.5308 cv
128.388 67.8276 128.582 67.8276 128.749 67.8276 cv
129.426 67.8276 li
129.574 67.8276 129.806 67.8276 129.806 67.54 cv
cp
f
134.087 66.6597 mo
134.087 66.4927 134.087 66.2983 133.763 66.2983 cv
133.458 66.2983 133.448 66.4927 133.448 66.6504 cv
133.439 67.2251 132.911 67.3179 132.697 67.3179 cv
131.983 67.3179 131.983 66.8359 131.983 66.604 cv
131.983 64.3979 li
133.503 64.3979 li
133.643 64.3979 133.875 64.3979 133.875 64.1201 cv
133.875 63.833 133.652 63.833 133.503 63.833 cv
131.983 63.833 li
131.983 63.0728 li
131.983 62.8965 131.983 62.6929 131.668 62.6929 cv
131.344 62.6929 131.344 62.8872 131.344 63.0728 cv
131.344 63.833 li
130.538 63.833 li
130.39 63.833 130.158 63.833 130.158 64.1201 cv
130.158 64.3979 130.39 64.3979 130.528 64.3979 cv
131.344 64.3979 li
131.344 66.6597 li
131.344 67.5493 131.974 67.8828 132.651 67.8828 cv
133.337 67.8828 134.087 67.4844 134.087 66.6597 cv
cp
f
139.046 66.6689 mo
139.046 65.7051 137.851 65.5103 137.554 65.4639 cv
136.924 65.3525 li
136.655 65.3154 136.024 65.2046 136.024 64.8428 cv
136.024 64.6021 136.321 64.3145 137.202 64.3145 cv
137.971 64.3145 138.101 64.5928 138.128 64.834 cv
138.138 64.9912 138.156 65.1489 138.444 65.1489 cv
138.768 65.1489 138.768 64.9541 138.768 64.769 cv
138.768 64.1294 li
138.768 63.981 138.768 63.7495 138.49 63.7495 cv
138.268 63.7495 138.23 63.8789 138.212 63.9438 cv
137.804 63.7495 137.396 63.7495 137.22 63.7495 cv
135.672 63.7495 135.459 64.5093 135.459 64.8428 cv
135.459 65.6958 136.433 65.8535 137.285 65.9829 cv
137.739 66.0571 138.481 66.1777 138.481 66.6689 cv
138.481 67.0117 138.138 67.3179 137.294 67.3179 cv
136.859 67.3179 136.34 67.2158 136.108 66.4927 cv
136.062 66.3262 136.024 66.2241 135.784 66.2241 cv
135.459 66.2241 135.459 66.4185 135.459 66.604 cv
135.459 67.5029 li
135.459 67.6514 135.459 67.8828 135.737 67.8828 cv
135.821 67.8828 135.969 67.874 136.08 67.5308 cv
136.534 67.8643 137.025 67.8828 137.285 67.8828 cv
138.75 67.8828 139.046 67.1138 139.046 66.6689 cv
cp
f
211.593 103.742 mo
273.944 103.742 li
273.944 135.76 li
211.593 135.76 li
211.593 103.742 li
cp
.746 .676 .668 .898 cmyk
@
222.758 116.213 mo
222.758 115.954 222.489 115.954 222.434 115.954 cv
222.285 115.954 222.192 115.973 222.128 116.158 cv
222.072 116.278 221.896 116.714 221.21 116.714 cv
220.423 116.714 219.755 116.065 219.755 115.222 cv
219.755 114.777 220.015 113.711 221.266 113.711 cv
221.461 113.711 221.822 113.711 221.822 113.794 cv
221.831 114.119 222.008 114.249 222.229 114.249 cv
222.452 114.249 222.646 114.091 222.646 113.822 cv
222.646 113.146 221.683 113.146 221.266 113.146 cv
219.672 113.146 219.115 114.406 219.115 115.222 cv
219.115 116.334 219.987 117.279 221.154 117.279 cv
222.443 117.279 222.758 116.371 222.758 116.213 cv
cp
0 0 0 1 cmyk
f
227.634 115.222 mo
227.634 114.063 226.771 113.146 225.733 113.146 cv
224.695 113.146 223.833 114.063 223.833 115.222 cv
223.833 116.399 224.714 117.279 225.733 117.279 cv
226.753 117.279 227.634 116.39 227.634 115.222 cv
cp
226.994 115.157 mo
226.994 116.019 226.419 116.714 225.733 116.714 cv
225.048 116.714 224.473 116.019 224.473 115.157 cv
224.473 114.313 225.075 113.711 225.733 113.711 cv
226.4 113.711 226.994 114.313 226.994 115.157 cv
cp
f
232.916 116.937 mo
232.916 116.658 232.675 116.658 232.546 116.658 cv
232.129 116.658 li
232.129 113.609 li
232.129 113.322 232.073 113.229 231.758 113.229 cv
231.081 113.229 li
230.933 113.229 230.701 113.229 230.701 113.517 cv
230.701 113.794 230.942 113.794 231.072 113.794 cv
231.489 113.794 li
231.489 115.769 li
231.489 116.603 230.738 116.714 230.441 116.714 cv
229.709 116.714 229.709 116.408 229.709 116.111 cv
229.709 113.609 li
229.709 113.322 229.653 113.229 229.339 113.229 cv
228.662 113.229 li
228.514 113.229 228.282 113.229 228.282 113.517 cv
228.282 113.794 228.523 113.794 228.653 113.794 cv
229.07 113.794 li
229.07 116.167 li
229.07 117.057 229.709 117.279 230.386 117.279 cv
230.766 117.279 231.146 117.187 231.489 116.927 cv
231.498 117.224 231.692 117.224 231.859 117.224 cv
232.536 117.224 li
232.685 117.224 232.916 117.224 232.916 116.937 cv
cp
f
237.782 116.946 mo
237.782 116.658 237.551 116.658 237.402 116.658 cv
236.994 116.658 li
236.994 114.508 li
236.994 113.572 236.521 113.173 235.789 113.173 cv
235.169 113.173 234.751 113.488 234.575 113.665 cv
234.575 113.368 234.575 113.229 234.204 113.229 cv
233.528 113.229 li
233.38 113.229 233.148 113.229 233.148 113.517 cv
233.148 113.794 233.389 113.794 233.519 113.794 cv
233.936 113.794 li
233.936 116.658 li
233.528 116.658 li
233.38 116.658 233.148 116.658 233.148 116.946 cv
233.148 117.224 233.389 117.224 233.519 117.224 cv
234.992 117.224 li
235.122 117.224 235.363 117.224 235.363 116.946 cv
235.363 116.658 235.132 116.658 234.983 116.658 cv
234.575 116.658 li
234.575 115.018 li
234.575 114.091 235.261 113.739 235.733 113.739 cv
236.226 113.739 236.354 113.998 236.354 114.554 cv
236.354 116.658 li
235.993 116.658 li
235.845 116.658 235.613 116.658 235.613 116.946 cv
235.613 117.224 235.863 117.224 235.993 117.224 cv
237.411 117.224 li
237.541 117.224 237.782 117.224 237.782 116.946 cv
cp
f
242.064 116.056 mo
242.064 115.889 242.064 115.694 241.74 115.694 cv
241.434 115.694 241.425 115.889 241.425 116.046 cv
241.415 116.621 240.887 116.714 240.674 116.714 cv
239.96 116.714 239.96 116.232 239.96 116 cv
239.96 113.794 li
241.48 113.794 li
241.619 113.794 241.851 113.794 241.851 113.517 cv
241.851 113.229 241.629 113.229 241.48 113.229 cv
239.96 113.229 li
239.96 112.469 li
239.96 112.293 239.96 112.089 239.646 112.089 cv
239.32 112.089 239.32 112.284 239.32 112.469 cv
239.32 113.229 li
238.515 113.229 li
238.366 113.229 238.135 113.229 238.135 113.517 cv
238.135 113.794 238.366 113.794 238.505 113.794 cv
239.32 113.794 li
239.32 116.056 li
239.32 116.946 239.951 117.279 240.628 117.279 cv
241.313 117.279 242.064 116.881 242.064 116.056 cv
cp
f
252.343 113.507 mo
252.343 113.229 252.12 113.229 251.953 113.229 cv
250.888 113.229 li
250.721 113.229 250.498 113.229 250.498 113.507 cv
250.498 113.794 250.712 113.794 250.888 113.794 cv
251.342 113.794 li
250.878 116.556 li
250.869 116.556 li
250.832 116.315 250.712 115.889 250.601 115.509 cv
250.434 114.925 250.405 114.823 250.081 114.823 cv
249.988 114.823 249.813 114.823 249.711 115.027 cv
249.683 115.092 249.313 116.371 249.275 116.556 cv
249.266 116.556 li
248.784 113.794 li
249.238 113.794 li
249.404 113.794 249.627 113.794 249.627 113.517 cv
249.627 113.229 249.414 113.229 249.238 113.229 cv
248.172 113.229 li
248.005 113.229 247.783 113.229 247.783 113.507 cv
247.783 113.794 247.978 113.794 248.256 113.794 cv
248.812 116.909 li
248.849 117.122 248.876 117.261 249.247 117.261 cv
249.618 117.261 249.646 117.177 249.813 116.612 cv
250.044 115.796 250.054 115.667 250.081 115.463 cv
250.091 115.463 li
250.137 115.945 250.479 117.029 250.517 117.103 cv
250.628 117.261 250.795 117.261 250.906 117.261 cv
251.249 117.261 251.277 117.112 251.314 116.909 cv
251.87 113.794 li
252.148 113.794 252.343 113.794 252.343 113.507 cv
cp
f
256.829 115.222 mo
256.829 114.063 255.967 113.146 254.929 113.146 cv
253.891 113.146 253.028 114.063 253.028 115.222 cv
253.028 116.399 253.909 117.279 254.929 117.279 cv
255.948 117.279 256.829 116.39 256.829 115.222 cv
cp
256.189 115.157 mo
256.189 116.019 255.614 116.714 254.929 116.714 cv
254.243 116.714 253.668 116.019 253.668 115.157 cv
253.668 114.313 254.271 113.711 254.929 113.711 cv
255.596 113.711 256.189 114.313 256.189 115.157 cv
cp
f
261.88 113.748 mo
261.88 113.563 261.769 113.173 260.999 113.173 cv
260.526 113.173 259.934 113.34 259.424 113.924 cv
259.424 113.609 li
259.424 113.322 259.368 113.229 259.053 113.229 cv
258.033 113.229 li
257.895 113.229 257.663 113.229 257.663 113.507 cv
257.663 113.794 257.886 113.794 258.033 113.794 cv
258.784 113.794 li
258.784 116.658 li
258.033 116.658 li
257.895 116.658 257.663 116.658 257.663 116.937 cv
257.663 117.224 257.886 117.224 258.033 117.224 cv
260.452 117.224 li
260.592 117.224 260.833 117.224 260.833 116.946 cv
260.833 116.658 260.592 116.658 260.452 116.658 cv
259.424 116.658 li
259.424 115.5 li
259.424 114.628 259.971 113.739 261.092 113.739 cv
261.102 113.961 261.259 114.146 261.491 114.146 cv
261.694 114.146 261.88 113.998 261.88 113.748 cv
cp
f
266.978 116.937 mo
266.978 116.658 266.736 116.658 266.606 116.658 cv
266.189 116.658 li
266.189 111.94 li
266.189 111.653 266.134 111.561 265.819 111.561 cv
265.143 111.561 li
264.994 111.561 264.763 111.561 264.763 111.848 cv
264.763 112.126 265.003 112.126 265.133 112.126 cv
265.55 112.126 li
265.55 113.59 li
265.244 113.322 264.864 113.173 264.466 113.173 cv
263.456 113.173 262.565 114.054 262.565 115.231 cv
262.565 116.38 263.4 117.279 264.383 117.279 cv
264.901 117.279 265.291 117.029 265.55 116.76 cv
265.55 117.094 265.55 117.224 265.921 117.224 cv
266.598 117.224 li
266.746 117.224 266.978 117.224 266.978 116.937 cv
cp
265.55 115.426 mo
265.55 115.945 265.133 116.714 264.42 116.714 cv
263.762 116.714 263.205 116.056 263.205 115.231 cv
263.205 114.341 263.854 113.739 264.503 113.739 cv
265.096 113.739 265.55 114.258 265.55 114.768 cv
265.55 115.426 li
cp
f
220.228 128.744 mo
220.228 128.457 219.987 128.457 219.848 128.457 cv
218.865 128.457 li
218.865 125.408 li
218.865 125.12 218.81 125.028 218.495 125.028 cv
217.188 125.028 li
217.049 125.028 216.808 125.028 216.808 125.306 cv
216.808 125.593 217.049 125.593 217.188 125.593 cv
218.226 125.593 li
218.226 128.457 li
217.113 128.457 li
216.966 128.457 216.733 128.457 216.733 128.744 cv
216.733 129.022 216.975 129.022 217.113 129.022 cv
219.848 129.022 li
219.987 129.022 220.228 129.022 220.228 128.744 cv
cp
218.912 123.878 mo
218.912 123.619 218.704 123.415 218.439 123.415 cv
218.185 123.415 217.985 123.619 217.985 123.878 cv
217.985 124.138 218.185 124.342 218.439 124.342 cv
218.704 124.342 218.912 124.138 218.912 123.878 cv
cp
f
225.612 128.744 mo
225.612 128.457 225.381 128.457 225.232 128.457 cv
224.825 128.457 li
224.825 126.307 li
224.825 125.371 224.353 124.972 223.62 124.972 cv
222.999 124.972 222.582 125.287 222.406 125.463 cv
222.406 125.167 222.406 125.028 222.035 125.028 cv
221.358 125.028 li
221.21 125.028 220.979 125.028 220.979 125.315 cv
220.979 125.593 221.22 125.593 221.35 125.593 cv
221.767 125.593 li
221.767 128.457 li
221.358 128.457 li
221.21 128.457 220.979 128.457 220.979 128.744 cv
220.979 129.022 221.22 129.022 221.35 129.022 cv
222.823 129.022 li
222.953 129.022 223.193 129.022 223.193 128.744 cv
223.193 128.457 222.962 128.457 222.813 128.457 cv
222.406 128.457 li
222.406 126.816 li
222.406 125.89 223.092 125.538 223.564 125.538 cv
224.056 125.538 224.186 125.797 224.186 126.353 cv
224.186 128.457 li
223.824 128.457 li
223.676 128.457 223.444 128.457 223.444 128.744 cv
223.444 129.022 223.694 129.022 223.824 129.022 cv
225.242 129.022 li
225.372 129.022 225.612 129.022 225.612 128.744 cv
cp
f
235.409 128.735 mo
235.409 128.457 235.178 128.457 235.039 128.457 cv
234.649 128.457 234.557 128.411 234.482 128.383 cv
234.482 126.381 li
234.482 125.723 233.982 124.944 232.647 124.944 cv
232.249 124.944 231.304 124.944 231.304 125.621 cv
231.304 125.899 231.498 126.047 231.721 126.047 cv
231.859 126.047 232.119 125.964 232.129 125.621 cv
232.129 125.547 232.138 125.538 232.323 125.519 cv
232.453 125.51 232.573 125.51 232.657 125.51 cv
233.361 125.51 233.843 125.797 233.843 126.455 cv
232.202 126.483 231.063 126.946 231.063 127.836 cv
231.063 128.476 231.646 129.078 232.592 129.078 cv
232.935 129.078 233.51 129.013 233.945 128.726 cv
234.149 129.013 234.594 129.022 234.946 129.022 cv
235.206 129.022 235.409 129.022 235.409 128.735 cv
cp
233.843 127.78 mo
233.843 127.994 233.843 128.188 233.481 128.355 cv
233.148 128.513 232.73 128.513 232.657 128.513 cv
232.082 128.513 231.702 128.197 231.702 127.836 cv
231.702 127.382 232.499 127.039 233.843 127.002 cv
233.843 127.78 li
cp
f
245.039 125.306 mo
245.039 125.028 244.817 125.028 244.65 125.028 cv
243.584 125.028 li
243.417 125.028 243.195 125.028 243.195 125.306 cv
243.195 125.593 243.408 125.593 243.584 125.593 cv
244.038 125.593 li
243.575 128.355 li
243.565 128.355 li
243.528 128.114 243.408 127.688 243.297 127.308 cv
243.13 126.724 243.103 126.622 242.778 126.622 cv
242.686 126.622 242.509 126.622 242.407 126.826 cv
242.379 126.891 242.009 128.169 241.972 128.355 cv
241.962 128.355 li
241.48 125.593 li
241.935 125.593 li
242.102 125.593 242.323 125.593 242.323 125.315 cv
242.323 125.028 242.11 125.028 241.935 125.028 cv
240.868 125.028 li
240.702 125.028 240.479 125.028 240.479 125.306 cv
240.479 125.593 240.674 125.593 240.952 125.593 cv
241.508 128.707 li
241.545 128.92 241.573 129.06 241.943 129.06 cv
242.314 129.06 242.342 128.976 242.509 128.411 cv
242.741 127.595 242.75 127.465 242.778 127.261 cv
242.787 127.261 li
242.833 127.743 243.177 128.828 243.214 128.902 cv
243.324 129.06 243.491 129.06 243.603 129.06 cv
243.945 129.06 243.974 128.911 244.011 128.707 cv
244.566 125.593 li
244.845 125.593 245.039 125.593 245.039 125.306 cv
cp
f
249.423 128.744 mo
249.423 128.457 249.183 128.457 249.043 128.457 cv
248.061 128.457 li
248.061 125.408 li
248.061 125.12 248.005 125.028 247.69 125.028 cv
246.383 125.028 li
246.244 125.028 246.003 125.028 246.003 125.306 cv
246.003 125.593 246.244 125.593 246.383 125.593 cv
247.421 125.593 li
247.421 128.457 li
246.31 128.457 li
246.161 128.457 245.929 128.457 245.929 128.744 cv
245.929 129.022 246.17 129.022 246.31 129.022 cv
249.043 129.022 li
249.183 129.022 249.423 129.022 249.423 128.744 cv
cp
248.107 123.878 mo
248.107 123.619 247.899 123.415 247.635 123.415 cv
247.38 123.415 247.181 123.619 247.181 123.878 cv
247.181 124.138 247.38 124.342 247.635 124.342 cv
247.899 124.342 248.107 124.138 248.107 123.878 cv
cp
f
254.809 128.744 mo
254.809 128.457 254.576 128.457 254.429 128.457 cv
254.021 128.457 li
254.021 126.307 li
254.021 125.371 253.548 124.972 252.815 124.972 cv
252.194 124.972 251.777 125.287 251.602 125.463 cv
251.602 125.167 251.602 125.028 251.23 125.028 cv
250.554 125.028 li
250.405 125.028 250.174 125.028 250.174 125.315 cv
250.174 125.593 250.415 125.593 250.545 125.593 cv
250.962 125.593 li
250.962 128.457 li
250.554 128.457 li
250.405 128.457 250.174 128.457 250.174 128.744 cv
250.174 129.022 250.415 129.022 250.545 129.022 cv
252.019 129.022 li
252.148 129.022 252.39 129.022 252.39 128.744 cv
252.39 128.457 252.157 128.457 252.009 128.457 cv
251.602 128.457 li
251.602 126.816 li
251.602 125.89 252.287 125.538 252.76 125.538 cv
253.251 125.538 253.381 125.797 253.381 126.353 cv
253.381 128.457 li
253.02 128.457 li
252.871 128.457 252.64 128.457 252.64 128.744 cv
252.64 129.022 252.89 129.022 253.02 129.022 cv
254.438 129.022 li
254.567 129.022 254.809 129.022 254.809 128.744 cv
cp
f
259.674 128.735 mo
259.674 128.457 259.433 128.457 259.304 128.457 cv
258.887 128.457 li
258.887 123.739 li
258.887 123.452 258.831 123.359 258.516 123.359 cv
257.839 123.359 li
257.69 123.359 257.459 123.359 257.459 123.646 cv
257.459 123.925 257.7 123.925 257.83 123.925 cv
258.247 123.925 li
258.247 125.389 li
257.94 125.12 257.561 124.972 257.162 124.972 cv
256.152 124.972 255.263 125.853 255.263 127.03 cv
255.263 128.179 256.097 129.078 257.079 129.078 cv
257.598 129.078 257.987 128.828 258.247 128.559 cv
258.247 128.893 258.247 129.022 258.617 129.022 cv
259.294 129.022 li
259.442 129.022 259.674 129.022 259.674 128.735 cv
cp
258.247 127.224 mo
258.247 127.743 257.83 128.513 257.116 128.513 cv
256.458 128.513 255.901 127.854 255.901 127.03 cv
255.901 126.14 256.551 125.538 257.199 125.538 cv
257.793 125.538 258.247 126.057 258.247 126.566 cv
258.247 127.224 li
cp
f
264.123 127.021 mo
264.123 125.862 263.261 124.944 262.223 124.944 cv
261.185 124.944 260.323 125.862 260.323 127.021 cv
260.323 128.197 261.203 129.078 262.223 129.078 cv
263.242 129.078 264.123 128.188 264.123 127.021 cv
cp
263.483 126.956 mo
263.483 127.817 262.909 128.513 262.223 128.513 cv
261.537 128.513 260.962 127.817 260.962 126.956 cv
260.962 126.112 261.564 125.51 262.223 125.51 cv
262.891 125.51 263.483 126.112 263.483 126.956 cv
cp
f
269.369 125.306 mo
269.369 125.028 269.146 125.028 268.979 125.028 cv
267.914 125.028 li
267.747 125.028 267.524 125.028 267.524 125.306 cv
267.524 125.593 267.737 125.593 267.914 125.593 cv
268.368 125.593 li
267.904 128.355 li
267.896 128.355 li
267.858 128.114 267.737 127.688 267.626 127.308 cv
267.46 126.724 267.432 126.622 267.107 126.622 cv
267.015 126.622 266.839 126.622 266.736 126.826 cv
266.709 126.891 266.338 128.169 266.301 128.355 cv
266.292 128.355 li
265.81 125.593 li
266.264 125.593 li
266.431 125.593 266.653 125.593 266.653 125.315 cv
266.653 125.028 266.44 125.028 266.264 125.028 cv
265.198 125.028 li
265.031 125.028 264.809 125.028 264.809 125.306 cv
264.809 125.593 265.003 125.593 265.281 125.593 cv
265.838 128.707 li
265.875 128.92 265.902 129.06 266.273 129.06 cv
266.644 129.06 266.672 128.976 266.839 128.411 cv
267.07 127.595 267.079 127.465 267.107 127.261 cv
267.116 127.261 li
267.163 127.743 267.506 128.828 267.543 128.902 cv
267.654 129.06 267.821 129.06 267.933 129.06 cv
268.275 129.06 268.303 128.911 268.34 128.707 cv
268.896 125.593 li
269.174 125.593 269.369 125.593 269.369 125.306 cv
cp
f
299.432 53.5034 mo
381.162 53.5034 li
381.162 75.4106 li
299.432 75.4106 li
299.432 53.5034 li
cp
.746 .676 .668 .898 cmyk
@
308.548 67.54 mo
308.548 67.2622 308.308 67.2622 308.178 67.2622 cv
307.761 67.2622 li
307.761 62.5444 li
307.761 62.2573 307.705 62.1646 307.39 62.1646 cv
306.713 62.1646 li
306.565 62.1646 306.333 62.1646 306.333 62.4517 cv
306.333 62.73 306.574 62.73 306.704 62.73 cv
307.121 62.73 li
307.121 64.1943 li
306.815 63.9253 306.436 63.7773 306.036 63.7773 cv
305.026 63.7773 304.137 64.6577 304.137 65.835 cv
304.137 66.9839 304.971 67.8828 305.953 67.8828 cv
306.473 67.8828 306.861 67.6328 307.121 67.3643 cv
307.121 67.6978 307.121 67.8276 307.492 67.8276 cv
308.168 67.8276 li
308.316 67.8276 308.548 67.8276 308.548 67.54 cv
cp
307.121 66.0293 mo
307.121 66.5483 306.704 67.3179 305.99 67.3179 cv
305.332 67.3179 304.776 66.6597 304.776 65.835 cv
304.776 64.9448 305.425 64.3428 306.073 64.3428 cv
306.667 64.3428 307.121 64.8613 307.121 65.3711 cv
307.121 66.0293 li
cp
0 0 0 1 cmyk
f
312.896 67.5493 mo
312.896 67.2622 312.654 67.2622 312.516 67.2622 cv
311.533 67.2622 li
311.533 64.2129 li
311.533 63.9253 311.478 63.833 311.162 63.833 cv
309.855 63.833 li
309.716 63.833 309.476 63.833 309.476 64.1108 cv
309.476 64.3979 309.716 64.3979 309.855 64.3979 cv
310.894 64.3979 li
310.894 67.2622 li
309.781 67.2622 li
309.633 67.2622 309.401 67.2622 309.401 67.5493 cv
309.401 67.8276 309.642 67.8276 309.781 67.8276 cv
312.516 67.8276 li
312.654 67.8276 312.896 67.8276 312.896 67.5493 cv
cp
311.579 62.6836 mo
311.579 62.4238 311.371 62.2202 311.106 62.2202 cv
310.853 62.2202 310.652 62.4238 310.652 62.6836 cv
310.652 62.9429 310.853 63.147 311.106 63.147 cv
311.371 63.147 311.579 62.9429 311.579 62.6836 cv
cp
f
317.789 66.6689 mo
317.789 65.7051 316.594 65.5103 316.297 65.4639 cv
315.666 65.3525 li
315.397 65.3154 314.768 65.2046 314.768 64.8428 cv
314.768 64.6021 315.064 64.3145 315.944 64.3145 cv
316.714 64.3145 316.844 64.5928 316.871 64.834 cv
316.881 64.9912 316.899 65.1489 317.187 65.1489 cv
317.511 65.1489 317.511 64.9541 317.511 64.769 cv
317.511 64.1294 li
317.511 63.981 317.511 63.7495 317.232 63.7495 cv
317.011 63.7495 316.974 63.8789 316.955 63.9438 cv
316.547 63.7495 316.14 63.7495 315.963 63.7495 cv
314.415 63.7495 314.202 64.5093 314.202 64.8428 cv
314.202 65.6958 315.175 65.8535 316.028 65.9829 cv
316.482 66.0571 317.224 66.1777 317.224 66.6689 cv
317.224 67.0117 316.881 67.3179 316.037 67.3179 cv
315.602 67.3179 315.083 67.2158 314.851 66.4927 cv
314.805 66.3262 314.768 66.2241 314.526 66.2241 cv
314.202 66.2241 314.202 66.4185 314.202 66.604 cv
314.202 67.5029 li
314.202 67.6514 314.202 67.8828 314.48 67.8828 cv
314.563 67.8828 314.712 67.874 314.823 67.5308 cv
315.277 67.8643 315.769 67.8828 316.028 67.8828 cv
317.492 67.8828 317.789 67.1138 317.789 66.6689 cv
cp
f
322.924 65.8252 mo
322.924 64.6855 322.099 63.7773 321.116 63.7773 cv
320.671 63.7773 320.254 63.9438 319.939 64.2314 cv
319.939 63.9624 319.921 63.833 319.568 63.833 cv
318.892 63.833 li
318.743 63.833 318.512 63.833 318.512 64.1201 cv
318.512 64.3979 318.753 64.3979 318.883 64.3979 cv
319.3 64.3979 li
319.3 69.3198 li
318.892 69.3198 li
318.743 69.3198 318.512 69.3198 318.512 69.6069 cv
318.512 69.8848 318.753 69.8848 318.883 69.8848 cv
320.356 69.8848 li
320.486 69.8848 320.727 69.8848 320.727 69.6069 cv
320.727 69.3198 320.495 69.3198 320.347 69.3198 cv
319.939 69.3198 li
319.939 67.4102 li
320.319 67.7998 320.718 67.8828 321.015 67.8828 cv
322.024 67.8828 322.924 67.0024 322.924 65.8252 cv
cp
322.284 65.8252 mo
322.284 66.7153 321.636 67.3179 320.986 67.3179 cv
320.264 67.3179 319.939 66.502 319.939 66.0571 cv
319.939 65.3804 li
319.939 64.834 320.477 64.3428 321.061 64.3428 cv
321.746 64.3428 322.284 65.019 322.284 65.8252 cv
cp
f
327.595 67.5493 mo
327.595 67.2622 327.372 67.2622 327.224 67.2622 cv
326.02 67.2622 li
326.02 62.5444 li
326.02 62.2573 325.964 62.1646 325.648 62.1646 cv
324.185 62.1646 li
324.036 62.1646 323.804 62.1646 323.804 62.4517 cv
323.804 62.73 324.045 62.73 324.175 62.73 cv
325.38 62.73 li
325.38 67.2622 li
324.185 67.2622 li
324.036 67.2622 323.804 67.2622 323.804 67.5493 cv
323.804 67.8276 324.045 67.8276 324.175 67.8276 cv
327.224 67.8276 li
327.363 67.8276 327.595 67.8276 327.595 67.5493 cv
cp
f
332.942 67.54 mo
332.942 67.2622 332.711 67.2622 332.572 67.2622 cv
332.183 67.2622 332.09 67.2158 332.016 67.188 cv
332.016 65.186 li
332.016 64.5278 331.516 63.7495 330.181 63.7495 cv
329.782 63.7495 328.837 63.7495 328.837 64.4258 cv
328.837 64.7041 329.031 64.8525 329.254 64.8525 cv
329.393 64.8525 329.652 64.769 329.662 64.4258 cv
329.662 64.3516 329.671 64.3428 329.856 64.3242 cv
329.986 64.3145 330.106 64.3145 330.19 64.3145 cv
330.895 64.3145 331.376 64.6021 331.376 65.2603 cv
329.736 65.2881 328.596 65.7515 328.596 66.6411 cv
328.596 67.2808 329.18 67.8828 330.125 67.8828 cv
330.468 67.8828 331.043 67.8184 331.479 67.5308 cv
331.683 67.8184 332.127 67.8276 332.479 67.8276 cv
332.739 67.8276 332.942 67.8276 332.942 67.54 cv
cp
331.376 66.5854 mo
331.376 66.7988 331.376 66.9932 331.015 67.1602 cv
330.682 67.3179 330.265 67.3179 330.19 67.3179 cv
329.615 67.3179 329.235 67.0024 329.235 66.6411 cv
329.235 66.187 330.032 65.8438 331.376 65.8071 cv
331.376 66.5854 li
cp
f
337.633 64.1201 mo
337.633 63.833 337.41 63.833 337.262 63.833 cv
336.178 63.833 li
336.038 63.833 335.807 63.833 335.807 64.1108 cv
335.807 64.3979 336.029 64.3979 336.178 64.3979 cv
336.437 64.3979 li
335.77 66.3682 li
335.649 66.7104 335.594 66.877 335.528 67.1636 cv
335.52 67.1636 li
335.473 66.9878 335.39 66.7935 335.325 66.6177 cv
334.463 64.3979 li
334.694 64.3979 li
334.833 64.3979 335.065 64.3979 335.065 64.1201 cv
335.065 63.833 334.843 63.833 334.694 63.833 cv
333.61 63.833 li
333.462 63.833 333.239 63.833 333.239 64.1201 cv
333.239 64.3979 333.479 64.3979 333.617 64.3979 cv
333.9 64.3979 li
335.214 67.7002 li
335.251 67.7925 335.251 67.8203 335.251 67.8203 cv
335.251 67.8203 335.019 68.6025 334.898 68.835 cv
334.63 69.3472 334.296 69.3657 334.157 69.375 cv
334.157 69.375 334.203 69.2905 334.203 69.168 cv
334.203 68.9331 334.038 68.7637 333.809 68.7637 cv
333.562 68.7637 333.406 68.9331 333.406 69.1777 cv
333.406 69.5635 333.718 69.9312 334.166 69.9312 cv
335.093 69.9312 335.51 68.71 335.547 68.6084 cv
336.983 64.3979 li
337.262 64.3979 li
337.4 64.3979 337.633 64.3979 337.633 64.1201 cv
cp
f
347.059 65.8252 mo
347.059 64.667 346.196 63.7495 345.158 63.7495 cv
344.12 63.7495 343.259 64.667 343.259 65.8252 cv
343.259 67.0024 344.139 67.8828 345.158 67.8828 cv
346.178 67.8828 347.059 66.9932 347.059 65.8252 cv
cp
346.419 65.7607 mo
346.419 66.6226 345.845 67.3179 345.158 67.3179 cv
344.473 67.3179 343.897 66.6226 343.897 65.7607 cv
343.897 64.917 344.5 64.3145 345.158 64.3145 cv
345.826 64.3145 346.419 64.917 346.419 65.7607 cv
cp
f
352.342 67.54 mo
352.342 67.2622 352.101 67.2622 351.971 67.2622 cv
351.554 67.2622 li
351.554 64.2129 li
351.554 63.9253 351.498 63.833 351.183 63.833 cv
350.506 63.833 li
350.358 63.833 350.126 63.833 350.126 64.1201 cv
350.126 64.3979 350.367 64.3979 350.497 64.3979 cv
350.914 64.3979 li
350.914 66.3721 li
350.914 67.2065 350.163 67.3179 349.867 67.3179 cv
349.135 67.3179 349.135 67.0117 349.135 66.7153 cv
349.135 64.2129 li
349.135 63.9253 349.079 63.833 348.764 63.833 cv
348.087 63.833 li
347.938 63.833 347.707 63.833 347.707 64.1201 cv
347.707 64.3979 347.948 64.3979 348.078 64.3979 cv
348.495 64.3979 li
348.495 66.771 li
348.495 67.6606 349.135 67.8828 349.812 67.8828 cv
350.191 67.8828 350.571 67.7905 350.914 67.5308 cv
350.924 67.8276 351.118 67.8276 351.285 67.8276 cv
351.962 67.8276 li
352.109 67.8276 352.342 67.8276 352.342 67.54 cv
cp
f
356.623 66.6597 mo
356.623 66.4927 356.623 66.2983 356.299 66.2983 cv
355.993 66.2983 355.984 66.4927 355.984 66.6504 cv
355.975 67.2251 355.446 67.3179 355.233 67.3179 cv
354.52 67.3179 354.52 66.8359 354.52 66.604 cv
354.52 64.3979 li
356.04 64.3979 li
356.179 64.3979 356.41 64.3979 356.41 64.1201 cv
356.41 63.833 356.188 63.833 356.04 63.833 cv
354.52 63.833 li
354.52 63.0728 li
354.52 62.8965 354.52 62.6929 354.204 62.6929 cv
353.88 62.6929 353.88 62.8872 353.88 63.0728 cv
353.88 63.833 li
353.073 63.833 li
352.926 63.833 352.693 63.833 352.693 64.1201 cv
352.693 64.3979 352.926 64.3979 353.064 64.3979 cv
353.88 64.3979 li
353.88 66.6597 li
353.88 67.5493 354.511 67.8828 355.187 67.8828 cv
355.873 67.8828 356.623 67.4844 356.623 66.6597 cv
cp
f
361.851 65.8252 mo
361.851 64.6855 361.026 63.7773 360.044 63.7773 cv
359.599 63.7773 359.182 63.9438 358.866 64.2314 cv
358.866 63.9624 358.848 63.833 358.496 63.833 cv
357.819 63.833 li
357.671 63.833 357.439 63.833 357.439 64.1201 cv
357.439 64.3979 357.68 64.3979 357.81 64.3979 cv
358.227 64.3979 li
358.227 69.3198 li
357.819 69.3198 li
357.671 69.3198 357.439 69.3198 357.439 69.6069 cv
357.439 69.8848 357.68 69.8848 357.81 69.8848 cv
359.283 69.8848 li
359.413 69.8848 359.654 69.8848 359.654 69.6069 cv
359.654 69.3198 359.423 69.3198 359.274 69.3198 cv
358.866 69.3198 li
358.866 67.4102 li
359.246 67.7998 359.645 67.8828 359.941 67.8828 cv
360.952 67.8828 361.851 67.0024 361.851 65.8252 cv
cp
361.211 65.8252 mo
361.211 66.7153 360.563 67.3179 359.914 67.3179 cv
359.19 67.3179 358.866 66.502 358.866 66.0571 cv
358.866 65.3804 li
358.866 64.834 359.404 64.3428 359.988 64.3428 cv
360.674 64.3428 361.211 65.019 361.211 65.8252 cv
cp
f
366.939 67.54 mo
366.939 67.2622 366.698 67.2622 366.568 67.2622 cv
366.151 67.2622 li
366.151 64.2129 li
366.151 63.9253 366.096 63.833 365.78 63.833 cv
365.104 63.833 li
364.956 63.833 364.724 63.833 364.724 64.1201 cv
364.724 64.3979 364.965 64.3979 365.095 64.3979 cv
365.512 64.3979 li
365.512 66.3721 li
365.512 67.2065 364.761 67.3179 364.465 67.3179 cv
363.732 67.3179 363.732 67.0117 363.732 66.7153 cv
363.732 64.2129 li
363.732 63.9253 363.677 63.833 363.361 63.833 cv
362.685 63.833 li
362.537 63.833 362.305 63.833 362.305 64.1201 cv
362.305 64.3979 362.546 64.3979 362.676 64.3979 cv
363.093 64.3979 li
363.093 66.771 li
363.093 67.6606 363.732 67.8828 364.409 67.8828 cv
364.789 67.8828 365.169 67.7905 365.512 67.5308 cv
365.521 67.8276 365.716 67.8276 365.883 67.8276 cv
366.56 67.8276 li
366.707 67.8276 366.939 67.8276 366.939 67.54 cv
cp
f
371.222 66.6597 mo
371.222 66.4927 371.222 66.2983 370.896 66.2983 cv
370.591 66.2983 370.582 66.4927 370.582 66.6504 cv
370.572 67.2251 370.044 67.3179 369.831 67.3179 cv
369.117 67.3179 369.117 66.8359 369.117 66.604 cv
369.117 64.3979 li
370.638 64.3979 li
370.776 64.3979 371.008 64.3979 371.008 64.1201 cv
371.008 63.833 370.785 63.833 370.638 63.833 cv
369.117 63.833 li
369.117 63.0728 li
369.117 62.8965 369.117 62.6929 368.802 62.6929 cv
368.478 62.6929 368.478 62.8872 368.478 63.0728 cv
368.478 63.833 li
367.671 63.833 li
367.523 63.833 367.291 63.833 367.291 64.1201 cv
367.291 64.3979 367.523 64.3979 367.662 64.3979 cv
368.478 64.3979 li
368.478 66.6597 li
368.478 67.5493 369.108 67.8828 369.784 67.8828 cv
370.471 67.8828 371.222 67.4844 371.222 66.6597 cv
cp
f
376.18 66.6689 mo
376.18 65.7051 374.984 65.5103 374.688 65.4639 cv
374.058 65.3525 li
373.788 65.3154 373.158 65.2046 373.158 64.8428 cv
373.158 64.6021 373.455 64.3145 374.335 64.3145 cv
375.104 64.3145 375.234 64.5928 375.262 64.834 cv
375.271 64.9912 375.29 65.1489 375.577 65.1489 cv
375.901 65.1489 375.901 64.9541 375.901 64.769 cv
375.901 64.1294 li
375.901 63.981 375.901 63.7495 375.624 63.7495 cv
375.401 63.7495 375.364 63.8789 375.346 63.9438 cv
374.938 63.7495 374.53 63.7495 374.354 63.7495 cv
372.806 63.7495 372.593 64.5093 372.593 64.8428 cv
372.593 65.6958 373.566 65.8535 374.419 65.9829 cv
374.873 66.0571 375.614 66.1777 375.614 66.6689 cv
375.614 67.0117 375.271 67.3179 374.428 67.3179 cv
373.992 67.3179 373.474 67.2158 373.241 66.4927 cv
373.195 66.3262 373.158 66.2241 372.917 66.2241 cv
372.593 66.2241 372.593 66.4185 372.593 66.604 cv
372.593 67.5029 li
372.593 67.6514 372.593 67.8828 372.871 67.8828 cv
372.954 67.8828 373.103 67.874 373.214 67.5308 cv
373.668 67.8643 374.159 67.8828 374.419 67.8828 cv
375.883 67.8828 376.18 67.1138 376.18 66.6689 cv
cp
f
103.56 75.7017 mo
80.5493 97.686 li
.746 .676 .668 .898 cmyk
@
75.6758 102.343 mo
82.2949 99.5142 li
78.8032 95.8594 li
75.6758 102.343 li
cp
f
0 lc
0 lj
75.6758 102.343 mo
82.2949 99.5142 li
78.8032 95.8594 li
75.6758 102.343 li
cp
@
1 lc
1 lj
115.302 75.832 mo
115.256 94.9795 li
@
115.24 101.72 mo
117.784 94.9854 li
112.729 94.9731 li
115.24 101.72 li
cp
f
0 lc
0 lj
115.24 101.72 mo
117.784 94.9854 li
112.729 94.9731 li
115.24 101.72 li
cp
@
1 lc
1 lj
242.769 85.9429 mo
242.769 94.9795 li
@
242.769 101.72 mo
245.296 94.9795 li
240.241 94.9795 li
242.769 101.72 li
cp
f
0 lc
0 lj
242.769 101.72 mo
245.296 94.9795 li
240.241 94.9795 li
242.769 101.72 li
cp
@
1 lc
1 lj
255.828 24.2236 mo
255.828 34.2505 li
255.828 35.6689 li
327.202 35.6689 li
341.863 35.6689 li
341.863 43.0557 li
341.863 44.7407 li
@
341.864 51.4814 mo
344.392 44.7407 li
339.336 44.7407 li
341.864 51.4814 li
cp
f
0 lc
0 lj
341.864 51.4814 mo
344.392 44.7407 li
339.336 44.7407 li
341.864 51.4814 li
cp
@
1 lc
1 lj
281.422 103.742 mo
343.772 103.742 li
343.772 135.76 li
281.422 135.76 li
281.422 103.742 li
cp
@
290.357 115.222 mo
290.357 114.082 289.533 113.173 288.551 113.173 cv
288.105 113.173 287.688 113.34 287.373 113.627 cv
287.373 113.359 287.354 113.229 287.003 113.229 cv
286.326 113.229 li
286.178 113.229 285.946 113.229 285.946 113.517 cv
285.946 113.794 286.187 113.794 286.316 113.794 cv
286.733 113.794 li
286.733 118.716 li
286.326 118.716 li
286.178 118.716 285.946 118.716 285.946 119.003 cv
285.946 119.281 286.187 119.281 286.316 119.281 cv
287.79 119.281 li
287.92 119.281 288.161 119.281 288.161 119.003 cv
288.161 118.716 287.93 118.716 287.781 118.716 cv
287.373 118.716 li
287.373 116.807 li
287.753 117.196 288.151 117.279 288.448 117.279 cv
289.459 117.279 290.357 116.399 290.357 115.222 cv
cp
289.718 115.222 mo
289.718 116.111 289.069 116.714 288.421 116.714 cv
287.697 116.714 287.373 115.898 287.373 115.454 cv
287.373 114.777 li
287.373 114.23 287.911 113.739 288.495 113.739 cv
289.181 113.739 289.718 114.416 289.718 115.222 cv
cp
0 0 0 1 cmyk
f
295.029 116.946 mo
295.029 116.658 294.807 116.658 294.658 116.658 cv
293.453 116.658 li
293.453 111.94 li
293.453 111.653 293.397 111.561 293.083 111.561 cv
291.618 111.561 li
291.47 111.561 291.238 111.561 291.238 111.848 cv
291.238 112.126 291.479 112.126 291.609 112.126 cv
292.813 112.126 li
292.813 116.658 li
291.618 116.658 li
291.47 116.658 291.238 116.658 291.238 116.946 cv
291.238 117.224 291.479 117.224 291.609 117.224 cv
294.658 117.224 li
294.797 117.224 295.029 117.224 295.029 116.946 cv
cp
f
299.895 115.222 mo
299.895 114.063 299.033 113.146 297.995 113.146 cv
296.957 113.146 296.095 114.063 296.095 115.222 cv
296.095 116.399 296.976 117.279 297.995 117.279 cv
299.015 117.279 299.895 116.39 299.895 115.222 cv
cp
299.255 115.157 mo
299.255 116.019 298.681 116.714 297.995 116.714 cv
297.309 116.714 296.734 116.019 296.734 115.157 cv
296.734 114.313 297.337 113.711 297.995 113.711 cv
298.662 113.711 299.255 114.313 299.255 115.157 cv
cp
f
304.594 116.056 mo
304.594 115.889 304.594 115.694 304.27 115.694 cv
303.964 115.694 303.954 115.889 303.954 116.046 cv
303.945 116.621 303.417 116.714 303.204 116.714 cv
302.49 116.714 302.49 116.232 302.49 116 cv
302.49 113.794 li
304.01 113.794 li
304.149 113.794 304.381 113.794 304.381 113.517 cv
304.381 113.229 304.158 113.229 304.01 113.229 cv
302.49 113.229 li
302.49 112.469 li
302.49 112.293 302.49 112.089 302.175 112.089 cv
301.851 112.089 301.851 112.284 301.851 112.469 cv
301.851 113.229 li
301.044 113.229 li
300.896 113.229 300.664 113.229 300.664 113.517 cv
300.664 113.794 300.896 113.794 301.035 113.794 cv
301.851 113.794 li
301.851 116.056 li
301.851 116.946 302.48 117.279 303.157 117.279 cv
303.843 117.279 304.594 116.881 304.594 116.056 cv
cp
f
314.873 113.507 mo
314.873 113.229 314.65 113.229 314.483 113.229 cv
313.417 113.229 li
313.251 113.229 313.028 113.229 313.028 113.507 cv
313.028 113.794 313.241 113.794 313.417 113.794 cv
313.872 113.794 li
313.408 116.556 li
313.399 116.556 li
313.362 116.315 313.241 115.889 313.13 115.509 cv
312.963 114.925 312.936 114.823 312.611 114.823 cv
312.519 114.823 312.343 114.823 312.24 115.027 cv
312.213 115.092 311.842 116.371 311.805 116.556 cv
311.796 116.556 li
311.313 113.794 li
311.768 113.794 li
311.935 113.794 312.157 113.794 312.157 113.517 cv
312.157 113.229 311.943 113.229 311.768 113.229 cv
310.702 113.229 li
310.535 113.229 310.313 113.229 310.313 113.507 cv
310.313 113.794 310.507 113.794 310.785 113.794 cv
311.342 116.909 li
311.378 117.122 311.406 117.261 311.777 117.261 cv
312.147 117.261 312.176 117.177 312.343 116.612 cv
312.574 115.796 312.583 115.667 312.611 115.463 cv
312.62 115.463 li
312.667 115.945 313.01 117.029 313.047 117.103 cv
313.158 117.261 313.325 117.261 313.437 117.261 cv
313.779 117.261 313.807 117.112 313.844 116.909 cv
314.399 113.794 li
314.678 113.794 314.873 113.794 314.873 113.507 cv
cp
f
319.257 116.946 mo
319.257 116.658 319.016 116.658 318.877 116.658 cv
317.895 116.658 li
317.895 113.609 li
317.895 113.322 317.839 113.229 317.523 113.229 cv
316.217 113.229 li
316.077 113.229 315.837 113.229 315.837 113.507 cv
315.837 113.794 316.077 113.794 316.217 113.794 cv
317.255 113.794 li
317.255 116.658 li
316.143 116.658 li
315.994 116.658 315.763 116.658 315.763 116.946 cv
315.763 117.224 316.003 117.224 316.143 117.224 cv
318.877 117.224 li
319.016 117.224 319.257 117.224 319.257 116.946 cv
cp
317.94 112.08 mo
317.94 111.82 317.732 111.616 317.468 111.616 cv
317.214 111.616 317.014 111.82 317.014 112.08 cv
317.014 112.339 317.214 112.543 317.468 112.543 cv
317.732 112.543 317.94 112.339 317.94 112.08 cv
cp
f
324.642 116.946 mo
324.642 116.658 324.41 116.658 324.262 116.658 cv
323.854 116.658 li
323.854 114.508 li
323.854 113.572 323.381 113.173 322.648 113.173 cv
322.027 113.173 321.61 113.488 321.435 113.665 cv
321.435 113.368 321.435 113.229 321.063 113.229 cv
320.388 113.229 li
320.239 113.229 320.007 113.229 320.007 113.517 cv
320.007 113.794 320.248 113.794 320.378 113.794 cv
320.795 113.794 li
320.795 116.658 li
320.388 116.658 li
320.239 116.658 320.007 116.658 320.007 116.946 cv
320.007 117.224 320.248 117.224 320.378 117.224 cv
321.852 117.224 li
321.981 117.224 322.223 117.224 322.223 116.946 cv
322.223 116.658 321.991 116.658 321.843 116.658 cv
321.435 116.658 li
321.435 115.018 li
321.435 114.091 322.12 113.739 322.593 113.739 cv
323.084 113.739 323.214 113.998 323.214 114.554 cv
323.214 116.658 li
322.853 116.658 li
322.704 116.658 322.473 116.658 322.473 116.946 cv
322.473 117.224 322.723 117.224 322.853 117.224 cv
324.271 117.224 li
324.4 117.224 324.642 117.224 324.642 116.946 cv
cp
f
329.508 116.937 mo
329.508 116.658 329.267 116.658 329.137 116.658 cv
328.72 116.658 li
328.72 111.94 li
328.72 111.653 328.664 111.561 328.349 111.561 cv
327.672 111.561 li
327.524 111.561 327.292 111.561 327.292 111.848 cv
327.292 112.126 327.533 112.126 327.663 112.126 cv
328.08 112.126 li
328.08 113.59 li
327.774 113.322 327.395 113.173 326.995 113.173 cv
325.985 113.173 325.096 114.054 325.096 115.231 cv
325.096 116.38 325.93 117.279 326.912 117.279 cv
327.432 117.279 327.82 117.029 328.08 116.76 cv
328.08 117.094 328.08 117.224 328.451 117.224 cv
329.127 117.224 li
329.275 117.224 329.508 117.224 329.508 116.937 cv
cp
328.08 115.426 mo
328.08 115.945 327.663 116.714 326.949 116.714 cv
326.291 116.714 325.735 116.056 325.735 115.231 cv
325.735 114.341 326.384 113.739 327.032 113.739 cv
327.626 113.739 328.08 114.258 328.08 114.768 cv
328.08 115.426 li
cp
f
333.956 115.222 mo
333.956 114.063 333.095 113.146 332.056 113.146 cv
331.019 113.146 330.156 114.063 330.156 115.222 cv
330.156 116.399 331.037 117.279 332.056 117.279 cv
333.075 117.279 333.956 116.39 333.956 115.222 cv
cp
333.316 115.157 mo
333.316 116.019 332.742 116.714 332.056 116.714 cv
331.37 116.714 330.796 116.019 330.796 115.157 cv
330.796 114.313 331.398 113.711 332.056 113.711 cv
332.724 113.711 333.316 114.313 333.316 115.157 cv
cp
f
339.202 113.507 mo
339.202 113.229 338.979 113.229 338.813 113.229 cv
337.747 113.229 li
337.58 113.229 337.357 113.229 337.357 113.507 cv
337.357 113.794 337.571 113.794 337.747 113.794 cv
338.201 113.794 li
337.737 116.556 li
337.729 116.556 li
337.691 116.315 337.571 115.889 337.46 115.509 cv
337.293 114.925 337.265 114.823 336.94 114.823 cv
336.848 114.823 336.672 114.823 336.57 115.027 cv
336.542 115.092 336.171 116.371 336.134 116.556 cv
336.125 116.556 li
335.643 113.794 li
336.097 113.794 li
336.264 113.794 336.486 113.794 336.486 113.517 cv
336.486 113.229 336.273 113.229 336.097 113.229 cv
335.031 113.229 li
334.864 113.229 334.642 113.229 334.642 113.507 cv
334.642 113.794 334.837 113.794 335.114 113.794 cv
335.671 116.909 li
335.708 117.122 335.735 117.261 336.106 117.261 cv
336.478 117.261 336.505 117.177 336.672 116.612 cv
336.903 115.796 336.913 115.667 336.94 115.463 cv
336.95 115.463 li
336.996 115.945 337.339 117.029 337.376 117.103 cv
337.487 117.261 337.654 117.261 337.766 117.261 cv
338.108 117.261 338.136 117.112 338.173 116.909 cv
338.729 113.794 li
339.008 113.794 339.202 113.794 339.202 113.507 cv
cp
f
289.885 123.86 mo
289.885 123.304 289.144 123.304 288.995 123.304 cv
288.254 123.304 287.54 123.73 287.54 124.537 cv
287.54 125.028 li
286.613 125.028 li
286.465 125.028 286.233 125.028 286.233 125.315 cv
286.233 125.593 286.465 125.593 286.604 125.593 cv
287.54 125.593 li
287.54 128.457 li
286.604 128.457 li
286.465 128.457 286.224 128.457 286.224 128.735 cv
286.224 129.022 286.465 129.022 286.604 129.022 cv
289.116 129.022 li
289.255 129.022 289.496 129.022 289.496 128.744 cv
289.496 128.457 289.255 128.457 289.116 128.457 cv
288.18 128.457 li
288.18 125.593 li
289.311 125.593 li
289.449 125.593 289.681 125.593 289.681 125.315 cv
289.681 125.028 289.459 125.028 289.311 125.028 cv
288.18 125.028 li
288.18 124.592 li
288.18 123.869 288.801 123.869 289.079 123.869 cv
289.079 123.906 289.162 124.268 289.486 124.268 cv
289.672 124.268 289.885 124.119 289.885 123.86 cv
cp
f
295.214 125.547 mo
295.214 125.361 295.104 124.972 294.334 124.972 cv
293.861 124.972 293.268 125.139 292.758 125.723 cv
292.758 125.408 li
292.758 125.12 292.702 125.028 292.388 125.028 cv
291.368 125.028 li
291.229 125.028 290.997 125.028 290.997 125.306 cv
290.997 125.593 291.22 125.593 291.368 125.593 cv
292.119 125.593 li
292.119 128.457 li
291.368 128.457 li
291.229 128.457 290.997 128.457 290.997 128.735 cv
290.997 129.022 291.22 129.022 291.368 129.022 cv
293.787 129.022 li
293.926 129.022 294.167 129.022 294.167 128.744 cv
294.167 128.457 293.926 128.457 293.787 128.457 cv
292.758 128.457 li
292.758 127.298 li
292.758 126.427 293.305 125.538 294.427 125.538 cv
294.436 125.76 294.594 125.945 294.825 125.945 cv
295.029 125.945 295.214 125.797 295.214 125.547 cv
cp
f
299.867 128.012 mo
299.867 127.752 299.599 127.752 299.543 127.752 cv
299.376 127.752 299.302 127.78 299.237 127.957 cv
299.033 128.429 298.532 128.513 298.272 128.513 cv
297.578 128.513 296.883 128.049 296.734 127.252 cv
299.496 127.252 li
299.691 127.252 299.867 127.252 299.867 126.909 cv
299.867 125.853 299.274 124.944 298.069 124.944 cv
296.966 124.944 296.076 125.871 296.076 127.011 cv
296.076 128.142 297.013 129.078 298.208 129.078 cv
299.432 129.078 299.867 128.244 299.867 128.012 cv
cp
299.209 126.696 mo
296.743 126.696 li
296.873 126.02 297.42 125.51 298.069 125.51 cv
298.551 125.51 299.126 125.741 299.209 126.696 cv
cp
f
305.409 130.802 mo
305.409 130.515 305.188 130.515 305.039 130.515 cv
304.585 130.515 li
304.585 125.352 li
304.585 125.176 304.585 124.972 304.27 124.972 cv
303.945 124.972 303.945 125.13 303.945 125.482 cv
303.695 125.213 303.315 124.972 302.786 124.972 cv
301.749 124.972 300.804 125.853 300.804 127.03 cv
300.804 128.179 301.675 129.078 302.694 129.078 cv
303.324 129.078 303.751 128.735 303.945 128.522 cv
303.945 130.515 li
303.491 130.515 li
303.352 130.515 303.12 130.515 303.12 130.792 cv
303.12 131.08 303.343 131.08 303.491 131.08 cv
305.039 131.08 li
305.178 131.08 305.409 131.08 305.409 130.802 cv
cp
303.945 127.224 mo
303.945 127.752 303.491 128.513 302.731 128.513 cv
302.045 128.513 301.442 127.864 301.442 127.03 cv
301.442 126.177 302.092 125.538 302.833 125.538 cv
303.528 125.538 303.945 126.251 303.945 126.863 cv
303.945 127.224 li
cp
f
310.044 128.735 mo
310.044 128.457 309.803 128.457 309.673 128.457 cv
309.256 128.457 li
309.256 125.408 li
309.256 125.12 309.2 125.028 308.886 125.028 cv
308.209 125.028 li
308.061 125.028 307.829 125.028 307.829 125.315 cv
307.829 125.593 308.069 125.593 308.199 125.593 cv
308.616 125.593 li
308.616 127.567 li
308.616 128.401 307.866 128.513 307.569 128.513 cv
306.837 128.513 306.837 128.207 306.837 127.91 cv
306.837 125.408 li
306.837 125.12 306.781 125.028 306.466 125.028 cv
305.79 125.028 li
305.642 125.028 305.409 125.028 305.409 125.315 cv
305.409 125.593 305.65 125.593 305.78 125.593 cv
306.197 125.593 li
306.197 127.966 li
306.197 128.855 306.837 129.078 307.514 129.078 cv
307.894 129.078 308.273 128.985 308.616 128.726 cv
308.626 129.022 308.82 129.022 308.987 129.022 cv
309.664 129.022 li
309.813 129.022 310.044 129.022 310.044 128.735 cv
cp
f
314.465 128.012 mo
314.465 127.752 314.196 127.752 314.141 127.752 cv
313.974 127.752 313.899 127.78 313.835 127.957 cv
313.631 128.429 313.13 128.513 312.871 128.513 cv
312.176 128.513 311.48 128.049 311.332 127.252 cv
314.094 127.252 li
314.289 127.252 314.465 127.252 314.465 126.909 cv
314.465 125.853 313.872 124.944 312.667 124.944 cv
311.563 124.944 310.674 125.871 310.674 127.011 cv
310.674 128.142 311.61 129.078 312.806 129.078 cv
314.029 129.078 314.465 128.244 314.465 128.012 cv
cp
313.807 126.696 mo
311.342 126.696 li
311.471 126.02 312.018 125.51 312.667 125.51 cv
313.148 125.51 313.724 125.741 313.807 126.696 cv
cp
f
319.775 128.744 mo
319.775 128.457 319.544 128.457 319.396 128.457 cv
318.987 128.457 li
318.987 126.307 li
318.987 125.371 318.515 124.972 317.783 124.972 cv
317.162 124.972 316.745 125.287 316.568 125.463 cv
316.568 125.167 316.568 125.028 316.198 125.028 cv
315.521 125.028 li
315.373 125.028 315.142 125.028 315.142 125.315 cv
315.142 125.593 315.383 125.593 315.512 125.593 cv
315.929 125.593 li
315.929 128.457 li
315.521 128.457 li
315.373 128.457 315.142 128.457 315.142 128.744 cv
315.142 129.022 315.383 129.022 315.512 129.022 cv
316.985 129.022 li
317.115 129.022 317.356 129.022 317.356 128.744 cv
317.356 128.457 317.125 128.457 316.977 128.457 cv
316.568 128.457 li
316.568 126.816 li
316.568 125.89 317.255 125.538 317.728 125.538 cv
318.219 125.538 318.349 125.797 318.349 126.353 cv
318.349 128.457 li
317.986 128.457 li
317.839 128.457 317.606 128.457 317.606 128.744 cv
317.606 129.022 317.857 129.022 317.986 129.022 cv
319.405 129.022 li
319.534 129.022 319.775 129.022 319.775 128.744 cv
cp
f
324.215 128.012 mo
324.215 127.752 323.946 127.752 323.891 127.752 cv
323.742 127.752 323.649 127.771 323.585 127.957 cv
323.529 128.077 323.354 128.513 322.667 128.513 cv
321.88 128.513 321.212 127.864 321.212 127.021 cv
321.212 126.576 321.472 125.51 322.723 125.51 cv
322.918 125.51 323.279 125.51 323.279 125.593 cv
323.288 125.917 323.465 126.047 323.687 126.047 cv
323.909 126.047 324.104 125.89 324.104 125.621 cv
324.104 124.944 323.14 124.944 322.723 124.944 cv
321.129 124.944 320.572 126.205 320.572 127.021 cv
320.572 128.133 321.444 129.078 322.611 129.078 cv
323.9 129.078 324.215 128.169 324.215 128.012 cv
cp
f
328.988 128.744 mo
328.988 128.457 328.747 128.457 328.608 128.457 cv
327.626 128.457 li
327.626 125.408 li
327.626 125.12 327.57 125.028 327.255 125.028 cv
325.948 125.028 li
325.81 125.028 325.568 125.028 325.568 125.306 cv
325.568 125.593 325.81 125.593 325.948 125.593 cv
326.986 125.593 li
326.986 128.457 li
325.874 128.457 li
325.726 128.457 325.494 128.457 325.494 128.744 cv
325.494 129.022 325.735 129.022 325.874 129.022 cv
328.608 129.022 li
328.747 129.022 328.988 129.022 328.988 128.744 cv
cp
327.672 123.878 mo
327.672 123.619 327.464 123.415 327.199 123.415 cv
326.945 123.415 326.745 123.619 326.745 123.878 cv
326.745 124.138 326.945 124.342 327.199 124.342 cv
327.464 124.342 327.672 124.138 327.672 123.878 cv
cp
f
333.929 128.012 mo
333.929 127.752 333.659 127.752 333.604 127.752 cv
333.438 127.752 333.363 127.78 333.298 127.957 cv
333.095 128.429 332.594 128.513 332.334 128.513 cv
331.639 128.513 330.944 128.049 330.796 127.252 cv
333.558 127.252 li
333.752 127.252 333.929 127.252 333.929 126.909 cv
333.929 125.853 333.335 124.944 332.13 124.944 cv
331.027 124.944 330.138 125.871 330.138 127.011 cv
330.138 128.142 331.073 129.078 332.27 129.078 cv
333.493 129.078 333.929 128.244 333.929 128.012 cv
cp
333.271 126.696 mo
330.805 126.696 li
330.935 126.02 331.481 125.51 332.13 125.51 cv
332.612 125.51 333.187 125.741 333.271 126.696 cv
cp
f
338.748 127.864 mo
338.748 126.9 337.553 126.705 337.256 126.659 cv
336.626 126.548 li
336.356 126.511 335.727 126.399 335.727 126.038 cv
335.727 125.797 336.023 125.51 336.903 125.51 cv
337.673 125.51 337.803 125.788 337.83 126.029 cv
337.84 126.186 337.858 126.344 338.146 126.344 cv
338.47 126.344 338.47 126.149 338.47 125.964 cv
338.47 125.324 li
338.47 125.176 338.47 124.944 338.191 124.944 cv
337.97 124.944 337.933 125.074 337.914 125.139 cv
337.506 124.944 337.099 124.944 336.922 124.944 cv
335.374 124.944 335.161 125.704 335.161 126.038 cv
335.161 126.891 336.134 127.048 336.987 127.178 cv
337.441 127.252 338.183 127.373 338.183 127.864 cv
338.183 128.207 337.84 128.513 336.996 128.513 cv
336.561 128.513 336.042 128.411 335.81 127.688 cv
335.764 127.521 335.727 127.419 335.485 127.419 cv
335.161 127.419 335.161 127.613 335.161 127.799 cv
335.161 128.698 li
335.161 128.846 335.161 129.078 335.439 129.078 cv
335.522 129.078 335.671 129.069 335.782 128.726 cv
336.236 129.06 336.728 129.078 336.987 129.078 cv
338.451 129.078 338.748 128.309 338.748 127.864 cv
cp
f
351.251 103.742 mo
394.223 103.742 li
394.223 135.76 li
351.251 135.76 li
351.251 103.742 li
cp
.746 .676 .668 .898 cmyk
@
365.095 115.222 mo
365.095 114.082 364.27 113.173 363.287 113.173 cv
362.843 113.173 362.426 113.34 362.11 113.627 cv
362.11 113.359 362.092 113.229 361.739 113.229 cv
361.063 113.229 li
360.915 113.229 360.683 113.229 360.683 113.517 cv
360.683 113.794 360.924 113.794 361.054 113.794 cv
361.471 113.794 li
361.471 118.716 li
361.063 118.716 li
360.915 118.716 360.683 118.716 360.683 119.003 cv
360.683 119.281 360.924 119.281 361.054 119.281 cv
362.527 119.281 li
362.657 119.281 362.898 119.281 362.898 119.003 cv
362.898 118.716 362.666 118.716 362.519 118.716 cv
362.11 118.716 li
362.11 116.807 li
362.49 117.196 362.889 117.279 363.186 117.279 cv
364.195 117.279 365.095 116.399 365.095 115.222 cv
cp
364.455 115.222 mo
364.455 116.111 363.807 116.714 363.157 116.714 cv
362.435 116.714 362.11 115.898 362.11 115.454 cv
362.11 114.777 li
362.11 114.23 362.647 113.739 363.231 113.739 cv
363.918 113.739 364.455 114.416 364.455 115.222 cv
cp
0 0 0 1 cmyk
f
369.951 113.748 mo
369.951 113.563 369.84 113.173 369.071 113.173 cv
368.599 113.173 368.005 113.34 367.495 113.924 cv
367.495 113.609 li
367.495 113.322 367.439 113.229 367.124 113.229 cv
366.104 113.229 li
365.966 113.229 365.734 113.229 365.734 113.507 cv
365.734 113.794 365.957 113.794 366.104 113.794 cv
366.855 113.794 li
366.855 116.658 li
366.104 116.658 li
365.966 116.658 365.734 116.658 365.734 116.937 cv
365.734 117.224 365.957 117.224 366.104 117.224 cv
368.524 117.224 li
368.663 117.224 368.904 117.224 368.904 116.946 cv
368.904 116.658 368.663 116.658 368.524 116.658 cv
367.495 116.658 li
367.495 115.5 li
367.495 114.628 368.042 113.739 369.163 113.739 cv
369.173 113.961 369.33 114.146 369.563 114.146 cv
369.766 114.146 369.951 113.998 369.951 113.748 cv
cp
f
374.53 116.946 mo
374.53 116.658 374.289 116.658 374.15 116.658 cv
373.168 116.658 li
373.168 113.609 li
373.168 113.322 373.112 113.229 372.797 113.229 cv
371.49 113.229 li
371.351 113.229 371.11 113.229 371.11 113.507 cv
371.11 113.794 371.351 113.794 371.49 113.794 cv
372.528 113.794 li
372.528 116.658 li
371.416 116.658 li
371.268 116.658 371.036 116.658 371.036 116.946 cv
371.036 117.224 371.276 117.224 371.416 117.224 cv
374.15 117.224 li
374.289 117.224 374.53 117.224 374.53 116.946 cv
cp
373.214 112.08 mo
373.214 111.82 373.006 111.616 372.741 111.616 cv
372.487 111.616 372.287 111.82 372.287 112.08 cv
372.287 112.339 372.487 112.543 372.741 112.543 cv
373.006 112.543 373.214 112.339 373.214 112.08 cv
cp
f
379.915 116.946 mo
379.915 116.658 379.684 116.658 379.535 116.658 cv
379.127 116.658 li
379.127 114.508 li
379.127 113.572 378.654 113.173 377.922 113.173 cv
377.301 113.173 376.884 113.488 376.708 113.665 cv
376.708 113.368 376.708 113.229 376.337 113.229 cv
375.661 113.229 li
375.513 113.229 375.28 113.229 375.28 113.517 cv
375.28 113.794 375.521 113.794 375.651 113.794 cv
376.068 113.794 li
376.068 116.658 li
375.661 116.658 li
375.513 116.658 375.28 116.658 375.28 116.946 cv
375.28 117.224 375.521 117.224 375.651 117.224 cv
377.125 117.224 li
377.255 117.224 377.496 117.224 377.496 116.946 cv
377.496 116.658 377.265 116.658 377.116 116.658 cv
376.708 116.658 li
376.708 115.018 li
376.708 114.091 377.394 113.739 377.866 113.739 cv
378.357 113.739 378.487 113.998 378.487 114.554 cv
378.487 116.658 li
378.126 116.658 li
377.978 116.658 377.746 116.658 377.746 116.946 cv
377.746 117.224 377.996 117.224 378.126 117.224 cv
379.544 117.224 li
379.674 117.224 379.915 117.224 379.915 116.946 cv
cp
f
384.197 116.056 mo
384.197 115.889 384.197 115.694 383.872 115.694 cv
383.566 115.694 383.558 115.889 383.558 116.046 cv
383.548 116.621 383.02 116.714 382.807 116.714 cv
382.093 116.714 382.093 116.232 382.093 116 cv
382.093 113.794 li
383.613 113.794 li
383.752 113.794 383.983 113.794 383.983 113.517 cv
383.983 113.229 383.762 113.229 383.613 113.229 cv
382.093 113.229 li
382.093 112.469 li
382.093 112.293 382.093 112.089 381.778 112.089 cv
381.453 112.089 381.453 112.284 381.453 112.469 cv
381.453 113.229 li
380.647 113.229 li
380.499 113.229 380.267 113.229 380.267 113.517 cv
380.267 113.794 380.499 113.794 380.638 113.794 cv
381.453 113.794 li
381.453 116.056 li
381.453 116.946 382.084 117.279 382.761 117.279 cv
383.446 117.279 384.197 116.881 384.197 116.056 cv
cp
f
360.517 128.735 mo
360.517 128.457 360.284 128.457 360.146 128.457 cv
359.756 128.457 359.663 128.411 359.589 128.383 cv
359.589 126.381 li
359.589 125.723 359.089 124.944 357.754 124.944 cv
357.355 124.944 356.41 124.944 356.41 125.621 cv
356.41 125.899 356.604 126.047 356.827 126.047 cv
356.967 126.047 357.226 125.964 357.235 125.621 cv
357.235 125.547 357.244 125.538 357.43 125.519 cv
357.56 125.51 357.68 125.51 357.764 125.51 cv
358.468 125.51 358.95 125.797 358.95 126.455 cv
357.31 126.483 356.169 126.946 356.169 127.836 cv
356.169 128.476 356.753 129.078 357.698 129.078 cv
358.042 129.078 358.616 129.013 359.052 128.726 cv
359.256 129.013 359.7 129.022 360.053 129.022 cv
360.313 129.022 360.517 129.022 360.517 128.735 cv
cp
358.95 127.78 mo
358.95 127.994 358.95 128.188 358.589 128.355 cv
358.255 128.513 357.838 128.513 357.764 128.513 cv
357.188 128.513 356.809 128.197 356.809 127.836 cv
356.809 127.382 357.605 127.039 358.95 127.002 cv
358.95 127.78 li
cp
f
365.206 125.315 mo
365.206 125.028 364.983 125.028 364.835 125.028 cv
363.751 125.028 li
363.612 125.028 363.38 125.028 363.38 125.306 cv
363.38 125.593 363.603 125.593 363.751 125.593 cv
364.011 125.593 li
363 128.578 li
361.99 125.593 li
362.249 125.593 li
362.389 125.593 362.62 125.593 362.62 125.315 cv
362.62 125.028 362.397 125.028 362.249 125.028 cv
361.165 125.028 li
361.017 125.028 360.794 125.028 360.794 125.315 cv
360.794 125.593 361.026 125.593 361.165 125.593 cv
361.443 125.593 li
362.509 128.744 li
362.62 129.06 362.806 129.06 363 129.06 cv
363.176 129.06 363.39 129.06 363.491 128.753 cv
364.558 125.593 li
364.835 125.593 li
364.975 125.593 365.206 125.593 365.206 125.315 cv
cp
f
369.738 128.012 mo
369.738 127.752 369.47 127.752 369.414 127.752 cv
369.247 127.752 369.173 127.78 369.108 127.957 cv
368.904 128.429 368.403 128.513 368.144 128.513 cv
367.449 128.513 366.754 128.049 366.605 127.252 cv
369.367 127.252 li
369.563 127.252 369.738 127.252 369.738 126.909 cv
369.738 125.853 369.146 124.944 367.94 124.944 cv
366.837 124.944 365.947 125.871 365.947 127.011 cv
365.947 128.142 366.884 129.078 368.079 129.078 cv
369.303 129.078 369.738 128.244 369.738 128.012 cv
cp
369.08 126.696 mo
366.614 126.696 li
366.744 126.02 367.291 125.51 367.94 125.51 cv
368.422 125.51 368.997 125.741 369.08 126.696 cv
cp
f
374.817 125.547 mo
374.817 125.361 374.706 124.972 373.937 124.972 cv
373.464 124.972 372.871 125.139 372.361 125.723 cv
372.361 125.408 li
372.361 125.12 372.306 125.028 371.99 125.028 cv
370.971 125.028 li
370.832 125.028 370.601 125.028 370.601 125.306 cv
370.601 125.593 370.822 125.593 370.971 125.593 cv
371.722 125.593 li
371.722 128.457 li
370.971 128.457 li
370.832 128.457 370.601 128.457 370.601 128.735 cv
370.601 129.022 370.822 129.022 370.971 129.022 cv
373.39 129.022 li
373.529 129.022 373.77 129.022 373.77 128.744 cv
373.77 128.457 373.529 128.457 373.39 128.457 cv
372.361 128.457 li
372.361 127.298 li
372.361 126.427 372.908 125.538 374.029 125.538 cv
374.039 125.76 374.196 125.945 374.428 125.945 cv
374.632 125.945 374.817 125.797 374.817 125.547 cv
cp
f
379.979 128.735 mo
379.979 128.457 379.748 128.457 379.609 128.457 cv
379.22 128.457 379.127 128.411 379.053 128.383 cv
379.053 126.381 li
379.053 125.723 378.553 124.944 377.218 124.944 cv
376.819 124.944 375.874 124.944 375.874 125.621 cv
375.874 125.899 376.068 126.047 376.291 126.047 cv
376.43 126.047 376.689 125.964 376.699 125.621 cv
376.699 125.547 376.708 125.538 376.894 125.519 cv
377.023 125.51 377.144 125.51 377.228 125.51 cv
377.932 125.51 378.413 125.797 378.413 126.455 cv
376.772 126.483 375.633 126.946 375.633 127.836 cv
375.633 128.476 376.217 129.078 377.162 129.078 cv
377.505 129.078 378.08 129.013 378.516 128.726 cv
378.72 129.013 379.164 129.022 379.517 129.022 cv
379.776 129.022 379.979 129.022 379.979 128.735 cv
cp
378.413 127.78 mo
378.413 127.994 378.413 128.188 378.052 128.355 cv
377.719 128.513 377.301 128.513 377.228 128.513 cv
376.652 128.513 376.272 128.197 376.272 127.836 cv
376.272 127.382 377.069 127.039 378.413 127.002 cv
378.413 127.78 li
cp
f
384.753 125.426 mo
384.753 125.213 384.577 124.926 384.076 124.926 cv
383.975 124.926 383.521 124.935 383.094 125.25 cv
382.946 125.148 382.621 124.972 382.195 124.972 cv
381.323 124.972 380.666 125.667 380.666 126.455 cv
380.666 126.854 380.823 127.159 380.962 127.335 cv
380.86 127.484 380.776 127.688 380.776 127.966 cv
380.776 128.29 380.906 128.522 380.99 128.633 cv
380.313 129.05 380.313 129.68 380.313 129.782 cv
380.313 130.58 381.282 131.145 382.464 131.145 cv
383.65 131.145 384.623 130.57 384.623 129.782 cv
384.623 129.439 384.456 128.976 383.983 128.726 cv
383.863 128.661 383.474 128.457 382.64 128.457 cv
381.991 128.457 li
381.917 128.457 381.796 128.457 381.723 128.438 cv
381.583 128.438 381.527 128.438 381.416 128.309 cv
381.314 128.179 381.306 127.975 381.306 127.975 cv
381.306 127.938 381.323 127.808 381.36 127.715 cv
381.389 127.734 381.741 127.947 382.195 127.947 cv
383.048 127.947 383.725 127.28 383.725 126.455 cv
383.725 126.177 383.644 125.908 383.492 125.648 cv
383.684 125.538 383.902 125.5 384.021 125.491 cv
384.076 125.741 384.29 125.806 384.382 125.806 cv
384.54 125.806 384.753 125.695 384.753 125.426 cv
cp
383.085 126.455 mo
383.085 126.983 382.677 127.391 382.195 127.391 cv
381.694 127.391 381.306 126.956 381.306 126.464 cv
381.306 125.936 381.713 125.528 382.195 125.528 cv
382.695 125.528 383.085 125.964 383.085 126.455 cv
cp
384.086 129.782 mo
384.086 130.19 383.391 130.589 382.464 130.589 cv
381.542 130.589 380.851 130.19 380.851 129.782 cv
380.851 129.615 380.934 129.319 381.226 129.134 cv
381.454 128.985 381.537 128.985 382.214 128.985 cv
383.038 128.985 384.086 128.985 384.086 129.782 cv
cp
f
389.202 128.012 mo
389.202 127.752 388.933 127.752 388.878 127.752 cv
388.711 127.752 388.637 127.78 388.571 127.957 cv
388.368 128.429 387.867 128.513 387.607 128.513 cv
386.912 128.513 386.218 128.049 386.069 127.252 cv
388.831 127.252 li
389.025 127.252 389.202 127.252 389.202 126.909 cv
389.202 125.853 388.608 124.944 387.403 124.944 cv
386.301 124.944 385.411 125.871 385.411 127.011 cv
385.411 128.142 386.347 129.078 387.543 129.078 cv
388.767 129.078 389.202 128.244 389.202 128.012 cv
cp
388.544 126.696 mo
386.078 126.696 li
386.208 126.02 386.755 125.51 387.403 125.51 cv
387.886 125.51 388.46 125.741 388.544 126.696 cv
cp
f
332.002 75.7959 mo
323.184 95.728 li
.746 .676 .668 .898 cmyk
@
320.456 101.893 mo
325.495 96.7505 li
320.872 94.7056 li
320.456 101.893 li
cp
f
0 lc
0 lj
320.456 101.893 mo
325.495 96.7505 li
320.872 94.7056 li
320.456 101.893 li
cp
@
1 lc
1 lj
352.237 75.7925 mo
361.548 95.7979 li
@
364.392 101.909 mo
363.84 94.7314 li
359.256 96.8647 li
364.392 101.909 li
cp
f
0 lc
0 lj
364.392 101.909 mo
363.84 94.7314 li
359.256 96.8647 li
364.392 101.909 li
cp
@
1 lc
1 lj
146.82 103.742 mo
204.115 103.742 li
204.115 135.76 li
146.82 135.76 li
146.82 103.742 li
cp
@
155.855 113.627 mo
155.855 113.415 155.68 113.127 155.179 113.127 cv
155.077 113.127 154.623 113.136 154.197 113.451 cv
154.048 113.35 153.724 113.173 153.297 113.173 cv
152.426 113.173 151.768 113.869 151.768 114.656 cv
151.768 115.055 151.926 115.361 152.065 115.537 cv
151.963 115.685 151.879 115.889 151.879 116.167 cv
151.879 116.491 152.009 116.723 152.093 116.834 cv
151.416 117.251 151.416 117.882 151.416 117.984 cv
151.416 118.781 152.385 119.346 153.566 119.346 cv
154.752 119.346 155.726 118.771 155.726 117.984 cv
155.726 117.641 155.559 117.177 155.086 116.927 cv
154.966 116.862 154.577 116.658 153.742 116.658 cv
153.094 116.658 li
153.02 116.658 152.899 116.658 152.825 116.64 cv
152.686 116.64 152.63 116.64 152.519 116.51 cv
152.417 116.38 152.408 116.176 152.408 116.176 cv
152.408 116.139 152.426 116.01 152.463 115.917 cv
152.491 115.936 152.843 116.148 153.297 116.148 cv
154.15 116.148 154.827 115.481 154.827 114.656 cv
154.827 114.378 154.747 114.109 154.595 113.85 cv
154.787 113.739 155.005 113.702 155.124 113.692 cv
155.179 113.943 155.392 114.008 155.485 114.008 cv
155.643 114.008 155.855 113.896 155.855 113.627 cv
cp
154.188 114.656 mo
154.188 115.185 153.779 115.592 153.297 115.592 cv
152.797 115.592 152.408 115.157 152.408 114.666 cv
152.408 114.137 152.815 113.729 153.297 113.729 cv
153.798 113.729 154.188 114.165 154.188 114.656 cv
cp
155.188 117.984 mo
155.188 118.392 154.493 118.79 153.566 118.79 cv
152.645 118.79 151.954 118.392 151.954 117.984 cv
151.954 117.817 152.036 117.521 152.329 117.335 cv
152.557 117.187 152.64 117.187 153.316 117.187 cv
154.141 117.187 155.188 117.187 155.188 117.984 cv
cp
0 0 0 1 cmyk
f
160.305 116.213 mo
160.305 115.954 160.036 115.954 159.98 115.954 cv
159.813 115.954 159.739 115.981 159.674 116.158 cv
159.47 116.63 158.97 116.714 158.71 116.714 cv
158.015 116.714 157.32 116.25 157.172 115.454 cv
159.934 115.454 li
160.128 115.454 160.305 115.454 160.305 115.11 cv
160.305 114.054 159.711 113.146 158.506 113.146 cv
157.403 113.146 156.514 114.072 156.514 115.212 cv
156.514 116.343 157.45 117.279 158.646 117.279 cv
159.869 117.279 160.305 116.445 160.305 116.213 cv
cp
159.646 114.897 mo
157.181 114.897 li
157.311 114.221 157.857 113.711 158.506 113.711 cv
158.988 113.711 159.563 113.943 159.646 114.897 cv
cp
f
165.031 116.056 mo
165.031 115.889 165.031 115.694 164.707 115.694 cv
164.401 115.694 164.392 115.889 164.392 116.046 cv
164.382 116.621 163.854 116.714 163.641 116.714 cv
162.927 116.714 162.927 116.232 162.927 116 cv
162.927 113.794 li
164.447 113.794 li
164.586 113.794 164.818 113.794 164.818 113.516 cv
164.818 113.229 164.596 113.229 164.447 113.229 cv
162.927 113.229 li
162.927 112.469 li
162.927 112.293 162.927 112.089 162.612 112.089 cv
162.288 112.089 162.288 112.284 162.288 112.469 cv
162.288 113.229 li
161.481 113.229 li
161.333 113.229 161.102 113.229 161.102 113.516 cv
161.102 113.794 161.333 113.794 161.472 113.794 cv
162.288 113.794 li
162.288 116.056 li
162.288 116.946 162.918 117.279 163.595 117.279 cv
164.281 117.279 165.031 116.881 165.031 116.056 cv
cp
f
175.31 113.507 mo
175.31 113.229 175.087 113.229 174.921 113.229 cv
173.855 113.229 li
173.688 113.229 173.465 113.229 173.465 113.507 cv
173.465 113.794 173.679 113.794 173.855 113.794 cv
174.309 113.794 li
173.846 116.556 li
173.836 116.556 li
173.799 116.315 173.679 115.889 173.567 115.509 cv
173.401 114.925 173.373 114.823 173.048 114.823 cv
172.956 114.823 172.78 114.823 172.678 115.027 cv
172.65 115.092 172.279 116.371 172.242 116.556 cv
172.233 116.556 li
171.751 113.794 li
172.205 113.794 li
172.372 113.794 172.594 113.794 172.594 113.516 cv
172.594 113.229 172.381 113.229 172.205 113.229 cv
171.139 113.229 li
170.972 113.229 170.75 113.229 170.75 113.507 cv
170.75 113.794 170.944 113.794 171.223 113.794 cv
171.779 116.909 li
171.816 117.122 171.844 117.261 172.214 117.261 cv
172.585 117.261 172.613 117.177 172.78 116.612 cv
173.011 115.796 173.021 115.667 173.048 115.463 cv
173.058 115.463 li
173.104 115.945 173.447 117.029 173.484 117.103 cv
173.595 117.261 173.762 117.261 173.874 117.261 cv
174.216 117.261 174.244 117.112 174.281 116.909 cv
174.837 113.794 li
175.115 113.794 175.31 113.794 175.31 113.507 cv
cp
f
179.694 116.946 mo
179.694 116.658 179.453 116.658 179.314 116.658 cv
178.332 116.658 li
178.332 113.609 li
178.332 113.322 178.276 113.229 177.961 113.229 cv
176.654 113.229 li
176.515 113.229 176.274 113.229 176.274 113.507 cv
176.274 113.794 176.515 113.794 176.654 113.794 cv
177.692 113.794 li
177.692 116.658 li
176.58 116.658 li
176.432 116.658 176.2 116.658 176.2 116.946 cv
176.2 117.224 176.44 117.224 176.58 117.224 cv
179.314 117.224 li
179.453 117.224 179.694 117.224 179.694 116.946 cv
cp
178.378 112.08 mo
178.378 111.82 178.17 111.616 177.905 111.616 cv
177.651 111.616 177.451 111.82 177.451 112.08 cv
177.451 112.339 177.651 112.543 177.905 112.543 cv
178.17 112.543 178.378 112.339 178.378 112.08 cv
cp
f
185.079 116.946 mo
185.079 116.658 184.847 116.658 184.699 116.658 cv
184.291 116.658 li
184.291 114.508 li
184.291 113.572 183.818 113.173 183.086 113.173 cv
182.465 113.173 182.048 113.488 181.872 113.665 cv
181.872 113.368 181.872 113.229 181.501 113.229 cv
180.825 113.229 li
180.676 113.229 180.445 113.229 180.445 113.516 cv
180.445 113.794 180.686 113.794 180.815 113.794 cv
181.232 113.794 li
181.232 116.658 li
180.825 116.658 li
180.676 116.658 180.445 116.658 180.445 116.946 cv
180.445 117.224 180.686 117.224 180.815 117.224 cv
182.289 117.224 li
182.419 117.224 182.66 117.224 182.66 116.946 cv
182.66 116.658 182.428 116.658 182.28 116.658 cv
181.872 116.658 li
181.872 115.018 li
181.872 114.091 182.558 113.739 183.03 113.739 cv
183.521 113.739 183.651 113.998 183.651 114.554 cv
183.651 116.658 li
183.29 116.658 li
183.142 116.658 182.91 116.658 182.91 116.946 cv
182.91 117.224 183.16 117.224 183.29 117.224 cv
184.708 117.224 li
184.838 117.224 185.079 117.224 185.079 116.946 cv
cp
f
189.945 116.937 mo
189.945 116.658 189.704 116.658 189.574 116.658 cv
189.157 116.658 li
189.157 111.94 li
189.157 111.653 189.102 111.561 188.786 111.561 cv
188.109 111.561 li
187.961 111.561 187.729 111.561 187.729 111.848 cv
187.729 112.126 187.971 112.126 188.1 112.126 cv
188.518 112.126 li
188.518 113.59 li
188.211 113.322 187.832 113.173 187.433 113.173 cv
186.423 113.173 185.533 114.054 185.533 115.231 cv
185.533 116.38 186.367 117.279 187.35 117.279 cv
187.869 117.279 188.258 117.029 188.518 116.76 cv
188.518 117.094 188.518 117.224 188.888 117.224 cv
189.565 117.224 li
189.713 117.224 189.945 117.224 189.945 116.937 cv
cp
188.518 115.426 mo
188.518 115.945 188.1 116.714 187.387 116.714 cv
186.729 116.714 186.172 116.056 186.172 115.231 cv
186.172 114.341 186.821 113.739 187.47 113.739 cv
188.063 113.739 188.518 114.258 188.518 114.768 cv
188.518 115.426 li
cp
f
194.394 115.222 mo
194.394 114.063 193.532 113.146 192.494 113.146 cv
191.456 113.146 190.594 114.063 190.594 115.222 cv
190.594 116.399 191.474 117.279 192.494 117.279 cv
193.513 117.279 194.394 116.39 194.394 115.222 cv
cp
193.754 115.157 mo
193.754 116.019 193.179 116.714 192.494 116.714 cv
191.808 116.714 191.233 116.019 191.233 115.157 cv
191.233 114.313 191.835 113.711 192.494 113.711 cv
193.161 113.711 193.754 114.313 193.754 115.157 cv
cp
f
199.64 113.507 mo
199.64 113.229 199.417 113.229 199.25 113.229 cv
198.185 113.229 li
198.018 113.229 197.795 113.229 197.795 113.507 cv
197.795 113.794 198.008 113.794 198.185 113.794 cv
198.639 113.794 li
198.175 116.556 li
198.166 116.556 li
198.129 116.315 198.008 115.889 197.897 115.509 cv
197.73 114.925 197.702 114.823 197.378 114.823 cv
197.285 114.823 197.109 114.823 197.007 115.027 cv
196.979 115.092 196.609 116.371 196.572 116.556 cv
196.563 116.556 li
196.081 113.794 li
196.535 113.794 li
196.701 113.794 196.924 113.794 196.924 113.516 cv
196.924 113.229 196.71 113.229 196.535 113.229 cv
195.469 113.229 li
195.302 113.229 195.08 113.229 195.08 113.507 cv
195.08 113.794 195.274 113.794 195.552 113.794 cv
196.108 116.909 li
196.146 117.122 196.173 117.261 196.544 117.261 cv
196.915 117.261 196.942 117.177 197.109 116.612 cv
197.341 115.796 197.35 115.667 197.378 115.463 cv
197.387 115.463 li
197.434 115.945 197.776 117.029 197.813 117.103 cv
197.925 117.261 198.092 117.261 198.203 117.261 cv
198.546 117.261 198.574 117.112 198.611 116.909 cv
199.167 113.794 li
199.445 113.794 199.64 113.794 199.64 113.507 cv
cp
f
165.198 128.744 mo
165.198 128.457 164.976 128.457 164.827 128.457 cv
163.623 128.457 li
163.623 123.739 li
163.623 123.452 163.567 123.359 163.252 123.359 cv
161.788 123.359 li
161.639 123.359 161.407 123.359 161.407 123.646 cv
161.407 123.925 161.648 123.925 161.778 123.925 cv
162.983 123.925 li
162.983 128.457 li
161.788 128.457 li
161.639 128.457 161.407 128.457 161.407 128.744 cv
161.407 129.022 161.648 129.022 161.778 129.022 cv
164.827 129.022 li
164.966 129.022 165.198 129.022 165.198 128.744 cv
cp
f
170.036 128.012 mo
170.036 127.752 169.768 127.752 169.712 127.752 cv
169.545 127.752 169.471 127.78 169.406 127.957 cv
169.202 128.429 168.702 128.513 168.442 128.513 cv
167.747 128.513 167.052 128.049 166.903 127.252 cv
169.666 127.252 li
169.86 127.252 170.036 127.252 170.036 126.909 cv
170.036 125.853 169.443 124.944 168.238 124.944 cv
167.135 124.944 166.246 125.871 166.246 127.011 cv
166.246 128.142 167.182 129.078 168.377 129.078 cv
169.601 129.078 170.036 128.244 170.036 128.012 cv
cp
169.378 126.696 mo
166.913 126.696 li
167.042 126.02 167.589 125.51 168.238 125.51 cv
168.72 125.51 169.295 125.741 169.378 126.696 cv
cp
f
175.347 128.744 mo
175.347 128.457 175.115 128.457 174.967 128.457 cv
174.559 128.457 li
174.559 126.307 li
174.559 125.371 174.086 124.972 173.354 124.972 cv
172.733 124.972 172.316 125.287 172.14 125.463 cv
172.14 125.167 172.14 125.028 171.77 125.028 cv
171.093 125.028 li
170.944 125.028 170.713 125.028 170.713 125.315 cv
170.713 125.593 170.954 125.593 171.083 125.593 cv
171.5 125.593 li
171.5 128.457 li
171.093 128.457 li
170.944 128.457 170.713 128.457 170.713 128.744 cv
170.713 129.022 170.954 129.022 171.083 129.022 cv
172.557 129.022 li
172.687 129.022 172.928 129.022 172.928 128.744 cv
172.928 128.457 172.696 128.457 172.548 128.457 cv
172.14 128.457 li
172.14 126.816 li
172.14 125.89 172.826 125.538 173.299 125.538 cv
173.79 125.538 173.92 125.797 173.92 126.353 cv
173.92 128.457 li
173.558 128.457 li
173.41 128.457 173.178 128.457 173.178 128.744 cv
173.178 129.022 173.429 129.022 173.558 129.022 cv
174.976 129.022 li
175.106 129.022 175.347 129.022 175.347 128.744 cv
cp
f
180.185 125.426 mo
180.185 125.213 180.009 124.926 179.509 124.926 cv
179.407 124.926 178.953 124.935 178.526 125.25 cv
178.378 125.148 178.053 124.972 177.627 124.972 cv
176.756 124.972 176.098 125.667 176.098 126.455 cv
176.098 126.854 176.255 127.159 176.395 127.335 cv
176.292 127.484 176.209 127.688 176.209 127.966 cv
176.209 128.29 176.339 128.522 176.422 128.633 cv
175.746 129.05 175.746 129.68 175.746 129.782 cv
175.746 130.58 176.714 131.145 177.896 131.145 cv
179.082 131.145 180.055 130.57 180.055 129.782 cv
180.055 129.439 179.889 128.976 179.416 128.726 cv
179.295 128.661 178.906 128.457 178.072 128.457 cv
177.423 128.457 li
177.349 128.457 177.229 128.457 177.154 128.438 cv
177.015 128.438 176.96 128.438 176.849 128.309 cv
176.747 128.179 176.737 127.975 176.737 127.975 cv
176.737 127.938 176.756 127.808 176.793 127.715 cv
176.821 127.734 177.173 127.947 177.627 127.947 cv
178.479 127.947 179.156 127.28 179.156 126.455 cv
179.156 126.177 179.076 125.908 178.925 125.648 cv
179.116 125.538 179.334 125.5 179.453 125.491 cv
179.509 125.741 179.722 125.806 179.814 125.806 cv
179.972 125.806 180.185 125.695 180.185 125.426 cv
cp
178.517 126.455 mo
178.517 126.983 178.109 127.391 177.627 127.391 cv
177.126 127.391 176.737 126.956 176.737 126.464 cv
176.737 125.936 177.145 125.528 177.627 125.528 cv
178.127 125.528 178.517 125.964 178.517 126.455 cv
cp
179.518 129.782 mo
179.518 130.19 178.823 130.589 177.896 130.589 cv
176.975 130.589 176.283 130.19 176.283 129.782 cv
176.283 129.615 176.365 129.319 176.658 129.134 cv
176.887 128.985 176.969 128.985 177.646 128.985 cv
178.471 128.985 179.518 128.985 179.518 129.782 cv
cp
f
184.495 127.854 mo
184.495 127.688 184.495 127.493 184.17 127.493 cv
183.865 127.493 183.855 127.688 183.855 127.845 cv
183.846 128.42 183.318 128.513 183.104 128.513 cv
182.391 128.513 182.391 128.031 182.391 127.799 cv
182.391 125.593 li
183.911 125.593 li
184.05 125.593 184.282 125.593 184.282 125.315 cv
184.282 125.028 184.06 125.028 183.911 125.028 cv
182.391 125.028 li
182.391 124.268 li
182.391 124.092 182.391 123.888 182.076 123.888 cv
181.751 123.888 181.751 124.082 181.751 124.268 cv
181.751 125.028 li
180.945 125.028 li
180.797 125.028 180.565 125.028 180.565 125.315 cv
180.565 125.593 180.797 125.593 180.936 125.593 cv
181.751 125.593 li
181.751 127.854 li
181.751 128.744 182.382 129.078 183.058 129.078 cv
183.744 129.078 184.495 128.679 184.495 127.854 cv
cp
f
189.945 128.744 mo
189.945 128.457 189.713 128.457 189.565 128.457 cv
189.157 128.457 li
189.157 126.307 li
189.157 125.371 188.684 124.972 187.952 124.972 cv
187.331 124.972 186.914 125.287 186.738 125.463 cv
186.738 123.739 li
186.738 123.452 186.682 123.359 186.367 123.359 cv
185.69 123.359 li
185.542 123.359 185.311 123.359 185.311 123.646 cv
185.311 123.925 185.552 123.925 185.681 123.925 cv
186.098 123.925 li
186.098 128.457 li
185.69 128.457 li
185.542 128.457 185.311 128.457 185.311 128.744 cv
185.311 129.022 185.552 129.022 185.681 129.022 cv
187.155 129.022 li
187.285 129.022 187.526 129.022 187.526 128.744 cv
187.526 128.457 187.294 128.457 187.146 128.457 cv
186.738 128.457 li
186.738 126.816 li
186.738 125.89 187.424 125.538 187.896 125.538 cv
188.388 125.538 188.518 125.797 188.518 126.353 cv
188.518 128.457 li
188.156 128.457 li
188.008 128.457 187.776 128.457 187.776 128.744 cv
187.776 129.022 188.026 129.022 188.156 129.022 cv
189.574 129.022 li
189.704 129.022 189.945 129.022 189.945 128.744 cv
cp
f
2.37109 153.981 mo
54.6113 153.981 li
54.6113 185.999 li
2.37109 185.999 li
2.37109 153.981 li
cp
.746 .676 .668 .898 cmyk
@
25.9102 163.866 mo
25.9102 163.653 25.7344 163.366 25.2339 163.366 cv
25.1318 163.366 24.6777 163.375 24.2515 163.69 cv
24.103 163.588 23.7788 163.412 23.3521 163.412 cv
22.481 163.412 21.8228 164.107 21.8228 164.895 cv
21.8228 165.294 21.9805 165.6 22.1196 165.775 cv
22.0176 165.924 21.9341 166.128 21.9341 166.406 cv
21.9341 166.73 22.064 166.962 22.1475 167.073 cv
21.4707 167.49 21.4707 168.121 21.4707 168.223 cv
21.4707 169.02 22.4399 169.585 23.6211 169.585 cv
24.8076 169.585 25.7808 169.01 25.7808 168.223 cv
25.7808 167.879 25.6138 167.416 25.1411 167.166 cv
25.0205 167.101 24.6313 166.897 23.7974 166.897 cv
23.1484 166.897 li
23.0742 166.897 22.9536 166.897 22.8794 166.878 cv
22.7407 166.878 22.6851 166.878 22.5737 166.749 cv
22.4717 166.619 22.4624 166.415 22.4624 166.415 cv
22.4624 166.378 22.481 166.249 22.5181 166.156 cv
22.5459 166.174 22.8979 166.387 23.3521 166.387 cv
24.2051 166.387 24.8813 165.72 24.8813 164.895 cv
24.8813 164.617 24.8013 164.348 24.6499 164.089 cv
24.8413 163.978 25.0596 163.94 25.1782 163.931 cv
25.2339 164.182 25.4468 164.247 25.5396 164.247 cv
25.6973 164.247 25.9102 164.135 25.9102 163.866 cv
cp
24.2422 164.895 mo
24.2422 165.423 23.834 165.831 23.3521 165.831 cv
22.8516 165.831 22.4624 165.396 22.4624 164.904 cv
22.4624 164.376 22.8701 163.968 23.3521 163.968 cv
23.8525 163.968 24.2422 164.404 24.2422 164.895 cv
cp
25.2432 168.223 mo
25.2432 168.63 24.5479 169.029 23.6211 169.029 cv
22.6997 169.029 22.0083 168.63 22.0083 168.223 cv
22.0083 168.056 22.0908 167.759 22.3833 167.574 cv
22.6118 167.425 22.6943 167.425 23.3706 167.425 cv
24.1958 167.425 25.2432 167.425 25.2432 168.223 cv
cp
0 0 0 1 cmyk
f
30.3594 166.452 mo
30.3594 166.193 30.0903 166.193 30.0347 166.193 cv
29.8682 166.193 29.7939 166.221 29.729 166.396 cv
29.5249 166.869 29.0244 166.953 28.7651 166.953 cv
28.0698 166.953 27.3745 166.489 27.2266 165.692 cv
29.9883 165.692 li
30.1831 165.692 30.3594 165.692 30.3594 165.349 cv
30.3594 164.293 29.7661 163.384 28.561 163.384 cv
27.458 163.384 26.5684 164.312 26.5684 165.451 cv
26.5684 166.582 27.5044 167.518 28.7002 167.518 cv
29.9233 167.518 30.3594 166.684 30.3594 166.452 cv
cp
29.7012 165.136 mo
27.2358 165.136 li
27.3652 164.459 27.9121 163.95 28.561 163.95 cv
29.043 163.95 29.6177 164.182 29.7012 165.136 cv
cp
f
35.0859 166.295 mo
35.0859 166.128 35.0859 165.933 34.7617 165.933 cv
34.4556 165.933 34.4463 166.128 34.4463 166.285 cv
34.437 166.86 33.9092 166.953 33.6958 166.953 cv
32.9819 166.953 32.9819 166.471 32.9819 166.239 cv
32.9819 164.033 li
34.502 164.033 li
34.6411 164.033 34.873 164.033 34.873 163.755 cv
34.873 163.468 34.6504 163.468 34.502 163.468 cv
32.9819 163.468 li
32.9819 162.708 li
32.9819 162.532 32.9819 162.328 32.667 162.328 cv
32.3428 162.328 32.3428 162.522 32.3428 162.708 cv
32.3428 163.468 li
31.5361 163.468 li
31.3877 163.468 31.1563 163.468 31.1563 163.755 cv
31.1563 164.033 31.3877 164.033 31.5269 164.033 cv
32.3428 164.033 li
32.3428 166.295 li
32.3428 167.185 32.9727 167.518 33.6494 167.518 cv
34.3354 167.518 35.0859 167.12 35.0859 166.295 cv
cp
f
10.6455 174.099 mo
10.6455 173.542 9.90381 173.542 9.75537 173.542 cv
9.01416 173.542 8.30029 173.969 8.30029 174.775 cv
8.30029 175.267 li
7.37354 175.267 li
7.2251 175.267 6.99365 175.267 6.99365 175.554 cv
6.99365 175.832 7.2251 175.832 7.36426 175.832 cv
8.30029 175.832 li
8.30029 178.696 li
7.36426 178.696 li
7.2251 178.696 6.98438 178.696 6.98438 178.974 cv
6.98438 179.261 7.2251 179.261 7.36426 179.261 cv
9.87598 179.261 li
10.0151 179.261 10.2559 179.261 10.2559 178.983 cv
10.2559 178.696 10.0151 178.696 9.87598 178.696 cv
8.93994 178.696 li
8.93994 175.832 li
10.0708 175.832 li
10.2095 175.832 10.4414 175.832 10.4414 175.554 cv
10.4414 175.267 10.2188 175.267 10.0708 175.267 cv
8.93994 175.267 li
8.93994 174.831 li
8.93994 174.108 9.56104 174.108 9.83887 174.108 cv
9.83887 174.145 9.92236 174.506 10.2466 174.506 cv
10.4321 174.506 10.6455 174.358 10.6455 174.099 cv
cp
f
15.6875 178.983 mo
15.6875 178.696 15.4463 178.696 15.3071 178.696 cv
14.3247 178.696 li
14.3247 175.646 li
14.3247 175.359 14.269 175.267 13.9541 175.267 cv
12.6475 175.267 li
12.5083 175.267 12.2671 175.267 12.2671 175.544 cv
12.2671 175.832 12.5083 175.832 12.6475 175.832 cv
13.6855 175.832 li
13.6855 178.696 li
12.5732 178.696 li
12.4248 178.696 12.1934 178.696 12.1934 178.983 cv
12.1934 179.261 12.4341 179.261 12.5732 179.261 cv
15.3071 179.261 li
15.4463 179.261 15.6875 179.261 15.6875 178.983 cv
cp
14.3711 174.117 mo
14.3711 173.857 14.1631 173.654 13.8984 173.654 cv
13.644 173.654 13.4443 173.857 13.4443 174.117 cv
13.4443 174.377 13.644 174.581 13.8984 174.581 cv
14.1631 174.581 14.3711 174.377 14.3711 174.117 cv
cp
f
20.6553 178.983 mo
20.6553 178.696 20.4326 178.696 20.2842 178.696 cv
19.0796 178.696 li
19.0796 173.978 li
19.0796 173.691 19.0239 173.598 18.709 173.598 cv
17.2441 173.598 li
17.0962 173.598 16.8643 173.598 16.8643 173.886 cv
16.8643 174.164 17.1055 174.164 17.2354 174.164 cv
18.4399 174.164 li
18.4399 178.696 li
17.2441 178.696 li
17.0962 178.696 16.8643 178.696 16.8643 178.983 cv
16.8643 179.261 17.1055 179.261 17.2354 179.261 cv
20.2842 179.261 li
20.4233 179.261 20.6553 179.261 20.6553 178.983 cv
cp
f
25.4932 178.251 mo
25.4932 177.991 25.2246 177.991 25.1689 177.991 cv
25.002 177.991 24.9277 178.019 24.8628 178.195 cv
24.6592 178.668 24.1587 178.751 23.8989 178.751 cv
23.2041 178.751 22.5088 178.288 22.3604 177.491 cv
25.1226 177.491 li
25.3174 177.491 25.4932 177.491 25.4932 177.148 cv
25.4932 176.091 24.8999 175.183 23.6953 175.183 cv
22.5923 175.183 21.7026 176.11 21.7026 177.25 cv
21.7026 178.381 22.6387 179.317 23.834 179.317 cv
25.0576 179.317 25.4932 178.482 25.4932 178.251 cv
cp
24.835 176.935 mo
22.3696 176.935 li
22.4995 176.258 23.0464 175.749 23.6953 175.749 cv
24.1772 175.749 24.752 175.98 24.835 176.935 cv
cp
f
35.6699 178.983 mo
35.6699 178.696 35.438 178.696 35.29 178.696 cv
34.8823 178.696 li
34.8823 176.545 li
34.8823 175.609 34.4092 175.211 33.6772 175.211 cv
33.0562 175.211 32.6392 175.526 32.4629 175.702 cv
32.4629 175.405 32.4629 175.267 32.0923 175.267 cv
31.4155 175.267 li
31.2676 175.267 31.0356 175.267 31.0356 175.554 cv
31.0356 175.832 31.2769 175.832 31.4063 175.832 cv
31.8237 175.832 li
31.8237 178.696 li
31.4155 178.696 li
31.2676 178.696 31.0356 178.696 31.0356 178.983 cv
31.0356 179.261 31.2769 179.261 31.4063 179.261 cv
32.8804 179.261 li
33.0098 179.261 33.251 179.261 33.251 178.983 cv
33.251 178.696 33.019 178.696 32.8711 178.696 cv
32.4629 178.696 li
32.4629 177.055 li
32.4629 176.128 33.1489 175.776 33.6216 175.776 cv
34.1128 175.776 34.2427 176.036 34.2427 176.592 cv
34.2427 178.696 li
33.8813 178.696 li
33.7329 178.696 33.501 178.696 33.501 178.983 cv
33.501 179.261 33.7515 179.261 33.8813 179.261 cv
35.2993 179.261 li
35.4287 179.261 35.6699 179.261 35.6699 178.983 cv
cp
f
40.6006 178.974 mo
40.6006 178.696 40.3691 178.696 40.23 178.696 cv
39.8408 178.696 39.748 178.649 39.6738 178.622 cv
39.6738 176.62 li
39.6738 175.961 39.1733 175.183 37.8389 175.183 cv
37.4404 175.183 36.4946 175.183 36.4946 175.86 cv
36.4946 176.138 36.6895 176.286 36.9121 176.286 cv
37.0508 176.286 37.3105 176.203 37.3198 175.86 cv
37.3198 175.786 37.3291 175.776 37.5142 175.758 cv
37.644 175.749 37.7646 175.749 37.8481 175.749 cv
38.5522 175.749 39.0342 176.036 39.0342 176.694 cv
37.394 176.722 36.2539 177.185 36.2539 178.075 cv
36.2539 178.714 36.8379 179.317 37.7832 179.317 cv
38.126 179.317 38.7007 179.252 39.1362 178.964 cv
39.3403 179.252 39.7852 179.261 40.1372 179.261 cv
40.397 179.261 40.6006 179.261 40.6006 178.974 cv
cp
39.0342 178.019 mo
39.0342 178.232 39.0342 178.427 38.6729 178.594 cv
38.3394 178.751 37.9224 178.751 37.8481 178.751 cv
37.2734 178.751 36.8936 178.437 36.8936 178.075 cv
36.8936 177.621 37.6904 177.278 39.0342 177.241 cv
39.0342 178.019 li
cp
f
45.439 178.983 mo
45.439 178.696 45.2441 178.696 44.9106 178.696 cv
44.9106 176.453 li
44.9106 176.268 44.9106 175.211 44.0854 175.211 cv
43.8076 175.211 43.4277 175.332 43.168 175.693 cv
43.0288 175.378 42.7695 175.211 42.4639 175.211 cv
42.167 175.211 41.8892 175.341 41.6665 175.544 cv
41.6479 175.267 41.4629 175.267 41.2959 175.267 cv
40.999 175.267 li
40.8604 175.267 40.6191 175.267 40.6191 175.544 cv
40.6191 175.832 40.814 175.832 41.1475 175.832 cv
41.1475 178.696 li
40.814 178.696 40.6191 178.696 40.6191 178.983 cv
40.6191 179.261 40.8696 179.261 40.999 179.261 cv
41.8149 179.261 li
41.9541 179.261 42.1948 179.261 42.1948 178.983 cv
42.1948 178.696 42 178.696 41.6665 178.696 cv
41.6665 177.037 li
41.6665 176.212 42.0464 175.776 42.4268 175.776 cv
42.6396 175.776 42.7695 175.934 42.7695 176.536 cv
42.7695 178.696 li
42.5933 178.696 42.3618 178.696 42.3618 178.983 cv
42.3618 179.261 42.6118 179.261 42.7417 179.261 cv
43.437 179.261 li
43.5757 179.261 43.8169 179.261 43.8169 178.983 cv
43.8169 178.696 43.6221 178.696 43.2886 178.696 cv
43.2886 177.037 li
43.2886 176.212 43.6685 175.776 44.0483 175.776 cv
44.2617 175.776 44.3916 175.934 44.3916 176.536 cv
44.3916 178.696 li
44.2153 178.696 43.9839 178.696 43.9839 178.983 cv
43.9839 179.261 44.2339 179.261 44.3638 179.261 cv
45.0586 179.261 li
45.1978 179.261 45.439 179.261 45.439 178.983 cv
cp
f
49.8228 178.251 mo
49.8228 177.991 49.5537 177.991 49.4985 177.991 cv
49.3315 177.991 49.2573 178.019 49.1924 178.195 cv
48.9888 178.668 48.4883 178.751 48.2285 178.751 cv
47.5332 178.751 46.8384 178.288 46.6899 177.491 cv
49.4521 177.491 li
49.6465 177.491 49.8228 177.491 49.8228 177.148 cv
49.8228 176.091 49.2295 175.183 48.0249 175.183 cv
46.9219 175.183 46.0317 176.11 46.0317 177.25 cv
46.0317 178.381 46.9683 179.317 48.1636 179.317 cv
49.3872 179.317 49.8228 178.482 49.8228 178.251 cv
cp
49.1646 176.935 mo
46.6992 176.935 li
46.8291 176.258 47.376 175.749 48.0249 175.749 cv
48.5068 175.749 49.0811 175.98 49.1646 176.935 cv
cp
f
63.1938 153.981 mo
115.434 153.981 li
115.434 185.999 li
63.1938 185.999 li
63.1938 153.981 li
cp
.746 .676 .668 .898 cmyk
@
71.9312 163.987 mo
71.9312 163.802 71.8198 163.412 71.0508 163.412 cv
70.5776 163.412 69.9849 163.579 69.4751 164.163 cv
69.4751 163.848 li
69.4751 163.561 69.4194 163.468 69.104 163.468 cv
68.0845 163.468 li
67.9458 163.468 67.7139 163.468 67.7139 163.746 cv
67.7139 164.033 67.9365 164.033 68.0845 164.033 cv
68.8354 164.033 li
68.8354 166.897 li
68.0845 166.897 li
67.9458 166.897 67.7139 166.897 67.7139 167.175 cv
67.7139 167.462 67.9365 167.462 68.0845 167.462 cv
70.5039 167.462 li
70.6426 167.462 70.8838 167.462 70.8838 167.185 cv
70.8838 166.897 70.6426 166.897 70.5039 166.897 cv
69.4751 166.897 li
69.4751 165.739 li
69.4751 164.867 70.022 163.978 71.1431 163.978 cv
71.1523 164.2 71.3101 164.385 71.542 164.385 cv
71.7456 164.385 71.9312 164.237 71.9312 163.987 cv
cp
0 0 0 1 cmyk
f
76.584 166.452 mo
76.584 166.193 76.3149 166.193 76.2593 166.193 cv
76.0928 166.193 76.0186 166.221 75.9536 166.396 cv
75.7495 166.869 75.249 166.953 74.9897 166.953 cv
74.2944 166.953 73.5991 166.489 73.4512 165.692 cv
76.2129 165.692 li
76.4077 165.692 76.584 165.692 76.584 165.349 cv
76.584 164.293 75.9907 163.384 74.7856 163.384 cv
73.6826 163.384 72.793 164.312 72.793 165.451 cv
72.793 166.582 73.729 167.518 74.9248 167.518 cv
76.1479 167.518 76.584 166.684 76.584 166.452 cv
cp
75.9258 165.136 mo
73.4604 165.136 li
73.5898 164.459 74.1367 163.95 74.7856 163.95 cv
75.2676 163.95 75.8423 164.182 75.9258 165.136 cv
cp
f
81.9595 167.175 mo
81.9595 166.897 81.7275 166.897 81.5889 166.897 cv
81.1992 166.897 81.1069 166.851 81.0327 166.823 cv
81.0327 164.821 li
81.0327 164.163 80.5322 163.384 79.1973 163.384 cv
78.7988 163.384 77.8535 163.384 77.8535 164.061 cv
77.8535 164.339 78.0483 164.487 78.2705 164.487 cv
78.4097 164.487 78.6689 164.404 78.6782 164.061 cv
78.6782 163.987 78.6875 163.978 78.873 163.959 cv
79.0029 163.95 79.123 163.95 79.2065 163.95 cv
79.9111 163.95 80.3931 164.237 80.3931 164.895 cv
78.7524 164.923 77.6123 165.386 77.6123 166.276 cv
77.6123 166.916 78.1963 167.518 79.1416 167.518 cv
79.4849 167.518 80.0596 167.453 80.4951 167.166 cv
80.6987 167.453 81.1436 167.462 81.4961 167.462 cv
81.7554 167.462 81.9595 167.462 81.9595 167.175 cv
cp
80.3931 166.221 mo
80.3931 166.434 80.3931 166.628 80.0317 166.795 cv
79.6978 166.953 79.2808 166.953 79.2065 166.953 cv
78.6318 166.953 78.252 166.638 78.252 166.276 cv
78.252 165.822 79.0493 165.479 80.3931 165.442 cv
80.3931 166.221 li
cp
f
86.7603 167.175 mo
86.7603 166.897 86.5195 166.897 86.3896 166.897 cv
85.9727 166.897 li
85.9727 162.18 li
85.9727 161.892 85.917 161.799 85.6021 161.799 cv
84.9253 161.799 li
84.7769 161.799 84.5454 161.799 84.5454 162.087 cv
84.5454 162.365 84.7861 162.365 84.916 162.365 cv
85.333 162.365 li
85.333 163.829 li
85.0273 163.561 84.6475 163.412 84.2485 163.412 cv
83.2383 163.412 82.3486 164.293 82.3486 165.47 cv
82.3486 166.619 83.1826 167.518 84.165 167.518 cv
84.6846 167.518 85.0737 167.268 85.333 166.999 cv
85.333 167.333 85.333 167.462 85.7036 167.462 cv
86.3804 167.462 li
86.5288 167.462 86.7603 167.462 86.7603 167.175 cv
cp
85.333 165.665 mo
85.333 166.184 84.916 166.953 84.2021 166.953 cv
83.5444 166.953 82.9883 166.295 82.9883 165.47 cv
82.9883 164.58 83.6372 163.978 84.2856 163.978 cv
84.8789 163.978 85.333 164.497 85.333 165.006 cv
85.333 165.665 li
cp
f
95.9082 166.295 mo
95.9082 166.128 95.9082 165.933 95.584 165.933 cv
95.2783 165.933 95.269 166.128 95.269 166.285 cv
95.2598 166.86 94.7314 166.953 94.5181 166.953 cv
93.8042 166.953 93.8042 166.471 93.8042 166.239 cv
93.8042 164.033 li
95.3242 164.033 li
95.4634 164.033 95.6953 164.033 95.6953 163.755 cv
95.6953 163.468 95.4727 163.468 95.3242 163.468 cv
93.8042 163.468 li
93.8042 162.708 li
93.8042 162.532 93.8042 162.328 93.4893 162.328 cv
93.165 162.328 93.165 162.522 93.165 162.708 cv
93.165 163.468 li
92.3584 163.468 li
92.2104 163.468 91.9785 163.468 91.9785 163.755 cv
91.9785 164.033 92.2104 164.033 92.3491 164.033 cv
93.165 164.033 li
93.165 166.295 li
93.165 167.185 93.7949 167.518 94.4717 167.518 cv
95.1577 167.518 95.9082 167.12 95.9082 166.295 cv
cp
f
100.913 166.452 mo
100.913 166.193 100.645 166.193 100.589 166.193 cv
100.422 166.193 100.348 166.221 100.283 166.396 cv
100.079 166.869 99.5786 166.953 99.3193 166.953 cv
98.624 166.953 97.9287 166.489 97.7808 165.692 cv
100.542 165.692 li
100.737 165.692 100.913 165.692 100.913 165.349 cv
100.913 164.293 100.32 163.384 99.1152 163.384 cv
98.0122 163.384 97.1226 164.312 97.1226 165.451 cv
97.1226 166.582 98.0586 167.518 99.2544 167.518 cv
100.478 167.518 100.913 166.684 100.913 166.452 cv
cp
100.255 165.136 mo
97.79 165.136 li
97.9194 164.459 98.4663 163.95 99.1152 163.95 cv
99.5972 163.95 100.172 164.182 100.255 165.136 cv
cp
f
106.076 167.185 mo
106.076 166.897 105.835 166.897 105.696 166.897 cv
105.325 166.897 li
104.139 165.405 li
105.195 164.033 li
105.566 164.033 li
105.696 164.033 105.946 164.033 105.946 163.755 cv
105.946 163.468 105.705 163.468 105.566 163.468 cv
104.481 163.468 li
104.343 163.468 104.111 163.468 104.111 163.746 cv
104.111 164.033 104.315 164.033 104.565 164.033 cv
103.879 164.969 li
103.175 164.033 li
103.416 164.033 103.62 164.033 103.62 163.746 cv
103.62 163.468 103.388 163.468 103.249 163.468 cv
102.165 163.468 li
102.025 163.468 101.785 163.468 101.785 163.755 cv
101.785 164.033 102.035 164.033 102.165 164.033 cv
102.535 164.033 li
103.629 165.405 li
102.479 166.897 li
102.109 166.897 li
101.97 166.897 101.729 166.897 101.729 167.185 cv
101.729 167.462 101.979 167.462 102.109 167.462 cv
103.193 167.462 li
103.333 167.462 103.564 167.462 103.564 167.185 cv
103.564 166.897 103.369 166.897 103.082 166.897 cv
103.879 165.757 li
104.704 166.897 li
104.444 166.897 104.241 166.897 104.241 167.185 cv
104.241 167.462 104.472 167.462 104.611 167.462 cv
105.696 167.462 li
105.826 167.462 106.076 167.462 106.076 167.185 cv
cp
f
110.506 166.295 mo
110.506 166.128 110.506 165.933 110.182 165.933 cv
109.876 165.933 109.867 166.128 109.867 166.285 cv
109.857 166.86 109.329 166.953 109.116 166.953 cv
108.402 166.953 108.402 166.471 108.402 166.239 cv
108.402 164.033 li
109.922 164.033 li
110.061 164.033 110.293 164.033 110.293 163.755 cv
110.293 163.468 110.07 163.468 109.922 163.468 cv
108.402 163.468 li
108.402 162.708 li
108.402 162.532 108.402 162.328 108.087 162.328 cv
107.763 162.328 107.763 162.522 107.763 162.708 cv
107.763 163.468 li
106.956 163.468 li
106.808 163.468 106.576 163.468 106.576 163.755 cv
106.576 164.033 106.808 164.033 106.947 164.033 cv
107.763 164.033 li
107.763 166.295 li
107.763 167.185 108.393 167.518 109.069 167.518 cv
109.755 167.518 110.506 167.12 110.506 166.295 cv
cp
f
71.4678 174.099 mo
71.4678 173.542 70.7261 173.542 70.5776 173.542 cv
69.8364 173.542 69.1226 173.969 69.1226 174.775 cv
69.1226 175.267 li
68.1958 175.267 li
68.0474 175.267 67.8159 175.267 67.8159 175.554 cv
67.8159 175.832 68.0474 175.832 68.1865 175.832 cv
69.1226 175.832 li
69.1226 178.696 li
68.1865 178.696 li
68.0474 178.696 67.8066 178.696 67.8066 178.974 cv
67.8066 179.261 68.0474 179.261 68.1865 179.261 cv
70.6982 179.261 li
70.8374 179.261 71.0781 179.261 71.0781 178.983 cv
71.0781 178.696 70.8374 178.696 70.6982 178.696 cv
69.7622 178.696 li
69.7622 175.832 li
70.8931 175.832 li
71.0322 175.832 71.2637 175.832 71.2637 175.554 cv
71.2637 175.267 71.041 175.267 70.8931 175.267 cv
69.7622 175.267 li
69.7622 174.831 li
69.7622 174.108 70.3833 174.108 70.6611 174.108 cv
70.6611 174.145 70.7446 174.506 71.0688 174.506 cv
71.2544 174.506 71.4678 174.358 71.4678 174.099 cv
cp
f
76.7969 175.786 mo
76.7969 175.6 76.6855 175.211 75.9165 175.211 cv
75.4438 175.211 74.8506 175.378 74.3408 175.961 cv
74.3408 175.646 li
74.3408 175.359 74.2852 175.267 73.9702 175.267 cv
72.9507 175.267 li
72.8115 175.267 72.5796 175.267 72.5796 175.544 cv
72.5796 175.832 72.8022 175.832 72.9507 175.832 cv
73.7012 175.832 li
73.7012 178.696 li
72.9507 178.696 li
72.8115 178.696 72.5796 178.696 72.5796 178.974 cv
72.5796 179.261 72.8022 179.261 72.9507 179.261 cv
75.3696 179.261 li
75.5088 179.261 75.7495 179.261 75.7495 178.983 cv
75.7495 178.696 75.5088 178.696 75.3696 178.696 cv
74.3408 178.696 li
74.3408 177.537 li
74.3408 176.666 74.8877 175.776 76.0093 175.776 cv
76.0186 175.999 76.1758 176.184 76.4077 176.184 cv
76.6113 176.184 76.7969 176.036 76.7969 175.786 cv
cp
f
81.4775 177.259 mo
81.4775 176.101 80.6157 175.183 79.5776 175.183 cv
78.5396 175.183 77.6772 176.101 77.6772 177.259 cv
77.6772 178.437 78.5581 179.317 79.5776 179.317 cv
80.5972 179.317 81.4775 178.427 81.4775 177.259 cv
cp
80.8379 177.194 mo
80.8379 178.056 80.2632 178.751 79.5776 178.751 cv
78.8916 178.751 78.3169 178.056 78.3169 177.194 cv
78.3169 176.351 78.9194 175.749 79.5776 175.749 cv
80.2446 175.749 80.8379 176.351 80.8379 177.194 cv
cp
f
86.7974 178.983 mo
86.7974 178.696 86.603 178.696 86.269 178.696 cv
86.269 176.453 li
86.269 176.268 86.269 175.211 85.4443 175.211 cv
85.1665 175.211 84.7861 175.332 84.5269 175.693 cv
84.3877 175.378 84.1284 175.211 83.8223 175.211 cv
83.5259 175.211 83.2476 175.341 83.0254 175.544 cv
83.0068 175.267 82.8213 175.267 82.6543 175.267 cv
82.3579 175.267 li
82.2188 175.267 81.978 175.267 81.978 175.544 cv
81.978 175.832 82.1724 175.832 82.5063 175.832 cv
82.5063 178.696 li
82.1724 178.696 81.978 178.696 81.978 178.983 cv
81.978 179.261 82.228 179.261 82.3579 179.261 cv
83.1738 179.261 li
83.3125 179.261 83.5537 179.261 83.5537 178.983 cv
83.5537 178.696 83.3589 178.696 83.0254 178.696 cv
83.0254 177.037 li
83.0254 176.212 83.4053 175.776 83.7852 175.776 cv
83.9985 175.776 84.1284 175.934 84.1284 176.536 cv
84.1284 178.696 li
83.9521 178.696 83.7202 178.696 83.7202 178.983 cv
83.7202 179.261 83.9707 179.261 84.1006 179.261 cv
84.7954 179.261 li
84.9346 179.261 85.1758 179.261 85.1758 178.983 cv
85.1758 178.696 84.981 178.696 84.6475 178.696 cv
84.6475 177.037 li
84.6475 176.212 85.0273 175.776 85.4072 175.776 cv
85.6206 175.776 85.75 175.934 85.75 176.536 cv
85.75 178.696 li
85.5742 178.696 85.3423 178.696 85.3423 178.983 cv
85.3423 179.261 85.5928 179.261 85.7222 179.261 cv
86.4175 179.261 li
86.5566 179.261 86.7974 179.261 86.7974 178.983 cv
cp
f
95.7969 174.099 mo
95.7969 173.542 95.0557 173.542 94.9072 173.542 cv
94.166 173.542 93.4521 173.969 93.4521 174.775 cv
93.4521 175.267 li
92.5254 175.267 li
92.377 175.267 92.1455 175.267 92.1455 175.554 cv
92.1455 175.832 92.377 175.832 92.5161 175.832 cv
93.4521 175.832 li
93.4521 178.696 li
92.5161 178.696 li
92.377 178.696 92.1362 178.696 92.1362 178.974 cv
92.1362 179.261 92.377 179.261 92.5161 179.261 cv
95.0278 179.261 li
95.167 179.261 95.4077 179.261 95.4077 178.983 cv
95.4077 178.696 95.167 178.696 95.0278 178.696 cv
94.0918 178.696 li
94.0918 175.832 li
95.2227 175.832 li
95.3613 175.832 95.5933 175.832 95.5933 175.554 cv
95.5933 175.267 95.3706 175.267 95.2227 175.267 cv
94.0918 175.267 li
94.0918 174.831 li
94.0918 174.108 94.7129 174.108 94.9907 174.108 cv
94.9907 174.145 95.0742 174.506 95.3984 174.506 cv
95.584 174.506 95.7969 174.358 95.7969 174.099 cv
cp
f
100.839 178.983 mo
100.839 178.696 100.598 178.696 100.459 178.696 cv
99.4766 178.696 li
99.4766 175.646 li
99.4766 175.359 99.4209 175.267 99.106 175.267 cv
97.7988 175.267 li
97.6602 175.267 97.4189 175.267 97.4189 175.544 cv
97.4189 175.832 97.6602 175.832 97.7988 175.832 cv
98.8369 175.832 li
98.8369 178.696 li
97.7251 178.696 li
97.5767 178.696 97.3447 178.696 97.3447 178.983 cv
97.3447 179.261 97.5859 179.261 97.7251 179.261 cv
100.459 179.261 li
100.598 179.261 100.839 179.261 100.839 178.983 cv
cp
99.5229 174.117 mo
99.5229 173.857 99.3149 173.654 99.0503 173.654 cv
98.7959 173.654 98.5962 173.857 98.5962 174.117 cv
98.5962 174.377 98.7959 174.581 99.0503 174.581 cv
99.3149 174.581 99.5229 174.377 99.5229 174.117 cv
cp
f
105.807 178.983 mo
105.807 178.696 105.584 178.696 105.436 178.696 cv
104.231 178.696 li
104.231 173.978 li
104.231 173.691 104.176 173.598 103.86 173.598 cv
102.396 173.598 li
102.248 173.598 102.016 173.598 102.016 173.886 cv
102.016 174.164 102.257 174.164 102.387 174.164 cv
103.592 174.164 li
103.592 178.696 li
102.396 178.696 li
102.248 178.696 102.016 178.696 102.016 178.983 cv
102.016 179.261 102.257 179.261 102.387 179.261 cv
105.436 179.261 li
105.575 179.261 105.807 179.261 105.807 178.983 cv
cp
f
110.645 178.251 mo
110.645 177.991 110.376 177.991 110.321 177.991 cv
110.154 177.991 110.08 178.019 110.015 178.195 cv
109.811 178.668 109.311 178.751 109.051 178.751 cv
108.356 178.751 107.661 178.288 107.512 177.491 cv
110.274 177.491 li
110.469 177.491 110.645 177.491 110.645 177.148 cv
110.645 176.091 110.052 175.183 108.847 175.183 cv
107.744 175.183 106.854 176.11 106.854 177.25 cv
106.854 178.381 107.791 179.317 108.986 179.317 cv
110.209 179.317 110.645 178.482 110.645 178.251 cv
cp
109.987 176.935 mo
107.521 176.935 li
107.651 176.258 108.198 175.749 108.847 175.749 cv
109.329 175.749 109.904 175.98 109.987 176.935 cv
cp
f
48.0938 136.124 mo
42.04 146.424 li
.746 .676 .668 .898 cmyk
@
38.6245 152.235 mo
44.2192 147.705 li
39.8604 145.143 li
38.6245 152.235 li
cp
f
0 lc
0 lj
38.6245 152.235 mo
44.2192 147.705 li
39.8604 145.143 li
38.6245 152.235 li
cp
@
1 lc
1 lj
67.9131 136.118 mo
74.4092 146.547 li
@
77.9741 152.268 mo
76.5552 145.21 li
72.2651 147.883 li
77.9741 152.268 li
cp
f
0 lc
0 lj
77.9741 152.268 mo
76.5552 145.21 li
72.2651 147.883 li
77.9741 152.268 li
cp
@
1 lc
1 lj
127.509 75.6963 mo
151.467 97.8013 li
@
156.421 102.373 mo
153.181 95.9443 li
149.753 99.6592 li
156.421 102.373 li
cp
f
0 lc
0 lj
156.421 102.373 mo
153.181 95.9443 li
149.753 99.6592 li
156.421 102.373 li
cp
@
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (007x003.eps)%%CreationDate: 27/05/15 9:38 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6G?Zgodl;Zf!8dfV<"rb]0I+E(Eu"qE>6G)akLoTjo@Zo@LRIR=&n0\TSo^HLY=5DSWNNDReY0S'l)jYtX4Cs4Cpj;TS<P<K%WEN>#Zd#:`)MrQ^Vf>c+H->8BgU<b_:6J<RPr<ZKXQ\j_4_Ms<N8?(mhgW?+Xo:o$rDrC[MX>#fgKRDgs/renLXcq-Umeru2k047%,e'5m\$&32YcBui)U3T)h>OMMPHp^B!%9AD>JH/0mHF<A[GG1aWjW@EobjO;llfU>/USr(h:>g%[oP^Z8F*\>DtLOE&'S\arOh"U%UP9m`JB6a/m64;gK$s\]n'C8@NF'A(m5Nb$`sf)Ug[9Gj]3jcE$2nMX9%(']o'E+Mh.]peFj)(1dW7Gn'n<gPBh?fF>Y6`t"5-61%(6gLU_d(dCs(^'`Z^fgM=)7I]iD?6&5B$H1C9jpT86GYN4?<:Uf"79N7NYL*!lu]>3c*F59iRPPI\g3GTIiD7geUi+U>#REpQ<hW%c!P/]EmeDS+;#Sms/pPPpRm,u:;(et^;<i%.9920s,r+Kj:pENP=eS-OB0H2A0p2a`?8tib,XT'0>!jP(;L4n=]Hd]e-QcDEOYJc%BJ!Ge,+V8H]A'9p!]?7=76Y[+EYeDac2K)$,7aACobMBKd]h`)M[-6UiAmmqiY*bHX4fi*P8+H_/868:[ZG+.9%AB5)+b=;^eXjC%afW>TTP"o6VlK6#)";7on6%:tW2d^A<J@?N$;XZe4KVT@D=X!$5UjU$?\STX$j0*>7]!t@g,>2#D(&oKTK;QY9%c+eJoC,bV2@\i%<@l"V`?IDn(84Eu!`(<]_go3H'mO&aOEUuLKO-tUWKB;s2q`6e.3!Y$.;0BB67HR]CFON5/V6bH""f+#BK+rSGo,0;TC<4l"J:4$%n;1P-(;VB*)u]mQg&uO2DNaji'XS63ThM9a0I@m7SFDnbO`1Ujad]*fKR,sHToIP3PVX2^''(.!K(d#.?m64/XX;AM`8E;5K(^o*%'<[F@TmcD:^S#^;rpWK-#7,]D.;0fN&h+GF+abU/6]FbEJ9%MO9P/rA_K@7qpr<(q>#)"$apD@L?@nTeMj.WLTFA2fBdU1shBo?O%:SE4+$)NH,6i.-baLgpJAY=1&1t-8Q4+q[N#,9pILRG;!D$.q;V@[$@G/7]]peIb4>UT1W^&d=h,-5X7Fst=E-eQQ<j>m$+-mt<P%[$f"*n:k>Li.".E?#(hV,gsn??-?])Ecn!f2q*+Ts57`qLR=pM;J'0WjT#uL:;Ya<2]/ZU?</_q9AYnE$3,Xm`%0"&T;%DpmU,Mq%qD%d.r[%RWBjE(tpFl>TRcLsTQi+0@o%UHPh%orj.$,hE?h/,NMu7buP(/=1WC.ls?h1C*-GSBOjIbN2,Q8Zn#G4Dej>Zs)rhB*8%>#Ea!,n4k@/=E>d(&YgLWg&%]n5mJF1J#>+&GYRUYUJ9L^R]CKV4oJP.?RY)^^As*<-Xo3Q?6)ERJ_64a;+?U7)&aj=.k#X<@O=c%IM;bArg$4kA"`4$hZ,#dnTt@HX&M]K_3Lj8=%Y71L.^3td'h*h9cadoAQk:t':qS7!AdQTD;c*Rpo^"2!Yr+C0e6(Pctos""V`_R%?[rGG`APG<R;tSBOhW[6WXRHUP&8E?SPm0*dR5B-_EV2#[&`i&aZ*(g(MI"uYXFFMVLMVB=(?VfojF`i*]u#V^iT:OgSCX?=(Uqs%TE7`M;-DBUh1i6)[]Y^4n-8dq^Ti`&H7]rBX1><LGXD$>E5Qn8:p=1c$!(:]`f%&FM87kF'!0?b(8AKq%e:!@+ET@iN,+Y2'`s0j%'pI1FR,gF)2u,r.(AZ$f$i`)_N)]?as0`n_"DqRp@<P2LS$u)5j>l/@2j&8f96c67DM_E]-Z-_MTR>+]&DiNKH"jl1K[u?11J'9<%!ge.G(CP\@$Ha$-Hg>bG!R[mWIYRk1g<Y,$Jn8XuCDG\:nlkACI>)[ciFe9F7<a$2V.J"30Fq<04X^[9/Ktd#jd%E0ri`D5h(0aR%%.]`mJ[ZM/f.ZYLk%0Mu5ij?Gbb#PSjKV5s0.,FK#pseSe]lr\50eG_7!p$K9dY8.4r^sA^7jB`gCEb(5Rm76:]nU(Bsj=uFLbjh%rYE;h.Mh`5MX*dk?%<M,'arX,7K"P+S%*T#]"p'0F1"]KNHbjU(ZmlZNFN7a&$es;"k0Ahn!'ca'^.>^>J-ge)j?\LEL';gEUU-H%PiDn=j'+L%/jA-!0gEqC,P%]G<a>)q+alq9q9"SQ]gCFCHn,$Upn`lF5P)YN47TYi=2kkoH]8AZ6MrIA0$Zhj=trHWZUAnp4Wtku%@2J/NcY5H\ljhVSX<dDVUuh(fM,!c2K2*$)6s>;ffu-t`V25.$?lRI0L5eGi5N]DB?m'"d[qHkVHL[.r`%.9&963a8%G,P5-+"W6%P>?q&D`?&u:9uAA9V-n:4$=2A$-I-kXsYmDloEN^;TA6#[`Eg@gC^&UiHXeS2:Y[gX'(+MELL3BfNE^`5%d"P:aObYlf3ihZWI4B%?08OE/4+NT$,1:@52]X9BI173lNG[`,&a@9N(4!aWDC!krY&I,XMcM5o#=jok](r:?31<.NY@1Lh#<;_/U.j?]A%_/1>!pS2c.Ph%+ja76&N=H7F@-#M35fc&N(bJ21=9T,QggAmfF>/jcAs-pkesHZC>78XIo"8,9h"n:s/+Pk(MInB1]/NHAtFXn9_::/k:+*)0"Z*Q%2^38<A5aj>Q.hSD/."d&MFm\%MtN#/"V*49'be*3`^;;gfV3d/m?K@O)MJn4B"^HT+`UO,41uAXme/P6T>Ea&g`p.QM#_X(_d2Y@%St<oobZYS>/.OB;+3J!n>pW:&-O(EM5E$jn?0/'F/8'J[p5Mno_\lHo>#2MZfH"''lUR@5E9h&#c2&iEF\&$[27P3e=eQU.LA"dh%l_DCiM+ESi@SbWpplCD;GU^6[7[b5kb$1r9HlpP+4lR1n2[@NO8sLk[Dc;7u%FTiM\Q+:8D"=^\re@h9*h2=Vl*d)K&+[s?Nh;in%qnF.,AWM=*+14u17LQ*@'1_hSomG3c7?=mhmGH3,lb/jV0@\^Zp#JQNqM'kRO'hq:htic%49`7Pc@6f3HEPucA3pl.Ral:=8KOUm%nPAj;qX%2Z^"rX1?RO3@l`YW@h;Q^AOD:h^]WQE>dATj0eQ0)I`,GtQ6/sWjUl'EXic\`bOOh%W%Up9("W-].&5n%*'VhC;s"h49%XLDq-#<2H-&l)i^ps.c)_53XVlMgK@P8EV0dm5KJEj/IrL-k]c7i`uPL":7%0PI[;>/4?@U"fV!eUgBuf74qAS$<d1c"?"2>O?er%hY\kmH1'0MSdhGsIt,5ARuQ:6X%s_rUtY2phO=-/^O,qUG8N6r`d=I\6]-]5RnIVq])sSMan*hnViGcj5:a8)\V!_.7NRrkYtIaK%cIXC=@)9AQGI-.!jS)mGs0V9VjDn`/*dPNcDmTJ28`l)6ht:M<O[!c3G>M4O&Li!qOQ]$u(]&<@@#MJj$+=k*-#`cP5PEHj57$nR%Ub!f&PP:,9ZA-.RB*h\p]r<=K`9jZPP'L"[qMQdj9lfKVCue0q=\"@1WAo/t"Kg2V9teK\$NA.Oiag63K]*i(Ka.l(caSH`hu][p%8s[OCU0)s.s.WnSa9)i9:2+:/#=spTS7fU!38ms!%Cf:&rf)D#ao!c;1llC7P>4^)YpU'^XcMB)#BD`i%Wigr<*i>^[ue_Y(J_R7%?G28CRZ%#lqoNl\dBC8BRZ7=(UbG.GRjJKuHF8;#*qE!id*o=I'r/'ua1qSuDa/MJ74-N$r"#)qdbTL?hO2,CXOeB*hqS<1h9/jZ%X^+:TgP(0p[jcF0+5%Y]\Xs"I-V+u-"*P<V8upQ0JOAbjn)R!J;+pU$s&4+[_mR.sn:.k"DdR?Lq?Q7r4[naK#8qV"iVEIi<o'VU%?u)EY<VuIM/+fi$)M5j%S&9k'e3Y^kq.WkJ24_/N^Yd9O.^0$t/Z3=^ci:"'Iq\qQ[[hp's1:XjjpU!_Q)KO1_0<S"XWd'MT)a-n%!rf3C)cag$,i%7kJVa?d2#M94@Dship=X-1OL<Fj*oFgL7+Tt,]`.VUcn'W&W7QMNpSuU7JD^31(2W=aM%mihd:CPK[X-8<^V,*n%HR5==8$hd$.gFRZ6#kffbC@KH*n%s_^U8(.L27iP*)R)?gQB(1%OI!6Y79jLjaSAQpf7eQ6PFT_oicJ7>4#?%(]FrRND]^OC;CIq%i88?%0ps;q^%_Mus'n3"YM"0ts$ZU:)fjg7mCq-@B'XqXRli_R8YWOiS;-n?(01,#EIUKeL2;(CjF:<Jrq:-PIi>`oB69&J"1:ZS%s(*dV`"0<AZekKPN"3=.bKO+tr\&%%,CZk"YO+N2%M.jnIBpgT\q+\mpb-@8?j$BSI4a`Qra4O4:9M@"&FnQR"5h59>Xu3VIr/9!%[H&:&SWN$GU+',NRA?!nFi4ho[*,1'6e>=$\>24qdZ8::0d7746\'!OQKj]FZVADRl`Y'lgmKtXUD=B$+`iIbJ=X%dXo;J:H-nf#%ecU?tr(4NPJ/@]R`Si]EBIAKiO!E<E'e$>/EmbEYkLl&p4?-R-(1X[nV+.Z;XT!WMm=(0&VI^W:dq&Fl'8/rqq*r$5999Ps]2>k(%3>n6PC&XR#)N4chC5n+fACauN1ic>i#Zna@4k^/g<[>eiLNU:*]C1$Kg2+8+?eA'gIf!tpEg$6+?'rGjXS4n'jt@t0Mc3&nU/ah"%47edZ2W`ZlX5<6Zr%B@<?Ij0q:?%f"=(/T/gMAY,]W-1&L_TKG3^#im2+e=e1^GO1ceupS?"0T0@bSTqAtr@%pA3V=(NU0\!6ttm%Ta%plXkDn\?GIi5J!$^Y+DMchQe,QN4)Mq)G&)m!>\-'sE3\89(/]2@b1j[9V:fa1O5JiAFg#B[E1gS<0<8@;k1'4$?*"u<J"^V=%Y[=HUC?plT.*K'[&5d7(hFnA()4K]6*`06UKP/Mi"nNIQk+1e,1RfIkP]2O6X"'uT#1S],3s7s;FPEt_Q5QL&\1"8[\eWr'npgO3%#8U50%!7@[.g8l_8XE,[AZqTq(-[5K2JJ@K'6ODCCe)2A6siquNSZ$<D-W#B5jom"RMH83lpsBo9*j(\-qnsn'Gp-HpO3ZLSDmV0%?@sd:SbK2`HMC]HOMeiQF[`pE>5c4$7^j1"TD+WBqHLSNq@m.(CfP$k2G_-dGYPFO1S/-^Nf>>gN+#E5\i<+:`[1at`&`'VY/,8b%ah=XX.+7=k:/D>jg;)cAorVP6I5E/Vj-Fp^#HE='C0tPY1c:j?\9PZ$+=3@r8W%o1%Vp]HeZn]BksDWC`Dm;[Q]EnL909jHPV$.4%'B5a+;9nX5!1e&qDQR4a%,d<EUNU!hb]g,!]4cQ>pi!j&Wd;]i_aqP_"^A:&/>&F[&"qs:N?k_U$a2gB""ne66=2bH"AM2kLKlP@%osVK_=p'Q\X<ab9?kmCl0?#-SBdnMmQpqSKI-_Q`0%QW,4"SR!5/+dPYK_C,ep`+prV#N4Md,\W-OQ8kkNt@OilH<CZeiq0@cp@t%IK06l7X1MVLokeiA*8beA4O%<j`p[(T\@MCq;(Z&UoYE%\YLc,P,(6O#"Km?<O^j)c$Cd`hro4OHmi?t>O2!'AGM3_(1&RF?Z!4)%meE*hHCtfWm<TqG-3\m'D\5G'/Qg#hFr>4j"-;KWSQor<+Qk3#maQ\1$M:&H]X<B'JI4XB+'tVr65J3$j+YjkBLshZecSO=6'I@X%qN^Dn9:EGA5p85^<IbPkJ%4uF+Z+]\bAkhF>P&TSpo&u.CW\=pWqJdf+l;n^6<n2lD_UN!^E^_$>c[j$Fa*3U'RFVHa.a"O+M@\T%]budi^"(I%IUBcCS$tqjg$-5[?2#@Abk2<t0>#&7icAA?Bp./mfYtJj82Ea"I_-9*C_Ht5Srm`kX66IB;4OCB7VRYC(hElNrVIs)%_=:^rL+,'GlZ*s<JjkWVG,cX_[s8L(8>PBc42`GU%AAI:'Kr\:[JDuWf\GJ>?T\7o?]dMD^T/BY[u'<nE#n00I\Y6#]JshkY0H>\%"*rXRrJ;,f&@s#ldD'g>3LG,-<]dk,@[7D\()6)0\=7>XoBkU9RGQ\&/'L#817dR^hqTcA5?0i`IP]\&bC)jfZ25-X#?9haS;-YO%l-P:7n.m5Hl[6.Qs2-0IK?CU6&A_Bl&2q-\B+j_L:>cI4bPLX%],qelU6;\NNDO#eQ129e8mh_$4^qAFMK1GH?_ltOH_npP@0gZA%?K7dq`Q:lQS&9SC_\<+YIC@*T`IMFtM-#XC:^fYPqQ'Eir>g0f>4V@TA>tK5okoG86*IokYpB?G#Sh*ia_F/'Umkt@@BMhXXmi&[%B,"@mm>3Ag#qF)=9t1)W]uW*=GDV4,a@]*]haN6R(jbiN9j53YW<H?4`G!ds\JU]2=YS&H[mD"n,qtR0='0_X-&@duitsDb+Ddk*%DDpg*h!;+4XZ0P/&]/(0'i)UGfb;"[UO0<CP.r1sls"iK+#'K'p5B*2OH&8ZQ>JaR5_nhFmN<g[N%iK=8]R"q+d<L2*#)hHUe"QY%cM1BP.;4aX-#eMD#&o4.Y=8b>&Zr6E-#c"iZPbYBa5rDf,'Whp^R&>$A_^Ke7'K`:4?P%L_"=qA:`#*t]"L-YWp?RTHgOnUnDU`Q%p.0F9k%R(ZK&nK-;N]DTdo=^ENsQ3AGaZlfBXQYBa(1s!fBFDknQNuK`:.F:5<Fjn(Zdoe<cp*Cik5+hr=Jdc#3&3?'^*W3o"#]-%@L<P5N24ID*O'154MZ4J(e!>q\@ZP@V)g"L?sR$h?d-KKX4P"K?TcObDLD.Xpnh`*Vou+3i7.RW+0;C[(]CJa]=n0N1OZ]4/\Ofd%lcrF?EUD!F9P)_E[FA*'mOXJq/ZsT*VD:YcFt3CB5`]7.F/d.9jmuIFn>;FROq&3U^NM]"X4L:hbc0/lHA@<dd[.C^r3EJC=fQ&g%);fY=9.uR=H*'[rpSkOk>V@GPh<t-nCE_Fmg=tDlHgB8.l?08X^=07-h1n(kFB?#dW2p`bhW0BBfqPmQ1W)'ZEJu`WgXT3TX/Fe'%P-nhs(>j/qcmfE2j](raVPc2/Y@]95heGF*147QXm$X*icHi#L8],7H?II(d)G51O1tHP%_Ubi4mtc@d0-9`s)'r7uc'RZH!b?Hr%WqT[l4g9AOf=+\b/lQieT!b+[/&/PHY6_AgP\RP6,p)GGn##uL.3/J`!dTUPkhX3>D+[r;5d/:sQ,d.+O-`>XXYc16<3)Xk?eqAI%?b2:_rQB^`Mm(-'F\2,('M6&P?->NNh9kS2iQK!aeZ%6Yge>??=)%F',r[X[3ck"F.j]5pWg,'^`bIc8`q54tno">+Wnfj0Q&DbC%^If1(hGg>XS3Cg1T)#cog7E1("BIRmGG#r\Z1kR$n>>P<V&?)N!t:d4<muAE%_\gK#GepnZVE#6R@Efh<4ainS%)@,>d%_J;R"</%hIH<Ml4rW4B!B_FBDo.0OnZ!MC$FV*YYm:WIQiN;9r'r&,,lb"m4C!br$sobT<t*6K</FV]t*f?frrgl)HEhfB'-PegO<uCWSU5^%><;>WFK4n?cCB;5a*s:GQ,goPXqZ8h\#mYlqQ"a@%'$ZaD.d4Yr%$Th$?Plco@?hhojchWFEW;Folb'+@l,,pg=cY.[/BDn&LtIu%Pn)"a)(Jo/W-"ro`g3&aUMA&6\#fo0GL_49NG8!b<d>%PZm6YE4PHB!;(\Tth4NfR5M`(jhb)3rk1%1=pZq"B'N"&mP'$\nR6n=V%[WR(tIWU(+RJ3iUC9I4A=R#YE.J:DmV,.Q%G$DQ3n#Z@eHD%,g/"<STrfq[#V?/9]HJY7Yj*ompXiJl_`dZ%Ed_kbKo@)saUMlui%a'ZHM8oZGig-<&mXV+IpK-`\SRS3XF*rY>N+5<+H>NtbI'(X.qD=+4H(K1@"hHih9`qQ'CV:O&B<,2#EWJi<4rkXko?Hi(7^X)$u%Xn5W<G`3tjG>MS\Pq$k@o/gDS&#>PGjT8DM*U%4/s84.jZguuE"fcaJlZIopp?W^"[(im0Bk[osoGLQkeucS83l5^BGIa;s8oqL?%e/$mkm4PZP(Aj[q(KYdW$rZ>E]Y>^kWdeVBg<g;2<1R/EmYd@UJEO,M[\-gGgX^89hIcVrQh'u[rQk$MX`X@qk@*gY]Dch:]!m"Y%g$hBGqTe3h;g[2GmWj,*.Xte/4oL&dldtSSp&)o(Q=^6U7P^?:/>h[\5BYHHe?J"H7X+=Enigo=:>I2DJ^;T)h;sF-Vj=W-p(I;q%ZhcNA54rm=QnBenGAi%N+"XiYPi/ICa6tO-:GKnKl/SbPf:@H$Xe".9e]T"ZqEFX`HZ3=E2HKh(Vt/?CpZ_##H&H[dkP8+lO[Y[%%:Tr6Nq,Hk4LXPa^qfI?u0Bjj*-LgCerKGN%i7"k[Aa@k7.HT4V=(V=Zk\\i)dhP%8l(4WOhZQ,kCV?;]"ESB;27rai&GWV;3..h5%52B-qVW;-F'iN1JAi\ddI7Gcj/[.,dc`_Sb/mb(A2X&V!DUiNf3u9R)$O+<.fObq32HVs*pN5G5o9b#bL1]5^Ydh&:KG\=h^??'P%pn:jP=UuC=.K(,$q%cn%HhK$0q>RpTNuYqbWGLh##Tq[>e_)_iNRP]dnM%>alIcsES)#N)DXCtkp',Q+mig8[<A<sVD_fs26Sm#V%nqU7]%LjY$I_dD,i=;mXIFY<83o=%dbokn%<JKJXP2NG;8f(QoO4/VONTo]N:@k(GpYBSX]=eTR'Ql]kjM4Bab59Ss?_u7YTYl0K%CF`@fj"&[*B=LR9UTJU?db='SZs.6_qQkXjp%tbE_<X<AhtO5#mA<]oju0GA`83AjY>Q9uj0=6c<n5)q(csh`<-nEYgsW/o:D<SQ%Z)r9;&6LB?*BsEP>tsGY.`GmP>j]@4+G4Z%&m-U$,8Yr*lSbdbJ"tF^_,g*/p)RJ&P^E9*DFKjIVLP2[2oiRd#q2d&;SAk)@LKU>%Ts2V_8@aKP1B/rOp)s*:q<_YSK%P+X8U[oA@_OS1S97'I47fif3n24A<J[X?S]ki(Rm-rWlh8WJ+&'S`]mX6SDQ?rqRT29*is8a?%Vs-_FYY?X`!ApjmV$8eoX[@sO1M,5'D<4"JV6oi6-B9Y@Ph30=]EGWYo?D^:gL):6StM^^0UV`C@,)n[^Ls;/'T\Ah3>Qp#0CA#g%2#[K?]T+3#bMMn:.?UJq4o`eNeNM,+EuWQ14(I<=W5MA2*e1Zm?)IM**'Pe8>+<_bH!:Pq!3$h&_]P$34%H'tBF.Eqm99j4*sB<E%Jb"GUGWZ:ar7W2$NFWen"jt:313m<o:F-?N*+`J[Er,a>2/E*J-_0X^pmajJdG9VE,MG=jQEkXGmu>C>dIh$Tf0fF`7*ee7'WjEr%1s-?@?(QTQ*ug%EW]Q-0:B9jTaprb#W6(@3jFd#`c1DK\mHp'MQ+YlF[n8cLkM*@JO&\6h(oD$4`mr%:328blg\\<BpK7JFV8YEr%Wh8?aWUpF[]o6a;C6.0n(^f,=1cRrQHC1&C/0aP['Hj8h8$:.]m6kYr!*c*3aquRh1&9/hiYp8d8!EIrO?\e;%k;35-6=qimM6#=%r+a3slL9blY]a*=](lf#jKtGjPdBk!:YS3;)[6uYH,f[NI\8ro38jsre"+Due;Ys5399U]4L4!GLFA0<e<^*B04!nuY<BWi,#(PQ%2l1j#1-Z>(Kns8Z:aEI9^cjB5%Wjo63rNX_!X"%iLsbH;"o4m+k.Vqk0mVk",i*=qaGq+RH9.qUd8Omdo[DZ7.7$qbm<D!Sl>Q"m%OE>k>W<j](T=Z46"c%2[k[MZ[T(0bs"+`mcbV.&@'ct^6q4Y&q*!pMTI#k$2>`T<7c<HL\/>5-KIV]F'\)Dt,iA_Sbf+#d*kO-8J%`d>')37\[",+.2;JSTbkl\,%>CmaF2B:,CN=b%UK](o%=*SC-kAUe3)@TL$^o.q%iTM/hoZUJahf7uF,o):p[meBYC81RoR;mTtS%B>*JMbCMk1N@Fcm_jtJ=&4$TOJk1__`![n;`![j=EHrbJQGX;$U5PRUZhKCe(B]!.NuaV!^A"R`3u7E,)j3WaGEVjI`Mbom??=nD%2Ysii)IEuF+n8Su[MfSD%Rkth-8ddG!Tl[lWedt9`IZ&@j5FC/VPD0.YoUVi592K)_Wb14"5"X6!I3?HN;$0WkD!W\5KeaO_7+pa%BPgQss(<,`"Ku=B09M9Z@&YfG++)c4k;*=_jE/=q[/X'q(paDTgir01(:/B^4AZp"-4A$19jF6o^[e+Ums.X_GE=/q/d9I\+K_1Q%G:m=MSW\-I/4=en%k><f`:uK7L.%Dn%;OVP3)(WhIh-][*(GsD_ko@NjLnp*>?8_W13.sKPDo.l7iAQtS0m\6oVs.[qg@kK_XO[_%/O$jM,\*S2qE1n\NT^7M9AkgBK0,SR&7uj!:jV`"llY8?BqtuR-53.Al$YLT%^ME<]N[QoLK!5VK5BC"W$>8#0$Uq?NJQd&M7r8&%42R,KQ3hA2+s#,_m10ViLX:*DP<8ZuSo:D/V8Ou>E3:kD!Gl#<p#-pAYR?mTk1Mgj5>j%jGiNmfTpcrSQA*;X3I^],ZjOW)Se9kY%G#q)]jPnC.ZOrgZX)H:s99>qAFuUC1a<ie%$E+/'DciV?7MB9o_P=*imW9eb^eQPc`a^Rf0Tthk(_Mgi"o;XN&Sq`E0ifc//82[\%FO(bZ9O&YJN%SSA<'WK1G$^+dMg1.qT]OO#d?sN37D*bcq!Q.G>RAK9glQ<!JZScJ?\!Eh!+lEdF,,(KhH+=)U\2>:'+oY:>`XUV%ZhY7XQfr,Nk&MH&k*^cja<p&s/mXMrHDC]8dW%ERW9kh?9u*N4l&/JMUZ)USBSlM/`a=)3GXBu6Z<QqG3_nP`E^YJ(7aQB#R9LBb%Q4Ekg'Y;\Mm6X2cSq4FlJ;FZ<,O`0p7IXDS#U2'\`r/9U,-ph#E6fBUaW_`U5?t&)Np7Kf[o:+YY;$9A2ch5aV+%qFgcX>[7WAcc%70r8U)9(S(KPlA1?jYPdK(06ZWCNXoH2]F<Kf:h6pEC!7aR\(M(=jG!p+:T;6NgU#\"#kahQT%`k.=&iW"Iq3ojm'/JkGA;"*H.i%Dg3:HBUq\LWQ<!'nF?I-^I(mlUrVp5!DdrI(p=anG[e\e@D*Mt1Nn-V=T&"^B=pH6Dtrf8AqgD9+dokJm1#Zm=,I#:bU,T:942\J%4<JVdQFdUD^\)i<g2f2@,WmRZ@KG>?DZ"<T*$`M5m[Kmo>p>V#lb83eh2uTEE\*N57h757,]eE8*jeQl+Ke$.]ZS:DM!1759N4]F%n2Du)>Cp-q`SAm,a&L7dP<@>;:"d+Wr<D^2NO*\#Uap[)!(M?'Ql"V11:c5LJ1Q$>-I1<STLu$1R?d`'#q0dJB?$B9%U'e_Abd;n%dO1spa2k``Rr8IiLddKd=VDltj!uih[m+*K%pQam$chs\^0L+O[F@6c-ASNN("=VPS1DY)Tl\0:RmDg*$(*sf?$HQZ,!D>6\q*J-%$p*B"a3UFec_,o,_+E_7&R,XcTVE`iZ#f-G1[&M\i7L&3^6L_sFFMnpUZBdUB@*oi43#O=$dYJeF5P!\TaT2>"$\]#*'19]')+cj%Y?)4+6T<Y_n_92r$qX8Bd)fN=C';eBfn/gGTU,)l/cnln,_bWX9$kp=<lS+8(V8i[G`'VTP$%:p^QEmNMLP"eDI:``.ZDFrcP4jd%p3+<L7!'@(b(?:j55WRT?K]4)_=/?bUuD9O?VO"^r:XQEa"K1??tF&Np2TCOK?8#jbZ,5'UIiUT<^oPe3[H4ijsl=g^n`uF,!'9F%lWCO2QG*0qLS"1V,OoS7mUhRMXWW1Y`nm-?(t6LdiO=F6jGMeH9okk3k-G_AZt-XS[XnYE,\B-u9N=+KC&*jXIgF$sD[#*S+c.%G%UN0as<m39m8)-Q&+qLj0]IH-CH61B[="D0!Hi:qZWqpV+A2B*1-(.f3%_Z##i=fj+qE\V<`2o'.lkgCKCtb!DaQm26a"pGAhS,LV%3Xe#?0.?1Eaoh6GJHZ6`,NSCn7eK;>jRKp<kJ'[uP?,N!Bi?1%i+!`s+cu=V*CS=&QX^a\TdaF]r"-IGC>7_VVGB/g>CKk%"u@sA%*!09m(o*&9l&CHL.Rb\C/oal*O@9U8i]#;V?C_):_UCo.jB0o/#SA'JAC#)Jgb+FfSTY(@BB$q:/2mTAI:F2-D]^'m/a&Wl&V8qW%.Y<Bkj[k2f(I-[:p5SN7Cp<Z=,>RV%STWs$p&\)Z\VC1g*Y7kI'7MnJ0BjVmjh*Sud1Ubkif888C`cR1i_D63n^DC^(Gr9'Ak,g8%XP]J*:X"k<'PZaICd?'BragJSn<kZEWmi,&Ql2FYj5G?P-:ajRKr;rt?H5'IfIs/)f+75oLPj,qTe-q`pclA3Mt`.MipeJ[oSt<G%*n[(nR:H'7W.6rXFE4GB&`lBC&q_HIkAXN-g/'R\Tc&%-K_Q7LpDQMc3$XV+S<<X($_3=cd'8*=RCs2FA4-qQn'=[>7RiqOcHX@s%]8/0dZT!^]6jUd0"B#H5:VOk5:C5-*H:B4n-OjqZ)&ZPY[XYYU0IA&*B-?A#CpOKpl%p`'F%Zi*OZdug)]*oo%$pX_nkd5UAc<q^%FlRL^H;%o6m/'NALc\UGN`o7,'.\4TRF2E+O\sSnkJqHY%X0qf+$i7;I4TVda_aiu3j3GfF2L'9Yj5nWD6lN;8ql`bMm[mC(c+qP%-pL>X&"Ni_9Wmu)e2uX?;&r@8B_:<%M"u#-T@Z"o5$[#LdR<]cTU'S];5<aA@cggPR1JKA=U5mb,A3&?jMMFpOZHr8S:A!*V"<Q>%^#^O1iLHiboMgeeq/EUb+W2dPc:9L:l3ig$LD*HsB=UB>0C-tI[dc0>TmM^03975C#>J>&Z>oV,\t8r%*G\G]<5t9ia6g\XX0=:N%34M7`Uhk.3-Tc4u>kDiF#g!a@`\W`N0%e>Y3,Tf&/5h;E+Ls+L6>Y9pcOb@RG`7a&@hF<KBnf]?,A?TMWlSGB&_C]EAeY:!Up_W-%G-DR=(QAO+j,=`uU@I52:'2irJu+8kX>o?pYQUFkm'Ad2mf%t"WSo&R@ec)$6gagF*!tt]p>?KPb[e#3F'+NM-4Hi$o#9VUV1SNX%fF/2[@m_=i*0u^jSU1!(,97pP[6"!G4(0gJ7dBYW1/]3C-BXDt==0/m$Me.pa@HIsj(G.h(2lZWcnWnpq-2GQj(i)@!dMo0D+:6;%0):mn:&)A%r8"gAUr)s#@ZsTA$^Ah&;rQMQi8Y7$7nn^/kLcS/iF7fta%V1[`$T5h<4IK"&L40iKa3?;DY7l!ilZ3f_A>?S,ePWP%_roSG%Z<G"2MlO72&edrl_L\V4b:I!bm<!)duuo7KHl5(f92jE(N9^cSFb:.l$?o+p[HlE>Jc6S3KV^sD?nJ`*d/&D56LOLmYo?c%mieA[^_^Oa++J/eYH#pFl.U'd@aAjS<A)iub+&5+>d8=S@G^#0bY*0AmUfnJ\C`<Ljkbm6Xo(@f6?(diSPcu_SV*b[:1?+^8D`$7%l9>"*2X>J\7%@*gPMK9rNXtsMB<G/2F!85cC'Q&sh1T=koqj4H4Du@6A@IK!i!_]W<4a&Jkt>]Eh=d#V<U.9DCjE;K<9d2$K<(l?%>7LB20QJ8mHs!\DS-uE?EHUA).)X>tT)LHn*s+7bDXYL6cG%1Om+N6lI[.59p^ZS][@dr?H<;fYktQ,njeM]iDCjp]n4ZJ\Gn-kH%F?l+Q\^Kd52lc&a5190Y\Io:Fp2CRL%Vh^5N[LVJm5badT2:aiDWS@lm7tRE;VU8UgVuALJ$Cl8:&\\3*PQ/2&Nc%#efjJ:X@_&-%<^5P2`?n/=c963oe^-7sq*i&oYFOZJEdf#Q=\"K3F?M7K!k1]1[i_I]j2MZS^^RpND8]*.r(phP'OmG,ocWh2&Vsj">Ne^Z`*EIR%,]Wd3C"U[p+XD>FNlSAjm<Z].7.+Yg4p,7LflVZWH<1d"c_g<WV&Qp#AaF4o^BlQ:(['kbl25Sd@\#VA<&S%OHK?EYl%6S0A@(O?%R^J0H:$4J1nBp;OZg!,cJ`bC;[QfUb3kno\57]PV2P&a83AL&?3kno\BC0hNflT&)'QWHjDVN9Ee+r+R\aqM=b,4co/tTJBBJuF]%Wp$7bl24(EE:cgNS'FfY^*ak\PtgG.9,AWuNKR$!LFP#(ZKQ,9Qn,gZB%)$&J]:KCA)T0$O;s1@9c'F3j(-X7jjK:A[n12\q;p'#%hip&p2OtqA_46X-ZfsHX33+>k3?t;3e+pu.$1EFU@qX9djjHTQ.lp!TSY(R%cKH<(RuVD>bGC+UXpei2bk.C_Q1n.^l22I\4k"kY%Cc[]SO9&`[7]JEJoN?24ZQ&Z&VMJ*tDU^P/nT(lG`u]Rl;9$nf5O,sDs6*q?pXR6s2^.b+]!sb9rP^d:+7,qR.eU[]Mnp'L6EY>B%',60IM8fC4Y,[DLhDofaD/c@k"J6k_!7**,+[cKPV&54<Ya=kT:Ht0pNefUS]q/l:>b/,]Spl0.s&#;#Y[O]F$hh\h'0@'/HdBm?%OnU)T??6p0mUE85mMpQ[]BCkjRSqKiGJifD*qbs`cRAno(YoNZmH/K7?1^i)!S\<C]&o%GQ(]#MGo)O9YITR</mN%=m$TkVj&/X1%rQE8$&GK[F(+!Doh4=Lap>JqE7ZCWqN1EKU\FXZq^",0*DR?2`:DRShljVNp^F^GCB;NH#FNa9";2-T;+q(t,'lbU%&korc,-5;'%F5Dj"3&EL?UM[+*T'__[n+^J4"L3d=i'Zjc6HEX'7?4bp$6b>6UH<jQ3VIh6aa>*%N_)a]]QhHAWPqtQQP]!?A)[gO6oEIWM3GG_%P22<]dDXa[n"pD=Do-d8;PsQt.\HL]-bhE3`X/@tN\_>eRL%]ZG7g%(r'8[XKQ(S,1(/^ZHH=&ErG2IPp<s.";nV97qja\u4-]gi%3sa/i(ub`eo]RR?,&u*AISTf)?KPbQ7#(1mL&fQ0\)maX8XpDYY*05$in`GTd<J&8*9L/1_0Ze^;]1<bA6>YU(X;Ga11oa\iGS;c%b$f1tUU:5oiC%Rn,AS(2GMEX;L;>h(%@R#O@Qoq#9mPcgiP5nHA)*;-`)o(mVS$:m*:ehGEr/Z%8`:9&]\*r!2r$jh\quhWHQBi6%.BXb>p_bI')9@5q=CU[8O7sE?&T;$7I7nm2k2YD'o$S,9h"Z6!0V4(T<$ErdZ%c&u>7PJP)*,I&>aH887re>%p>u,:J/KucHS^k6%p@ZB[_jd?_R!`Q*`/Lpu^gJp@&sIBhiUVBcojC-=2ZYDsCsE%$iZ;qHaPp<5n@YU=YuZgYj'muuDrRWKKdAH:G6@_F>g%(HXuF6G%1#^pQi6]j6\3ui:2.U)3F<=jE2uZ!&`_*c8D/qY>[t-%f:-9:Va7XWNUT&jk\[n?UFcYmd]F!]0(3B;e"e7u,!*N-YlbGE;5`HU'%C%)NT+DLu04jk2j&As&*D=M*;$iM4.D.i71oHb<_npAubl2'7^Bk-]2@]fU7BV9:u-R?1ik+P[Ok16G&UuT9)]0+-dG9IFaB]G&T%<60j\9jc_Jn5E?H4`&<\qcci[*1*!+S;,YoI9Dj</!VU46;Zg:0g0$<AKLZpX-g-a&=d]!<U$HuQ#9CT?$\!>StFiV[elNj#eGdC%'9\f-U'Kl!p#aKO0"9G9ojg'pju;^t!NBe$cl;/JhTS3s6e,W7rp!'?V8dU\4"@oHjhj6:<4Y5&#km8kkjEQh/tc*X7nBcS<dNo-%PjH#$oQU<b\C,EnZ6Dn`#+fFtD_qXhG@<)l.7Z?U=Ag_C0ec3Q$d45@jUfIug\nG49qk\GC>N5(c>nn?f3&M"5&hs&`S<G0R&Xf;%eY#gqD3H\l0j>#]D&Scbn]CbR0n3oYX]<1_'n,haE@8669l9/)^R*_?L)HB*NOQ=<2bOMSop@fa,PZ@%YlQG*<a(Ha<H5@n,5,]i%d3j[+?h0*,di4Qp(NYoY)d.h*26]klG`m"]kA5LDI9L&)q9K\7?n^o/?!<I2T:7/im]-2h^*("fo%8$-FS(H0n&AH`N6!LWoZfh]%rH,XcYnb8sp`&."-8<.2<-I="Olsc>3\W12I]PYg-0qHaSllOdK.'d?AgbSA[##WY)0OHgVobd&KAnk[7_B,1oFAKi*!9K7i#'".%)1F>#BV$:YmR#p7TdBi@Q,.bF@8@pWk>\g\JQ!B!XD[[tV6L]UDSf./M`r@P8-Os0gO,j`[o9-3*LYe+2j;?Y\_2RSc8c0UD@8ND%2+BDT&/Di\5=Qh>5<F`^qDC(&<).F-&[1baS-g*]knQM'h(fXu/Gri78@mT8<'W?dZgjuR**BBa$X$F]cS->s=LfE3@hC5X6T+F"%HO/]b5e:pm@!8Ifosk!4KIjpK3Il]]%\3b_8:uC%TFd(nSHTk9nf2R33E?o'g`4,N)q]d>%!A>:mr#)V=b(L5!<(7.NLL(gQ_/_T%Ac+*p\2f'o`lK<+J8oW1,?E^=ZN)oj21r%%?HPe3-jke9s1kIYOd[8P[2&..^8R5D-?CUXnM%TTn>1N(qi^rP9DJYW8"T4HI)F1F%NIE=KpFN_%k#+C:(]26*jn"Iript1sM4H@Yd:YfUGH]nCB1%Z)Y935-#&j/Rq.qJ*]meq0(F-5WA)HSgg9g\GpF5K(k%ptup\I=M%%5j8prPELG)^<%;N*HX\SA^QXp%&RDh-9h?\!Tlte$.`3I\UFo%DQ+%30S-fHi:g"oc*f-8p[\uGk75@n+@(7]#1pLi*O1frVH&-%W(,\1(H9*L]R0S[HPjhkn^Z\4me(W7p\[(`Y]suOHi:f-)3gCETlbL)X'^g2r`JpkL%fb1G<naTlPKRb^9Mb9")miOkruhT]0-,j%pr9R((Q7Uk6W^@D\CWCf>>F0a^[Uk01'9c?]meq0$M^*LUbV<1)doL]X'_f1\<WM]Hi:g"p%-KH)ZF'Xn8L'2.r@'+S[>Sj=Pe]1%XaWXlI_`XGiF.9*I=*9plfWmH)^YIAn+@(/&of"#m!J]JDtOK@iu9W>TcSBX+801X\CWD3<kh%K(c)T7f5Ja3[#&?so=+S8oj^kn%qMc;Na1^(Xc@(*#hs2)-X5@mjnVq9IhY[(;^"6&ui]ZGM5;QmGHi<jhdtTn\-e>t[i<*hBY4VqcoaAOb04OPl58cZW<^6$7ij%qE%)sYqMOmhu7Ua(3:ZUV]jDj]4Zd/3UX:PPdVqMi,MMV[S70V(oseBja9A)HSgkNqj2n+@'\f+RQ5)Z<u,^[s7)XQ@ohNHD@2pop=U%*$5,d^[P[Df.';(f?]Lf0m>qoEN``nETNS^qSh/O3;1%7"+d.bX.N>6R.pG;K(Zh-O#q3-XF'o_'4MVPKADphqLu-*E#]h_?9aQ)%n)WQN0oY:%^[T3rLspoahs2)-Wuj@2BDd,T(eO]5Z"-RVpp3lh5+TSs@-9dqGVA(s@_0;P3H1]:L'=bhZAnU2pE]S\/pd/HnALm8%>$pT75*q"?[&SDV(OO93?,fG2j1=1Tq+)?\*q[$LV>$BEh9'&=nc!2kb27T7U^6$[V.L4hGB;2[/!YUrmq?J1F0C0TepOi#0,Nc;%^,'h75?lR]a&-:AkBG*?4]H2HqY%3TA$,ZpB+L&QcLda4gNulFBlDR2jX.I/l_a<,D=(p#m-A\eG(++0IpUWcoUi2[qYSKZ+et>%%9O41U-dlAFc./;,I:L"ao5+E%]:1D4.!9sF0fPlQD]@s8qq^)Pn)s>VepaPNA's;[cLoA=o;bi.nS'eUI/I5$Y,ZQ4;IsWn9<,Y>%m7H'Plrggp@aB7Fehsb"hXm$%g='Et:RkD"MoE+%dWJ;JYbtUWgRil&pX"Z<k3Qg^<F6o]FQMrKfe0q.G/-hDG9"0/I?M>uEdFF`%H*HJP/BeURh#;-!X3RM->P^?eSZAAV?eo"hca:9/,aVY&qtQ_"el"BH-/E(QTrHpc7lu>$C54C2PF*h!/hYT#9YH0g-Z(SGms*%]%2=74'cE,IiAC=P"pKJiNk/W=$,@14!h,W`!q"i4oj7_/cEE'#6D<C_rH^jh;D5C];J";h-2q9:o[at:uoBPH]OY5u;WE4c9lA)&Z%(MM+;MdIeV1Yt<4XrO7K\5e7Op-GmdIsq:.=MDB"JT%Kt-d<VVm:OJ5IU0_UifTFhn'AmXK]bN<,NnaT*;_)/j1/[<'=3CARL;+D%(HJ#A%f3`%`BR3QG2G_QM`LK7-!r)OLDE4g,;#4el/0Y]cL.j*Sbme0U`#m')?,cSY<!10q$.._DpEt]rkXe$G95i@#G'iZ=,Y9c%g>;[Wr.:[I*d0RDapK5%q$/!Fc$>DgpD_7:1Rf#!#rD.t;FSS'rfKm/#l3j\"k\B.<:/GZ7PuhlH))sPoU)H`4P="L])TB-h9j>1%%Mur#iR,t-8U9[9b35T)5Aq6VMWTN%EIm`sl;fYr\I950m4O\*Whh,Icq85;F1<!.b>PI-qGZOiph<]f\!kmT`Jle,:M.@]UdSi0%4e9/s>`I+%jbH>fE0JZlg.TOVCL""o(CQS9.kek;F2(Y`.($.N2mARLqh:rjF67pYah6FdQs;7C=2e%,gtBOqJ:@Ok+R@ZG'e+.j%)o9gU$,Ar"L4$$s>qP#RM#HKEjP/7V\c^d5Xn)8!\r4>&1\Q#7+o'EXa:bpGW9*=X"g:kZ16S:fLE@\pKmE6k3`B:Y,5J5g%Q1Gg%K$+Vsi'V"OEi2!9GuZdU/$L,a`<%&9mZpK@lK[a,7r.OuZ<GiY$mb4Xhji,7/GYYJQ3WY,<F.3QpN`DCoWE`!SAV[PH]&$LdG=h!%0arbAMe,SC99!rc^!eOGVgB5LWuF!$@K/fcp4Nf_HnamVQB!a?_HSWW*k1=Uf3=#W>FB(>N[?H'[`VM9_TuG4Y8a&XVTWM8Tjo/)%oVpl^q-#$Z[WV1pN:1O3QZ#QgbS'/5o=83'mH_g4*YN@Z\@Gn^Z`FG*AT2ZGio2<_>[Bh$im0YF^oSd2#P?$$"L&l+j^>u#%LYte%I`fM)_G8so@$YbDP'6?GQ(g&\1s6s,cbl@++#tjZ?6#ku]\H]f9?n=%*D5o!-?^(WRQ<g]C4/#ol*(!"m<pt%8T:;"BlCC2TgHf*%UU<lc35fF<f+qKcNY\mI60;Cu%%)u5=sDL8GEsEM4@1.PeP7;oI/,8AWFO[Hj)?5c:]610@$.);8+P[a3$a<F^^(Ef/lqg<.W]]E%V\\01S+*\JasrZ$nh[Uu[%,9F4mf,4noJHC`RCehG^>rb.]D\&;+kI2Dg#$HDE"'-VI&CM/Zr>)VW/KRa4;$"j/(oBPTMA>::Re8%H]9r,eX,jYB'UiEZ?\<OG$DIYq(lC3]f5WlkJ-UeaCm%`8(iCIO=gL#DJ-Y`$)H8lPnk=(fe0;nk%D$6e%MkGB6U3\`uh>eKo;*P%;gL[qS`.YjQ[5/P8[WZ@"<:XXS&V.S;L1F]&-k48CHa>`cZZ1PeRIbX2>ljpdp1BILGZNk72X?.mt_L]#aU,+aI*8)=GOd0f\-t3%:s.!aP12"i[Z4-A*u!m28_7=(?o>+__&fUg-5Tpro(K`#\ao7c>frVNFGoU'Xk+C`G?M'a\uCi7bPt-S>JGPl-kFO,O[EDNHjBsn%mX<Q:1+LW*ea90!SmFT?gKZA_)d?\@o;C]@PD6aG;ofbI]AJTSV::a=k\*R=23?i]lP$=hb@s%ln$+,Yb&-58KDE3cHqFStlbBbT%cd7$;L*KD6VWgFbj!u%^bp7bej"u-nAUTm5S#\bHK:+1d:cQ[Y0$I%nVQrFW")t"?0P'$1&!jfb4O6sZbU2nf$X;<6P-sqH8>e5&%-??8kdg(,%K&R_7e;Q)U+4Ae)VN.GobLjjT1KS]ErN#n)h9'g=,#s(HN^%"mqoBg*W53!@2Kit6BS5>'(DI<rMmn/W>fjiQ00Qi6%@U()RZl(m1Wu5pjprM#%f@H%DNU,/*3->oa%GcpQhhU6ZJ+>nK.)"7mc,GY8hYA"Xe\a3[7BfnE"@_(6)mSP@2@oFh^6UXRNhLnd%4C/uHYE6Sj4)sBmk30qnI^-DJP8#iq]0.WS447a"mI[>Tg/ul!$JG.D*#e#5+47mkj_48aU9dbc5/&*(c.Ak]dVng>GVe7EcYU97%.H_Fm>$nJc1M=,Tj50FRb4!As2Nck=C#(:NDI[,01I&kho?-*'Z#Y)4Jt6A+#IDmmnm^YIZZ'o,h-I#7h(R:Se>N,KF*:B_<p+Mb%]@ta^4\^iu6+["sKEsk0,@c"#BQ`+!B4as[nac_n5g1lF4lB]Loe02$7.5r'=Z/UCf1IKY>J3LGnoOh.hH\b23f=fli(Cs2+u4I:%UrNrbA,(,X=!:W%4\F$pU8R`cETchqr/StfanB1277oXo^2:OJ;-P@[5D7XY8.Rp[(uE%,P9Y'H]m2sA8g9(`RI>b_"WtU*^]&p"%i)G1jp)H=A*SmdS6U(73Trjl24#NB0_FGbo*0.X["QRXa%s.R:jNpAeLTu\"<jtmq0n"_)Y-'DM=&BL6I=OAMo7P;8Iq-6tUL3.[%GB7neIS,meflh)?1gMo5J#%RNmf9"44q;eliMsrS`pI-QX#Z;#VE;cVf%40mTp.@rHJr/1Vdo\_m9cT62R3iOP1;oV(O;CnN+XnX%+>7I"P;1.X-dkYi-*%n=1GEY</,M-!LXPnig)'<0l47blmU'EpHCPNRYD`nC^CII,M=^qK_#eDLEH6GpO(;LPoMF[-@WMYLfGH[3%fA$oXo/!R)r7DSC255)Eka7ufNG)R-s4Ap<In\XHMI4Snc4lYo4%_*]c#9HpRp%,'IBMtRcad$Ko?SZ*i#TYFaU1`0*N(YGmhRIQ%PbB(s-+1*mhn##$PFVJjU,k,WSa^I-?Z;3":O8UAe/=F*`Kfq<I]NdY?9.:AFi6$*7-5rr)NLU83YscD5n&]Z7[f2SWqsdsfTE*1%q075Hq6?VM*_,-TZ2E[K'*C_-iBrHOE":H3piPFQ5DDjHIV6%`Yu[c,\_,8Hn;sGT:]6`5@hlb@$J>Y'D<H!3`CB,V'=X0FpB3+O%2N2Da_8<0^ec#ha<dCk)07K@Nol/eXZT4DF_gD1Nn*Bk/flPg/Z:q`e%NT"pS1Qi;/h[/d`>g2_DjBK"qR2P5o5WP2BKU,Vqt[M2%'e7O:c%Sc`=oB#O](%_4B<flXXZ`t\<7RV2T6kd#2#)h/O2[.R_u,^Mk@R9a6,@'96iZ_<$6G*Gm]uXY"j^4pr`R'IZ&c932iQ[#%g]&W)O2VTU8H)K&A$No[r58_6"8i);U1aLj]*FqoTQ9bo_k(`5=q7\=)*sPK%fb7L]ccakf*>)eo^5C`4/['?\%$TfY-Ge;D3h@4%pS=kef5=Ba'JEcMrY@9uSc1?m%iL7kZkp^MlcBYRK?i=&HX$q4/@BZum>OdnKfa_Hkk176%\D5*'e]o:pYJ>Y:/K;*,fCA/q2Ob9%XZXoYRI;^@dLPF$mACI$oDi#?KiW[=..h:i&N9X"Rm:`k"!hP9^>6l@`+NNMHD-5H!^4>GmnVU)m61h26R"Tf9m>^r9Xs>Bg%7o.%nd#MlJd8dEAOl?p>]*I,I$nfKmr$t<F&r)ss#P5p+BPJJD:mMpHDOl9EU5UfQ)4g;[GLj5ZR^F*P<J;2j745JA#6OM'/ijN$0g!i%$Y+dSGF8H\HuUP-i[]$T$VJ*RLBS2@$W&E*^\>bY'0Ol?AHS@YZ9[5.SY)f2W,<R_/6M=#]:ioG.:+9^9RqcPH;sXJ1A_OhFrk^'%IkEm15jUqPkD>a]7[2Ofrh<(_IUugrhMr,!oO*^S=$j=cEQ[+Zob\VOVi(gL$j:f[aeKt[#n;O(MZ@,P+kd$\93dC*1l1P<iG%6$%P3."S*2sh:'P\_r`Z0oe%.H<g&SWAZInlQ>^[gD5<Oc'RN^]\0kOgUG\jL=]*j6eMH8uTF?7SP;0_;q`ngNL4`&uUC`j&nc4:PU2%Y#YabF(>$H"k"bH(=HM'S6h5Mf^l7HU:-#8_UZd?4tt/&[Qf;Zd7\2OFT1R\)V5VFAR+>\.Ml;!Xga@_E\V\fUfEg"Se#oo'LdP4%`RXPgY@F>1HmZ#ZF*2:1"fGiT21sMc&XsB.A%jc2*V3/@UIS)(Po`[L%8-(\7'PV>HsD^PQP0b0<lUuPgESAin9s7Pn63pj_P]m6%OiE"-,DS?5O5&Z?jFpHXA3AqQs/G2Gd*0%6Oc>)38M8<tT;bn;IV(#j-Z,.SG2A@f+!9fnE(RD6+;"q:FV9i-pa7'81/G[`WC(:X%%c!P(CODcOJJ%@r,5o&7%oM<2')d*K;&&JcbC,],Zn"-c3KJR%fXdJj+(4qRG*G*m>N?iFR:GR%-2.G4n[?0$G9<b>.j"rg^lrV'%jt4'o(0i96]Bs'nHbe1E]pf+H?9mr;!GAcjScAN).7\>"bbDbVE<a=9;j%?B7cHDtl1JNuAfXXQAGl-Z@kL[dAe3WA^ZfTL%0g1;%Gs%97^MW=h^eSJ;`p"d=$ho^b:?/]T\-SCV*CbEL)T^igb@4I,)k/A'UqkYa1\\.N3-fj8..-K#cJ<k-@cB]UR!U1,QBKq#XE&AS%UZ4?t=ECFodebCJp$Kd]l_AFu44>V8eP766m6X9'k%%aIO2"J[/Fi@(AP.?DEK)MdQqe.[2:4[cFBX?[g3'"K,@;\NYE'Rr-9LCP%kgqf9Wt!rckF4q;PZPR.o^e)PI"&*rqsX),Xm]#*^2Z`[E*J0_5C06u\SoV`l"c"l_q-!d8^'$djd>1U\t$/a:R`l_e]]5H*U..,%*d(*ojF33!\AtPMl]4'8;KXm=$uC>[+1KiUb^PeID[Kk>n3[;Fk!RC-jlPd9Qq3PZX\>Qh5.n1+W?T)\hr:QR#Z(0.C!pMQ3C=cb%F_VEl15i4>nit3WEmP5fk+N#Uo:5Fp&A[Yl4E6P`#a_b&H/e!*FYh545KqAg0&]qfE'eci\?9KhHMtdXDA;oBHgqS`k>8ebVp,H"%KAcjlQ@hAHPKL]HmOpU(5LS&(jIL6J,dL#V"+4rCVcjfiUKkYrMib2GEtaIo%p@2.\.A*A'o4r;9R+$p3H$(aq)D^!=l^k,nO!D6%Eg3=_)7%<S1pqB$=Mh4tGCUri*0(j1m/>i-$.H2=Unq:-14T#PXET`;NK6OZR8'b.nqC@P^22?RQ#=9a;?(RLe:.;nY.+8Lj^c)E%?JOAEoMYXi?)o@CKjab8aj"7U%Z4$6nHX.AqZ2K`.)"Bi?TZ_LCXpkFFM$ts/W`hReo2ZV$D80d^K*q?;"h6c$/5N%WQ!cVF3"V:%V3[oE"aWVpo9ZsiffS6kDKY3?dPe:/WQ*[/h<qbdp0,O\NqPC*mG>F^Z[/1C[-tB&EqeNf.c"*B0.Lak[5U5H(-A;@4m%A]*aVBk%RYA[W%GH+3/M3f28lhPE3?d#rm"[PE4!W+)%5*]`iFf_0o6f-h*tJ5G_?"J)OF/V@:GrOA6lI/<5ngk+.QD9k_0)L1].>Xc$i,rq%,heIB4?:2clfMgarOeB:Gn&iUJ<P=;IsCqr4k%BE)]7La+Il#BHf-[AL"4&<fgdCf43*Kn,lQJS1nq6TS01:0odI.ZS_DXQ$D9<?%l5-;Qg00@Sl>Rt0Oat<(43cr&Wa</7NB<ea;m4e_EZtUV6%?SlZND]JY;_XBHE`l)hsP(0ID%fnlh7K5AG',+fsdE);,GYhSLot6%)rTp6o^aD*hu1-QfXE5rPQ%U<[rJXtNbGAjgt<-4.J9+!6h,3lP@hYJ[h7q>N66(&0$CIOO+!+"[+nS7qDUF4dPn0Ur?k1nQ8e!S%\#RZde_Gd'hIpeVs,TX1o&Ao]qcB&:bkd3B[5<#.Gr\RQr/"I*-S3ZqSh5*e"IpURQ?8W!_rr_/\`MMQU6VpkI]bU#rIr[oX_Y!(%BUd9O5.1Kio:Q>()t(]L]Oc\/Q@G9b(a2]n5"pO.;hkf]L(@4%O$$sG145HUQMuUH</(i\g]K#(:.aFihLUkH]g8uD"P9M`q+Xst%`mC\o@EM`']CN&^!A)-`a>V0^"H16eNA@um3,d]Sr,N[0:/.j/CpTtXp4?qVYr>[^\=6?=V#$=IpE6uV3@Qon)Y;649QL-SFq]e"%0YRCgZD>dKgri7XV(A.46-_U20K;$;7pqCkB,.I,o<6JgJa[\-B[fW&3N#/bD3:EY[ALGa>d0spLf_)_4>sFf\(DU3R1HI1DL#9m%keaO\)OK=g(V_LW`'b:u$+.c.iP)A,1+(qE=2opQ?1!KNF<YIE(4`Rp?ife-^k@CZNX6ZDT/OI.2dbh[^YI!cQ&iO$PE2usR7N)b%pL`PJ0&dUL+&rY:OBH\7r/?G@+YF3`;Y!8]30Zl,+E/-V&][@V`mR\boWu\6DVSjb4Z))V7DguMMP3uj"J3!DN''30!C8X(BA8e`%ENM=70VWo52reGhoe>'8!.m'SmWOQU;BUhs)L)D[:qCHqL,?d@6Y*l&je77ZIV:O5TkqUOJ]qs[%H0^2D.FB9^mK;)X#IH"?hA:g%^YkEJBrNU1Zt/9&&MWA-.#;62>TM"#a(.k-83rPQ?H9q41`o4R!bibsMboQ"Ak:m^AD:Y3RPCtsaX_p'(>%R;C,?A]8G[+W`C5BQ%]<819$>!JGUL^nV3LG\#)M46s6\F,<H`>)GW=]IRga(;m3A+l&YJ^+UGaOHpA=G_;424U:..G.2mH]$Q/9$B"jeq3?3qtb=\*3&J%k%dP6hPk)V3DOCIl*9u>a,=IRVf#a7i=dm-fR2!:*55ne+';(R^<V:`pa;Uu5U0Y,o<D@EB=t6#X/dmuh?1d=:R`HO#a?^dEs<f^%TU9m4=l&6O=j:9qc697cgo:WbVsptbcAco$GEuia5FmF01NWnL0]efHHc2NuMZuo$g=$X`IdD5j=X"*\3X\DI&m<i@0b-I-7qB&/%IXOgM\5*o4Ok5U%RXD^-7*IG4^B;;mFEPqY!gZc`"Tj#GD<D`<.,)/BH^UGa>$5qo$-AQ>aV`22@kMdV(8.n@'UPHs-758ApdKXr%,qZ\VkDrL"GBW/IH`N'k.pZZ`;EH@qO0s8E^j('p@e5*Dm`a4>X'SE\\+\o)hg:pUf+E5X_"OsQF:%JTQV;/0M+9W*f"=uG\)7'1%Ee6P:;gkP#PRecGkk*dEjnWd-0](p\k#1<OGsIDa<M"]d..3GGNMC?7r*8C-9'q]25i^.-FkcJ-SLSYO*[0jTm"R^M!M=)P$E]cr%h/t&o*qR=mB9c,LXsUr#JPNtFWm3B_UIn0cI2BQG*#C7L/#DCX>N+r.@BTO>[!Bo,HJ%eYTB`L\9]?3*_"1K5N'+?Y<!1HBFcTRo%^^7#lkGKZT'0JQ<nGH6fp308.D?&MZM%s"YXt2f(>;^kT0Tf*TaEbK!gOTG&o2bgbd5n6*?10-$,l(5&s1tUI-Y:7h._:XhkQ!bj%:!DY'8NDts5_7C*^<l86)K5RD]2e7tSQlBGc/HM#DCN,d,\<TFfp1V\U.0GuV9u%HX@YT#$D.u0Z@Mqhq+ouTrAdVD8b1b?6DB.+%LOZ'@Hg&Wp"StnlQBI$FqaW)<K,;iHZ6\O*gU<9FA`Y2j1m6`&br0U.XQV;'^kM$MT!N!.7PO"2#M/O`GE@&><LkEI>VhO@c7ndd%@A-I)(#2<LgI&@HJ_uoj>KQmj<8#K0R\_.NC/25I"];*7G0[<Ch1Zkg0O7.TC`Qp/]+!9__0;")E@d;.b8`,\<7T,/Z7R:@G#$X8%($asjQAWTg&5CP'&L,m@#:V!)R%`Rd9/;#=*i9d/be7_h3E8A&UT,YeU`1rI%D?E8Cs,`P;F\rn/.Fr\8Wb_qeLUg_[PWiSVar]u%,jRM(L*WWh$BIa()4IF\e`d@)Bo8`4_^5N-[K91S:b@EYX0XDM#i7p&`KCO)L+2.\L8Ge36o,8^;T/%GVJWoK-AG*\J4cYAk6'[6%i*[m06sRmC0d[."TiP;9KTJH,9S1NBqkblVL><Yt228"0_%[Ok$9,s4+\cP[6A'.@Z3tGW;95aa]SV;OlM^d=!Z+8H6te-nj<73G%]ZN8jQ#iD]aMF"FWlRRE'ZD2PAg5DB3[C,^$R$ctMPQ-+W9u+U(i=n\aJe3"(Dr)IKUsto<>4,^CPk?,@fc`mN&#5\^fFuM'EU$@%fi1?_(oRbPc+ds(K)Hi&"WWJaM;5)+Qm+pc^.aanKCNu$@#c3</nXU;_oQsKi"gSuJ.#=5Z'9,U.PD#3_T@AFGWD-Oe^ao;139`E%RKs.<pqX]o[h)QF(SY]F7i#-#;/K<tKnWL\'P,$?kWoKOTnkb)L#7Q`U%W1)1fVW^ZA/5m*i;Ob@Ls'4,t#Q]h'26p&I4t'#c-ZP%9h\2W:`7cD;&scZVG<*l6f9PLd@qU+V,YAm8N1X#P&5Lf)U^ZS+:#bH/g)npka)aO"-qlE7M$Nm4P3p&PiZE^4[K%?9_AtqDdZ%R%0Hs-m5sA-\+YrcS$j(8I`DUNdP_(rBB#Bq3@L-Ec.:^O.eh@=5=pN3sjC.81$!OJtn#;L79\!!!9)'mJ!5_c:=*1SVig;'\MD#*0%B;ua/Wrl:;;TOr1@T*X!Vhd/D9lV?;2&&a:>U`'kU+"MaW\P0JU/JU5eaY=lZUc66<]K,-&B%r0J!i_$#c?q3iEA9>/JLu`,(q?`%K+JdJ$r&/3."mb9r^]j(9=5Y&.T&)A@R&'<)-8JT#f?i8$AouLE7n93&_9Oq#&1&Fl`(=9oLUP"F(m';]#cERAO0Z4in(,UeA;.s%Kk%"C'JaKgo+Rdp@Yai8oim\46S.>4r#c-s"niq&`-EI9Cgujj65\D&Z-@5A_h8:'5nm6A&.=0m(a;ORK.-q:dD9Gi6E%6=AW''s%6#^u-2$YJoL7*,qTiab(Nkq]S6J`=p9jB-&DMlNi3bUO2!`>;`fg7sJ_l16nhlWrV#gm1cUF6aUWP%OVi*[,&>0%8E4:M$('0?^,%>Wru!5oU89(Lfp06]BB.+biB=6T,YX9oT9FK)di`j?OtsFO>%=>+$<qJg>0_"Wb)q^;UAE&;UoRFVJHZlpE$hr-1PYY\o_];>&I%%+V.p#lW#suYYLH"+FT@cnfYm<<%lW!$M>dXl@uW=:O!^jKT;EnL1hPp%&abd3r!/e<"oQAI0GR_RQM"P<BsE'kX[7o)n-rGCmj;H%7Rumr0JpKXlBO5r5U=GSj$OmEV#K.IAR^#s$oL_p6K'%dSSZk/F.-ednoROS9FH,i;ruoDOQ^f@(P:@Rd\qeN;,p#O/5m<-N%L'-%g8J*DkU$K']#b6>Fd!F&C*Fn=(ZOX*#G_.5#j!4'c:g0Z,ZMrF"Q]c3aYlBC5nMN'[9A)7&pP8D2M=Z\%?f3gfn02`;WV'A86R?X%ZC)8G7$D^-@l&4rn'46!<7qm.EgWIq<3Zu@TNJDa!han+29Zrk'4i1lQtf9K+><pc[NO3>l=OUi%iiOH('gTs7@;Fu8;&tq3>+[`%,'bJh'NVUEM5d**m\%TKN\FleX5F*(Uh2(^)j96*6FN!!;[j4[^qh/mere&r\?@YaEtB;7(87<aGf!"+GZ[l:Uo'X&G&/!l#V]OM%^&pgJ83r?p",Mn(0108^+h9AD)gVn)OsIYN+Rh3=P=*5TE+S5j(BtOEW07:=NFE_5;/OgFauIOC8K$?kA6L!g-7NNCBH@h[CF0QX%$D>No!+&%O(fF;HOOMoL#UL-0$ZF2G))XNa5uR[D@7]T9E.obN)nC!>W!_hE0G-'tR2lPVhNZEtSLYuu=,o!Y(Wo*U(:OZ***cuI%.+gs"7#IfZI!l\1n"JaH@e6G+ej(KFfXrCKC&pCiP?*7gBM]F`@*%>MbV\,[mc.F*O>0//;.o;^#lAIC;>=%&S-1Q'L7!]i.$8)!%i&6[[OTsHm8fEDn6Q(ljK=hF]0/OY9.)RlEj\!>ha\k]YP,;qUKXRCa-&!LHeLaZ+:J([Vf+k<`jL7aW"%?U.%j6rH!)UU"6n^!h%bs>b4X:_&n0F_W80P6+G!.r&g,%fW6!sJR6e_uW/.'A-\];,Fh<*A<+K#K`(j>!U58J9Nc5\+<pp.Z\uG2UTS6>Ffm(a;[46jTj=%Kiu?8!^nh%C6tr<&QOs(@Y74@/6\SJ4WA:E/eJiKCtZ`<"eo)""M1SBO<R^?'N80fXGPKC7R9!5-BbF2M#aV"(]nc$7!k"cP?f%!%0q,8%&5C\G),4"s.o]M8'oIoDcB^c_.UqDp#n^dLKES$N0ZO0l0Z:=hFgc-HN__ED.HCU;l+0;+VP3NDJ3g-s1N\U0"bV'X-ObW-%=b+#Z^r(7.6mmg8T],sV,aCW:=X%G^[*dJNRJ6kH$Gs5)gVaCIZE+YCX-Q$oMI]V-Tj@hh]I>;>PU`*>5&CR(0Z:tu."o72l_Yhk%EdX)s;o^M:13[[g@8DY>.N"HP%]#-'e*3Z4EaVTM;\4:0bWqJ_"GgbA'Jlh&a=ms#ABff.N<YLq=3?20N,Pea"P4)-o9$#()E.H_%/])>Z*LJPV/-93.M>_n@NARWgYnBSZW'1eF5VuS$eJ-N0d^N%<6qSmDenG5``X!b6<Wti!=>k7DDjXP5.Of`o`&n`[P'.\PHUfWq%%,s2X<6&$UP.>!+f#4\U1f\a.DYni*GbY%oitCQ+lD-t?'n_=cKK)[;(PWLT;<Y(NV)2/oU6me(P8ji`6A_]rKAe7$gVPOA%2tZP%WbUMh:pd%1&1SPj'hWK:eI9n/_-4V`@V%YaV67Y_9at(?JN8,i%oHlu.03m+MX3[dn9\j$BT&]daY6+V"9S66L.U9$Cm009O>k,V%L<V.I!pCm4F4E\!+gK1ViZJHLiX$/YLKros"##92aq,?k<<`tL@[N0;(^:(uWR?T3&>Im'^.Nnn(39!`'+?Z"Lf5CMGj*#K"!33n%5>>'2>o_'b,WR;=n@Yl^#CRp(+oG4`*1q2H*/L;=P4K5i?]fiaV$dLU2Dk[ICLS,3&A*oi!:3)O+cK\hN%gMaj8`/H.!$LPWZ3HC%(t7Rn%mscWJQRN7"V0(f(f2gk_D9E>OFY^IgYtkGL*FIXeY)/7^Pf#(/O_?A#NhBS%j@eO/CCGp@KqPH:"'kNdI*(56m/!c!=[!G%N^5rq/BOE]5\Fq:Z=$K?V4&=kGBjHK-m$56b(4Q,!"*N`f#0721`m^>$_lc,9LF%Ad3H:,TpR%BWK.o2:DZr7(ZlVM%jM:t6\q^l%!-Ht*:c=:E?%_,Ze=\dW@o*Yo1N^QU`R4mA_LX<-1b9JeklD@9rGXIUU`;Mh2l[6d$3bM1BQD>=FsCD8S/`A%-fC8@qdsFhGjm/O%JiuE(U6l9pMR*t*:BQnM="n4'7-^l,6B#JhA?CHEZ!\FM7kRPqAO,0]nBho$O:[)'Ym^_[A*RE7.>,i1\O"dH%8N"=Srdq6(M*%i%*&/=Qm?\'N@>rH$=U9]!@LHaXfeg5n$`MDe;[B]<=;&)S0$H*7Xr,HG%2:Et[V5(W^p$h4']P`ZK+JZ-@4k3Q&7tt)ZGM;p9aoJs%_r?7tLBG7%(1t*2(1oi?/ZPs!JDqlp_CS(k?:j9O+WId'R1$?+L`9qd0IP("nFdlT=%n6k<^D..17uFKiZq47X8tKB_^lJp-g@LD%2r?`V%4Dh,O>L6rBEjBgl"JVc^5dONfrBluWtL=>2&#j$'.,thms9NA<E7ijr3B7ViunuPP]\JV_E88<,Q7s&RCm/Gl=5:rKRojK%"qLtdbC&d]/L"\M?\h1,N'*%sMX8g?F:k7I*2&*p6_#=N/6e!_]*;eVRO6%)-Jc8K+et7orXb)@#NcRNl_Z*t,hXpUeef14='8o?%Jsj'ma--e'l[6`"5b)_UK@.up6AA"ngDl#J+6*giK8Q1XW&CS;[Ufj3AO)Vpl[g$A%4:a(Ca'&HG@jFN;BlI=!;(n?o-!Ze0^R@F%-J$X"!3M8J#l/_;JchcWPSBO4',h"IL`_-Zi.)eW6tl)fTh@?:<7IO"k3;(F0MU#q.;G_p#^cY/O>R&'?B.j1+WOW)N7&1V/tLU;%+K?`g!b5J:_D)7<6g;IWS>.!U?lF"1B-NBBZcRT^lbK%KP_Y>#ehgd3hA!h3">_l?(J>XG_$A0oKF;i%7QWsWjeCW\NotaG'D`4(%@TgI$@#.%U=NZ2V0UIR!0\:mGG(D'GAWJo1@.dL]4Tt'!$q1\W3:<#`;%E[j];1;qV`r.lEceR*dY55?/e918/e9*+XGM6jh;BD@%(L=!V8i[Fqk40'!k.37,/eur17/mJGPYG*GPq%Yu$mbo5n;DorY&]mLLaa:/i88dj*'#bk([ARc(?tt9+=qQ.!73CLeq@-+a[fKd%J=*e\'']s/%p:N:"[G15"tNFu=]j]lL1HKJ"^As[KS/3b:(Ds$fLm-C@[p=3EbBV.L_k/D*[8LJ"SNH\%!kt8/n!5V,h(6QXGLB<%76*&P+B-el+M(:ui-:UrHY!@S%YQO$!^("%fDu50),]4O.B3)B#3%(C0MDT8%.o=r0F"58&f<Ak=97P<E=c"g"V`]OD$cp\"s[mi%Os[gIbEFWLlj&*$UR"X;m2[#eeA^L1maO`MKNkm9f6KC%0Gqhr=9b':_hA\+nbuHg*-g-N0<Y.;Qsb1V&O0TR`>poCEU(H'U.CWG%E"5QrID82/*10&L)d9C3)M%m^$c<Z&//BHIN)@Z*YsQq]pH+a?e'M>*D3'7[!3R"n72`NnfuZO4-"[Rtd57l<L-a%NKAkX&0Y_DV%.a_p6PACXN$SW8[VM,Ibf(_QMWlZHgRANGS7!-Zt!g@Im_c,M69UBkfcZg;nd)'R5[USguJc,nP,01"T<cs=Q29EFkbhG<4(;i<P%IgFmY:R@:`N%,I]"Ac^N&>qR$r3-N]#<0<\1)QqKcF]V>1K%Kd@RTuXR.7dBa$(B?4G6bu>!Hgm1\pd6(e2M:m[G-C5gp7ZftIig%A3+B`#d)<.I7MFB?Q9pL&_B]B)`0C#[</]*+d#k<<Y2OQl``fXFWk\Y3YlCuNY`[X'Pj]OP>)f4FAr]W@M&+%"ecr<MDGPV[MfVo%%\!IH_<\oK#^0#.VN)HA31'i=Jn\]=PUO]d,/!JT=rIVh.m&o2bBtbkCSD-&3!c[JXL(e@lq<\d\r'2+7jC[1X?$P/e(Yd\2QW-9%3(#OL4D/O<N5s@Xr5=28/`.NV?IN?%*Y=HF@H8_B^T]t[9m.*.V'=/<peoCXS:cYa=FF]`P/9neJ/FKD;^GLfT$IO)g5X+@MHe);%$7mOhEcSC(_R^H4"ktnkD\5Gi5R4FN6NDYp<%HfP>Ss'#;=Ht##K,<h?&7NVFmONn_'A9M;-)6C;NNW0;E'J](kS,)eRPmd*'cP@%0&j;O6reA(6mO52)*6<Q`?_o,)TM#@r0@aqUgX!l<G]M%!_h2??jsUp`Nj`EN-[s]K)ht5S8RQGHVFpt'LNVm,h!sO&;LH"7[uQ#%1Mp?LR'Ok##RppV\T-e,=3qAf08+UJ(WK]3Zps^T8=MV(%L[B'?A\:6Y`-VXK-2+#14:;c"WWKLWK=g'!ea++='>h5e+L:=.<&ZC%!$U'(aOKj=e(4&4.8t3>3oipP11,pf4uD>$3=$IYXHQWb#KB=:dOK*0HVfD^&<788k&<s>h5pZS-.<DOJ\!.!nOQ!!N#]QU#.(ZN%b88%C^qhFq#SSK6EY((MeMUWsK`g@G_83'$1q$&niNbrL><s#YiG9EA.I?^f=YL+7$O=\n!iEeF<G[`!fiA*+irb!TgqnEd"c0;5%VC2g8LM&#[;<Y5?8._NUV$A0."L:k(ZejOZmIDqdC,HQ$%93u`11@1Eg4`i"Yh\U];IES3aUNE!Lca73@IDbM2E*C0augdtTAhkB%a590d&0tWY6eIc^LCo$V@r`]hU)JUgjQU+SY63ed46KmE-_)(p%DXDdWYGMB&[)RP@WO8D&6b^,'-JE_pRYn=:,Op.7?'`hK+M*9%Go.il+lWKZi/rn!pkipH+g2".3='tJGchZOEJ>2U%uitgrX_T**/r$I,Q!E'Lf5D]?[94&NH8LqB\.sCYq;b+iN7&O";uf..Dfb"%JDnm.E6OJ>DB'%#`e/5SYRBc22Vq-l'QPae%<`!CPssk\&_*P%MW#`Fq"kh8$LCg49+m+K+<"R7ZZ:q@=q6'Vqb**PEFhhL@us'q%6#^CGKoX%>2J5o*73k6(V97CZ+`s!&OMmEYA94-V`fV-XLtZQ%c6?4/7MV5$YmM&[0Z4I@YfK51TY_,WNT#."*lA'[mi-5RcH<,l%Wf(%nJhi,qGd)"#R/H1*0^'!*?O2STGSmh!%MOP8of54\,($3kMe"NUf`p_:'j:0C#)k2<a'auLec$-#Tf=aHm23Vt?%gT$31o>h%M">>@+PE6eYQl=V8*;E(leEI)dhgh%'5;2@?XEdMROSe\9Jra<!V1dLK)Q68DuUp-c6PoC>hQD5Lcsf+&ut:YNiC?>#r-QE'rlf!%qpI"^V3rVNo$nk6oFk1].Oj_;dX3.8%3-C]0iui%U98DWf9eXV?I'+(AMC!*<HdS^-h"fC0eN#Z.77AgP*l]I]P6$2&u:HMNYB+,%RQ`#)q]a$em<'^`M7R:4H7_;n(RAUZSR,AE>#u?&m%>&Y.J=('Yk2"6ns_c:Hoc7#ePr5?DR1(&jOQ6gK'](#/4a`3Kcp\='q2(Q%6e=#a!@E$+Ulfn(YCe\Fpqb]#1V"'CY<lnJVVHE2Msj<PO-6X.9B=k$ZZW4MUmMWaa<,]qWCT0F'ihjtp_bV/`J4'RG4W'-jrF?1%jEC%gVL&eNl:fFpXp6c5c\/!6j[,?F9OYG#eVhHs[^&UI,]pCZ6RFi^A)G/C*&ZEs#d7cK-/)DmjZC<e`k:knh0&q$QJkS[j\9!L%Ah!<VQ8c3<!*UZ34S:F=o3'80/AR0kT+A?Ro4.Nt/V)DLbdX;PFnlkph=iB%1sc-dpd`q`%[dT?;.)U3p/B;0cWGr-]X+ePD-uQ1%qj#J3qu6*!rt,4o?>;%BYH8jn5K)t_pJW3:4;)[r$K2<^8"LAml_B^>ecW_\%m^*'nT0MnUQ;DSq?;)9Vp,glC#Nq;"M8])>=')C%^f08R?&V6a\mF(Ma2C%<+C\91a+E.,o*q?6b4j@mcnXM"b&n<l,@RFeRc,Zk&Rmqeg1A#A9L:hsfK@\.V8TkR'bK7,BdAP#i^DOs%0#Z],;LRB1^'SeT(d(<s@?2;,\d-'tBlG"<p3B-/<A"D'a\ps3.GVE/>nK)#;]317T%`=2!`31,:+8PZ:TX#:f]U)c57<Sjc?68(%h?D@Q\eJ)>83IMHl/uS9S=Dm`TK'lb4GtL(1aT(_cblS.Md.#:,i:pVIS1b=L&`.<mLuc>#HAIAs"T\0,.:la-L)T>H2TL*GA=,'%gc\lMr=?6/%?0K5e[bFL*nf(>oq+D=k-!QU7@5`#6=&se4Tr6)GuK?nIIq!UEV=L*&]6R8H+iaBJUf^u?cR-jb!MU(m5Ru'rLBrT%q[=+c&u<CA1<AokaWT*;N;Yr.KSCZP0Dn?2C70&%.S9,<;krhYWFs2SAm??dTaZi'JNhsYgB0`#VTOH<YX+jT`o7eWNL4ebSD>Y8%V0&TTRj:PJ6Z+RKS7CrkCRZU;,/)R!QeSkZA@=r1/_)D2T!N?D)GPpX]NbTsM-#7i9T($)P^/FP];HcT"_HPA=p9=0]@l*@Obgel%*A.IW^rh=kJZI3boTPjDQKB]mc=GhLg')EoI'W&Zp_0>^&@7fhDe]P!^dNO2Kf48MG.7-sM+aVV9-VJDeg+SO6^A%I!#<4`RE/JR%&j?aSPm"7a<ME(hj/s6)nN,sLm]6?iTiNi_D)HDgGS%F.5C-e;/_eYd@[2E7Tgr#Y5c>12XJX=5-:6<1H+(RdWZF=^N-g/Don:u"%(N/<51#7km^ieX>7\VV77g,NGE5ioLI;-=>YL.SU*so?,0l!bo?AZZ'jdp_j(mbL1ou&Zb[W1qJ9[W=IlJN%r/UEc!M]9"g3S+-4%;Ije=e[jTQ,:cjfC'!"^aJHUFGY<<on<8g5+-]I.K\n0*7H+'MWsp+2(&mjW5'dt&,js'i<.'KR3U`RZX*fUmMG1t<&Aa6].%VMj%n\TpIa;R_;7D1:u=I-NLXBDVeq3=Bep](.PfT`UH(OX;<,lkLAU,<*@Z.31E=>.,Jib3IZNe4pB0Gr-K04L?jeqW?FV7r%GQr_7B%J[<6_m#0L";'1P"SqabDL8"kork@-%>fd@Hr\^X;9XKsX<784.H?8d3*He=uqig6T%8m!fZ3ngORWoDsEYBR9i/GERd^)4P4^ZRs%E_drL6LnONp7\cE%Wf1=X)^@DD"VPjJ/2,*KfA^aD^*J2]o(9s/h$t$(-`&PR1*\gE,[g.\Z^G*e9.eF51gZ+8@o]B+%Qm367Tk?%VR0,`qPLVE3bY#W+mfg+qq)ohF0,43>i(mJGY=^eA&D8UO\(*oKM?gu$[f6QFe.F.Su1^G7eF"j]o;/3q5h'WCr]4aiFJ]Sr]QaX%\cJFqJ*/W;^.GDOi?5jqk3[IVH8Mfqk2kaukdgM"c%GmTM<6*rNG4a9#LU4-2fD'ZNHR4`1E8tfo6LQR"0uaC(^1$87I(pD6N]k!%V.<Vm5mL2>UZY6`qOGT+NFfMT.pY5.0E'Zi@?A80KGSJ6-,dp$-[iA8!?7.>+n4a@@8_8OaDPUq6U+,Ze\+BID#(PoFbG1h;+<bB%GYaFulLEZcF;!g1Z7qGfbVXlfk&WjE*<@sk$j!nE9S+@=n^DE&N$JE==;ME1%:n2\7Hts$;VA8I&&]cYRE@8@<-WsWIa:Ljf1Xa4%Z`<G<h^9)&3KYZ)7jJ4O6`<`^(:LZm0epigW2_a>M#>nDIOm"'n2Y]fIDC%r&'_Ake@#!+M:##@`brL=5_Y[D%q_tEFC?keibr;?%7?,Bp0h``lAY(pmM8*"?QZD'*M^5Ucl^3P(`7%bj)h*@?a^Du:]\ggf@\fUXDE,NL#m2Z^O&DYS"&dq5ZIZ"s*T6!V;aVGF6,UK@%K@l7-]th>mh/KUFnNnl=ZhB%D-?FLuL(OnaJiIhNME>TR%UVqG,)\*'LEC\>3tY+Z2#3s4-dV)J=51!-+_p:O"YuNbfo32>]4jN+%m)SoIJ?'8G*,(kdZ#,@:?LMQY=+WekKoQQGJ(8]-f1hY5?1F4$QKgII5**7a<'pX9562m;EKVi);`fUY(0VW`_=OA5`1Wgl;f],R%X@F/nF-mWU$c*DXFJ\+5lCOU]ks4Z8,F9E=UNP%-L*0V3OHa@6LRAo?SfFm`s$TQ@`(280DXh6T`38tfdAM^-j&lHFRVa<=)eCQg%&km'ZHLNuj(O[<NJ1;Q^2GK6j0F^B/Fr>U^UaJQ!!nK'h7[TS-?IK1OlPb?<.&F1rRFJ4>^,6faLd[;ZQm2$-KpCEbD4P@r6/'l[%gX%QIrU5e*BVrB#[VC+g_2I=ES#TT4QL>Her$1]FSre(M!ZkW;\'pCl#ZZk-H&0hR2U-%/PP%APGn:c86<;?Gl8p>=e\O#j9YH@@%+$hp%KlnDlE.Gh<^0ArjN4OFA8)3c4@Z@VW;$spJh]h'?0tU^Lp\*+dRGmu!Y2\JcEc(Kh!d2%tX>!Xd?]dn`f&`6(hBCC9$nGFM%iQ'lY/mt)J8O@U$8/FF77BM=`?lVQJ%Ihu0^UJVp'\^egqNjTb#=22ABNlL`Eh.^$*0aK`2u#K_]b>Lu0?4]^Tpp)B/shsi[?/=f%\`a0M0Hb]6N?q+^dOeY"qYo7D])!0DI^^$4YCn1p`SbO,paKD.LW=8V;Gh(Ve(^5.1(V_0=1(s^^Crq5&_JAi_NZq"j\%qPb'qQ-%_%1YB3E=t$,]B$$Kr+igOuVX01h@op!esn7NON4ko=/+Qq`\?&&A+_52==I5l+g!P\q.6@SVf<7L0uYa[fNmZiHq?I2;La%ggEU]%>g6Kkg#ZUbE+YmnB99WTP$&/nMt]7I'6$P"qn0?T<<K/HPP+$bI1VkK)<mO)M\&q[+RsM:"2aK4?g#QCN79TP/?,qMWhJ4)>'qT9%-KVhY_):N#`-s@8`TXRr&%pf:`(Z>coX4W,Ub\L&<ARrK`-s91<70%I0[]WN/R;]DiI5sd:h2dYiZ"em)9.*\[P+eE#4nm$\P`I]%P0"'K&U'G$mCSFJjH#7MB=P@U</c[GbFJ;fEdS@^cjj>G5iMnGS4j]^H'sYM:QM_$>_e$RfRD?@=VbM;O),&`[2=r.]Ci010@Fh!%d8l'7iAu(!/(>so;(WNJIbo`lJ3dK#kl:XiO`:QpCuQ)SoU3p&/.e18Y7la`fN/iQl*E;T9!IK70&]+2:F>U!5W%?sNVc[#]7FDJ%_Kj8FDu'1)GItl/KkX;KI.FQaq+0R'V[XO1._*Wa2bA'(dI)4![%sr[AjsUbC;'=X1Q5(h&*_Wp,;Sj_Y`bJ.eQ&2=2kfh!Z45WL%%V\KEJPq4;A_nn5VJ>j*7r2PqC#jkLq5&.snf)H!5fM>@q$mM05JI[T^<T,o!eMTX)Z,oF+>p?(eW?o&[=0BNmt>e1@=3W6cEd*r%Iqu.W"$J$s>O4WC>L!XPDKr_7/W14K+-DAe<,-."/.bZi&@p?FiV0O._*M>trn6OBOer$*1Q%p6Ed@u#,TL^P($sWQhLEq"Lig<K%2KI<hfN5AeTeU6(.uItl;,)\"E?"'&cNM7D>1GksU5g3H$5,QNjL95t`1_DI/Z9AN36$Ti^&:0YG0T9+:X6>=r2(V9Erpe`a5=BG%4rVEX2]uERGpf+r<SPn?Blip'GeYT3cGt8WcNO@H0a5>&:+9k0,ZOe&Z_@K`a>1n0YrEIaZqe_H+$+;X''jhTk0-.Lp!1p?I>cmh%EiBn,=1-pIL8h-9@7;>r@'3.^qgM9upXROb@Tu3UM'hSH,fbiW[@bi'O',*1rL/i6Y%kp578\Q.Z+&Eo&/-"XDe;NEL%HZ%dH)Nt%#8t0XkMC4M\K(0/Js9;^8j_D':B1U.6Ok$Y9Ru%G2u6,<[rTDO2:C:eaf?U$CO;.u]@W4#Lt1E>Z/O!L7\j&U+T?.2g6&4f+&eXX%nLpdFO^YPuIipK$M-3"+9gRe5I(Xh+*XreL=UJT'q9<aAs+j@n>?b6*FWuaUN[0,,rX)]P74k&U)CEP3+]iG-ant9e+-V6E</:_\%I%oLg9N\5Y6OhY!^"%hr`sm9FI'[h<V<7Ya8LXF.]W`-W,uEEk&N(mHoDL4?Z+n!F:$oZZS2Ej4&[cmMbMH7Jq@T`SS(.n,FXN;r%*_t5Wj#LPNZW%f8]C"9nBK\2F0Rdn`c1Q<Q?dBop&b`+L&;V),TFl=:r)"-%<f^.7?G?*!,cc[,mtHQY&/iEh=8R[udI!I'Z%?RE%E5nOM!k&<YAP8^i4UpMjRdCo_D+`uo186[*>A^73eGNP>dLiPd)H6h6Z+F_Q_E^b(f?%g$ahmdZ#doR4]-Wc''C1^m)O60jRAsJ;%lhiP$^SI48rX]#]QGl'9ZX1Z9Hr4P+WlaqDb8ti_^=6pIEA5ao(ZQ&Nf\[IRL^LS1PpUG7MoKjNc_XL!8r5]@QAUQ<Fh9WSZ]KKB%iU`8n3!M_X36CNICMt*.KV#;e;+h1^g)WSO'8!0VK1%F$p6D_+>3t^Am5`\q_2,:ieRJ1AC?sbBV2/BqZ3_Jdfh,0O,5(N:PsGW_%T\2I!7FcENn]rAABfddj&a2:e%jOTr#(nn)Z.jfQPJgKb6QU:He-[@4Z;@keFgh9H-R.rnhIjl,UV#S*;L8gH6'+7^/6Th[,*q(h%WF-O,e+0AOO-B@b#uF9f&.`2a#pdeGoO,hp)\?051KUoi>i$A`-dm\bpX7pl5t9\;m-;9nj=',d3:`B`Q7SGBa`%nWAo=FV8$(28%lF1*Yc^&om^"'k)mAb/5Y8IK#613<lklqRbWO>h4O_]F"P#_%X418[S0_W+jC^U=%S4aM!j&1T.0m<oaaj/_AZP8PXbW<ecdX^5i%o/U^CADXc!0r&n*$Su-h]PTh11psGiKuIOO6goM'b9jN,oMjF9oJVM02N3TnBoU54Z\D\M.@MqZChG9OcsD42FnKhR5@#tG@pRj#%pr\=*C3Ar'M8&RO]5e_E[7]N#H(SXA7RRK4f]hsu(rKu=3[l.<m%%hiR`.bFeE"7[CrJ`Mcuot$4Ojq=\fF2g2Gq-+7LuJiYfGnn%?u,04&>^q`HYs)GlB!nCh6d<p+(V6AIZmm*pBuOsnV4:$AMBBa#X;O,6eFL8"DnDVR;L8A]0_@W2L%KpW`%!Wc;RG9.GSR\9%u[7%6E)&;D@9n;+K8d_>DPge'!3p4J_UU9,WCJ'Ep:IXb,o^Nq6JUmB.-p9Y0*SY>mtdik_/\baaA/c2pKJ1UL[d_k9*+KluA9TW=RG5%iL;A<VAkns9$&=8ccL9/61fkPjcSbKKatK)2(tg;]3&]t+V1(](-@`UECo0_X_H7)n'Nu92/c;:eD/b_#`#V,Q4`0a&t>XU=KU[C%35N&YI4)9k;nUEe70E*!X]9Z375eU<f_JH"QsK(maN9d:cF(nP'-+sYmrS1;(\rOF)OqfWC_^MuK@c?r"]gQ-`6\;(D"dHO$;@7u%a4r^-Qmg:_ldRlqLi*'&&lg&d'jZ+m-A'4G[Sun$995qV[P``ipF-M>mY-c@Wq^R@NYl_Ahf^RCK*['8Xj0Oqk4Xb:2fKn.$qsDW%,`GU.QKI0jHH`/4o4Rgng(6QK\Um8FY.&#'ht%nQ\6J^\@hN7)QVj=ZhMG2t</gcY1tKiZ_b:jU2f:X3`-pde"u3WjI23Ia8KimZ%-Y>/\m`MpA"ueRR510LZ!>)LjcW-dqI*HG$pUKWo$F)saD<U%CRq1i%P!0\`c_8[mC1CAtC]'d-f=n9&2JM\RO*[+(S(r33,@A2]%ehIb@-sYklX,65'Hl:@1^"+J*gp4&S'llsKOFJUjhUTi*N;55`(ie/@9]GYaq*Ss@^"S?A8:J)9\DAe$EKFkZ?s*DOfB0aA`/*="%fM]*Sp"5'gWK=`)P$"RZoe)dLZ:PI"<39I`0BLO%\iB"?`7he9)G1Q(L`#n3p-s3>O$ZdOe^BA3=L-/'8LtR%e#e`qoB-O\WJoAa%$:VYq7B^'r_\L@5^X"3uQn@g^!`1Wa;]MBPO]^7[j$(4<j5Woj5Q62_RC@A?Ef3>DE*.b3)Z5[W#;*K#L%tpNgWrPpgjBWpI@j.d%qEaRYEX?o4I.4?S[ksfQTq:JtHtEBQRJ;H\bi[]YW`Q`,'#,4r3d"1kkgY=[,^&]?M&Dk+LD"B?f&N,B8X/[m*-3BPkhYHi"+)P@%V"TX^<:`GS#n[q6F7]$Zk\WMCkqVA'%V`8(WsI0fqoZfMQOq)]/)pbU6^eAnN0>O$5F9gFqJjZ?3/i$1i@E5fId6E$Ngh]`RKCC&%lT/)gKJL4:;<h27L-4RjTd@5SST7PN$,K<5*4Gsl1CZ:[/'1_MZTR@-S$/=,1t65"c(h.N>Sj5S?!m/ej+L2gao%AJao,oL7`[g9%<CW1bR#Pr8'VFATS2WGfD#:Xj2If2U@>;ijC-pDrS.]A6%5fpsXdRhqW28."_2CK(8ZKMT84kgG>8&oQ;;elmq(j@%&fD^uULY_K%8(_@S?$RhlpKXNqZW+b2V,jU1/%eN.W)Mnk=m![C8lC[Y*?O%\W/Bu&T,tV`Sji6H3AKj#3r2uO#[T,LBb,7M^6asMHMp$qlG8[;%*,Q-4In1NkIJQeJ6>Zr\EH_u"/j1/r4g[E)Asqh'f4`3oSebYu7Cn9OQ:@i^c8(cMOE^IBe=j`IV?WQ3?rM:F8KT,05]$6-g[3b]%WCNd%Wu*Tra7pACCF17CB#pdlQ''bA0rI]<"N<1C[(N>B9!b='%VrQ-2TklPhimPJqL'7_E\CFhOe=@e(Fo]Oh)%_jNcq*o5s"R[%*i)E@7R@A_VqVJh'nHW$@^EtV4Pr8Ti/kV;=_^o7:0jpc(H;4K;`,cXh.:C#[>PqbML@7nL\:i?CPX">\5:C-\DOC\YP1$`'@spY%)CF(F0V:_N;XDAPLd@jo8pY]6eZGMc^4$g8L-oT-]3VF$1A-4qqXqT[OOucsoF*::O!F?*VYm'A4n@'1L(gaAn/W530gjh?T)AGG%9pABDhu<&qa5?jQhY<h8liU/s20lG+Wep<:XK)&Ka[%C_.>hf?\^<b4&,r%6qCd?llf6<'"5URkAEo!rZG]3`\42&N=0O>e#l$R$%PVo(UpANrupbg`qr_kM_Joc\U0">r\2XcFS1[nfe![:-/&96a?pXWaojNmGh$dg(9QU8@(Hr'ZW^P-<P'Ni?4mk,d$iMP&j*L[[M%WnY&_cm@'`iO8k'Jc)mN@N_nn1;aD>6^6.nNu_U-:8EoUJ)5W85]TbuAc3d,P['$N"&^dF3JWkq.T'@NXh*qNU<L!'MOHPC&AaE5%D-8XugD/\hnKOA],nB[g^ZIpK\X#.a'Re-<HN!1.j8?tp0$+I!^X64^i?1$d"CG^(+.>c$FH+_)=!($5LeqgH<A(+`1'g'=C/QUp%X*?_k(\DEK0FMpgaYre>2m#6h%pu(2QM0TT:`3NJ=ZTk`fpfoD>9=5"8UEli4^mC#Vo4Nu'#N3\6\[1>G*P&.3s)I#<N$I3*jP3B%Ej1b:f<,G?l8+<O85"KSDBI2mT9i*NUd&AkL\_+k:^`$:\P:LiR9-uRPL6TmU-2STI%E(Wna:=Ip6J8IhSCJ?3QSV><?/QN6n1#6%`A<$Q;m!gd[cPmeYSS!FYlpA%S1Pp=G(SU,YTueKY]!t0Da=mX.VGq4WVs9gWb24K7RJtI)3almO*MA__1U%N&_<b\H'V9o*n0=Z%iXbQD^CDN<kp`])pGZ%[p9G+*i]1IhSj]X`X!2)1-b:n;2N5Id^+j)\hAe%KOY]teCoZKqPpD.%_*gA[E_pT7JDN`kV;+,SjBfWn%_t_$#;fD'9*X%>MUsm<B%0Ra?qH-E/ZD@PHNfQ6F0:QUWq^qnK`5F*YbJ`ahch9\9%Qfq6j[)^8ql5!Dg&+)cM8N#kDdc::$QpBG%m-^J4/gA<f%,@["Rp$U55o%Y0PtHmG;WCQ$X[CCLh/\-7I_%,W_/KT!;kEHdmNg/(l:1co@sZPAV8U,Pj:6Wn6BM"HK]Oi(5%*h6%9_A(FcdW=*bYe]p$W<u2R1MK9KOK)f;Reur6*q\A'f*4/E#1$_hbm7n+YVn\aQRIe4.>)uls\deBiQ<8A*DOpW?!<,>t9YVq'-o^%GtbN..UF7k49*f(SD,*qFOX)G.*=';1_?B-h=<Xn*`di7a7aq@PbG7/G!Q#0pWb-\9t?s1[J<(>(As[rQCWZDXp(JCP2\O1Tsc9$%nM1a3`R6@(CR@Y=?$f8h'Hn8eG)=so+D$VO#&3d0/f$#3#F?VYT!q+r?EX4'k:kTI]`"[LR*<:@&T1`LS:T1%>DRJI3NrJ\3nS2n%KI(OdOWkj"Io"-Y]nCegKB?(K9HS)fOl@Jr<Yn0``!&GRR;Y!K+sPT##Edp@c-K8#>^>9:og2c*RuQec,u*qp&T9=7g8b(J+FDi_%0'&j8d>uRXR(o%@$-+15-2H,%`0b`eO"+i"-B5YX!&2:,m.E8U0WIaU1^\qaiM\`:*_b;hSgASd-W+q(P)+Hh12Uc;pi8rT[?RhJ%]NaJ>Lt(D0YCi80DN3q+OSCtWjVq&SH95:JjecTHn$r!F2J`IB9^>l?-1IM98^6/:M$4j;WcPIj)-U=he0Nf^p&JXjX`J-+boDOV%kDe\H%G-Y2.6U6W.@2'*Xqkkq:Kur!40]n8qW5i?2n#4h9mhru5-tbM)g=I"@B+P#d9\ePhUI;;_F0qeXUjs7`]oQP?&2X%6Qn\W%8`KJ2QGdLOT<^<QDT@:@LS^dE84&Ps=[e+Bi+4[u4s`eMLH<b>"e<"fD+06>DG/`pc:\E!Jdnr39p<8D&Sm*tY$=RO+UT4rU@5@i%o]877CkGae,]Jm-2Y?VnY1+n'fFqM29APqf>R^8,MQLXZ2g./)[F8.u#t6,FI9XrBOnTq8'=u`=R_s`+]o]i"5/.r^s2mGsc$AQj%^\\YJ/t\kmS7XIWe5=g@HK(ZCZ_6gkohM=?m/k%eVHV,=1]3b:_X2p0fAm[ZeE=VX7j26U9@5^q<2r&<^Q1;cOl+XNPRZisL6g7u%E3VE`hkMb[FD"Fl;(8\o^?P=f@LEX#W)@`'OJ(Jq`3;25YSJIJ[92)$Y)dAXHUIRh_4cr_h3JO#hrM_*&'kE+U^nE\,.T$o5:$\;%2KUK^&mh&NNV"YjlgtV@pQ+>d,.q?]WEc7KccIFZEN*R*ii8/>ljb]!.6prXPtNPc7o(]](EEYh3qq,Jip@%$-MIA8;G7Kt%=i%*%br'XtfVWqu%(h=hH*AFBe`%;XmV%cgjWj;POI6Os=FIB$P5%24$&bks1ap+p\O,85lC+`/XK/\/`CFrM\L8[\p$e2gAR`De"Ef-)%[DpO@CG1G=7A%Lj5KZL%/-sgXXJ56Z+RsNHOia3WV?mI7hR-+8\5_<R\qY'f</CU1^X[N@Xd>p+Q)eqn(@2N6NbXA8$R5<)62nq:%&-IG2`+)-(:#8C#:S[E)Br:OQk\UQf"U,AuA^]pIMcoZ!*/`D(@VhU3DOcDnmRn(rWm6=70_:RcjmBJ/5!g1r^F(CPC94=24m#Qm%jn4?p6T3Rj.cOS/IfEgM%4ej@hSFp=k@?%Yii@5$Xgbqg-h+rUFW>E7CfD8/aNDa9h?<uQ"B*c-Z\U,qbf3,$bEn8>HV%`)_Ob&V%i[:eHOT/"m\3X?Hf[IbuMo_A!W;[pfr=6=LSUE4[C_<_tFS1=2N"nP4ILa8sMiR0dVdYjGNPft+6#c0R8F7#M'I.+bW<A?Z@'S?,%kk`N<p$:ojN<LfE9\lX/Vj%rB'tj1<@.8H*$5(Zg#B""F,bl4c@?1)1c<qhkRqKVQ\T_M7q>ZRml<[D[E@BF<&PnR=jGQV7D<E4=%&Frt:h]L_L+)gB2h4\c:OR.!=qdB\%4Bql.<>5O+i1>9S7*E0*5Sm\U&qERh%gM/L$=LXBkL[Ng;FLuH6ciSRF&C^8B54)&rAi&P%J[M<3H9mM%l:FAlK&AXKaP=gWn\+D0lDaN"9`q4o+K-T'7I2X$Rmn*[&tK55PYqks+<s-%0Cb<g6C6Kh8u1KF:GVS9K%OqNnaND9%1qJhQ@>UUtT\h;U*@_cr`eLMlp&8rn@rJ,(m2#tek<C=uda_g,UCi"D-!)0O'5.[I,Ea@:cr$eoMu+r,C8jar(3<8OTO?4mil]LY%&nbFmXLlX:W.2,SCT:qP,-4UoEP=:[*teB`Q,d8FIM\e5bA8Ng;34p3@>T41R2d#9E&EM9AjLCZFo3iE_Y"KO>(g-dnqs\0N0%jH%jG/'312V2al8d4*@%dt>-6cA54WT1[R^&R.&#G+.@bB3Ch4jGL2PQbn1_s\fnh@:m'2Hh@kkBlr';5bik+`SaUs1IQm0K>9;XO3(%V5nu"ZsP"&Rem83,F8ao*,pN-Q4BPCZHigR(,j`DprVg+.>UM;:*Dt\G[i4;f#F.h&CZW`&HO]grj=QrW6*hb*mI8m&q%KhgL6*=%5JKsJr_?TbbU6WtaP/<!B&1GH^4\`f2RNbfZ<4W*Y``T:cYA<qA.c2N9ZQQhj-rUKR3Xm%LtOq#cSTG3Q<WhG)7P^fe/!V<I3pbp%]X78ua!B-S-2$];Z4#(W,FU3'O#NpAbGC?,Dmb6%d<MQa9ZXA?c;HASM;5g@@'>o=fT98:<nS\ra?Ag'pIb.]GH:>dhi\p1\H9K^%(6rDD\.H>*9qVKu,Ah3DPIo+<7t0fO(%R@pf:`s.>:bAT:*rhLjjI(o9IB&lBZ0>Q4U-D#&uCbQ1:;#MB!Fk[gpl@H(,0pUV7%eH%k)tQ.V^*u#OW]-KoMTs.Mj%bLE:n&;,UMT+Zu`Y-HE6A^_PLCP*I[8PmBW,25Xu3P5f9#eA[*uB$?Wn;SsIIb*gQWGJDGo`ari2j%osRrY;o`?fWD0g-cRY3,&OWbK/IpO`35]1B'1?Wh-+L6:qRE@flJI;G'f!56gbpfV;Pg"Lam*r/!Ac@=,9.KE;2F'J7QSmEFWkJl%nYREA9&#rDD]_WU5.eirQ`^Rm^?mZVO\=J@62IZ^&7!K%jV*bH#j"_r$mY%<A&54HE\Wqfm1p5_/PN<s\IaD(X*mUHR+2i/>2Bn^%31\]?)*-tmm-A0i];':VeLur>P]CIgLb2"+]/X\DE[`1FSrnj-hX=eVMg?,oJctrd@u%b`jKH3R?LK8)X[U<71gUllkgC:.W"sNL%1Df+jAkR9tdTgi&*\U6CpG&\:ATc6q0`[MWnD4B[q4j2oQg1DMH]*16_8IZ.<i^R(-0&.uKui(HO?[4/C?[jZPf0(Rh@rA,:S0Ft%.t@2:^'VC<EV&W:dH@T3;(?<%DgM@G\Z!0Gm&u]!rGsaI0nDIIC7N4iX(+@@^JLlU=!G]ri]MZ3BL?J8&/"2-lu$Y+HM`VURfq;S%Z2PLc!Fk97il@m>E[.$ahOY<XM9RskBnsA#eo"c'*ASUn^Udgfep1b/,i&%%\I$6?BD_joc9PZlM3_,t<*f?k`:"$.rTiYi@Geh[%DR:djX5Ac`JQEoJ#L1s5Bjmm2iAXC7OdN[1/J>"fn"\inh2$f$CAD8Hk2=)cf=3F(J/n4B@X)1#o[?IIin8UYe5RZ!&VY6W+[^m<%,7$]d0h=uM'I"]"0^S/hH@W%r:T4p-C,_mZjA;,j-PCJO,Ep,UMB4*3p)5KSe"ZlHHobd5oW#3EH<!l^]bV\]a<r^++Km;Z&c3c=%:]0[>Gf!4]*eKA5gJdm(6ktM\7@/d.,'(qO8mq9A2bip%r:2,gnKALjMq#,.+p!*3H:.gmjb";BQaN-;1.mCYS#$S)D[)Q^7]<GC%19T3:ka0e-b7YKX2pU`s*J.+'"cG8R7oU].F5C7m[#Y%I0St`lGkU(;i18qVU0#EO>0^j(M>KXKLQOam,.82dMXD=DX'0!DkJ"59%[:l=5nGDoA`Q5K8&3G+>Je8OmkF3?,DsSt(egKoUKM2")0AbAQBC+ea.n(Pim$dbJ@_Ph0\"*_u/V;fIW'Du34hZElBSbSl=^6*A%pDtZQZ;_1#6d'Pba6(tC"7i)U_frlf3O*5=\Os$[Gouid/u)F96M"O"XjGuhFh'ARga<a+*[@6;n=hh`8Q,M$o3SuXfRrA#?r1"n%>)es0`u%n.=k;RWOlIG5ojJZ$CKX^c>$!($F1^h-m/*,AfH0r9ngRi:+%Xn4R+8RDU4Pr+HpU;)m^[1d/KO%9(:N\q,eofGU)j)Q%PDu8Tfnn"`ifI)7l<pGnQ>olYA,3aT^K;B_D-ON"]:hM5S_L0Tg`FBX,1A/S6e+fqM\thRRH_-o\%eMo^a.M/P7Qo5S*2<uYd`^K%!`JdcRAB0_1.d78d9TO'a*$fA-#VrsVsHL/UdV\?T-6o.USl??c'^*44u'B=%=q-JLe-;%+uX6:VWYIKM-1cn%<tMt,MSKM2BM-^%EO>:5#>ofQ]<^jqA1J>!2MI%bhC#;&$)CTk35B\)r.DP3s-q\>Dj@*.CbSt]S7BWJ$e+RNe?WXaY,I@%1sNS8236jBX+.uPHK-UV%D])9GFP6hEV^YD*a^ab0?sq+hZ6HX4/;H9DR4=>dW1rN"h)(M%NC%%$53l@MQl[g8j1oe75h42]9CLTtc.^=M=(foMe5]<5AYk!g%15^o=UOnUZ8>oEuC1,C6Io])U/.>depeFLN'=f)UeC.nSb+HjSP1<1<%l;g--$+JK'@eo_B(/pqcpuV1pP)0]#HEajONJt<;(!p)%o@tu]ls?0*#?;CZHm[NGKWI>s778\b;NBn<'m6/mdR47Z724Hi<a+fWXSOf8ToA?XF\FD&U@3u<[iqLKBkp*f9s5m]TueQs%k=hH%=m`%E@R[R.=$<jFk6/L1&Q,Rj3YZeDDddrc!^h(NJrIa=O<3gfY]ro`l_YI?6qe(B#Wl4-\cb;6Y3YLIn/,3GQU:ST'<>qRKTtT5%Al^'7elZ6oFYKk^"'oXJo?JQ-8hG%^O?_/iI9:gE-l$9NHj7qJnDCtj1fm\X&7W8/R8FO-+cmVhhtm6%R-cGGGto@$*%'a\Bd9e<%lZo)g0a,!@m;ih3[M(l[_g3b:#2-.QAY97O9W0J$?*L0(d[-#"gR/2rV"/;e#0Lu('oC;\[k[[UANA\fMu"P?]@nOMI&@OHRo:q+%%(:1Obg1RHRgRe?9oU_L1]3Pb%lJQlKu!n7gm2Uo\#Ush=AP67^AQ9*mA!CS9RsS+3(^1Q_3TgKq`^FD"$DB6#/c(3d?F[hQYW+f%k4"d.N2)stR:[o+X$75X]=Of[\i3=iOmhhcU`ZoooMd7$*P9sQT8EQJ(`?.C9"'V98+94M)OQIm$7'Cr$)@<1r)m[i+5R6<VggUI%6@Oi3bn66:ccIji!(c2I"1UuC^n4:W&k.\'d/`*D-,cA27!8Gu&s',.^>>VWZ4=3^'&1\`=Vm1Uc+PP"p&lf_r?t=Ta2iW?,3+k"%EMpMCpO_4'Jb6MBit="fq7Rr#4@Z]L"fI6Qe5/rK:ZT7A[-'9I1CO\9doK;s"$#'H8LT2(_6-A:22g/@7NkWRM:!Kj@u2>.Tu8!3%Qt6*1c^CO=On_$^g+7*tP=cuYf'PB]Lc6%k)q0od(0d(L%<X7brMh0'l&CLI>H<HNOhgWjrd'o'%r7/P)r'^j-[*Ko`6e)]ZNX7F%hDh?ABSaPnL:XC4W)VB=G4[+/rd4L3Z!.lSb+%N:6N2$W6C,WL9#\ihMdAV$6HS3U;sVNus'Z,,YY3m+kC)teeKfIQCXrhBePo+3%D[Jg``u2H[+ukI7U/(.!BP?]#WTi6<Ph-mnP"_!Vho?ngjK.@'*2_k59X`KQ)l-4"@h)B_I&`CfP"/uJ7I5rb^_Kr"'Fhu;MkF28%C>4d!1m*G`WKZ5&DF/5DJphDAMJ?YJT"HqHm3hD)i=b=3ON]'B)Mr@T6t]:CqL(D+48WK1C!qcT@W4W!"I/[Ip\<2,n;u)dF4>H=%-7VIFflcbILfrt\HB-aIR'j3\(8I2+dQc>&)+l6tnOALs6iC:P4XhusjYQBq-DX?cSeq'R7$YEITa@4?fuV"6]X?^`1+)GMNLRr.%JfMgW5=Q'm@[OVpP`d/(lLBl[m+HptEPqH0`18i"1(!t+R;G'l8!)+WOl%p]C@1ZK[kLCh8PdbgHm^['-%[YU_WH%e^3i.u@VFad%G)_^,[!3![RbD8Ud]D+5:$7u`4>UkLI.8aO2A9+_(P?Slg.D97m[H@5!3K5PPe8+J8edBPPC(c?m=]eL\gK22mE_B#mW3,VHHJFK%L8O[-oONYm8,3B&P63P/$Q<8dqFNNc%*oDXcQ^Eri/AW.lfsGpb4D[biWE?Oa*B?P)m:b*XXadUVFN^YZKle&*ZR/ph>]a7$GiI2%*>Y1*,bj6XjNm[f>K4;OdU;h,KR@QiHohsM's0TfP$!HmB`=<uG[G,5,WU$T8#1*8;#Bf<To:KZrgp`n]f#GjSj%+ll/sF71f^bn%d.,]*F4[b)E%cXQbTKO\@*sTe1V<afJBT+;W.gk_qe2;-6lDNB&J!hDZJ1S5'J9@9Hl%*(iA*jmq=/fri7Gu9rnMAL:PttC^`D@s%[-G&'bsltq7)G88-^B=?qrg>a7I<#s8#$\s5X;edQE92V.87d,/#qk19RO9VVK5?cHiAZ9n+hp]ob-u;XD2R-mup=2W.TnL!CVmR%JnTMe&jV=I"W<aMJ4NW%/n.telDY2:G1Ct61mLD:df,*Aj@[XndX4oB.L?]#DWP%j004/Oraob/YH>da-4#qZQ#faJMV^!a.2jR8%/`j21OeWN=4_"rPZqCp(bd8ZW/i*/bM54QiOc[)9o5&#la"J5^Ih0qTa@FZ8PgmOV=n/BdSgTBPo7f_X"80g_L.8`<&TqLD?q`me%3RbPL3*F=7'ae:D9qN"Y2AR'WW*M"?l8+:Pb6d^3+Q=o4oFn\-2tBJ&eZAFAC>A4_mmPXV?qjdPg2dk!@ppSaU>_13OSf*h,E'ms%`#3m2Ve0UH,;O4R4iQ\1;:YR_(@EF$*[u-Mq?Q#TKphTk-JQ+-'#,6H$au#g4<uBHN9%@Q1r\#ni,V6,k.mhPIYbeH^;#V.gn._S%_5Fo7jo-.Bp*!A#@$'WB?FZZMa#"0X-c?q^IOWcU^Ks"r41aRcrNXnQT!BY-Qk5;ZpT-u>V$^k1X&q<aI>qdkIq%`>iOG2NZ7*F^%9;kPrZ*r)"@$[dCk8LHae.M)%bfdka`?uJPW)BUh2hLUD"I,78H8fSJ*PLIYFi[m7h9PThoM24F>pn,R0KJHPJqYNVR1&H&Vd#"[%\7eUGbT`%3O2tfdk2I1;+dGkZfAq16P193Dc]LudWK]jtb>RjbnYXpa$_:*ahT;UWiB!ZCY/rt]L1-",C4!H;XqO-FQ@6$0&@l2+%c!9t>+K6"](-3U7OV>o;[W='5W)VeUE7?s+6>p4T"O/S*DenBY8=3mVEjPt38AKM^'.kc-pGD0M``gG]:IFGQO!J?N=PJ4eA7N>)%L4$4)BJ<A="pXc]3FZPPZrh(3P#Z4Zdu5Ojau^\MQ<*c*M)CQcN>q5lHU!Ae>V)ireqb>tI/KAj&(30Wl5>A7W5/^J=otj>*!N(.%9NF<;)<4c231VhOJ,:;Z*0fTnXFD@Acq3BmbVp+_rB(]^(K7qV[pOH+3^hqPa(cr%o/IIW!!1uufVrglV@jIuKY`p!'Q=GD3s:LQ%&BRZ45kB-*h<qV2N<_O=^5a)'5:*#=[b<Cbf*%#NA9:NqSQ"Q9`,V(*:Se"-2kQ:qJE1H,\"lSLYgiuI(bA&CV--[,%011GXs#Q\%f'8QA/ka18+BWZ6+lY!Iqnk?_!p24Smm+JHA0Df=o!'ra*re$,KiXn/Q'fkUL+i8-`1#E?$W2%k;_)V)#U!!$Sc"eWfC6Z&^4ht)%/=u2DhtnY/7bcLW`i<A)8D@m+'2]WdEjVXI04kBm>aBeJ"QZed&O*G-iO"HnUSIDPgbSkaQ)]<u,q]*cQW,q18>;V_*ikJ!VV),H%/33mD\&p[2-FDZQ+/O_KYN7["8&qaG_8IVI.a)*m6dMc6/CnU\BWuoSrLD;J##VfV8LiUhW*\#((Dh.UZ`A5RWfTkZAjpS]n#`20%+DpEZT8!,<J1J?F_0i!$Z^kCMXRR2QnmhN`1#ug/>0:/nlP105RM!51Zmnp%X*2/?p#G+l>AeTBBTaleaZV[@8^*D8PY=P6o/lb"%[=BbpTW^bHKMYT)&s=4_p_tB=RV^WgIA)<PGCk%VfiPc0fXEO@,XtR)oa:^mjF@1,3g^`l*H)8t^F)Fa:DJr9^52;L:CEoX9^=`N%Ldhd/do;eYafQ=(`.f==j@tF\GS'a8,JS_*rttY47D7n\Al$/TWrqf3b><]Z6Wf/4BT-SI^h@:'H579^K"qemYQTPG80G`6OIoSG%@T`c$J8Bnp_!PkMrJM?&.bFW6QDt^))fed)0L/P;aGEjY9P.35O\A`I@#%SU+e.t+:i1$kAf>$pK=>Egr^`X2lS\j)?n."XP:!XZ%U=ffC2IU&Z`[RCn\;e2),b%Z_lnGW^8)ghB/>U>Pb!bR<Z3_O_4[l]Gat+X9nGFj[#uuPD<OAc?rB\AumuTa%=)OI7>Q+'+:PlUR%_S+[[;f\ua_&'b*<-`.FYP_Jjr@G@C9cj$\(,SdZBH!5g.i?g;8I1]Y`u5#hn8&/5-FIpk7&%5D7ADcqs"_uoUCP0_UmrG`/51:P%(DFVHiOS%LaGlSJ3,?V6>UB(U1!F6mm[_EMr>&9VH8*eGFr`8V983t4p(9]UFWX#q)'%k"mumJh$PiH6kc`r_2Si;aN'?>o&d@4<%R]mbM\9V$lhC,j?@%Nu0RqA&WiQR>eK)PYoJ[?M=j#21Z"aROT<(=&l`BO#E-.2RbYn5@lUb&!iV1nQ=cBrGBMVZH)K;e32^M5fl%MdL2HB'Z3'm0_<Y7B*!fdQWk(Q4\d,_.d/p2d@pX*uGo&<96mI3PCO;;HrR7OG^\fI?Rg9nBV9<a>,86Y:G%*f)#,XMi:-!PE(q8%$HiU9U<)0*2*_.!RPF;%YC=N?F!6m(Qj-GL?n`0%H0L)AR)t6%MGBQP%V2+UUbgXJ"8F"D@M$.0N6/(AVFPb2qI?l.I\PPe1Ao[F%+<tkH]"`A,a@k"HeRm5,Z4t^i<.>Ak!3V(2TIE1q8[#2d`"<X^#&I9.(8SM-qgRtrA@f'16ujk!6kmAJDRX4\0kfBl=:rMN5)CS_%hu>rh:WZ:3BtW\6-]"DdAc#o:c@%7u-thRG-94G6.!)7C<Drun=Bk3,m2%)Aq6N*^a?g(T^,8qgaVc8$cZ(-1\O:8BW(/*HR&"7N%TMIFPX1V->ei81"dBIkuBG8Xf%>L7eEmLUY+l[[qCKF4klX0?iDX:g=Nu%5#<c4jFP3YfFH;tE=bt_dE(&4qiOEGQJUod>Ma$P=;%U?n,:qsStt(RGH#8;Id2X(C(M'@CSG&g+&KVm`Mi;mZ]b3CH5(K;*3fI?T^R')@jUH`LIY0(d:093&SV`/CFpU<d[FdDs1#[4O7(%;6X%-25t2F'.uCbdI;\&ME[Ei]i2loQ:]kRLh,M$NZSr_0p--(S-2-4SNek@DVq[3`LEn'(pp?no6XtBUJ_cY[,p,2FYPlEX(Ubt%QFTI#NC2j>RuBa:d>[]mUsh>03G.r"Ot,DQA?%=sOsm!!:&uptp[+r(5gu^7OdE<q=nEUVY'3G!g4F^7CD??k;X]]IU/G$/HIM\0%HFJ?k+Z^ViRHYaslhKJQ08LsuUWkpp?4mg?2U0'/o>"%!%rlHTA+TN;rOPZrf65OqT,ne,SfFX#qab1d'/RIt2[,&qMh/T!CXk0<%3TJGW)IJpD$Q-V<fM].d2bP6L*u:%8_CTWZP=b[YSeeVio!jc%ktbo(^QT2.L]35e`:Q%MKp[<YmueIM!9O"(hf<;;b#OLG9:!/E%@%hsmLrQV.[6hpedO&O,52]=>N`9-gpL3YgjT@uMY>VNN@&D'O-7VnKKW]WW-gminCF%D5_ig\2PF&2-pdBKMA>[5"2lT4^&RAa7%4>GK"`?t*``m*jm-1Qr*AuBo+4q\[XA0F3E=!k0f\p-DU\AVp@`&$i/o?"#EUJHR.5g3u#\C^<TZ/l8uoT&%1$'s9M(')lKFGoOS%8!Rs886PiZaQ_6'n#<.Pl/^jV&VRM%af&NGeac4s4]4M*)<E$DSddu=R`cO*l?I)Vq`X4"$e]iJR04Kl\h'_2GOhJYJ6>>4m>"C_%KQQs>.g*_2:DEoIK&>V8,=j`Faa+(pdE=ra:1h"c4NL]P1/,-!f7>lKATr7Mo5f8N4U\I4EqF1tH^gusPH#5;h`a$'m4=,BX!!dD%BAugt*p`=*m*O$e^!52n`Q&ii>%X$M/S8k@"M)e5$SuA7?;nKeH:t!arBjg.SEW2J/_KS=U*GI0iY*acma7#NAO;Y[rVTT@h[-cd%ZS,nr]ik;SIl?%Ma@67dk'cE$9*4\Wgo&^A(+Yih2+k\-g@X93)4fiQV9=#GE^g(4Hh9GL,NQLJilH1*lEhq*=aA,a]Bth$aJR*A%+j%&W,_k-@U^'#6@3[0\\7c#'V,lOeS:^K1:0iB=gQfBB0g<W1'CP]]-^4>&\C6E$9#g(nH6D=3N'#WPN`*-6`J]Pnc`,lSZ#/&r%G`sY2<U1=58%KjGl>Ddl.hre[2naZHfJ#JgZ:iRG^#6Es6O_DkDgeB!e;+$_CZ9Y%1![&!Xd-KX4DZZ+i4l-bh55!dI4=M7Y*(P0%XW0Z_$FqKdMSs/;Nq_qYGS`=m9;5&4+(i*j);?s[&=LQ^*$VpU.<b-K7\o=,-]nPDQ%'pjX_4NC,eU,%q]t]Y^2FqeDc\jm[V88<%[JNdL$llT7l+OL)__6%0r=_C5qO\o[K_7b#qO_2i$WI'-;K("NN+jZJeGfs'E(FP^/gd6W*M`Z:';qs/!"CpB:YfHX!XM3BXH3MI%@FmF!I'g`2CZ9$.M,_'.n5^KY;D14m_nne]d683#qD,C;IbrQa>n6m@Lf'L<X+qBX1=UQq2^0>88.dSWBR`/t_Pgr"pF/O,ds.Y!%('na1?<FU#0VZ&a.m3;]o0j+AArs[P>Y9F7>n*$(T5#LiLH+XS*b`KLj*I@4X4.4\hbg3g#\Xq/LgbC2[].i3$,j4OXp,dWWU]aI%/E-=2;3+WSibdi9=m?kBQ`Ual#Qgroe8.0fc/5+'Dnd?cG]J*XTa:M(i=?iY^15AbZBr";h,7(dQ=QEM-(iFm0CSB,O3(]HZDWp[%"!3AGcd0_)RJc<TCO0.bMmq(d3'hOX%M24i5\9e5?lg$"-4+.<9Gt,@'4X,:8UQ[F:a3uL7l3Y6WK"0mOB3C[9TTpLLn+F9:3uqH%ha9>MXMdA_OE(Shcu:-%`PLOP,+$MF@H[,)QD'j9asF[#AgRI@g$"g_-+%"-0]*QCQ66sHaG>:5^WT=E/PIc5kfN'D[Qb?qO/M@^%ls?&?nYXu7TY9fIgX4^+YG21Hr6;TPU0<D0DBKjffV;57n()s+k(Qd91('@_(<t>rpCe]aC)QVBdV[o:@X&g=9LO&N3?f).X_'Rc%+f;;/1=SsTPb"WOe,K8+=Ln<%.8=!$J(fUoX,5>b8Kl^"7G?g!:CiWd]b:p[VAnbH+eG#jLmR>d#EtP7mC'eY&U1m]A$/+[aIfY&%cqi<W*2Qi*R"b&W+r6`>R)Kc;2d+pUqRq\[::5sW;=f%]lhBAmRoHUj^u:oLko`EkZ)Sd3:8U-inI,#GWZ*?r'J`R;7^VPC.3+h)%U<M4,I'#saPtn0iL%W%gIe&oC-\k;?'%+f3-K3)19gn@B,-%&Q`i_g6ZXj!aceI$!7"5DVQ".9r/M<%gI1Qc5Hn^go#t!copmo@l%q$>phne&apBMVN-^Q[:5jA"(oY0HLcP$.^iL<RNh,,8kp<(+ga@rhLSL)AL:092Y/G&PQc,OT^AL0_%foTf2c6mCjG_.:ab!:aTY%ctH/E,W?'rL<$12+/)S2dt1!g2'JP=b6"UK>M%(!C-lkA'VWpC=AF1pBap_iQBG>f</Lt@*YIlAC'V$EC'Tq&C.'UZ)2OY!;H,I%%C;#k#Wd'F5C-m7<b[A'8F.0]iT>NR3pQNfuk4s@0FjX0gb@WM]W%jt5<+I0%!$k!=KM]RIM;o/d:dZPJ@)lcU8ILd:15=LK/;>&t%MkQI8)`oeP>TN!V%0Cq5NCuE4[lf;o[YeiK_2P'7ltS[nW298mHo(hC.`rTCd3_i2s-<q*$nQp4U55G]8A_8Zct+/%[OqnnVEb&R%"naDmDQaX99g5UWNh1t@&u1s&T*E^KLMEZGUn=FT?44`ZA)Ynn-R.#R2[LaQKKKe+Z#^k-pU*qY]ET>#23-Uk?ujJf;Xj&DY][0b%4,??g:QuI;M:j/+QV0[)gjLE9p:,pO$:QQBWDn<f!hR/TY%u&H%hYCr)Ie#Q/;\S2+'<m[?4nEjD@16`%FO;qcU(^:'P6h0648!d%0F;qUUg+UG[7T*EFbEn70SP;&hQbMHC\cU,5Vml`O2Rf[*lqCTXhgeC,'h7TSOZ#*c+-H\Lh0!CXD(-cO.&,P8phm"B`)6NN]aAb%7&ucmcI!B9`qYO$k9=/hK;(:rB0P$6&?c0lXXW*0+,#8;Z>^.o:88r$-<UI5QY/H1L'Am<0A_o01<M;\gC[4YUpMtM&42OCgA/@n%o<q(3J%$Z%b/&2oL#CbXhC"/V_)Jo9kfk+9pO^fGPaS+;&\33e3d$%][ckqlpGZ)>o@Xh$e9\og-ekt`eG]usc_eqY.#KtB.ek-p%[cZOJbaLJUqBEr:m<,7RDU^OJd;/97pcb%4mR3hQ9XLt0cfI@]I4fhd<8QeYDnct2RaGN!4"]KfjR;t+RG*EB=Vge,P2sdUq"^kG%F9oo.!I:2*j&H7+QM5O?B*E)F9;/8'$42*CNK^h7'ked)&r;:5`l6WnC*TXK>Y;\ZDeO6#'AH,fN=I3#9A#Zif0"n%"Ea3)IRG_o%W"_qO3T-tM5I&9]LfR7g[`lgeqT\B[UdL+MU1^%LAti-=DfiC4qP*q-/%BL\G-snZFmOch&efn&KOq2"S6><Gd."aj$IN4m\&B\T%;KfS%]tJr)Jar]jR&M_iaRk]"Z3`dTphi*0A/D&fkmf&c12)8Te/,E-YO,sF8Pai+PYsp90Z>eW\P/hOX$qu5934NqgKdT1pUCHj%'[T7X_oB)eJZa7(g'ErpQDr7J!(7G>a"i4^eiYUG7%8_74PXn#"'R:(ktu2^6$abHX4WpHq'/dTd?pn4aSe1D9p2S:FkKpT[N[qp%I(pj[YKjm?:F'e2&;,7KN:q0u@Ot5L%^jma6rN9c9Xd1u]6W9]Z/<aLOMn=DU^6dZGP,DA?AW*goocYpo_/O4]fJh!J7/Ct.gG"F%rRjRD--R0)@J[.R-LN'FI$bgRB&Ke0^FdWCft%s7ARk5tmRrqWp/'TGY]42L"BiX+9>(ql:*tjAmcq3!&GnKQ`MVh%UDKC@_!&n;%-`KleX$Fbkfh?j_[!SBmfMqhCdYD:"XI@c#I4-F@Z9p./[W7IF9<r,CLKdMQ;j@j@%U1]$9[tEg?Z#RIBmBK)EW]_Z[qE$cE'8pP%KS-93BSh.>FNZ\%L_14R<rTjH.GR!co,p:%eC+m;-'qV0LpgX?nE!VAY-R7Snb9-@T*hGJfuU4fgXc?d"U,H$7'p)l9O)a$8e&sp%#]2SBWsEF2jSKRr?jsQslk_K=O;'A@8>i&WH0:_`8pliO/B4qgf?c2N&<d]KWPsIVFQYi`Fj#N1H^30'XBM<p.ltAbM>nQe,PE+Y%DL&d'lHZfYIuY9qeB'ppRmgb5MS83Gj5O&9r6+@Yl@EK%=)37GntOnU6p5QLnPilhI8m/EV&R)rM#Ei-V_!"3GZ3]8o%_C%"LaHE%A=*2dBt\!]qY#'E-?\oiTZnH$h3>`no=EXIiqCER5eU8\$p"^u,>CBY<V:QWC!/M3Crjb]L_NO#\p;$V[sIDhPLq;Uoo[1?a[eo)%?8UdNarZe=88B>K.Qdid7EQuEQL[UaLC.D\iduO$F2VmS&4e%#aEIG^,E_LF)7;1TD.Ar-q9=u/MqGJhF(ZYNF5q(H"?rlE[4Lh:%]JpuLO_A5og8&sjHN@p-Z]1Hn2rHS(Q3j1>=i.)3[DEJ[K!Fj%6!*EB[0D^C:T,l`T8jER9d?%k(3HS^)<HNIikoa_Dj55sDE=l!%r9oOs/rpV=:4+#6qL"USEhjdAR&H/Y,,q(tY.[:;I#^[#V*Y\pXmh7)=N2^sduX33+Za^C,KWD;K6eSD@?9cE3@bhTH[IarY,VuO%!tH:+9k*`Hlkp55d=^]RrUFfu!p7&>QAB4pF^tC^bs>4#aK'D:bOn9IE]kF2dPue_IfF>sSf/fM\Ve?u&Wpm*6mCI9_4k9/n)K&7%"jM)CN5Fk-fCG&7>7n1'N#*)J]/?36UK5lmc8+>l0iPYsCE:t0^"^dLO(Hs`Z,H_M^L_e=+#L^`JOS^<f6+gk#E)4UK^\I>%$b'c%gq)0P#8PoFar1T24*8R.SH&]&&o^/r!eL89?s*?N4QR*3rQ,iW_qZE7'RcM,#eYS&Cjnjq]N3Ml`r&Fo_GD>/,K%Alnt!S+4OKgg%6Hb1b/+*Q()uWBZOPU6C1d9i4biCSMZ\0oV8c/u4[hADqH:e$.,UIiO,_";\m=#[&Z90BP[[VYjrZXgXn#.^A#t.c\M]T;$86d7_%9XXRk=!h*P\eBU^q)Y\^,_EFpQh3S#rRpUg+C54`>1%>8ib'IeCum=a&r8h=/`S64"RoqX?*R]Ai:gF8Rmmg=`lkk%K-S'>MK*I4%hh7Qp_MEXU=giH+bXcrlYk[#>"F=-<>@Bp'lYOK/7?"Zhb]K=4L;ofXBcY+>/sGA6Y4cVngl<4]SOWsA7(rLd6Ll"nSE!&5NKZo#%;O2\5,!.F)^51lW30EZ`,pqEd#=F?p`Z&8aX(fK].Rh:-)$\4-E%l0@@b/[-&MnYP*#=LmBOsh;EO9b78[&VDbJjDbP-%F!g=4Ql%*(8f;*3EI?=hq0+N-<+\HoK9oAYYt!*<pUL@X?n(7j7DCaNZF5TPoS$MJoS-_[7j+3O(#h>ta='(h9E2o2\?Ii"+Wo&%ZrtgYqt8%G;3h'm4^?P`A5i3m_%(0RCC'I;*(n#QEkn@nKoHo*sRWr%IAkJYDOL4o2>=b6b3l,T.NV9phlILDh]9p-p0`Ol9+`(o6/#Y(T_mt%G-K<2,W(XA0j_6`$1-8WN-M1>hatnu_h!1o9L-(tYSb.CEGUBMFpgPb'gt!u8THW2/1U>(0DH;0BmFCQ/re$KM<%bcA0X$>6mV5:%Hn7dqBIl6?h/G.,%AU<`cKbq5l>//L*EZ'hg_>1o%)35h*D"(d>LImPR%*QhDPt<)hg7muVQ"Y.^"G4`/">ujX=m3OWoeZ7Rbl8j%pB%.u(Ep>,RSBQJVM=R8rO]L:%6.j+N)E"Pf]5J1]*I=f;n(QbS%!)P`HDc&D6'I7jZTEb,PNXK33"$RJr&YtJhZ"jjJI:Je9!@#%CD%`;8j2j,F-msrQb%rZ2,pW?KW'kn\2Mj<Zgr1`OfMg_8a]pNq0UX);.ll.aW]cW;Jc)p:j3h!lb1t.=@cWac(:A9\))J!*V%@"%Dd(6T[,,<PepGMdZOf9i'6Dd3%8Y3hLq.f_!O8,3l`mSKQi3B-mS/UXPdYok]l'/qOje%ji"i"A!Ru@TM6@!&dX7+Dg@$c$ahZ][%O!t0^"Z`cleGC`0dG?qPi]bGMs(RV[V3G*ObpLk608dK>TApqX[@nH3]P>:W2Ac<N*^EN1pc\f.-:."eKl@:f7IU;AR)8kr?$QA-%c)44\%?ZgXK!X_c)t0kOJW.-JMsL.$Z'%7WZL%;bqno19s7)lTA,bd9rqcE-s4c;o=+OYbXLZrZIWI`jY)X&WldB1gs/qXJq'PZO%Dp:g+2OR9HLm/HX%sht8B1r&_NC2UhKE%g&rlZD^qXC953YI-<!r]=)XqEtCri=VlkHh1E)^Et,oM.f\&iWl^h]Ep<2_FZ/s7"X\%+/W(j$EdcVQ^g+r*g98aJ/*?&Z:i72QeH+=BgrA"V8Pdf'8(uL2AZUF<n/Y%HiKrfoQe[?#k<b9D*N&NH&L?f^/L1;6]VuKqnoc?%VC2B??iKosbL@773QLR0=eB\jfOq1R\N(O=I?%qhlgrm.rhJ6.F+hs\E)%Gebk$#/KohOb,uiq#5K"a*A^pa6i"bi3"\[(61&de&%I@T@I-aD!]=Z5F2P7:VHK$;tIWbRLmjajfg'**dd3jL9s(Z)+Iq!7mJ,7ME.jl@t*CBV7X0%T.[C5F`''`H`$l\#>j05P.p;<hke%AI45NT1FDV_?'@=cNWWti!H2$3C)0fOSkM/jC'tpnj4;L<AQct/:utRii/H8BrV`WBj!c:,?'$_3.&`8Phj^7LBQpA?%TerWfFTh%cE\')#SPiq.he,"?<Pf(?<&@&Edd>?9LWi6,)^\d=fATd,jGplC'qSnh+uJLceSkb4Z?(hpt'9=/j/HFPNQe$'.%09-brR:6oog.%'O+*F0,0Qh8UB7SSYK-MY#],(^bqN-]\$Mld14Sa,P1N+]6Up>b^^:a112C!$lHTjgLSlm?.Crj1LTRDH+,1&`^Xp;c06j(na'bX%LaTu/k34MfVJ3"jJi)6fErq<f@C[ff7POgXX"#FAM5k/$H6kb:9O5P0ZU$uZR:oSLf0j^WVODa+QdDc.+SG^qM(G4-Qc!FB2n`V)%bZi15@FfnQ8/d`?=,2b[K]RmW2<83?Abh(^'P<G-pe=L3oi<hDR"[K8gc(F3`U?[hX\CgO2=GL5NP4TTqr/sj\i`,SX;Af;@Fj:t%BM!8[ECE"]eqUZ*V22ET6beso'I5JQ"j91p2,kk2r+Kc4*k$bfEL%@6gfs6>a*02'a%+GIXN<S]i^)XM$)/d5R@k;?lJbZ,V4&HI%ktOo.6)u\rH>3ai!A**4M%>E>?qqk\(W)\`RJ:!LZdR`sRajt^Cj>E[/@gc%Y7mOT#pSaF+0-RK4q_(=%joK*]W&(J`6[,":R/6P%Va2LS.hTnE8q2aH::lC0@Sf6h0Zt,&V1M6%eq7'g<ao%'gJ]'2^'%-is5_cp>I2/F+qG=27*HR5h@sMN,>[N#Xlqo\R?3]$c#;$4%)PoI68C_s@3KVTD('6W+dE'[&+`CjZ?1puk7L<3.VCce7W,F"$7Z1g9G/:)"^--@C4rL?s4qUF/G;*ma>;^(!LnF9^^0q[qT;1K@%W8Wko'M(`"VIL?!/EseBMu,1(n@q-5G@k=g'2R`2`[X@iRp/onEKq>]Nm,MC0(nP,P\$+*@_#ht(TWYPISFjf,2g:NQ78sq%F$"J%_3BimXRA@!2Xi!+gf-_5LNu4s4\BoV]ERBo"FQ^NZ;1)nfhCDG6A-o@2bVNrS9-eVG?adoO!FjaR+2h8TU\&GIVkVXp%F'QR>FoG%@TZf3ai#Z+-B9@InhH_TeC'LP)`5m*je]D!eiX[_G'^#p("&E&muiN-J8R:t'.ZXRA7AQIG;9QS0Pi>hGWlsHQR<$%f_HZ7p0Eu@%<@"+kc-#5ur<2-%EI9H^"T(AUg!8CDYR5*0)Ygd83'&$^m%,Y=Ejk(>>'_QdL\8+F&fNJ;.gREaLKRO\"S)GVkn1Q+4Z$o*p]guu%UMg#C,<\[Cpd+<FVBGSZIsrE>:V7h-KME:aj7kb^qKl6n.MZ;(D`YX/k&Yb_pG)HY7*KiFE;j-eD^Tf[EL`Ec$YMfN04L>aoO*hX%:Ind3n@-TdA$AbDf;6lTi)7UJ6TsQqP8N]*9K)H1#3aZJZnL<:di>mge.>tM/A#>^Qm>)=Y++0b=Pgn*,Yh#<dm1Tj6nfut^DA7E%lCg0m;*Xo@h#HggO%eucgbo#Q+YLV/1CC9rcG)#.Xm*\(QeQt\1Qt,lFnKK%]uH.5!Q%`<mQ<p2"omoN3LEO-V1.1jk#+XOZ:#0j%oC.k$93$NfZT]1!]ZUeZ&gcKL3:#sMoe1g:/h`n*jE`>KI$W`L7JJ">(c##u`1%\.S!W$%/?i:_c$iCH)3!>'lUp.SFj47a>'qGA%T$0lY]WOq;6$2WJfX]l+&C6,+8M69(7]b*8,jGplC0LV.kJn:onWF0(a)]WsB4#BtpWX-/WT#pAbj35*[]"d_Kp#aY9NTFhjgd/u%Z0_R`p"`,m19OZc"d456HH+)%aK")nT?,D`_4j[$>:\Is;3-!/E:0u+M+RA3RN^P0Tn=e5bjZ(_ZH:$fCd8=RA_'kr+E6Rj3\Jkp%SOOcIopLfH*++k>W`<Mo]GGLt<up(1o5?k(7*g0Yf.7Wn@_$gr@_$jC^Gt'*02!OR\U00YGJ_sYN+8mD)D^cCCM6^M2to`l24)6T%EsZ<R<Dti.ghjI68964e0B#H#FX[n3jOg#!/rLkLOdPEsR&M4i9rsOP!D(H]2.UAQM+-]9YWc9bXTlWupu]KFKh7^b?Tj-TJ^%)T%Y1Z_I&g;O@k,E^h9r_:hUGdQsZbY^S]QaG7/@A1K&c6Ge)O@t$R&046LlFVi_0lgTXe+`=PTa7p'9jRoq+b6OpT!\-o,F"FWWmNM%W-GhAE`C)Z>e0QWN+b3MO3PSVhK^NW(HG'`.PY"Yi_A0N#HBD9hb0fG<([j\=XlT^hXpYiTi?`,Z_i%DV.qd7L#P$b(M`fpUF)j<%eQ<lYdG@L3b%of1VBDR4:$,VZH'?0F&#m^;:>&":-4=Kd4HujaT>u;qG%ms=dKgH5>u((Vhb;%0.fV(q`>\WCp.uL4\=8aVFnl3f%-fR48B"DK82r44"iqIg2<H66Y6L+SeJ](J+!iA-mW=a`so=bTHK^pKr,ud&$2lVJ1H+0\D83F%LNNT9%pgrdU/QG,[>(U08AMZ+S%4V3cS#Y_Fn>U^ql([Pa=L1^*(m\CNudgJ6P#/jdqVk12?jo[Z8<tF&VD*KmQe7[c&@:n*B*\f__rE`$Xa8]aCU872MV!gu@P)pqu%<n%%oH:3M7S$e70?HjG><C;RJEQpqPTc3eBf7BTcY89n>g0l&&TkZdgW>^Z>-e/dH7XY/%2["/j0n\bG;RB=\"P3T^bn.ta]J7;0%dp+$06@hg/"1`"L!l%jb-,W-FKJVl1O/;ip9<F>;;S1Z<V7Ih3=f@$sr:[G^.=GF&cEk9!JpINm)8^Og,8Qa(m5^1B1GfCbc;.o`%+n=9Sf\Mf)2=_<*3@]`Bc;r!XgW`0G^u0^PTntL^>Hc$PmH-\0hnm=F-0*`EjAIdg:W.nR1XkjWr2(Sl=)l0*Y*UL<#Y*K[i`Sl[%'Yb3iCf$$fgHQ6@4(<=a*Z8=JPN83hf^ED:'D0XGKtaB&<GN6Y_Y.@Z=](AnrZl)Zd<nklI:nQabKC"RLWRZ+^5,VoD@G!PndfD6%M[5Mja1hIPq@iCZAZ":UeeLU4k<,48="=D+fW?bdhoptTcbjr;aWnVi1CuOnJWL9m3RV6&M!$c[iM7_VQ"f-4I?.-A<6BsTXfAf'%!NX+_pjq/I%KDs",MkOV"nkqra>NY:L?X2a'_[$pg1,@g@4R&Lbd=0cn61SR7IO.[O<eaF;i>%T%$?t=-iuB6?0pj6Rd?YPrk;_p%T#.G#*!oA!>3*c!_Sicd0Jc"@bB-NEk<j`GNb9-_aSVJ/mZ5f;O.,5#nN)%C54XoVi-`^h+$Z(oIlG\n8gD*M;`R"n1o'Xi66i+i%<A`Q#`-s@pIe5D)9X(@R?n;aX3PE#W&RD!X<&0GM3"q75jH#\E84\2l2J>]K/.;+$5kSUU<-j-\A/1A`BLlfg]!m7.eh`mt7f4fd%e=&hg>smM$oY(K;5u8e.FVM5bo8H=h\X@'lA_K6;YZ[s-Ti@h*EaeiGKu:];k^:#r2,Fa8fSl/ca+t-!8Qqq(Psj;5\t@qZ@a#m=%jJ<pJ;Kb4DYO6Q`eV&=l]_$SJ/X4k%_ZS6VKNn/NNPiWg>\^8hK*9dD@MRoM6P,c-X%>`28]JJuku#A:2o,mSC2EGgS&nU"ai@+K%Wha@.\@XkK'o[?++']/>.134Yno%)fHZ-@oZ;DduVt$'q;lV<],M=S;m]+?jie[JXN8=JZlhhP&72XoMf"hGk-[YDnlN^NgoQhUm%"j;hSI+d+L`KR:;?NlW5'?_([%%]mT9.egMpn5XqBc?+Rk,=O,)UD;YEB(Foq]o6E2oXB%cBKcLir*$A&AI;i5WUqOGhB)Fd3Qk0%I]EY&P!hg[^5-42)_.&)`%10sZC%M_<A(gm0GUF?8@5[T[!EO8Y'E3UERG'%O&WC4Z`EQdpPL:'Ti/@SLS]R\KR5VEjT*5gg@X38%eW,mpI4Wg23kK.1FtnO;eW5"f\IEB!#GWViYr/>s?+4(EAH,YjfCatkfKD)M1Y-Xp_i*UPKRj&hriK(+P+bEn>V2c3.2T5?^J+on%F:[No9PH3l->TSkb4%er6/(B6f"^=WX)h%g04MI:4.)tImOPbC9jHoYYo<eoALP#ta:AqUY3ee/F#cPC6#=Sj0QeSQBXS?_#t`>%%<G4<3f=hk@'c>a+^BmUDShIijM;<%JJg2tqH[djS:`[S-7mo]r,Zu$%nM`U$NQY!6(TE6,-Y\c45/*1J$P,1CV\U>&V%c^o,^faA%^58pGLRG+rkoS,%g(t@s302u60s!0JHDQ4!ZBNItn\L2Q)7:RHIq]7V/@.,YS9U<=f?%abO7oHJ'soQn#cHGo0X5/_Yp#FL+W!8O%+dO:IBdEZ!*+nYmPCWY)?YQa.42J:\b,q?!fsuEH"[U^Vk9emCOmu:b"i[]:Y4f2$1So20"lJSV>J[qLU;?SUaaCdOT"!@39\Mqi%6T%o-A0j_p8\C4U6'0e9D[+$]oo.2^0FNh*F`THR)gYriQ)0A+G5?AY>.WSVfFC*[V[Z>S5pY/dMmeF3/%h&#&-e&H0+91UYBTW-%m0G#_ddXTMQEoFG^*QI7HU;2M.E%.oB#@-ZD4]]CK(-Uf(3pe_FkmeHah_E7o#qZ6I5(6G+&&"9,`=XKSq>F>VmEHCh*_>%=D3:T%@f']l'&.13#!;29Y!]ipc`PRmR^-&D#W:'@_$O#FjU<4bRb.OH;saUBk^3[M,+`@qMrg'LH[+\,2t&:[d3:g#3>XLA\X/^12aU@&%1/9#J@!M6rePo\,Ot7J0ZI^t!%9_<<)gEquOuq.K(lRY)lcMW]b*2.u94OPuV]'mBK1g8tHm2Mn@TLlj[kCG;*:8tTmoOCq@$0%>%k^QU3VAYkq0-GaUf&IJ88Ek7M5-*IV+Q-FU,am5T(tED9eG,f^g^l0SEiDD)1SOLt7]e^4-`<m"b:Y<$44<Smb:q@Ia\7o74/&bL%@N]a,X>\1JeL8\ts-RI<C0GHqf'StLKd?SQ&B&&[Z"$if2ILuWPtW$(/_=8G+j3FH$(D\LQq,D28Li)jH0/s(bqcO4eAS$=R/1'U%2McLl:@"WZer_]KSr66!$V'oRaO&Q-PCRDB[G"p@-'kYj,XKf+;W:F87%_s$PmW5R<sJ_h@TGpNF;]Gj/XaWhdU0;*9-,;e$Q5cl%Js2`$,oB>hC<^.R8M4k$EDV_(XgfNuY(+FMX(N<56cniq/t$PN*9K@h6FfcG_[9F&cEaZN)0UM[[[OJb8OWSZ,:kp0B+\@<i[mRZ%\+DCb[lK$$Mo7*GdZ58"P8UK!'O#cL?nZj)1``JuK3KB)4u$9u[i#E)BbsRJ^W@+I-FR<(pgH)*:.Hu"A(`Ci"8`]>l_/KnI0sQE%[Kjk=@a;oVr<LgE[_1bok+D5K(k&)Z0t@8hj,ZZo<8J^2<I<uCgchNi&bJTQZ[&jDE;c)mM>\L?k0ZIORn#EWPL7qLKVn@iX@Xuc%l&^PQ-'tN>[mSHY<:LWW*$b_k[Y<.49p1%2#$`a!St.L[I1J&nE'NEre`!_qo'MMl43;mK5[jpr&gu%adTgpVD*Tq!>Y;:>jV\:<%fp:pYQ^ogHMDGb5nEe;qQ\XdA)D+%lO]$TTVkn9*Q'l9T0^,5e%WX"S9dcKOO;FV^=m0OP=-@3d?ua3&2qLMHR\S>ZP)"$WR5^I!%3"rp+P;>r63o_LW1Cd_JCJNb_6`CPPVg.jWjs&=:HGXq@Jg2QM`k^B?QN&YVQ4E`q(b9a@,q<M5@9PIl,Ah$0@e8F,PgsLe@[gAV%5;Q`1A8\[VPT(kpVS`ZR4%IC!;u*X>p+&7/Q7;U7e1r<mhGg^0"Y&1Ar"WgE6W;'E:$3dtgWm<EMQ3SL>-CNs85#q_H^5kM!SNiV%Mc(?"b5b;ph^;>C3"lt#V6T%k@=.^NDl%%t[L@uK($)ND1m<i2I87'ccuW-l/fnOq";^u"*1c@L"M.*^\5\A%J9mHA)WZYo)0S$'%NF!6V9V#!(aiUlR\)Xn(D6Sm-nD:<s&s6V/&Q7c&aR%rS:u#rFV]D:VY/[:ZaV0jtW(4%c6l3mu5[JlK`"(8mf3N80lXcN5A.R*U%TTQ!TU(e224)tnSo(JQFS!ouIqde:q7n<@@0Jml-:EVV<Q[4lnj"u9u-@ai02m-_FX^1T5;jYP%SI+=>PE_%">@qdn7:N-^[Ud+s%8,l<Y27;t9TTL+KBQk+PMF8.0,8'%D)2[SUIK)#7OT`921OLtT%H`e/@.#)p7a,eu?*_r9q*Etu'$cL62S2*-]ecoY7)U8\dD7(>%Oa=[d8e)65_3[5XEbfoeT$"?<I%UWeHN3%7n_RUs4o@"?5XZ_19#3+F;3Nk4qg8,)2fkn%;H8LG=RseD\2>HCdD7(@&cP:==2W#k%s)`KsrKa,5Vao@J#5UggBR97#P]!+MgT3//j2,5-4V"1gMX3ceX2rDK2H[uRagu(8U9(E%XMkDWEI\NGd=S[,9XLr?Mb*b>Fn69O%Ld]6NW8k^oM7Gg6W'[_eB[uJ9#>s[Y$q6CdbtSj&64o(4W!U*>,*LhfMs]=T)A`W#d@meRHVJ0&(Zd?SIhR(`F%s.MQpL3QB4<'"%h'+SCpEAU"9$M04L;LBWg+3F)=**u>Ts-YZ(h/OZm@ol.`n^0ORC^9E$hI.<%7ML3^\FoCjKJ844GI!ejHILAfmFu]:<gue_oOMe%6/qWJGYE1[io/jT4ItJ7Eg;QoL>Pt[iWCpm(9VFt^dMIrf^GYd%Jm0qEuK#Nr7L"#k^qS$qMi"s?F$No:62n-p3Z$-(4FGE'E*E[%"n<`LaP>QE^=5@iQ@Z0+V2iN(S+/@HY"L<Sm(Ua)D9C]*]JQf`O?YK/eC^6`l+f!NaHrU<\uOH3*T!@ZPIYK-7*L8.me;N2.KZ#%%qQlW!3Z#)ULgFU;IIrr,B77M9^$k"EdR?Cd'SYaTlp\*bVh)0+A2=$e-Z]leI`7WVnT_38-kLZJb]O1[0UaDWksPOr3f4d0prL^O%p:hn/4pQ]8(31JtFq?u&f'%>;df_It'_kBg351#o?Tl9AHkGCW0%a"(A!0+0E])p;(;*@urdj,1AZ!?^DjmGk`-s?eM<pk),dJ6H%8a?7uo&cU[0&Hr1YU&hd=Ki7<m3E<%Kk2R#"KC4IOb\B@pX"DGH?dAk24'jgBjmJ:S&Q$ggP!88m??$eInoU%)<mj@9GPTA9VQ,'%;@D0*N]c?JO\T0AQ-N/8O3.EYp`>KaaeE--12.BkOQH'o'9-!eq/jXDlucn8oX^nVH7_;lP##O66#j/&Ud]ApQVYA9AGHWSFZd4Y%qXc"h3WtA0\r0dUWGWA#K&3cf1st"@TqBOloH@Jogc9KdRqD+W9A&%\,H-=):Z];+&TA!R?sKbo#0PG(O3jrV(4C:CYK^J9BWPUh%V":^NmJ!p(QCB:!LLI!Zh1\)81W2A3$)OcdAks9p03J!*1=7Lp.mdu^XLr+AplA=Q_<!U)TicSJD-A=jS;C<)2s3.HYPN:L`a_H@%e>O&nNL.](,N]0)dCG_A>*2&&E`I1>onUc1@:To.ZN`4V>OWtrN5?ihcY"l5QNsK_Q@\XpWA,5'%?%]7B!>C2*]srfR/7J)O,4(e%A)b>rP#8p\e26qO]9),rnbg%;$Y8ah7!fNP<i%_YO`W<?bAt:j+.Z:$]OW'H&+-cP#g'>i<D>3bLVp$N1rjL"U;<S_oA54_>Kf6[%gQd<EVu.gVr3o[hrIU\ETZF^g.&(pnVnqio_u*d)11,j:.oZ-:*1"&:FO!c_F&gEPh0/-CZ8>@=4r6n0iVV%DJEBq0C*O,?m<S$m%;oA5IF6Pj/\*rKjc(3[oFb%Z#o1&^M(:S`pp<(cpR+77tEfi"/g94hSVU!iFcro8E](p27hlYo_+)T`tW@[Klf'-utTP6VTrG@i(%#qf($o^H%+!sLN+R>2AAT6=Vb644*W>$a8rWFk/X^I:\+@?>(["_u$*U#^C30?mSTQY*_JCR/iE!"Ye:7b9G`WlH)a9#VpUH!Do/%K_2YV<*fBUXeb3:Uu`^nC0a@UKJM2e8YAk;4711'e9N-",i)8*;8g^pE?2]?L3PG_*FV8%V'(&*LQ(%[018dOG+Y)..HU#O/SdLN%i3RR<3a"3;S4mkuO\0PsUG']eCcCifo@&PBRqrCmU!><_mE,(O@aBNHDG.c=/I1bl\b]eK^ZWT>%pLu>Y'u4VDJjM6Y.,$@4l4tt%V(Qu70ZR9eGIQ3_:tDM5c/T>o[YW/o)lkD+RDeP_$R2k'M_t\sSG-E,%#G`tf0>@q"#6jUjZYgur*H`Qc9^g"X_guib=4/I$fCT9%EHO(iEn6)T]Ff!"ZT=+E#e.8>8_h>PmTYrth)B7O/J>qaZE@8moT:EEmmNTpEp7HLD*qnP8<bQS(W["pLaV1/1CR'VQ?1LDBS\Kd%+XNRaKNb@G%^Ki(nQ(FTrd\=URLtCG@3fo@MMKhQ0b_++,s.%l"+nA?)PM!U3t+p:`c`2m.h"KJI$7g.a*Kt9Ke&g%!H`j/F.m<k%>aSrmTmaIq1CP]0fVe69=).Zm.[SoJQ)#-aYcu![pU+L2jZ`:DGE>a[Q%BI/fk#sS7KBa28ENqi_fZL(/3jRmId4Ici-R+t;*=\[%m4dCmi4'GF7`7H(-2oom*\&5Z0D7u$Hsq/fVVju_2LHaDV;-pCn,G[kG?-XmoRj\o)Da*C"1["4#n!b*1ZiUQHd0\&"ho]T78H*k%q_n$Znb%R'V9aMF<6BWPpcY5YT3Co.TBf'&1/<a?aZ(m;)EZ!<`CFC?keqiTO1I*Ohb3":an)GKVp-pIN@14KR!^#j+NM]@8qt)H%m.\q30fkcX-<U&;'/O!;8`Jlj\a102HX/VYC8iXS2ck+KEN3f6H'q/d4Rtq-*09b6B;l^_\nQO242*10)^>B#kX:][cW!U1<&IbF%o))Gjc-*fQHmFr@9J/2RaSBnO3=F0=F/FT!SuRt7#*t[KWoc.!5<i0<kP;[Rm??R@"]`ii@Bl"21DPmlV+!ib9t<P[.qEn:=b'E!%)b6s>IFjrYX(6L_$5Q.4\]rhZ->k[,4i]:j6R-ub]=Fa34"ZY`fTCrO*j@uQ)J>u4+X?6)oe8N5EN-BiV%XW#D'&Z-P3D]keWqpn%VKr"!q$K95)S899g+&`)6Ioh:!aT3IO&@S?3ESU5if&RPWMoV1$Td0K#+`#dKSTj(1Y236aKZ)`<t_X"bG%p()%T@Wk9gPND8sD@%b*jB6P"Y2[@8XD%`t:p4<O*2YV+g+1aa)6R,N%$.5T66(X7"l.F]_)2H;<Q<rmRksX0rR$;2(H.=NaUO-#1L["gQr`KibLa0gZ[M%MTm+%3K:(ScHc>T5KFRaek53`MAjuaOD:,?:@K7k)<XkS>2c#C4]OS&fX>XNK`*T.AhCWp-:!p^X_?P@Wks9eh-AsGN:&juRLXmA%Z4Z8Fg1.t-"O`'7o/<pOoo"Z6F/!$s%X*5VNptY=M_4qnT%+2BB1'G&R(?]g7.bHsZJZ%&6(cbpWq`7op2a%EdX;VH[!HT\R$9.T%>'im_L.oDX%"+*t2=!/^^Y1W)BWY1Cd-W/<Q`2`mjHRJOF6>kRD7S*-2A"2C5!aU3r(7YAQWZSRf)GC%Bss6ob^Wfg$RWW?QXAle%+Ft&VQoX6=r#s<WJT3km/n4CqYPTS%dZ!-C[AoJUE=-u>YQr7#D++9'adm:7HM/s[VV5ngA<P<c&_$WE"ZnaQ2mt5D(smYd]9Ha%%\'e9W>UIK_'*5$bgUq+FYA(HRF9H*:nZi\M.7iu2$8BE*R7pLM3"o3F`RTfODS(It8_e/khpa"t8*n^dceA:]^J6%$+"jMEfN^?,%?'ao\]1&sc^(&P/GIj>k[g6fq1Ic2`C[S[)V;Or%b_n_q%O]@a5Y)DoO9&^cT=ph&?&>(]0T?j"Z@'KT/HGYAE[MC>-&?i_LO:Uu%0Vu<H'b79K,YsM;.(PZJHk<%C(")fN<6S"sQAi2SZe+LE\D>%_eLO:u,*9A<U,5"cO/l?D0[W%MFA&p*W?#[4Z;u_+YYs5-U#st@%efj24D#kPH]+W2M,`''790:7WaRc34=kI7io.8E;Lit1J:lf;q-!.63/4P`b<q&CFC^ajt]Oj0a#0Wc)B;oVBgsE0rQ$q-M\eW`-%RQ\/2<tIErFLIC2-?oQj>&b7FQ/um]Z%_?.nuXiK:gVc3;U:#BgKGhjPlRU_8`lHV]Vl:fRNP;"L>%O`,5PjFV@I19]2c-,gAdsM%q:CqmLk6&YCo!l@EN&dIO45``p=UhMcb],.k5$[=c0$e?.[O87M'#sN?0n[BMG[-Pa)RAic#1'.c=d/WY2B9UQbP``Ep!48]kV@>%Bd\Q<qY?sW5-ciS1ml_+Co:]ELufErTg*QLTSB[QQ'Z#$c3p!%$a+-TRJ-E'p0Y5VJ,RPt++K\VS2WI)Nk`XKTctH4I5iDR8j@uV%1Aqd@htA/j&=tM]>?tM&@O_.6R4-!=1eQhn7J8`0pjJfe5L2];\\G(:_+q3(>DR)Y!>C*[rHT\[(r]'U%(uEhbH@\>kZbhJP-e>(%,I!k@TN\jQ,8.A!-GacJp9@aM^@n+"4Y^HfPKU&d9:%4mYtLYO5Vt4G&A@'9o)D<DP?#_j/3Q56H&%b48;"KiCNa2T.4Bc*J0ZBg%c&,0XOsTU].5Fg7p%I,>^Dd!oh*XVC%:X:j0XknIZYVMRn>NZ=<dIhtbZ)i!<]Z$QEdt9bL]9![H/=M`EYK$C^uuI&4XX9GF"=Dm%Z8ODlIB?iBT+sE^Tfu1dM6E3;_29?6`/>EkR/!s)4n&lr&!!^sQ'?"LF:3+1_oa]=gPW7.Xn_Xmau!>tC<R#b%us0i^nobf-ckGM%8't:p"D>L(md[<qlYV:&)4kFn94\SpWARM#Ql[:qPoc9?0Lpd[KTQ6oGg6_'V+L0@h7ZgAnMJ;1[tm:u%4@ikF<@1ds4pW`4j*;3%+gfW/ZHTjipS#RG)L!gHMslFFK?nKaepFL1UnX:NYadaI+=+^gm'?C@+B41j(ZZPRQYRFsCVTdoWI%G<.M0%2C;Fm4XQo,MbSB(a%?(m90[(lNo1`eZL8.E7!>a9\:]0\Lgba+[DN=OC8R>1.9'.ZRZ6tU!eO#_?,h?IqW=kVK0$oVRg>DBd]Nb71D5hpGTd6TF2/:)5(%:>@)VF9plA?`8*o.X6/#Ct54!?&2/Z@68i[E$Y(n2"C&#[#sLWhpelujpDhSW(=4T_tp1cG<B(RWZ+aa].*Z%_rp'iY<<jVpC?Hk%%uDEHDrAP<RE#u&<4PIqm.e/TXnS3?<p5=@JQqZ0%VedN+q1?lI:'l_DH,+1>fIa)!i48.rZMD5$tfU/lJS/p-'`m-68$/P$&N>b%`u&d(YqTj:ioaD7E-hWR>M,5!#A]`I\g,H@!PAV,!D7@CjiDiRmJ\ncQsVKVkRiQgXt!RghR&,sjU\fM<A`d"[GGkVb(KRQmdS2]%9fGgX\LG3#p)k=I&gPD!s0mZTmX@\W70"C[\@@,J"/RRIjl'08;S1]-<2Y*%6Va1&;A'?,C]k!tC%ct[cF%F9++19H)g*V8Z==BP%03e:^j*Bs5'Zb-g*YH"n.c*pd>EBJte:R&AED?"V^T6+4Y,Ub5X#V&cMRR+t`:--Dj.O&/)&4:-DdsY4cmYlro]W9-;"8]PY'<%]%<7ka/]<VZE]+.]E"Za`u1ZBbf7FX5,7Ut=WP+Qg/gSJ#Th^U2MDAPdUgP&J![N=DfA*Vm%R5Z?bQ%XIm$ZWja@8a8t1c"`A_-C%e%CPcV&,G$G3RS/aOWFV6hC36#E;Iq3[Rp*;<>jI]X<R+789ZJsB^.p4M_R;g1a\8DZmH`QdU&R6J?YCbW&4Hu5Q8il/dC;LcB@Rj^%G:cTcKPP;b'>cr@5H3/XfZR'HgGge/RM@iR)Idse?F9?1Y-M>K9-[a:(g7uOLTJ&+V$AFNgP9\\]M6I+@mto'_;U_$%oU?O`_+)j%73L`!07jX5fXUV,Ah?Oc)#'UJeU=th<oUB21Ir*\pXn.-;?X9o:e.#k$+eXS4+FXqhr(dTW[f9.CGcpab2NK!LF!]q#Tdd=!hUu0%]Us0L06JT:XW0dkQ_C\E+%59QqX/DCF][I`*(.TUOPrN=P3O)"F:?P,^lRRmSI"T'X#<?\,X'@A&;>nI.:LqFZ$P%.=.#4?.[+l8%eKB3e7OR2?nL]^9M$Qc[d"<"RONQKLA77RJ/NaWtIF@g&'#G<%^ig5N7%JdiX',*X4;!?pD!=u@W7KH5gl#-9.h$oB)UFnk<2r)@%&]kcGP6E<84.7dk&$f&u))!Mh.s[.Z>p8155d4r8/'KSJ/*qtM+XXH:-X@fhRolo,6(_%T:Qu_78;gS=Zt#A;gt#IhQ56`'UeE(7%nXQ1$a7UG+.`4?rN?!Yk:%6l6`CH(hRM]ae\#(p-L,A%]lq!&eL!_([jM(>Y3^;T"kBXhXlWQC$WIDF^fD/'/2*6:SEiofAOWc_2%am\=rB4*drh5;s/2hK!X0akCpH=Y03`=nhP28#lL1h'Z+c-2PR=*n$E?5g(?+/KR=oORkt8&-X#[Yhb:M9tANl[VQm_di`.kiW:$%(=Vf*pUH#9)srr->/^hiX4W<Mgc1"V*/f[YqdL:Eq<GVnZjSc`h;rL\M?Q"LVfJijL!_An+Z?4eFLuDA1-YN0Y@I)gek_::#?#n5%IR9dmJo!+b,C7p;1*rJT4Rqu[dHfub9W$'>7'u!l1Q+:U/P>Pfbi,PF#>gXbM3V(rB6uD\ITVr%ldB,u]?%]6=b^HidRK)R!k-`=%Es+tIC=C[HFQl9"_V?OT\[g+!#]lpE'R%]4'jIYoU7Qoc[2sRi0rrq1\5hm+>-&d+f@".\4@)Udcgp5eV55Ah@'o&uqC]N-4giU4%MqM%@gW7WHb0'3G1gG1BRrF3oa5r4MYWR)6f<ca-/+?9UFbkhW'fp"&:eucVS3GkV\s[*K(Dc0'Wfbb-9@;V-.,rVq]r#uu:Qoqk%E7G?dE7M-L%R&9%nDY3^b/.-dMiJcR0ip:9+AH,mfLP_R^5SOh1Kq1?O&etapJd2-%:\:$B!c;PISdFp7]Qa*(QGH0]HV1Q46"Yf%KmD<bk%%5VKXcS8L9$Vpb])+L10c]h((r2\A3e0XNZGhS>cuYRRg/Lcl`$inO.mZ3Z38?YC+_e/kr)l5O&I[`(qMjgBYT:#lX>oo%0smcIKsm2R:(%S4/^-R^0?!#pKLG,_`eZY)j1p;k<W1p43Z_YMRo%WMU"X2=1.,&;[X3\l]<=qfS^V[GB]%C_4K98S8?+_STq5,C%)6-l-#FK*u/O\?X/a)jr!f]MemKgd1AS!WpkN\lH)Gps!b@KF'RkP@,NSh5-f+O:9C.Ub#3hU]^qn&aUme:kdPU&Ur:U[kg/`q0O%rQ.OZD!<tR:o_r#;&"EP:t;c"PB1,!=L<>2E'_jfGdILVB-/GSEYZX1`"Q4=X8dh=ME,OoUmp/gn,*KKK=s$%-R#B^*SE"$Mj)U,%mQXcJ:.TU*1)qJLYeqQu64a9#rTVN/61^Qh#T<tDj!*Rr":_Mb`_6pHU7nOer73df5W>Iqo9ng$F]len\M&dN"!P+C"V)%td"!0;%Pab#F[tl4Crm%.()4EJ#ETaA$K0Ckme,.UHCu:PE5G-a*/]<u`7GcFi5GT^LYN7H!mdpFch@IZc;$Q2:E@=uN9M0=B$1i`icSrjp%8)%4u@<=o=jXCQ=Ml.#J"cXb$/Vh[Togso`/fI#;Pht"k-R7KE/1A,:A3h%gh$p>X(e!ALeg:foj(\pR^b.o2Z>46%.)Q<"LJ5-D%@:U1@l@^^%5]rm'YR<8(I*s9+$e;slH!$<5,um$Tm4rAeAnp!egh*nEln7GYj4^ipTpGB9Q)$AFU@0e2G,P%kW8UrpI]Et3q)#A]%9B3obXchmH(h-L_ZKADI3\-rSh?$5KgO2=F)Dq`pc<#kY*(DooQO8qJjU\W(SaSj%:N@*`e+@'$(+`(6Grl>lY<#aMhgGj\3_)3.%)Kh?e[\&oF*H5f-M;/eVQ;`X*EuGJ4Y"<t+p>;Pe9P,*U!-Mk&hd0^&C7;B+h-1E0K(#_q$[-[%';>QJ]fQ,?Xs&NlotYXl[:o;d%m@"5+benRT.9:pM5orVCc'?8FEj%1Kd]IU2GkNKt&P66>(Td:YY,OPUQtuGZKOKFIpThH7?V9]l<bMk&;CLsbe6YQ%(Y-5F8qa$%%Vd1IrHeHVI>L\#i\ULJ;on+e)-chTCGUBEJ4'?7lZ@]cI<V4^NY2P:Zh$:$UWQtC2j0=7r^./Bp)SX'n_j;6H&sa8>.q_7LDUH2I%Cpr`gQ;4?8n*;Z(&KYK@?09\hJo'k/-saZW5n8<gKDW<0NDqJ\6Zc&2H\a;e"LrW=S'g^3b[/9;eqO\UXY$MU3'OSa?$K?ebq0,_%7b>LPHhn:?dqQPL7!)Be_o?JQX-BFup3Zn0^F[hnlBSkXMM9FpM)js3`Xme(:W3_]jgmAs@@tEDRA6jhU7N"e_)j5@nWq+f3a&P3%=]QhL<`rGK:cXeP'sCW("p!heV-,7^&h/Ge0.G,gNj=f`Ag]SAUM$uOP%Bl\AHX\X&TTrWAf@aC0ES_W!P.Pk.jJY<W\_M0F!sd=%K6.E`@aQ^\=M([7;P0s[Mm[aoRVJ?c$[7CfpQbNOUpkNrOBm0JLMGJ)="FJ-i+Wk#mH>uWQX@nj1(t0[8*)FIlV0L-*+Ke3:4%pS%'>Bn"?5TlC)$NPu0L[hf"=S.-62OE(^p2V(H"Ws\9M\'O9R`M@L.O"!7@NA0W(7@V"I;Y!i0C*`B;KV90b'hj'Y/K:+7OLgF43jL%_<f(W]X-%CjO#4^%)p+'#L#8`Uj;.?B\pjiH?bXiA+TWP2"+t;C3U&h<)OBuGJ;QYO!,;lZlVlfbrZ_2o1kB_]>U5'9t69,p12-u%'Ue6>&tT?p(oN]O*<*I!kBu_,"4'Ru"\j1SWHR\iVgC_!WA#(BlP9pl-V<($"jt,L_fL#0,?f>4Hk$Z#j;+=\2;Cld(7le@Hfq,W%Vi\:T>hHkoF/U_'B/Wq<nr^.W4,:A+-]5HY[s4d0k<^R*>tE8KA8^GLG,"OoQuC-k:*WPV_K?T%luUl0\rGkUo4rqki<`nPk2!n<%@j:7bh80hA)]hST@X)j^D!Mi<g\LD^MEs<_8bF2V>u*ADrWB=#"=N'YDU$07bd9HaEI$6tjr!08!01sWak#hH\r8P=12XqKF%,80%7<"TAB&lNKGMCTfPM`F1R?#b;P9l:"h@sSDEg'Oq[cFua^Sg)'JY0Y\CJ*__&4A$E%K\T-V"P;qV0X[t\+8V+MOQHV:5e<$jsNK1%^rYPY>'V_NL0]ht_&tknd"%=tVg(sSk#prdi&Of?:GhZj?,`BV_Ta\A*Zk%@n;$LD2KtG5M\mMfW7d]Zh?f5K+e5N*1OJ70A:lUk%s3>*dp<b?'h7#AS=7L]Wl\gf=YVJ%)nj9M&+#og%&=pr(E!fh)U?k0h2qoKG?(0WMGG0`/Timd(Xc_)8&c.g^`PGj'7J<^^Qo<i3%AL7GK`*GZ*7DSg\3\c>=IAa;S;E62'-+T*^*rV6n\Om!8S<jYOl]4E:'K>Q[RWg%39:32gjHP=\6G6oC\[!<0`Gg8So>;[)lO"/`%c(:!"4DEOB'P?48%7ub)!"(DsI!_DG4=TARP?^eHfs7)#<_BG2A5UZ#:-!i#2Qs"LaY^/t0^69>\:NSUj=[o<Hb&0K-&Knb15n0@%MlZM*Dl2DVKMC-l16_ZBOIHq!iT4k7'`D>3hDhG81dun=L$U95">S)Y[j7c!PD-4O3Do@AUd%HN/tR@.,5k03m2e]]%5s-5]pOLu%9B,Lu=^4e/W(QoM!:\uS/W&iUHFpapRp\rrp[]u!+pddl_GminPrYK7lY>Tudj1Da<?4&B<P<WDdC\\_f;,k1<FJjVS]_M3YJP9\%9d4f3aeW1O;=(?.!O)$_QCi*jkAs9AOnNfBX_RhqQ2()cT7qlLFBN?Ej:CGMn4Mc]qUaH/Q`Z[l0EVm("R,0H^c%AWK7eSIf!(5M%g(37_P<Id`pFf\oh^>"&\8cGb`O,VJ&8dG"h-D;3*>Y0M+Cm:AfED"irsYV9]Q24qe__`e:."_9r(\(DBh7FhC4i;DHcRH#_RO8<%C$(JW=Cbu97;[K(5qbj'nrAPH"Ma7DM0c%V$GQQo-#]<0ac*8kJVb4LqbDg.gGo!lo.PP+4OC>54'#Jh<pojZfHgt`#chOC_pO.!%@M^`q=Y_&FRF)%LdnP);QEN<RlLKp-;U(*cpPSP/V.O_`7Q]NT:o\e"rDGtISl-fk;LoT.47@(!L)8&V5M/^NNfn.$$N^m\\QK1Z%"-@`'#oU?i_aU=cjec5aRhe,8[hZ$N!H4rQ]-L*nq+rLUdq9i*ZAh4aS,'8jZ)HMj1Xe)jF&,nWD)fiY^KfI#HQle6`r1`-#fqkT%OpfsPZha'QQ$]@5EDQTY)]#G_^Z/T>jD*`GhjKQ3_\H5-64c5bmOOEFk3T=-+uU.q\86phgf`bsM05D(bKNqA4N[DE=T8Yhmj5S^%7"FpXI--F;3o0]8CmXsA[I9MX!U@luTXW%cL8#GJ7fgkNK7%=8&&-EpH]VOi1]G;S,%i36"V+uBcG;&dBeZ\@]V?p\(M!*od<"79%[^Q^(LHR$P9q[R<cQ<O(M!R-.[p^(0AmS4S5l2GBX$'X=[EFlJK/-Wk"AA2D)1kt3RPi8^[<kFR%,t,#,1Agp6c%D?^s7Ue!t'5<%);>!r@[WUKWOeuGD;Uc(Y#caDD^[.r^f?,M(1/tW\P!(!('2L)K\T//pa<?(E@<E<r9s7L`EX4a<NYUO?^pUWfut*2ei<N`5:1`=%;<iMk8o8tVEta3f*"D!uJE?0e"Jm'im"ODF]pu^ao=5"7qR-HLh*-&n$GRC#f))t8TAQ,LGp:aA$1``!Uum7U14SF'FKhVhWL"-n%_D=7jf3OF6c4N3%iX"*`.(+VF1aMn5k.6RmBWB6#p7O1+HTG\CLTRD[6N>@"RB:Y:#MHWPQu"[t>B1O778Hn,`fh-"G2Fc!B2Ec>%'.`p-m_1LmFH\?'$#2Xj[d]S;fj2FKb;s[<0a\FCA%.cH^T;S&[:CQ0hW;oZ1'C!'FDj]fNIWW4oGtOtgNo)la1hS^#WDDN&,sS5%!bVj]0rT@C3@^jlABfnZ[Pt"6__`59!'O(\0esX]2t/.Y;^E=D94/ob$i=4YLSY388O$@2`dkb=*b8mE*":o$g#F$'#^(;?;oX#!%k!V'e-2p%T9=^R@.YFXUSQh5^#.rcHlnDrMl("S9XM"rClY<FF%EIO`n9a'cG>^'g(u;$K%l1cCbutl!XhH+7?HKKQ1FF?J*n"[o%\YL="`B\l#]?J;+gC%mmk%oT7ql%\sg@&P)hBYgUIV?^.rS-Y>iHgE)SQG%bnKBrPnq:#q]A3pU-$nSP7``mLQQUJqmYn,MObn$F%fXO?@#i8V!F6*'+@2n:04"kk]2=Ve1lp8)-q1#Wc@is#@mg+Q_TNK'Ekd]]<KSPs@:ZWetSErF&RVIqN'u*HiAPL0BgfrcBJnGnc%7qDp#1m4%6s.5FdX>me`pY@m`K8cu[o9VGui'HBd)9oV6aeGRe-R&K&1K:.WcY)9CgW#Yi+`]Yi5'HY(DrOAIHN^7McGT*4&q-h)%7Y%&j%OL[/P4*1sEm,g[]UqAgFC1[j1UEWNahamk+?r%*Frn.S?j?/3E.d9.]f**fI$=uteS..d8ueDRFC"]'A&ZHrPhcKdpb32]%?coBkCan28jDMWU2A1pb*<_(iqp9+Q<N-%p3B?Wug$b*[8&k*oE[pfMN-j:VSeM!lQRYp*D*4`ZqUm'9R+4umi\+k'Ae3Y?(W+3A%*Q@dTD"i#c#K(5K<;3XQb'lW7)MQCtfA6>.N4]c(mU]r[N/LX,QONuW`_X[(r35-(biafCPU+![.i\>;(5+_!SLsNs?#NluYg_TO%;&U$!Cg2<\A5Ns$92DnWMM3nU`E_$#LLa]6I`rm+s1]0^6-kT,GF?,q_e$-P"[#Ps8*`JQkA;(g_\Cdj<cc8dYLt@<Z>++V,Sg&;%m$:aY6$=^u"@<#!!%f&Y3q&!QTg+3:U//s66GNF_5(qmS$tk66Rd2FH&V2Ni<O'O^8G5's;Je)P10UcX1,QWTmt_Af@G[V_<$>RI%*A,r1F0M;RERgF@eD>[$F0PR\]@%oX<26G8`PW95Z3Pa3R>G/54h>PibQeIY0`A5(WL.@o]0H$40'8p%pmGm+fK.)fgpa8$Y@UNR%AK<ZjO/!JW;?e&)<BG/GkXp"sThXO0Vla3>.OkjY>f5WgoUaTH2W4^K>SOign`\-lgh1bmEYPQ3h;0H_>#QSH;L)M$<eY"qB&9ml%Br^TN2d'mtIBj+D9=MFQAdc6Pe5Q2eXb8-*9JB0'<p5=FXaN'\:ns>EU0:e6k-;=oj9d1^@Aa8GTffH^KqLkYe1!CRir+E5!D,.1%[^YZ%p<rc[r>78WLE,TnPf:RVcq$4$Q-d6:(H>Y1@>1[:I56TjcI8thADEd7U6#'0c1WKq'BcbL7f-m8K"0Q?qk8k8fe"<cpc&>R%ZnA#VgG\t2a_3`K&DJiW4]ojuqOMiE>5!+-D%THirj'%4]=0%\T#tlID%*:jY/JiaAaaJt[d.ekF0_X)]r\f87TlS2]G0hU>YgX<%Or%\8#g976l.rA[[E0>&pX<p<R\%:\jt?6gaYG-bP/=3DogBW6C`.c[ZV0$u]1bHKTa\dW*0_BGj45<2Z-Eq`9:s/F2<Y$RVW+Z'%DKG]nUQ#n4*3b:Y9Zkm[FM.6K2k+BXAN/cfn&Wp`ag+pG0<u/hT(L]!M;^@.l*J9,R,s[?7(e[o'5RbKe_CJF(30or[+GN[3Z::K%^!a%8FeZ]*c)@r7\'+2-$TSde8[jV4&3k#'jY;Yf4]kB2jD(#Uct!FHNa8JeVCB>-]'W3!IR+7ZD<@h/iCKV`O/A5Poe0n(P;hI$%pd2EhMs=TTNeM&nF&DZs=!WU`!CH0I&f?OSrt%*4jS6!cHdB"S(h]=b'cOJcVsJ$_EX+Oc!h\]TmGAUt>'#jHI[u_DH,M/'HLSMn%4G#fuqpi)mLSSp&VTbo6$lTU:ojbj24ZufYL/-4`QPOXfhkOM,c]%Hp6el%`V'Y(3drSV1DJD42`@/eR@"S9+P_C+%c>)uEM:ujW%$M(EPkJ7IjELEodCrDGC=kMNt;=(>8B7^>Anbpm(\1_Y^Wt4VW3&K@;4A7s[_rL_t,S>dbZ525'1g(07E*sKL;bJ;Pri^tg6B<6g%GJ7TVqbi`Trcl"0'NcWFD7sFR`jYphr01&#0ZcFLo^78Mjh,RhJ('Z^(?Q-?$)g@[hE87(``EqaIYYZsQR^\KAT)JG1inO.4SlbV%QEr@^m%S@l1!CM#5E<0Wm(rOtU4cjF%lcN$(`#UO3#tm/'gXt'bZJf_o'X&/NLu:`K.oC4+K+5J/'3#O/d0Wt0RgP`Mp2,?R@BkT%*-I$B^P&i:\d>*n@994n@':o9O^CF%d>so]/46]oBshou$Xk,0__rC>ik7".6$FAgr4U6AOm?2K:Mr1Sf^L[aC/)\+a(6?Qn/()I%onfIpE0G!^"7OM.eTXEM6'sTslQIijmq#k<U>'bBdM:S;kiA(L3OYGJQ"1bqAP'M5W\7npStn3,8QR1\Y.4(T&\^)B"9QrQJ<[5g%?/][XV(73e=!Ws3J9/_!k0t8Pl[2?kAk;'D[@7fF6H[]9[4?D.0<fO%XK^$I'4pEW--O\t;,FmG6EnU:N(FbFd"piTErj6)[$B9d%UIGqpHZ5V3Ei5,f6W:hZA[@n#4RuC''TZ'hfHh:V+&QX%%VTqOIe?<RT@ZJenq4]P:W4X1[\"klM(Ha;_e]TL3^'_EbbBan(?Kf(%T8-RJVH3_%*-qEMIn,Y--\TYuVgsH?hnr2-+X#HP^[Y%[,J1R3TAksc!q/ZN81"]V$+4>S]5)23q4SRQ7EQ==:d;Yg22WT@8Z%;S%Z4N/je"07q6&/l5RtsGE7kQq[C"Jf0jCJ>h.j?\_q"LN7`i64H+c*#mNi@/i9Jol2\#Q_0OrlM]s$,eK#]&7$\Z!pucpVi^JVSAo%`>tZtGSWAhMiQ_T)@j,1c">R=WZ"3$LL(7tW=>@[<D3Ji"!_e=N,H^-b##JH#(CKkg&Q_i6Ut1LiYa@s5P19JDqrX1OCBa17.K]*%N#;@cM19EW`#lmF=34*_ZI"[0PbO%E>o#<jkctn@#`<+BJMMPASRkg\hfJAE\nfdP4if2H7/dg=]s#d9Hm-u`Yc`0c-(R%&naB0U%_sD,PS([b0WAcCr!\^$>S3&Z64f1gkgdu_A8Kk?Z%GnfQi"-;6"52H86fG17^3<&:g)rU>rlo1U;oL$@lh&B%M2gg`4MHhh^X:*4%/%p]2)_A\uero<:L_JWM+jLeVcJA+k<;l40hh6kCe\.CEW$KpN?HS?k(VJ"!Y+c^.Dotb9%48'n<Rd1Jq[e`H.uAO,R&LROh5o("%!=gC^jj6hSUIjb?_+t4oe>ZfXUe:k<fXtR$<HEaJl*72/d;ehj_oEJLd*fPi\p\5a2OYYCrYmD))6P<oh6IXL'%_W&..lCn^Tm1#%ff&_DlG(_*IdNT(\[cA<^J-KVhiai8)r)?2D^d0rcolkC^59]:]FN[*0@EAr;[)T#'Kdg`+qWP.A+ns7aqu18+UhgY@/enc&$?UF%C8+M`;q2XlmMedBPAIs@AT&*;j!26#glE)^7kp-h_[k/:?jZns_]W#&2CSDbeYV=LpUYl`nl"WbcQR,k52'7`^Qc_.`k\kB'=j14%ZJb]>=6LHA-:45Z_\;S<F[;a.>uMYs"tQ2uXFI"\r+of>rJiL3jqu"@dFE>[,f7l5kk\L5q!2\^/\rKH_?OTKfdg"S"U=9oh<fRD%\[>#qHZ^;)R]9;O+\a7J>]Vni2\?j-!lf>ObPdeXLpZ<QT.s6(XGm<8H`Bu6@nkNRQkYm(8X1MGepA^:c]-N2h9'8ec!&(1S7'aC%`t4tT1tcGA,S5^KRWEY^LYt1r@78B#<2?4qrUAY>?kLXC;`+O5d@'F7B:?ZP]t'a[E\Z'LP5O8-Fqm,2Q':-kE*>@W,)=33_2?t6%#+(9Q#3u9Bg9+(5Cl,X4X9J+5gm=9JcB,$T*#aTr?qtq7f49TE*b<e!=D+CbL<Hj>qOmp"P0[o8PuWC^kZGo<oCr-O$I9IJ1n20i%"\G"QJNmg!Ug.D:N_J%:.\$%NPcQ^"2>'e#W2>8;[cl>>Rs0.>^/<eEa`gebZlRZLK5B`:j8:4)f.]DFOCfhker\!s";,3?oM)F*%qEN'LONp%T<@VH[Z**BXS)"b9X.D)a\:L<"Ob):ci$Opg^bQA+@]qDRqBX6\17!)3Yg:(!Qg"c%Z[OK)G))'8VL`s6B%%?Q#;RMV%]>4C?=P/(>APM9mmr3nO3RMoXCbfcJABgpnq+DTaY=*"YVt#0C5/WK%(#fCb0"V*3]>M<o*%su+Sh<!N\p=_8B9Om0KK;6J55\GI%Fnfs;+$.0]L#=:qeh`YN!D.[j6ifUn?9fpV#EkPq>`_uP%jHp?R+K,n\3e4T10(rOfrYoJg&)O^r/_asg+:`Q3);C(i!#Me]E$E!%+,Kd1,LFqlV[)=4Bdt:'"g92Yi$X^T263]_]a'/MCeZF9aJd_:82aJRCs^BtLj=9.]D!kCoO'B#JtFU$i8H&0kf.oZ.Q9E3R=$6*%C78jGb_Hi/o0`n7>?c)k6?46&033BHP7&OEAAsODlp?L5_8GX@lrZ#t3VT"UQ\oF@+\*RRMa833_:K<q\#7KS`Guu((pA')N4QHZ%4PKXS&?OH'Y,Uhnj?AXS/BQH72Mg@!Vr-HX)e=pFHm%QiAVfnSek,:25+1NhTCXt^B&4$2%^P<jm5_A&F`[03A?um)'"\V\nstCj%Y+$EAB91:npb3X\8TU?sft7_g1,":%nhN`NQ##e?Q-\5kXZ+l_kLh,?F>$D/Y@BhGjhS$a:/tc/Hn"Y##RD.O(ZK%!H#`p9lbTDA%)E<.hUJWsk7'Y_(5SqpGrj3]XaQ"<`o+Sr*>hJdCEd_(-=!<ZRlXM7?]j-Im/dj9kf/U"b,)A*+gWt\4(BnA9GF,ff1#FC#M8Sf[%A.%KGNR?4ak-!";Bt>gic.kA8'D8h&Mj5^6^03:CR&EJYVV4DZdPCJZSF'=+$!4ulrs?g(8X9O^DL/;#^F)b)@#)-")Ecr'CZXJh%mM\_'@<EB8;]#mS+^sPiY1&X,RA:sI@6@dLVt6>Op[[Of?A&g#*8T9BLhSHUKQ$*urIe]!P%@4sW=B5KmbU\$Vi7dan!?hiI;<>0%Rlu]a1,g2Z\,@n@EXD?cmhS/eJN<#BVE(Nm@lDS_\#L`)=f>X5Ma1?4\-[&RJ`jmp)I3W]nmfD%rL'9kCKN#W$CXR[*^]cm9=BV<%4\i@,Y'cJ'?2.?fRiN>u>V)kEpmH:KI]/f2V?P4ub.<nUN[a=rD2qK?<8Wm">F!m32N+N>'*"Q)(g4"(6OM##mD=+T>mO6.'eTru%6Yns6?I6sf$ZW%9_R&Vrr+mlWaot"[X+_qRZ(9'uJH-,!H]W#ITNoPn)^/i2ki^B[Kp&hqfK@dno)XolEg^NUrePGSVO5J[A;Y]#%Ar_:(ftP`LSf^b,%8j>kbr[9\4&*45Y5;=X4VN]u-bOma88G(`7\"Y=^/IVUG>:&5m>`]Ed7ctT]RTTQ'pXg&_gK0ETo#nqe<2Yd%,i^pd73sNeBOV3FXkriTWc#`kVP48e!O$/)aL(D8B$(iE-R&K&WOd(I6F^]Hi&Rtm5K%X3H&eMYclST+$9E5@d[ppKkg[=!%HC"6%mpq6#;&Zcm?;3K`;-o=&+BM-VX"s#=e"`Qh,X3)+E)N\QD2H]F;i"RrhDr-A,p>BbX'MVYZg2.$gFcNs/EPj!T4-?.]%EE8;ous7%]?ZbBC(pAaQ\1t<qmE`LL];GLo9kp'8NGe1qfotq:A#:j/p6N`1ML$P#h[okd3eklO\Dl!Q'q:iUW>($eUKS\m6jEGhB^?ulmS^p%n!_;NHqQdf;43K=4/]3HQ/q[Kdc534aemh?1:$kF3p!-41/#7gn&V$ib'[698JgCDP:;!7Tpa.#,7LF>Qi9bWT&cD;Q6e\ka]/uR%SkSu#%am8W0(+sbO(HfpPVG\ZFfL`ISt3?qlI*XM1e1cdb6OV-ceWV&r=tQX^]EeQf:9]L)U=,;Xo1"jio0neTkY$&c?8rXWA>s'%j#Q<MgS+IFE.`MKiCt_7iGC)%qCEA/@Y]9(AMf6nc@4qmE")k&R8U&q`TL2<%V=q=CT8qpBCo*4n+&M3!<Y3_i)oD?);I.FULpu&%X_D`g0hfUqT"s*JL&uTE43o*r9]BFMQaG4ajih$5q<YgKRJPKNiMkjka3pYB?F.^]B_#%UQ&7q>5#/@Mr_aNl*r\F`bA/9UENS!Q%A5`e?R44g7R7lmh`'%oh`"u*$F`F!K/uaMaB:8$030_d.<ant[EfJ\0H<&4h6g="&HehtBC9"C_c^GV14O$b<+DWN1k[3%9Ho6uD%WMK!227(1VbcYa]KC$]3".gjc7E8\*Q9gn?l8PuhU6EB?<"C0R"u9K#j-S3CT)1T)=&3D9`hGBaRBXuJK&cCc<#sa!qkB=TlSX"/%1f3(l/46%UWa8Tu4M+Qo3;RS3\&kN4o44QkI-8K'eQf99B)()HeJc/qa.aXr_f'9R/+M["7+)a>5(ApA]`!1k!4DN4(?bD@Ch#1s%Z'Wmem&L:7?8Gg;%2fi-G+Eh&99:\t#mI9HOtRk8QS(fU?'$VL+<F-flQ-h$9=s,4S&2ldg?ki1>p(E(+H^c^63",dFG(i894&jj%#f=6R%[]^-/(s6'Q$@SG90\pPE3o1h/D.-O<R6S?#j66/SLeZV#Vro23tlXPP/Nq8/`>\`e:4Ic!l=<3!ochAB\kI5_]i<O71V%Z%kFkQ(W:%4k/W$Nh10``pV^/D2@p/H"=E1inU^+F)V2g;OIs+#ud#N<X*c2'`GKjrWprDN)(`_i,\i=jhP`fApEUnHH@Q[DOjij6J%q"NpH]\A,@':4Gn[^7+r-rd`Ef_]\LMV^2ZQp06M89V$fn,+EcoEr_/`I=iKb2JX;n$Iu=$B(6qC/l`<<Cj[M.^Mc"_fP+6(?GsK%4`RBj$3ZMAVkr3`?RDfJ.cM*cK?-hq7DditO?G+;S$_=3#\QlD_bFK,3!,R(S>9of-,j+(-((9]"IXV1R8(16RNG0m78bCD93%A.%CZQtshMR`\b)')bO$p^2%[GE1JT+slV"heiW#&<21:aD<bad1$r`gqJDKqs,*Hd]a+mOYKrA=?+KifDJ:Iq#7Pkj[eI.Hb(<\A!e%MRUf!B?RAF]Vb\8SFL@*X9o4ne)(gA9n`>2K:%g[bI%)Y>g]?sE^c0uFLLi@.sZ;:`:oJbI?]@1=Ukm7_qnElg\s$3?m)>`MpKM`%:Q[@*;oE=qEu0$fI"F,+de$IkVlDL])`9iK@%1;&k:bdKHN+k&7n(;Mi=L(aca&_N5\&8?&YIQ^rGtItad.7"=_5BZ=eukH'^nR&%R"]gP[P/+'_Qkcr-Mp=<$r1?Fr_Ng7.oAr%^>E1N$"_m)%o3XV<[">bPn.fPcK@%'X42#%90>=$*316S]RNAEE!VkdGcrDar=qAp%ldjp1Lpo&Ve:HCFL\=.$-H:@4P-MJ`;f0tc(C]i63@hJ)mY5t6dOT<6LER_>'Sbb7hXK30pWpC/LMnu\%i%l_g%@Q\n^tuqnPmF3%\$I`RG[QK%SP5L1*H=_7@;^qBqX&_M38;kg5(>2G&/,@FFL;L&@#-0U%Io+^+Wg4mRs6*Tp2#%Kiie9pcrA`.[)@;3!WO'24BNZa%e9P-CbYPrd=%t@<]ajX*nbM]^c'n&J3BpZu_-]cfneAd3he2j?\'@E5M0o!NW$k?S*F/Eu^t@E`4ob$C?OV]5<VbB5qt]rlIu^rm%,;gqYTnT.Tr^@DN]eRq+oA*&hAHSKIQ7'Zd53U=K\A%?2-j0u;Z2$kMfQ;*rW0dG[bJ1'.rl395^AI85TLoI>UO:g9&h4Y]0`q&j%"K*d3qC>dKm\_/,?k:bT,BT"8:$We]EUDV/&-cjhJK/S_E(9>Aq;G]05(DT_5Mpi&Xb4D?S%CRDclIf#q"j470\L?LccL?"1:D(V%h^3]_am\i]T0E85it!73j^W]82uiU+J,b:bc[Yub]79PspOE,<5Q$Sg?iTr25Q0EqIJiMWs7t:(s7Y@Lo]uO)r:[%LhuEN(s7>!S%?iTVN5Q9cr^\mf?mf3+Vq`k&QkJ-rb:VV>To0<3Ds+9#jM<)GKh;A71s7#RY!#*&Whu~>%AI9_PrivateDataEnd