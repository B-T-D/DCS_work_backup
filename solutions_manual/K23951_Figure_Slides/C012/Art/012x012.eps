%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 012x012.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 394 257
%%HiResBoundingBox: 0 0 393.5454 256.7305
%%CropBox: 0 0 393.5454 256.7305
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 84 8%%BeginData: 6540 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD49FFA87D7DA17DA27DA87DA17DA8A8FD71FFA87DA8A8FD09FFA8%A87D7DFD6EFF7D7DFD0FFF7D7DA8FD6BFF7D7DFD04FF847DA8A8FFFFA87D%A8AFFFFFFFA87DA8FD69FFA87DFD05FFA8A87DA87D7D52847DFD05FFA8A8%FD69FF7DFD06FFA8A8FFFD06A8FD06FF7DFD69FFA8A8FD14FF7DFD69FF7D%7DFFFFA87D7DFF7DA8A8FFA8A8AFFD04A8FFFFA87DFD6AFF7DA1FFFF7D7D%597D7D7D537D7D7D527D7DFFFFA87DFD6CFF7D7DFD0DA8A9A87D527DFFFF%A8FD42FFA8A87DA87DA87DA8A8FD1FFFA87D7DA8A8FD07FFA8A87DA1A8FF%A1FFFF7D7DFD3FFFA87D7D7DA8A8FFA8A8A87D7D7DA8FD1FFFFD0B7DA8FD%06FF7D7D527D7DFD3BFFA87DFD0BFFA87D7DFD23FF7DFD0EFFA87D7D7DA8%A8FD37FFA17DFD0EFF7D7DFD22FFA8FD10FFA87E527DA87D7DFD33FFA87D%FD10FF7DA8FD35FFA8FF527DA8FD32FF7DA8FFFF7D7D7DFFFD07A8FFFFFF%A8A8FD20FFA87EA8FD13FFA8A87D7D527DA8FD2FFFA8A8FFFFA852A8527E%7DA8FD057DFFFFA8A8FD20FFA852FD18FFA87D7D7DFD07FF7DA87DA87DA8%7DA8A8FD1EFFA87DFFFFA8FFA8FFA8A8A8FFA8AFA8FFFFFF52FD21FFA852%A8FD19FFFD05A8FF7D7D7DA8A8FFA8A8A8FF7D7D7DFD1EFFA87DA8FD0DFF%7DA8FD22FF7DFD1DFFA87D52A8FD0BFFA87DA8FD1DFFA87D7DA8FD08FFA8%7D52FD23FFA87EFD1EFF52A8FD04FF7DA87DA884A8FD04FF7DA8FD1DFFA8%7D7DA87DA87DA87DA87DA8A8FD24FFA87DFD1DFF7DA8FD05FFA87DA87D7D%7DFD05FF7DFD1CFF7D7DFFFFFFA8A8FFA87DA2FD27FF527DA8FD1CFF7DA8%FD05FFA8FFA8FD08FF7DFD1CFFA8FD08FF7DA8FD27FFA8A8FD1DFF7DCAFD%10FF7DFD1AFF7DA8FD09FFA87DFD27FFA8A8A8FD1CFFA87DFFFFFF7D7DA8%A87EA87D7DA8FFFFFFA17DFD19FF7D7DA8FD0AFFA8FD27FFA852FD1EFFA8%52FFFFA8FD047D527D7D7DFFFF7D7DFD19FF527DA8FD33FFA87DA8FD1CFF%A87D7D527DA8FD05FFA8FFA8A8527DFD19FF527DA8FD0CFFA852A8FD26FF%7DFD1CFF7D7DFFFFFFA8A87DA87DA87DA87DA87DFD18FF7DA853A8FD0EFF%7DA8FD26FF7E7DA8FD17FFA87D7DFFA8FD07FFA8A8A8FFA8FD1CFF52A8FD%11FFA8A8FD24FFA97DFD15FFA8FF7D527DFD28FF7D7DA8FD11FFA87DA8FD%25FFA87DA8FD12FFA8527D7DA8A8FD29FFAF7DFD13FF7DA8FD25FFA87DFD%12FFA8FF7D7DFD2AFF7DA8FD15FFA852FD25FF7D7DA8FD0FFFA87D52A8A8%FD22FFA8FFA8FFA8FFFFFF7DA8FD17FF7DA8FD25FFA8FD0EFFA8527D7DFD%21FFA8FD057DA87D7D7DA1527DFD17FFA852A8FD31FF7D7D7D527EA8FD20%FFA87D7DA8FD08FFA8A87DA8FD17FFA87DFD25FF7DFD0BFF7D7D7DFD22FF%A87DA8FFFFA87DFFFFFFA8FFAFFFFFFF7D7DFD16FFA853A8FD1FFFA8A8FD%077DA1A8FFFFFFA87DA8AFA8FD23FF7DA8FFFFFFFD047D597D7D7EFD04FF%7DA8FD16FF7DA9FD1EFF7DA8A8FD07FFA87D7DA87D7DA8FD26FF7DFD04FF%A8A8FF7DA87D7D7DFD04FFA87DFD34FFA87DA8FFFFA8A8FD08FF527DFD28%FFA1FD10FFA8A1FD17FFA8FD1BFFA87DFD04FF7D7DA87DA87DA8FD04FF7D%A8FD27FF52FFFFFF7DA8A8FFA8FF7EFFA8A8A8FFFFA17DFFFFFFA8FD13FF%7DFD1BFF7DA8FD04FFFD067D52FD05FF77FD27FFA87DFFFF7D7D7D537D52%FD047DA8FFA852A87DFFFF7E7DFFA8FD10FFA8A8FD1AFFA8FD11FFA8A8FD%27FFA876A87DA87D7D7EA87EA87DA87D7D7DFFFFA8A8FF7DA8A87DA8A8A8%FD0DFFA87DA8FFA8FD13FFA8A8FFFF52A8FD04FFA8FD0BFF7DFD2AFF7DA8%7DA8FFFFA8FFA8A87DA8A8FD09FF7D84527D7DA8A8FD07FFA8A87DA87DA8%7DA87D7D7DFD0BFFA8A8FFFFA8A87DFFA87D7DFD04FF7D7DFD05A8FD04FF%7DA8FD2CFFA87DA17D7D7DA8A8FD0FFFFD057DFD04FFA8527DA8FD07FFA8%A8527DFD05FFA8A8FFA87E527DA8FF7DA8A8FFFFA852A8FFFF7DA8527D7D%7D52FFFFCA52A1FD4AFFA8A1A87DFD0DFFA87DA8FFFFFF52A87DA87DA8A8%FD09FF7DA87DFFA8FD05FFA8A17DA8FD4BFFA8A852FD0FFFA8527DFFA8A8%7DA8FD0EFFFD057DA87D7D7DA8A8FD4EFF7DFFFFA8A8FD05FFA8FFFFFFA8%FFFFFF7DFD13FF7D7DFD05FF7DA8FD51FF7DA8FF59FD047DFFFD067D597D%FFA8A8FD11FF7D7DFD06FF7DA8FD51FF7DA8FFA8A8A87D7DAFFF7D7D7DA8%7D7D7DFF7DFD11FFA87DFD08FF7DFD52FF76A8FD0EFF7D7DFD10FFA87DFD%08FFA87DFD53FF7DA8FD0CFF7DA8FD10FFA87DFD0AFFA8FD54FF7D7D7DFD%04A8CAA8FF7D7D5276FD10FFA87DA8FD62FF7DA87D7D7DA87DA8A8FFA87D%A8FD0EFF7DA8FD0BFF7DA8A8FD58FF7DFD08FF7D7DFD0BFFA87DA8FD0CFF%7D7DFD59FFA8A8FD08FFA852A8FD09FF7DA8FD0DFF7D7EFD59FFA8FD0BFF%767DFD07FF7D7DFD0EFFA87DFD66FFA87DA8FD04FF7DA1FD10FF7EA8FD58%FF537DFD0CFFA87D7DFFFF7D7DFD11FF7D7DA8FD56FFA87DA8FD0EFFA87D%7D7DFD12FFA87DFD57FFA852A8FD0FFF7D27A1FD12FFA8A8FD58FFA8A8FD%0EFFA87DFFA17DA8FD6AFF7DA8FD0CFFA8FF7DFFFFFFA87DA8FD0FFFA8A8%7EFD56FFA87D7DFD0CFFA87DFD07FFA87DA8FD0DFF7DA8FD57FF7DA8FD0B%FFA87DA8A8FD06FFA8537DA8FD0CFFA8A8FD57FFA8FD0DFFA8FD09FFA87D%FD04A8FD62FFA8FD09FFA8A87DFD0BFFA8FFA87D52A8FD0AFF7DFD57FFA8%A8FD08FFA852A8FD0EFFA8A87DFFA8FD08FF7DA8FD56FF7D7EA8FD07FF7D%7DA8FD11FFA8847EA8FD06FF7DA8FD56FFAFA8FD07FF7DA8FD14FFA87DA8%FD07FF7DFD56FFA8FD06FFA87D537DFD15FFA8FFA1FD05FFA87DA8FD55FF%A8A8FD05FFA87DA8FD18FFA87DFFA8A87DA87D7D7DA87DA8A8FD50FF7DFD%05FFA8FFA8FD1AFFA1527DA1A8A8FFFFFFA8FFA87D7DA8FD4DFFA87DA8FF%A8FFA8A8FD1BFFA87DFD0DFF7DA8FD48FFA87D7D7DA17DA87D7D7D52A8FD%1AFFA876FD0FFF7DA8FD45FFA87D7DA8A8FD07FFA8A17DFD19FF7DFD05FF%A8FFA8FD09FF7DFD44FFA87DA8FD0CFFA852A8FD0BFFA8A8FFFFA87DA8FF%FFA8FFA87DFFFF527D7DA8A87D7DA87D7D7DA87DFFFFA8A8FD43FF7DFD10%FF7DFFFFFFA8FFFFA87DFFA8A87D7D7DFF7DA87DFF7DA87DA852FFA97D7D%7E7EFF7DFF527D7DA87D7DA8FF7DFD43FFA8A8FFA8A8FD05FFA8A8FD06FF%A852A87D7D7DFF7D7D527D7EA87DA8FFA8A8FD06FFA876FFFFFFA8FD0BFF%7DA8FD43FF7DFFA8FD047DA87DFF7D7D7DA87D7D7DFFA8A8A8FD06FFA8FD%0FFFA87DFD0DFF7DA8FD44FFA87DFF7DA87D7D7DA8FFA8FD057DA8FF7DA8%FD18FFA87D7DA1A8A8FFFFFFA8FFA87D7DA8FD46FFA1A8FD0EFFA87DFD1B%FFA8A87DA87DA87DA87DA8A8FD49FF7D7DFD0BFFA87D7DFD21FFA8FD4FFF%A87D7D7DFFA8FFA8FFA8A87D7DA8FD74FFA8A8FD077DFD4EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T12:33:26+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T12:33:26+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T12:33:26+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>168</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAqAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqkeqa9dnUW0bRIFutVVBJczTFltbRH+w07LuztSqRL8R6kqvxYqhb&#xA;/Q7eCxuNR8yate3kNvG0lwsLy2tskYBMnG3syrOlO0rSGnfFXWPl38urm1Fxb6PppiDMjGS0iRw6&#xA;Eq6uJEVwwK78t8VUtQ0b8t7MyRz6bZWkkUfrNNb24hkRPUEZZJoFVlPMgHi1fHFbRcmga1Yn1ND1&#xA;WUqp5HTtTZruBxTcCdybqMtTZvUdV/kPTFUdoutDUPWgngay1O04i9sJCGZOdeEiOu0kUnE8HHWh&#xA;BCsrKqqZYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUg8o&#xA;GERash/3vXVLw34avPk0pa35V/5czDx/yaYqq6pf6BqbX/lqe84Ty27x3ca/CRHIgDrzZSnLhKpp&#xA;9oBge4OKpEfJ3kfXIbkJctdNNxa6u1kVjKWkEyvyZTGfjp9gUFKdsKrYPy/8myNeiO7uGY3EjXDt&#xA;KDSe4VJHZC6cTVJF6VA7UYbNoZlFf2kt5LZxyBriGOOaVBXaOYuI2r0+IxN93ywJSa74N57070Ap&#xA;nj067+unuIXmg9ENTu0iNw5dhJTFWQYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUv1TzBo&#xA;+ltFHfXSx3E9fq9qoaS4lp19KCMPLJSu/FTiqDTzNdTVa00HU7iGpAmZLe2rT/iu7mt5vvTFXSeZ&#xA;rqCj3eg6nBASAZVS3uaV/wCK7Sa4m+5MVRmleYdG1VpY7G6WSeD/AHotWDR3EVSQPVgkCyx1p+0o&#xA;xVMMVdirsVdirsVdiqTat5fmmvP0rpNz+j9ZCLE8pX1ILiJCWWK5iqvNV5NwZWV0qaGhZWVYnq2h&#xA;W15fXFx5m0a+iubpfSfUNNK31uqmL0isYjj+tgOlR8cHFSTxYcmJbVROjflSZS9zqRsTGgiW3vn+&#xA;osqCYTKvG4SGVuEiCgYnj9ONrSnJ5c/LCf0IoLq6v0tEZIo9OikvI1V4o4nqLSCVDyVF5E9/fDa0&#xA;mmgaPqFk8h8t6fNYJPb29q1/rJSgituQiaO1i/fyMObVWV4uv0YFTfy/o2raFLfy3s8eqx3ANxLq&#xA;IjdL+SRK8Y5I15xyAJsnp8AvQJvXFUDp/wCY9mLi4tdZhawvVmmWC2CmQhI05osrrVVkkVXK1op4&#xA;kAmmGlZdbXVtdW8dzazJPbyqGimiYOjKehVlqCPlgVUxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVK&#xA;vMmo3lpZRRWAH6Sv50tLIsvNUeSrPKy1HIRRI8hWorxpiqhZ2Xl7y16fNyt5qcywyahcEyT3M/Bm&#xA;HqzU8Fbiuyj7KgCgxVGRa/o81jb30dyptbowCB6MC31pgsHwkchzLClR036YqrvqmmISHu4FIHI1&#xA;kQUFaV64qg9X0HSNaVJJPgvbYstrqVswS5t36N6coBpuPiQ1U9GBG2Ku8t6jd3ljJHf0/SVjNJZ3&#xA;pVSis8RBWVVNeImiZJQtTQNSpxVNcVdirsVdirsVdirsVSfzb+jW0OaHUbxLG3nZEE70PxBw4AFR&#xA;Unj/ABxVOAQQCDUHcEYq7FXYqgtS0XSdTVBf2sc7RENDIwpJGykMGjkFHQ1A3UjFWGzflfcae1fL&#xA;OrS2EEiyx3FjJT03WVHRTzjAasPqFk5hq7AmgFDaq955g8yaV5mkSa0mTy7EvGIcBNySFEUFJBQL&#xA;JPLNRQ8xPGM/ByYVVZLpHmTRNWqLG6SSRaEwmqSUKK4YI1CVKyKeQ23wKmeKuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KpZ5h0qfUbALaSLFqFrKl1YTSAlFniNVDhaHg4rG9N+LGm+KpNcXXl7zOING12J7DVIn&#xA;E/6IuH9ORnQMvqQsCBPGKkh4yad+LbYqvi/LXyzFcyXUYuRcSm1MkhuJGqLJQkAAYlV4gdhjarZ/&#xA;yw8pTc+cElJIxDIPUJ5IsgmANa/7sUNhtWoLnQPLUl5pmiJLqet3kz3cumxytNL6sgA9Sd3JS3jN&#xA;B8T0r25NtgVOPLmlXGm6b6d3Is2oXEkl1fzRghGnmYs3AHfgmyJXfioriqaYq7FXYq7FXYq7FXYq&#xA;xD80oJ5/Kxit5p4JzPG0T2zBX5xhnSoLLyQMoLdaAcqfDhCsst+foR+owd+C83XoTTcj54FX4q7F&#xA;XYq7FXYqxyf8vPKUl7BfRWC2l1BMk6SW37r4o2504r8IDN8TUAqd+uKrNX17zFpWpRWq2lvq36Qd&#xA;xp1tA7W1yoQVYyrJ6sbRR1HqS81pUAIzFQVVWPRPMV9+81nWHgVuun6UBBEF/la4cPcuw/nRoq/y&#xA;jFUEsPksQiVtTv44zM1sTLqWqIRJHI8Lcg8wKr6kTLyPwkjY4qirfQbK4Rp9C169hZC0byx3h1CP&#xA;mB9l1vDdqCNq8eLe+KqtvrOr6deQ2XmFIWiuXWKz1i1BjgeZ9lhmhdpGgdjsh5srHaqsVUqp/irs&#xA;VdirsVdirsVQl9qunWLwJdzrE9zKsECmpLSOGZV2rSojY1O22KpPH5Si1Kd73zSkGqTkkW1g6epZ&#xA;WqV2Eccgo8hp8Uzjl1C8V+HFVePybokShIWvYIh9mGHUL6KNQeyxpOqKPYDFUpHlvTf8Uz6Zey31&#xA;zY3VlHc2dtcX95LEWglaO6VkeYq6/vYDRwepxVlVhpunadbi20+1hs7YEsILeNYkBPU8UAG+KojF&#xA;XYq7FXYq7FXYq7FXYqwf8zbf147FJNXs9Mtyk/qR3141osrAxMhAAIb0+NeXVainXCFZpb1+rxVY&#xA;OeC1YHkDt1r3wKqYq7FXYq7FXYq7FWPq8MPnyYXA4yXmmQLp7tT4jbzztdIngQJoSw/aFOvHZVHa&#xA;75g0fRLaOfVJzbwTuYkkCSP8QjaQ1MatxokbGpp0xVILny7+XUrSaddMpfjSXndToXNzLKWrL6i8&#xA;5HkV+XxFhtWnw4VR3lufyZZz3dlolwvqz3f+kxiWWXlcPbiXkpkL7NCleS/CaEfaBwKqefXhHlLU&#xA;oGo1xdwta2Ee3J7ub4LZUr+36pUg/s/a7VxVP8VdirsVdirsVY1rXnW0t9Nhn0dF1W6vWkSwhjei&#xA;SvC/BxzAY9QQCFIr7b4qlnlLydqB1Ftc8zxiXVwSYayeoAWblydRVOSAKqBfhWmwr8RKs4wK7FUj&#xA;8zapLpX1W9t9M/SV47G0to4yROTMVYohCOApEXNyzKo4b4qnFs80lvE88fozOitLDyD8GIqy8hsa&#xA;HauKqmKuxV2KuxV2KuxV2KuxVhv5rq7eU5Eja5jklcRepZy+jNwKszLy7oeHxKSARhCstszW0gNK&#xA;VjU0pT9kdtsCquKuxV2KuxV2KpcnmDR5L+TTre6S41CJGke1iYMw4sVKk14q3JCOLEHY+GKpJqWi&#xA;a95ojSLUwuh6dFKk9uluyy6mJIyeL+uKw2zDoRH6hIJHMVxVZq3l3zBcwR2t+tt5jsoGkkiM0sum&#xA;3QLRvF8TWyvDMxjlZfsxL3674qls3lbR50YN5P1OF3nW6cw3dqo9ZefxAC+UU/esPs9O2Nq3pnlB&#xA;rK4iuNC8trpk1uawz6lqEpKs0QiLC3tXuo3ARQOJkXFWTad5ckS+TVNXvG1PVIwywOUENvbh6hhb&#xA;W4L8CVNC7s7025cdsVTrFXYq7FXYqx7Xb7Vry2RvK15E11Z36294rIJoSKcZY5Oh/dlwzcHBHEjr&#xA;8OKovTPLunWuoS6wbaNNWu0AupIyWRWYJ6oiqBQO0aljQFqAnpiqbYq7FXYqlnmaPVH0K7/Rc729&#xA;+iCSGSMBnPpsHZAGSYfGqlPsN16YqhfJF5aXvl23vLWW4liuC8hF3Ks0qOWPNS6kinKpHsdqDYKp&#xA;7irsVdirsVdirsVdirsVYN+bf1WXQEtX4rczswheS1S5jIC7ozzGKCLk3Hd5V6VFaUwhWZ2QK2cC&#xA;t1EaA0334jAqtirsVdirGLvzxocmuW+g2moQtc3kbr6sMitJE7A+k6KytG68kZTueLcQV+LFUm0X&#xA;y3501ayMPmS/khtWkaSWNaCWRmVRx4lpIxEksfqKrL8QbiyKKqxVk/lvyhofl21EGnw1kqzSXctH&#xA;nkZ+PNmeg+1wWoFBt0wKnOKuxV2KuxV2KpHqHmG6N8+maJZjUL+Gn1uV5PRtLYsAwWaULI3qFSGE&#xA;aIzUILcQQcVQRGpHUI7HU/NQtdSmRXhsrCC3gVga7gXa3rsTwbow6HbFUavlzUFJZPMWpqzmrkiy&#xA;epr2D2zKvyUAYqlutaP52NukEOpDUdO51u4ABY6jLCBvGl3EfSBbp8McR8HTriqdeW7zSbjTEi0y&#xA;3+pRWn+jyac0Yhe2dQD6TxLspAIIpsQQykqQcVTTFXYq7FXYqsnR3gkRCodlKqWHJQSKCq9x7Yqw&#xA;b8roZdKOpeW3rx05lYUg9JfUkLerxkVVEqkqCrN8R3qMJVnmBXYq7FXYq7FXYq7FVK7vLSztnury&#xA;eO2tohWWeZljRRWlWZiAMVY5q/nnR/qE40d/0zdAALDZwzXsbAsA/JrZZFoFbx9sVRkfnXymG9KX&#xA;UobKQEKIL2tm9elBHcCJu3QDFU7VlZQykMrCqsNwQe4xVKNZ1YSaXrMOjXcb6zYW7sIogLiSKYoz&#xA;Qh4l5NViv2aVOKsXm8o+bPMs6v5juo7SxUEGzgCSGo4qfTJjX927J6o9bmfsgoCp5FWV6D5W0LQo&#xA;BFptqsbBQpmYl5WAAFDI1Wpt06YFTXFXYq7FXYq7FXYq7FUg8grCPJ2lNGayywiW9YklzeSEtdmS&#xA;pJ9T6wX5g9GqMVUbvR/K/mHUGuxfrczzWLQwLbzRExxF3Q3MLKC6uC7JzDU7eOKpNJ+VvlyKdIV1&#xA;G4+tTj1ILe4+ryLI0LcmZl9JZGB5hZKOCVoKjDasn8vppWmW0Hl+3ulmu7OM+spI9V3AR5ZXXxdp&#xA;1dv9bAqHkSFPPsDQbSzaXP8ApAKTQrHcQ/VDIOgp6lxw8fi8MVT15I4wDIwQEhQWIFWY0A37kmgx&#xA;VdirsVdirsVSS4TS7DzRaXBsgL3V0ltjqAO/OFBKsJU/zxxO1R/Jiqd4q7FXYq7FXYq7FUq8w6td&#xA;WMNtb2EaTapqMwtrFJCRGrcWkeWSlDwiijZyARyoFBBYHFVGw8padFPFfaiW1bVo6MNQvAHZHHe3&#xA;j/u7ce0Sj3JO+Ksd0j8zHmWT6zam8kEhit4dPVXeWiu4lBeX0wj8CiDnUlWrShANIR+nfmHpGpat&#xA;Do72k0b354QiX0CODWouR6yCVnXmhO3HwBodsCWtb8g231N/8PFtNapeXSoJZbawutqGOWOBk9Ll&#xA;T7cVD/OHX4SqnfleTSJdBs5dItUsrF0qlmiLF6TVIkjZE+FXR6q4/mriqaYq7FXYq7FXYq7FXYq7&#xA;FXYqkFxoF/Y30+peXpo4ZLp/Vv8ATLnl9UnkoAZFZQzW8rAfE6qynqyFvixVhUfk21tEhg1GDXrJ&#xA;Y3ST6xaG1vYPUgYuOH1eF7jg0jF6NAoLEmg3xtaWp5O8mQOs1tJ5hE6LCIlTT51I9BVVeHqWSohe&#xA;hZzUVLMe+NrSZ+XfLGvafNE2kQ3dusUMkEdzr01tKY1n9CrJb2Sl5eK2iKBJPHT3xVkEHkPQ1Z7m&#xA;4a4uNVmbndasLiW3upDQDiZLZoSsagUWNaIPCpJKqtrHlZtQ/RtL+ZF0yW3miV/3gd7eVH5uaozO&#xA;6KyElqfETTFUtvE886dqmo32n2Ftf293cJII/rDer6EcKoI0RxDEjFoy3Lkd38Fwql1j+aro/oa3&#xA;pL2NxBNbWV6qyxsyXV0jvGBGxWqMY+IIY/FsK9caVmularZarp8OoWLmS1uATE7KyEgEr9lwrDcd&#xA;xgVR1bzDpGlNFHeTH6zcV+r2kKPPcS8ftGOCJXkYDuQtB3xVI9Vl8za0to1jojWMlncwXkNzqVzH&#xA;A3wOBKqJa/XG/ewM8Z58acjtiqZPe+ckHI6RYyKOqx6hKXP+qHtI1+9hiq1fN9lDKsOsWtzojyEL&#xA;HJeqn1dieg+swvNbqxOyq7qx7DFU9xVRF5aGWWITxmWEqJo+Q5IXFUDDtyHTFUovPOei2mprYSs7&#xA;Fjw+sRcZYxKBKxiIRmk9QeiQV4dSo6nFUHrvnG4s2UWECXYuLIX1jw5ySyqrqrr6KhSKiVOLV/mP&#xA;7NCVb80fp+PUtN1Wx05buz0tmmugkzC7kimjeOWOG39MqzJVJP7wFuPEbnAqe6fqunanYLfafcxz&#xA;2rg8ZlNQCuzBhsVZTsymhB2NDirCdF/NiGS1tjq1jKk92jSW72iepEypbxTsGYsVQhpeH2j0q/Dc&#xA;KaVOYvzC0qTV7LS2tLqKe+aREkkEKxq0fAUY+rU8jKOPAN4/ZoSKVNdc1+y0mKMSVmvrolNP0+Le&#xA;e4kA+xGvgKjk5+FBuxAxV3lvTrrT9Ggt7t1e9dpLi8ZK8PrFzK08wStDwEkjBfbFUzxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVIfNdnYQaBdX5E8Q0m1nuIEs7ma0/u4y/H9yyKw+AUDgr&#xA;7YqldrJb+UI7RdQgutV1rVVJ1PWY0jPqzQxNKwZnaLiiojmONRso6VO6qeQebfLU+oJp0WpQPfSf&#xA;Ytgw5mgqaA/y9G8DsdziqCtPP3l+e+ubORzaPazC2dp2iCtO881ukahZHbm72rlQRuKeOKrW89+T&#xA;Ln1Lae9ga1mgSQPKVMM8M8slvRak8h6kTI1R+vFULo2mX2n+ZrjRLXU5odEtIIL6ysVSN2UTSypJ&#xA;bNLKsjCBfRHpqOLAMVU8UACq7XPy60/WLu7u7i5dZb2SM3CBQ0bwxGPghVqnkqxuqupH94+x2obV&#xA;N08p+XEuRc/o+J5wzsryAycTIOLcQ5YCq7bdtsCpqqqqhVACgUAGwAGKt4qwq+0u013zJIdFL6cb&#xA;RwNY1+xcwySzxEBbMcf3c5Sn7xpVdUHwAcySiqcHQ/MSGkHmOdlpv9ZtrSRq+xijtxT6MVS3Q7TX&#xA;NXtro33mG6SS2u7mzmgtIrWBeMMzKnJmilkDPFweqOOu1MVT7S/L2j6ZJJNaW9LqYUmu5Xee4cA1&#xA;CvPM0krAdgWoMVTHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqp3FvBc28tvOgkgmR&#xA;o5Y23DIwoyn2IOKsTb/cNFb2HmO2k1DSrA107WwjXHFQhjAvI0BdJFjZlMvEoy1LFCeOKplpWleS&#xA;7yRNT0mOzuXiY8bu1dZAH+Hl8aEipKKW8T1xVUufJnlW6lWW50uCaVJRcI7ryImDySCQV6MHmdq+&#xA;LE98VYxrOo/lbplGjtrfULu3ZIRFalZFiLSVRJ5iwgt0MjVpM6gnxONrTKdA0q/gmu9T1V0fVdQ9&#xA;MSxwktDBDDy9K3iLBSwQyOxcqCzMTQCgCqcYq7FXYqx7V76+1S+k0DSJnt/TCnVtVjp/oyNQ+hET&#xA;UfWZEO3++1PM7lAyqc6fp9lp1lDZWUKwWsC8Iok6AfrJJ3JO5OKojFUr0vT7q01bWZX4m21CeK6g&#xA;YH4gwto7d0I9vq6sP9bFU0xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLb&#xA;/wAseWtRuDc6hpNneXBABmnt4pXovQcnUnbFUk8v+R/LAsJRe6BY+r9dvinq2kJb0jeTGGnJPs+l&#xA;x4/5NKYqydLOzS1+qJBGtpwMf1cIoj4EUK8KcaU7YqkLaTq2g0fy+v1vS1P7zQZXCmNR/wAsMrmk&#xA;dO0Mh9PoFMYG6qa6PrunavA8lo7CSIhLq1lUxzwORXhNE1GRvCvUbio3xVH4qkOt6vfTXw0HRGC6&#xA;o6LLeXjLzjsrdyR6jA/C0r8WEKHqRyb4VNVUy0jSbLSbCOxskKwR8mqxLu7uxeSR3apZ3dizMdyT&#xA;XFUZirsVYPLBfL+ZUZkS7gtLn441inaK2mMUG80ioWEpUqiemSnjRxuCrOMCuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kqd1cJbW01zIrskKNI6xo0jkIKkKiBmZttgoqcVYt+W&#xA;+ravqujvd317HdxBlSFRFMkqHgHpJLLHber8Lr8QhXuamuyrLcVdiqVaz5dtdRkS7jlksdWhXjba&#xA;nbUWZFrXg3IFJYyescgK96VoQqx3UvO2r6VcQ6DqEdsuuXTKltqQYLYCF24C5nRn9SBqgqsLN+8e&#xA;iJIfiKKso0TRrbSLEW0LPNI7GW6upiGmnmf7csrACrNT5AAKoCgAKo/FXYq7FWG/mBZ6g1zpV5Zu&#xA;0RjeSBpY3VWV5eJibg8cyyUKGideRHH4qYQrL7dZlgjWZg8yqoldQQCwHxEAk0BPvgVfirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirC/yz1HVrrTZFu7cJCSZlmFw1wfVlYtJE&#xA;eUUPEr1PXcnoKAEqzTArsVSLVvM4stQSzgtZLyRPjvIYwwnEbD4GgRgqzDmQHKt8PfegxVFWXl3T&#xA;LaK+SRPrjam7vqEt0FkaYNUCN/hCmNEPBEpQL9JKqGs9Lby7HcPazXN1pQVfq+k8TPJC9QoW3cnm&#xA;I6H7Dkhf2SqimKrPKPm238wWXqlUtrysjtZCQSOsIleONywAU81QN8NaVHtiqf4q7FUs8yS6hBpE&#xA;s9hI6TxFHb0ofrEhjDASBIhUs3GpFAT7Hpirfl17x9IhN4lwlxykDC7MZmI9RuJf0gqfZpsB9J6l&#xA;VMsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY35L1i2v7eSO3hsrZY4oJn&#xA;t7KZpSjzBqhwYoQoAQBKE7eAAqqyTFWP+cde1HR7SCaxijmdnrMrrK59JaBuKxqx3LAV6j9lXail&#xA;VX0Wyubq0sr7WoVfUoqy2/qonq2/qoAy/B8IbqDx6Dap6lVOcVdirHNS8m2jR3FzpLtZavJO12t2&#xA;Xdw0zD7MvIsTESFqop9laU4rRVCeWp9U0DRdR/T0Uvp2I+sLcNMJzLyU1ijBEfxjgvTZ3bYLXipV&#xA;lFreW10jNBIrmNjHMqsrGOQAFo34k8WWu4wKrYqk/lW7muNNmjuJWmns7y8tXZ934w3LrDzNBUmH&#xA;g1ffFU4xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVK/LssE9nNPFbRWx+t&#xA;XkDLCoUMLa7lhDGnduHI+5OKovUhdtYzpZSpDfPG62kkg5IJeJKcl7io3HhirFvKWha/LqX6e15o&#xA;+dzCrpZUkYwzMqHkiy7w0HJOFWp/NvQFWZYFdirsVdiqhe6fZX0aR3cKzJHIk0fIbrJEwZHU9VZS&#xA;NiMVSVrS68s6cn6Js/0haJJLPqatIq3khkbkZkZgscjLvVXK/DSh2ClVbZ+etM1OBJ9BtL3WYnFf&#xA;UtoDDGB/xlvDaxEjoVVywPUYqhNOm84W2o6tdLoam11C4S5jjlu40nXjbxW/HigljJ/cBj8YpU7n&#xA;FUxPme6twG1LQ9QtYqkPcRpFeRggV2S0kmuCp/m9Ie9MVTPTdU03U7VbvT7mO6t2JHqRMGAYdVNO&#xA;jDuDuMVRWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpDd+ZLie7l0/y/aDU7u3cxXlw8&#xA;no2ds9K8JZgsjNJv/dxoxH7XGoJVbXSfNE7B73Xvq9BtFptrDEtf8o3f10t9HH5Yqp23lS/tLd4b&#xA;TzFqEYaSaajR2Dj1J5GlcmtqDQyOTQEe1MVS46Z5q03WDrd8I/MqxRCK3jgUWk9qtKSG3gkaSKWS&#xA;XrIxlQ0FFFPhxVk+l6rYapZreWUnqQsSpqrI6OhoyOjAMjqdmVhUYqi8VaDKxYAglTRgOxoDQ/Qc&#xA;VUBqOnm+Oni6iN+EMptA6+t6alQX9OvLiC6707jxxVTudZ0q1m9G4u4opeUUZRmFQ05YRgj/ACuD&#xA;U+WKozFWL6jbDXvMF1p16pl0TSYYZZrAfZu7qYs4Eor8ccSItEPwszfEPhGKqlv5+8uTwwPavJKs&#xA;ziNVRKFahjUgkfDSNtxXpTrthpUW3m/y+mrXGlT3S293alVlE3wJydY2UBz8PxCZKeJ2FSDQKqWv&#xA;mzyxdzSQ22q2szxKjSGOZGUCRmVRzB4klkIpWo28RiqT6vJpiQS+cvL9xDNJa8X1SS1kV4ru0iA9&#xA;ZJeB4PJFFV4m+0CAteLMCqy3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqg9alv4tGv5dOT&#xA;1NQjt5Ws46V5TBCYxTvVqYqxabWDofl3SF8uxC40yaxkube8MLzmZ+MbxKVjaMmS59Z5Wcmp4tsW&#xA;OKtJ+ZFzKZhHoF4hikWFVuAYHeSScwRhFdKnkSpJ/ZBNfs4aVvzB5117SdauIk0trzTraIs3oRyP&#xA;I0giEoX1CVUFt1UcCD/NWqhVZF+ZF41xJEugXtyB6bD0I9lV/STjykKByGdyT8OwHzxpUZNban/j&#xA;XUYtFuobP6xY29xqZlgacetzkhhkULLCBI0cZUk8qhFqNhUKnGn6XrENwJr3WZrtVqPqyw28URqO&#xA;rURpaj2cD2xVIG8j6ymo/WLfWZI4bq/F/qCxc4WqFkFIwHdXDD0U4yAgBK96YVVD+XNvJN6k+q3s&#xA;hMP1d2LIZGUSepVnZWNeVPlQUpjaptqPlSw1C9NzcTXFCtsDArgITZyPLE1ePPkGlbfl4EfEAQFV&#xA;r3yx5av7lrq+0myurlqcp57eKRzQUFWZSdhtiqU3Xl79B3T6j5d0+MWk8Qt9U0ezEdq0iKSUnt2X&#xA;01E0fNgQWXmpHxAotVUNpGj/AJd6k4hsai8tzyls2uLqC7jIX0wZoHdJgeFFBdfs0psBjap5qHlT&#xA;QNRiuYr219eO7nS6uFaSQBpokWNHFGHEhUUfDTpiqBuvLvkbR7Vri+WCzteT857u4ZU5zsWkq8r0&#xA;rIXflv8AFyetebVVS6z0u31e3XTNLtZ7TyuZYp7y6ujN6l4IgnCCGO4JlEJEaB3agKjioIbkFWa4&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqx39Daxo00svl9oprCVmlk0S5JiRZHJZ2tp1&#xA;VzFyY8jGyMpPQpviqoPNEKkDUtI1KzlQhkU2j3grQ7q9j9bQU9yDiqo3m/SgP959SJ8Bpeo/9UMV&#xA;UH1TzTqK+npmmfoyN6Vv9UZCVBI+KO1gd3c07SPFT36YqmWjaNb6XBIqSPcXVw/rXt7MQZp5SAvN&#xA;yoVdlAVVUBVUAKABiqPxV2KuxV2KuxV2KoPUtF0fVFRdTsLe+WIkxrcxJMFLCh48w1K4qlw8k+XU&#xA;UpFFPBCwo9vBd3cMLDpRoo5VjIptuOm3TFURYeVPLVhOlzaaXaxXaV43QiQz79f3pBkP/BYqmuKu&#xA;xV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:AA37C3031D2068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:AA37C3031D2068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AA37C3031D2068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T12:33:26+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -256.73 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 256.73 li
393.545 256.73 li
393.545 0 li
cp
clp
[1 0 0 1 0 0 ]ct
130.428 37.5513 mo
141.353 43.6519 141.353 53.5435 130.428 59.6445 cv
119.504 65.7451 101.792 65.7451 90.8667 59.6445 cv
79.9419 53.5435 79.9419 43.6519 90.8667 37.5513 cv
101.792 31.4507 119.504 31.4507 130.428 37.5513 cv
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.908262 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
130.428 37.5513 mo
141.353 43.6519 141.353 53.5435 130.428 59.6445 cv
119.504 65.7451 101.792 65.7451 90.8667 59.6445 cv
79.9419 53.5435 79.9419 43.6519 90.8667 37.5513 cv
101.792 31.4507 119.504 31.4507 130.428 37.5513 cv
.746 .676 .668 .898 cmyk
@
100.642 52.5942 mo
100.642 52.3418 li
100.468 52.3418 li
99.8398 52.3418 99.8135 52.2544 99.8135 51.9321 cv
99.8135 47.3018 li
99.8135 46.979 99.8398 46.8921 100.468 46.8921 cv
100.642 46.8921 li
100.642 46.6392 li
99.2905 46.6392 li
99.0986 46.6392 99.0898 46.6479 99.02 46.8135 cv
97.1191 51.7749 li
95.2188 46.8052 li
95.1577 46.6392 95.1489 46.6392 94.9482 46.6392 cv
93.5967 46.6392 li
93.5967 46.8921 li
93.771 46.8921 li
94.3989 46.8921 94.4253 46.979 94.4253 47.3018 cv
94.4253 51.6963 li
94.4253 51.9321 94.4253 52.3418 93.5967 52.3418 cv
93.5967 52.5942 li
93.8232 52.5771 94.2856 52.5771 94.5298 52.5771 cv
94.7739 52.5771 95.2358 52.5771 95.4629 52.5942 cv
95.4629 52.3418 li
94.6343 52.3418 94.6343 51.9321 94.6343 51.6963 cv
94.6343 46.9355 li
94.6431 46.9355 li
96.7446 52.4287 li
96.7793 52.5249 96.8057 52.5942 96.8926 52.5942 cv
96.9712 52.5942 96.9888 52.5508 97.041 52.4204 cv
99.1597 46.8921 li
99.1685 46.8921 li
99.1685 51.9321 li
99.1685 52.2544 99.1421 52.3418 98.5146 52.3418 cv
98.3398 52.3418 li
98.3398 52.5942 li
98.5405 52.5771 99.2383 52.5771 99.4912 52.5771 cv
99.7437 52.5771 100.441 52.5771 100.642 52.5942 cv
cp
0 0 0 1 cmyk
f
105.167 51.8184 mo
105.167 51.3301 li
104.976 51.3301 li
104.976 51.8184 li
104.976 52.3154 104.766 52.3853 104.644 52.3853 cv
104.313 52.3853 104.313 51.9233 104.313 51.7925 cv
104.313 50.2666 li
104.313 49.7954 104.313 49.4468 103.929 49.1069 cv
103.624 48.8276 103.231 48.7056 102.848 48.7056 cv
102.133 48.7056 101.583 49.1768 101.583 49.7432 cv
101.583 49.9961 101.75 50.1182 101.95 50.1182 cv
102.159 50.1182 102.307 49.9702 102.307 49.7607 cv
102.307 49.4033 101.994 49.4033 101.863 49.4033 cv
102.063 49.0371 102.482 48.8799 102.831 48.8799 cv
103.231 48.8799 103.746 49.2114 103.746 49.9961 cv
103.746 50.3447 li
101.994 50.3711 101.331 51.1035 101.331 51.7749 cv
101.331 52.4639 102.133 52.6816 102.665 52.6816 cv
103.24 52.6816 103.633 52.333 103.798 51.9146 cv
103.833 52.3242 104.104 52.6382 104.479 52.6382 cv
104.662 52.6382 105.167 52.5161 105.167 51.8184 cv
cp
103.746 51.3652 mo
103.746 52.2197 103.109 52.5073 102.734 52.5073 cv
102.307 52.5073 101.95 52.1934 101.95 51.7749 cv
101.95 50.624 103.432 50.5195 103.746 50.502 cv
103.746 51.3652 li
cp
f
109.806 52.5903 mo
109.806 52.3418 li
109.205 52.3418 109.135 52.2808 109.135 51.8535 cv
109.135 46.5435 li
107.922 46.6392 li
107.922 46.8921 li
108.516 46.8921 108.585 46.9531 108.585 47.3804 cv
108.585 49.3071 li
108.402 49.0542 108.027 48.7495 107.495 48.7495 cv
106.484 48.7495 105.612 49.604 105.612 50.7197 cv
105.612 51.8271 106.44 52.6816 107.399 52.6816 cv
108.062 52.6816 108.446 52.2456 108.568 52.0801 cv
108.568 52.6816 li
109.806 52.5903 li
cp
108.568 51.5742 mo
108.568 51.7314 108.568 51.7573 108.446 51.9468 cv
108.236 52.2485 107.879 52.4985 107.443 52.4985 cv
107.216 52.4985 106.274 52.4116 106.274 50.7285 cv
106.274 50.1006 106.379 49.752 106.571 49.4644 cv
106.746 49.1938 107.094 48.9238 107.53 48.9238 cv
108.071 48.9238 108.376 49.3159 108.463 49.4556 cv
108.568 49.604 108.568 49.6211 108.568 49.7783 cv
108.568 51.5742 li
cp
f
114.052 50.7285 mo
114.052 49.604 113.198 48.7056 112.187 48.7056 cv
111.14 48.7056 110.312 49.6299 110.312 50.7285 cv
110.312 51.8447 111.184 52.6816 112.178 52.6816 cv
113.207 52.6816 114.052 51.8271 114.052 50.7285 cv
cp
113.39 50.6499 mo
113.39 50.9556 113.39 51.4956 113.163 51.9058 cv
112.919 52.3242 112.518 52.4897 112.187 52.4897 cv
111.864 52.4897 111.471 52.3501 111.218 51.9233 cv
110.983 51.5308 110.974 51.0161 110.974 50.6499 cv
110.974 50.3188 110.974 49.7871 111.245 49.3945 cv
111.489 49.0195 111.873 48.8799 112.178 48.8799 cv
112.518 48.8799 112.884 49.0371 113.119 49.377 cv
113.39 49.7783 113.39 50.3276 113.39 50.6499 cv
cp
f
118.865 52.5942 mo
118.865 52.3418 li
118.429 52.3418 118.211 52.3418 118.203 52.0801 cv
118.203 50.4756 li
118.203 49.665 118.203 49.4209 118.002 49.1416 cv
117.749 48.8018 117.339 48.7495 117.043 48.7495 cv
116.197 48.7495 115.866 49.4731 115.796 49.6475 cv
115.788 49.6475 li
115.788 48.7495 li
114.602 48.8452 li
114.602 49.0981 li
115.194 49.0981 115.264 49.1592 115.264 49.5864 cv
115.264 51.9492 li
115.264 52.3418 115.168 52.3418 114.602 52.3418 cv
114.602 52.5942 li
114.828 52.5771 115.299 52.5771 115.543 52.5771 cv
115.796 52.5771 116.267 52.5771 116.494 52.5942 cv
116.494 52.3418 li
115.936 52.3418 115.831 52.3418 115.831 51.9492 cv
115.831 50.3276 li
115.831 49.4121 116.433 48.9238 116.973 48.9238 cv
117.514 48.9238 117.636 49.3682 117.636 49.9004 cv
117.636 51.9492 li
117.636 52.3418 117.54 52.3418 116.973 52.3418 cv
116.973 52.5942 li
117.2 52.5771 117.671 52.5771 117.915 52.5771 cv
118.168 52.5771 118.639 52.5771 118.865 52.5942 cv
cp
f
123.608 52.5942 mo
123.608 52.3418 li
123.173 52.3418 122.955 52.3418 122.946 52.0801 cv
122.946 50.4756 li
122.946 49.665 122.946 49.4209 122.746 49.1416 cv
122.493 48.8018 122.083 48.7495 121.786 48.7495 cv
120.94 48.7495 120.609 49.4731 120.54 49.6475 cv
120.531 49.6475 li
120.531 48.7495 li
119.345 48.8452 li
119.345 49.0981 li
119.938 49.0981 120.007 49.1592 120.007 49.5864 cv
120.007 51.9492 li
120.007 52.3418 119.912 52.3418 119.345 52.3418 cv
119.345 52.5942 li
119.572 52.5771 120.042 52.5771 120.287 52.5771 cv
120.54 52.5771 121.01 52.5771 121.237 52.5942 cv
121.237 52.3418 li
120.679 52.3418 120.574 52.3418 120.574 51.9492 cv
120.574 50.3276 li
120.574 49.4121 121.176 48.9238 121.716 48.9238 cv
122.257 48.9238 122.379 49.3682 122.379 49.9004 cv
122.379 51.9492 li
122.379 52.3418 122.283 52.3418 121.716 52.3418 cv
121.716 52.5942 li
121.943 52.5771 122.414 52.5771 122.658 52.5771 cv
122.911 52.5771 123.382 52.5771 123.608 52.5942 cv
cp
f
127.942 51.8184 mo
127.942 51.3301 li
127.75 51.3301 li
127.75 51.8184 li
127.75 52.3154 127.541 52.3853 127.419 52.3853 cv
127.087 52.3853 127.087 51.9233 127.087 51.7925 cv
127.087 50.2666 li
127.087 49.7954 127.087 49.4468 126.704 49.1069 cv
126.399 48.8276 126.006 48.7056 125.623 48.7056 cv
124.908 48.7056 124.358 49.1768 124.358 49.7432 cv
124.358 49.9961 124.524 50.1182 124.725 50.1182 cv
124.934 50.1182 125.082 49.9702 125.082 49.7607 cv
125.082 49.4033 124.768 49.4033 124.638 49.4033 cv
124.838 49.0371 125.256 48.8799 125.605 48.8799 cv
126.006 48.8799 126.521 49.2114 126.521 49.9961 cv
126.521 50.3447 li
124.768 50.3711 124.105 51.1035 124.105 51.7749 cv
124.105 52.4639 124.908 52.6816 125.44 52.6816 cv
126.015 52.6816 126.408 52.333 126.573 51.9146 cv
126.608 52.3242 126.878 52.6382 127.253 52.6382 cv
127.437 52.6382 127.942 52.5161 127.942 51.8184 cv
cp
126.521 51.3652 mo
126.521 52.2197 125.884 52.5073 125.509 52.5073 cv
125.082 52.5073 124.725 52.1934 124.725 51.7749 cv
124.725 50.624 126.207 50.5195 126.521 50.502 cv
126.521 51.3652 li
cp
f
157.676 134.453 mo
168.6 140.553 168.6 150.444 157.676 156.545 cv
146.751 162.646 129.039 162.646 118.114 156.545 cv
107.189 150.444 107.189 140.553 118.114 134.453 cv
129.039 128.352 146.751 128.352 157.676 134.453 cv
0 0 0 0 cmyk
f
157.676 134.453 mo
168.6 140.553 168.6 150.444 157.676 156.545 cv
146.751 162.646 129.039 162.646 118.114 156.545 cv
107.189 150.444 107.189 140.553 118.114 134.453 cv
129.039 128.351 146.751 128.351 157.676 134.453 cv
.746 .676 .668 .898 cmyk
@
122.261 145.527 mo
122.104 143.583 li
116.873 143.583 li
116.715 145.527 li
116.907 145.527 li
117.029 144.15 117.108 143.836 118.485 143.836 cv
118.643 143.836 118.887 143.836 118.957 143.854 cv
119.131 143.879 119.14 143.984 119.14 144.185 cv
119.14 148.823 li
119.14 149.12 119.14 149.242 118.285 149.242 cv
117.971 149.242 li
117.971 149.495 li
118.25 149.477 119.148 149.477 119.488 149.477 cv
119.828 149.477 120.735 149.477 121.014 149.495 cv
121.014 149.242 li
120.7 149.242 li
119.846 149.242 119.846 149.12 119.846 148.823 cv
119.846 144.185 li
119.846 143.967 119.863 143.888 120.002 143.854 cv
120.072 143.836 120.325 143.836 120.491 143.836 cv
121.869 143.836 121.947 144.15 122.069 145.527 cv
122.261 145.527 li
cp
0 0 0 1 cmyk
f
125.871 147.629 mo
125.871 146.504 125.016 145.606 124.005 145.606 cv
122.958 145.606 122.13 146.53 122.13 147.629 cv
122.13 148.745 123.002 149.582 123.996 149.582 cv
125.025 149.582 125.871 148.728 125.871 147.629 cv
cp
125.208 147.55 mo
125.208 147.855 125.208 148.396 124.981 148.806 cv
124.737 149.225 124.336 149.39 124.005 149.39 cv
123.682 149.39 123.29 149.25 123.037 148.823 cv
122.802 148.431 122.793 147.917 122.793 147.55 cv
122.793 147.219 122.793 146.687 123.063 146.295 cv
123.307 145.92 123.691 145.78 123.996 145.78 cv
124.336 145.78 124.703 145.937 124.938 146.277 cv
125.208 146.678 125.208 147.228 125.208 147.55 cv
cp
f
133.056 149.495 mo
133.056 149.242 li
132.62 149.242 132.401 149.242 132.393 148.98 cv
132.393 147.376 li
132.393 146.565 132.393 146.321 132.192 146.042 cv
131.939 145.702 131.53 145.649 131.233 145.649 cv
130.509 145.649 130.143 146.173 130.004 146.513 cv
129.882 145.841 129.411 145.649 128.861 145.649 cv
128.016 145.649 127.685 146.373 127.615 146.547 cv
127.606 146.547 li
127.606 145.649 li
126.42 145.746 li
126.42 145.999 li
127.013 145.999 127.083 146.059 127.083 146.487 cv
127.083 148.85 li
127.083 149.242 126.987 149.242 126.42 149.242 cv
126.42 149.495 li
126.647 149.477 127.118 149.477 127.362 149.477 cv
127.615 149.477 128.085 149.477 128.312 149.495 cv
128.312 149.242 li
127.754 149.242 127.649 149.242 127.649 148.85 cv
127.649 147.228 li
127.649 146.312 128.251 145.824 128.792 145.824 cv
129.333 145.824 129.455 146.269 129.455 146.8 cv
129.455 148.85 li
129.455 149.242 129.358 149.242 128.792 149.242 cv
128.792 149.495 li
129.019 149.477 129.489 149.477 129.733 149.477 cv
129.986 149.477 130.457 149.477 130.684 149.495 cv
130.684 149.242 li
130.126 149.242 130.021 149.242 130.021 148.85 cv
130.021 147.228 li
130.021 146.312 130.623 145.824 131.164 145.824 cv
131.704 145.824 131.826 146.269 131.826 146.8 cv
131.826 148.85 li
131.826 149.242 131.73 149.242 131.164 149.242 cv
131.164 149.495 li
131.39 149.477 131.861 149.477 132.105 149.477 cv
132.358 149.477 132.829 149.477 133.056 149.495 cv
cp
f
142.132 149.495 mo
142.132 149.242 li
141.958 149.242 li
141.33 149.242 141.304 149.155 141.304 148.832 cv
141.304 144.202 li
141.304 143.879 141.33 143.792 141.958 143.792 cv
142.132 143.792 li
142.132 143.54 li
141.923 143.557 141.208 143.557 140.955 143.557 cv
140.694 143.557 139.979 143.557 139.77 143.54 cv
139.77 143.792 li
139.944 143.792 li
140.572 143.792 140.598 143.879 140.598 144.202 cv
140.598 146.269 li
137.991 146.269 li
137.991 144.202 li
137.991 143.879 138.017 143.792 138.645 143.792 cv
138.819 143.792 li
138.819 143.54 li
138.61 143.557 137.895 143.557 137.642 143.557 cv
137.38 143.557 136.666 143.557 136.456 143.54 cv
136.456 143.792 li
136.63 143.792 li
137.258 143.792 137.284 143.879 137.284 144.202 cv
137.284 148.832 li
137.284 149.155 137.258 149.242 136.63 149.242 cv
136.456 149.242 li
136.456 149.495 li
136.666 149.477 137.38 149.477 137.633 149.477 cv
137.895 149.477 138.61 149.477 138.819 149.495 cv
138.819 149.242 li
138.645 149.242 li
138.017 149.242 137.991 149.155 137.991 148.832 cv
137.991 146.521 li
140.598 146.521 li
140.598 148.832 li
140.598 149.155 140.572 149.242 139.944 149.242 cv
139.77 149.242 li
139.77 149.495 li
139.979 149.477 140.694 149.477 140.946 149.477 cv
141.208 149.477 141.923 149.477 142.132 149.495 cv
cp
f
146.631 148.719 mo
146.631 148.23 li
146.439 148.23 li
146.439 148.719 li
146.439 149.216 146.23 149.286 146.108 149.286 cv
145.777 149.286 145.777 148.823 145.777 148.692 cv
145.777 147.167 li
145.777 146.696 145.777 146.347 145.394 146.007 cv
145.088 145.728 144.696 145.606 144.312 145.606 cv
143.597 145.606 143.048 146.077 143.048 146.644 cv
143.048 146.896 143.213 147.019 143.414 147.019 cv
143.624 147.019 143.771 146.87 143.771 146.661 cv
143.771 146.303 143.458 146.303 143.327 146.303 cv
143.527 145.937 143.946 145.78 144.295 145.78 cv
144.696 145.78 145.21 146.112 145.21 146.896 cv
145.21 147.245 li
143.458 147.271 142.795 148.004 142.795 148.675 cv
142.795 149.364 143.597 149.582 144.129 149.582 cv
144.705 149.582 145.097 149.233 145.263 148.814 cv
145.297 149.225 145.568 149.539 145.943 149.539 cv
146.126 149.539 146.631 149.417 146.631 148.719 cv
cp
145.21 148.265 mo
145.21 149.12 144.574 149.408 144.199 149.408 cv
143.771 149.408 143.414 149.094 143.414 148.675 cv
143.414 147.524 144.896 147.419 145.21 147.402 cv
145.21 148.265 li
cp
f
151.314 149.495 mo
151.314 149.242 li
150.878 149.242 150.66 149.242 150.651 148.98 cv
150.651 147.376 li
150.651 146.565 150.651 146.321 150.451 146.042 cv
150.198 145.702 149.788 145.649 149.491 145.649 cv
148.646 145.649 148.314 146.373 148.245 146.547 cv
148.236 146.547 li
148.236 145.649 li
147.05 145.746 li
147.05 145.999 li
147.643 145.999 147.713 146.059 147.713 146.487 cv
147.713 148.85 li
147.713 149.242 147.617 149.242 147.05 149.242 cv
147.05 149.495 li
147.277 149.477 147.748 149.477 147.992 149.477 cv
148.245 149.477 148.715 149.477 148.942 149.495 cv
148.942 149.242 li
148.384 149.242 148.279 149.242 148.279 148.85 cv
148.279 147.228 li
148.279 146.312 148.881 145.824 149.422 145.824 cv
149.962 145.824 150.084 146.269 150.084 146.8 cv
150.084 148.85 li
150.084 149.242 149.988 149.242 149.422 149.242 cv
149.422 149.495 li
149.648 149.477 150.119 149.477 150.363 149.477 cv
150.616 149.477 151.087 149.477 151.314 149.495 cv
cp
f
155.874 149.495 mo
155.874 149.242 li
155.639 149.242 155.368 149.242 155.124 148.884 cv
153.956 147.184 li
153.895 147.097 li
153.895 147.071 154.444 146.6 154.514 146.53 cv
155.115 146.007 155.499 145.999 155.682 145.99 cv
155.682 145.737 li
155.508 145.754 155.281 145.754 155.02 145.754 cv
154.793 145.754 154.348 145.754 154.147 145.737 cv
154.147 145.99 li
154.296 145.999 154.4 146.077 154.4 146.216 cv
154.4 146.391 154.217 146.547 154.217 146.547 cv
152.97 147.646 li
152.97 143.443 li
151.758 143.54 li
151.758 143.792 li
152.352 143.792 152.421 143.854 152.421 144.281 cv
152.421 148.85 li
152.421 149.242 152.325 149.242 151.758 149.242 cv
151.758 149.495 li
152.002 149.477 152.421 149.477 152.683 149.477 cv
152.944 149.477 153.363 149.477 153.607 149.495 cv
153.607 149.242 li
153.049 149.242 152.944 149.242 152.944 148.85 cv
152.944 147.925 li
153.502 147.437 li
154.339 148.64 li
154.47 148.823 154.531 148.919 154.531 149.042 cv
154.531 149.198 154.409 149.242 154.226 149.242 cv
154.226 149.495 li
154.444 149.477 154.871 149.477 155.107 149.477 cv
155.481 149.477 155.499 149.477 155.874 149.495 cv
cp
f
159.091 148.387 mo
159.091 147.917 158.804 147.638 158.725 147.559 cv
158.411 147.289 158.176 147.236 157.601 147.132 cv
157.339 147.08 156.702 146.958 156.702 146.434 cv
156.702 146.164 156.885 145.763 157.67 145.763 cv
158.621 145.763 158.673 146.574 158.69 146.844 cv
158.699 146.914 158.76 146.914 158.786 146.914 cv
158.882 146.914 158.882 146.87 158.882 146.713 cv
158.882 145.807 li
158.882 145.649 158.882 145.606 158.795 145.606 cv
158.725 145.606 158.56 145.798 158.499 145.876 cv
158.228 145.658 157.958 145.606 157.679 145.606 cv
156.624 145.606 156.31 146.181 156.31 146.661 cv
156.31 146.757 156.31 147.062 156.641 147.367 cv
156.92 147.611 157.217 147.672 157.618 147.751 cv
158.097 147.847 158.211 147.873 158.429 148.047 cv
158.585 148.178 158.699 148.37 158.699 148.614 cv
158.699 148.989 158.481 149.408 157.714 149.408 cv
157.138 149.408 156.72 149.076 156.528 148.204 cv
156.493 148.047 156.484 148.03 156.484 148.03 cv
156.467 147.995 156.432 147.995 156.406 147.995 cv
156.31 147.995 156.31 148.039 156.31 148.196 cv
156.31 149.381 li
156.31 149.539 156.31 149.582 156.397 149.582 cv
156.441 149.582 156.449 149.573 156.598 149.39 cv
156.641 149.329 156.641 149.312 156.772 149.172 cv
157.104 149.582 157.574 149.582 157.723 149.582 cv
158.638 149.582 159.091 149.076 159.091 148.387 cv
cp
f
48.209 106.212 mo
59.1338 112.313 59.1338 122.205 48.209 128.306 cv
37.2847 134.406 19.5718 134.406 8.64746 128.306 cv
-2.27734 122.205 -2.27734 112.313 8.64746 106.212 cv
19.5718 100.112 37.2847 100.112 48.209 106.212 cv
0 0 0 0 cmyk
f
48.209 106.213 mo
59.1338 112.313 59.1338 122.205 48.209 128.305 cv
37.2847 134.407 19.5718 134.407 8.64746 128.305 cv
-2.27734 122.205 -2.27734 112.313 8.64746 106.213 cv
19.5718 100.111 37.2847 100.111 48.209 106.213 cv
.746 .676 .668 .898 cmyk
@
22.1938 110.737 mo
22.1938 109.892 21.3477 109.124 20.1709 109.124 cv
17.2324 109.124 li
17.2324 109.377 li
17.4067 109.377 li
18.0347 109.377 18.0605 109.464 18.0605 109.787 cv
18.0605 114.417 li
18.0605 114.739 18.0347 114.827 17.4067 114.827 cv
17.2324 114.827 li
17.2324 115.08 li
17.4414 115.062 18.1567 115.062 18.4097 115.062 cv
18.6709 115.062 19.3862 115.062 19.5952 115.08 cv
19.5952 114.827 li
19.4209 114.827 li
18.793 114.827 18.7671 114.739 18.7671 114.417 cv
18.7671 112.307 li
20.2407 112.307 li
21.2607 112.307 22.1938 111.618 22.1938 110.737 cv
cp
21.3828 110.737 mo
21.3828 111.104 21.3828 112.097 19.9614 112.097 cv
18.7495 112.097 li
18.7495 109.726 li
18.7495 109.438 18.7671 109.377 19.1504 109.377 cv
19.9702 109.377 li
21.3828 109.377 21.3828 110.362 21.3828 110.737 cv
cp
0 0 0 1 cmyk
f
25.9951 114.042 mo
25.9951 113.99 25.9517 113.955 25.8994 113.955 cv
25.8296 113.955 25.812 113.998 25.7949 114.042 cv
25.5679 114.774 24.9839 114.975 24.6177 114.975 cv
24.2515 114.975 23.3706 114.73 23.3706 113.222 cv
23.3706 113.057 li
25.7861 113.057 li
25.978 113.057 25.9951 113.057 25.9951 112.891 cv
25.9951 112.01 25.5244 111.19 24.4692 111.19 cv
23.4756 111.19 22.708 112.089 22.708 113.17 cv
22.708 114.321 23.5977 115.167 24.5654 115.167 cv
25.603 115.167 25.9951 114.225 25.9951 114.042 cv
cp
25.4546 112.891 mo
23.3794 112.891 li
23.4492 111.522 24.2163 111.365 24.4604 111.365 cv
25.3936 111.365 25.4458 112.594 25.4546 112.891 cv
cp
f
30.7822 115.08 mo
30.7822 114.827 li
30.3462 114.827 30.1284 114.827 30.1196 114.565 cv
30.1196 112.96 li
30.1196 112.15 30.1196 111.906 29.9189 111.626 cv
29.666 111.287 29.2563 111.234 28.96 111.234 cv
28.1143 111.234 27.7827 111.958 27.7129 112.132 cv
27.7041 112.132 li
27.7041 111.234 li
26.5186 111.33 li
26.5186 111.583 li
27.1113 111.583 27.1812 111.644 27.1812 112.071 cv
27.1812 114.434 li
27.1812 114.827 27.085 114.827 26.5186 114.827 cv
26.5186 115.08 li
26.7451 115.062 27.2158 115.062 27.46 115.062 cv
27.7129 115.062 28.1836 115.062 28.4106 115.08 cv
28.4106 114.827 li
27.8525 114.827 27.748 114.827 27.748 114.434 cv
27.748 112.813 li
27.748 111.897 28.3496 111.409 28.8901 111.409 cv
29.4307 111.409 29.5527 111.853 29.5527 112.385 cv
29.5527 114.434 li
29.5527 114.827 29.457 114.827 28.8901 114.827 cv
28.8901 115.08 li
29.1167 115.062 29.5874 115.062 29.8315 115.062 cv
30.0845 115.062 30.5557 115.062 30.7822 115.08 cv
cp
f
35.5254 115.08 mo
35.5254 114.827 li
35.0894 114.827 34.8716 114.827 34.8628 114.565 cv
34.8628 112.96 li
34.8628 112.15 34.8628 111.906 34.6621 111.626 cv
34.4092 111.287 33.9995 111.234 33.7031 111.234 cv
32.8574 111.234 32.5259 111.958 32.4561 112.132 cv
32.4478 112.132 li
32.4478 111.234 li
31.2617 111.33 li
31.2617 111.583 li
31.8545 111.583 31.9243 111.644 31.9243 112.071 cv
31.9243 114.434 li
31.9243 114.827 31.8286 114.827 31.2617 114.827 cv
31.2617 115.08 li
31.4883 115.062 31.9595 115.062 32.2036 115.062 cv
32.4561 115.062 32.9272 115.062 33.1538 115.08 cv
33.1538 114.827 li
32.5957 114.827 32.4912 114.827 32.4912 114.434 cv
32.4912 112.813 li
32.4912 111.897 33.0928 111.409 33.6333 111.409 cv
34.1738 111.409 34.2959 111.853 34.2959 112.385 cv
34.2959 114.434 li
34.2959 114.827 34.2002 114.827 33.6333 114.827 cv
33.6333 115.08 li
33.8599 115.062 34.3311 115.062 34.5752 115.062 cv
34.8281 115.062 35.2988 115.062 35.5254 115.08 cv
cp
f
39.8413 111.574 mo
39.8413 111.321 li
39.5889 111.339 39.4668 111.339 39.1875 111.339 cv
38.4814 111.321 li
38.4814 111.574 li
38.8037 111.592 38.8823 111.792 38.8823 111.949 cv
38.8823 112.028 38.8647 112.071 38.8301 112.159 cv
37.9409 114.356 li
36.9727 111.984 li
36.9204 111.862 36.9204 111.801 36.9204 111.801 cv
36.9204 111.574 37.2256 111.574 37.3999 111.574 cv
37.3999 111.321 li
37.1733 111.339 36.7461 111.339 36.502 111.339 cv
35.6563 111.321 li
35.6563 111.574 li
36.1621 111.574 36.2319 111.618 36.3452 111.888 cv
37.644 115.08 li
37.2607 116.003 37.2607 116.021 37.2256 116.091 cv
37.0776 116.353 36.8423 116.684 36.4497 116.684 cv
36.1792 116.684 36.0137 116.527 36.0137 116.527 cv
36.0137 116.527 36.3188 116.492 36.3188 116.187 cv
36.3188 115.978 36.1533 115.864 35.9961 115.864 cv
35.8481 115.864 35.665 115.951 35.665 116.204 cv
35.665 116.536 35.9878 116.858 36.4497 116.858 cv
36.938 116.858 37.2954 116.431 37.522 115.881 cv
39.0308 112.167 li
39.2661 111.583 39.6758 111.574 39.8413 111.574 cv
cp
f
19.5864 127.435 mo
19.5864 127.182 li
19.4121 127.182 li
18.7842 127.182 18.7583 127.095 18.7583 126.772 cv
18.7583 122.142 li
18.7583 121.819 18.7842 121.732 19.4121 121.732 cv
19.5864 121.732 li
19.5864 121.479 li
18.2349 121.479 li
18.0435 121.479 18.0347 121.488 17.9648 121.654 cv
16.064 126.615 li
14.1631 121.645 li
14.1021 121.479 14.0933 121.479 13.8931 121.479 cv
12.5415 121.479 li
12.5415 121.732 li
12.7158 121.732 li
13.3438 121.732 13.3696 121.819 13.3696 122.142 cv
13.3696 126.537 li
13.3696 126.772 13.3696 127.182 12.5415 127.182 cv
12.5415 127.435 li
12.7681 127.417 13.23 127.417 13.4741 127.417 cv
13.7183 127.417 14.1807 127.417 14.4072 127.435 cv
14.4072 127.182 li
13.5791 127.182 13.5791 126.772 13.5791 126.537 cv
13.5791 121.776 li
13.5879 121.776 li
15.689 127.269 li
15.7241 127.365 15.75 127.435 15.8374 127.435 cv
15.9155 127.435 15.9331 127.391 15.9854 127.26 cv
18.1045 121.732 li
18.1128 121.732 li
18.1128 126.772 li
18.1128 127.095 18.0869 127.182 17.459 127.182 cv
17.2847 127.182 li
17.2847 127.435 li
17.4854 127.417 18.1826 127.417 18.4355 127.417 cv
18.6885 127.417 19.3862 127.417 19.5864 127.435 cv
cp
f
24.1118 126.659 mo
24.1118 126.17 li
23.9199 126.17 li
23.9199 126.659 li
23.9199 127.156 23.7109 127.226 23.5889 127.226 cv
23.2573 127.226 23.2573 126.763 23.2573 126.632 cv
23.2573 125.106 li
23.2573 124.636 23.2573 124.287 22.8735 123.947 cv
22.5684 123.668 22.1763 123.546 21.7925 123.546 cv
21.0776 123.546 20.5283 124.017 20.5283 124.583 cv
20.5283 124.836 20.6938 124.958 20.8945 124.958 cv
21.1035 124.958 21.252 124.81 21.252 124.601 cv
21.252 124.244 20.938 124.244 20.8071 124.244 cv
21.0078 123.877 21.4263 123.72 21.7749 123.72 cv
22.1763 123.72 22.6904 124.052 22.6904 124.836 cv
22.6904 125.185 li
20.938 125.211 20.2754 125.944 20.2754 126.615 cv
20.2754 127.304 21.0776 127.522 21.6094 127.522 cv
22.1851 127.522 22.5771 127.173 22.7432 126.754 cv
22.7778 127.165 23.0483 127.478 23.4229 127.478 cv
23.606 127.478 24.1118 127.356 24.1118 126.659 cv
cp
22.6904 126.205 mo
22.6904 127.06 22.0542 127.348 21.6792 127.348 cv
21.252 127.348 20.8945 127.034 20.8945 126.615 cv
20.8945 125.464 22.377 125.359 22.6904 125.342 cv
22.6904 126.205 li
cp
f
27.3291 124.095 mo
27.3291 123.833 27.0938 123.589 26.7188 123.589 cv
25.978 123.589 25.7251 124.392 25.6729 124.557 cv
25.6641 124.557 li
25.6641 123.589 li
24.4956 123.686 li
24.4956 123.938 li
25.0884 123.938 25.1582 124 25.1582 124.426 cv
25.1582 126.79 li
25.1582 127.182 25.0625 127.182 24.4956 127.182 cv
24.4956 127.435 li
24.7397 127.417 25.2192 127.417 25.481 127.417 cv
25.7163 127.417 26.3354 127.417 26.5356 127.435 cv
26.5356 127.182 li
26.3613 127.182 li
25.7251 127.182 25.7075 127.086 25.7075 126.772 cv
25.7075 125.403 li
25.7075 124.557 26.0562 123.764 26.7275 123.764 cv
26.7974 123.764 26.8149 123.764 26.8496 123.772 cv
26.7798 123.808 26.6406 123.86 26.6406 124.095 cv
26.6406 124.348 26.8408 124.444 26.9805 124.444 cv
27.1548 124.444 27.3291 124.331 27.3291 124.095 cv
cp
f
30.6426 126.327 mo
30.6426 125.856 30.355 125.578 30.2764 125.499 cv
29.9624 125.229 29.7271 125.176 29.1519 125.072 cv
28.8901 125.02 28.2534 124.897 28.2534 124.374 cv
28.2534 124.104 28.4365 123.703 29.2212 123.703 cv
30.1719 123.703 30.2241 124.514 30.2417 124.784 cv
30.2505 124.854 30.3115 124.854 30.3374 124.854 cv
30.4336 124.854 30.4336 124.81 30.4336 124.653 cv
30.4336 123.747 li
30.4336 123.589 30.4336 123.546 30.3462 123.546 cv
30.2764 123.546 30.1108 123.738 30.0498 123.816 cv
29.7793 123.598 29.5093 123.546 29.23 123.546 cv
28.1753 123.546 27.8613 124.122 27.8613 124.601 cv
27.8613 124.697 27.8613 125.002 28.1924 125.307 cv
28.4717 125.551 28.7681 125.612 29.1689 125.691 cv
29.6484 125.787 29.7622 125.813 29.98 125.987 cv
30.1367 126.118 30.2505 126.31 30.2505 126.554 cv
30.2505 126.929 30.0322 127.348 29.2651 127.348 cv
28.6895 127.348 28.271 127.016 28.0791 126.144 cv
28.0444 125.987 28.0356 125.97 28.0356 125.97 cv
28.0181 125.935 27.9834 125.935 27.957 125.935 cv
27.8613 125.935 27.8613 125.979 27.8613 126.135 cv
27.8613 127.321 li
27.8613 127.478 27.8613 127.522 27.9482 127.522 cv
27.9922 127.522 28.0005 127.513 28.1489 127.33 cv
28.1924 127.269 28.1924 127.251 28.3232 127.112 cv
28.6548 127.522 29.1255 127.522 29.2739 127.522 cv
30.1895 127.522 30.6426 127.016 30.6426 126.327 cv
cp
f
35.4819 127.435 mo
35.4819 127.182 li
35.0459 127.182 34.8281 127.182 34.8193 126.92 cv
34.8193 125.316 li
34.8193 124.505 34.8193 124.261 34.6187 123.982 cv
34.3657 123.642 33.9561 123.589 33.6597 123.589 cv
32.9097 123.589 32.561 124.156 32.439 124.426 cv
32.4302 124.426 li
32.4302 121.383 li
31.2183 121.479 li
31.2183 121.732 li
31.811 121.732 31.8809 121.793 31.8809 122.221 cv
31.8809 126.79 li
31.8809 127.182 31.7847 127.182 31.2183 127.182 cv
31.2183 127.435 li
31.4448 127.417 31.9155 127.417 32.1597 127.417 cv
32.4126 127.417 32.8833 127.417 33.1104 127.435 cv
33.1104 127.182 li
32.5522 127.182 32.4478 127.182 32.4478 126.79 cv
32.4478 125.167 li
32.4478 124.252 33.0493 123.764 33.5898 123.764 cv
34.1304 123.764 34.2524 124.208 34.2524 124.74 cv
34.2524 126.79 li
34.2524 127.182 34.1567 127.182 33.5898 127.182 cv
33.5898 127.435 li
33.8164 127.417 34.2871 127.417 34.5313 127.417 cv
34.7842 127.417 35.2554 127.417 35.4819 127.435 cv
cp
f
39.8154 126.659 mo
39.8154 126.17 li
39.6235 126.17 li
39.6235 126.659 li
39.6235 127.156 39.4141 127.226 39.292 127.226 cv
38.9609 127.226 38.9609 126.763 38.9609 126.632 cv
38.9609 125.106 li
38.9609 124.636 38.9609 124.287 38.5771 123.947 cv
38.272 123.668 37.8799 123.546 37.4961 123.546 cv
36.7813 123.546 36.2319 124.017 36.2319 124.583 cv
36.2319 124.836 36.3975 124.958 36.5981 124.958 cv
36.8071 124.958 36.9556 124.81 36.9556 124.601 cv
36.9556 124.244 36.6416 124.244 36.5107 124.244 cv
36.7114 123.877 37.1299 123.72 37.4785 123.72 cv
37.8799 123.72 38.394 124.052 38.394 124.836 cv
38.394 125.185 li
36.6416 125.211 35.979 125.944 35.979 126.615 cv
35.979 127.304 36.7813 127.522 37.313 127.522 cv
37.8882 127.522 38.2808 127.173 38.4463 126.754 cv
38.4814 127.165 38.7515 127.478 39.1265 127.478 cv
39.3096 127.478 39.8154 127.356 39.8154 126.659 cv
cp
38.394 126.205 mo
38.394 127.06 37.7578 127.348 37.3828 127.348 cv
36.9556 127.348 36.5981 127.034 36.5981 126.615 cv
36.5981 125.464 38.0801 125.359 38.394 125.342 cv
38.394 126.205 li
cp
f
42.1172 127.435 mo
42.1172 127.182 li
41.5591 127.182 41.4546 127.182 41.4546 126.79 cv
41.4546 121.383 li
40.2427 121.479 li
40.2427 121.732 li
40.8354 121.732 40.9053 121.793 40.9053 122.221 cv
40.9053 126.79 li
40.9053 127.182 40.8096 127.182 40.2427 127.182 cv
40.2427 127.435 li
40.4868 127.417 40.9141 127.417 41.1758 127.417 cv
41.437 127.417 41.873 127.417 42.1172 127.435 cv
cp
f
44.4888 127.435 mo
44.4888 127.182 li
43.9312 127.182 43.8262 127.182 43.8262 126.79 cv
43.8262 121.383 li
42.6143 121.479 li
42.6143 121.732 li
43.207 121.732 43.2769 121.793 43.2769 122.221 cv
43.2769 126.79 li
43.2769 127.182 43.1812 127.182 42.6143 127.182 cv
42.6143 127.435 li
42.8584 127.417 43.2856 127.417 43.5474 127.417 cv
43.8091 127.417 44.2446 127.417 44.4888 127.435 cv
cp
f
264.488 113.38 mo
275.413 119.481 275.413 129.373 264.488 135.474 cv
253.562 141.574 235.85 141.574 224.926 135.474 cv
214.001 129.373 214.001 119.481 224.926 113.38 cv
235.85 107.28 253.562 107.28 264.488 113.38 cv
0 0 0 0 cmyk
f
264.488 113.381 mo
275.413 119.481 275.413 129.373 264.488 135.473 cv
253.562 141.574 235.85 141.574 224.926 135.473 cv
214.001 129.373 214.001 119.481 224.926 113.381 cv
235.85 107.279 253.562 107.279 264.488 113.381 cv
.746 .676 .668 .898 cmyk
@
239.95 122.247 mo
239.95 121.994 li
239.479 121.994 239.331 121.95 239.052 121.532 cv
237.09 118.593 li
237.221 118.454 237.561 118.131 237.701 118 cv
238.904 116.806 239.148 116.562 239.836 116.544 cv
239.836 116.292 li
239.583 116.309 239.479 116.309 239.086 116.309 cv
238.86 116.309 238.345 116.309 238.145 116.292 cv
238.145 116.544 li
238.329 116.553 238.485 116.631 238.485 116.823 cv
238.485 116.954 238.424 117.033 238.232 117.216 cv
235.573 119.788 li
235.573 116.972 li
235.573 116.544 235.668 116.544 236.401 116.544 cv
236.401 116.292 li
236.192 116.309 235.477 116.309 235.224 116.309 cv
234.962 116.309 234.248 116.309 234.039 116.292 cv
234.039 116.544 li
234.771 116.544 234.867 116.544 234.867 116.972 cv
234.867 121.567 li
234.867 121.994 234.771 121.994 234.039 121.994 cv
234.039 122.247 li
234.248 122.229 234.962 122.229 235.215 122.229 cv
235.477 122.229 236.192 122.229 236.401 122.247 cv
236.401 121.994 li
235.668 121.994 235.573 121.994 235.573 121.567 cv
235.573 120.049 li
236.611 119.047 li
238.223 121.462 li
238.258 121.514 238.293 121.576 238.311 121.619 cv
238.329 121.654 238.337 121.698 238.337 121.75 cv
238.337 121.994 238.023 121.994 237.883 121.994 cv
237.883 122.247 li
238.093 122.229 238.729 122.229 238.982 122.229 cv
239.208 122.229 239.645 122.229 239.95 122.247 cv
cp
0 0 0 1 cmyk
f
243.865 121.209 mo
243.865 121.157 243.822 121.122 243.769 121.122 cv
243.7 121.122 243.682 121.166 243.665 121.209 cv
243.438 121.942 242.854 122.142 242.488 122.142 cv
242.121 122.142 241.241 121.898 241.241 120.39 cv
241.241 120.224 li
243.656 120.224 li
243.847 120.224 243.865 120.224 243.865 120.058 cv
243.865 119.178 243.394 118.358 242.339 118.358 cv
241.345 118.358 240.578 119.256 240.578 120.337 cv
240.578 121.488 241.467 122.334 242.435 122.334 cv
243.472 122.334 243.865 121.392 243.865 121.209 cv
cp
243.325 120.058 mo
241.25 120.058 li
241.319 118.689 242.086 118.532 242.331 118.532 cv
243.263 118.532 243.316 119.762 243.325 120.058 cv
cp
f
248.452 118.742 mo
248.452 118.489 li
248.199 118.506 248.077 118.506 247.806 118.506 cv
247.091 118.489 li
247.091 118.742 li
247.458 118.759 247.5 119.021 247.5 119.117 cv
247.5 119.195 247.484 119.239 247.44 119.343 cv
246.55 121.593 li
245.574 119.134 li
245.531 119.012 245.522 119.012 245.522 118.968 cv
245.522 118.742 245.853 118.742 246.01 118.742 cv
246.01 118.489 li
245.792 118.506 245.338 118.506 245.103 118.506 cv
244.266 118.489 li
244.266 118.742 li
244.754 118.742 244.841 118.776 244.946 119.047 cv
246.193 122.168 li
246.237 122.291 246.254 122.334 246.359 122.334 cv
246.419 122.334 246.472 122.316 246.533 122.168 cv
247.667 119.317 li
247.745 119.125 247.893 118.75 248.452 118.742 cv
cp
f
250.718 122.247 mo
250.718 121.994 li
250.152 121.994 250.117 121.95 250.117 121.61 cv
250.117 118.402 li
248.931 118.498 li
248.931 118.75 li
249.489 118.75 249.568 118.803 249.568 119.23 cv
249.568 121.602 li
249.568 121.994 249.471 121.994 248.905 121.994 cv
248.905 122.247 li
249.149 122.229 249.568 122.229 249.82 122.229 cv
249.917 122.229 250.422 122.229 250.718 122.247 cv
cp
250.23 116.98 mo
250.23 116.719 250.021 116.553 249.812 116.553 cv
249.568 116.553 249.384 116.745 249.384 116.98 cv
249.384 117.207 249.576 117.399 249.803 117.399 cv
250.064 117.399 250.23 117.189 250.23 116.98 cv
cp
f
255.532 122.247 mo
255.532 121.994 li
255.095 121.994 254.877 121.994 254.869 121.732 cv
254.869 120.128 li
254.869 119.317 254.869 119.073 254.668 118.794 cv
254.416 118.454 254.005 118.402 253.709 118.402 cv
252.864 118.402 252.532 119.125 252.462 119.3 cv
252.454 119.3 li
252.454 118.402 li
251.268 118.498 li
251.268 118.75 li
251.861 118.75 251.93 118.812 251.93 119.239 cv
251.93 121.602 li
251.93 121.994 251.834 121.994 251.268 121.994 cv
251.268 122.247 li
251.495 122.229 251.965 122.229 252.209 122.229 cv
252.462 122.229 252.933 122.229 253.16 122.247 cv
253.16 121.994 li
252.602 121.994 252.498 121.994 252.498 121.602 cv
252.498 119.98 li
252.498 119.064 253.099 118.576 253.639 118.576 cv
254.18 118.576 254.302 119.021 254.302 119.553 cv
254.302 121.602 li
254.302 121.994 254.207 121.994 253.639 121.994 cv
253.639 122.247 li
253.866 122.229 254.336 122.229 254.581 122.229 cv
254.833 122.229 255.305 122.229 255.532 122.247 cv
cp
f
238.704 133.006 mo
238.704 132.3 238.067 131.603 237.029 131.489 cv
237.857 131.333 238.459 130.774 238.459 130.121 cv
238.459 129.371 237.701 128.647 236.558 128.647 cv
233.515 128.647 li
233.515 128.9 li
233.69 128.9 li
234.317 128.9 234.343 128.987 234.343 129.31 cv
234.343 133.939 li
234.343 134.262 234.317 134.349 233.69 134.349 cv
233.515 134.349 li
233.515 134.602 li
236.793 134.602 li
237.918 134.602 238.704 133.844 238.704 133.006 cv
cp
237.692 130.121 mo
237.692 130.696 237.238 131.419 236.27 131.419 cv
235.006 131.419 li
235.006 129.249 li
235.006 128.96 235.024 128.9 235.408 128.9 cv
236.505 128.9 li
237.377 128.9 237.692 129.649 237.692 130.121 cv
cp
237.91 132.998 mo
237.91 133.704 237.377 134.349 236.523 134.349 cv
235.408 134.349 li
235.024 134.349 235.006 134.288 235.006 134 cv
235.006 131.594 li
236.636 131.594 li
237.474 131.594 237.91 132.327 237.91 132.998 cv
cp
f
243.316 133.826 mo
243.316 133.338 li
243.124 133.338 li
243.124 133.826 li
243.124 134.323 242.915 134.393 242.792 134.393 cv
242.461 134.393 242.461 133.931 242.461 133.8 cv
242.461 132.274 li
242.461 131.803 242.461 131.455 242.078 131.114 cv
241.772 130.835 241.38 130.713 240.997 130.713 cv
240.282 130.713 239.732 131.184 239.732 131.751 cv
239.732 132.004 239.898 132.126 240.098 132.126 cv
240.307 132.126 240.456 131.978 240.456 131.768 cv
240.456 131.411 240.142 131.411 240.011 131.411 cv
240.211 131.044 240.63 130.888 240.979 130.888 cv
241.38 130.888 241.894 131.219 241.894 132.004 cv
241.894 132.353 li
240.142 132.378 239.479 133.111 239.479 133.783 cv
239.479 134.471 240.282 134.689 240.813 134.689 cv
241.388 134.689 241.781 134.34 241.947 133.922 cv
241.982 134.332 242.251 134.646 242.626 134.646 cv
242.81 134.646 243.316 134.524 243.316 133.826 cv
cp
241.894 133.373 mo
241.894 134.227 241.258 134.515 240.883 134.515 cv
240.456 134.515 240.098 134.201 240.098 133.783 cv
240.098 132.631 241.581 132.527 241.894 132.509 cv
241.894 133.373 li
cp
f
246.996 133.564 mo
246.996 133.486 246.934 133.486 246.908 133.486 cv
246.83 133.486 246.821 133.512 246.794 133.617 cv
246.603 134.236 246.132 134.498 245.662 134.498 cv
245.129 134.498 244.423 134.036 244.423 132.71 cv
244.423 131.263 245.165 130.905 245.6 130.905 cv
245.931 130.905 246.411 131.036 246.612 131.376 cv
246.507 131.376 246.184 131.376 246.184 131.733 cv
246.184 131.943 246.333 132.091 246.542 132.091 cv
246.743 132.091 246.908 131.969 246.908 131.716 cv
246.908 131.132 246.297 130.713 245.591 130.713 cv
244.571 130.713 243.76 131.62 243.76 132.719 cv
243.76 133.835 244.597 134.689 245.583 134.689 cv
246.734 134.689 246.996 133.643 246.996 133.564 cv
cp
f
251.25 132.736 mo
251.25 131.611 250.396 130.713 249.384 130.713 cv
248.338 130.713 247.509 131.638 247.509 132.736 cv
247.509 133.852 248.381 134.689 249.375 134.689 cv
250.405 134.689 251.25 133.835 251.25 132.736 cv
cp
250.587 132.658 mo
250.587 132.963 250.587 133.503 250.361 133.913 cv
250.117 134.332 249.715 134.498 249.384 134.498 cv
249.062 134.498 248.669 134.358 248.417 133.931 cv
248.181 133.539 248.172 133.024 248.172 132.658 cv
248.172 132.327 248.172 131.794 248.443 131.402 cv
248.687 131.027 249.071 130.888 249.375 130.888 cv
249.715 130.888 250.082 131.044 250.317 131.385 cv
250.587 131.786 250.587 132.335 250.587 132.658 cv
cp
f
256.063 134.602 mo
256.063 134.349 li
255.627 134.349 255.41 134.349 255.401 134.088 cv
255.401 132.483 li
255.401 131.672 255.401 131.428 255.2 131.149 cv
254.947 130.809 254.538 130.757 254.241 130.757 cv
253.395 130.757 253.064 131.48 252.994 131.655 cv
252.986 131.655 li
252.986 130.757 li
251.799 130.853 li
251.799 131.105 li
252.392 131.105 252.462 131.167 252.462 131.594 cv
252.462 133.957 li
252.462 134.349 252.367 134.349 251.799 134.349 cv
251.799 134.602 li
252.026 134.584 252.498 134.584 252.742 134.584 cv
252.994 134.584 253.465 134.584 253.692 134.602 cv
253.692 134.349 li
253.133 134.349 253.029 134.349 253.029 133.957 cv
253.029 132.335 li
253.029 131.419 253.63 130.931 254.171 130.931 cv
254.711 130.931 254.833 131.376 254.833 131.908 cv
254.833 133.957 li
254.833 134.349 254.738 134.349 254.171 134.349 cv
254.171 134.602 li
254.398 134.584 254.869 134.584 255.113 134.584 cv
255.366 134.584 255.836 134.584 256.063 134.602 cv
cp
f
384.898 55.6265 mo
395.823 61.7271 395.823 71.6187 384.898 77.7197 cv
373.974 83.8203 356.261 83.8203 345.336 77.7197 cv
334.412 71.6187 334.412 61.7271 345.336 55.6265 cv
356.261 49.5259 373.974 49.5259 384.898 55.6265 cv
0 0 0 0 cmyk
f
384.898 55.6265 mo
395.823 61.7271 395.823 71.6187 384.898 77.7197 cv
373.974 83.8203 356.261 83.8203 345.336 77.7197 cv
334.412 71.6187 334.412 61.7271 345.336 55.6265 cv
356.261 49.5259 373.974 49.5259 384.898 55.6265 cv
.746 .676 .668 .898 cmyk
@
359.977 58.791 mo
359.977 58.5381 li
359.759 58.5557 359.131 58.5557 358.878 58.5557 cv
358.591 58.5557 357.833 58.5557 357.597 58.5381 cv
357.597 58.791 li
357.868 58.791 li
358.643 58.791 358.669 58.8955 358.669 59.2095 cv
358.669 63.2114 li
358.669 63.9878 358.259 64.502 357.789 64.502 cv
357.606 64.502 357.091 64.4321 356.83 63.9268 cv
357.091 63.9702 357.353 63.8135 357.353 63.4995 cv
357.353 63.29 357.213 63.0723 356.917 63.0723 cv
356.716 63.0723 356.49 63.1943 356.49 63.5171 cv
356.49 64.1357 357.056 64.6763 357.815 64.6763 cv
358.547 64.6763 359.359 64.1533 359.359 63.1943 cv
359.359 59.1748 li
359.359 58.8345 359.393 58.791 359.977 58.791 cv
cp
0 0 0 1 cmyk
f
364.433 62.6274 mo
364.433 61.5024 363.579 60.6045 362.567 60.6045 cv
361.521 60.6045 360.693 61.5288 360.693 62.6274 cv
360.693 63.7437 361.564 64.5806 362.558 64.5806 cv
363.587 64.5806 364.433 63.7261 364.433 62.6274 cv
cp
363.77 62.5488 mo
363.77 62.854 363.77 63.395 363.543 63.8047 cv
363.299 64.2231 362.898 64.3887 362.567 64.3887 cv
362.245 64.3887 361.852 64.2495 361.599 63.8218 cv
361.364 63.4297 361.355 62.915 361.355 62.5488 cv
361.355 62.2178 361.355 61.686 361.625 61.2935 cv
361.87 60.9185 362.253 60.7788 362.558 60.7788 cv
362.898 60.7788 363.265 60.936 363.5 61.2759 cv
363.77 61.6772 363.77 62.2266 363.77 62.5488 cv
cp
f
369.246 64.4937 mo
369.246 64.2407 li
368.81 64.2407 368.592 64.2407 368.583 63.979 cv
368.583 62.3745 li
368.583 61.564 368.583 61.3198 368.383 61.0405 cv
368.13 60.7007 367.72 60.6479 367.423 60.6479 cv
366.674 60.6479 366.325 61.2148 366.203 61.4854 cv
366.195 61.4854 li
366.195 58.4424 li
364.982 58.5381 li
364.982 58.791 li
365.576 58.791 365.645 58.8521 365.645 59.2793 cv
365.645 63.8481 li
365.645 64.2407 365.549 64.2407 364.982 64.2407 cv
364.982 64.4937 li
365.209 64.4761 365.68 64.4761 365.924 64.4761 cv
366.177 64.4761 366.648 64.4761 366.875 64.4937 cv
366.875 64.2407 li
366.316 64.2407 366.211 64.2407 366.211 63.8481 cv
366.211 62.2266 li
366.211 61.311 366.813 60.8228 367.354 60.8228 cv
367.895 60.8228 368.017 61.2671 368.017 61.7993 cv
368.017 63.8481 li
368.017 64.2407 367.92 64.2407 367.354 64.2407 cv
367.354 64.4937 li
367.581 64.4761 368.051 64.4761 368.295 64.4761 cv
368.548 64.4761 369.019 64.4761 369.246 64.4937 cv
cp
f
373.99 64.4937 mo
373.99 64.2407 li
373.553 64.2407 373.335 64.2407 373.327 63.979 cv
373.327 62.3745 li
373.327 61.564 373.327 61.3198 373.126 61.0405 cv
372.874 60.7007 372.463 60.6479 372.167 60.6479 cv
371.322 60.6479 370.99 61.3721 370.92 61.5464 cv
370.912 61.5464 li
370.912 60.6479 li
369.726 60.7441 li
369.726 60.9971 li
370.319 60.9971 370.388 61.0581 370.388 61.4854 cv
370.388 63.8481 li
370.388 64.2407 370.292 64.2407 369.726 64.2407 cv
369.726 64.4937 li
369.953 64.4761 370.423 64.4761 370.667 64.4761 cv
370.92 64.4761 371.391 64.4761 371.618 64.4937 cv
371.618 64.2407 li
371.06 64.2407 370.955 64.2407 370.955 63.8481 cv
370.955 62.2266 li
370.955 61.311 371.557 60.8228 372.097 60.8228 cv
372.638 60.8228 372.76 61.2671 372.76 61.7993 cv
372.76 63.8481 li
372.76 64.2407 372.665 64.2407 372.097 64.2407 cv
372.097 64.4937 li
372.324 64.4761 372.794 64.4761 373.039 64.4761 cv
373.292 64.4761 373.763 64.4761 373.99 64.4937 cv
cp
f
356.96 75.2529 mo
356.96 74.5469 356.324 73.8491 355.287 73.7358 cv
356.115 73.5791 356.716 73.021 356.716 72.3667 cv
356.716 71.6172 355.958 70.8936 354.816 70.8936 cv
351.773 70.8936 li
351.773 71.146 li
351.947 71.146 li
352.575 71.146 352.601 71.2334 352.601 71.5562 cv
352.601 76.186 li
352.601 76.5088 352.575 76.5957 351.947 76.5957 cv
351.773 76.5957 li
351.773 76.8486 li
355.051 76.8486 li
356.176 76.8486 356.96 76.0903 356.96 75.2529 cv
cp
355.949 72.3667 mo
355.949 72.9424 355.496 73.666 354.528 73.666 cv
353.263 73.666 li
353.263 71.4951 li
353.263 71.2075 353.281 71.146 353.665 71.146 cv
354.763 71.146 li
355.635 71.146 355.949 71.896 355.949 72.3667 cv
cp
356.167 75.2441 mo
356.167 75.9507 355.635 76.5957 354.781 76.5957 cv
353.665 76.5957 li
353.281 76.5957 353.263 76.5347 353.263 76.2471 cv
353.263 73.8403 li
354.894 73.8403 li
355.731 73.8403 356.167 74.5728 356.167 75.2441 cv
cp
f
360.989 75.811 mo
360.989 75.7588 360.945 75.7241 360.893 75.7241 cv
360.824 75.7241 360.806 75.7676 360.789 75.811 cv
360.562 76.5435 359.977 76.7441 359.611 76.7441 cv
359.245 76.7441 358.365 76.5 358.365 74.9917 cv
358.365 74.8257 li
360.78 74.8257 li
360.971 74.8257 360.989 74.8257 360.989 74.6602 cv
360.989 73.7793 360.518 72.96 359.463 72.96 cv
358.469 72.96 357.702 73.8579 357.702 74.939 cv
357.702 76.0903 358.591 76.936 359.559 76.936 cv
360.596 76.936 360.989 75.9941 360.989 75.811 cv
cp
360.449 74.6602 mo
358.374 74.6602 li
358.443 73.291 359.21 73.1343 359.455 73.1343 cv
360.387 73.1343 360.44 74.3638 360.449 74.6602 cv
cp
f
363.395 76.8486 mo
363.395 76.5957 li
362.837 76.5957 362.733 76.5957 362.733 76.2036 cv
362.733 70.7974 li
361.521 70.8936 li
361.521 71.146 li
362.114 71.146 362.183 71.2075 362.183 71.6343 cv
362.183 76.2036 li
362.183 76.5957 362.087 76.5957 361.521 76.5957 cv
361.521 76.8486 li
361.765 76.8311 362.192 76.8311 362.454 76.8311 cv
362.715 76.8311 363.151 76.8311 363.395 76.8486 cv
cp
f
368.148 76.8486 mo
368.148 76.5957 li
367.554 76.5957 367.485 76.5347 367.485 76.1074 cv
367.485 73.0034 li
366.255 73.0991 li
366.255 73.3521 li
366.848 73.3521 366.918 73.4131 366.918 73.8403 cv
366.918 75.4014 li
366.918 76.1426 366.526 76.7612 365.872 76.7612 cv
365.157 76.7612 365.113 76.3516 365.113 75.8896 cv
365.113 73.0034 li
363.883 73.0991 li
363.883 73.3521 li
364.546 73.3521 364.546 73.3784 364.546 74.1543 cv
364.546 75.4624 li
364.546 76.0029 364.546 76.3169 364.808 76.6045 cv
365.017 76.8311 365.375 76.936 365.82 76.936 cv
365.967 76.936 366.247 76.936 366.543 76.6831 cv
366.796 76.4824 366.935 76.1509 366.935 76.1509 cv
366.935 76.936 li
368.148 76.8486 li
cp
f
371.417 75.7412 mo
371.417 75.2705 371.129 74.9917 371.051 74.9131 cv
370.737 74.6426 370.501 74.5903 369.926 74.4858 cv
369.665 74.4336 369.028 74.3115 369.028 73.7881 cv
369.028 73.5181 369.211 73.1167 369.996 73.1167 cv
370.947 73.1167 370.999 73.9277 371.016 74.1978 cv
371.025 74.2676 371.085 74.2676 371.112 74.2676 cv
371.208 74.2676 371.208 74.2241 371.208 74.0674 cv
371.208 73.1606 li
371.208 73.0034 371.208 72.96 371.121 72.96 cv
371.051 72.96 370.885 73.1519 370.825 73.23 cv
370.554 73.0122 370.284 72.96 370.004 72.96 cv
368.95 72.96 368.636 73.5352 368.636 74.0151 cv
368.636 74.1108 368.636 74.416 368.967 74.7212 cv
369.246 74.9653 369.542 75.0264 369.944 75.105 cv
370.423 75.2007 370.537 75.2271 370.754 75.4014 cv
370.912 75.5322 371.025 75.7241 371.025 75.9683 cv
371.025 76.3428 370.807 76.7612 370.04 76.7612 cv
369.464 76.7612 369.045 76.4302 368.854 75.5581 cv
368.819 75.4014 368.81 75.3838 368.81 75.3838 cv
368.792 75.3491 368.757 75.3491 368.732 75.3491 cv
368.636 75.3491 368.636 75.3926 368.636 75.5493 cv
368.636 76.7354 li
368.636 76.8921 368.636 76.936 368.723 76.936 cv
368.766 76.936 368.775 76.9272 368.923 76.7441 cv
368.967 76.6831 368.967 76.6655 369.098 76.5259 cv
369.429 76.936 369.9 76.936 370.048 76.936 cv
370.963 76.936 371.417 76.4302 371.417 75.7412 cv
cp
f
376.256 76.8486 mo
376.256 76.5957 li
375.821 76.5957 375.602 76.5957 375.594 76.3345 cv
375.594 74.73 li
375.594 73.9189 375.594 73.6748 375.393 73.396 cv
375.14 73.0557 374.731 73.0034 374.434 73.0034 cv
373.684 73.0034 373.335 73.5703 373.213 73.8403 cv
373.205 73.8403 li
373.205 70.7974 li
371.993 70.8936 li
371.993 71.146 li
372.585 71.146 372.656 71.2075 372.656 71.6343 cv
372.656 76.2036 li
372.656 76.5957 372.559 76.5957 371.993 76.5957 cv
371.993 76.8486 li
372.219 76.8311 372.69 76.8311 372.934 76.8311 cv
373.187 76.8311 373.658 76.8311 373.885 76.8486 cv
373.885 76.5957 li
373.327 76.5957 373.222 76.5957 373.222 76.2036 cv
373.222 74.5815 li
373.222 73.666 373.824 73.1777 374.365 73.1777 cv
374.905 73.1777 375.027 73.6226 375.027 74.1543 cv
375.027 76.2036 li
375.027 76.5957 374.931 76.5957 374.365 76.5957 cv
374.365 76.8486 li
374.591 76.8311 375.062 76.8311 375.306 76.8311 cv
375.559 76.8311 376.03 76.8311 376.256 76.8486 cv
cp
f
378.558 76.8486 mo
378.558 76.5957 li
377.992 76.5957 377.957 76.5522 377.957 76.2124 cv
377.957 73.0034 li
376.771 73.0991 li
376.771 73.3521 li
377.329 73.3521 377.408 73.4048 377.408 73.8315 cv
377.408 76.2036 li
377.408 76.5957 377.312 76.5957 376.745 76.5957 cv
376.745 76.8486 li
376.989 76.8311 377.408 76.8311 377.661 76.8311 cv
377.756 76.8311 378.262 76.8311 378.558 76.8486 cv
cp
378.07 71.582 mo
378.07 71.3208 377.861 71.1548 377.652 71.1548 cv
377.408 71.1548 377.224 71.3467 377.224 71.582 cv
377.224 71.8091 377.417 72.0005 377.643 72.0005 cv
377.905 72.0005 378.07 71.7915 378.07 71.582 cv
cp
f
268.34 5.62256 mo
281.393 12.5142 281.393 23.687 268.34 30.5781 cv
255.288 37.4702 234.125 37.4702 221.072 30.5781 cv
208.019 23.687 208.019 12.5142 221.072 5.62256 cv
234.125 -1.26855 255.288 -1.26855 268.34 5.62256 cv
0 0 0 0 cmyk
f
268.34 5.62256 mo
281.393 12.5142 281.393 23.687 268.34 30.5781 cv
255.288 37.4702 234.125 37.4702 221.072 30.5781 cv
208.019 23.687 208.019 12.5142 221.072 5.62256 cv
234.125 -1.26855 255.288 -1.26855 268.34 5.62256 cv
.746 .676 .668 .898 cmyk
@
237.287 12.9995 mo
237.287 11.3169 236.109 9.96533 234.662 9.96533 cv
231.61 9.96533 li
231.61 10.2183 li
231.785 10.2183 li
232.413 10.2183 232.438 10.3052 232.438 10.6279 cv
232.438 15.2578 li
232.438 15.5806 232.413 15.6675 231.785 15.6675 cv
231.61 15.6675 li
231.61 15.9204 li
234.662 15.9204 li
236.118 15.9204 237.287 14.6128 237.287 12.9995 cv
cp
236.493 12.9907 mo
236.493 13.479 236.484 14.2988 235.987 14.9438 cv
235.7 15.3101 235.176 15.6675 234.444 15.6675 cv
233.528 15.6675 li
233.145 15.6675 233.127 15.6069 233.127 15.3188 cv
233.127 10.5669 li
233.127 10.2793 233.145 10.2183 233.528 10.2183 cv
234.444 10.2183 li
235.167 10.2183 235.743 10.5669 236.1 11.1421 cv
236.493 11.7612 236.493 12.6421 236.493 12.9907 cv
cp
0 0 0 1 cmyk
f
241.768 14.0547 mo
241.768 12.9297 240.914 12.0317 239.902 12.0317 cv
238.856 12.0317 238.028 12.9561 238.028 14.0547 cv
238.028 15.1704 238.899 16.0078 239.893 16.0078 cv
240.922 16.0078 241.768 15.1533 241.768 14.0547 cv
cp
241.105 13.9761 mo
241.105 14.2813 241.105 14.8218 240.878 15.2319 cv
240.634 15.6504 240.234 15.8159 239.902 15.8159 cv
239.58 15.8159 239.187 15.6763 238.934 15.249 cv
238.699 14.8569 238.69 14.3423 238.69 13.9761 cv
238.69 13.645 238.69 13.1128 238.96 12.7207 cv
239.205 12.3457 239.588 12.2061 239.893 12.2061 cv
240.234 12.2061 240.599 12.3633 240.835 12.7031 cv
241.105 13.104 241.105 13.6538 241.105 13.9761 cv
cp
f
246.582 15.9204 mo
246.582 15.6675 li
246.145 15.6675 245.927 15.6675 245.918 15.4063 cv
245.918 13.8018 li
245.918 12.9907 245.918 12.7466 245.718 12.4678 cv
245.465 12.1274 245.055 12.0752 244.758 12.0752 cv
243.913 12.0752 243.582 12.7988 243.512 12.9736 cv
243.503 12.9736 li
243.503 12.0752 li
242.317 12.1714 li
242.317 12.4243 li
242.911 12.4243 242.98 12.4854 242.98 12.9126 cv
242.98 15.2754 li
242.98 15.6675 242.884 15.6675 242.317 15.6675 cv
242.317 15.9204 li
242.544 15.9028 243.015 15.9028 243.259 15.9028 cv
243.512 15.9028 243.983 15.9028 244.209 15.9204 cv
244.209 15.6675 li
243.652 15.6675 243.546 15.6675 243.546 15.2754 cv
243.546 13.6538 li
243.546 12.7378 244.148 12.2495 244.689 12.2495 cv
245.23 12.2495 245.352 12.6943 245.352 13.2261 cv
245.352 15.2754 li
245.352 15.6675 245.255 15.6675 244.689 15.6675 cv
244.689 15.9204 li
244.916 15.9028 245.386 15.9028 245.63 15.9028 cv
245.883 15.9028 246.354 15.9028 246.582 15.9204 cv
cp
f
250.915 15.1445 mo
250.915 14.6563 li
250.723 14.6563 li
250.723 15.1445 li
250.723 15.6416 250.513 15.7114 250.391 15.7114 cv
250.06 15.7114 250.06 15.249 250.06 15.1187 cv
250.06 13.5923 li
250.06 13.1216 250.06 12.7729 249.676 12.4326 cv
249.372 12.1538 248.979 12.0317 248.595 12.0317 cv
247.88 12.0317 247.331 12.5024 247.331 13.0693 cv
247.331 13.3223 247.497 13.4443 247.697 13.4443 cv
247.907 13.4443 248.054 13.2959 248.054 13.0869 cv
248.054 12.7295 247.741 12.7295 247.61 12.7295 cv
247.81 12.3633 248.229 12.2061 248.578 12.2061 cv
248.979 12.2061 249.494 12.5376 249.494 13.3223 cv
249.494 13.6709 li
247.741 13.6973 247.078 14.4297 247.078 15.1011 cv
247.078 15.7896 247.88 16.0078 248.412 16.0078 cv
248.988 16.0078 249.38 15.6587 249.545 15.2407 cv
249.581 15.6504 249.851 15.9644 250.226 15.9644 cv
250.409 15.9644 250.915 15.8423 250.915 15.1445 cv
cp
249.494 14.6909 mo
249.494 15.5454 248.857 15.8335 248.482 15.8335 cv
248.054 15.8335 247.697 15.5195 247.697 15.1011 cv
247.697 13.9497 249.179 13.8452 249.494 13.8276 cv
249.494 14.6909 li
cp
f
253.216 15.9204 mo
253.216 15.6675 li
252.659 15.6675 252.554 15.6675 252.554 15.2754 cv
252.554 9.86963 li
251.341 9.96533 li
251.341 10.2183 li
251.935 10.2183 252.004 10.2793 252.004 10.7065 cv
252.004 15.2754 li
252.004 15.6675 251.909 15.6675 251.341 15.6675 cv
251.341 15.9204 li
251.585 15.9028 252.013 15.9028 252.275 15.9028 cv
252.537 15.9028 252.972 15.9028 253.216 15.9204 cv
cp
f
257.925 15.916 mo
257.925 15.6675 li
257.324 15.6675 257.253 15.6069 257.253 15.1792 cv
257.253 9.86963 li
256.042 9.96533 li
256.042 10.2183 li
256.634 10.2183 256.705 10.2793 256.705 10.7065 cv
256.705 12.6333 li
256.521 12.3804 256.146 12.0752 255.615 12.0752 cv
254.603 12.0752 253.731 12.9297 253.731 14.0459 cv
253.731 15.1533 254.559 16.0078 255.518 16.0078 cv
256.181 16.0078 256.565 15.5718 256.687 15.4063 cv
256.687 16.0078 li
257.925 15.916 li
cp
256.687 14.9004 mo
256.687 15.0571 256.687 15.0835 256.565 15.2729 cv
256.355 15.5747 255.998 15.8247 255.562 15.8247 cv
255.335 15.8247 254.394 15.7378 254.394 14.0547 cv
254.394 13.4268 254.499 13.0781 254.69 12.7905 cv
254.865 12.52 255.213 12.2495 255.649 12.2495 cv
256.19 12.2495 256.495 12.6421 256.583 12.7817 cv
256.687 12.9297 256.687 12.9473 256.687 13.104 cv
256.687 14.9004 li
cp
f
228.567 26.6714 mo
228.567 26.1396 228.367 25.7471 228.131 25.4595 cv
227.808 25.0669 227.416 24.9712 227.076 24.8843 cv
226.117 24.6401 li
225.672 24.5264 225.28 24.0903 225.28 23.5327 cv
225.28 22.9224 225.768 22.373 226.448 22.373 cv
227.878 22.373 228.07 23.7856 228.123 24.1602 cv
228.14 24.2651 228.14 24.2998 228.227 24.2998 cv
228.323 24.2998 228.323 24.2563 228.323 24.0991 cv
228.323 22.3379 li
228.323 22.1812 228.323 22.1372 228.236 22.1372 cv
228.209 22.1372 228.174 22.1372 228.114 22.251 cv
227.826 22.7827 li
227.408 22.2422 226.832 22.1372 226.448 22.1372 cv
225.48 22.1372 224.774 22.9136 224.774 23.8027 cv
224.774 24.2212 224.922 24.605 225.245 24.9536 cv
225.55 25.2939 225.855 25.3726 226.474 25.5293 cv
226.78 25.5991 227.259 25.7212 227.381 25.7734 cv
227.791 25.9741 228.061 26.4448 228.061 26.9331 cv
228.061 27.5869 227.599 28.2061 226.875 28.2061 cv
226.483 28.2061 225.943 28.1104 225.515 27.7354 cv
225.009 27.2817 224.974 26.6538 224.966 26.3662 cv
224.958 26.2964 224.87 26.2964 224.87 26.2964 cv
224.774 26.2964 224.774 26.3403 224.774 26.4971 cv
224.774 28.2583 li
224.774 28.4155 224.774 28.459 224.861 28.459 cv
224.914 28.459 224.922 28.4414 224.983 28.3369 cv
225.271 27.814 li
225.584 28.1626 226.134 28.459 226.884 28.459 cv
227.861 28.459 228.567 27.6304 228.567 26.6714 cv
cp
f
233.589 28.2759 mo
233.589 28.0229 li
232.997 28.0229 232.926 27.9619 232.926 27.5347 cv
232.926 24.4307 li
231.697 24.5264 li
231.697 24.7793 li
232.291 24.7793 232.36 24.8403 232.36 25.2676 cv
232.36 26.8286 li
232.36 27.5698 231.967 28.1885 231.314 28.1885 cv
230.598 28.1885 230.555 27.7788 230.555 27.3169 cv
230.555 24.4307 li
229.326 24.5264 li
229.326 24.7793 li
229.988 24.7793 229.988 24.8057 229.988 25.5815 cv
229.988 26.8896 li
229.988 27.4302 229.988 27.7441 230.25 28.0317 cv
230.459 28.2583 230.817 28.3628 231.261 28.3628 cv
231.41 28.3628 231.688 28.3628 231.985 28.1104 cv
232.238 27.9097 232.377 27.5781 232.377 27.5781 cv
232.377 28.3628 li
233.589 28.2759 li
cp
f
236.632 27.1948 mo
236.632 26.6978 li
236.441 26.6978 li
236.441 27.1772 li
236.441 27.8052 236.188 28.1714 235.847 28.1714 cv
235.254 28.1714 235.254 27.3604 235.254 27.2119 cv
235.254 24.7705 li
236.484 24.7705 li
236.484 24.5181 li
235.254 24.5181 li
235.254 22.9136 li
235.072 22.9136 li
235.063 23.7329 234.747 24.5703 233.947 24.5962 cv
233.947 24.7705 li
234.688 24.7705 li
234.688 27.1948 li
234.688 28.1626 235.333 28.3628 235.795 28.3628 cv
236.344 28.3628 236.632 27.8223 236.632 27.1948 cv
cp
f
241.655 28.2759 mo
241.655 28.0229 li
241.218 28.0229 241 28.0229 240.992 27.7612 cv
240.992 26.1572 li
240.992 25.3462 240.992 25.1021 240.792 24.8228 cv
240.539 24.4829 240.128 24.4307 239.833 24.4307 cv
239.083 24.4307 238.734 24.9976 238.612 25.2676 cv
238.603 25.2676 li
238.603 22.2246 li
237.391 22.3208 li
237.391 22.5732 li
237.984 22.5732 238.053 22.6343 238.053 23.0615 cv
238.053 27.6304 li
238.053 28.0229 237.958 28.0229 237.391 28.0229 cv
237.391 28.2759 li
237.618 28.2583 238.088 28.2583 238.333 28.2583 cv
238.585 28.2583 239.056 28.2583 239.283 28.2759 cv
239.283 28.0229 li
238.725 28.0229 238.621 28.0229 238.621 27.6304 cv
238.621 26.0088 li
238.621 25.0933 239.222 24.605 239.762 24.605 cv
240.303 24.605 240.425 25.0498 240.425 25.5815 cv
240.425 27.6304 li
240.425 28.0229 240.33 28.0229 239.762 28.0229 cv
239.762 28.2759 li
239.99 28.2583 240.46 28.2583 240.705 28.2583 cv
240.958 28.2583 241.428 28.2583 241.655 28.2759 cv
cp
f
245.404 27.2383 mo
245.404 27.186 245.361 27.1509 245.308 27.1509 cv
245.238 27.1509 245.221 27.1948 245.204 27.2383 cv
244.977 27.9707 244.392 28.1714 244.026 28.1714 cv
243.66 28.1714 242.78 27.9272 242.78 26.4185 cv
242.78 26.2529 li
245.195 26.2529 li
245.386 26.2529 245.404 26.2529 245.404 26.0874 cv
245.404 25.2065 244.933 24.3872 243.878 24.3872 cv
242.884 24.3872 242.117 25.2852 242.117 26.3662 cv
242.117 27.5171 243.006 28.3628 243.974 28.3628 cv
245.011 28.3628 245.404 27.4214 245.404 27.2383 cv
cp
244.864 26.0874 mo
242.789 26.0874 li
242.858 24.7183 243.625 24.5615 243.87 24.5615 cv
244.802 24.5615 244.855 25.791 244.864 26.0874 cv
cp
f
248.726 24.9365 mo
248.726 24.6748 248.491 24.4307 248.116 24.4307 cv
247.375 24.4307 247.122 25.2329 247.07 25.3984 cv
247.061 25.3984 li
247.061 24.4307 li
245.892 24.5264 li
245.892 24.7793 li
246.485 24.7793 246.555 24.8403 246.555 25.2676 cv
246.555 27.6304 li
246.555 28.0229 246.458 28.0229 245.892 28.0229 cv
245.892 28.2759 li
246.136 28.2583 246.616 28.2583 246.877 28.2583 cv
247.113 28.2583 247.732 28.2583 247.932 28.2759 cv
247.932 28.0229 li
247.758 28.0229 li
247.122 28.0229 247.104 27.9272 247.104 27.6133 cv
247.104 26.2441 li
247.104 25.3984 247.453 24.605 248.125 24.605 cv
248.194 24.605 248.211 24.605 248.247 24.6138 cv
248.176 24.6484 248.038 24.7007 248.038 24.9365 cv
248.038 25.189 248.238 25.2852 248.377 25.2852 cv
248.551 25.2852 248.726 25.1719 248.726 24.9365 cv
cp
f
251.132 28.2759 mo
251.132 28.0229 li
250.575 28.0229 250.47 28.0229 250.47 27.6304 cv
250.47 22.2246 li
249.258 22.3208 li
249.258 22.5732 li
249.851 22.5732 249.92 22.6343 249.92 23.0615 cv
249.92 27.6304 li
249.92 28.0229 249.825 28.0229 249.258 28.0229 cv
249.258 28.2759 li
249.502 28.2583 249.929 28.2583 250.191 28.2583 cv
250.453 28.2583 250.888 28.2583 251.132 28.2759 cv
cp
f
255.475 27.5 mo
255.475 27.0117 li
255.283 27.0117 li
255.283 27.5 li
255.283 27.9966 255.074 28.0664 254.952 28.0664 cv
254.621 28.0664 254.621 27.6045 254.621 27.4736 cv
254.621 25.9478 li
254.621 25.4771 254.621 25.1284 254.237 24.7881 cv
253.931 24.5093 253.539 24.3872 253.156 24.3872 cv
252.441 24.3872 251.891 24.8579 251.891 25.4248 cv
251.891 25.6772 252.057 25.7993 252.257 25.7993 cv
252.466 25.7993 252.615 25.6514 252.615 25.4419 cv
252.615 25.0845 252.301 25.0845 252.17 25.0845 cv
252.371 24.7183 252.79 24.5615 253.138 24.5615 cv
253.539 24.5615 254.053 24.8926 254.053 25.6772 cv
254.053 26.0264 li
252.301 26.0522 251.638 26.7847 251.638 27.4561 cv
251.638 28.145 252.441 28.3628 252.972 28.3628 cv
253.547 28.3628 253.94 28.0142 254.106 27.5957 cv
254.141 28.0054 254.411 28.3193 254.786 28.3193 cv
254.969 28.3193 255.475 28.1973 255.475 27.5 cv
cp
254.053 27.0464 mo
254.053 27.9009 253.417 28.1885 253.042 28.1885 cv
252.615 28.1885 252.257 27.8745 252.257 27.4561 cv
252.257 26.3052 253.74 26.2007 254.053 26.1831 cv
254.053 27.0464 li
cp
f
260.157 28.2759 mo
260.157 28.0229 li
259.721 28.0229 259.503 28.0229 259.495 27.7612 cv
259.495 26.1572 li
259.495 25.3462 259.495 25.1021 259.293 24.8228 cv
259.041 24.4829 258.631 24.4307 258.334 24.4307 cv
257.489 24.4307 257.158 25.1543 257.087 25.3286 cv
257.08 25.3286 li
257.08 24.4307 li
255.893 24.5264 li
255.893 24.7793 li
256.486 24.7793 256.556 24.8403 256.556 25.2676 cv
256.556 27.6304 li
256.556 28.0229 256.46 28.0229 255.893 28.0229 cv
255.893 28.2759 li
256.12 28.2583 256.591 28.2583 256.835 28.2583 cv
257.087 28.2583 257.559 28.2583 257.786 28.2759 cv
257.786 28.0229 li
257.227 28.0229 257.123 28.0229 257.123 27.6304 cv
257.123 26.0088 li
257.123 25.0933 257.724 24.605 258.265 24.605 cv
258.805 24.605 258.927 25.0498 258.927 25.5815 cv
258.927 27.6304 li
258.927 28.0229 258.832 28.0229 258.265 28.0229 cv
258.265 28.2759 li
258.492 28.2583 258.962 28.2583 259.207 28.2583 cv
259.459 28.2583 259.93 28.2583 260.157 28.2759 cv
cp
f
264.857 28.2715 mo
264.857 28.0229 li
264.256 28.0229 264.185 27.9619 264.185 27.5347 cv
264.185 22.2246 li
262.973 22.3208 li
262.973 22.5732 li
263.566 22.5732 263.636 22.6343 263.636 23.0615 cv
263.636 24.9888 li
263.453 24.7358 263.078 24.4307 262.546 24.4307 cv
261.535 24.4307 260.663 25.2852 260.663 26.4014 cv
260.663 27.5083 261.491 28.3628 262.451 28.3628 cv
263.113 28.3628 263.497 27.9272 263.619 27.7612 cv
263.619 28.3628 li
264.857 28.2715 li
cp
263.619 27.2559 mo
263.619 27.4126 263.619 27.4385 263.497 27.6284 cv
263.288 27.9302 262.93 28.1802 262.494 28.1802 cv
262.267 28.1802 261.326 28.0933 261.326 26.4097 cv
261.326 25.7822 261.43 25.4331 261.622 25.1455 cv
261.796 24.8755 262.145 24.605 262.581 24.605 cv
263.122 24.605 263.427 24.9976 263.514 25.1367 cv
263.619 25.2852 263.619 25.3027 263.619 25.4595 cv
263.619 27.2559 li
cp
f
285.914 221.124 mo
296.838 227.224 296.838 237.116 285.914 243.217 cv
274.989 249.317 257.276 249.317 246.352 243.217 cv
235.427 237.116 235.427 227.224 246.352 221.124 cv
257.276 215.022 274.989 215.022 285.914 221.124 cv
0 0 0 0 cmyk
f
285.914 221.124 mo
296.838 227.225 296.838 237.116 285.914 243.217 cv
274.989 249.317 257.276 249.317 246.352 243.217 cv
235.427 237.116 235.427 227.225 246.352 221.124 cv
257.276 215.022 274.989 215.022 285.914 221.124 cv
.746 .676 .668 .898 cmyk
@
250.35 234.571 mo
250.35 233.864 249.714 233.167 248.676 233.054 cv
249.504 232.896 250.106 232.339 250.106 231.685 cv
250.106 230.935 249.348 230.211 248.206 230.211 cv
245.163 230.211 li
245.163 230.464 li
245.336 230.464 li
245.964 230.464 245.991 230.552 245.991 230.874 cv
245.991 235.504 li
245.991 235.826 245.964 235.913 245.336 235.913 cv
245.163 235.913 li
245.163 236.167 li
248.441 236.167 li
249.566 236.167 250.35 235.407 250.35 234.571 cv
cp
249.339 231.685 mo
249.339 232.261 248.885 232.983 247.917 232.983 cv
246.654 232.983 li
246.654 230.813 li
246.654 230.524 246.671 230.464 247.054 230.464 cv
248.153 230.464 li
249.025 230.464 249.339 231.214 249.339 231.685 cv
cp
249.557 234.562 mo
249.557 235.269 249.025 235.913 248.17 235.913 cv
247.054 235.913 li
246.671 235.913 246.654 235.853 246.654 235.565 cv
246.654 233.158 li
248.284 233.158 li
249.121 233.158 249.557 233.891 249.557 234.562 cv
cp
0 0 0 1 cmyk
f
252.931 236.167 mo
252.931 235.913 li
252.365 235.913 252.33 235.87 252.33 235.53 cv
252.33 232.321 li
251.144 232.417 li
251.144 232.67 li
251.702 232.67 251.781 232.722 251.781 233.149 cv
251.781 235.521 li
251.781 235.913 251.684 235.913 251.118 235.913 cv
251.118 236.167 li
251.362 236.149 251.781 236.149 252.034 236.149 cv
252.129 236.149 252.635 236.149 252.931 236.167 cv
cp
252.443 230.899 mo
252.443 230.638 252.234 230.473 252.025 230.473 cv
251.781 230.473 251.597 230.665 251.597 230.899 cv
251.597 231.126 251.79 231.318 252.016 231.318 cv
252.278 231.318 252.443 231.109 252.443 230.899 cv
cp
f
255.364 236.167 mo
255.364 235.913 li
254.806 235.913 254.702 235.913 254.702 235.521 cv
254.702 230.115 li
253.49 230.211 li
253.49 230.464 li
254.083 230.464 254.152 230.524 254.152 230.952 cv
254.152 235.521 li
254.152 235.913 254.056 235.913 253.49 235.913 cv
253.49 236.167 li
253.734 236.149 254.161 236.149 254.422 236.149 cv
254.684 236.149 255.12 236.149 255.364 236.167 cv
cp
f
257.736 236.167 mo
257.736 235.913 li
257.177 235.913 257.073 235.913 257.073 235.521 cv
257.073 230.115 li
255.861 230.211 li
255.861 230.464 li
256.454 230.464 256.524 230.524 256.524 230.952 cv
256.524 235.521 li
256.524 235.913 256.428 235.913 255.861 235.913 cv
255.861 236.167 li
256.105 236.149 256.533 236.149 256.794 236.149 cv
257.056 236.149 257.492 236.149 257.736 236.167 cv
cp
f
266.115 231.824 mo
266.115 230.979 265.269 230.211 264.092 230.211 cv
261.154 230.211 li
261.154 230.464 li
261.328 230.464 li
261.956 230.464 261.982 230.552 261.982 230.874 cv
261.982 235.504 li
261.982 235.826 261.956 235.913 261.328 235.913 cv
261.154 235.913 li
261.154 236.167 li
261.363 236.149 262.078 236.149 262.331 236.149 cv
262.592 236.149 263.307 236.149 263.517 236.167 cv
263.517 235.913 li
263.342 235.913 li
262.714 235.913 262.688 235.826 262.688 235.504 cv
262.688 233.394 li
264.162 233.394 li
265.182 233.394 266.115 232.705 266.115 231.824 cv
cp
265.304 231.824 mo
265.304 232.19 265.304 233.185 263.883 233.185 cv
262.671 233.185 li
262.671 230.813 li
262.671 230.524 262.688 230.464 263.072 230.464 cv
263.892 230.464 li
265.304 230.464 265.304 231.449 265.304 231.824 cv
cp
f
270.5 235.391 mo
270.5 234.902 li
270.309 234.902 li
270.309 235.391 li
270.309 235.888 270.1 235.957 269.978 235.957 cv
269.646 235.957 269.646 235.495 269.646 235.364 cv
269.646 233.839 li
269.646 233.368 269.646 233.019 269.263 232.679 cv
268.958 232.399 268.565 232.278 268.181 232.278 cv
267.466 232.278 266.917 232.749 266.917 233.315 cv
266.917 233.567 267.083 233.69 267.284 233.69 cv
267.493 233.69 267.641 233.542 267.641 233.333 cv
267.641 232.976 267.327 232.976 267.196 232.976 cv
267.397 232.608 267.815 232.452 268.164 232.452 cv
268.565 232.452 269.08 232.783 269.08 233.567 cv
269.08 233.917 li
267.327 233.942 266.665 234.675 266.665 235.347 cv
266.665 236.036 267.466 236.253 267.999 236.253 cv
268.574 236.253 268.966 235.905 269.132 235.486 cv
269.167 235.896 269.437 236.21 269.812 236.21 cv
269.996 236.21 270.5 236.088 270.5 235.391 cv
cp
269.08 234.937 mo
269.08 235.792 268.443 236.079 268.068 236.079 cv
267.641 236.079 267.284 235.765 267.284 235.347 cv
267.284 234.196 268.766 234.091 269.08 234.073 cv
269.08 234.937 li
cp
f
275.052 236.167 mo
275.052 235.913 li
274.59 235.913 274.433 235.896 274.224 235.617 cv
273.082 234.108 li
273.334 233.777 273.701 233.307 273.867 233.124 cv
274.224 232.722 274.634 232.661 274.913 232.661 cv
274.913 232.408 li
274.538 232.426 274.52 232.426 274.18 232.426 cv
273.396 232.408 li
273.396 232.661 li
273.509 232.679 273.649 232.731 273.649 232.932 cv
273.649 233.079 273.57 233.176 273.518 233.245 cv
272.959 233.952 li
272.28 233.054 li
272.253 233.019 272.201 232.94 272.201 232.88 cv
272.201 232.827 272.245 232.67 272.506 232.661 cv
272.506 232.408 li
272.289 232.426 271.843 232.426 271.608 232.426 cv
270.771 232.408 li
270.771 232.661 li
271.216 232.661 271.381 232.679 271.565 232.914 cv
272.584 234.248 li
272.602 234.266 272.637 234.317 272.637 234.345 cv
272.637 234.37 271.957 235.225 271.87 235.338 cv
271.486 235.81 271.102 235.905 270.728 235.913 cv
270.728 236.167 li
271.059 236.149 271.077 236.149 271.452 236.149 cv
272.236 236.167 li
272.236 235.913 li
272.027 235.888 271.992 235.757 271.992 235.635 cv
271.992 235.495 272.053 235.425 272.14 235.312 cv
272.768 234.501 li
273.483 235.435 li
273.631 235.626 273.631 235.644 273.631 235.696 cv
273.631 235.765 273.561 235.905 273.326 235.913 cv
273.326 236.167 li
273.552 236.149 273.98 236.149 274.224 236.149 cv
275.052 236.167 li
cp
f
277.991 235.085 mo
277.991 234.589 li
277.799 234.589 li
277.799 235.067 li
277.799 235.696 277.546 236.062 277.206 236.062 cv
276.613 236.062 276.613 235.251 276.613 235.103 cv
276.613 232.661 li
277.842 232.661 li
277.842 232.408 li
276.613 232.408 li
276.613 230.804 li
276.43 230.804 li
276.421 231.624 276.105 232.461 275.305 232.487 cv
275.305 232.661 li
276.046 232.661 li
276.046 235.085 li
276.046 236.054 276.692 236.253 277.154 236.253 cv
277.703 236.253 277.991 235.713 277.991 235.085 cv
cp
f
282.472 234.3 mo
282.472 233.176 281.618 232.278 280.607 232.278 cv
279.56 232.278 278.732 233.202 278.732 234.3 cv
278.732 235.417 279.604 236.253 280.598 236.253 cv
281.626 236.253 282.472 235.399 282.472 234.3 cv
cp
281.81 234.222 mo
281.81 234.527 281.81 235.067 281.583 235.478 cv
281.339 235.896 280.938 236.062 280.607 236.062 cv
280.284 236.062 279.891 235.923 279.638 235.495 cv
279.403 235.103 279.394 234.589 279.394 234.222 cv
279.394 233.891 279.394 233.358 279.665 232.966 cv
279.909 232.591 280.292 232.452 280.598 232.452 cv
280.938 232.452 281.304 232.608 281.54 232.949 cv
281.81 233.351 281.81 233.899 281.81 234.222 cv
cp
f
287.286 236.167 mo
287.286 235.913 li
286.849 235.913 286.631 235.913 286.623 235.651 cv
286.623 234.048 li
286.623 233.237 286.623 232.993 286.422 232.714 cv
286.169 232.374 285.759 232.321 285.463 232.321 cv
284.618 232.321 284.286 233.045 284.216 233.22 cv
284.208 233.22 li
284.208 232.321 li
283.022 232.417 li
283.022 232.67 li
283.615 232.67 283.684 232.731 283.684 233.158 cv
283.684 235.521 li
283.684 235.913 283.588 235.913 283.022 235.913 cv
283.022 236.167 li
283.249 236.149 283.719 236.149 283.963 236.149 cv
284.216 236.149 284.687 236.149 284.914 236.167 cv
284.914 235.913 li
284.356 235.913 284.251 235.913 284.251 235.521 cv
284.251 233.899 li
284.251 232.983 284.853 232.495 285.393 232.495 cv
285.934 232.495 286.056 232.94 286.056 233.472 cv
286.056 235.521 li
286.056 235.913 285.96 235.913 285.393 235.913 cv
285.393 236.167 li
285.621 236.149 286.091 236.149 286.335 236.149 cv
286.588 236.149 287.059 236.149 287.286 236.167 cv
cp
f
157.993 229.608 mo
168.917 235.709 168.917 245.601 157.993 251.701 cv
147.068 257.802 129.356 257.802 118.431 251.701 cv
107.507 245.601 107.507 235.709 118.431 229.608 cv
129.356 223.508 147.068 223.508 157.993 229.608 cv
0 0 0 0 cmyk
f
157.993 229.608 mo
168.917 235.709 168.917 245.601 157.993 251.701 cv
147.068 257.802 129.356 257.802 118.431 251.701 cv
107.507 245.601 107.507 235.709 118.431 229.608 cv
129.356 223.508 147.068 223.508 157.993 229.608 cv
.746 .676 .668 .898 cmyk
@
122.966 242.54 mo
122.966 242.288 li
122.74 242.306 122.138 242.306 121.876 242.306 cv
121.598 242.306 120.839 242.306 120.604 242.288 cv
120.604 242.54 li
120.874 242.54 li
121.641 242.54 121.667 242.646 121.667 242.96 cv
121.667 243.517 li
121.667 244.511 120.525 244.581 120.298 244.581 cv
119.609 244.581 117.979 244.163 117.979 241.669 cv
117.979 239.149 119.627 238.765 120.237 238.765 cv
120.996 238.765 121.903 239.314 122.129 240.858 cv
122.147 240.954 122.147 240.979 122.251 240.979 cv
122.374 240.979 122.374 240.954 122.374 240.779 cv
122.374 238.713 li
122.374 238.556 122.374 238.513 122.287 238.513 cv
122.234 238.513 122.226 238.53 122.173 238.617 cv
121.746 239.306 li
121.493 238.992 120.961 238.513 120.133 238.513 cv
118.555 238.513 117.168 239.882 117.168 241.669 cv
117.168 243.474 118.555 244.834 120.142 244.834 cv
120.761 244.834 121.467 244.634 121.79 244.075 cv
121.946 244.354 122.234 244.642 122.304 244.642 cv
122.374 244.642 122.374 244.59 122.374 244.45 cv
122.374 242.925 li
122.374 242.585 122.409 242.54 122.966 242.54 cv
cp
0 0 0 1 cmyk
f
127.527 243.875 mo
127.527 243.387 li
127.335 243.387 li
127.335 243.875 li
127.335 244.372 127.125 244.441 127.003 244.441 cv
126.672 244.441 126.672 243.979 126.672 243.849 cv
126.672 242.323 li
126.672 241.853 126.672 241.503 126.289 241.163 cv
125.983 240.884 125.591 240.763 125.208 240.763 cv
124.492 240.763 123.943 241.233 123.943 241.8 cv
123.943 242.052 124.109 242.175 124.309 242.175 cv
124.519 242.175 124.667 242.026 124.667 241.817 cv
124.667 241.46 124.353 241.46 124.222 241.46 cv
124.423 241.093 124.841 240.937 125.19 240.937 cv
125.591 240.937 126.105 241.268 126.105 242.052 cv
126.105 242.401 li
124.353 242.427 123.69 243.159 123.69 243.831 cv
123.69 244.521 124.492 244.737 125.024 244.737 cv
125.6 244.737 125.992 244.39 126.158 243.971 cv
126.193 244.38 126.463 244.694 126.838 244.694 cv
127.021 244.694 127.527 244.572 127.527 243.875 cv
cp
126.105 243.421 mo
126.105 244.276 125.469 244.563 125.094 244.563 cv
124.667 244.563 124.309 244.249 124.309 243.831 cv
124.309 242.681 125.792 242.575 126.105 242.558 cv
126.105 243.421 li
cp
f
130.744 241.312 mo
130.744 241.05 130.509 240.806 130.134 240.806 cv
129.393 240.806 129.14 241.608 129.087 241.773 cv
129.079 241.773 li
129.079 240.806 li
127.91 240.901 li
127.91 241.154 li
128.503 241.154 128.573 241.216 128.573 241.643 cv
128.573 244.005 li
128.573 244.397 128.477 244.397 127.91 244.397 cv
127.91 244.651 li
128.154 244.634 128.634 244.634 128.896 244.634 cv
129.131 244.634 129.75 244.634 129.951 244.651 cv
129.951 244.397 li
129.776 244.397 li
129.14 244.397 129.123 244.302 129.123 243.988 cv
129.123 242.619 li
129.123 241.773 129.471 240.979 130.143 240.979 cv
130.212 240.979 130.229 240.979 130.265 240.989 cv
130.195 241.023 130.055 241.075 130.055 241.312 cv
130.055 241.563 130.256 241.66 130.396 241.66 cv
130.57 241.66 130.744 241.547 130.744 241.312 cv
cp
f
135.331 241.146 mo
135.331 240.894 li
135.078 240.91 134.956 240.91 134.677 240.91 cv
133.97 240.894 li
133.97 241.146 li
134.293 241.163 134.372 241.364 134.372 241.521 cv
134.372 241.599 134.354 241.643 134.319 241.729 cv
133.43 243.927 li
132.462 241.556 li
132.41 241.434 132.41 241.372 132.41 241.372 cv
132.41 241.146 132.715 241.146 132.889 241.146 cv
132.889 240.894 li
132.663 240.91 132.235 240.91 131.991 240.91 cv
131.145 240.894 li
131.145 241.146 li
131.651 241.146 131.721 241.189 131.834 241.46 cv
133.133 244.651 li
132.75 245.575 132.75 245.593 132.715 245.662 cv
132.566 245.924 132.331 246.255 131.938 246.255 cv
131.668 246.255 131.503 246.099 131.503 246.099 cv
131.503 246.099 131.808 246.063 131.808 245.759 cv
131.808 245.549 131.642 245.436 131.485 245.436 cv
131.337 245.436 131.154 245.522 131.154 245.776 cv
131.154 246.106 131.477 246.43 131.938 246.43 cv
132.427 246.43 132.785 246.003 133.011 245.453 cv
134.52 241.739 li
134.755 241.154 135.165 241.146 135.331 241.146 cv
cp
f
142.603 243.046 mo
142.603 242.515 142.402 242.122 142.167 241.835 cv
141.844 241.442 141.452 241.347 141.111 241.259 cv
140.152 241.015 li
139.708 240.901 139.315 240.466 139.315 239.907 cv
139.315 239.298 139.804 238.748 140.484 238.748 cv
141.914 238.748 142.105 240.161 142.158 240.535 cv
142.175 240.64 142.175 240.675 142.262 240.675 cv
142.358 240.675 142.358 240.632 142.358 240.474 cv
142.358 238.713 li
142.358 238.556 142.358 238.513 142.271 238.513 cv
142.245 238.513 142.21 238.513 142.149 238.626 cv
141.861 239.157 li
141.443 238.617 140.867 238.513 140.484 238.513 cv
139.516 238.513 138.81 239.288 138.81 240.178 cv
138.81 240.597 138.958 240.979 139.28 241.329 cv
139.585 241.669 139.891 241.747 140.51 241.904 cv
140.815 241.974 141.294 242.097 141.417 242.148 cv
141.827 242.349 142.097 242.819 142.097 243.308 cv
142.097 243.962 141.635 244.581 140.911 244.581 cv
140.519 244.581 139.978 244.485 139.551 244.11 cv
139.045 243.657 139.01 243.028 139.001 242.741 cv
138.993 242.671 138.905 242.671 138.905 242.671 cv
138.81 242.671 138.81 242.716 138.81 242.872 cv
138.81 244.634 li
138.81 244.79 138.81 244.834 138.897 244.834 cv
138.949 244.834 138.958 244.816 139.019 244.712 cv
139.307 244.188 li
139.621 244.538 140.17 244.834 140.919 244.834 cv
141.896 244.834 142.603 244.005 142.603 243.046 cv
cp
f
145.183 244.651 mo
145.183 244.397 li
144.617 244.397 144.582 244.354 144.582 244.015 cv
144.582 240.806 li
143.396 240.901 li
143.396 241.154 li
143.954 241.154 144.032 241.206 144.032 241.634 cv
144.032 244.005 li
144.032 244.397 143.937 244.397 143.37 244.397 cv
143.37 244.651 li
143.614 244.634 144.032 244.634 144.285 244.634 cv
144.381 244.634 144.887 244.634 145.183 244.651 cv
cp
144.695 239.384 mo
144.695 239.122 144.486 238.957 144.276 238.957 cv
144.032 238.957 143.849 239.149 143.849 239.384 cv
143.849 239.61 144.041 239.803 144.268 239.803 cv
144.529 239.803 144.695 239.594 144.695 239.384 cv
cp
f
149.997 244.651 mo
149.997 244.397 li
149.561 244.397 149.342 244.397 149.333 244.136 cv
149.333 242.532 li
149.333 241.722 149.333 241.478 149.133 241.198 cv
148.88 240.858 148.471 240.806 148.174 240.806 cv
147.328 240.806 146.997 241.529 146.927 241.704 cv
146.918 241.704 li
146.918 240.806 li
145.733 240.901 li
145.733 241.154 li
146.326 241.154 146.396 241.216 146.396 241.643 cv
146.396 244.005 li
146.396 244.397 146.299 244.397 145.733 244.397 cv
145.733 244.651 li
145.959 244.634 146.43 244.634 146.674 244.634 cv
146.927 244.634 147.398 244.634 147.625 244.651 cv
147.625 244.397 li
147.067 244.397 146.962 244.397 146.962 244.005 cv
146.962 242.384 li
146.962 241.468 147.564 240.979 148.104 240.979 cv
148.645 240.979 148.767 241.425 148.767 241.956 cv
148.767 244.005 li
148.767 244.397 148.671 244.397 148.104 244.397 cv
148.104 244.651 li
148.331 244.634 148.802 244.634 149.046 244.634 cv
149.299 244.634 149.77 244.634 149.997 244.651 cv
cp
f
152.298 244.651 mo
152.298 244.397 li
151.731 244.397 151.697 244.354 151.697 244.015 cv
151.697 240.806 li
150.511 240.901 li
150.511 241.154 li
151.069 241.154 151.147 241.206 151.147 241.634 cv
151.147 244.005 li
151.147 244.397 151.051 244.397 150.485 244.397 cv
150.485 244.651 li
150.729 244.634 151.147 244.634 151.4 244.634 cv
151.496 244.634 152.002 244.634 152.298 244.651 cv
cp
151.81 239.384 mo
151.81 239.122 151.601 238.957 151.392 238.957 cv
151.147 238.957 150.964 239.149 150.964 239.384 cv
150.964 239.61 151.156 239.803 151.383 239.803 cv
151.645 239.803 151.81 239.594 151.81 239.384 cv
cp
f
155.638 243.544 mo
155.638 243.073 155.35 242.794 155.271 242.716 cv
154.958 242.444 154.722 242.393 154.147 242.288 cv
153.885 242.235 153.249 242.114 153.249 241.591 cv
153.249 241.319 153.432 240.919 154.216 240.919 cv
155.167 240.919 155.219 241.729 155.237 242 cv
155.246 242.069 155.307 242.069 155.333 242.069 cv
155.429 242.069 155.429 242.026 155.429 241.87 cv
155.429 240.962 li
155.429 240.806 155.429 240.763 155.341 240.763 cv
155.271 240.763 155.106 240.954 155.045 241.032 cv
154.774 240.814 154.504 240.763 154.225 240.763 cv
153.17 240.763 152.856 241.337 152.856 241.817 cv
152.856 241.913 152.856 242.218 153.188 242.523 cv
153.467 242.768 153.763 242.829 154.164 242.907 cv
154.644 243.003 154.757 243.028 154.975 243.204 cv
155.132 243.335 155.246 243.526 155.246 243.771 cv
155.246 244.146 155.027 244.563 154.26 244.563 cv
153.685 244.563 153.266 244.232 153.074 243.36 cv
153.04 243.204 153.031 243.187 153.031 243.187 cv
153.013 243.151 152.979 243.151 152.952 243.151 cv
152.856 243.151 152.856 243.194 152.856 243.352 cv
152.856 244.538 li
152.856 244.694 152.856 244.737 152.943 244.737 cv
152.987 244.737 152.996 244.729 153.144 244.546 cv
153.188 244.485 153.188 244.468 153.318 244.328 cv
153.65 244.737 154.121 244.737 154.269 244.737 cv
155.185 244.737 155.638 244.232 155.638 243.544 cv
cp
f
159.483 243.613 mo
159.483 243.562 159.439 243.526 159.387 243.526 cv
159.317 243.526 159.3 243.569 159.283 243.613 cv
159.056 244.346 158.472 244.546 158.105 244.546 cv
157.739 244.546 156.858 244.302 156.858 242.794 cv
156.858 242.628 li
159.274 242.628 li
159.465 242.628 159.483 242.628 159.483 242.462 cv
159.483 241.581 159.012 240.763 157.957 240.763 cv
156.963 240.763 156.196 241.66 156.196 242.741 cv
156.196 243.892 157.085 244.737 158.053 244.737 cv
159.091 244.737 159.483 243.796 159.483 243.613 cv
cp
158.942 242.462 mo
156.867 242.462 li
156.937 241.093 157.704 240.937 157.948 240.937 cv
158.881 240.937 158.934 242.166 158.942 242.462 cv
cp
f
115.11 64.4692 mo
133.432 129.628 li
.746 .676 .668 .898 cmyk
@
112.052 138.832 mo
54.271 123.926 li
@
94.7456 61.8774 mo
44.3296 103.979 li
@
266.338 114.051 mo
343.485 77.0483 li
@
244.417 108.351 mo
244.417 36.2012 li
@
271.694 28.9819 mo
342.032 57.3418 li
@
217.877 129.72 mo
164.723 140.206 li
@
247.882 140.4 mo
262.957 216.197 li
@
231.653 138.673 mo
151.265 226.408 li
@
156.091 157.797 mo
247.936 219.872 li
@
137.948 161.575 mo
138.159 224.578 li
@
237.899 234.044 mo
166.446 238.782 li
@
126.679 73.3696 mo
138.283 114.639 li
125.692 118.18 li
114.088 76.9106 li
126.679 73.3696 li
cp
0 0 0 0 cmyk
f
119.197 85.6841 mo
119.44 85.6157 li
119.287 85.0703 119.244 84.9189 119.555 84.7046 cv
124.295 81.3975 li
124.387 81.3354 124.432 81.3047 124.399 81.187 cv
124.366 81.0698 124.336 81.0601 124.19 81.0557 cv
118.677 80.7129 li
118.3 80.6919 118.016 80.5186 117.856 79.9834 cv
117.613 80.0518 li
117.856 80.853 li
117.922 81.0879 118.036 81.4907 118.08 81.7139 cv
118.324 81.6455 li
118.233 81.2905 118.35 81.0313 118.585 80.9653 cv
118.636 80.9507 118.652 80.9463 118.773 80.9575 cv
119.998 81.0298 li
120.593 83.145 li
119.405 83.9771 li
119.316 84.0474 119.299 84.0522 119.274 84.0591 cv
119.022 84.1299 118.902 83.7021 118.843 83.4922 cv
118.6 83.5605 li
118.67 83.749 118.857 84.4121 118.923 84.647 cv
118.989 84.8823 119.159 85.4863 119.197 85.6841 cv
cp
120.813 82.9927 mo
120.265 81.0454 li
123.334 81.2329 li
120.813 82.9927 li
cp
0 0 0 1 cmyk
f
123.536 92.8696 mo
123.484 92.6846 li
122.621 92.8369 121.524 93.0273 121.111 91.5586 cv
120.906 90.8281 li
120.802 90.459 120.856 90.4258 121.133 90.3477 cv
125.641 89.0806 li
125.943 88.9956 126.048 88.9839 126.253 89.7144 cv
126.324 89.9658 li
126.568 89.8975 li
126.482 89.6587 126.275 88.9199 126.192 88.6265 cv
126.121 88.3745 125.911 87.6274 125.872 87.4214 cv
125.628 87.4897 li
125.675 87.6577 li
125.845 88.2622 125.768 88.3105 125.458 88.3979 cv
121 89.6514 li
120.69 89.7388 120.599 89.7373 120.429 89.1328 cv
120.382 88.9648 li
120.138 89.0332 li
121.326 93.2554 li
123.536 92.8696 li
cp
f
123.446 96.9614 mo
123.496 96.9473 123.518 96.896 123.503 96.8457 cv
123.485 96.7783 123.438 96.7734 123.391 96.7686 cv
122.625 96.7485 122.273 96.2407 122.174 95.8882 cv
122.075 95.5356 122.072 94.6216 123.524 94.2134 cv
123.684 94.1685 li
124.337 96.4937 li
124.389 96.6782 124.394 96.6948 124.554 96.6499 cv
125.401 96.4116 126.063 95.7363 125.777 94.7207 cv
125.508 93.7642 124.436 93.2686 123.395 93.561 cv
122.287 93.8726 121.714 94.9575 121.976 95.8896 cv
122.256 96.8882 123.27 97.0112 123.446 96.9614 cv
cp
124.407 96.1294 mo
123.846 94.1318 li
125.182 93.8286 125.541 94.5249 125.607 94.7598 cv
125.86 95.6577 124.69 96.041 124.407 96.1294 cv
cp
f
124.378 101.246 mo
124.849 101.114 li
124.797 100.929 li
124.327 101.062 li
123.848 101.196 123.725 101.013 123.691 100.896 cv
123.602 100.577 124.046 100.452 124.172 100.417 cv
125.642 100.003 li
126.095 99.876 126.43 99.7817 126.654 99.3203 cv
126.84 98.9507 126.851 98.54 126.748 98.1709 cv
126.554 97.4824 125.952 97.0811 125.406 97.2344 cv
125.163 97.3027 125.09 97.4956 125.145 97.6885 cv
125.201 97.8901 125.384 97.9927 125.585 97.936 cv
125.93 97.8394 125.845 97.5371 125.809 97.4111 cv
126.216 97.5049 126.48 97.8652 126.575 98.2012 cv
126.683 98.5874 126.503 99.1724 125.748 99.3848 cv
125.413 99.479 li
124.913 97.7988 124.028 97.3594 123.382 97.541 cv
122.719 97.7275 122.726 98.5586 122.87 99.0708 cv
123.026 99.6245 123.468 99.9082 123.916 99.9541 cv
123.531 100.099 123.302 100.444 123.403 100.805 cv
123.453 100.981 123.707 101.435 124.378 101.246 cv
cp
124.43 99.7554 mo
123.608 99.9863 123.159 99.4517 123.057 99.0908 cv
122.941 98.6792 123.147 98.2505 123.55 98.1372 cv
124.658 97.8257 125.16 99.2241 125.261 99.5215 cv
124.43 99.7554 li
cp
f
128.198 104.619 mo
128.35 104.577 128.551 104.393 128.469 104.099 cv
128.346 103.663 127.985 103.411 127.827 103.329 cv
127.949 103.023 127.975 102.698 127.886 102.379 cv
127.673 101.624 126.944 101.222 126.298 101.404 cv
125.819 101.539 125.591 101.919 125.54 102.025 cv
125.385 101.959 125.1 101.876 124.772 101.969 cv
124.285 102.105 124.158 102.458 124.135 102.538 cv
123.917 102.182 123.506 101.881 123.07 102.003 cv
122.491 102.167 122.234 103.09 122.524 104.123 cv
122.805 105.121 123.484 105.827 124.113 105.65 cv
124.323 105.591 124.802 105.393 124.92 104.816 cv
125.019 104.327 124.9 103.907 124.697 103.185 cv
124.554 102.673 124.537 102.615 124.654 102.418 cv
124.714 102.311 124.853 102.191 125.029 102.141 cv
125.171 102.101 125.328 102.111 125.469 102.162 cv
125.32 102.63 125.415 102.965 125.44 103.058 cv
125.653 103.813 126.382 104.215 127.028 104.034 cv
127.255 103.97 127.555 103.813 127.748 103.469 cv
128.176 103.702 128.287 104.096 128.298 104.138 cv
128.308 104.172 128.32 104.214 128.313 104.252 cv
128.255 104.178 128.16 104.159 128.067 104.185 cv
127.95 104.218 127.873 104.331 127.91 104.465 cv
127.929 104.532 128.014 104.671 128.198 104.619 cv
cp
126.874 103.452 mo
126.723 103.495 126.378 103.591 126.112 103.512 cv
125.824 103.421 125.669 103.193 125.619 103.017 cv
125.412 102.278 126.259 102.04 126.452 101.985 cv
126.604 101.943 126.948 101.846 127.214 101.925 cv
127.502 102.016 127.657 102.244 127.707 102.42 cv
127.915 103.159 127.067 103.397 126.874 103.452 cv
cp
123.989 105.241 mo
123.494 105.38 122.92 104.854 122.703 104.081 cv
122.477 103.275 122.715 102.547 123.194 102.413 cv
123.261 102.394 123.593 102.318 123.901 102.576 cv
124.071 102.728 124.092 102.803 124.257 103.391 cv
124.453 104.087 124.72 105.036 123.989 105.241 cv
cp
f
126.056 110.077 mo
126.299 110.008 li
126.139 109.438 126.178 109.354 126.59 109.238 cv
129.578 108.398 li
129.153 107.24 li
128.909 107.309 li
129.07 107.879 129.03 107.963 128.619 108.079 cv
127.116 108.501 li
126.403 108.702 125.701 108.492 125.523 107.862 cv
125.33 107.174 125.712 107.021 126.158 106.896 cv
128.936 106.115 li
128.511 104.957 li
128.267 105.025 li
128.447 105.664 128.421 105.67 127.674 105.88 cv
126.416 106.235 li
125.895 106.381 125.593 106.466 125.387 106.795 cv
125.225 107.059 125.221 107.431 125.341 107.859 cv
125.381 108.001 125.457 108.271 125.781 108.487 cv
126.042 108.676 126.399 108.721 126.399 108.721 cv
125.644 108.934 li
126.056 110.077 li
cp
f
128.069 113.405 mo
128.12 113.391 128.142 113.339 128.127 113.289 cv
128.108 113.222 128.062 113.217 128.015 113.212 cv
127.249 113.192 126.897 112.684 126.798 112.332 cv
126.699 111.979 126.696 111.065 128.148 110.657 cv
128.307 110.612 li
128.961 112.937 li
129.013 113.122 129.018 113.138 129.177 113.093 cv
130.025 112.855 130.687 112.18 130.401 111.165 cv
130.132 110.208 129.06 109.712 128.019 110.004 cv
126.911 110.316 126.337 111.401 126.6 112.333 cv
126.88 113.332 127.893 113.455 128.069 113.405 cv
cp
129.031 112.573 mo
128.469 110.575 li
129.806 110.272 130.165 110.968 130.231 111.203 cv
130.483 112.101 129.314 112.484 129.031 112.573 cv
cp
f
48.6929 90.3364 mo
81.5981 62.8579 li
89.9819 72.8965 li
57.0767 100.375 li
48.6929 90.3364 li
cp
0 0 0 0 cmyk
f
62.9912 92.123 mo
62.8291 91.9287 li
62.394 92.292 62.2734 92.3926 61.9507 92.1968 cv
56.9932 89.2251 li
56.8994 89.1675 56.8521 89.1382 56.7588 89.2168 cv
56.665 89.2949 56.6685 89.3262 56.7241 89.4614 cv
58.6675 94.6313 li
58.8032 94.9839 58.7612 95.3145 58.3384 95.6792 cv
58.5005 95.873 li
59.1318 95.3232 li
59.3188 95.1665 59.6401 94.8984 59.8257 94.7666 cv
59.6636 94.5723 li
59.377 94.8003 59.0923 94.7993 58.9355 94.6123 cv
58.9019 94.5718 58.8911 94.5586 58.8516 94.4438 cv
58.416 93.2964 li
60.1025 91.8882 li
61.3481 92.6313 li
61.4487 92.6836 61.46 92.6973 61.4766 92.7173 cv
61.6445 92.918 61.3032 93.2031 61.1357 93.3428 cv
61.2979 93.5366 li
61.4404 93.395 61.9692 92.9536 62.1567 92.7969 cv
62.3442 92.6406 62.8262 92.2378 62.9912 92.123 cv
cp
59.8735 91.75 mo
58.3213 93.0464 li
57.2363 90.1694 li
59.8735 91.75 li
cp
0 0 0 1 cmyk
f
67.771 85.2231 mo
67.624 85.3462 li
68.1157 86.0713 68.7388 86.9937 67.5674 87.9717 cv
66.9854 88.458 li
66.6909 88.7041 66.6382 88.6685 66.4536 88.4473 cv
63.4526 84.8535 li
63.2515 84.6128 63.1978 84.521 63.7798 84.0347 cv
63.9805 83.8672 li
63.8184 83.6733 li
63.6357 83.8486 63.0469 84.3403 62.8125 84.5361 cv
62.6118 84.7036 62.0161 85.2012 61.8442 85.3218 cv
62.0063 85.5161 li
62.1401 85.4043 li
62.6221 85.002 62.6978 85.0518 62.9048 85.2993 cv
65.8726 88.853 li
66.0791 89.1011 66.1152 89.1846 65.6333 89.5869 cv
65.4995 89.6987 li
65.6616 89.8931 li
69.0278 87.0815 li
67.771 85.2231 li
cp
f
71.5415 83.6304 mo
71.5083 83.5903 71.4526 83.5913 71.4121 83.625 cv
71.3589 83.6699 71.373 83.7144 71.3877 83.7593 cv
71.6831 84.4663 71.3633 84.9946 71.0825 85.2295 cv
70.8013 85.4644 69.9688 85.8413 69.002 84.6836 cv
68.8955 84.5566 li
70.7495 83.0083 li
70.897 82.8853 70.9102 82.874 70.8042 82.7471 cv
70.2397 82.0713 69.3525 81.7437 68.543 82.4199 cv
67.7798 83.0571 67.7666 84.2383 68.46 85.0684 cv
69.1973 85.9517 70.4224 86.0308 71.165 85.4106 cv
71.9614 84.7456 71.6592 83.771 71.5415 83.6304 cv
cp
70.3892 83.0938 mo
68.7964 84.4238 li
67.9722 83.3281 68.4604 82.7158 68.6479 82.5596 cv
69.3643 81.9614 70.1924 82.8716 70.3892 83.0938 cv
cp
f
75.0688 81.0259 mo
74.7563 80.6509 li
74.6089 80.7739 li
74.9219 81.1484 li
75.2402 81.5298 75.1245 81.7178 75.0308 81.7959 cv
74.7764 82.0083 74.4805 81.6538 74.3965 81.5532 cv
73.4185 80.3823 li
73.1167 80.0205 72.8931 79.7529 72.3804 79.7378 cv
71.9673 79.7192 71.5879 79.877 71.2935 80.123 cv
70.7446 80.5815 70.625 81.2949 70.9883 81.73 cv
71.1504 81.9238 71.356 81.9116 71.5098 81.7827 cv
71.6704 81.6489 71.689 81.4399 71.5552 81.2793 cv
71.3257 81.0049 71.085 81.2061 70.9844 81.29 cv
70.9038 80.8804 71.1245 80.4917 71.3921 80.2681 cv
71.6997 80.0112 72.3071 79.9355 72.8101 80.5376 cv
73.0337 80.8057 li
71.7051 81.9492 71.666 82.936 72.0962 83.4512 cv
72.5381 83.98 73.2935 83.6333 73.7017 83.2925 cv
74.1436 82.9233 74.2207 82.4043 74.0796 81.9766 cv
74.3691 82.269 74.7778 82.3364 75.0659 82.0962 cv
75.2061 81.979 75.5161 81.561 75.0688 81.0259 cv
cp
73.6875 81.5884 mo
74.2354 82.2446 73.9312 82.8735 73.6436 83.1138 cv
73.3154 83.3877 72.8398 83.3755 72.5718 83.0542 cv
71.834 82.1709 72.9043 81.1406 73.1343 80.9263 cv
73.6875 81.5884 li
cp
f
76.5835 76.1597 mo
76.4829 76.0396 76.2329 75.9302 75.9985 76.126 cv
75.6504 76.4165 75.5684 76.8486 75.5586 77.0273 cv
75.229 77.041 74.9224 77.1499 74.668 77.3618 cv
74.0654 77.8647 73.9971 78.6948 74.4272 79.21 cv
74.7461 79.5913 75.187 79.6436 75.3042 79.6479 cv
75.3076 79.8149 75.3496 80.1099 75.5674 80.3706 cv
75.8916 80.7593 76.2656 80.731 76.3472 80.7192 cv
76.1118 81.0635 76.0054 81.5615 76.2959 81.9097 cv
76.6816 82.3716 77.6289 82.2275 78.4521 81.54 cv
79.2485 80.875 79.6152 79.9673 79.1958 79.4653 cv
79.0562 79.2979 78.6797 78.9419 78.105 79.0698 cv
77.6182 79.1812 77.2837 79.4604 76.708 79.9409 cv
76.2998 80.2817 76.2529 80.3208 76.0264 80.2944 cv
75.9033 80.2837 75.7368 80.2065 75.6196 80.0659 cv
75.5244 79.9521 75.4697 79.8052 75.4585 79.6553 cv
75.9463 79.6001 76.2139 79.3765 76.2876 79.3149 cv
76.8896 78.812 76.958 77.9824 76.5278 77.4673 cv
76.377 77.2866 76.1108 77.0771 75.7183 77.0415 cv
75.7554 76.5562 76.0698 76.2935 76.1035 76.2651 cv
76.1304 76.2432 76.1636 76.2148 76.2017 76.2061 cv
76.1572 76.2886 76.1797 76.3838 76.2412 76.457 cv
76.3193 76.5508 76.4531 76.5752 76.5605 76.4858 cv
76.6138 76.4409 76.7065 76.3071 76.5835 76.1597 cv
cp
76.0605 77.8462 mo
76.1611 77.9668 76.3901 78.2412 76.4272 78.5166 cv
76.4624 78.8169 76.3174 79.0518 76.1768 79.1689 cv
75.5879 79.6606 75.0234 78.9849 74.895 78.8311 cv
74.7944 78.7104 74.5649 78.436 74.5278 78.1606 cv
74.4932 77.8599 74.6382 77.6255 74.7783 77.5083 cv
75.3677 77.0161 75.9321 77.6924 76.0605 77.8462 cv
cp
78.8735 79.7456 mo
79.2031 80.1406 78.9575 80.8799 78.3418 81.394 cv
77.6992 81.9307 76.9365 82.0107 76.6182 81.6289 cv
76.5732 81.5757 76.3687 81.3032 76.478 80.917 cv
76.5469 80.7002 76.6069 80.6499 77.0757 80.2588 cv
77.6309 79.7949 78.3872 79.1636 78.8735 79.7456 cv
cp
f
82.4399 75.8813 mo
82.2778 75.6875 li
81.8228 76.0674 81.73 76.0654 81.4561 75.7373 cv
79.4663 73.355 li
78.5845 74.2163 li
78.7466 74.4106 li
79.2017 74.0303 79.2939 74.0327 79.5679 74.3604 cv
80.5684 75.5586 li
81.0435 76.1274 81.1392 76.854 80.6372 77.2729 cv
80.0884 77.7314 79.792 77.4448 79.4961 77.0903 cv
77.646 74.875 li
76.7637 75.7368 li
76.9258 75.9307 li
77.4346 75.5059 77.4512 75.5259 77.9487 76.1216 cv
78.7871 77.1255 li
79.1338 77.5405 79.335 77.7813 79.7202 77.8345 cv
80.0259 77.8745 80.3677 77.7256 80.709 77.4404 cv
80.8228 77.3457 81.0366 77.1665 81.1021 76.7827 cv
81.1675 76.4668 81.0625 76.123 81.0625 76.123 cv
81.5654 76.7251 li
82.4399 75.8813 li
cp
f
84.6523 72.6816 mo
84.6191 72.6416 84.563 72.6426 84.5229 72.6763 cv
84.4692 72.7212 84.4839 72.7656 84.4985 72.8101 cv
84.7939 73.5181 84.4741 74.0464 84.1929 74.2808 cv
83.9121 74.5156 83.0796 74.8926 82.1128 73.7349 cv
82.0063 73.6079 li
83.8604 72.0596 li
84.0073 71.9365 84.021 71.9253 83.9146 71.7983 cv
83.3501 71.1226 82.4634 70.7949 81.6538 71.4712 cv
80.8906 72.1084 80.8774 73.2896 81.5703 74.1196 cv
82.3081 75.0029 83.5332 75.082 84.2759 74.4614 cv
85.0723 73.7964 84.77 72.8223 84.6523 72.6816 cv
cp
83.5 72.145 mo
81.9067 73.4751 li
81.083 72.3794 81.5713 71.7671 81.7588 71.6108 cv
82.4751 71.0127 83.3032 71.9229 83.5 72.145 cv
cp
f
65.5845 116.202 mo
107.096 126.911 li
103.829 139.575 li
62.3179 128.866 li
65.5845 116.202 li
cp
0 0 0 0 cmyk
f
72.4707 128.859 mo
72.5337 128.614 li
71.9849 128.473 71.833 128.434 71.8042 128.057 cv
71.3271 122.297 li
71.3193 122.187 71.3154 122.132 71.1973 122.101 cv
71.0791 122.071 71.0557 122.092 70.9785 122.216 cv
67.9116 126.81 li
67.7041 127.125 67.4111 127.284 66.8687 127.153 cv
66.8052 127.397 li
67.6201 127.59 li
67.8564 127.651 68.2617 127.755 68.4771 127.829 cv
68.54 127.584 li
68.188 127.484 68.0225 127.252 68.0835 127.016 cv
68.0967 126.965 68.1011 126.949 68.1714 126.85 cv
68.8496 125.827 li
70.9771 126.375 li
71.0996 127.821 li
71.1157 127.933 71.1113 127.95 71.1045 127.976 cv
71.0396 128.229 70.6089 128.118 70.3975 128.063 cv
70.3345 128.308 li
70.5332 128.341 71.2002 128.513 71.4365 128.574 cv
71.6729 128.635 72.2808 128.792 72.4707 128.859 cv
cp
70.9561 126.109 mo
68.9971 125.604 li
70.7017 123.045 li
70.9561 126.109 li
cp
0 0 0 1 cmyk
f
80.8633 128.719 mo
80.6772 128.671 li
80.375 129.494 79.9888 130.538 78.5112 130.156 cv
77.7769 129.967 li
77.4053 129.871 77.4038 129.808 77.4756 129.529 cv
78.645 124.995 li
78.7236 124.691 78.7666 124.594 79.501 124.784 cv
79.7544 124.849 li
79.8174 124.604 li
79.5684 124.558 78.8252 124.366 78.5298 124.29 cv
78.2769 124.225 77.5254 124.031 77.3271 123.961 cv
77.2637 124.207 li
77.4326 124.25 li
78.0405 124.407 78.0439 124.498 77.9634 124.81 cv
76.8071 129.293 li
76.7266 129.606 76.6792 129.684 76.0713 129.527 cv
75.9023 129.483 li
75.8394 129.728 li
80.0859 130.824 li
80.8633 128.719 li
cp
f
84.3555 130.854 mo
84.3687 130.803 84.3354 130.758 84.2847 130.745 cv
84.2173 130.728 84.1895 130.766 84.1616 130.804 cv
83.7588 131.456 83.1431 131.504 82.7886 131.413 cv
82.4341 131.321 81.6421 130.865 82.019 129.404 cv
82.0605 129.244 li
84.3989 129.847 li
84.585 129.895 84.6021 129.899 84.6431 129.739 cv
84.8633 128.886 84.6118 127.975 83.5903 127.711 cv
82.6279 127.463 81.6606 128.141 81.3906 129.188 cv
81.103 130.303 81.7529 131.344 82.6899 131.585 cv
83.6948 131.845 84.3101 131.031 84.3555 130.854 cv
cp
84.1196 129.604 mo
82.1104 129.086 li
82.52 127.778 83.3022 127.817 83.5386 127.878 cv
84.4419 128.111 84.1855 129.315 84.1196 129.604 cv
cp
f
88.5288 132.2 mo
88.6509 131.728 li
88.4648 131.68 li
88.3428 132.152 li
88.2188 132.634 87.9985 132.649 87.8804 132.619 cv
87.5596 132.536 87.6753 132.088 87.708 131.961 cv
88.0889 130.484 li
88.2065 130.028 88.2935 129.69 88.0073 129.265 cv
87.7813 128.919 87.4321 128.703 87.0605 128.607 cv
86.3682 128.428 85.7188 128.747 85.5771 129.296 cv
85.5137 129.541 85.6436 129.7 85.8379 129.75 cv
86.0405 129.803 86.2212 129.696 86.2734 129.494 cv
86.3628 129.147 86.0586 129.069 85.9321 129.036 cv
86.2178 128.732 86.6621 128.684 87 128.771 cv
87.3882 128.872 87.8037 129.321 87.6079 130.081 cv
87.5205 130.418 li
85.8169 130.006 84.9922 130.55 84.8247 131.2 cv
84.6528 131.867 85.375 132.278 85.8901 132.411 cv
86.4473 132.555 86.9141 132.315 87.1792 131.951 cv
87.1104 132.357 87.2939 132.728 87.6567 132.822 cv
87.8345 132.868 88.3545 132.876 88.5288 132.2 cv
cp
87.2656 131.406 mo
87.0522 132.234 86.3643 132.354 86.001 132.26 cv
85.5874 132.153 85.3198 131.76 85.4243 131.354 cv
85.7114 130.24 87.1729 130.509 87.4814 130.57 cv
87.2656 131.406 li
cp
f
93.3647 130.593 mo
93.4038 130.441 93.3467 130.174 93.0513 130.098 cv
92.6118 129.985 92.2129 130.17 92.062 130.267 cv
91.8589 130.007 91.5918 129.821 91.271 129.738 cv
90.5112 129.542 89.7974 129.97 89.6299 130.621 cv
89.5054 131.102 89.7202 131.49 89.7852 131.588 cv
89.6514 131.688 89.436 131.894 89.3511 132.224 cv
89.2246 132.713 89.4658 133 89.5225 133.06 cv
89.106 133.07 88.6392 133.273 88.5259 133.712 cv
88.3755 134.295 89.0449 134.981 90.0835 135.249 cv
91.0884 135.508 92.0396 135.276 92.2026 134.643 cv
92.2573 134.432 92.3267 133.918 91.8877 133.526 cv
91.5137 133.196 91.0913 133.086 90.3652 132.899 cv
89.8506 132.767 89.7915 132.751 89.6807 132.552 cv
89.6182 132.445 89.5835 132.265 89.6294 132.088 cv
89.6665 131.944 89.7539 131.814 89.8687 131.718 cv
90.1982 132.082 90.5356 132.169 90.6289 132.193 cv
91.3887 132.389 92.1025 131.96 92.27 131.311 cv
92.3291 131.083 92.3442 130.745 92.1436 130.404 cv
92.5601 130.152 92.957 130.254 92.999 130.265 cv
93.0327 130.274 93.0752 130.285 93.1045 130.31 cv
93.0112 130.322 92.9473 130.396 92.9233 130.489 cv
92.8931 130.607 92.9512 130.73 93.0864 130.765 cv
93.1538 130.782 93.3169 130.779 93.3647 130.593 cv
cp
91.6899 131.152 mo
91.6504 131.304 91.561 131.65 91.3589 131.841 cv
91.1353 132.044 90.8604 132.063 90.6831 132.018 cv
89.9399 131.826 90.1602 130.973 90.21 130.779 cv
90.249 130.627 90.3384 130.281 90.541 130.09 cv
90.7646 129.887 91.0396 129.868 91.2168 129.913 cv
91.96 130.105 91.7397 130.958 91.6899 131.152 cv
cp
91.7871 134.545 mo
91.6587 135.043 90.9146 135.274 90.1377 135.074 cv
89.3271 134.865 88.8174 134.292 88.9419 133.811 cv
88.959 133.743 89.061 133.418 89.4385 133.282 cv
89.6548 133.211 89.7305 133.231 90.3218 133.383 cv
91.0225 133.564 91.9766 133.81 91.7871 134.545 cv
cp
f
97.0059 135.188 mo
97.0688 134.944 li
96.4946 134.796 96.4424 134.719 96.5493 134.306 cv
97.3247 131.3 li
96.1104 131.085 li
96.0469 131.331 li
96.6211 131.479 96.6733 131.555 96.5669 131.969 cv
96.1768 133.48 li
95.9917 134.198 95.457 134.699 94.8237 134.536 cv
94.1313 134.357 94.1919 133.95 94.3071 133.502 cv
95.0283 130.708 li
93.8135 130.493 li
93.7505 130.738 li
94.3921 130.903 94.3857 130.929 94.1919 131.68 cv
93.8652 132.947 li
93.73 133.47 93.6519 133.774 93.833 134.118 cv
93.979 134.39 94.2993 134.581 94.7295 134.691 cv
94.873 134.729 95.1436 134.798 95.4937 134.627 cv
95.7886 134.497 96.0063 134.21 96.0063 134.21 cv
95.8105 134.97 li
97.0059 135.188 li
cp
f
100.896 135.121 mo
100.908 135.07 100.875 135.025 100.824 135.012 cv
100.757 134.995 100.729 135.033 100.701 135.07 cv
100.299 135.723 99.6831 135.771 99.3281 135.68 cv
98.9736 135.588 98.1821 135.132 98.5586 133.671 cv
98.6001 133.511 li
100.939 134.114 li
101.125 134.162 101.142 134.167 101.183 134.006 cv
101.403 133.153 101.152 132.242 100.13 131.979 cv
99.1675 131.73 98.2002 132.408 97.9302 133.455 cv
97.6426 134.57 98.2925 135.611 99.23 135.853 cv
100.234 136.112 100.85 135.298 100.896 135.121 cv
cp
100.659 133.871 mo
98.6499 133.353 li
99.0596 132.044 99.8418 132.084 100.078 132.145 cv
100.981 132.378 100.725 133.582 100.659 133.871 cv
cp
f
168.845 130.833 mo
211.618 122.396 li
214.149 135.227 li
171.376 143.665 li
168.845 130.833 li
cp
0 0 0 0 cmyk
f
180.589 139.255 mo
180.54 139.007 li
179.984 139.117 179.83 139.147 179.641 138.82 cv
176.72 133.833 li
176.665 133.737 176.638 133.689 176.518 133.713 cv
176.398 133.737 176.386 133.766 176.371 133.911 cv
175.592 139.379 li
175.542 139.753 175.346 140.023 174.8 140.14 cv
174.849 140.388 li
175.667 140.209 li
175.906 140.162 176.317 140.081 176.542 140.054 cv
176.494 139.806 li
176.133 139.868 175.883 139.73 175.836 139.491 cv
175.826 139.44 175.823 139.422 175.844 139.303 cv
176.013 138.087 li
178.168 137.662 li
178.904 138.913 li
178.967 139.007 178.97 139.024 178.975 139.049 cv
179.026 139.306 178.589 139.392 178.375 139.435 cv
178.425 139.683 li
178.618 139.626 179.294 139.493 179.533 139.446 cv
179.773 139.399 180.389 139.277 180.589 139.255 cv
cp
178.034 137.431 mo
176.049 137.823 li
176.479 134.778 li
178.034 137.431 li
cp
0 0 0 1 cmyk
f
184.844 136.497 mo
184.629 135.41 183.66 134.73 182.728 134.914 cv
181.975 135.063 181.679 135.681 181.66 135.72 cv
181.547 135.147 li
180.376 135.476 li
180.425 135.724 li
181.024 135.606 181.087 135.656 181.162 136.032 cv
181.955 140.052 li
182.031 140.438 181.937 140.456 181.381 140.566 cv
181.43 140.814 li
181.649 140.753 182.111 140.662 182.35 140.614 cv
182.598 140.565 183.06 140.474 183.286 140.448 cv
183.237 140.2 li
182.689 140.308 182.587 140.328 182.511 139.943 cv
182.217 138.455 li
182.414 138.638 182.83 138.902 183.377 138.794 cv
184.361 138.6 185.062 137.6 184.844 136.497 cv
cp
184.194 136.625 mo
184.395 137.643 183.959 138.501 183.301 138.631 cv
183.036 138.684 182.766 138.622 182.563 138.493 cv
182.327 138.335 182.165 138.189 182.118 137.95 cv
181.77 136.188 li
181.738 136.025 181.736 136.016 181.803 135.861 cv
181.984 135.425 182.371 135.18 182.696 135.116 cv
183.338 134.989 184.005 135.667 184.194 136.625 cv
cp
f
189.313 135.632 mo
189.095 134.529 188.083 133.813 187.09 134.009 cv
186.064 134.211 185.43 135.279 185.643 136.356 cv
185.859 137.452 186.876 138.104 187.852 137.912 cv
188.861 137.712 189.525 136.71 189.313 135.632 cv
cp
188.647 135.684 mo
188.707 135.983 188.811 136.514 188.668 136.959 cv
188.509 137.417 188.148 137.658 187.823 137.722 cv
187.506 137.784 187.094 137.723 186.764 137.353 cv
186.457 137.014 186.349 136.511 186.278 136.151 cv
186.213 135.826 186.111 135.304 186.3 134.867 cv
186.467 134.452 186.816 134.241 187.116 134.182 cv
187.449 134.116 187.839 134.199 188.136 134.487 cv
188.479 134.829 188.585 135.367 188.647 135.684 cv
cp
f
192.061 136.993 mo
192.012 136.744 li
191.464 136.852 191.361 136.873 191.286 136.488 cv
190.239 131.184 li
189.069 131.513 li
189.118 131.761 li
189.699 131.646 189.779 131.692 189.862 132.111 cv
190.747 136.594 li
190.822 136.979 190.729 136.998 190.172 137.107 cv
190.221 137.355 li
190.458 137.291 190.876 137.208 191.133 137.158 cv
191.39 137.107 191.817 137.022 192.061 136.993 cv
cp
f
194.387 136.533 mo
194.338 136.285 li
193.791 136.393 193.688 136.414 193.612 136.029 cv
192.566 130.725 li
191.396 131.054 li
191.444 131.302 li
192.026 131.187 192.106 131.233 192.189 131.652 cv
193.073 136.135 li
193.149 136.52 193.055 136.539 192.499 136.648 cv
192.548 136.896 li
192.784 136.832 193.204 136.749 193.46 136.699 cv
193.717 136.648 194.145 136.563 194.387 136.533 cv
cp
f
198.158 133.888 mo
197.94 132.784 196.928 132.068 195.936 132.264 cv
194.909 132.467 194.275 133.534 194.488 134.612 cv
194.704 135.707 195.722 136.359 196.697 136.167 cv
197.706 135.967 198.371 134.965 198.158 133.888 cv
cp
197.493 133.939 mo
197.552 134.238 197.656 134.769 197.513 135.214 cv
197.354 135.672 196.993 135.913 196.668 135.977 cv
196.352 136.039 195.94 135.978 195.609 135.608 cv
195.302 135.269 195.194 134.766 195.123 134.406 cv
195.059 134.081 194.956 133.56 195.145 133.122 cv
195.312 132.707 195.662 132.496 195.961 132.437 cv
196.294 132.371 196.684 132.454 196.981 132.742 cv
197.324 133.083 197.43 133.623 197.493 133.939 cv
cp
f
205.081 134.424 mo
205.032 134.176 li
204.766 134.228 li
204.013 134.376 203.967 134.279 203.907 133.971 cv
202.955 129.146 li
202.916 128.95 202.915 128.941 202.743 128.975 cv
202.583 129.246 202.218 129.647 201.337 129.821 cv
201.386 130.069 li
201.583 130.03 202.011 129.946 202.437 129.63 cv
203.316 134.087 li
203.377 134.396 203.372 134.503 202.619 134.652 cv
202.354 134.704 li
202.403 134.952 li
202.63 134.889 203.46 134.726 203.743 134.67 cv
204.025 134.614 204.846 134.452 205.081 134.424 cv
cp
f
209.308 132.07 mo
209.153 131.283 208.399 130.792 207.548 130.809 cv
208.25 130.448 208.607 129.729 208.475 129.062 cv
208.341 128.386 207.542 128.028 206.712 128.192 cv
205.857 128.36 205.327 129.007 205.451 129.632 cv
205.518 129.974 205.796 129.99 205.925 129.965 cv
206.104 129.929 206.285 129.76 206.234 129.504 cv
206.18 129.23 205.951 129.151 205.762 129.188 cv
205.711 129.198 205.694 129.201 205.67 129.215 cv
205.88 128.569 206.685 128.411 206.727 128.402 cv
207.009 128.346 207.591 128.365 207.756 129.204 cv
207.789 129.366 207.857 129.85 207.682 130.267 cv
207.5 130.694 207.213 130.777 206.985 130.831 cv
206.733 130.907 li
206.589 130.944 206.556 130.96 206.572 131.037 cv
206.588 131.123 206.631 131.114 206.786 131.083 cv
207.179 131.006 li
207.906 130.862 208.349 131.397 208.511 132.218 cv
208.732 133.339 208.209 133.753 207.791 133.836 cv
207.38 133.917 206.64 133.858 206.28 133.343 cv
206.562 133.332 206.78 133.128 206.719 132.821 cv
206.67 132.573 206.457 132.437 206.217 132.484 cv
206.012 132.525 205.813 132.688 205.877 133.013 cv
206.028 133.775 206.913 134.249 207.862 134.062 cv
208.879 133.861 209.479 132.934 209.308 132.07 cv
cp
f
146.019 170.593 mo
146.164 214.189 li
133.085 214.233 li
132.94 170.636 li
146.019 170.593 li
cp
0 0 0 0 cmyk
f
135.516 180.52 mo
135.768 180.519 li
135.767 179.952 135.766 179.795 136.123 179.672 cv
141.575 177.753 li
141.679 177.718 141.731 177.7 141.731 177.578 cv
141.731 177.456 141.705 177.438 141.565 177.396 cv
136.345 175.59 li
135.987 175.47 135.759 175.226 135.749 174.668 cv
135.496 174.669 li
135.516 175.506 li
135.517 175.75 135.519 176.168 135.501 176.396 cv
135.754 176.395 li
135.762 176.028 135.944 175.81 136.188 175.809 cv
136.241 175.809 136.258 175.809 136.372 175.852 cv
137.533 176.249 li
137.54 178.446 li
136.173 178.931 li
136.068 178.975 136.051 178.975 136.025 178.975 cv
135.763 178.976 135.762 178.531 135.761 178.313 cv
135.508 178.313 li
135.526 178.514 135.528 179.203 135.529 179.447 cv
135.53 179.691 135.532 180.319 135.516 180.52 cv
cp
137.792 178.358 mo
137.786 176.335 li
140.693 177.337 li
137.792 178.358 li
cp
0 0 0 1 cmyk
f
137.415 185.222 mo
138.522 185.218 139.374 184.396 139.371 183.445 cv
139.368 182.678 138.817 182.27 138.782 182.244 cv
139.366 182.242 li
139.267 181.03 li
139.014 181.031 li
139.016 181.642 138.955 181.694 138.571 181.695 cv
134.473 181.709 li
134.081 181.71 134.081 181.614 134.079 181.047 cv
133.826 181.048 li
133.844 181.275 133.845 181.746 133.846 181.99 cv
133.847 182.243 133.849 182.714 133.832 182.94 cv
134.085 182.939 li
134.083 182.381 134.083 182.277 134.475 182.276 cv
135.992 182.271 li
135.775 182.428 135.436 182.787 135.438 183.345 cv
135.441 184.348 136.29 185.226 137.415 185.222 cv
cp
137.412 184.559 mo
136.375 184.563 135.614 183.972 135.612 183.301 cv
135.611 183.03 135.724 182.777 135.889 182.602 cv
136.088 182.401 136.262 182.27 136.506 182.269 cv
138.303 182.263 li
138.468 182.262 138.477 182.262 138.617 182.358 cv
139.01 182.618 139.177 183.045 139.178 183.376 cv
139.181 184.03 138.389 184.556 137.412 184.559 cv
cp
f
137.412 189.773 mo
138.537 189.77 139.432 188.912 139.429 187.9 cv
139.425 186.854 138.499 186.029 137.4 186.033 cv
136.284 186.037 135.45 186.911 135.453 187.905 cv
135.456 188.934 136.313 189.777 137.412 189.773 cv
cp
137.488 189.11 mo
137.183 189.111 136.643 189.113 136.232 188.888 cv
135.813 188.645 135.646 188.245 135.645 187.913 cv
135.644 187.59 135.782 187.198 136.208 186.943 cv
136.6 186.707 137.114 186.696 137.48 186.695 cv
137.812 186.694 138.344 186.692 138.737 186.961 cv
139.113 187.204 139.253 187.587 139.254 187.893 cv
139.255 188.232 139.1 188.599 138.761 188.836 cv
138.36 189.107 137.811 189.109 137.488 189.11 cv
cp
f
135.554 192.212 mo
135.807 192.211 li
135.805 191.653 135.805 191.549 136.197 191.547 cv
141.604 191.529 li
141.503 190.318 li
141.25 190.318 li
141.252 190.912 141.192 190.981 140.765 190.983 cv
136.196 190.998 li
135.803 191 135.803 190.903 135.801 190.336 cv
135.548 190.337 li
135.566 190.582 135.568 191.009 135.569 191.271 cv
135.57 191.532 135.571 191.968 135.554 192.212 cv
cp
f
135.563 194.584 mo
135.815 194.583 li
135.813 194.025 135.813 193.92 136.206 193.919 cv
141.611 193.901 li
141.511 192.689 li
141.258 192.69 li
141.26 193.283 141.2 193.353 140.772 193.354 cv
136.204 193.37 li
135.811 193.371 135.811 193.275 135.809 192.708 cv
135.556 192.709 li
135.574 192.953 135.576 193.38 135.577 193.642 cv
135.578 193.904 135.579 194.339 135.563 194.584 cv
cp
f
137.442 198.789 mo
138.567 198.785 139.462 197.928 139.459 196.917 cv
139.456 195.87 138.528 195.045 137.43 195.048 cv
136.314 195.052 135.479 195.927 135.483 196.921 cv
135.486 197.95 136.344 198.792 137.442 198.789 cv
cp
137.519 198.126 mo
137.213 198.127 136.673 198.129 136.262 197.903 cv
135.843 197.661 135.676 197.26 135.675 196.929 cv
135.674 196.606 135.812 196.213 136.238 195.959 cv
136.63 195.723 137.144 195.712 137.51 195.711 cv
137.842 195.709 138.374 195.708 138.767 195.977 cv
139.143 196.22 139.284 196.603 139.285 196.908 cv
139.286 197.248 139.13 197.615 138.791 197.852 cv
138.391 198.123 137.841 198.125 137.519 198.126 cv
cp
f
135.599 205.483 mo
135.852 205.482 li
135.851 205.211 li
135.848 204.444 135.953 204.418 136.267 204.417 cv
141.184 204.4 li
141.385 204.4 141.394 204.4 141.393 204.225 cv
141.157 204.017 140.833 203.582 140.83 202.684 cv
140.577 202.685 li
140.578 202.885 140.579 203.321 140.807 203.8 cv
136.265 203.815 li
135.951 203.816 135.846 203.791 135.843 203.023 cv
135.842 202.753 li
135.589 202.754 li
135.608 202.989 135.611 203.835 135.611 204.123 cv
135.612 204.41 135.615 205.248 135.599 205.483 cv
cp
f
137.105 210.082 mo
137.907 210.079 138.533 209.432 138.678 208.594 cv
138.899 209.352 139.537 209.838 140.217 209.836 cv
140.906 209.833 141.409 209.117 141.406 208.271 cv
141.403 207.399 140.869 206.756 140.233 206.758 cv
139.884 206.759 139.815 207.03 139.816 207.16 cv
139.816 207.343 139.948 207.552 140.209 207.551 cv
140.488 207.55 140.61 207.341 140.609 207.149 cv
140.609 207.097 140.609 207.079 140.6 207.053 cv
141.194 207.382 141.197 208.202 141.197 208.246 cv
141.198 208.533 141.069 209.101 140.214 209.104 cv
140.049 209.104 139.561 209.08 139.185 208.828 cv
138.8 208.567 138.773 208.271 138.764 208.036 cv
138.736 207.774 li
138.728 207.626 138.718 207.591 138.64 207.591 cv
138.553 207.592 138.553 207.635 138.553 207.792 cv
138.555 208.193 li
138.557 208.935 137.948 209.268 137.111 209.271 cv
135.969 209.274 135.662 208.683 135.66 208.255 cv
135.659 207.837 135.857 207.121 136.432 206.866 cv
136.389 207.146 136.547 207.398 136.861 207.397 cv
137.113 207.396 137.287 207.212 137.287 206.968 cv
137.286 206.759 137.163 206.533 136.832 206.534 cv
136.056 206.536 135.422 207.314 135.425 208.282 cv
135.428 209.32 136.224 210.084 137.105 210.082 cv
cp
f
150.115 215.344 mo
179.567 183.201 li
189.21 192.036 li
159.757 224.181 li
150.115 215.344 li
cp
0 0 0 0 cmyk
f
164.565 215.168 mo
164.379 214.998 li
163.996 215.416 163.89 215.531 163.544 215.379 cv
158.235 213.094 li
158.135 213.049 158.084 213.026 158.002 213.116 cv
157.919 213.206 157.927 213.237 158 213.363 cv
160.614 218.229 li
160.795 218.562 160.797 218.894 160.426 219.312 cv
160.613 219.481 li
161.166 218.853 li
161.331 218.673 161.613 218.364 161.779 218.209 cv
161.593 218.038 li
161.339 218.302 161.057 218.339 160.876 218.175 cv
160.838 218.14 160.825 218.128 160.771 218.019 cv
160.187 216.939 li
161.671 215.319 li
163.005 215.891 li
163.111 215.929 163.124 215.941 163.144 215.958 cv
163.336 216.135 163.036 216.463 162.889 216.624 cv
163.075 216.795 li
163.198 216.635 163.663 216.127 163.828 215.947 cv
163.993 215.767 164.417 215.304 164.565 215.168 cv
cp
161.426 215.213 mo
160.06 216.705 li
158.602 213.997 li
161.426 215.213 li
cp
0 0 0 1 cmyk
f
166.357 210.424 mo
165.541 209.676 164.357 209.704 163.715 210.404 cv
163.197 210.97 163.325 211.643 163.333 211.686 cv
162.902 211.292 li
162.154 212.25 li
162.341 212.42 li
162.753 211.971 162.833 211.973 163.116 212.232 cv
166.138 215.001 li
166.427 215.266 166.362 215.336 165.979 215.754 cv
166.166 215.925 li
166.306 215.747 166.625 215.399 166.79 215.219 cv
166.96 215.033 167.278 214.686 167.444 214.53 cv
167.258 214.359 li
166.881 214.771 166.81 214.848 166.521 214.583 cv
165.402 213.558 li
165.669 213.59 166.161 213.556 166.538 213.145 cv
167.215 212.405 167.187 211.184 166.357 210.424 cv
cp
165.91 210.913 mo
166.675 211.614 166.833 212.563 166.38 213.059 cv
166.198 213.258 165.943 213.368 165.703 213.384 cv
165.42 213.397 165.203 213.375 165.023 213.21 cv
163.699 211.997 li
163.577 211.885 163.57 211.879 163.532 211.714 cv
163.419 211.256 163.586 210.83 163.81 210.585 cv
164.251 210.103 165.19 210.253 165.91 210.913 cv
cp
f
169.445 207.081 mo
168.616 206.32 167.376 206.344 166.693 207.089 cv
165.986 207.861 166.108 209.096 166.918 209.838 cv
167.741 210.592 168.947 210.515 169.619 209.782 cv
170.314 209.023 170.255 207.823 169.445 207.081 cv
cp
168.94 207.516 mo
169.165 207.722 169.563 208.087 169.712 208.531 cv
169.856 208.994 169.707 209.402 169.483 209.646 cv
169.265 209.884 168.897 210.079 168.412 209.977 cv
167.963 209.885 167.578 209.544 167.308 209.297 cv
167.064 209.073 166.671 208.713 166.565 208.25 cv
166.454 207.816 166.61 207.439 166.816 207.214 cv
167.045 206.963 167.409 206.799 167.818 206.855 cv
168.297 206.927 168.702 207.298 168.94 207.516 cv
cp
f
172.464 206.547 mo
172.278 206.376 li
171.901 206.788 171.831 206.865 171.541 206.6 cv
167.555 202.948 li
166.807 203.906 li
166.994 204.077 li
167.394 203.64 167.486 203.63 167.801 203.918 cv
171.17 207.005 li
171.459 207.27 171.395 207.341 171.012 207.759 cv
171.198 207.93 li
171.35 207.738 171.639 207.423 171.815 207.23 cv
171.992 207.037 172.287 206.715 172.464 206.547 cv
cp
f
174.066 204.799 mo
173.88 204.628 li
173.503 205.039 173.433 205.116 173.143 204.852 cv
169.157 201.199 li
168.409 202.158 li
168.596 202.329 li
168.996 201.891 169.088 201.881 169.403 202.17 cv
172.772 205.256 li
173.062 205.521 172.997 205.592 172.614 206.01 cv
172.8 206.181 li
172.952 205.989 173.241 205.674 173.417 205.481 cv
173.594 205.289 173.889 204.967 174.066 204.799 cv
cp
f
175.536 200.433 mo
174.707 199.673 173.467 199.696 172.784 200.442 cv
172.077 201.214 172.199 202.449 173.009 203.191 cv
173.832 203.945 175.038 203.868 175.709 203.135 cv
176.405 202.376 176.346 201.175 175.536 200.433 cv
cp
175.03 200.869 mo
175.255 201.075 175.654 201.44 175.803 201.884 cv
175.947 202.347 175.798 202.754 175.574 202.999 cv
175.356 203.236 174.988 203.432 174.502 203.33 cv
174.054 203.238 173.669 202.897 173.399 202.649 cv
173.154 202.425 172.762 202.066 172.656 201.602 cv
172.544 201.168 172.7 200.792 172.907 200.566 cv
173.136 200.316 173.5 200.152 173.909 200.208 cv
174.388 200.28 174.792 200.651 175.03 200.869 cv
cp
f
181.43 196.763 mo
181.243 196.592 li
181.061 196.791 li
180.542 197.357 180.447 197.305 180.216 197.093 cv
176.59 193.771 li
176.442 193.636 176.436 193.63 176.318 193.758 cv
176.35 194.072 176.293 194.611 175.687 195.273 cv
175.874 195.444 li
176.009 195.296 176.303 194.975 176.46 194.468 cv
179.81 197.537 li
180.041 197.749 180.101 197.839 179.582 198.405 cv
179.399 198.604 li
179.586 198.775 li
179.732 198.589 180.303 197.966 180.498 197.754 cv
180.692 197.542 181.258 196.924 181.43 196.763 cv
cp
f
183.44 192.361 mo
182.849 191.819 181.95 191.871 181.275 192.388 cv
181.627 191.681 181.488 190.891 180.986 190.432 cv
180.479 189.966 179.623 190.152 179.051 190.775 cv
178.462 191.418 178.418 192.253 178.888 192.683 cv
179.145 192.919 179.379 192.767 179.467 192.67 cv
179.591 192.535 179.636 192.292 179.443 192.116 cv
179.237 191.928 179.006 192 178.876 192.141 cv
178.841 192.179 178.829 192.192 178.818 192.217 cv
178.604 191.573 179.158 190.968 179.188 190.936 cv
179.382 190.724 179.861 190.395 180.492 190.972 cv
180.614 191.083 180.956 191.433 181.062 191.873 cv
181.168 192.325 180.987 192.561 180.834 192.74 cv
180.677 192.951 li
180.583 193.066 180.566 193.098 180.624 193.15 cv
180.688 193.209 180.717 193.177 180.824 193.062 cv
181.094 192.766 li
181.595 192.219 182.269 192.387 182.886 192.953 cv
183.729 193.725 183.553 194.368 183.264 194.683 cv
182.981 194.992 182.351 195.383 181.755 195.181 cv
181.976 195.004 182.031 194.712 181.8 194.5 cv
181.613 194.329 181.361 194.346 181.196 194.526 cv
181.055 194.681 180.992 194.93 181.236 195.154 cv
181.808 195.678 182.802 195.536 183.456 194.823 cv
184.156 194.058 184.09 192.956 183.44 192.361 cv
cp
f
208.904 182.844 mo
245.024 207.256 li
237.7 218.093 li
201.579 193.68 li
208.904 182.844 li
cp
0 0 0 0 cmyk
f
211.199 197.111 mo
211.34 196.902 li
210.871 196.584 210.741 196.497 210.84 196.132 cv
212.322 190.545 li
212.351 190.439 212.367 190.386 212.265 190.318 cv
212.164 190.25 212.135 190.261 212.021 190.353 cv
207.591 193.652 li
207.29 193.88 206.96 193.931 206.494 193.626 cv
206.352 193.835 li
207.055 194.29 li
207.257 194.426 207.604 194.661 207.782 194.802 cv
207.923 194.592 li
207.625 194.38 207.547 194.106 207.684 193.904 cv
207.713 193.861 207.723 193.846 207.823 193.777 cv
208.804 193.041 li
210.625 194.271 li
210.255 195.674 li
210.233 195.785 210.223 195.799 210.208 195.821 cv
210.062 196.038 209.694 195.789 209.513 195.667 cv
209.372 195.876 li
209.547 195.974 210.118 196.36 210.32 196.497 cv
210.523 196.633 211.042 196.985 211.199 197.111 cv
cp
210.694 194.013 mo
209.018 192.88 li
211.482 191.041 li
210.694 194.013 li
cp
0 0 0 1 cmyk
f
216.155 198.188 mo
216.775 197.27 216.574 196.103 215.787 195.571 cv
215.151 195.142 214.503 195.367 214.462 195.381 cv
214.79 194.897 li
213.732 194.298 li
213.59 194.507 li
214.096 194.849 214.105 194.929 213.89 195.247 cv
211.595 198.643 li
211.375 198.967 211.296 198.914 210.827 198.596 cv
210.685 198.806 li
210.883 198.918 211.273 199.182 211.475 199.319 cv
211.685 199.46 212.075 199.724 212.252 199.865 cv
212.394 199.656 li
211.932 199.343 211.845 199.285 212.065 198.96 cv
212.915 197.703 li
212.922 197.971 213.029 198.453 213.491 198.766 cv
214.322 199.327 215.525 199.12 216.155 198.188 cv
cp
215.606 197.816 mo
215.025 198.676 214.109 198.973 213.552 198.597 cv
213.329 198.445 213.182 198.21 213.13 197.975 cv
213.077 197.697 213.066 197.479 213.203 197.276 cv
214.208 195.789 li
214.301 195.651 214.306 195.644 214.463 195.582 cv
214.9 195.403 215.347 195.505 215.622 195.691 cv
216.164 196.057 216.153 197.007 215.606 197.816 cv
cp
f
219.916 200.751 mo
220.545 199.819 220.34 198.596 219.502 198.03 cv
218.636 197.444 217.432 197.746 216.817 198.656 cv
216.192 199.581 216.446 200.763 217.269 201.319 cv
218.122 201.896 219.3 201.661 219.916 200.751 cv
cp
219.411 200.314 mo
219.24 200.567 218.937 201.016 218.52 201.228 cv
218.083 201.438 217.658 201.351 217.383 201.165 cv
217.117 200.984 216.87 200.649 216.899 200.154 cv
216.923 199.697 217.205 199.266 217.41 198.962 cv
217.595 198.688 217.893 198.247 218.336 198.073 cv
218.749 197.899 219.145 197.999 219.398 198.169 cv
219.679 198.36 219.895 198.695 219.9 199.108 cv
219.899 199.592 219.591 200.047 219.411 200.314 cv
cp
f
220.886 203.659 mo
221.028 203.45 li
220.566 203.137 220.479 203.079 220.699 202.753 cv
223.726 198.274 li
222.668 197.675 li
222.527 197.885 li
223.018 198.217 223.042 198.306 222.802 198.66 cv
220.244 202.446 li
220.024 202.771 219.945 202.717 219.475 202.4 cv
219.333 202.609 li
219.545 202.731 219.899 202.971 220.116 203.117 cv
220.333 203.264 220.694 203.508 220.886 203.659 cv
cp
f
222.851 204.987 mo
222.993 204.777 li
222.531 204.465 222.444 204.406 222.664 204.082 cv
225.691 199.603 li
224.633 199.003 li
224.492 199.213 li
224.983 199.545 225.006 199.634 224.767 199.988 cv
222.208 203.774 li
221.989 204.099 221.91 204.045 221.44 203.728 cv
221.298 203.937 li
221.51 204.06 221.865 204.299 222.082 204.445 cv
222.297 204.592 222.659 204.836 222.851 204.987 cv
cp
f
227.385 205.799 mo
228.015 204.867 227.81 203.645 226.972 203.079 cv
226.105 202.493 224.902 202.794 224.287 203.705 cv
223.662 204.629 223.916 205.811 224.739 206.368 cv
225.591 206.944 226.77 206.709 227.385 205.799 cv
cp
226.88 205.363 mo
226.709 205.616 226.407 206.064 225.99 206.276 cv
225.553 206.487 225.127 206.399 224.853 206.214 cv
224.586 206.033 224.339 205.698 224.369 205.202 cv
224.393 204.745 224.674 204.314 224.879 204.011 cv
225.065 203.736 225.363 203.295 225.806 203.122 cv
226.218 202.948 226.615 203.047 226.868 203.218 cv
227.149 203.409 227.365 203.744 227.37 204.157 cv
227.369 204.641 227.061 205.096 226.88 205.363 cv
cp
f
231.881 211.09 mo
232.023 210.881 li
231.799 210.729 li
231.164 210.3 231.201 210.198 231.376 209.938 cv
234.13 205.864 li
234.243 205.698 234.248 205.69 234.103 205.593 cv
233.797 205.671 233.255 205.694 232.511 205.191 cv
232.37 205.4 li
232.536 205.513 232.897 205.757 233.421 205.837 cv
230.877 209.602 li
230.702 209.861 230.622 209.934 229.986 209.504 cv
229.762 209.353 li
229.621 209.562 li
229.826 209.679 230.526 210.153 230.764 210.314 cv
231.002 210.475 231.697 210.944 231.881 211.09 cv
cp
f
236.531 212.433 mo
236.98 211.768 236.797 210.887 236.186 210.295 cv
236.937 210.54 237.698 210.286 238.079 209.722 cv
238.464 209.151 238.156 208.332 237.455 207.858 cv
236.732 207.37 235.9 207.449 235.543 207.977 cv
235.348 208.266 235.533 208.475 235.641 208.548 cv
235.793 208.651 236.04 208.66 236.186 208.443 cv
236.342 208.211 236.238 207.993 236.079 207.886 cv
236.035 207.856 236.021 207.847 235.994 207.839 cv
236.601 207.534 237.28 207.993 237.316 208.017 cv
237.554 208.178 237.951 208.604 237.472 209.312 cv
237.379 209.449 237.084 209.839 236.665 210.008 cv
236.233 210.179 235.973 210.035 235.773 209.911 cv
235.542 209.786 li
235.414 209.71 235.38 209.698 235.336 209.763 cv
235.288 209.835 235.324 209.859 235.454 209.947 cv
235.786 210.172 li
236.4 210.587 236.333 211.278 235.864 211.972 cv
235.224 212.918 234.562 212.839 234.208 212.6 cv
233.862 212.365 233.381 211.798 233.494 211.18 cv
233.701 211.373 233.999 211.384 234.174 211.124 cv
234.316 210.915 234.261 210.667 234.059 210.531 cv
233.886 210.414 233.629 210.388 233.444 210.663 cv
233.009 211.305 233.296 212.267 234.098 212.809 cv
234.958 213.39 236.038 213.163 236.531 212.433 cv
cp
f
180.609 229.368 mo
224.111 226.482 li
224.976 239.533 li
181.475 242.419 li
180.609 229.368 li
cp
0 0 0 0 cmyk
f
191.178 239.226 mo
191.161 238.974 li
190.596 239.011 190.439 239.022 190.293 238.673 cv
188.036 233.353 li
187.994 233.251 187.973 233.2 187.851 233.208 cv
187.729 233.216 187.714 233.243 187.679 233.385 cv
186.206 238.708 li
186.108 239.073 185.879 239.315 185.323 239.36 cv
185.34 239.613 li
186.174 239.54 li
186.417 239.524 186.835 239.497 187.063 239.499 cv
187.046 239.247 li
186.68 239.263 186.45 239.095 186.434 238.851 cv
186.431 238.798 186.43 238.78 186.465 238.665 cv
186.789 237.481 li
188.981 237.336 li
189.55 238.67 li
189.601 238.771 189.602 238.789 189.604 238.815 cv
189.621 239.076 189.177 239.105 188.96 239.12 cv
188.977 239.372 li
189.176 239.341 189.863 239.296 190.106 239.28 cv
190.35 239.264 190.977 239.222 191.178 239.226 cv
cp
188.877 237.089 mo
186.859 237.224 li
187.676 234.259 li
188.877 237.089 li
cp
0 0 0 1 cmyk
f
195.751 237.035 mo
195.678 235.931 194.804 235.132 193.855 235.194 cv
193.09 235.245 192.717 235.821 192.693 235.857 cv
192.655 235.274 li
191.452 235.45 li
191.468 235.702 li
192.078 235.663 192.134 235.72 192.159 236.103 cv
192.43 240.192 li
192.456 240.583 192.36 240.589 191.795 240.627 cv
191.812 240.88 li
192.037 240.847 192.507 240.815 192.75 240.8 cv
193.002 240.782 193.472 240.752 193.7 240.755 cv
193.683 240.502 li
193.126 240.538 193.022 240.546 192.996 240.154 cv
192.896 238.64 li
193.066 238.848 193.446 239.163 194.002 239.126 cv
195.003 239.06 195.826 238.157 195.751 237.035 cv
cp
195.09 237.079 mo
195.159 238.114 194.617 238.911 193.947 238.955 cv
193.678 238.974 193.418 238.876 193.233 238.723 cv
193.02 238.536 192.877 238.37 192.861 238.127 cv
192.743 236.335 li
192.731 236.169 192.731 236.161 192.817 236.015 cv
193.052 235.606 193.468 235.413 193.798 235.392 cv
194.451 235.348 195.025 236.104 195.09 237.079 cv
cp
f
200.294 236.751 mo
200.219 235.63 199.308 234.79 198.298 234.856 cv
197.254 234.926 196.489 235.903 196.562 236.999 cv
196.635 238.112 197.561 238.89 198.553 238.824 cv
199.579 238.757 200.367 237.848 200.294 236.751 cv
cp
199.627 236.718 mo
199.648 237.021 199.684 237.562 199.484 237.985 cv
199.269 238.419 198.879 238.61 198.549 238.632 cv
198.227 238.653 197.826 238.54 197.545 238.131 cv
197.285 237.755 197.242 237.242 197.217 236.877 cv
197.196 236.546 197.161 236.016 197.404 235.606 cv
197.623 235.216 197.997 235.052 198.301 235.031 cv
198.64 235.009 199.016 235.142 199.273 235.465 cv
199.57 235.847 199.606 236.396 199.627 236.718 cv
cp
f
202.845 238.452 mo
202.828 238.2 li
202.271 238.237 202.167 238.243 202.141 237.853 cv
201.783 232.458 li
200.58 232.634 li
200.597 232.886 li
201.188 232.847 201.262 232.903 201.291 233.329 cv
201.593 237.889 li
201.619 238.28 201.523 238.286 200.958 238.324 cv
200.974 238.576 li
201.217 238.543 201.643 238.515 201.904 238.497 cv
202.165 238.479 202.6 238.451 202.845 238.452 cv
cp
f
205.211 238.296 mo
205.195 238.043 li
204.638 238.08 204.534 238.087 204.507 237.695 cv
204.15 232.302 li
202.947 232.478 li
202.963 232.729 li
203.555 232.69 203.628 232.747 203.657 233.173 cv
203.959 237.731 li
203.985 238.123 203.89 238.13 203.324 238.167 cv
203.341 238.419 li
203.583 238.386 204.009 238.357 204.27 238.341 cv
204.532 238.323 204.966 238.294 205.211 238.296 cv
cp
f
209.29 236.155 mo
209.215 235.032 208.303 234.192 207.294 234.26 cv
206.25 234.329 205.485 235.306 205.557 236.402 cv
205.631 237.517 206.557 238.294 207.548 238.228 cv
208.576 238.159 209.363 237.251 209.29 236.155 cv
cp
208.624 236.12 mo
208.644 236.425 208.679 236.964 208.48 237.388 cv
208.264 237.821 207.875 238.014 207.544 238.036 cv
207.223 238.058 206.822 237.944 206.542 237.534 cv
206.281 237.158 206.238 236.646 206.213 236.28 cv
206.192 235.95 206.157 235.419 206.4 235.009 cv
206.619 234.619 206.993 234.454 207.297 234.435 cv
207.636 234.412 208.012 234.544 208.27 234.868 cv
208.566 235.251 208.602 235.798 208.624 236.12 cv
cp
f
216.086 237.574 mo
216.07 237.321 li
215.8 237.339 li
215.035 237.39 215.001 237.288 214.981 236.975 cv
214.655 232.067 li
214.642 231.868 214.641 231.858 214.467 231.87 cv
214.274 232.119 213.861 232.47 212.964 232.529 cv
212.981 232.782 li
213.181 232.769 213.616 232.739 214.08 232.481 cv
214.38 237.015 li
214.401 237.327 214.382 237.434 213.617 237.484 cv
213.346 237.503 li
213.364 237.755 li
213.597 237.722 214.441 237.665 214.728 237.646 cv
215.015 237.628 215.85 237.572 216.086 237.574 cv
cp
f
220.582 235.782 mo
220.529 234.981 219.843 234.397 218.998 234.306 cv
219.741 234.037 220.186 233.37 220.14 232.691 cv
220.095 232.004 219.348 231.546 218.504 231.603 cv
217.634 231.66 217.026 232.233 217.068 232.868 cv
217.09 233.217 217.365 233.269 217.496 233.26 cv
217.678 233.247 217.878 233.104 217.861 232.843 cv
217.842 232.563 217.625 232.456 217.434 232.469 cv
217.382 232.472 217.365 232.474 217.339 232.483 cv
217.63 231.87 218.449 231.815 218.492 231.813 cv
218.779 231.794 219.353 231.888 219.41 232.739 cv
219.42 232.905 219.427 233.394 219.2 233.784 cv
218.964 234.185 218.669 234.23 218.435 234.255 cv
218.176 234.298 li
218.029 234.317 217.995 234.327 218 234.406 cv
218.005 234.493 218.049 234.49 218.206 234.479 cv
218.606 234.453 li
219.345 234.404 219.716 234.991 219.772 235.827 cv
219.847 236.966 219.276 237.31 218.85 237.339 cv
218.432 237.366 217.706 237.214 217.415 236.655 cv
217.697 236.681 217.938 236.507 217.917 236.194 cv
217.901 235.942 217.707 235.78 217.462 235.796 cv
217.254 235.81 217.036 235.946 217.058 236.277 cv
217.109 237.052 217.925 237.636 218.891 237.571 cv
219.926 237.503 220.64 236.66 220.582 235.782 cv
cp
f
258.864 154.564 mo
267.367 197.324 li
254.54 199.874 li
246.036 157.115 li
258.864 154.564 li
cp
0 0 0 0 cmyk
f
250.459 166.321 mo
250.708 166.272 li
250.597 165.716 250.567 165.562 250.893 165.373 cv
255.876 162.444 li
255.972 162.389 256.02 162.362 255.996 162.242 cv
255.972 162.123 255.943 162.11 255.797 162.095 cv
250.329 161.325 li
249.954 161.274 249.684 161.079 249.567 160.534 cv
249.319 160.583 li
249.499 161.4 li
249.546 161.64 249.628 162.05 249.656 162.276 cv
249.903 162.227 li
249.84 161.866 249.977 161.617 250.217 161.569 cv
250.268 161.559 250.286 161.555 250.405 161.576 cv
251.621 161.743 li
252.049 163.898 li
250.8 164.635 li
250.706 164.699 250.689 164.702 250.664 164.707 cv
250.407 164.758 250.32 164.322 250.278 164.108 cv
250.03 164.158 li
250.085 164.351 250.22 165.026 250.267 165.266 cv
250.315 165.505 250.438 166.121 250.459 166.321 cv
cp
252.28 163.763 mo
251.885 161.779 li
254.931 162.205 li
252.28 163.763 li
cp
0 0 0 1 cmyk
f
253.225 170.572 mo
254.311 170.356 254.99 169.385 254.804 168.453 cv
254.655 167.701 254.036 167.406 253.997 167.387 cv
254.57 167.273 li
254.239 166.103 li
253.991 166.152 li
254.11 166.751 254.06 166.814 253.684 166.889 cv
249.665 167.688 li
249.28 167.765 249.261 167.671 249.151 167.115 cv
248.903 167.164 li
248.964 167.383 249.056 167.845 249.103 168.084 cv
249.153 168.333 249.245 168.794 249.272 169.02 cv
249.52 168.971 li
249.411 168.423 249.39 168.321 249.775 168.244 cv
251.263 167.948 li
251.08 168.145 250.816 168.562 250.925 169.109 cv
251.121 170.092 252.122 170.792 253.225 170.572 cv
cp
253.096 169.922 mo
252.079 170.125 251.218 169.691 251.087 169.032 cv
251.035 168.767 251.097 168.497 251.225 168.293 cv
251.383 168.058 251.529 167.896 251.768 167.848 cv
253.53 167.498 li
253.692 167.465 253.701 167.463 253.856 167.53 cv
254.292 167.71 254.538 168.097 254.602 168.422 cv
254.73 169.063 254.054 169.731 253.096 169.922 cv
cp
f
254.096 175.04 mo
255.199 174.82 255.914 173.807 255.716 172.814 cv
255.512 171.789 254.444 171.156 253.367 171.371 cv
252.272 171.588 251.621 172.607 251.815 173.582 cv
252.015 174.591 253.018 175.253 254.096 175.04 cv
cp
254.043 174.374 mo
253.745 174.434 253.214 174.539 252.768 174.396 cv
252.31 174.239 252.069 173.877 252.004 173.553 cv
251.942 173.236 252.001 172.824 252.372 172.493 cv
252.71 172.186 253.213 172.077 253.573 172.005 cv
253.897 171.94 254.419 171.837 254.857 172.025 cv
255.272 172.192 255.484 172.541 255.543 172.84 cv
255.61 173.174 255.527 173.563 255.24 173.861 cv
254.899 174.204 254.36 174.311 254.043 174.374 cv
cp
f
252.74 177.789 mo
252.988 177.74 li
252.879 177.192 252.859 177.09 253.244 177.013 cv
258.546 175.959 li
258.215 174.789 li
257.967 174.838 li
258.083 175.42 258.037 175.5 257.618 175.583 cv
253.136 176.475 li
252.751 176.551 252.733 176.457 252.623 175.901 cv
252.375 175.951 li
252.439 176.187 252.523 176.605 252.574 176.862 cv
252.625 177.119 252.709 177.546 252.74 177.789 cv
cp
f
253.203 180.115 mo
253.451 180.066 li
253.342 179.519 253.322 179.416 253.707 179.339 cv
259.008 178.285 li
258.678 177.115 li
258.43 177.165 li
258.545 177.746 258.5 177.826 258.081 177.91 cv
253.599 178.801 li
253.214 178.877 253.196 178.783 253.085 178.228 cv
252.837 178.277 li
252.902 178.513 252.985 178.932 253.037 179.188 cv
253.087 179.445 253.172 179.873 253.203 180.115 cv
cp
f
255.854 183.882 mo
256.958 183.663 257.671 182.649 257.474 181.657 cv
257.27 180.631 256.203 179.999 255.125 180.213 cv
254.03 180.431 253.379 181.449 253.573 182.424 cv
253.774 183.433 254.777 184.096 255.854 183.882 cv
cp
255.802 183.217 mo
255.502 183.276 254.972 183.381 254.526 183.239 cv
254.068 183.082 253.828 182.72 253.763 182.396 cv
253.7 182.079 253.76 181.667 254.13 181.335 cv
254.469 181.028 254.972 180.919 255.331 180.848 cv
255.656 180.783 256.177 180.679 256.615 180.868 cv
257.031 181.034 257.242 181.383 257.301 181.683 cv
257.368 182.016 257.286 182.406 256.998 182.703 cv
256.657 183.046 256.119 183.154 255.802 183.217 cv
cp
f
255.329 190.805 mo
255.577 190.756 li
255.524 190.491 li
255.375 189.738 255.472 189.692 255.78 189.631 cv
260.603 188.672 li
260.799 188.632 260.808 188.631 260.774 188.46 cv
260.502 188.3 260.101 187.936 259.925 187.055 cv
259.677 187.104 li
259.716 187.301 259.802 187.729 260.118 188.155 cv
255.663 189.041 li
255.354 189.102 255.247 189.097 255.097 188.344 cv
255.044 188.079 li
254.796 188.128 li
254.859 188.356 255.024 189.186 255.081 189.468 cv
255.136 189.75 255.299 190.571 255.329 190.805 cv
cp
f
257.689 195.03 mo
258.476 194.873 258.965 194.118 258.948 193.268 cv
259.309 193.97 260.029 194.324 260.696 194.191 cv
261.372 194.057 261.728 193.257 261.563 192.428 cv
261.393 191.573 260.746 191.043 260.122 191.167 cv
259.779 191.236 259.763 191.515 259.789 191.643 cv
259.825 191.822 259.994 192.002 260.25 191.951 cv
260.524 191.896 260.603 191.667 260.566 191.479 cv
260.555 191.428 260.552 191.411 260.539 191.387 cv
261.184 191.596 261.344 192.4 261.353 192.443 cv
261.409 192.725 261.391 193.307 260.553 193.473 cv
260.39 193.505 259.907 193.575 259.49 193.4 cv
259.062 193.219 258.979 192.933 258.924 192.704 cv
258.847 192.452 li
258.81 192.309 258.794 192.276 258.718 192.292 cv
258.632 192.309 258.641 192.351 258.671 192.505 cv
258.75 192.898 li
258.894 193.625 258.36 194.069 257.54 194.232 cv
256.419 194.456 256.004 193.934 255.92 193.514 cv
255.839 193.104 255.896 192.364 256.412 192.003 cv
256.423 192.286 256.626 192.503 256.934 192.441 cv
257.182 192.392 257.318 192.179 257.27 191.939 cv
257.229 191.734 257.065 191.536 256.74 191.6 cv
255.979 191.751 255.506 192.637 255.695 193.586 cv
255.897 194.604 256.825 195.202 257.689 195.03 cv
cp
f
273.136 101.097 mo
327.513 75.0151 li
333.169 86.8081 li
278.792 112.889 li
273.136 101.097 li
cp
0 0 0 0 cmyk
f
286.646 106.302 mo
286.537 106.074 li
286.025 106.319 285.883 106.387 285.619 106.118 cv
281.544 102.018 li
281.468 101.939 281.429 101.899 281.32 101.952 cv
281.209 102.005 281.205 102.036 281.226 102.181 cv
281.837 107.67 li
281.882 108.045 281.76 108.355 281.261 108.604 cv
281.371 108.833 li
282.118 108.455 li
282.337 108.349 282.715 108.168 282.927 108.086 cv
282.818 107.858 li
282.484 108.008 282.208 107.938 282.102 107.717 cv
282.08 107.67 282.072 107.654 282.062 107.533 cv
281.922 106.314 li
283.904 105.364 li
284.928 106.391 li
285.012 106.466 285.02 106.482 285.032 106.506 cv
285.145 106.742 284.744 106.934 284.547 107.028 cv
284.657 107.256 li
284.83 107.154 285.451 106.856 285.671 106.75 cv
285.891 106.645 286.458 106.373 286.646 106.302 cv
cp
283.715 105.174 mo
281.892 106.049 li
281.548 102.993 li
283.715 105.174 li
cp
0 0 0 1 cmyk
f
290.993 104.217 mo
290.883 103.989 li
290.491 104.177 290.294 104.272 290.173 104.04 cv
289.479 102.593 li
289.128 101.862 289.023 101.642 288.721 101.477 cv
288.346 101.28 287.955 101.41 287.687 101.538 cv
286.924 101.904 286.939 102.7 286.952 102.887 cv
286.943 102.891 li
286.555 102.081 li
285.527 102.68 li
285.636 102.908 li
286.171 102.652 286.26 102.677 286.445 103.062 cv
287.467 105.192 li
287.637 105.546 287.55 105.588 287.04 105.833 cv
287.149 106.061 li
287.345 105.947 287.77 105.744 287.99 105.638 cv
288.218 105.529 288.643 105.325 288.855 105.243 cv
288.746 105.015 li
288.242 105.256 288.148 105.301 287.978 104.947 cv
287.277 103.485 li
286.88 102.66 287.212 101.959 287.7 101.726 cv
288.187 101.492 288.49 101.84 288.719 102.319 cv
289.606 104.167 li
289.775 104.521 289.689 104.562 289.177 104.807 cv
289.287 105.035 li
289.484 104.921 289.909 104.718 290.128 104.612 cv
290.357 104.503 290.781 104.299 290.993 104.217 cv
cp
f
293.069 103.221 mo
292.959 102.994 li
292.449 103.239 292.398 103.214 292.25 102.908 cv
290.863 100.015 li
289.835 100.614 li
289.945 100.842 li
290.448 100.601 290.542 100.614 290.726 100.999 cv
291.751 103.137 li
291.921 103.491 291.835 103.533 291.324 103.778 cv
291.433 104.006 li
291.646 103.884 292.023 103.704 292.251 103.594 cv
292.337 103.553 292.793 103.334 293.069 103.221 cv
cp
290.351 98.6841 mo
290.238 98.4482 289.977 98.3892 289.789 98.48 cv
289.569 98.5854 289.486 98.8374 289.588 99.0498 cv
289.686 99.2544 289.942 99.3442 290.147 99.2461 cv
290.382 99.1333 290.441 98.8726 290.351 98.6841 cv
cp
f
299.546 100.114 mo
299.437 99.8862 li
299.044 100.075 298.848 100.169 298.727 99.937 cv
298.033 98.4907 li
297.682 97.7593 297.577 97.5391 297.275 97.3745 cv
296.9 97.1772 296.508 97.3071 296.241 97.4355 cv
295.588 97.7485 295.484 98.3784 295.505 98.7456 cv
295.105 98.1929 294.597 98.2236 294.102 98.4609 cv
293.339 98.8267 293.354 99.6226 293.367 99.8101 cv
293.359 99.814 li
292.97 99.0039 li
291.943 99.6035 li
292.052 99.8315 li
292.586 99.5747 292.675 99.5996 292.861 99.9849 cv
293.882 102.116 li
294.052 102.469 293.965 102.511 293.455 102.756 cv
293.564 102.984 li
293.761 102.87 294.185 102.667 294.406 102.561 cv
294.633 102.452 295.058 102.248 295.27 102.166 cv
295.161 101.938 li
294.658 102.179 294.563 102.224 294.393 101.871 cv
293.692 100.408 li
293.296 99.5825 293.627 98.8823 294.115 98.6484 cv
294.602 98.4146 294.905 98.7627 295.134 99.2422 cv
296.021 101.09 li
296.191 101.444 296.104 101.485 295.593 101.73 cv
295.703 101.958 li
295.899 101.844 296.324 101.641 296.543 101.535 cv
296.772 101.426 297.197 101.222 297.409 101.14 cv
297.299 100.912 li
296.795 101.153 296.702 101.199 296.532 100.845 cv
295.831 99.3823 li
295.434 98.5571 295.766 97.8564 296.253 97.6226 cv
296.741 97.3892 297.042 97.7373 297.273 98.2168 cv
298.16 100.064 li
298.329 100.418 298.243 100.459 297.731 100.705 cv
297.84 100.933 li
298.038 100.819 298.462 100.615 298.682 100.51 cv
298.911 100.4 299.334 100.197 299.546 100.114 cv
cp
f
303.119 97.5405 mo
302.908 97.1001 li
302.734 97.1831 li
302.946 97.6235 li
303.161 98.0718 303.001 98.2251 302.892 98.2778 cv
302.593 98.4209 302.393 98.0044 302.336 97.8862 cv
301.677 96.5107 li
301.473 96.0859 301.322 95.7715 300.83 95.6309 cv
300.433 95.5112 300.027 95.5708 299.681 95.7368 cv
299.037 96.0459 298.745 96.708 298.99 97.2192 cv
299.099 97.4473 299.301 97.4858 299.482 97.3989 cv
299.67 97.3081 299.741 97.1108 299.65 96.9219 cv
299.496 96.5996 299.212 96.7354 299.094 96.792 cv
299.117 96.375 299.426 96.0522 299.741 95.9019 cv
300.102 95.728 300.709 95.8042 301.048 96.5122 cv
301.2 96.8267 li
299.63 97.6079 299.35 98.5552 299.64 99.1602 cv
299.938 99.7813 300.755 99.6309 301.236 99.4009 cv
301.754 99.1523 301.958 98.668 301.925 98.2192 cv
302.134 98.5732 302.514 98.7397 302.852 98.5776 cv
303.017 98.498 303.42 98.1694 303.119 97.5405 cv
cp
301.641 97.7466 mo
302.01 98.5166 301.561 99.0513 301.223 99.2134 cv
300.837 99.3984 300.379 99.27 300.199 98.8926 cv
299.701 97.855 300.992 97.1196 301.267 96.9683 cv
301.641 97.7466 li
cp
f
305.53 97.2446 mo
305.42 97.0166 li
304.917 97.2583 304.823 97.3032 304.653 96.9497 cv
302.315 92.0752 li
301.264 92.686 li
301.374 92.9136 li
301.908 92.6572 301.997 92.6821 302.182 93.0674 cv
304.158 97.187 li
304.328 97.541 304.241 97.5825 303.73 97.8276 cv
303.839 98.0552 li
304.052 97.9341 304.437 97.7495 304.673 97.6362 cv
304.909 97.5229 305.302 97.3345 305.53 97.2446 cv
cp
f
313.721 93.3154 mo
313.612 93.0874 li
313.455 93.1631 li
312.889 93.4346 312.828 93.3672 312.688 93.0762 cv
310.686 88.9019 li
310.546 88.6108 310.532 88.521 311.098 88.2495 cv
311.255 88.1738 li
311.146 87.9458 li
310.965 88.0522 310.32 88.3613 310.092 88.4707 cv
309.856 88.584 309.211 88.8931 309.015 88.9678 cv
309.125 89.1958 li
309.282 89.1206 li
309.848 88.8491 309.91 88.916 310.049 89.207 cv
310.943 91.0703 li
308.592 92.1978 li
307.699 90.3345 li
307.559 90.0435 307.544 89.9536 308.111 89.6821 cv
308.268 89.6069 li
308.159 89.3789 li
307.977 89.4849 307.333 89.7944 307.105 89.9038 cv
306.869 90.0166 306.224 90.3257 306.028 90.4009 cv
306.137 90.6289 li
306.294 90.5532 li
306.861 90.2817 306.922 90.3491 307.061 90.6401 cv
309.064 94.8145 li
309.204 95.1055 309.217 95.1953 308.652 95.4668 cv
308.494 95.5425 li
308.603 95.7705 li
308.785 95.6641 309.429 95.355 309.658 95.2456 cv
309.893 95.1323 310.538 94.8232 310.734 94.7485 cv
310.625 94.5205 li
310.467 94.5957 li
309.902 94.8672 309.84 94.8003 309.701 94.5093 cv
308.702 92.4258 li
311.052 91.2983 li
312.051 93.3818 li
312.191 93.6724 312.205 93.7627 311.639 94.0342 cv
311.482 94.1094 li
311.591 94.3374 li
311.772 94.231 312.417 93.9219 312.645 93.8125 cv
312.88 93.6997 313.525 93.3901 313.721 93.3154 cv
cp
f
316.853 89.7437 mo
316.367 88.73 315.208 88.2896 314.296 88.7271 cv
313.353 89.1792 313.005 90.3711 313.481 91.3618 cv
313.963 92.3677 315.112 92.7456 316.007 92.3159 cv
316.935 91.8706 317.329 90.7344 316.853 89.7437 cv
cp
316.222 89.9595 mo
316.354 90.2349 316.587 90.7222 316.56 91.1899 cv
316.521 91.6729 316.231 91.9956 315.932 92.1392 cv
315.642 92.2783 315.228 92.3223 314.815 92.0464 cv
314.433 91.7944 314.203 91.3345 314.044 91.0044 cv
313.901 90.7056 313.67 90.2261 313.745 89.7554 cv
313.803 89.3115 314.088 89.02 314.364 88.8882 cv
314.67 88.7407 315.068 88.7241 315.427 88.9287 cv
315.845 89.1733 316.083 89.6689 316.222 89.9595 cv
cp
f
322 89.3447 mo
321.89 89.1167 li
321.356 89.3735 321.267 89.3481 321.082 88.9634 cv
319.74 86.1646 li
318.672 86.7827 li
318.782 87.0103 li
319.317 86.7539 319.406 86.7788 319.59 87.1641 cv
320.265 88.5713 li
320.586 89.2397 320.5 89.9678 319.911 90.2505 cv
319.265 90.5596 319.049 90.209 318.849 89.7925 cv
317.601 87.1899 li
316.534 87.8081 li
316.643 88.0361 li
317.241 87.7495 317.252 87.7729 317.587 88.4731 cv
318.154 89.6523 li
318.387 90.1396 318.523 90.4224 318.883 90.5688 cv
319.17 90.6831 319.538 90.6226 319.939 90.4302 cv
320.072 90.3662 320.324 90.2456 320.482 89.8892 cv
320.623 89.5991 320.605 89.2402 320.605 89.2402 cv
320.945 89.9478 li
322 89.3447 li
cp
f
324.469 86.9321 mo
324.265 86.5078 323.885 86.3809 323.781 86.3438 cv
323.38 86.2358 323.146 86.2905 322.582 86.4448 cv
322.324 86.5112 321.697 86.6763 321.47 86.2046 cv
321.353 85.9609 321.345 85.52 322.052 85.1807 cv
322.91 84.7695 323.307 85.478 323.44 85.7144 cv
323.478 85.7734 323.533 85.7471 323.557 85.7358 cv
323.643 85.6943 323.625 85.6548 323.556 85.5132 cv
323.165 84.6958 li
323.096 84.5542 323.078 84.5151 323 84.5527 cv
322.936 84.5825 322.87 84.8276 322.848 84.9243 cv
322.51 84.8447 322.245 84.9146 321.993 85.0352 cv
321.042 85.4917 321.007 86.146 321.214 86.5786 cv
321.256 86.665 321.388 86.9404 321.819 87.0723 cv
322.176 87.1714 322.47 87.0981 322.866 86.9956 cv
323.339 86.8745 323.453 86.8491 323.724 86.9121 cv
323.922 86.9624 324.108 87.0864 324.213 87.3062 cv
324.375 87.6445 324.36 88.1162 323.668 88.4478 cv
323.149 88.6968 322.628 88.5791 322.079 87.876 cv
321.979 87.7495 321.964 87.7373 321.964 87.7373 cv
321.933 87.7134 321.902 87.7285 321.878 87.7397 cv
321.792 87.7813 321.81 87.8208 321.878 87.9624 cv
322.391 89.0317 li
322.459 89.1729 322.478 89.2124 322.556 89.1743 cv
322.596 89.1558 322.6 89.144 322.655 88.915 cv
322.667 88.8408 322.66 88.8252 322.717 88.6431 cv
323.193 88.8691 323.618 88.6655 323.751 88.6016 cv
324.577 88.2056 324.767 87.5532 324.469 86.9321 cv
cp
f
327.966 85.3325 mo
327.944 85.2852 327.889 85.2725 327.842 85.2954 cv
327.78 85.3252 327.783 85.3721 327.786 85.4189 cv
327.898 86.1772 327.458 86.6108 327.127 86.769 cv
326.797 86.9277 325.898 87.0884 325.246 85.728 cv
325.174 85.5791 li
327.352 84.5347 li
327.525 84.4517 327.541 84.4438 327.468 84.2944 cv
327.087 83.5005 326.309 82.9653 325.358 83.4214 cv
324.461 83.8511 324.158 84.9927 324.625 85.9678 cv
325.124 87.0054 326.291 87.3833 327.164 86.9648 cv
328.099 86.5161 328.045 85.4976 327.966 85.3325 cv
cp
326.981 84.5283 mo
325.11 85.4258 li
324.581 84.1611 325.205 83.688 325.425 83.5825 cv
326.266 83.1787 326.845 84.2646 326.981 84.5283 cv
cp
f
235.44 42.8765 mo
248.519 42.8765 li
248.519 103.185 li
235.44 103.185 li
235.44 42.8765 li
cp
0 0 0 0 cmyk
f
245.975 93.2554 mo
245.722 93.2554 li
245.722 93.8223 245.722 93.979 245.365 94.1011 cv
239.907 96.002 li
239.801 96.0371 239.75 96.0542 239.75 96.1763 cv
239.75 96.2983 239.776 96.3159 239.916 96.3594 cv
245.129 98.1821 li
245.487 98.3042 245.713 98.5483 245.722 99.106 cv
245.975 99.106 li
245.958 98.269 li
245.958 98.0249 245.958 97.6064 245.975 97.3799 cv
245.722 97.3799 li
245.713 97.7461 245.531 97.9639 245.287 97.9639 cv
245.234 97.9639 245.216 97.9639 245.103 97.9204 cv
243.943 97.519 li
243.943 95.3218 li
245.312 94.8423 li
245.417 94.7988 245.434 94.7988 245.46 94.7988 cv
245.722 94.7988 245.722 95.2437 245.722 95.4614 cv
245.975 95.4614 li
245.958 95.2607 245.958 94.5723 245.958 94.3281 cv
245.958 94.084 245.958 93.4561 245.975 93.2554 cv
cp
243.691 95.4092 mo
243.691 97.4321 li
240.787 96.4204 li
243.691 95.4092 li
cp
0 0 0 1 cmyk
f
245.975 88.4336 mo
245.722 88.4336 li
245.722 88.8696 245.722 89.0874 245.46 89.0962 cv
243.856 89.0962 li
243.045 89.0962 242.801 89.0962 242.522 89.2969 cv
242.182 89.5498 242.129 89.9595 242.129 90.2559 cv
242.129 91.1021 242.853 91.4331 243.028 91.5029 cv
243.028 91.5117 li
242.129 91.5117 li
242.226 92.6973 li
242.479 92.6973 li
242.479 92.1045 242.54 92.0347 242.966 92.0347 cv
245.33 92.0347 li
245.722 92.0347 245.722 92.1309 245.722 92.6973 cv
245.975 92.6973 li
245.958 92.4707 245.958 92 245.958 91.7559 cv
245.958 91.5029 245.958 91.0322 245.975 90.8052 cv
245.722 90.8052 li
245.722 91.3633 245.722 91.4683 245.33 91.4683 cv
243.708 91.4683 li
242.792 91.4683 242.304 90.8662 242.304 90.3257 cv
242.304 89.7852 242.749 89.6631 243.281 89.6631 cv
245.33 89.6631 li
245.722 89.6631 245.722 89.7593 245.722 90.3257 cv
245.975 90.3257 li
245.958 90.0991 245.958 89.6284 245.958 89.3843 cv
245.958 89.1313 245.958 88.6606 245.975 88.4336 cv
cp
f
245.975 86.1318 mo
245.722 86.1318 li
245.722 86.6987 245.678 86.7334 245.338 86.7334 cv
242.129 86.7334 li
242.226 87.9194 li
242.479 87.9194 li
242.479 87.3613 242.531 87.2827 242.958 87.2827 cv
245.33 87.2827 li
245.722 87.2827 245.722 87.3784 245.722 87.9453 cv
245.975 87.9453 li
245.958 87.7012 245.958 87.2827 245.958 87.0298 cv
245.958 86.9341 245.958 86.4282 245.975 86.1318 cv
cp
240.708 86.6201 mo
240.447 86.6201 240.282 86.8296 240.282 87.0386 cv
240.282 87.2827 240.473 87.4658 240.708 87.4658 cv
240.935 87.4658 241.127 87.2739 241.127 87.0474 cv
241.127 86.7856 240.917 86.6201 240.708 86.6201 cv
cp
f
245.975 78.9473 mo
245.722 78.9473 li
245.722 79.3833 245.722 79.6011 245.46 79.6099 cv
243.856 79.6099 li
243.045 79.6099 242.801 79.6099 242.522 79.8101 cv
242.182 80.063 242.129 80.4731 242.129 80.7695 cv
242.129 81.4932 242.653 81.8594 242.993 81.999 cv
242.322 82.1211 242.129 82.5918 242.129 83.1411 cv
242.129 83.9868 242.853 84.3184 243.028 84.3882 cv
243.028 84.3965 li
242.129 84.3965 li
242.226 85.5825 li
242.479 85.5825 li
242.479 84.9897 242.54 84.9199 242.966 84.9199 cv
245.33 84.9199 li
245.722 84.9199 245.722 85.0156 245.722 85.5825 cv
245.975 85.5825 li
245.958 85.356 245.958 84.8848 245.958 84.6406 cv
245.958 84.3882 245.958 83.917 245.975 83.6904 cv
245.722 83.6904 li
245.722 84.2485 245.722 84.353 245.33 84.353 cv
243.708 84.353 li
242.792 84.353 242.304 83.7515 242.304 83.2109 cv
242.304 82.6704 242.749 82.5483 243.281 82.5483 cv
245.33 82.5483 li
245.722 82.5483 245.722 82.644 245.722 83.2109 cv
245.975 83.2109 li
245.958 82.9839 245.958 82.5132 245.958 82.269 cv
245.958 82.0161 245.958 81.5454 245.975 81.3188 cv
245.722 81.3188 li
245.722 81.877 245.722 81.9814 245.33 81.9814 cv
243.708 81.9814 li
242.792 81.9814 242.304 81.3799 242.304 80.8394 cv
242.304 80.2983 242.749 80.1763 243.281 80.1763 cv
245.33 80.1763 li
245.722 80.1763 245.722 80.2725 245.722 80.8394 cv
245.975 80.8394 li
245.958 80.6123 245.958 80.1416 245.958 79.8975 cv
245.958 79.6445 245.958 79.1738 245.975 78.9473 cv
cp
f
245.199 74.6138 mo
244.71 74.6138 li
244.71 74.8052 li
245.199 74.8052 li
245.696 74.8052 245.766 75.0146 245.766 75.1367 cv
245.766 75.4683 245.303 75.4683 245.172 75.4683 cv
243.647 75.4683 li
243.176 75.4683 242.828 75.4683 242.487 75.8516 cv
242.208 76.1567 242.086 76.5493 242.086 76.9331 cv
242.086 77.6479 242.557 78.1973 243.124 78.1973 cv
243.376 78.1973 243.499 78.0317 243.499 77.8311 cv
243.499 77.6216 243.35 77.4736 243.141 77.4736 cv
242.784 77.4736 242.784 77.7876 242.784 77.9185 cv
242.417 77.7178 242.26 77.2993 242.26 76.9502 cv
242.26 76.5493 242.592 76.0347 243.376 76.0347 cv
243.725 76.0347 li
243.751 77.7876 244.484 78.4502 245.156 78.4502 cv
245.844 78.4502 246.062 77.6479 246.062 77.1162 cv
246.062 76.5405 245.713 76.1479 245.294 75.9824 cv
245.705 75.9478 246.019 75.6772 246.019 75.3022 cv
246.019 75.1191 245.897 74.6138 245.199 74.6138 cv
cp
244.746 76.0347 mo
245.6 76.0347 245.888 76.6714 245.888 77.0464 cv
245.888 77.4736 245.574 77.8311 245.156 77.8311 cv
244.004 77.8311 243.9 76.3486 243.882 76.0347 cv
244.746 76.0347 li
cp
f
245.975 72.3115 mo
245.722 72.3115 li
245.722 72.8696 245.722 72.9741 245.33 72.9741 cv
239.923 72.9741 li
240.02 74.1865 li
240.273 74.1865 li
240.273 73.5933 240.333 73.5239 240.761 73.5239 cv
245.33 73.5239 li
245.722 73.5239 245.722 73.6196 245.722 74.1865 cv
245.975 74.1865 li
245.958 73.9424 245.958 73.5151 245.958 73.2534 cv
245.958 72.9917 245.958 72.5557 245.975 72.3115 cv
cp
f
245.975 63.2261 mo
245.722 63.2261 li
245.722 63.4004 li
245.722 64.0283 245.635 64.0542 245.312 64.0542 cv
240.682 64.0542 li
240.36 64.0542 240.273 64.0283 240.273 63.4004 cv
240.273 63.2261 li
240.02 63.2261 li
240.037 63.4355 240.037 64.1504 240.037 64.4033 cv
240.037 64.6646 240.037 65.3799 240.02 65.5894 cv
240.273 65.5894 li
240.273 65.4146 li
240.273 64.7866 240.36 64.7607 240.682 64.7607 cv
242.749 64.7607 li
242.749 67.3677 li
240.682 67.3677 li
240.36 67.3677 240.273 67.3418 240.273 66.7139 cv
240.273 66.5396 li
240.02 66.5396 li
240.037 66.7485 240.037 67.4639 240.037 67.7163 cv
240.037 67.978 240.037 68.6929 240.02 68.9023 cv
240.273 68.9023 li
240.273 68.728 li
240.273 68.1001 240.36 68.0742 240.682 68.0742 cv
245.312 68.0742 li
245.635 68.0742 245.722 68.1001 245.722 68.728 cv
245.722 68.9023 li
245.975 68.9023 li
245.958 68.6929 245.958 67.978 245.958 67.7251 cv
245.958 67.4639 245.958 66.7485 245.975 66.5396 cv
245.722 66.5396 li
245.722 66.7139 li
245.722 67.3418 245.635 67.3677 245.312 67.3677 cv
243.001 67.3677 li
243.001 64.7607 li
245.312 64.7607 li
245.635 64.7607 245.722 64.7866 245.722 65.4146 cv
245.722 65.5894 li
245.975 65.5894 li
245.958 65.3799 245.958 64.6646 245.958 64.4121 cv
245.958 64.1504 245.958 63.4355 245.975 63.2261 cv
cp
f
244.109 58.8579 mo
242.984 58.8579 242.086 59.7124 242.086 60.7236 cv
242.086 61.77 243.01 62.5981 244.109 62.5981 cv
245.225 62.5981 246.062 61.7266 246.062 60.7324 cv
246.062 59.7036 245.208 58.8579 244.109 58.8579 cv
cp
244.031 59.5205 mo
244.335 59.5205 244.876 59.5205 245.287 59.7471 cv
245.705 59.9912 245.871 60.3921 245.871 60.7236 cv
245.871 61.0464 245.731 61.4385 245.303 61.6914 cv
244.912 61.9268 244.397 61.9355 244.031 61.9355 cv
243.699 61.9355 243.167 61.9355 242.775 61.6655 cv
242.4 61.4214 242.26 61.0376 242.26 60.7324 cv
242.26 60.3921 242.417 60.0259 242.757 59.7905 cv
243.159 59.5205 243.708 59.5205 244.031 59.5205 cv
cp
f
245.975 54.0444 mo
245.722 54.0444 li
245.722 54.6377 245.661 54.7075 245.234 54.7075 cv
242.129 54.7075 li
242.226 55.937 li
242.479 55.937 li
242.479 55.3438 242.54 55.2739 242.966 55.2739 cv
244.528 55.2739 li
245.269 55.2739 245.888 55.6665 245.888 56.3203 cv
245.888 57.0356 245.478 57.0791 245.016 57.0791 cv
242.129 57.0791 li
242.226 58.3086 li
242.479 58.3086 li
242.479 57.646 242.504 57.646 243.281 57.646 cv
244.588 57.646 li
245.129 57.646 245.443 57.646 245.731 57.3843 cv
245.958 57.1748 246.062 56.8174 246.062 56.3726 cv
246.062 56.2246 246.062 55.9453 245.809 55.6489 cv
245.609 55.396 245.278 55.2568 245.278 55.2568 cv
246.062 55.2568 li
245.975 54.0444 li
cp
f
244.868 50.7749 mo
244.397 50.7749 244.118 51.0625 244.04 51.1411 cv
243.769 51.4551 243.716 51.6904 243.612 52.2661 cv
243.56 52.5273 243.438 53.1641 242.915 53.1641 cv
242.644 53.1641 242.243 52.981 242.243 52.1963 cv
242.243 51.2456 243.054 51.1934 243.325 51.1763 cv
243.394 51.1675 243.394 51.1064 243.394 51.0801 cv
243.394 50.9844 243.35 50.9844 243.194 50.9844 cv
242.287 50.9844 li
242.129 50.9844 242.086 50.9844 242.086 51.0713 cv
242.086 51.1411 242.278 51.3066 242.357 51.3677 cv
242.138 51.6382 242.086 51.9087 242.086 52.1875 cv
242.086 53.2427 242.662 53.5562 243.141 53.5562 cv
243.237 53.5562 243.542 53.5562 243.847 53.2251 cv
244.091 52.9458 244.153 52.6494 244.231 52.2485 cv
244.327 51.769 244.353 51.6558 244.528 51.4375 cv
244.659 51.2808 244.85 51.1675 245.094 51.1675 cv
245.469 51.1675 245.888 51.3853 245.888 52.1528 cv
245.888 52.728 245.556 53.1465 244.684 53.3384 cv
244.528 53.3735 244.51 53.3818 244.51 53.3818 cv
244.475 53.3994 244.475 53.4341 244.475 53.4604 cv
244.475 53.5562 244.519 53.5562 244.675 53.5562 cv
245.862 53.5562 li
246.019 53.5562 246.062 53.5562 246.062 53.4692 cv
246.062 53.4258 246.053 53.417 245.871 53.2686 cv
245.809 53.2251 245.792 53.2251 245.653 53.0942 cv
246.062 52.7632 246.062 52.292 246.062 52.144 cv
246.062 51.2285 245.556 50.7749 244.868 50.7749 cv
cp
f
244.937 46.9297 mo
244.885 46.9297 244.85 46.9731 244.85 47.0259 cv
244.85 47.0952 244.894 47.1128 244.937 47.1304 cv
245.669 47.3569 245.871 47.9409 245.871 48.3071 cv
245.871 48.6733 245.626 49.5542 244.118 49.5542 cv
243.952 49.5542 li
243.952 47.1392 li
243.952 46.9473 243.952 46.9297 243.787 46.9297 cv
242.906 46.9297 242.086 47.4004 242.086 48.4556 cv
242.086 49.4497 242.984 50.2168 244.066 50.2168 cv
245.216 50.2168 246.062 49.3276 246.062 48.3599 cv
246.062 47.3223 245.121 46.9297 244.937 46.9297 cv
cp
243.787 47.4702 mo
243.787 49.5454 li
242.417 49.4756 242.26 48.7085 242.26 48.4644 cv
242.26 47.5313 243.49 47.479 243.787 47.4702 cv
cp
f
281.699 22.8125 mo
337.633 45.3647 li
332.742 57.4941 li
276.808 34.9424 li
281.699 22.8125 li
cp
0 0 0 0 cmyk
f
286.968 36.2969 mo
287.063 36.0625 li
286.538 35.8506 286.392 35.792 286.413 35.4146 cv
286.691 29.6416 li
286.698 29.5317 286.701 29.4766 286.587 29.4307 cv
286.474 29.3853 286.449 29.4028 286.356 29.5161 cv
282.716 33.6704 li
282.469 33.9561 282.158 34.0752 281.637 33.8745 cv
281.542 34.1089 li
282.326 34.4058 li
282.551 34.4971 282.94 34.6538 283.143 34.7549 cv
283.238 34.52 li
282.902 34.375 282.768 34.124 282.859 33.8975 cv
282.878 33.8491 282.885 33.8325 282.968 33.7437 cv
283.774 32.8184 li
285.812 33.6401 li
285.745 35.0889 li
285.746 35.2021 285.74 35.2183 285.73 35.2427 cv
285.631 35.4854 285.219 35.3188 285.017 35.2378 cv
284.922 35.4722 li
285.115 35.5308 285.754 35.7886 285.98 35.8799 cv
286.207 35.9712 286.789 36.2056 286.968 36.2969 cv
cp
285.826 33.373 mo
283.95 32.6167 li
285.973 30.3018 li
285.826 33.373 li
cp
0 0 0 1 cmyk
f
291.441 38.1001 mo
291.535 37.8657 li
291.13 37.7026 290.928 37.6211 291.018 37.375 cv
291.619 35.8872 li
291.921 35.1353 292.013 34.9087 291.931 34.5747 cv
291.824 34.165 291.463 33.9634 291.188 33.8525 cv
290.404 33.5361 289.826 34.0835 289.696 34.2192 cv
289.688 34.2158 li
290.024 33.3828 li
288.888 33.0283 li
288.793 33.2627 li
289.343 33.4849 289.385 33.5674 289.226 33.9634 cv
288.342 36.1548 li
288.195 36.519 288.106 36.4829 287.581 36.271 cv
287.486 36.5059 li
287.703 36.5742 288.139 36.7505 288.366 36.8418 cv
288.6 36.936 289.038 37.1123 289.241 37.2134 cv
289.335 36.9785 li
288.818 36.77 288.721 36.731 288.868 36.3672 cv
289.474 34.8628 li
289.816 34.0137 290.557 33.7856 291.058 33.9878 cv
291.56 34.1899 291.506 34.6484 291.308 35.1416 cv
290.542 37.042 li
290.395 37.4058 290.306 37.3701 289.78 37.1582 cv
289.686 37.3926 li
289.903 37.4614 290.339 37.6372 290.566 37.7285 cv
290.8 37.8232 291.237 37.999 291.441 38.1001 cv
cp
f
293.576 38.9609 mo
293.669 38.7266 li
293.144 38.5142 293.128 38.4609 293.255 38.1455 cv
294.456 35.1694 li
293.32 34.8149 li
293.225 35.0498 li
293.743 35.2583 293.796 35.3364 293.636 35.7324 cv
292.75 37.9321 li
292.602 38.2959 292.513 38.2603 291.988 38.0483 cv
291.893 38.2827 li
292.126 38.3579 292.514 38.5142 292.749 38.6089 cv
292.838 38.645 293.307 38.834 293.576 38.9609 cv
cp
295.092 33.894 mo
295.19 33.6514 295.058 33.4194 294.864 33.3413 cv
294.637 33.25 294.396 33.3594 294.307 33.5776 cv
294.223 33.7881 294.329 34.0376 294.54 34.1226 cv
294.782 34.2202 295.013 34.0879 295.092 33.894 cv
cp
f
300.239 41.6475 mo
300.333 41.4131 li
299.929 41.25 299.727 41.1685 299.817 40.9229 cv
300.417 39.4346 li
300.72 38.6826 300.811 38.4561 300.73 38.1226 cv
300.623 37.7124 300.261 37.5107 299.987 37.3999 cv
299.316 37.1294 298.78 37.4775 298.524 37.7407 cv
298.662 37.0723 298.296 36.7183 297.787 36.5132 cv
297.002 36.1968 296.424 36.7441 296.294 36.8799 cv
296.287 36.8765 li
296.623 36.0435 li
295.487 35.689 li
295.392 35.9233 li
295.942 36.145 295.984 36.228 295.825 36.624 cv
294.941 38.8159 li
294.794 39.1797 294.705 39.1436 294.179 38.9316 cv
294.084 39.1665 li
294.301 39.2349 294.739 39.4111 294.964 39.5024 cv
295.2 39.5967 295.636 39.7729 295.839 39.874 cv
295.934 39.6392 li
295.417 39.4307 295.32 39.3916 295.466 39.0278 cv
296.073 37.5234 li
296.416 36.6743 297.156 36.4468 297.657 36.6489 cv
298.159 36.8511 298.105 37.3091 297.907 37.8022 cv
297.14 39.7026 li
296.994 40.0664 296.905 40.0308 296.379 39.8188 cv
296.285 40.0532 li
296.501 40.1216 296.938 40.2979 297.165 40.3892 cv
297.399 40.4839 297.835 40.6597 298.04 40.7607 cv
298.134 40.5264 li
297.617 40.3174 297.519 40.2783 297.666 39.9146 cv
298.273 38.4106 li
298.615 37.561 299.355 37.3335 299.857 37.5356 cv
300.358 37.7378 300.305 38.1958 300.106 38.689 cv
299.34 40.5894 li
299.193 40.9536 299.104 40.9175 298.579 40.7056 cv
298.484 40.9399 li
298.701 41.0088 299.137 41.1846 299.364 41.2759 cv
299.598 41.3706 300.035 41.5464 300.239 41.6475 cv
cp
f
304.548 42.5483 mo
304.731 42.0957 li
304.553 42.0239 li
304.371 42.4766 li
304.184 42.9375 303.964 42.9243 303.851 42.8784 cv
303.543 42.7544 303.716 42.3257 303.765 42.2046 cv
304.336 40.7896 li
304.512 40.353 304.642 40.0293 304.414 39.5703 cv
304.235 39.1978 303.917 38.9375 303.561 38.7939 cv
302.898 38.5269 302.212 38.7583 302 39.2837 cv
301.906 39.5181 302.014 39.6934 302.2 39.7681 cv
302.394 39.8467 302.587 39.7646 302.666 39.5703 cv
302.799 39.2388 302.507 39.1216 302.386 39.0728 cv
302.709 38.8081 303.156 38.8188 303.48 38.9492 cv
303.852 39.0991 304.205 39.5991 303.912 40.3267 cv
303.781 40.6504 li
302.146 40.019 301.257 40.4507 301.006 41.0732 cv
300.749 41.7124 301.412 42.2144 301.905 42.4131 cv
302.438 42.6284 302.932 42.4517 303.243 42.1255 cv
303.122 42.5186 303.255 42.9106 303.603 43.0508 cv
303.773 43.1196 304.288 43.1953 304.548 42.5483 cv
cp
303.4 41.5962 mo
303.08 42.3892 302.382 42.418 302.035 42.2778 cv
301.638 42.1177 301.424 41.6929 301.581 41.3047 cv
302.011 40.2373 303.424 40.6948 303.722 40.7959 cv
303.4 41.5962 li
cp
f
306.393 44.1289 mo
306.488 43.8945 li
305.97 43.6855 305.873 43.6465 306.019 43.2827 cv
308.042 38.269 li
306.881 37.9048 li
306.787 38.1392 li
307.336 38.3608 307.378 38.4438 307.218 38.8398 cv
305.51 43.0771 li
305.364 43.4409 305.275 43.4053 304.749 43.1934 cv
304.654 43.4277 li
304.887 43.5029 305.284 43.6626 305.526 43.7607 cv
305.769 43.8584 306.173 44.0215 306.393 44.1289 cv
cp
f
314.819 47.5264 mo
314.914 47.292 li
314.752 47.2266 li
314.169 46.9922 314.178 46.9014 314.298 46.6021 cv
316.03 42.3081 li
316.151 42.0088 316.208 41.938 316.79 42.1724 cv
316.952 42.2378 li
317.046 42.0034 li
316.845 41.9409 316.182 41.6738 315.948 41.5791 cv
315.706 41.4814 315.042 41.2139 314.855 41.1196 cv
314.76 41.354 li
314.921 41.4194 li
315.504 41.6543 315.496 41.7446 315.375 42.0439 cv
314.602 43.9604 li
312.184 42.9858 li
312.958 41.0688 li
313.078 40.77 313.134 40.6987 313.717 40.9336 cv
313.878 40.9985 li
313.973 40.7642 li
313.773 40.7021 313.11 40.4346 312.875 40.3403 cv
312.632 40.2422 311.969 39.9751 311.782 39.8804 cv
311.687 40.1152 li
311.849 40.1802 li
312.431 40.415 312.423 40.5059 312.302 40.8052 cv
310.571 45.0991 li
310.451 45.3979 310.393 45.4692 309.811 45.2344 cv
309.649 45.1694 li
309.555 45.4038 li
309.755 45.4658 310.418 45.7334 310.653 45.8276 cv
310.896 45.9258 311.559 46.1929 311.747 46.2876 cv
311.841 46.0527 li
311.679 45.9878 li
311.097 45.7529 311.105 45.6621 311.226 45.3633 cv
312.09 43.2202 li
314.507 44.1948 li
313.644 46.3379 li
313.523 46.6372 313.466 46.7085 312.884 46.4736 cv
312.722 46.4082 li
312.627 46.6431 li
312.829 46.7051 313.492 46.9722 313.726 47.0669 cv
313.968 47.1646 314.631 47.4321 314.819 47.5264 cv
cp
f
319.569 47.4292 mo
319.989 46.3862 319.533 45.2339 318.594 44.8555 cv
317.624 44.4644 316.51 45.0117 316.099 46.0308 cv
315.682 47.0659 316.177 48.168 317.099 48.54 cv
318.053 48.9248 319.158 48.4482 319.569 47.4292 cv
cp
318.983 47.1089 mo
318.869 47.3921 318.667 47.8931 318.303 48.1885 cv
317.92 48.4854 317.487 48.4893 317.179 48.3652 cv
316.88 48.2446 316.568 47.9683 316.494 47.4775 cv
316.422 47.0259 316.606 46.5454 316.744 46.2056 cv
316.867 45.8984 317.066 45.4053 317.463 45.1421 cv
317.83 44.8857 318.238 44.8999 318.521 45.0142 cv
318.836 45.1411 319.118 45.4238 319.208 45.8271 cv
319.309 46.3003 319.104 46.8096 318.983 47.1089 cv
cp
f
323.334 50.96 mo
323.429 50.7251 li
322.879 50.5034 322.837 50.4209 322.998 50.0249 cv
324.158 47.146 li
322.982 46.7749 li
322.887 47.0093 li
323.437 47.2314 323.479 47.314 323.319 47.7104 cv
322.736 49.1577 li
322.458 49.8452 321.863 50.2725 321.256 50.0278 cv
320.593 49.7607 320.707 49.3643 320.879 48.9355 cv
321.958 46.2588 li
320.783 45.8882 li
320.688 46.1226 li
321.302 46.3706 321.292 46.3945 321.002 47.1143 cv
320.513 48.3276 li
320.311 48.8286 320.194 49.1201 320.329 49.4849 cv
320.438 49.7729 320.73 50.0039 321.143 50.1704 cv
321.281 50.2256 321.539 50.3301 321.909 50.2065 cv
322.218 50.1147 322.471 49.8599 322.471 49.8599 cv
322.178 50.5874 li
323.334 50.96 li
cp
f
326.781 51.1558 mo
326.958 50.7188 326.794 50.3525 326.751 50.2505 cv
326.561 49.8823 326.363 49.7456 325.868 49.4336 cv
325.645 49.2871 325.1 48.936 325.295 48.4507 cv
325.397 48.2002 325.716 47.8965 326.445 48.1899 cv
327.326 48.5454 327.071 49.3169 326.986 49.5742 cv
326.968 49.6421 327.025 49.665 327.049 49.6748 cv
327.138 49.7104 327.155 49.6704 327.213 49.5249 cv
327.552 48.6836 li
327.611 48.5381 327.627 48.4976 327.546 48.4648 cv
327.482 48.439 327.256 48.5552 327.17 48.605 cv
327.001 48.3018 326.77 48.1519 326.511 48.0479 cv
325.533 47.6533 325.027 48.0693 324.847 48.5142 cv
324.811 48.603 324.697 48.8862 324.89 49.2935 cv
325.058 49.624 325.31 49.7915 325.653 50.0142 cv
326.061 50.2827 326.157 50.3491 326.293 50.5923 cv
326.39 50.7725 326.423 50.9927 326.333 51.2192 cv
326.192 51.5669 325.833 51.8735 325.122 51.5864 cv
324.588 51.3716 324.324 50.9077 324.472 50.0269 cv
324.499 49.8687 324.497 49.8491 324.497 49.8491 cv
324.494 49.8101 324.461 49.7974 324.437 49.7876 cv
324.348 49.7515 324.332 49.792 324.273 49.9375 cv
323.83 51.0376 li
323.771 51.1831 323.754 51.2231 323.835 51.2559 cv
323.876 51.272 323.887 51.2676 324.093 51.1528 cv
324.157 51.1128 324.164 51.0967 324.336 51.0161 cv
324.491 51.52 324.927 51.6963 325.065 51.7515 cv
325.914 52.0938 326.524 51.7944 326.781 51.1558 cv
cp
f
330.322 52.6582 mo
330.341 52.6099 330.314 52.561 330.265 52.5415 cv
330.201 52.5151 330.167 52.5493 330.135 52.583 cv
329.651 53.1777 329.035 53.145 328.695 53.0083 cv
328.355 52.8716 327.629 52.3154 328.194 50.9165 cv
328.255 50.7632 li
330.496 51.666 li
330.673 51.7378 330.69 51.7446 330.751 51.5908 cv
331.082 50.7739 330.951 49.8379 329.972 49.4434 cv
329.05 49.0718 328.003 49.6177 327.599 50.6201 cv
327.168 51.688 327.677 52.8047 328.575 53.1665 cv
329.537 53.5547 330.252 52.8281 330.322 52.6582 cv
cp
330.25 51.3887 mo
328.326 50.6128 li
328.902 49.3691 329.672 49.5103 329.899 49.6016 cv
330.764 49.9507 330.353 51.1104 330.25 51.3887 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (012x012.eps)%%CreationDate: 27/05/15 12:33 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6GCM)(cR=+S!8i>AdK@rk3h`@9Q/31;Y`c(!+@,Ylm.ZS4frsHlp'`ap;"cpHQF243JAu*BOt983AS3cfNM$(58,[;2n_^1M%Wi0Xf1t.1pV(G\?AMW!^-e3CE9\-Ug;D>/ONWu?)XJon\]V9!Y_m/.5@cQS5X'4s3[i-pMG.Z,"2-TCDFQ)[\4ag.PK-urVFgY7c%r$T0\X1WhW1AMs^Z2@J"Q5cs08gb'J.0rn\a3C6;g?[_Df5n@-Ph'+V_>5CUo"5ES6+-KYJp6K5[@c(90iV>)h>)ZCD1#_UP4,=!%:'Wf]R&GOGiS]#X7M)6Z^R<i?lJ"h@e#ILR)YNu1emti/r2R+fiH5>'!t(lA=/4*eWaF"SV,JZsdM8D\TLqDeG?,>;8P3\44A`/e%l!OgeG>++$qU\715>18.C?;kWU(kbZ3i=)""'nq:6W*%pI<+mWX1$=>+!&-l8!$A8FO597et=bdrGo%2`d.V"Leh44XO;EqG(Ah:%g(3n*.IHU?J-Gh8^T/qY4`'&T=fn;R/dRc$Q=6[3&0@L:X#Ohk?aD/Sd].20%BAEOer-qD*P?D3=E=np3bj)UIFOURoV,qq*cAAL%?3L^R/a^mqJq)@6rce2<'N+(8Vc0]R`'L7-#GN8.aW?u##0u'kbj(H(+IK/hBu`b+JBT@]6G6Lc<0ksuBdgcYs/%aTm\")>n5%[+%e$AJlFn)e7i)!_"^UfG$FWI+>3dk0aj4j2XbJI/CKtf/H93E$rZE/)7fBKkK`c\PFl_:WA?S(<M=:2h%-^H4rYZ.<HD\`]TUeni^%jYB"OQRrU&/sl*R\P1nS(fPf25.!cT']7utFV$5(`)>58r5;Lc-f.eu%"!Z"=9a,*T@e'W$2Q:J#s[qrp'<mf-;#Xh1\M)=Z/><m%U"C`/P>[UQO/9'fpk`S)AV>(&+Qep.P_t\tpdsA=4f?q2gaR-JFi9gALmOe7YS?dA5HuQX6/$,NN,f@,@O^Xck:i_>I2Dd9TD/e@%8,84<'Q\rc-^MXKi@!_2PnH\jg-2sdAH4IJo##`BnY9((;Nu'h0!sdUHc2H67GFXrF+2LLr#_6@hJpZUhVm4rfCUNc%mR<5Q#H"2%V$VPd5HtXj/sYCYc,U<j*,U7!2j[r*.pUd>F"/V<(APDt4Jd.tfMSZtFt)5YF3YBS2i9\_iiU\`l21*5rC8T?,Ek_UjZ0.HXeAGf%;>Cs%S\C<1nBi^T(8m@XI4F&XmY1StgHpYi8/GOn<#0jHN&W-RD*\Vk/'"!c9C&EmWiADbiErT"<VB5;kS*KQrkk-3s,"M_?RfQS%'I*P)J$r($MnenVj3Z\D_qT@e^O2V:&V'&[bt\%=r2'EkR:;:F`*`AE<2..H?i!Rgr_\*(]YdOf=8JEdU48kdRSbc_EmXm@jW1sH%(\9-SYJL5KqsNO9Em[qPF8ANQV.#f:Dj6/\WEc=XY[UK<Pd321W)50/#(*sUCVmRP'Fe)!]YUh&2ba-=iE1l7iVNZd;F*ngQpkF[%&UYu$=nE$&%j@qr+P8T"0Cp50KYEM>H*"srGeuOf;F2tA^&cbhr!QWkm&rnEn_P[=4ia!sKOPfkF2Z,GjSfJ.WZG3"d^E4P7@`:Q%&!(a.pIb=/i'D%):s13a"]AdVG8\ChIFFtdVFQ]AVDHA\jSC=f3b"oUVlW#F%CE!ong.5pI"UuNk;Rfa1!p:Lb@OiiIV\9VlPlN4%oU\AteZbR`=s0s3S2R`=jE]FB"o)kJpqL*$IM6IbS4fS/;hLMYd8*AUR4n2LdNYFkXb6ZB;818Z`B#lAekW3A\thP;QK[Itf4V8j%Jo)+sc2+86Ni5DC*.'#W7Tq2IaakfL*MHSune7ullY#Z)U6gl`6[2o3[S-p/:,R[INEYC]dBUeR:W=6&O]$QpPWellZA>&'jFEPk%j'+6$.[0l$HGj`RM=$:BJk7,HE_[ni@!N8E:UfgPG^GsU>]ULj<q9oq0d[O:\jF"XH&;p1NCZp';U*^YHiQV28>@aj*kRTjlOjF1%<6f'#(,R.s*-b[:E%)#S/1N5[[-m'#Q$N:FlD1;?,\s>'8dm(OBLu>KEP>gb[!eUXlA[?Z%[XQ>n7VU$W&]H]W[dk:b%RY?$'"XO%kWoZg7ldSrS2WGuTl#du6X'#i:>7.+^m'(F(8H].)Ui*Ns--`X!ciWm.rl(+R&^X5EnNs"c+%<m%d>GbkGXTC#"%W&3,1T+fUg$e%;5A"89n=-[Bp%PXZDX,56DC/#1.+r7X.K<CftcbAMO9+h<2qsDks$Z>FOhs>9u3Yp,r80MV=O)I\%)F!jJp;Yk'BhO]:MdF%8Ra%%C_\j4TF;F4WI2E'heXX#@QlS-^\RmL7PusO3eGhNo6*\r3#hU^W^QR5(u+]TMF$V>WbI=(Zaj*JURp0H3#b[tdah5I=IBdD@B<67%eQlXSYYdaQ[=k+tR]7Y3(,Hrr(]@l*[4!FRc_5I3ir.hWM`d:B^V-&]D[kDha,n?BA@G*NW5n-sH'Y<ai:[68)k/F-ZDK?nNEhV"%U(V2J)=mEp?"S70PoO[)b#XDX^,JrX7*tq;3>DH-o'd?(c,`h_@r`nnPZ(H'P_A0OQZK;Wkkc&aA!:\PY*Z)`8De%X..JATXM(>o%7[u;)9VK-jgJ#2heeBnqQ8V`,`_DdlV'jA;Z.HK*Wnt?gpUe<%b^6Y@D$Of[$V`;:EMTOMn\-_0V$MLP3;gDQl$K8bl"$tCT7p!,%BL[4cm$U23cNc^29>#nR/PXeYSg9Z5?c'&\j+(%EACrEh9I!bL8qBSa_:nKC'Q9cT8YAsKFX\n6CP'#I@=cQ:38eUE/K)bWTb_d-%ieAF?/]6t-JCU?Nq9P;k.e.toEgfLDC$q^ESS"'D2;U:@Old;&2Wg0>j^l_7DTFUCQZjW*-%V?:"#5uFWf`Ta_&kjr14$:;:2ZK7%_<^$li-l"&pP;e)-aHf!X9C(nJiZS/A0.(JSL.R@-M>&E>Vf6G$OmUfDMe*Qi_s!E-Y:!%O^N&_Cb4-UUEPm)DLE\['Zn'E:#Ssk%E:*tQ]%]/1MC,[1J_uW5:1btbnXrns)G%;R$qX5-Wc@DMAo*O?L?+CmC#X:LPr1TYii#m?43]HJCXNV:g$Q/M]PThNiD!`tpag1[%/B'=[rM&#;[jZ&5Y3U?D%H^Bc`7gEW1dAB:/407\o)c1nM6rL`VX\rDgd`OdnE+bZZWo!D/1A!FI$9_t#:'V]K[mss;c2ffKc:(p%\bD]o`9JPp;@_Y@\+b9]R*Un(DC1JJ+\U2qL97G\:.+:*o9a>#HLn$ReDnL,@J2f%G2+0LI?n[kg88_3FL)8aE2JB!18XgtY0t[8%KuOq3U:'gnc#Kd]CV8&-hKSPO[+b=id\SA_qsglkV*F7T4HqlP:RoJcg(-="C,LI/48%Kje4fkLnQ\e\[43h+/:I0gVu"i0:!YMD%picN*dA^_.+3iKkMTW>!X.#mriFVSDs6]c.Z22)[q@]u1BW:u4[FT"`eU!<LrAB"+Bf16=I9`i&/$1XZHSt8AquokG5U0.8J0h/$%g1iQt@,r&#,g\eM!U3I5L+8bgoOb4/Ir0OTe";*-.BI`AV_>QAfLg(jIbO8TZUU_P<U5.qe]tr5MWOjYD&e`Ul:5thT^J+JJRD.H%<p*iA$C$Qg!?V60CG/Y%[?%dtV>:,\'%T=hF0?ndX<5:Tqs1diqe1HcH'0;jPud).V,fbX]A9H8`RT^mq#+'>"[OEf9jl`NC>rQ^%o]^_!=XA36hTM_UWE5eh#T?grZ&=P1b1EIcE9fmSmom,ib3d^us/D2(l(unR/SMoA:T\\&S'E$T^8gFO<:9D=WsN'?7?mFA8mrYM%52k6fMJku:9CY.V9)@gkpot36rW).HBiR_HUi5^eoIGHq:/\T7iT`:cUM=^-Q-M\-n<[Mg>nZr*m,W/_<X$;e=<'Q'U3<(M:@2$4%?BjK:eFBEf#d:9N'(/,01>TP<5RIq:.oi:(W*j$krtbc)70-dajU>5)%>N0lO#d1YfSR@,?B?(jf&,PtP0WI1UD[`:9m\2.`1Ghh%eDG^)DkLnb9q4HaTY-`=D8MBC0-%I$m:m#@R^;:/46b2Z8#PqU;>]ST9agR8EViPG<NY?(gd@^u$9UJN<_-5.qWOj+r9:"Q.PQNZ%+9+\fQ55s(kW:T0#M%FeT.fF0MXGcgj/)8Q1>>-J,.&k:)[hTdJoW5ui_D#S4:8T4&=%RR$&1hGjmVhGlf0kYrqN+cf,:RNYIsk\%HK4+n!N<c\=Z0++9fHKG\"K=rT3=[*-).gYkZ=TZ9g@[>8us0eS@^i75D1'jNm18eda3-nkPp"]l;1k#5O)S,_Opj.WVs%&0'g.I%\FXp.4jE(mXU5dV56bKF:?<4dCNp!3_%?CBde]mBNI\S,Ifg>`a)Un38VL_Qk2lQ:p'RRKPmQXiW?@/6f#RAX#8(5aO1OHLYGHCG%k8r,Ws-jmq\4_:0nX\NMc:ldCO"W`b:?-+MU9K<Wp:lq']FWib+:je;9%H.e_tLjQF4c8%,iUeV'L:PA>j6piMcS.G7'3Ni5#TM9%kSAmk9QJ\8hYjK6l;:OU5M.oTrBD_7IHZ94o3b-\,_+_+^]3nTC^+_-5$n4q1&[5pS2Ph"03+/nn?;1W5j!Ef895h'Q^djO(/YUk%EI[`L%85LOQZ_HZYg310j0eL8]0i`m2%A%2Qh?.Xhqb@-lGqY+DeiQ5XfSWTs0cfbm(</fgus92\6o3jTrB!E`t`e?s!:t:m_HSJ%Y(`k>s5?oDkiS?H+YUeVj@KPc*L0[g\P[(SVI)$.MEWsV6ZXHpUp]j$a+g0S>MP+B9N*mF9<.qiqUVZe6M.A16U8&$8,#XHBN(U&%s/XR3ojUCreInN0k.n5-fQ#rHhDqRdc5J'Po\eLgF51GYi!\VFk0]W4[,_'U5S<@io*eb;S.qju%"FF@];&r3(m!5_5MF@cjmRgo%l]XN:*QLe,[VJM!&emq"S35^E9^>@,.5`6<*)/c,E66TmS_gH\103%ToY*4JZ<gT\<PBr"ed9W&i++?'\otF-$+s?=I0bDMn"fP>%SV@rNj>trc75,7PmIq[lbF[]>M4tu'<RSXqpgoYE>T8/m>>:(V1.5bS1TP%$8_JOSGKN.X)Ag\WC9%fB^f.-&/57u=2U^"rV@#M]%-JoHW-kXNWIQFltH8XOHZl5QA7;*9USp:Z#Wc'PuO!`3TK0]HjU%S]Cni?rVK@OiuJDQ:^[PYOpAlR_U[8nf.FY3A/?EROK1g3Da%J%)IEabZTTVtscW\0AoAje==N)iK231ViA?9!)!@iB#,$*ArQdS";Oe,>lI`$-e*s(/s/uf433M-'NV\o&<+0UPi#ba^oV>[d8hD%8SJ]dSg?h_%F_SW"I9ae,h@'H4')2ra.'kRMOpJ7a^p`njtV:ObI/<gPJP,609mIAP&8)ni2CP>G7a"s9)YO`%RZ^"UD:SV:k<%#%WW75gJ9-RE>-J@gmA#QF7T4UtMC)["Mi[Q:>o#Kg<'&S)[g45UIncAhG3Z9]s->lQm2l$+?TG7&2!TH`ED7RVY$-ZrK#:BM'Z[MC%EL+\u:oks#%*;^NLS),6O['uXM4G+-k]);Jld/e=1cdr0)Ne2BM-R3r<:fdl>0k']-\9^.,2i,T<7i0X:F67>StHoKks\NJHG3b*%[DBVX7/4Z1+^4W'VL?$W[PC0BHb)/%/CL%%US:=W8ae8VShH)SC\>*iJ4o&8)]dgGH!3)EU@%KkJ#bG?l8RB77cuqVfM^7Al1d*K%NtX0a,f)WHA-G#-E!bET]lFf@RX@"5W+%IR[T\sJ%n$J7V++a`<^/4tV*q8,4XI9O1!ANT[[h`+Mt\SHgp12VmHZS*>cUn4)o$l8%J(dnqi[4Y@qjB"MoCA1.G%@B>?>[qVeh358q>1!;DrCj,!a2Rq`6K&80TKJgjeJrA]^DZcAp-q1d]-msp7f!k.>i+(g[0uB2;S'+%;6.^2pB@`*j.ULUen_=WV9<ccZhS-(q+A?W&H49CF]T`(g9kE=9agsM?[<Eceo;RoNQYl0*990[gW\6\*4\=c7e?;N7tGie)I=?0%]RU&s^rI7)e6rK'W4rnu(+UieeRh3@E10,5B3<8VYbZ,j(\AU.T`WT:m#PdC'ESNV?VXK?_4pCC>"plg^7'rY;5Fq1#\_g5$ZWF_%^2RJhjW,dYjm(C*MV,<M;<[fX2&>Lc"QItHWjV%_Ib-[7p<Rg,Ad]B"XYj=t)a\sC()'lf$7.V\9l_Ei.SUhp9O,4V4O"#*4,mk3%Z8F=X!hO,5WgBtc:gCju6"pkq"D*!`LX/aA_!tZD`<eJhCIoK=U010I2Ci]"g\d(/8@7JZ,=Wu9N\JDWRMjf;fBR:EZ)-!-Y^ZLa%4MuF-HrZV$D:<"S+`5$LSW=8QnrgXOV`$8(7ae`)q\+=<_D_pXZMp]nR`3WPXjYGmQ*=L%[BNa<lu'Pf/Td/21@:EpHCT#KAX^#n%^SN>P3*'m<^H(^FbJ!Z8A*^6U*MCWg57AD\dU[pVp`>%b2;]@Ts5AOTW,dk5>-O85("QPk08TC^B?A,Zj`>XPd>9Y2TqkN!4TlVB%9"`u3,m]*f2B>a'MFod:R&0)5HY1IfE>?2ggE1A,?Bf7a>?S7U1enUdd!NYP;iE-uT4Gq%"iZkOKYEm(<e#`+HVHa)SM%?Y<c@Y-%0^u[3O/%At6;ZkJcNs0f8>^7E(RF2.Z(rFIe=2DC'biHd@q\_.AZD/9\@VEu/Q?"BO]T-B&u0ZE:`li1]2N4YS'BRKVQgtRg+/M_%AgiQ>ZR2f9-?oh%9"!bbH&b=LQKN^UP[G'ckr!4`.e.l)C=KPu`>g@$kBZ#C3lh?^h=L(!l:^Ps7bBY2,<iu@o'I=8.Uk;nqmUC*%BEE86c\.Jp=iTXebG^V45Rcd\JV+$,OqcOuabdZ&U-us;"G-^Y(f1[M5<kSj7FXPsKg9>:=tS#A-fna?K"?>&5"kCA1?koI8FT],%BQt6*Y4-J9:^aq&<kF6BC5'dmDW;TjHmIrU"!$`d4EX4f1gg2Y.U'E-R&[X:'?"?*?Bt+!l4(#ZR/X%JFZM?_Jto(k0`9f&ch>Cp%Yfa+Xoh'H%`+e>:l2g+0&"lMNcd(Wii>!5!rY-3F),6+,EPS3CEX8!T3$@diKq07)/65UbZ.A_.o?!S2^Ne$Q\bUl3q=XKBNo)['%jk#[`4o",e,7g+5os;qUn[H.'\NOr<=t0GOY1L=agAL5mofb:7Dm,0Qk,(pPRBcRqc]tcg_]*f9iV`j"4oNZdc2T>cN\)5U'uq)T%"&6n>?I+_qc*>.P0;GYW%fj0"Vm1^C[&.b&\msPu?T0Kn:Z[=ZW@P13WNuJ)/Yk/(f%TD1I\D%s]<UP-f:;5nbA=_/@pG7%G;i.a%VL3em?Ho[fW,m6rc<AUCqs,.sN-;AS1<((^*d5O=SOI1-rZuoK]lFZb)I%H6290;n5&4Z7S]q]3g8s'eA)Tht)5eigbI$<202J!>%.YB%:N#ShL"srSIUO>\JYo!/hJ4:+h\GERb71d_p?00YYlMJlQr7]`SPTX^!f64T#)=?V`knsJ*2<AuG\gUXlgqIOZcP@$&;'1*L%C3Xt%`Yd<nk28+^ORbqWo`!VqMFLO45dTT+rNd6hkYpgH]5o%@B]7W*W@VdmN<8k/cD;H0f58FMj?LO$>oB8L:JWm;@?%^ET!FP9%c]]`#Uf#8NWEH(!XKP#KC/%A_bJ2m&7ZH^qV0o`I/$.,tVEJ7'/nL&,%Sjn;WbbBdp*1NIhVC+#U<%]<\pMhJZ-c^9j=ULp?g8N8%1CYuUN@q@d9s1`jO/JlX4>kFNXVtmf#1mof1lA&K\UEAH^N_(\5MP#Xd\D*eqN_M+oO7:V0X=P;p\T'$1n)PiRK]k2&8a)F\&0.J%[NCI/p\ffM7bcC-f4nE_W=1V!^<]Pm<k#sBMHmhqb-#b%g?<eWc(7&ndZ20_<Qb(1A^W!ljBu>sM9KW2TFfXe7G1jh\d34r9?Bt2%BC+qLUJ-`V3YMneXKU661P%iuIV>h>d7-cQT4MB)2_3%b]r5D8F'XcC<uY\GVD?N"h$j""s7W<&dASp2J%h3jU)GU5#BTWWTM]BV%2S8Ro[.1&:GS8`ol122&g#uc8<*(7^]j4T4+(rWfQ-d85D-%6dDe<WK)nhWA^I:&,qYlCe?dU:1_OB:Y0(t_aiJm9kRIg!hb%c0r%c/%p27P>gl`]I_f&+/\FEk/nc$ubcGXn;DXli')TdJK]bSNrsG("V`DC\+qRdHI-rgp_'WiJeoXBmq)5NZQp<j3Ak4jN,'D18j_R%&WL+h/#A<1h9\W^_o;/NNVg[-1qN<R)MM<fBVh=kqiNc4XNq(Tc0W](AWAUI9s;fXqg5oX4O#J>Z-e9.RHF%cG:GDFmQR4.Z`C4$%.Vq&@<`u2gp%^jKa'bX6V2]A!X#kc!\Bnu_YDltc=je_j7Fk'mMnH6I:8$#1jm@&G2S-'Z/c$ACh\Va$i=fp)T3Nl4q&>kmc!Pb!%A$\e3YH<2[_<#lb/?"'C5>.KIdA:4'!-uU(eYb2a]i?SD<ku:#\'Lrn)GB(8i9Bnfp$3gekr[U*5@I?Ujp0F@S;MP1GVD!^aKVRl%Wcm="jf"4[n+NXmHs2"A^Ii&]TA.CJ96ZLo*Gt6*.Ji:Uj^D=T%8b9;aD4^509L2Ace$dVkbl`s^R)j0&rKg*8)l8KgC\?cgJciW%kAC(fp[kp6W;CuAA,-X^WfA_9T0D_8eiC]9SmN2p\Wn''oJ6$.)iK/k='SoD:V/%KP^0J\,N&LL3Gr_)55i.@2LgEDAJG%</?_3)%]a`fr[;8;rh:7IlX2q1lp#jg&BSoND:$p`\76W<b&"]ha:Ns5>EAa1oq(Z`,Ft)EfF'C)qcLF(Obq'*kcCb&MYHt-\lq24rDP'(/%c/lj7P;,-X\^&IYYc$eG)b9HtE6TZSYcp)g5T=>3[NM(rfek9ERPCt5esSqP[kP8#lX#5,qr\APZ3VtA/JLtfpi-V?cCI@=S2l4$%_m&ha-_"@Z[`5`>e`0(V)lOX"L00qlEJX(4;.g,=1MJ]-%\3AP\<0iWW0>'RJJNa=GjS5d5$":g6+;i?d+qjs.;QKAq%`;a=%&h7%`5Hr-Ft:o9U04"(D^$-S.Hlg2fr.gJI<Z[]-lXg!@D7Ef'cVRd)`:A<V+.#nbu:Uhf;Y_Ud:dmd]m:mIqg*e.CYt=_\%L+jR]k,l%lc;PH]W54<UWaW(^4Y$=4[<EI*?HCC]tTQql$0aUpu[!S?]"4_fdQ\,n)98/N+KmF-,(41G(2Q9^r.FRC_Z9!1ETDn/oR>/A)%<!%X)R\,'jm,iHhdE:pFKrOHp<juNarS4;:9i)El[gk-M7*d5;,I$`5$eiq=7%&5lI%!>"#n$=\^oC:)5MF4slR2`5c&&k4O\DqBTAN%6sXTRXu*!M&QZ-uDGU6T339Yp[ma+tPnLO,F,s*`@',Z%*t&;_ec7FtGln*ekh9d8(@ai9Lsk&%]iU+0n)M@T=g4">O]T2OX_c,8%IG.ui.%_U!cREtuIc`V4W6HCieGURTnruPZ!9KJO1Qrt(.$Bq1;#59X_GEj9(fHDZdic4,$ek6aZ6LPOJNtM)\p"+[\L31S:3-8?%W#H0a;[W40@fU!FqF<_qo'[:*fA7L;nG5'[ffq<@cQi7@Sp3"#,6&P^$11;8<Y\dSh3Fs\Rt&So.SCuPbDY5i5I=s<h0m>m4dDQ.%?lIi03-+q,+,Hb1hRL0"'$IJ)AqfMYo02+(;"Cqn+-[_@]:G6]5cB`ji]bb\,0D9bFq5m[]FidIPSWHfUE,EfG"_5qU46.bC--fB%P#u%(f<,4Ndc3e]?.7CYc48h?NI9F5RmOb`,#B`6-g=Y(3'5*hh^.V8d`P!gkRO::GU;>,%77gaH((9*oWF&`Cg(MPQ-&:X?4n)@%(2S[:7YrBam_(?ib%8VWA.fF\Vm./=b)=._X3<frk.7Jg8i^_;ObdJ]j/t.dob5Nj$$G33?,2M*eebdKcm9O%).uQgOUU@<`"-7R%#\&#$7Km_Y$>;`9ZD1bJ;A*TgQd/V[?>EckmBB?;,fB3_V:mrUF]i--/=Gs=am3!g*1+f9.\C[JrcHkV#!o'(kfoAVrdm"KgPMJg%K)CVfmM8]2gMan4-Dn`4e*E<,:C!eo'GXn.n\u^%=l53(l0*e/'7l;d]:_\`Rrf_;'(O;=%+tJ`L./c"n)Ib<hOpYA"(*Sc#If`.%L(OW(7`NSGl_BUohfM3XfFX<Ra#c$S;65OYf,qsQ>9fo1XO.6F=OX_k_/=BUY+;tn&s?n4I]VSsIU'^Q#X,VAofe\kYmDM;Sb;N8%NQTMHn&Y]m1:?pRk,$V`&F-?tHi$C6'8B42UMX=u:CTmd[C/"G8*XVn;hUWpgV&k=%n*W:5UEt!(QCtE(.`#"d_p'.p4ip]0"-*;%qg`<=+#.QFD.Df+2BXKd(CTgDl(Y$\EhA.+[JTZ=<XNKW[iL_.;J_"3fDs`Bcp^%#"HrsG,isTpKC)Y.o5]U'*e!h$d3q`]o(NeJ%JGW*=8"<#2Z$6GVduOP9p<Vpj6P$*l-[IboI?m4`r">+F-sQ\s%PA#n-Knede!#F'N`s#4D^CHWFSk.CireOqf1/<3XoTR^]1>>k%O<GYo$q-8,`:=FYIFA)<q1n`_E/991Btie/7"b]=G'qqE_QF0dMDYc+5)GhfY?epA*Z6-k"_FI?2EaacW93!V>n%$%rSb9U`k&bY%j.DW[s'455^d1d$3V_/0m#WL7]3Vc.!-+X7?!J5\%ZhuI(@+PZ?Eq4p.KFr^gpTW9=:(oNW<-G&_/Dqar6YCPZ7uf/O<g4GgQ^P.%VKC=48O0na?^Z.T`&,QqQ;J<h^4'rqpQgUVdi]YaHbkPXTWZO/FtJtNW0R(f*9BBF>Y&mV00&P4e=eVsPSY5'McBcCk8CUU"lS,=%bm<nX%+>_tb5uOnM(VhlPM*7O=>_]!hS<FuCc:5A%6EnaJ5%pn`1)+$iOurd%5'pV2VSgZ*%Dn-]G7L4*d[eMA/mE4(+B<JlJJ/X%q%c!T-'`^QMf9p:mZ%>6#oS;&[875hVOer3.RYlHn+T!:798PX+,mQZ'!5,@3l/[lhqfoG/Zt3\LTQF\N-c;\f%'btRo$j4/(:eP%Y44rDnkXB<j"M(`N*,5&eS+?rfe/98rgZdWR(JPs1a(#^G7VF[[cXa<LXBdd#Wu'E16$H01tplR'#pc3C:)Wu%t#=I7O-^_LW0P#%-XNREP1MMfg+0-MAj'g9F2hG)ab>`p5JmOD1g*>7(58Q\_f.,[D=li"&AdDkMN&k)^Ap@bSh"%K:S`Zj1.,h>ggi"P3'W;PN/<fN%aB7]p@Vf_YT&XrV*kh99ctU/((snWCo*+q*f[_m8;SZI`L:nR(m'!#5/J*J:U3<PuHFdDI6*OL\\VXVNNA\h1Q,Np4_Y0&0c%aT[%q;?&pYf6C"P=e"X<lRp%[g;WfnQfF\`kJ?Nq<,Uc)+u_(?7'fs;jfTW\bkgP^@0Ko^pR-Rpt65EM4Y0>c!mK?K_BiL/4SnBg:kU2%_WF22hsYJA]_d^.L0\jDNEjHJL6(.@`<bdB'-QilE].0k8[o:(Cr6PI4kZ\*fSX*o9ZdWF5TW9o@:S'\,:=Sh=++5_PV8/oq^U"W%m]!W4`=`XMhTdEd1)i-oUNWV*fJPq?Md/#okT/n680sLVnA44YQ>i0o+hQAa0bq"A./2i!Bq&2-5LFgJPO)QGit]67J0&&>_i*kH%);T17XK;0]9p2n'X=BL_-^XT$7j,a(XIUc2*47]_kN-1d9:o6"kp'QUDSGd86m@l&^m]M?)dhjF(%^+IGu,%E/A/5`o&\SD@uL"e%O7X!K`Ou2#R<,4#3HQ<(6SmrI.01[7To76i94^SV6eBke08#:"bMdO+i\TdP>At9:FEFTQA^E0X@d"fCp^B3L/N@h^?"g!>#$k?>%i#k%%nJQHHm#GLqki+D^7./fK3HXd/FK!5LO[Bpa;?$O@iTld-kKn?IAb("T&g<+S"?N,,p[XtgT.N)7#[</Cm,CA^#,Sj.;^l;s%-H_]*[pq?[7>I7^.uD6<rS*N2;:b2Q;9\]\YJPg3$A=eX\$o9cV0]&u/^O4q2IrH5lLR\s.Mu=K__f"jeVhhr;qO:8T`:0O%[Iq.%lCYH_d[faeO'G*c]f/Qo^rj_@6t[q@MHn+D'q$o!X6?*07qA^1^m9TLWr%hQ&PmeJPB8TOr)Sp#TQ)[6RilNPl@1<T8?V1Lil'3c%DBV(b#>97+B.HM`:?"T]Qr''7T9bD?q>2:.oMuOF%7ql8NCo<N=p]VGVLKDuPM3]^o;mB7P4N3F\PhkQm1!^kZQ?]/P"-5`8i!N-%*sAn[ir`qIqbb'j&1_?E4$he`LCO'<]_:SH"(;geqg:fr0_?X(.'osU*`sNm/CN`#+HPuhf8S3L*oD$drl]sJBGI),2BK105/D4Q%5*XnOU/9R*Ei]m"2"fK'ho@@$f.DIT1W18,beKI"?q/k9I8ne@a!d'kHBV@[.n(cp0E8%#<n>IA8DZoM?6''cimU<mUfagq&:./(%O?KpqFhR"rlEhS"4d4B]jgb[7oh@Eu6g+7>CcUr0MB5cFNq^?J8UF;(j!ee\9Dc`<8*90OD>OFI@;"D@c<b#r^!oDN"T])([N0iW%MTk<K''4^*,J?,0W$M%\U;fBo\0VS>7+!g7Ko>LPUWLn62)]8F-H,&%%eUh)^1]dU<rOCcVXR/"a/[eVa3BRgoEil-:6Kt"+2t.u%q6Z0+k&=Et>ItP/TD)oXm9j9j1ueQ%"@dd+4dM%%$,\h*6b@,`11lR.7O%uO.J.Y]P9CZmP*Q(oC$0G?#$P@GRFhp0@mkG(RJ.VT%PWp@Um>f88m7'QU,%N5K,-s@=7)lE=e@iuO6tGr3V<h0EfL:CJbjHm&&4%$e,=i^-3rU&o4=/p2mtaXe8K-=0&K+iUG/'#6&1/_a%V^ppnDR0]tl1p*>_C[']7LnLQY+KhN^TkH'.h=M_=I)aWd+?V,-\`=ik$D.\a1kP!U"9@09VU$60;K7;,=C(KAqo^l0mBJ!5CeDr%qH.i]8TZB240NPcF2OGn\Eg#QD6m)U)N3LTQY?+9&n[N\;;"UrM[b:39Web@e2ruI;*@K?B^`oq!V>:H5Hf!eI(78*UljfW@4T5B%U\;ug9:0?HA3QNMBAq$i)`W0i+s3u6N77n"iPMo)8"C1B>?d+3+3q4h##Ec?O:R]Q*0R#diBm>1V`Hd%HoV-4m6#T+k[bd#a#8<W%4\foe(PfqDF]?Ep.iWY-UsT#UNC8+;HY%Th@FX^OZ&1=>$JcXH#0KC_odgMe2AZGL).N0THe1':9J5,D&Eu.JFVZF[A!gL;*>%O\%a"pn*F+HVJmBI^k82q#2,!BW>#uj'/R0Hok%>cKBAY[tJI,-'#E&_VQWL^t3lsYki7WKD$bn_l(8An+UI%ZehiKO''Ne5p@cp'FO%"^?dI'"G-9hgm#'_p9Cjj+s,VL$fcnVOmT'lB$CuA:(:0rg0"&EI+_TUP7_`;CgdgTkU;)A>E8GT0i\brFMd2N[?"DmX#WcWE@=l%1/]i6C_Rbd=O6ISWE;eI,;na'khc,>QX0TuDo2WkbF[IIr53J.A/JXla0h*![N-\0/o2:BI4AJI?UgIk-dI9=ij]Mf$5ZIB;5_8W%oIG\jKhE^]C7%u1XrS)VVS^:kL/Mp^FkktKIj`)L!ZND:.jP#UeV1S'JJFYR-Gc,[<gMsFY,FL7^/LJoZD#.!1<"W2$qIKIoj1lG%.;VT$=.<U`PnDK_F$"7G-i)gg:XcoC3pXE84fEB(kagQJ[h-9/K^jRtOL]Q,^/_eD4;K;NInF9rEoWj@[WYp0aE=?fjg0+,RTsK3%]IC6Ho%VaKDIG?u;CHADp@&]HdjC]G1::KuQGoBlfiTtSB.IK$d5SNp^QsoY&Oh2Tg[`P8JK0-))E$F81+QjoW+<B<QjgV#Gkj3E%&!0&^gY$1\L)jU#?&<=g.5o(]CXJCc%Gka+1uJ!F%48^G<R]g,L2m>4]oR(Y0%itD7Q*<BZMYH&@:r;.Hs8gZOVr>o[rH\+?Z?s,%NO,sq7eqI[qpkGmW!p:Q>V>!=X6<#GLUUKN0,>i&A6iPkN,%udQRK[hA^-EW9[8tk\0#$t3DkdUh0s`3Ck^t4*n-9glJ/j89Mmum%b<NDmF;f@hg4luh2W:q@oC]8'o#F[gpcTRq`-F1r%WRi0-?8c^IE*Rt(a]3%mQL;LomN$/R.X,8b#."@(H*GbFlXU!Xs^&Ej;,l:%p;7RXgc4:L0OsR")t4KNYc<LmqJ;Nbje1dJ,A=u:pFm;\*d8(3Td7n[`I9aE`h4$%*"Oc1[]2Kn+VL8MjU?smACH6@(gKcP5+=/U%Q`fZ"PbGGJ_?+'A0$_jUdtQo3,s$=WYACf6ou^-Ddm[uod:Ui:'t$f,9c)r>KLkZqflTD&J`Y>Ua8RKml,%K*_DKJUflUYOF)'dh%FCD_%hV.;:ZK[`bkf]g_]5:')9c'*g-fQhTb,,R,/r<bm1n-+F<HQaDFC?So,^`(F9c(gad$'HEb,,QiV2MgI#0E_MX")Y4A\GG7%'!C^6R8"L!$71.#'T9F,qkR>GCqA[A)^_%,/=2C"^5Xn;/hE>Ar2.,8ZK]4Ukft%`2OdGcMmlk&Pqt1?2I2^;S-g<.2KUi_=>!m?%HUS1\V@2E\bSf4=B%+lXjgfKTr5qQN,YYt0??mVLRkCd0_)(KUb,4d*']T25A>K&B^lT;_5<DGtDX-1,mI[ue10H4F;!bpph.s7<%jR74u?+>#3lMKiZhj`!a^:L+#CRt98s$#($ku@#f)]%6WlGQrhk"eh;(F<tj-b660BmOFd'suAV_EI,4dfKfFEYa:,oN$kK:r;`8%+9)aJR=:31?/9?&6KS'>gC2='h><7rKYdMqjt9gbmuHaBn?:Xj`<P1[(jjM5in24HfA(Z3-17M>`+_h@fA-&.5C(UkmK09hKO8iQ%?e?skR_.E89gierkj+[!5$,a1F;J1El@$o_dW=B9HUC<co_!8_j.BZ_hLN,&+L<J]d-,B8%C6S;8MYC*F`ut:]#^FtII+?gM0+@r%'a:m&1IGfjmY,N:kW^R,n"s<X\`ktjI@J<PmRRNH,YEY[Q;9nZCgoGm;1s_%`c&4Y[,/-3r"\j2###ToYoC?:h,$pNU:nX)G!eQ,%8To3rmk6&WD^:a3rSB9na]Pd=TlXs?/SrRfes6X.M;CYNf0+tc\7h&_P;q"/g=+uW$$'t$BmisY!b,.Qp0C4<AWhuc^c%$)oA;A:%\T@3j+Xptm1;nhWOfR0GDN>i[nHM2s+IN*aK$9J;\]5lV.O7c#JBITGZQf7U_%7Y.-WhY^Fb?<!^CQ\,Qo'pKrf//'B@pF0Z'J7W%&jWXaM_jA3me#B/pkN9BQdU$6P8Ke3d!$\O4QF/*(g`/5(^=lf)a(m@T,[3#/()7R,WFN+22gZ[meRfUd5TkRRJAgM5#KBqH,C01%XrHe`\1+Tl?TRnX]]`eVk7)Y-p7LQ4_L#5tbasX#iNCe8RtQX+Qgrh"P3T<ampXG1Y2$LK-.^q$#B'V[nFj9.\"q&W4s#Y*0-+fL%%_q1aeC2<j8gUTP.//R6bHB)I"6[/Blgj'/./':j^,31C2%5g`Jsj_(qt^p7_lLM7QpRQerf"(:87ODp&sINliR1ElojE2"2do_&%BMKA_OreJ#PpI<5d;_fD`TdbiN_AG7?6r<UMG%E)CdlXUUm:q">d+!"@NrA5dAC?nEJYr@W_^Mdl9;pKG5-K/S<S9egZWZ_Y9R+b%4F8W)NpCif7oMjKF*0X7lQ5jrGpCIO/S&pb$TP+Z=(P5hY$Kd9+sirkV=$-q&?-7HpW+ODaG,*^q[u@$DYde]g\0o8nP_#Uk&rD9%'@kpfiqiT;fkTP]hL]ZMa#(9olE:&b9s9Nml,5pj]/%A#G@)9FiVJDdW%T6q4`PIi/;L8'pTQ4aDQa0<E)L"?F;eKOk@mMICfDi6%F&A?Tf#4A414([$YPs3W]BFpcnT%QhDKK[Rjuh!=dJWn`[[lUJ>LYfPZSAFna(BEW>^P1rC.WcSog"i'm*,<C/L!&h2YP/$8hfjt%lqm?\]XMo$dASpb0b0+;;>G0l0o^'F>/'M>]]ee8`(`XpcF,C61>(e^TM`;h_NWljMs*W'V=V!bX-<=#_>D5M0Rr4cF+J@r@bi@'%Js)crj_8T]T:d0#CoPf2M.mTKI;K+2/U5Gr+]E"s`dO"F#"uIG&r:;JqH&<,8[hD@\A`8A5..@?65#I[6Z)g3T3J@j;(@7eCQhM2%8XeA_mXHm8\.-n%cqUsV.Psd*kOjKi+a_T#[)WBXjB61'[T4^!9'``P1Pn6aWoPJ0*d`3[A_eZfV8YTU(o4b:C%[N"al8h*oX.IF%%]/YCnGqUG&[P,g@2!\16pP%CmagOulDc[_N1"sp;"m_:"iDC,AWb]Wn%53p(OKtP$$1S@1s?6Bb7>n-k78OSlg)?rkkJ7o'MI!f%,na@@4bG.[`b%$C+ge3OKGi9T$'XFZ6DlfbVNKd</%`]:,f`0:8*D1!b5DQtUZ23=E#3"sob@b2Pe5uRrLQ.4O/WuR?)K<&3j%8J%QR5HQ]8A]3XS3SE^/VmSG$?A=_fi&mDY;4l:R]DdNeqSg,j-.8B=GjNN1.O#pE:9b=[,1rTH"sUMLJ<\.$`8rVFXa5##5?gIH_KK%9"JR\Y-RhLNI0Y21/bB_m[K1@m:=gpj\V68b2qlC@QdaEqkI8SQ-6m&\Sp7l;QMBS37=5^lUF$OIMj790PM#iDcHG$"k\f%GRgCm%)Xf`q0P9E,=Ze]A(1>Q1^n*Kh7odsgNI%;1Tb:u=-HuQ"5GpGS(1:$dL<Z"*ZN-3O!%.2tA$Q)ujoG*WI>cDQgn<;ApF:D:+5N^U%90DtS0'2CJaZZr<P$Q5^lQhA8>foPobg&G#.:;#IUjqT+^52ZK7slam5>er,0BES5V=r5?b3,85rio,l67o%0FL#@lB7`kHZ_@6-%f<;rqTa&3^:KC?K\,$P]2H8U@^\H'34gLXmhs2*5[@-"J.IE/XCoBbrqXlriC*`QM`S]t47t0P2\I]oEM$)T"(M9n0>Q"W4R#PM&%E7h:AK4K#q^KWERPH2HFrShbg)uBP+G-BeBEQb0PqSd+'O]FqjY@%3VrF@uhHf+.U1r"(@Hi8?PTdsV"<0@Krf2![[KhZZ/p/jQR%qSdM2.P#@(l0dn=^BAQU7/-PscZVm(62.tB0DU$D6g)*PhWd&HI=-H=H/\Mf%5S&S/OF[%Y#t@:Y?u3b3Jr1^imUh>"Fg,mrSfaN%a>Xtc6eq"Z77uI>I^+9_<bcs:lPG&O?[0Res7cB/RtJD[dRKGWal^a.jZS:SlIYd_O1<dph@'\'O)KPqrBb7%kf*N"n+DUBV8n"3%M=:+q^XXuLNN^+0LMGVHIRK6Vi*O1n>Q%HfIYM;']mbBAV2[%L>/&N?W?1AJYMX<MGg^s;P2+):r4RRL\,,cA+5`a/-[6`jT_J<Y%CC)'R(S7&Cs1Nki_6gpOe4Fbc?bAa#cF"_0]mfL\qXs>aP:+8ghWcKE>WgNLIXRd@2"82-JTSiGHIh$Knb!R?MS5'hpgeVmX5C..%Y5#\Z&`IQ7Tn_r6)>[[S,\O"cJ$34,>g%UEfAQE"Kr'h:?RoY&)sCVCGdj73*$5)c^Nd4N3%>0Hf.W(l$$S`0EN`_9^N.DBr=\K=%*;X!V0#Q%[X.S"dOSATsN"*JN:HE?AW-eL&'4OnRSDAkmqSfYj8/*$.?9^Y\_;OCi2GE%8^\Gd%*iB)d^=P%;<^1nJcg^]*EKn<R%@d0>+s(A1h67.JWaN9"qn=D!f`,ok^^$A'T!fLC&j;[R"mn!pZ>R\[eV2:":XfXK-S]a\bf$oY.(441^"C[PM;:Y6)I-C/jpY2g9%ep\]nBk;L)rq:;/a^'>KZj>emND1Iqm:;KMqH31I[V=s-pY@T$XEO(33hMmEr0j25r8(D]h[]5kh`mU]fNmT=LMos-PKr_pC$OX?%qo&F3]Y:euXRY9iPcqB>g")P$^L]NESp[-5^RcKKQg\S;6hC1aVYYZ11-]Ogs,<S@m%lJ09=:%c7Wj-Vrr$M[B3H6slYu4]E.*%1%T@pM*^Me=>Aq/YbDN2YAFc!>gA9P,HT:K;IA`k-n`jE5DMtn*9H:'-"mVOH8h_2UaQ8Ng5C-B*`XgW9Wj/"p/?p2!DkM'K"(%?$g%27Igueb@m>T(_k*f4s2#n?P&u,(.qmQX.1MZiB7O?[ak09qF7+^>OF&5>Q$+0#+[+)b)AF%d7eCWn#NFa'sDl5#[lP*`$%rS?5N:%><1WbP\.T,9[mCh?87dgQR@QKr@Bdb6enkg:a\8[A,5]K=[ng\^&mZ2iA]DYJ`-]:4"c?1.Z5\'\Pg#r'%C)%-.].kiMUp!Y$R7V%1CNq]-Wel-iH9Mmf3-e_aL,BAbO3=3ETqL2IfQe)f=#E1=*LW;IbPcfL3bJdH+!8Gbo(['e&Gq<l\CJ]rNR.&<W9&(hp1[r?9ZZ$%0!;YQ)g(haQGoZU"mXU@RFa%M3@VMa%.6Q/lu4%,B4e(;2g'knNe&O#*Ic^`,juN`c;#%%XtGg.0T4bqi+F4V?Rt<^-1/L!C:BK(%i^2e*4L;`-UFo6T5Gg1UdCi]YOkZj[&*DsYqsuJtK15UPK3e-kjQ$Qj_OK&4.QuM>r5SYd_`8TX54cu++"kVFhMbP)6'g;EW,>CK%-o`MHWnWGCS]ptd.Wl>D>NZof"%ZDU\:ou9:/u<W/"#t=^^,1tZcH_XB9&sdj8CMX68l]ucP&aZDa1;lnVTQ71jY&ASA'FVnqq:"%Z]j'F`k:UX_?4JJTJ!Q?YE,ub'n+QYS`T.Sm-hg'<Bf-<3>7G6D6+aRI1],/72,ifHGH_=C/8mK=5.k];0TG2MQ#)e?X5/Bc_m)$%$Ld[p1Ok^o?fGn[C7D\R&*:jbgHBEIjm%Kij\-I7%X)l6PE5e-rTF+_D]D_ALpLFg4/#"A"!P#C>@m_AOaI9%T?bi&RlC1%:,geY%rQiUrq5-s!?QH*'c,:faAGfjdTBBUpNc1o46"cWKK"CP0oNPn4Yf^)==j]?JStU`,FoL=Di'ZVGo_S-[YFh/$5MhTV11o>n(3>b+%WMR*#oQb_YAGk[ag>0@:`V`j71$)U\d.UOOWU/F&&4;\o4R$pQ7,`=P.9+0ro;30<QsK;0Jrd^e](t'_'n9lMB,`Ae=%7Z-8sosP%$\%t\.\J@VA_)XF>e3.7b`j_=%sBmECFqZ;^tRWr.G;$]D&L!(Ga]+JcDt+1o758%MX0PKSrU&"Ws9JhTB"V[a8#0=jh<L6D3nQm%^KmQWnYV/DlU;Ft"b8=#P+.#[)u+Jg*`U+N2,o)6*`qggN=,nu=^oS5L79`&R(DsP`V@;n0!J`LnfgZ[AEuk($OKPt#CA8:kOi%b%;!LiJdK;)1gA"V`$CN5.H#80^$M:2j5Zt5Vj:q32&#m6tV`+A#Vc);UBdcgA8G/ePJMN"@fr`dbhS6sR_I)C"-?]KD&Vl:Oq5rcl%R\,B)@:*iK152XPI$H.hXV7[O&GNFO^H#DXU\hhkaasUa/4Wl_G]U.@Z,UAdDqqVnQg=p*ClU)\j[8lcG3*[WCuOA^B5B:]I53_\%CO?J]SrPDboelYl*EtM5g)c`#[2-at`h'&)/1uSe1]IXNf]kRo]^3:]dTu\'1DcBtYL,h=nl5J@W.4!%2D1k&Y4H;LIqFR"\(5Hr%oOhbU##.,D$2_1cflHPL`^4W%JMs!jdDAD!WWhcqI;^sN>M%uWL$a`pdG)fmriBd,(4Z@!T+K2H4a'%q<*hBR,#W7MAqHB[>4L]f%h='DMD>@9'pJc3C8M:dMU#ReeJaUC6*7Nkm$Yhd]JfZ"+&M=;adk_HcYmq"]*,CHH6Y1Gh;3Z7/^3Oh5EM(C<Ml-="#H:;<GA^b>%F2!aE[?nqENTIeHa("c'WE&`,>(9:4F?sq1h\n#"Oo1i9Z*j2D\PcMiMB;$ap)tK]\bj>Uas]JH=1?X]H=CUgA7MT<rRh%<RJBk:%55nA;^@Sm_ETcY_>qX^X:$,.f`=GeX-QP5tVmFBdrbEoWa&3j5Il+jjQ[VdZB'j5G/DtjKeT$]3I_+t5G]H(p\!\N1HBO;l0<\*l%F*$GiYraa1G(nu+khPgKb1ORTF!&rr5.\sbn6iMTb4B^k@<M`0mG-j@fV5_IONNO,IagWneplN7gBn^'8#.J[*dsZ54YYB:qhYOS%0P]aE$J`DK>MU_mG0\*":Y*p?ik[g_L5G3bd(54/gCr?#UtnI*_qX1A*uZYtHY[9*pK\3NjH)QX1:rpL-\2djg6.IROKi6EH30oQ%Q;ZVHGlMhEZ2$n.Zj\^J%F\TLkhr"mM+QN!GJSkWU?3,rc0575NpLi=//C:PL6OE[pZ(YKIe3tik!\-$3-/nIKY1F>bUOO@DV'[>%Kr2/<J,+4h0!<Ni]D70#dPU`ESU5>2Sdm].T/Ds.Xo%9+ZhF;N=o>6=+)U(BS]T-S6g_8I:7,g.GOjh&E5+K>^&7K1[ZJXJArYAq%2SD;`'o7q@_n:$N=KF'1:@M3KLbh-?0$Sn$]][Tn/mHM!\+L'@++(K3[nl]jQ-+3WFRqQmc;)iOG`ZXp(XPLq^b]#8I(`;/o&M(K%&`7fR!?cjMiJn`g0Yd68-ea@Bbd%6f^!qqmm)gX,acE!>F^o^ko-B_56Q5V:&O!7o<+]g]0nDM9HPI1<h1Nr,e9^u)inlcO0>3QI%HaL+]?^B,`[r*.fH0EFBm"bA%;jmX`K`:Z15O""loCao..k)^W-boA1A:+gA_r_biJCj_dcnU&MVY@/Y%f+oA")[]V32p='L`D*[%:cMq_#lVp=2gafgpqVU*_qKX%PtdVo-4\/DQ'K>6$HsVsq_7Q1mVh/Il[/GEo/mE0c,D.0<6@j4NT*iUimgs+Ong<6!l2O'.,87e%eUY5*3kl*TE[kQn1^f#^cft:30l'Roj/:JD`;75mId&_rd=&5^8_lm\6,PN,"2UA-]VNp[@mI#k15kfoV\Tp`kdUBL]uf8>EGK@_%'=<Yr9fc&3QUI>b`e5Nd,CRk@rJPnM1VthJABW1l:<rH^#$3;'fC0]_]+K@*#T4$9DN'O.%BgrI=<GFr^qga1@q!8j^qiJ6O'Ts+%a8F[fabpPG'+I<TLL]p71E0iq25<:BnG'SQ5GuO;hZ)A@"RcoR9pRNDG;M5To\71cPnKC8<lPo!h.mW#)eJ6ZZg,>Q*HAGLbd^5U%7NJBD1d]W#E@!fo:ZMN-.gP`H#P=-K&uQ$$3,h)?(-!3[#5sm>6BQ[Rh_PHuE7eO+V[&6Cod0.lM+?7iUK^KPn6Y-\M172`)ra'K%LW.;A8Bkr](*BS9>NN26j,1>lAU"'mNq?>g4;GF<[eDbRSgf&Gh9I@<AAk(Tq3;KVP$5)7.TrT(JBt5j=$)+[qn<uPgK6?=f5kI5%TD<VTHT$#(qcoH>[aDf`N:iCF]DU@XT8/)+')>RW*.r1Q$T&nP"[S>D)r8h9j=O_fr2e/.o<l`5"J_H6K6l\'mBP2g^6>SfSIJNd%i^SQMM"-/cA3\:&a`o7$nddLIYT;nnJ!BJVm<FuB5K\5bb4Eq7T!3X9284MV0?3uUa`t[GgdCXn17k]j,Ocpf4>Z=clgo]+;dp8"%h*L/ih8_\5d^:&m%q^6aUc.>d52A7!/q()'[)V%L7)!`2b]36TVkmI4(r&bd9p(icAa`O@UfuaDfoU,,,LD9clfWe"nWX>\nah/+%/_Qdq2qkFa!s0EG^&IT8drXE;50SAeQG^O;Atp?I6Jo<g<LhJe=<\C)KPZ+44+>A6e(X0?VN#9p1[<Q/Rt>Y\UQRnnhfB5&3BiKC%J&Nb]f.I:7qb1ldnh0I#gUNcS&@$`jAFJ>o6eq*nnn1KEbcmeQr,q#2l%b>ajkBMR,!(_pY5O\-bm;$gNAY`&\t-RCH$q3&b4h=e%acefo12^pec@3N/au25uI`AV>0hP'5I65Eg'tMo;SIjEZ\s%KBZj%npL+X&]ZSM6mM.#BI&J1F-l,6nK71LV0Z$ko"i(f@6>$:j8%4n=C?\7TJ!OpHXBqSo_,)+K5#qN6gA95ST+'PhkcAk>cBi'D9u-Ms:=HQEL%n$D&(c3&)Pa,Bth-[lC@'k7((P7^+X;.Vb43BDtZ%K5%>m.G!5-0Bl67qnuK*Z3XGUW.=Z.EY\3rTmj!I<^8;3n;dgsQ_Yi-dic*]qo;!+9:D/8EhI<s;lE'<25+-HDP5S&%Yt5;r6tM<%qjABmW8aWd.+Y_^)-JR:7X+4OSg!F@Sm2b)Ke/LABp]c@0'+RG9#M.#8kuYT.V'NN<=#R_B'9$=B-"NYX-h'5X,uC_&AaqM;@.ah%X9p,90m)=uK9#o5.Qk7@[Yq'0hQ:d?J%8]*HqO3Ne&1kT5#<l*N5bF(2M(!X)2kU@6H522q5c,WK8oZZUmb*#=EbLCN"+8G=iL[4%7[/jci]q'+Ldcn5H#1':pP\"'[3,;]bQThq1a=BE`12q3Uc8KijLGE)0-1@$._.s#bfDNoQkM8r]]'9s/SR\G)g"Or/m%^A29/rX%n"N8=%F<L.Sk1q@YPe1:;g+0?4:gecW@kisXV'`ZAbfaY'#*ZX,3?mA4LA[SIJZs^bf4M42hA@2Hhn[EhX,U^F(ki\_X0ecF5LA*%r'"KQn>rK-`Cn=`Qh/2Ilrik/i/c8_qIk"XH6d'^XVDVj"$,CYD'p\Pk`a2.H2\qJD+*EM>H;fH.ar:9YTQ)j>2IuTU,^JMHFP1;%D)fi@r/d-f4:l+2h-N<3pYco_!sMJj,X+B+c"#8^f)kX&?7,%c`kd@]#0h(4=^4DYlW9*7;Uh'+*G!eUQ+c_RS5bF@O020<ZqS+<%QEhMo^-r-LE$f/$C:!4Fb?e$'A@%SMS')ngr8'*pm>RTnHoO1*I0j<@9V>*sG.YC2`KUS1kL]^5LWu^L3M*<ih;:21q9ttXO4);=%0kRV[W?>\WetmQio<?%E:EO[2`+OhSal9o!jmZSS$.OjI$L"Hpk'0)\-.Mm@5E"Dumi2u3OsG<1n=/io1M@N"jY%!jhQRn??ckq=%RiG5i]2?4Z;A(\?<oW5%hWT"JS+]hZS7I92o8i,^Am4bG9^OZ8>&\*r2O9Vdaa%S^daJUdlBZTaI*fT`A(9)RqlFI1T:.o0ZJNL>%od.3&pT!s^PKOuZ)$i#bYk_:J]!sAg1<"NO[TkF*>W@>9TNA1`EbLE[AG;!.4dI1&WFDldmh/!"SehG+!s:!1h*>fEgA!KPEW6LK%G)PF<e+?/CK[lD:IVLPoZS_9ue]c#WM2Iu>\q.\?_%P.ra#6kkTTa9lGAqnagAQKQ\-iod+(/tHb#:!n*-L2r]SGu>93hei7'[tE%<.YSK\QKlTQi.f`$HZGhN5\k\=:@6$BboBM5`VcCl8U8ih:DC\"!d!rBV&ase+C[>!u8seQK_r(*m_+@b,lnBW$YXJdKFSQ?JrNq%^Xc;kj&g$9FR4,;jJQ$q*OS)f53hBde8d%*hbhqqqJ2k]W`IHGs6UL>00`goH7-CjcK.h04$/I*XM-MtX(cStR/(8c0ap*/Z%/Bm%5_j8B!7_+hhsT(Yp;G'fV>+9*?460:R+8ZI8KK/p;"JIp.l:UHiVhdW[fp<_k'r[l0dEVV[\t0Z3%K`T^Ec6ZDlg.3Q,TYA_nOWc%=*]1um=&iOchW:WiU4^WgKns0="^i@`f4t8C>I\o`LHGk=a;m>qEi&;M).cC0d#uVn@hl#.81^=Ycekqe)K"jdE0cu-\1UDIY^A&%1BJW!96m=Sh\.T#o/Zic3UlJn#KRIpjC9K[]Kp=.A]W7:/@#)^9[]g$KG$`0jl#WP5aNGkCQFNsoDjZkX7&XTH*5Te)X*:aa1$B_%i:I[qVR(PV(_B1KcQp$W(PI(nXiP5M4d5lYA')<FrnUNXE3'jF=JKg-BQi#'jZ6UR5]'1rc\affX(2'(LF^o]">nfeWBF!1n[bk?%dK'f?GWd.r',amTrV8Rr&#dQ4?Rb:3rm!'B]2dPVp&(Jb\N:`!lFEY\Dm'AEK!G%@A<@qfJ4GC2c`8%4p[_GEh]>aRqp4!gqYhBt%U>]+=c>IkDdi[g7'Metk)/_!Q=c&0Y.0%fLZ4*Arp]irO9:Ume\]T5X^+`FK4=KK\\hO<E.OtJl.Lqbh@Cc?-56a3l9?,$=>a4D`%f9Yf^`USTOdm;!=:UH!A@>V,[D"85^n,t2SUuNI4`caXA024;\UNF'BIBeq#bSB;HdobR!gGIO(YmhtL#9KtLMiA*Tb6405E&/dt%J>(E+R=\M<p1pW!Dl/U6\PGShIkud2rUjg%oP:=[""D,_8Wk[^Y*1Yo7^MOhY)U6fRr<S?5fX9.EGkmG,-ZfWYZ\MoKo]-)K)*:E%H:_:TS8k`TH+Al!a2cf_\+ij2@kP"8fH)]4`Fb?OV)iMV!YnsG*Tt*C5%_HER.U<?XVtV"-$nfnGu:2;^/]aS`<A@qK:[?Z@!HW]%QGW(EO#dkmY$W845.\'kd%E\RBs0m?D3:BX[Ao&u/mM8b-S&G0O**&Gc.@_Rk//^Pl[]d'[dY6E`YGr!,qmI6&VuU%5k>U#DHlrn%-N[Frj[:NP]KYhM:;B=G!U?*Z&l:`G7$sI.Lp14\DTL"K1W<DpbJ!IEq62A)\HFFRWD))fn*H!$7C#6!,"f*Tbg)+u56Fq@QP9[6%.>:eWhq*YiWB`!Q"2tK1`aW;N$lbJ<fjVLT$fF9.(A68g-%Skr.L;hUcDphEiN$?p2Jd1CMBs;!$ZcEM#I,.Z@9<uFYRj[JWg7`g%`kl1q'bNFH'p(fI(:"7V&[rik+Xg:j*8&o)m=s'@fEeHAQ*ups:a0Lf/82ZtCI/H4pA!3F+[E<fS1$C#f9_P$amte\X"fr/5f.gn%A1Y2D,[k^j!j\WE1);77\Kh4hM$'SV%h\'^%4.U1I%*f72hojD3A".KP)f=-hA_5ei;W"-@@gNI=u1;.(##lq7pD'ejCg)REJPC1%!"NI-%UtP@;Bds>\4L69;I!CT>">0HM44qafg_H#kNDD[H.hT@\t#I3JT),m%neFsq)YP,R<NuM\YqZ/^FkUhSG3`GIJ]T1Mq!s>%f?_LZM3l[RShi)qm[,.&(/j&A40XhEA.\t6I-JuSG*SZhW_]e!4H[,YqT'0dDk71`,8rOo:jPsZG_`BgabQrMS?(KiX*`9p#[XFu%[ea5!F2^5!P<86i_5sueL#!jFcAt,Qc]87-a]j*QPg>EHC+^t-!*=*TkYRu=HJ@"7ZLO#GCXqU'N*#bWH!9:>WM1[<>4aB.8XeN;%YUj!!ZjKpY05Le$HM(kHL]CPb0/p?i5K1#mmfa#s:ThrG9-.NeZ3_;>Lplq/6$3>X4Ep]S2oq-t>EfN!;3?'Gk9en5oB4:KC[Kn:%bhMlq1MhX4k&cR&s)(9dl:Heu2Z*+B.?<l1>`dPL[o[S9?Y7t(ilqrBC>aq=-Mph*f@[R)gBW%V5\[[taM)A,-<=N[K1!#dRglIh%-;-7`C6,cNHG$HTpiF=;I[[t@V!UX3ANh]\rp_$Hdb1as02IpE"Y%P<AmL_[cke\"1D<laeMBEO?L[,A7n<B>G&FP7"H4+`ls$aS%/T]e7XQ7?%5)@H\iU"9`XGt!U:X8C*9@&M8Q^jrYot^C&hO;D3:/Hp458AV-Oe&-`H%)bQ>'0rqW(*ANR`^TY"P(Tb;fULJ4$g:E%^Xc<+d-cpo5*kK;o($0<P6&a=[I_kc!p8NTp$JNg?hq=f8uZP$T*#&OVsU?]bt2]J#sV+:mQ[U]8D1@2S)+CfkqSNCFc%7oSW?7R%deZ&=KV5AurUZRhH7;S35!mraoF,-&4@3b,1lH.4O+?2!8kJ4)s/Z0qIc*F:I?[XXoY8_:_GGg(J&@=Qq!nYTs%07`qB135YG>Oq%eWZ5pCKX"ZosAEP=j=@6oN+X@oW52GC>-%bXQj!9%1co/=^<bi[!9pHZC57$l'IX3WEI,i6ACb*(#;Q!MOq4-`tAs6eZt4/47[0e%ULmf^ECJsj_@[@JEAX@LYBEFXl7Pog6bieGoraB+6cVu#9%Go%[$%h5nd/#==iY[5Hbda/T[Y(Ym4+-.C$GZqIum4!WUl@DSs`;[%>tU9V'$9]t#qFQ4QKhq?h5k3,KJ#%(;uj%K!](8&&[31he?#EKY(.\6Fqp3->XS*M>h(S11BFh@/<J(eFa5[]Eil^I*?_M!+dk>#%*)_l;jfj.NAchL.$<+8L8r<kKD(;u.$Q+FsUeQLj2F'N`>as:JSCO9,eTJ3U$Y![N$<3\Q:qu;L^d6GCjU<0q-SX@q7/[7_=Yde8%\f*>a6a1kmCLXCYq@_$<-GjSe)VCdLeO_,+#Q][Sl%6!##U+X?-,GhIC;Q=+"QPI45mY(+<ZE;ncNU=<@#gu.2`4g9Fhtl#r=Dk\%#C.IPfVU,7ZEp""\UK@.]<5hMORg5TXC>1qWqqgD+C5:%KTi)P]n[k5Fd3LZ@%*hd@8>D)<8&Jt,_WN20[laJkShg$5TEKB%RLG.%4NInUcSZ]e?cocM7N<E<6j?YHd`0WRNK#Gg[qu(H!172`i@s-[RNL[O>h,_UE%Dj/l=2ciFIs&qpVW@(+O!f%95ooM8Cc5g&ArO1%=TjOeckK\:"^4069L$J!_[<C#WOX*q)+KFZX+[1$UJp9o@8PV)5kuTlE@caJaT,Y"_Tpl8.R=UXd&`8$aea(r]1cZce!)"\0i78^%@*i9*YXj+qibAUjCOimI-U8*u?m,[IIHZoa0#A8u,)0OS<cf0Z?[eBA_IS46!8V)sD%dC(n(&a$Z;B/8oe>eBSbCU<TP]?aR]6_9%$[IdB7B[-s9iN&2N@gP6'i5*3ZR/4Z9`R!u_A[%$%7R+pE>9HZ!3luu'%G-/$DM"o=[f+8dhEK%!2tXT')jn[W<ijlT;nP^&>f"M%+D6k[/XnRE5ubf[)?1N^js*f7Zb9sR"Cf8:T(_]A5ZiBEV9,RD"CY$5A&o3(J-3\mQ89e<_55;o+Ws,lh/rjR^8DeNii">DbqLRu%_6S#.;%tcG0F4L$,FqoY'0@=oDJO^[,R!TC-a6Lrkm[!R$,bE(.9UcH,2-e/lA%n4KYh\93<mHeZ3h_SAJ9T*BW;;FR&dYJPsM\5%8maI?3!2#$.!B`J\cL#P'rKJ;K1`9*-ql@p$AF!WPTWrV/`!\n;LHD+g,b@Si4(%IkSuIBK&]mc@;$L"6teJ9[:GZ),.V9@ihE"F%LnX@$Ku;o(]Vg<t6$86_+DG->%\oc?!+[;E+P7,GQHNTEV&W=".d_tagCaM=W+tZV$"ah\JH]gm<8>8'U9Bu>6UrVF;.m)cRRRJ4%1<FksCY:0hj_>35.^fJRSPosOPtD'F2eaG^'/l\D_;nmGkm/)i".S%1:$[FF.$?>RYmHK&q;Q*l'tW_pHm3`iVNkTF&-eNeB_#,Z%&63<(Z@sX:$uoPi%#'prJYbk!JpkK[a)qj+n`mqQ;iabjeYL<YoY]+E$14/^#anguD^c*.BrJZsh0(5)iNGQ(<#!6C9%J-Q2utrA%KJM215pr#)6+&d0%g3$sae:c@K.3b99d2cohG%]D]4f<TnrQA3FB<,VhnZH1?/dI:Ls%&bQbBdK_Ue\$5Qu%-(=cr'HJ*u=*Xo_U%S3CHh$7>mSKBX/UT]e@(<`kNr!J',II%6r,!>*f0,m_3h$JnT!\WdR*cYPqcF\Di;_cdii0#!*US789,TnD7"8j*oE-n,1*I:I28%R&RWV>RH4BV:*pO@c-10@o?lq3"`2*-QQ[;&A2:_NZl(l%ECEnGVkLT3L8Yqdh`RZq,l"89kSo@EAi&iS2)rZh9EN_2jQbUCT];^%g6W6>1^<H23`Xs-nCSu=&kI=Jel!rq!4T"mRT.=i+[V4s(_/3iZ;n<blpG?Qdn>jN^rb!c1*5.spiLY=9g(n72;l0ar&4!&b:p*<%!+mXF"@EIe`=,"JfCk1X%u/Z9Xg>#E8>E]l+GOK<00j?AP"2hZ46iPK`@O)m9b@GuKWKn.UA1"8l6+8l\VuN=UXGsm6kS-\$8BX9%a?tn`KNUtU$#Et'Z+BXcOI3Jo?j\X,,o@bC.TD8AoP^dbJ0@<:fI4$F2ZNmYQfCA?-I_NC5E&;b[cF&X#ff7%`afq\]E%*Pg`lYB%XPIIuNs@Bs7ImEa;M&MTP_5`!og9-lOo3m!ap7Mb8/iOCc1:VL;&hFp6Kg[K6XaeYf45EuP&<!"'II#->QB!$<&D?eJU18bQ%E.+%AR]+.KOGoiV&jk)-"&KT,T&liNDA6[*KGcr*XUu6#6qRfa#uu\`;G`@NiT-Cp>CHVA1nc"TW)cm`'<`g.qk@XP:n_M4`qm`4EZ2'%R2eWrmhP2&eI"S:%.'qq%[5Cn#P-Aq"JP)\+J,jZoRV`t$XkU<#67Up<uR^"L;?aCY7WVL0JOnB.Bmq7B!5*lJ.U8:Hl<#oMXC0q%Jq+/eTV:8G3^/NG?pZ)O(u@+rKn'0D0I2>p6b#JP@$8IM0LgBX`Z3%m6RW;)`5s\cE<(V/7[?$t,kr+O+/2oLm?]e-1:\+CZ#U*T%fE$&^0-'/-H,>7VJLQX&XPHkK#RFK;*_[sb!TFFe)H9EhYj"shLdh4_8KiU8Bt@`oV$u>5:k^#766US-R6;2,)]>*@pq"@_OP(kp%4SE/:6'8Q2f']Q<+(FK35>h\>&-uFb_[%U/UCZ?+q`IcR3G;EijZj[gH#YSK1p=mn5pKb;0cWi<+<!-J;,o5[_16-+6Q.?D+As%A%^j)@X&5XC"7E((.l!Z$XA3n-shbA1fg5:]LaY4bJe'R<_bt&\4P'J`78uA<-GGLTC6?Hi,o,np$'T;3iYE0!_JMI`[KusPB$^M)1%&!tBL)DD86=:R,@Gea_qFA[S-bCDs_UDoBh$4t[/rAH:t_f:'i0L0a9AD2s[b@Cm>QO+LiQY@;iVei/[0U^HR>QuknEF1.I87&f"%5X`+UL=+orerIQn+2h%d.=fFLVm8Pfof/Tk:$4QhGU5lr8!BZWZopl@Y8!<g*\`eRPfLrm&.b*61jQT)_ap"]`IN]dA;E';.*N'c%H(<mn!=ha\hO"\%=M("K'liH\,$G0^dprfD8';I`c%"`d!l-OY'hZAO+G-&b8.[9B0^pZD.CSljK4S?+PBe_/"W,A?)GqEGb^i5o%E5=6:@AMUbCk5r\eQe1n!C:0Ei!bFn9FS%"dMWm_!g!FrOcc<;0^h<j"[p8$S)So,K4YnC/#%%piZ[6na0:6K]ZM76PApoVCYo3s%q_m*Tp-1th]o,5R5>!(L80KLB64)8OamAHZJ<GU%&68a<4i1;+(cX::8Q7j?j<S1HJ6?7lLj)u^$u:/CC:YqZ0Z-im00%IZ`Gdk=%#54fdH>Qc[.L)T4];;e[]i$PD3dumclP?Ig6jr7f"'#B(7ppiiZ1q9<c3OIBf(MH^b>=T9aC$t.R+qmV0UO4E2sg]L$F-uRC6<fR%l3n7\aFimW@61Gp_/QGI6+1OUl8@$$0J$-=&DBG0WCj!D>_mJ"&?s#?CXa^'5TD5[0>VuM0\U/06Wk%-PTZJ'%)>D6OC)KCXncCc%UG?oG:is\sU@V?CDjYth_Sg#q]$+jOL-hgi6/WKu0/=AG1MsZ:>)@tbHRR^),tVqsA/+BOHd;oNb!Z`uL(P?W(,2]A-2*#q0lVu2%9[b>NE-02Y5'>V[@8OOM"uQcfST<K#dV*j9%c\db]Fb+k10r.39!ao;Qr'A>'\1P55H(,ggCE<WM&B4t79_-3SGd&*j6mP8V7D=/%!A:NDU^B%tOPaH<g'g'K%#6N<,P3jM-:Umbokr,Oft&XUbke#=pI^#,JUoIPOfC/TW[;T-p5ETQBT,/*7bYm*ZLZ_o1,$"kL:P-I%XL^<"-A-l<2Mc+P-s%!<c-U9p.h"`njm&]lQbq94Ro2aX*CGRcp?6i3#3MXH$b81W\7Sm09J-NXesiDUKfl`9)W#=\kN(!eNgk&G%gX?@6ILmUs\cMB_;f2T_dA@=;'T/Jl;--Q/$s`_7=^;Gj&qVWG1;q[Mj<@"">Y6bATj?2k]%6uiMoI.HL`8kb/uituVrj-IH(k,d%*(uVkBf*bdQ!:]]O@^?\$Xo-7\nl,(d.JW(M!Jg^d2bPDY9I3bE;[tS=lsI>.=bM[7^.'R-C,kD&5aJ%T#)0N^keRjTR@-bC>,SW%Ls%8LF<:VkKhasoJ6Z1'"H9iNVFsdjEB1uCd4No-*YX7dI,K%+M1_28a,Mpel\A:F`%39epk7d?kq)6s6b!<DYl,,=GGM3q;Njt8%QNEU+Q>[rM#^Ft$4JBk>Dt3u(;cdO]7E0#,)$*#1:nfWT;^4.;#4ecu$jVck2U-1I^p[JKTG"(OKU,pfR)3tm)5a1-IY_I[ogSuR%fHPt#i)?W(-p]fsJh7UkYsl^XH);ld'?pkWpHraXW!$IH^n<>5Q,;19U&#oTpO9hI+A]CY7$N+*EEsq3^mO+I"A_.A`tFB7lV$;.%5?tJk9[TiOmjmKJ\gB4%Jp9uZ@"Kg?L`rpb5cbL30T_YG_)PM<(mDCE`aR]7/Xp`@Rc9d..0dqF^C6K^ne_b7HP4X_aDMSWSc`L7%[g3GM%ST+Y%'oOoJg!O'<5q^8G@UuH+;k)/Ua-co?NsesQXSB)(UZ=]X<Z]^G_$oe.td6d@5-nE<kj9g,*!#a%gZSJJHsT$"lqtr%V*dmXn\#15At##-!Y2+Sg-`LuR"q#cTh/>$C8?:k9pU)3&DOF#8k9L[Y<kj50gUNiFdRTUko0g?[$G.-"baCs/RtL4i3N9f"qBR\%Y.maFbbMRtb69ZGTROp^/O+o)3g=?\j(c8EaJBm3\RbLZL9@R@>0AU[(VZm$L6'nH#$Xb-7N`ID!"pS?#cG(\0c@.90J;UaG&P0C%3(O/._c;XI)9.qlf5Y`uHGkpg<gRRp#gH!KAk3KQ1/BdN+E,2F&g4/h:JSPdHEngDJO.51QR,R#f66%)_;-e2B`[gIMDo-0^#P)'%6"r%TV*7I)7VOTI4o0Cj?@o\[Kmf1$lGG.6W>H-Yd&h]+^d)8FVJ[LnGpZD"*fN,.L4p4.g.T=[-q$L^eUnt_A/Dj,QSRfG#H>d$%Hk=*Heog[-K>G3oTg9-q417n$*CD&ta$U.U#$l966JYj#0MpIDk/(dsLG(k#lqFE6E3GF97`*6Y2&V.2@8%sKLo)j=iPog>-k72:%#^@Nffd=%%Bc.GsHse$a`A.Vm2)$L"\hYU?-=%2S6,9ic#m?b7C9fjSl7`ndb@HWaVHAMY(@kFLK`GO>Wph#<FD)-:_ZU6"98M\i%Z#LYS.5WFs@(;C0*I*+5Y!O.&#P2q_ga3U/*gfKa^D)kXF?VFT+<W"B]2.Dd?\8p>7-i1i6V)1FK<Xbm#5.8[-Z>Ao'jGq[8/>E&%b96nSG-$cQJq/\q3IX7?,k),?J\0[8Ol7Hucu:Ut:`AN6#S@pX!oOM&%RONcN@2^omWXl5,te4ThMu?mKl"=-5m/+8)B_GCXqJgQ%DJ2^ia=^(<*!?8I"-4iBQ1,*hK=DPIL7Yq!bmJ_`%rHC4#@W6Y%L&4\:9^=eqXQq^qDU9:^QA)jM*o`.)*j"tCfMM]&24\$&25.1%O<HFj@'\#dEZ>'eA;?Qh#;AH?>:(@^eE&Sk*e`mIRlHgMQ<[%U(56_O&V>B%AB,ZuWoaZ@^'k[X\UjXXR*3NtErcp!\`(ud(ZCl/%`,XHA-dK72iQeuaGn,T<@ZqqGbIZ_h0GL<s;1e<e&6H2\ho(5L[>*duOS(Y[$5<X'V3&p(cdN+)=f@LB%2n4uQ@aOM*C6d^[%\\e%'bheL$OR_p"p*_N[cELEM!1ud6*N:U#jAE?QX[QcKek,E\2,O@*cGR#_]<#p;tiWr$A(2lN:@*;Q=e9gSZ1#=SN_jI.":d+`#,^p%ZJ]t./Ai"FI$#*3##-%-V>Bk8"S12V;[k'r#:;dTeGKkX@IL`Bh908rk[@<lCuJ.*I0*n*X+BMM6rEhh2UM[DkQ6J&$_2YO`)YH/%<U"#pD(8qmM<Pj#L2G$W%WSCtF-?h($7Q9nd4OIeO$qe;Gp"PA!7?$bN^5?ICfpgk3*9<!-hPRFR]6*+.SM%\[6dK;0s#*mVV.Cg%j,OG'/=9*>!Z:u-P0OX.@"q6eVn.Ts?G)"Z0N/lJ*B>#d"MtHUk0SM.I522_gh.i1<WL-f.hg/u8+IH&`9$<%\:EUlOBqg=PQVYp%7fkDB1AE>[#OtWP7ZR]4UIXL*8=n1$Q$X)#]qiVR-m^_#2cqanloKTOl,^<H%.ON/)J<ZT04*2b&?aVIOA7qL3_g+;(RRY=IbOh:%aa8*j8p_jUn-Sk".?Es;p-kiNXeh2[P%(oRIJ`iq4TGW1a]i%V2J+2@QLr+NK-_'7`2]r":$idS,cW<I`?k"SG`W>DS<WA'18&.i%fkdb?T^VGbf<R?'Z*.__fNRus=SH8fO,GdkCC*LRglGO,\2rp2aA/p+/d=bIeY5H!g9b$/g[^`u>4;n;6&NPonPfQ&P1bMCXQjd(%+4RD-7'>c9MZ73j1!0.hLl]QI@\_E`f8NfXjE.QTJE9BD%1(i$H+#IDc.QOOE#W"EMf)d3e0unsl1H/;k!QN3[<dp89Q#)#84/gP%ap^efGHKVZ8S&eV+no'6j`D&^p\[Xo>9/C#KnDLk"o-\tqX5=RStHQ(8J^oR?9T2mG>BBA^c'@niW[ZBnPf]Z=cRD/K\P]P5*bb]%V!GS`LoVo6erB"iYVWl*G,sg)3P(W=YcnqLhFAUpPBYAC*mtm"Hd&B@cgln2^)PNB/.!8I;+1e5"]!?4Gd<g'Vsh@N-0R3aBFQ6#%RXoZ\Yf3Vq.V&[M9Uj!UnJ+f_l(O(!&?Yod#^nihqS?BDMTUfX8oQM_Sc5I_^f7%b#M'5g,0cV_HI?7dCe*sbL.FQ]9'ILiTbD.[%)@,F#0=<:_-<RVN@Z^)5jH3]:CTC^@KCBoC&c0q'qX<Wa5]7F!jd.XP$P6f%(#F6`@\@>mg20Hf"\tWTHQ34AZMkpIJlhKDIr6NU%rI25",I^A$^h?I:F&VMA(Xf2:LMN-6cLLnQHe@Z<^,IAIf).b'03YG"bk@qYeeGC&^E4$g2\A/t_CbC'eq4BM^%,fa"fJ6?^rRq[%CSt64.F3&[/t_K_6p15e:[QKjR[800s5#uR^=`U9IVX:W,O,`\LAgECH(EQ:b7F".V=q[*:AWkN:46K@3+&!WaNO/(s8DeifCc-A%I=7]^n?P5C?>"G.U&@4Uo074_H`l,dRR\1uo-r#uc!fc!\IjdcD[;<f@@d'6T?h^IOlm\\3`lj\$Xi60%i)$cLbNis=>X<Z6e6=C%2tG(eT_Q1)+$\9RV4/$%'AfXs4B!H:6D01L-L\0AX[=LUnIp;Wa-<58R0S!A(T5,Y2thB(*1X5qO?po_ijiK,m!]T:3pg)pL+?V%%i#10D@6tRk<%j31n_H2:aS:)b$ZL`*d$KM+`N:4Kb\TQNf.?cYR9_i6&S_,.^,[ME%(TEb41sPBm#g"#hERq*2J<U.hsk\pO:d\G%gnLT[rYsfG)5.CaNa>T7#`S+[6_^\Q:,n=[NCW'On]s;qg`c>&T$HsR5_>6S/*X)a(1Ui=`-<Z'j6-4J!b`>U*uHskM3JDRs+Pj,%Iqm#0X0.h"N*3\ohSsN5^Is=!b#&'2qh!dp9EYi;7&E!b#^p$0`k`.4RniW<]AX@j&ieK]kpn2hZ$DlJgu+\N8f>;RO?@+T^1qTk%WNH[maG^<IDJ4e6\WV>h>ZdWPnnqpH5sLfeL#d!1>E?N!>g@9&BN$NVS/U`1fU,]pVH/Rk0p-Bk4#<@r<j7V6BH6ZTarH"gbg;ob%YqAa'HBJPdgcmKrE96!X\Ii%bW7bE+\)#B"W;_&i$E(h&)&BE$:?es;p5s`qS8pZG10aO-#FLeX!0u$**tB4s'`.@PPS`S<0Shm/%Q#(1E;rW]<:d[bZ0W7SD.!>Y"*PkM0RY1C?"lLn(BQ4q:gB?s1,S_u/0_QmBZm@9#K7+bVpB:sk(0)Te8=g3aHhS&c%:bWT!Jqp0%,,$uL^Y/K&LLFJlhk(i$J"4/7cJLM[G8VB6F8j*O)9MJc4Isp5&L?SM)#mpEe`^.G`fjbcr;I2d5LAB['+t00R`?Wea1h_H]iN(U%B@aU^lY0k8ii^PGF3-h4QOClbLX8LY;^M(:Q";1J:KXh/@5-6pLVqE?GYI9DRX<WjC]nW[%^`\K!=JG0IaKqqXtF7<dB7o>97;7m%=lPSP\W/^hN=<6"o7K.))`m.(p=WL%CoEk=2iqkWpA*U549$8SkMIG+rfR%hVOIUR@dPiLW%2'C$ioRcODYO.6Z&g:<Pe%!irBT6%?P:B[J0@8.F+Asi%KHaf4N>>@4LR3LrR(!*&-m`0DMZ8OJ;&4XE%jdt%b'-EF'E\c8)S)u6\j6u"[j=;J_mS9<:ku6,MYE>XI!][%&VT0UW3bjE?T_^`LTFl^:B&aFesO2RM[(6gn,SLe&#^#\cJ_QCQ1N>@"!4/;Rf$g#Q3H7:!/GA3YVEU?%U3Qip?lin)hHn5%@qpH%&$<3sa$.G&$j7AEX(U=YMh5),.i?:l]TMNiP6Vf_]j00QdR7Bn,EVD[=29]n(@,,17n@n:C6:+o17uNPSiN)Z--YfClc/^h5K'L;%-<?fe.&Q)/65.I1FF5C8?<@R.*Had9-kW.gjKolmPHTH38n/CjJr[0q7#:PgB7//=0khLk&VKog6T?X0KDtO`@@Rm9otb1TNF]Y?%#\XVS>0EFU_],.];=h$QB-,HAorR_j[Eeq+?`WOu[E?gnEH>1j$Vj%V%J9Rh;mO;oa<HV-em_FQF$6C.3J=j$6;h`7%=n*)LFHFo%V.BH/bHpF<8*%pJn<g6?+hc\5^,9`\W-935aF_!3`W9pCU/Tq0PAL6/&4RE4YIi?K;$2&f;^'#Z#OJ"d,7F>0C,3ogeV\)#fFrH.%6;/VN@6%qBhKZXHc,!-,&C$U!(8harlM1FYMF.G3qZR2RFCRE<0Eca^d[N]22_hr(^3q&URb:%2DbP\_!AF-N&%;QI>)@W'3ik'N%'jpJ5\mpBZ'i/aDK*]iT3/UtX*:iUahYMQ=$[YWd:la4gc(Lk"Vt5`jG2NaT":P$I"'sR2NBKrnRR/MZk&4\*F[:JFNB+*KOAMm!%RDlmuZg\[KnILd9@nM-@5k!-cV$kPrF(%r9d[h?&kdi,CO+`.93eM4#mYf!l5CANoBg,X_0Q.eW'Bb%KdC!XQ9'^A'2mSbLo>=uZ%hqch7\8r.bmG=Tn^^kl+dgn1u,Di+<oRuk;(Jq,/&s7)BTHP&<CPA7jpD]g#D?&DSa+YD)7YK\W8#QZ3PM8WgaVI;VQ4>[oQ`sNQ%N?NsR;m(O`mlQ[EfR0XW!Q+'N2,YPA(3f2\q;"Esm;=dkYb%Mu+MtW3r#VH"VGnQ*jVRuej6tWhpQ*AMTqtQ/?7e8PmqlCRoYVb5%[!-t&T^pqnkT8thi/nZ(P\o`[HYg+d<_N2NOdg3U)_q":[-nL/kM/`oCflgW$V18mjsgQab8W)V"2:U(_u\UeP53ut!:r<4`-B,m%LVqio!geDTn(L,;;h,=4q5L1rGTHM0f(d(I%KE=,F"1IO0<Fi?c/f-%mi[)TiuhhR!9h9(+D#8`+9F/\.PFsdI2`9gI#Td)/KN$S%OI!b*!ZSJIgD<a,XV=4h7j++e'Gt+fb8>Q.:lS[N'(E_/deQ+J90J+):m/n6L#bm,^P@K%(Q_g[[YYrM%^K9[s8AA0o;K=C_%?K(%RM&Ds779pAch$i3;X*Qm["jiub+:$t\A(,cL(2K0-iL9R7\'eDH0YW<O-lllI+AD*bQ>/1HdSqBVRqUN9up6SiS6*OHlh]M(Yg'C%;iVK*j(f8:4HII$,OTpr<hr<1HW6:T4Y*qk7Vq9?7GmCpTGD&'&*kFf;_Yp<cSK%<(d0,:%k*Gj5jYIK6O6KW3=d=.Vd%ni[*N")%A)dGtHF5842lX2(oT/1!lX1"/Vi;2.CMC@J3a=EF\,]K`Hohf3C":JsA&(7+'9Jssk\?Q#%p4bqqsp+sogNab%qJR,;ssI6nHNa*%BU980_LU"2KnlYOGU(P&0/a<XWY4XqG\d\I3$>Of@#n^Q4!%Rl$o8'oiNEHM9ka>lk`+QiR'%uCY0k&0?Z2`0s)V)FDJY0L"&ZYm%_URpgHd;!AaM]$rV$h:;n]"s]W5H2%bVg'J(Q^2*<&=aM^a9,sV>R1-]PfUpDanKqoB5;cqPZ<7?JnD+qa<@e(h;>,WEPp2m!2f;%kK"B2+qQ+U_okNFBoX(7o@(jQ)5b5r5=JIa-HgQfi"[?7febV,]L4SjE1*B,M>THcXSXE4fh=aas5mb_(P$VLpPc@*7$qMPpD@5V%hbLEa7Lt8_+A>rAKR%GU!f+J;m(88M;PZru@Nur.,3<a5,Af]WhcMjie]*aYU)O6F&tj^fR!,f+W?nM*M!"PMN-6FK;Q(c8NY_Vp%Pp,H/o*@,VJ,8UFFs5>Ca2GMNU)SBIT%q#-p<'dPIP1=(D\"%6g'>0#q_"m2L40Z?R*DDAob?fhiI9(0F#YnjXFf4UP)i-,c0_`j%T24>OqX`:_HnpC03OXC?'\I%aS#EFk`*Q"GP2QEB3\XmUB91`ekk@7Z/OGtFL0=aG2KK'B+E.[T=O3onAkDqpKB=Qad/^VI)bJMC%+WEd?&m0spiaFmI)+t:Xc:Q7u_L&>d:&'KiG"BkKdm]b^H>AX]R2ms"HH&ZIN#%K85n.))2!7!]3&F%m;SS?!>aoMu>cWkR$%=$\%8dBaJZ?:@41VpjOP"[D7h^-$2"k2>1\udVA'p)D]/];;/;5U;4SsMAk],473.3)YH\W+!+@]o%[5Yo5a[uI1%Y>KmPf'Z\9buaZ=%]lN"AAh*Lj=DB)dftEcP'gL'mBKP.?V.MYdK>q=o(9\g@+iY^e58R56.B#Sb@6c:mRils*1@Zj8MD/c13#nr%r0EP^?tC5tULbY\%$!.Q(TnO]!9C`)tH90]F_e,!Q7Kt/Z;6TW^fM_2]IDQiK.<o5<@MfV4'"*#g/o.F^ZOIdq,d;p'V8rJT^$<oLNWeL<-%WnTPi?e:%'=se7;,8]@DXQJe29fXFZl2!M)o2W_QV.JQfV0mdcfq7ID;BODC^%HXE&:_sIlu;IhhOF_RM2MQ?HDHhOgkQV&;/\\)`YK(Hc$T(%6&3B4[Z*kGgQmhi'-Vk-%IDt:gZ"m>/Irqmfup_c\s7@^$?,FgdZ.M_=s5*]dc7t]p8*-c./FLoI$aEc?q^<YOa!Z^bmMA`k5e76%Sej$g;W-/ES3kqrK:LQT_3Xeki*:A0XAZg'!?LjVgVC;p"juirBoeSV`FDQm!e!-TL]7gl'JKbr)OM-h%XG$TTZh>@#,]3-`@5Np%hb4"/J>I_Jd*]RDBIR:.+PdD<,?.T!/DWt8"`AqD0It,@FoY4366QkLU0FM3CLUP#Q`O"foA]aUMAHLhmuloU/s/XB'u.^\mt0G[%L;^JTqUm'n6^IZ40reD4*QIs[4T?HAcpnN[%$'`Zp:Oc@,..anKF&?_o#38O=rjVIaqp*ijbp%gV0k;`>hTurS8'jjLT`.fm.7Ke%V0tAYZu:?AK=dr]QqFEG>sK(2)b![!!cp$D5rd]D1'&KQ$Ojhm&4oYO-\q&MDcsE$l-so-4)mphnocY!ntd%[_+Q!oZYQ=H`6,T&%q?+h-nf9^A`l?d;?BPrCq$YtflN/`\%%NibT#aIU?/QZA(\khl9l[BpfH_O=%ql+/VXVsD.1-,7ZG43&ojULI=T3Ak;d^bXH"k6b%9S^:KK_uFNWk;U6j05pUQ(\1q6Ic]@]`W/%(?Y>rZ?!S]/<B2sWQGb>p8;(6pt;9nq#/m5gRjIr_90$$")A$WIiPii#Ej<(pFj*q%WS\!1.:;t)kkTDh7^M#pO5)he)PE64=qpdWd0&S+,9q7^7CS\HQ`L-Ha@M1`4Pt:7hL]f\`.F`;;X%eEc8<%TO2.<RHL16+XGWi9%I;`Zrrr-_no(d0G?3?o;a7utGE0.Q^rO:cc?FkD!j81$ss2#uYD3a8<.a>G&qQDJLH<hkDCV24I,9a`O'9K^!rE#10B4`<%(7YK/%d-lrWiX8ukJ/-m6L&k]p59f^007hK+bu5VHgm$c5dNEk^r#@YMg&dHFmD8?]?[:@@m6NdJquM'KV\<JQm^!OF+W<Z'(<f1)?]=-.%_&FiPM'<>LLu&",\?H<C;q#037q0h\T*]fh[-ZN!&EFb<>D;1>j,cbfM!+Lr5;"K;VNbH1CTo9s2NZ@]H=s4p$aFNX%RZ=1[fXC/%F@_)SrCHoQ.&bCb4@Gg;UKV>NL9#'>\\V_#LV7bM2In&WoU`&4,EVcu]N3]qCR*l/dtV3]^._/3&a;pD.R.hkWI7RCV@!nOU.jQa%Ps)QV)=ODB9rFuIp>6F`JpK0XM)f(TSqQJUYkn'DV)L?O%r.XhFf"=29.>(^Hk<5o;`TYYJX5c3>"e2oD8c96^H(^Mmqk4_?X*Pj%XC\p*#U1<a<9Tr8*RN@C&WRYO_4Z.HnOk)%ZlFpC2UY=UgjJ=u8Rs8Ipsf<:8&ZHrLeol;":h4D''<<:eb&$oCBZr9\J,s"],\8f%$]e8u#44j6TH%.J&\>?[h#_d=eaFqnQXg1>\bWGBeMGZO`O3p`Otjiec'TWkIY>h0%O0hYa;Hb(pf:Fm"X%:)$i+E7WJ'>:JIQ2\%#@u_=+2SA+_Z-!MB99%dmgD%K^@-+K@<<]Udc*PLOOi/Z.qLV):Er@Q`FO;oT"Z^PM`[O]L9l7GCN8T""[pu%6L^C3Tt=@Y_UQq2%%G`0`;N^PGEBt!]rR/c.EnHFR+[Mc-Qs5ol+^EW;^O#%a^t%V[Eb6VWiANH4`^7C"0"ZRU.hkLJG:1i'V!O6,er*D+[kVs$6VjNm%&UB(EK?G'j>,uIF>kLEHq/5<f^!p*_]MjT4qrN]jkg7;o=8D<E;:G/)9Sik&TqiQf:iggd;Eg)1%YB\/(=KnmqRWr1/185t=)Gf'%A/=mYW[q[i&%B05SuHV<Yik[7e4L<r8bImr7,*:.KHI`5R4-/,C=TQ"AP5GcOj:e]j?8qSBjb'!>YP/%N1e)$+IaGQk/Y(F(@Knt%kJr:YF[s0]2O\"7N[u@87`)CdpUW;o\6eLhYeBJLZ<El_2*&Bk-T_-CQ=Oo>-X+;UUbi:6.$G`^/2Kb)XPC&]&*i/rF!sEP7E!:@%h<Nh]OS*[fLsWDRs.3n^g.-$sQ;kZ,A%((_&I2c_USo8i;8(BT;TSDo,hY7&Hm&7?YCij<hW8L_U:6qS$uu[Z2$=GR\7.[..qL+r%8'p6T`-tG<D2__c4k6>_'mSd)pHh'b2b-G4r+U7b6N6pA2,"s^H&eI4LW>^.Juj63315Ib30sWb(WT!aW\U3%%a2upqF,!?9a-A0%``J,RoY[NPF8Ke0?;sn=W7)t_9"n*9oMER$eX*KrrhtF_%LK-]iWTmS/HMY:ZTKkF_0<U*l6s=G;A$s;YO>:LH^5V]\)UrKi'uaU%*I;Pj<S,?81Mcj-NKi`#D4'Y/,$`$1TFPRhlp?$]*jkSc1$>o^I[=d!g94+ZDB#Pp8c\GO[X&L4=&aFt[44)PIAACc0iLc<W?XSk%KS=lZ098-IHR&j-%X?]KfVZ?I1&]H?ilnu2.+4kM`3,QT%u31!>M**WXI<c<U+poHF4dA'X98ljA2<-I0-W`I>,sUPXYo^PbZfB<%FkIe]>K(*A^1^gHg'@9,9D][6f"q&N=9JloesBh-[u"IfNtldOM!lIW7$!/<@dR5IGV5E&/:kV^PfcGTL:R7cQp2TBPNn5e#/<A4%g\XoLqUhq8W^u04kDe9brP>l\Y#^>u:$G.8o=nTZGU:bqhM6-@rSCX-p:e[[!hJmRjl=khWRiDrdVVZ2;q=5o?StjA"%'E?Khsq.%LUOE!Pc$eXe)tJh#F##+_ANc',=g:ro]LXK]Xa]!dT\f=B%cV^;#q1Q7D:d6;Gq!5h"Qf@N0W%^a/fijc]'Z2G;%5D9_^$,'jQRO%qh:PY@@FV_j*\BBT9RjlD2.5iLR2,I"bFVdlS7Jk(t)H=6?s!8%M^A@J"[4kQ-k1g>ap&!9i#D&EQ,+:BuPd6*2`BA"SM"u)T%%f%K"*0n>a]ah6a.1/ED$f=nsHP4YXYMM((AJqH27\3>"n2^O=3)K)kg#-HRl2883<.RC1Hn,5.r$f[itOqYsu=/Y8^,*$njC)e=nKf%q`SP6fX6P:=j,[2ohMrI2^.5QnGh!@s*Casffn<5eET;M%Y%!]/u:s=LgHU*`a%CNcr>sqO=\a%"2<".^,'RXV._c)p)jc+FCRX/%SltF!IZOHNBeQFK^lP9j9mO":)FM!cIAA7+^VT^0O2m>BUe9J6aQ>g&Ad5!^LP882;4-am\(\paZo.oF?\od.S'"Otj04(:BLCEC%Sc[,o+0g3iR-oLHeo9tb:0^9=CB-;Gq_o:?G$[grBL>\ZV6F1?.9D:p)0.lJ.K;<u%%CDCWL!"A#HNA^)bn8"Mk1$bQ''JDrZ23W%2F>$3%K)KPFEgs6kQ"T/)L2G]-k9Ig6-V++.`cTX.#SQO7!9,/9F"Mb<f?[U,&*@4695((6Drg^Im2.;JK]s00ha\t^t`H:Z;8T^%\h`NAD<cNu"s8D/T"f.'btaq>aU/\.22@mS2H(AX<MdF)c4Q%F'Bq!!&=<pdNI`d;rC03GS_40BX**jA&q[ff:&c,WT&c+*"au1V%IW$br>eiV!SbnBTaV]b'"ebK[^/\ei/0IitJ?)-[^U2KT_t*bVB1;\m"Z%if8qKIXpZMjEL*eZln$Hj0P[HTd<J2=lchem^?PkE=%;5M<inmd''X^p[K<9JBIqDg@VmoI=]^jrrjF-t(r+_B;\AlhGN#F!l\./=llIa%8AK68SPX&_Zs_f0Q\;#EH\T.WOhFh0[0<jl'h%hGg@("M^jVd20gl&h8>E;6cN%AAqD`ecd/a5(0JHR:Jf!"Wmm%OQJC%VdYAib+5#uH4&ir5as^eID.DM0RYHI_kFM'mo6u2CnsF2%iY`.-a[ptFL)$Xb\nm&Qbk]9)G0jCEn_5K]p5)5$G++aU6#JiI,MNG213W+e5rFBBP!Iub4S[D]fX:B(jXjae0IS1^,uSt[&D9sm%7r3MFh81RrDZIG`(*SBc,X@IW#p3-DQ*cO>V]<0(HEh#)Y,6M"m_&h&($_l]k,n^JYboOLFMmot]7<bdr9)e69)<ee]Icb9NLfFq%Mc$5@`^#7=n^p6mjW`3f4-#i9o$kl)Eh4eO+t-gj6.XAM%U3%:/pR*.4Q)]*pNei?`h99!3j&*df"lU#hPF!drtreO7/H53p%h$^%qf"\:Of*\Rad>UX'(=-Uc+!5_VCo7uLOjYkmZ^(2K&$Mhs(Qu">s3&!c0i4V(&#W`[,O6C1*lH#0=-candW^3(6dRS=ul_P=n$lm%&qi.90I.W0W@;FPo3boHZ`^)^lFe(K:0+O3YRY6V<#kP)g6bgY"Jr*0&AEa_9$>.P9!CN=ArC$WddN8T#5<60fQr][Ap`+;dFJ%@%@m&27M(M,k9%'0!<`M/$018Ufom<Pg=kG()MYO",7pkYCqH&@9TY:i@,Q?`-rRT"BDLiB;6E&Nc_]^5-[KOk2b*4XHRb\7Pe.S&s%aY:1g%^XQh3:jWlNPY(E_tO)NVop[Wd_$Ws><W,'4l(]JHn2b_*99<ZYAS1K$qBe/S18%hqu&c\TFS"m`?i="DB#8k_4UZ<_A?T0%q#5MEOUCQX#fB>tmuc$:VLaBHTU#!7R,71l\Q7>Zn,;;DX#7iYX5,]IBX=;qrr%hhcKr=-_=iB/qY\rMf1JC]*ASV08dt=m^GhH'%4X>Q#K^;\SO$VLhW">!l+FdCn)gFit>k>[(IH462ZlYkC\:<f8j2*dO04K=uD=!%k1RrSt6m,O\M?bJ$;`M^skQaI\/GPM1GRS"[%X;)<]UBj7J@@f2qU`J11\&LI8)UV.e6riTR4d(?>`!=Z>C9X9fW^sqVN'RX4h`R&0e]en2.:TP]!7G]RSV=+rjTJ1=Le*>ai)ct2%j2+5MT(EE4R5(3AHO^3P?X`#O3!L!-3m;0'%^:A:U[DjGU(#+.A19Tr%H-j<@+_TQLCp+dH.B9_WZ1C"rKW15qId2UBT4Ml?/\W[%H>G#%pHhKs67VOQEAn6d<E7XaRZpfa.QV\(C=NHdBPW+XP9O)hh'+A2)Lp@!<El-5C;M&b9g8c1J=qlMWgB"Nd@);E,<#k[[-T;q%)A<f;!5,-SIFJfJ$)CV93E?']M$)!BOqj\+e04cL/%833n4#5jnXJ@5.S?!IdEKc(C>F>6qWG35FA-*t#Id(kl?_3k-1mrR7tKo_%s-"Z&pVn>'Q_o'Ycg3^5QC(?mDp1O)nNs\!)kfe[P-OUAYUWK`=[.\f2?nk(eHQfVBPJd'eQRd+c$,+^[ASU9)66PW:X4gpcZ4Q<%MidEFrOnmp>(Tra>c4P>g)(A^2npJDEOq"5i\9T>k`C9JPZ8Z!H@"Y_k6;O04TQEdF+#`s$"@J6N4q.084@iPXE@q0Xso(K7^,?i%"0qW%6_8A_]eMS;6"6I\<p!$Nr"'Y,_7i$dKJ?2'UUG#H1cMf1PV/jCa'6.=P';dUIQ<(>qtY4cSE"!Yk/Q!+U\D,t8?fsQF0W^"%0FJD"X47dk_h<?A+i'%_+\K\a&1qT!B6C><GJ)eJW3P_sdt2IN&JhE$HR_A6&AJ1!fF$9f#d_GIj"O:A.fqQk%)kh<0aj=QN!I0u%TZBaqDY7seZ'*8J?lfWnp17Z]?T,@54tZ)s7l1Fb0b.DL1M&s7$eg6o^C-a3g[>Q2'!*'SWsS1$6XJ&#p]2\UFWiD-i1S=#i8>WY%@pbMsj[N(HojS%CF,XL8LClMa(kK4e?&ZQs>TH;\iT'![4V/OB4X9/%%EIt?P0FPQX%n(aZ44^F<t8DC9:4#)bMY)?l\g_.UMLgg%($L>9YTVs*iO;DF_(["]M#a6ml%L[CZnY'k#MZ;?H91ZOO#7,3EZR$"lgT%gh%NC9DX%gGmCYtB*?)Cf=k])J@9!EM%6V"sb<0LA%g!&f.L-lG437qXE)r']Z^R.Z78,]-EcoiT<@UZ"3("LK_+a@NPKT5f`g"7@Z3UpC2`o)']@;C)F,T_\Idj"[E6`OT5Y2)CJgLtf3%?:)5clg-8J\!j3c7E0<YoWQ<&$P.i9<t.56WD\t!1)Fa0D_L\ohq/IEFL<@1Z"7m>EW[mifAeQdo\_#(<="P+)ajA@,;ftl`kE'M%^WhkQYi7fGnKg#sEH9nT)fTK:S2YRV5iTR?ZJK#X#C.1<YqLkU!2?c\oS"a7fNoRf1U-neL(!h<`;BCkQmSsV3FB?8c2*<:Na!@'%GRJVq#r@,0HE:>t!=FmM*gpXX)G'WN[;>.@-'gp%"RRTkEi&A86rIOU5^%sCjEai2o,,Jli=K<5aT3bKb^AOT?nl%14iis[HEb@I%KB]dO8;7qaV1qXtLtW?i.J$*!8IC0*d5g:[[4p/*gq=db?XrR16mH!YQUCO<\*MqmALJ?<rcGbN/KF_+%r]c+epZ$8G6q!YHs:5i%Wsb-bK'"'><a@B<.';$]=$.$`FDjRNRG8o-SlU\CpZT6uX!)ZtiOm0L/+\7Z8j!!c@)F$_<-ePL3k%\Ph&Fa,L<.lP@T7r*ZFZZ+%^T?>AG7*?J/i(Jm<WsUC5:mug_Q^&"HrI#;L\YY<kG.EnAke)62!$QUlGtYPo(0gT0VdFCI^BT(;VmdFRD0nMfl+WSE(ZLtc<$);%M?a`f$oa>Ie3]sM;%]GV$H;p>Q)F$Qis.ktls/g+_\Pg]PoZkJkT(b15[YhFm[^tr>O@PSo3$O;&-&;>B&g_Dpq?[^f1mhg*dl6X%Mm!'PmoK);&:g.s)YNC%B>3C`%U+gF75]^1/1A0a/jA`d'PZhmQjr$;LA!$`Xj/(J!ln=O`(mVdR@m!)I>qm`)kiVj7\l<C.Ftmn%n3`g,Z<(@.MSS^ggPPORfa'ue6n^RYrSHNrpV-s)B1&ufP$p_7p%:"OQ5q`N1@$GkAo%*2A<-MG&V2/JO\G/36RXqHgJsWk6N6LW%[;a#A<'7#F/5*+G&BmVXp$0iBrHBbI[7]mR(AN!-4I$rJVHr<*G>6h#HeQe'OE0m?p5&"-D?QD-e!k7!lH<F\<AQjbKJ<KmqPZlb%9/5#aFaPTl?45""G"^q;Z%RnY'](.Je[)M0[i:H527*-F2'k][2QGQ2^k;*<0nVA+dHWq[*+jVI?%i)D6FMu0\h[:ahAG^.+S6i2%Cn8lih:ZYUHJhrS&JRYOPXNuaMW5<mX2IX^n8e!@,79g[cWu*e4j$D3!3<FeA13+9T5?.BT\$s.,Tmu7:%@D4+DYt=Hp(%ffr^EP%s,uh,H6()N\r0`$e)&_##cbOB!DkRo+_/`Kkd-(-X]MQ_W33'hqM<fGObPTmOM)er`+*g4]YcE+3'R2.mVLHlPuKZ2S[5P>[t(s!%1'hTjN/8!4!9s_/]'fs^N:FVbTpJ>fpf9];nD#PIB/bEm_-HB>NHJ88nVB24L37%<MMcjE[4]OAA<@`;r=WP'.THI710$h]1X/]f%!'HC$]te>k-^%/Q_5P2p*P\/",d3*rRl6Q\[Xl"V,s>4=caPTi_^llT^dlPRe.0kP(>gUa6]ipb2*?4^!-4oSG?BdVWJXg\5FV"V%8NZpJ<m;D;#'qJ4e%H>t3<If-\OHgd5H$rt1ekj,i!baS.Er;Pn8Q);>"k#F#YoQK$'n5U!`BIu\7.`Tg>F3q*We*GH6\7BjpH=m%n['%c5(n(g.Pb^j"-QPn>bcsO)n^!3f^%D.=!fI9@p#9h'/Ik*>KVI0dPONa;?jf#qM_V68Kp#-WVn`p.\#8jg)-)d%Y8?0r,-%6%`6DJ&K'8q%lsO@$Dd,//9F=f=;d^0!m\Vk&*G$bXe"(\O2)D?J<e(X+OY$aY`gdJ7/Eq6/p.L57fTK]j;.]JH`HFmZEhlfu/1GaP%7uHu$/U^d*J;pWR3&/umed\sM+'G<g$.K,P/a*dVYmB_06*S;<N#OLS?YqCHT80/,RedH'.R`IgLclpl"AMHp3cN!&&d^c>N&4Kj%!Ek:PF9lL,'SbmV+n@&IVGG<]bmcZ7h8.C&369+rjIU`Bq[pHLjC%>OXnUXXaY*&3$V>Yk]05Cks/d$7[Z)6ZVq_Gg/"ct',)EDL%Ab!W>.[Ifkn@0dLb0:]:io(H-@k(=@C;nselm\_LYWDIoVA/slBMpm^$@^IMOX&)8/W#,.#-M!Ui0JKVFa@SDn28PO]/JR>k93Zt%9-2\6RkjIH@A7+i=H.T]SL4X$)N"iQp;1dqH=1./8-*cQ(jeDs'O/nC4Sp&a(C`Iukb(*61i@b*'\7c]j2'Bm3-k\%,1l?S)U$<L%H:354m-0mD^GFcgh?$V>8?q;4^VPRDT51H\VXsT[O[lj\@89J"ZOp6!5e,DAmLb):HUf]9M,aXd"b9ZMjs:j-JjLRc6Ls#fBste4%qaU8beouJ2b4*@+*s"b'efMXnhWFRibPh-aiA,Z`3\"\?D>H12*Su+@&;tYZ^GhGtF);@t32tAI5@kVW"&#7\ktIA4MMZ_20l9'P%=Aai9&`"FlC9(21?\j:RA^ji7%l*3>F'kC&#UC.>HTHhfJ(5@?(?3HjjY3OS>J1,Q-p+rZYS"ioEi^3YBJRgmm`VaEQMl_DXakYd%(;e?X[+5p.T+>h)_;AJqo=c#&A,n@'1jn52i(s)o0_D;#$(8o;2."#31@+^qILs_\`HtjjY8cN'KJD<X21%t&mUfh)/)\hk`,n$_%,rt*,`,1++o&kVg<4%!qqea)t;2U?S@p^:Xb"/^,C<h09b!d+[%:5E+<@#qoj3RT`^PB^)C-`kafJS.3W4&io^BMt7Nj5g1/k(Kh%fN),7,BhhX5Uo/klU<lPXHoRTaPd\!q:43Qh+@_rH@imU'9Q-Cja-C&Kal.gG[)VP"\@+tR:P%SUSn&jdqZ+'U'E^qN!ZLmX-lo/%g6M=>*:^kDX&QAn4NL>2ZQr2m\G.]h$h`!VlrM4j$rQbC<5g[L5;.Mi.(!\Ape]'J%p6!EQYef]m9*FP.NPGYZjel$HFmT)LcX)]%d1P.*>@Ya`AVSFC;)#s+LhWaK&c4S:()HLO??12l^Dn#3%Dsib+^-E4hfZ'p\=;8Qhe2Zr91^elI2m]!Fr7KSr&c39BOT"A+uT%0%MTSb1.Dpm.bb#h!K6,+59q&_bCj@ZDMm)O5(0FB+MZHtLLieA12O,]HLuhSL;q\;<Rc/p(`?<%)o,L\AA-AT&2tZ2Tlfj>DX:,L^%]qW[A$hfN=>B';/Jmr.R?npaWiH]JE(fd%oGme>l<rH9b/UL>HQ4'si5<SOFLDM.mE?bF2YYl3McDjPJWTHU_&53#"`H&(mo7&^j%pKPD0b[?/cZE!U^3b,@jir:OG7F9m.Ar$9(@oK4Zpl!-<kc5,b[<;N^(%*I$"sM&d4Gge-%Y=(WC.?g0\Xd`m4qTOY*Ft/FmEC1;%`\aq-\"I"`EZkiG\i-FT7HUrqk4.Vsqo%q_dg5i0=?fFrrH\m;ca2U`LM[62j"V+Oc3#I9O_$UM,IgB4B>o>JHpP@7r&Y>b?mo3B%`MUa@6<5]p)\LlMULi8m#JMuVe>2jfr^\Ffa-^;$=S7T>'UjNjm+\-O90qO-AJu,$\#<NBUb0NZDWu$#>A]%[o7ch-^e>#kfsGPt%fGNp[3<V2HX)bSTC0(rT3L8C$(r'k!$fU,PmG4I_8j;\2k0f!Cg5E_jVG`55Bu*s.+Y\Pn'j/%%\dL#o@MVj.adrJ@Z/6KAF/1YR%epJX*$nm4%8t3V<I#,qX&/,TadI0X3^Ej84Lkb%;'!=kZrK:%Ul<1/^K?r%!ML*`#Qf'&eW,VXZ)lS>)d3`V-JpspSGetWU=kOWj%ft5L4Z2e,jLWR;(@_g?!D/cVOdT2/O=dm0!P6PQRcrZ15r.MPXMQCj>G/^%Bad2*C4(Q;;f7(3_LGGs8l2-iSZ,0=Bk&O$A#<Q!Y%Ku3Sq(uYsiYD^dQlRH$SSgr+D/!`(<';^0tH#10Hi*@)$pEL7%hp*1i,I&*'1<a)H*j`[pL%\jZa5ClsK:V>g_5'QX9HUs+:Mlp*%6h^_-HXJ.5DY&i7dU>2tFZ9$]0beu\Va[k-E`bh/bSt9/5+^e3OtB,QBc[WY!L)nr;V<dul64+l6f^,4&.:^^7^^gI.<R8pM\<il%Np(nqTaFpf$8'WRngQ:k\*8!i3d0@:C8Gq0'@\"X+K'p(b7a<*9XhY8J%Fe(%0WX&kS4)"P%sQ&B]?sCiRW)264c(q+aa?>raf<Z%h1uacaWubF=7!cY\XMZ1H,sr.I+;96Gbd4Y?!<U[=&?qtG+U:?m;k/W/9^1`<qk8E\T5bT=,(]DA'NR@h3,S4;)j.H@+Uni"/)K)%)nDOKE3LAV0XXq]G-nUT$[?1seP\HTH?u8(RN)gDmH+i?=n5CT%+jbaMU^Cnccpc>*R$_EqTGab3DQ#q"d,Jo%pga#2o]sgW)<mI%H6&l("JRSQ(@+k-KJ^s@#%aj6m6V+]MQDcsKa%ZKP8T10!i8VZ"V=m#ffR,i\pe8A6nZEF_\u(?59e:mNXLEYJl3V7m.k5#dS"dX%*FSddlbmX.A!\BO\&unlJ\#ga#QUYU%%t_IOip#5.LR%ja5mo3Ck3ke?Q7C:MugRqD1n=f4[RoDVuLWan(>sGZ-rB#4A;g^6(I71%D!ZOqq,W_</jpb6pq<Zt#?\"A/Y's;og;Em%H`7qCkk'g!Rg)tb:i`26W+5,f*K\!dY6#+X2"a0Z&=YY"@h,<OVAif%u*Is+9PeW%=B)BU:GKsL+NeReBF[FQ3S%HO#T8+%U5kC?=(,ZJ$+k_ulLBeMOGp-++9`%A''q<f##SO"ZtNMBlBhQ#+V0XL>$Mk4D(IP+7+-1:%CiUiQ(?nmYU2f0J4Dg0u#JSXtd^'r1jp"6"FR7@PcG@%*<?WW^25mAq"+i($*;<!8I7Jd3e.H7ISn'^"2tAW2;6J:NQp8dqoYp]L%+!EruOBjrHT\cROW#=a$e&]*3NDZ^dX-MloX,\RjTb]L8-R:*q6s?11:^4UD(&#/I6gGhnTfkOL;n)PZT.a\pI'oX.F8kdVI?dHi%,p>.k\rqn2Co#cZ;pGMn)^@],4Wm:Rj,cU"<pABKi`j86ja),&G5Hm=Bj8?>7+I#h3M4D?]=^9Hdc=-#T/6tQC6lCq8:`G9TMf,\%5$2Fl)?Z\uA-"Y28JMA6USO^Pgp'?GP='$^q##*`R<)>E_e[O-gN/DK3')-S8@a6thhk50=eQAncOJ:(kX&s<b,jCRCesH;NOmlT%eT3'f:f8ScO/g`/2N<E<EsJ*Pl"\bMUCBnC1G:ZVX\Ffq<(>[]m3mA>[9&Fap)b@dZ`_%A6FU<tk(.X(KjV/7_QV"[.^UU".7NF7%6)[a"Mj\;q'P(0plthFj-V-,"8ihdPNst*[=rHnt`?<ttKLLPYrHCeA52mIp%A*S(USI/,rTu[YpR<kC#odJZNn#W!WoUIV50(1l%qN.+C0![aBKKkObOYtn`^Hf4L57TFY#M3<NP<2*VKTMej9j[uO<jQ`+p6q7jhfk\4Y%3g-p)M@fMo-:1=aW1KPE,A5K$`<V^H&kV%$lai&[4(3G#aA!Dc\6IP_+cCu_<"9Na)#<l,PJCq00Y:m2`%-B-CAIKPjOBhD@U,U+I]MWOsnF^:m+8n.#H@%^p#JQ_37@nfP([]%aCT<HHGNM:e^UJ[dP0C>(d^B_4QRP<V"i@l%'uGga(,"TR7dm+LlK64c]8Io?>EdQ^YKk=^!dJTOW;s>$q(jc.5=SuBSfqUo'DmA%Xj<%9gU'Cn_WWEt8BC`K@d@E+,j^Z[&7YCo0h<Wkp$UmE[q/G_\YUOs6HlSm6M@P>n=1b0Z9ZilXNT^5DLXS,:.>`<n';lhfcQ9W%rBUKi`oN^k`?!IoNTag<pEpu=YZ;=Cli_7f55Vsl<R[.scd!;;Ft=CL[kKV,AY$P+70!`cbQ*8q"9kjK;!SA^<cOPAemGQ5IK2&N%`qp%%27Uih82c2:EPF//UCjsc]-`ZnAWTK0',tE3V.c4pDFO6_As,QDI!bmb-D22@CgQS1Nl,+Nk?9B1=nMXRa&5k`#$@q3*]7)<%fFFm:^KT4)NA6C`9;uZoJn/;%ih@<*@;]ZUL2^_=rVF@>5A<Je"G0=R7;]0?b74:H34@)\W[nS\gd#rRaEb-4X=+_r/XnS%m0g"s%'P-X#_l/;+Xfe3JWM_uLo^Pi19'HhYoS?NsARf#;gU*BB4QjF5@)//o!+nT,bgO4*VWuiS%4Nb,.40M1\n_u4UXHA"O)9_U))DCI%M:c<2,";V]$&qS%LAc(Jf6RT?`*I9@#j.UlD/AelMhH/m*eWKV%bk6(k[Ee%c%%Q\grNT<lfMC"@bXYYWH\a\0O=^$WAojSd]1I?%^gApFO7n7(Jq)VPgIP2UI+pMe<TsO54D$ZH,8q5.lmi31W.GW'\nIIuaop5CMNM!^8R'8`qH_uYHRlC2,H3F6[:9+KLDY<+nSM^:%:?t%YIn#i-Q<RdR^8m3Fnu_WETaTiVEDl&"XAmq\V"E<n%:hDt?Hf4Y[e0K!jBVQegJSloY@t8'']uYHKl*U;QGQaOWE1I$*TTb"%#<V,1@!f-*_SSEu/gC5k\?L*^BR63J:.Hlj7aN,#+[Yoa/m&EWS86%eo+$'%NGT;C8$X*XaX#ArA3!f-"1`HMSPhWBO\Rc/LR;pn%g<?Z6:/B9`:*f[U8<GN.h\fJ>1D*7UBNJIQ;=?4_%&U27W;"r*h#r&JUuP+CqX9EK0(>3TKI)EQ*TOUn*^`s$,cae@5tE(hq,\pN%a)/ag'MF&6Xc<Ng9"^;Af>P*g4%#C$mraPq\]=F,6@'!\dN%Fm&VO-c>N$NKp.ea^p&dq]29Rt]S'>jD>3o\4)eBb=j"XUjEJKdS%\dTWil9-I,Atg<%FbOG$^#+RscUk2%=rB36R,),2'',VJZ+cA6o1=BSZ1N>RIJ;N"@agKDOj'1V5$K(>qVdnBGcB4HT!d9Of]7!j%+^BYX<ia(fAIZ,2UA/KP)CsVToPunKNm#Et(iT:mp1an%gEu:*VJ9]0?)rjA`Zj\aKrr3G2N'O%;/hK["^/.tALpSA<g'>AhNC7u%h(4J*WRX1^=Xj.&:T5/Y>-bY_GCOjRh&d)OiVaE+L`?CJK]ZL:OuV)k8K;QG,Wm997'fDbYEEQrTcciOJOH]Ia-g=kPTDP#*Q9u)%J1P)Q"AI=.YUc+b>+#\%f9MlM@N4N2/EFu!>Auu&B*CgG_9lacE+IhUj98$j2>)?(K&].Wi-6r"&T2DlHfI4c%G>61(SSb?70j93%]5FuanRN]'Ha1<lpN#Y%du:m[3Q,ZqUW9fJ17+DJO+&^6j#c8]P)UK)`5.a#!l)fAYq>>d&TC;O!F5lb)HSFLoPSf)8!Z3q?tXs!%[SK=o-:*F>(s`,*D!_c(^dq>3<Y`=296=TWTR<dbQlN'<ZsrPmLV05U-)i_J]@)WlN?L7i`EmH_:Y3hgYhA^u8Ph\gfk+u]8]?00%B,n#k,!W;ci&eQW?)tUH'\R['+F(GT4`%(5=%&%*IL^qC<?9W_E25=mn!(-[2bSq"%Ja/jiI)!+R*1gDS%9Y#]2b,shGJFtR:][j%;>"tTi[nU=6<I+8,BPd;r6*B%3NTW<epF!"Dgj?QZg_Q-SVIaqOpTn%UYY8ZgMV2-r;sbmeo9q`4gnYsNIp;D!%<;F56)16*WQG_%19(O7(37+_R-9LP:TqOXqhmHt+5Yo!_KjihEHq(j^QH+U-o_Vo-BCf+>)II'2sNYuQ,tF`]r8'`4r3J+lZ[>UOrHJ`V:Rm/qDTRY%UW_M`=Y%3_#)AO/MP+LYAPe\6"&+`2)g?dd,dLRRKb3<G[7^&n,^4urEY(3-dqRK`LD1R^#k$P.Z3INt>GK\*U<Y,a@DIA9%q$W#%Zhs1p4T=dcWVle08EKm#7Ja3C42RC#mtTUldf/p,q0oSn&D0+N<^KHU.R`d;=if%#@K$XuEiPh1`qbdCqVb`aA@C]aVGMCabmZr\%(rbAuQ\$21)q/;g=_0L79k`,JkC&(_S4$pZaXAjlb*odn'Jp])jC'A:FO.E[?&MiXGp+hn-2-FSf#t$CEbJrC("L%Hnc0QH<1@.2%KmZK5`M2N'Z\`0^p4n)`9X!qL`D79YOQeN]-$_+-$O589*2]7"aNh16;%DOVV[(X_=l.M:=KADkHfFpWX,))l)d)-^2J#2#:KXSJ%Gi<*uN";8T%ebU18H0Q1HtZqq2o_[*`b[hf`=Sl"Ho5fD&[De`$f[=^RiVn,Zdit$A+G>ZPlD\4b+$lW+nRVrImhji(\Vu]>\9*Z%n#HV+_\n'4+LbcRM0Rmdo`T'qnOa],HF3Zt/6Za=]TqNOd&o=r-F:GC`MuS?Rq,Oo!'j]:+nf.:Ch"r!M2n58aGfIEobirtD8`e^%[7oK#c%IFVpUTOA(TCs=MZ)Da@StWPfO>e@/$^916(0K_2#3MgIQ2/da%if-0gY:rXi_X<.i,`sgs/OB\?WBAXKcsM6UeLKh:c?U%Bbs?"C_&`\L!><*das\Wa#8pNb/=j0k&4S>)tHfn%/h=&,c5"^=tq&cL"tF&fo!A@A6aKCYe=+4M+$1Lg02UB`"kpj+^q=@S/&/^%JlrX)4>66Wk-RiH%?Ass'`g@Cr#cP<g+FaAb\u(Pgh:EDGK:\Th^jQMc)PfdE(eEBWdZ01^44aH[6l"dW_3qC+npHL6qu3k\TZ)'%H^@dCi0i%$0)Z1;G%kB6Qb*)$Y?c2$hPHnSRVnIR(c(q^>(G?PKDZK:BTI8VQLBq.qgO;?[WcE_ZRK5(3p]?.#SW)&)`/'s=K<lF%^kLQJZ/>!]Eh[I&!(GtP_iT3Kme%&EchY4/=Dm2`D`SQg%/Y(4PA<:XV$>B'ouj6F4hdIh_k3Ihg;YrHrM?!FB_cM&>HV\+qYHYn%_l*XspFO:t7?,kl1$:rakK+O,YdOh`@nY=Eg7e.c(0MdcDAF]4HmF[\*'n(#:<mg?`/NOD-H?#]NYqLMSXAB@7A-_3FO=U)U=^:!%!(KbXG\V<5:91BeXVXlsHIPgUL$`k[H(B9d_UQ&]0XV2O/AqRp'p%2_*89Lc#j"JrrEpg(<U*iA+VEMC;K0;^dS&:%jPd-d%kQTB%O4c`KP;fATA;3?9.1X1':?8fVY#UtWT`[qR\UeM<[1+8k-u[g>fb2F$FD(%S_2V=Sos^'%/J<-!FtG-EgjX0tG(qYZBsdYR0mriX%Tk]9lObBr_+cLEZ=I9/.,MsJJ1V$pQ'$ulPhZKt(r96C3BXF#?%\fB."!a#G7qM_`XuB?<7`IlAE`%99;n7Q`A='^cK9hoK8fQ/i%d&_Co[BZ<[VNc7[WURYe/kdgu9bTFr77+PE2T1%TH#]uf7RY.i;NK1jG**^639]Om<R1cPVmuhVPe6(TokLK=Q^MrtM5k%lm3#TS%[;OQ/'Aeu"UI/kk(O:1h')D?BKC#nm;m0)n>02cf+QnDoW60kR[V7a8Tm@:1Sebc[Y9s.F<F6KY6-K*pPbF^Kfi19T(mtU:3bD5k%M2MOp%6]:PZDqb0h_>kMCUK4/<A!+;Zfu%6V#3m7]aTC/Cb\p:$gaIaG,nO'7bj52O8gm;0IiS89*2Xp;&f[Z@R^rIkbdrch%VTo%/qSZ<3U-rFRru<O7o!t0D^7#QK$7&sOjB'rA%$cS9jB&'-/F^-j*`)Up2gkjL=N)$='lc^?e#!U%XR^Nc7dkTP[nS2KBD"Y&!%R:%L]4oR'!%M/`gB7?+_u6).8DAEQZD=,0a@8e7E^ar*3/107BuG(K-X0P1e$4@Ca)SAALkcWS_#6H3=TJ+Hds.F<umDWoicJT'10Eq%3pOEBM9-./76f.*oW3RX7grNDAo8Qn;:cASei4PG`1&H6B&dF1=^ZACle3PT,i+]l(D:7FnegtNj7eq3Od$2!D7:FA,/Bk2cSG"\%^<ZZ0kAf>FS/]L6^5V>F+'Y%b/Wl"RR$rMq!NEWe84g]B>(q&]#ek1mF+L(0U[DI6+r-,E@ZWt@l(U1UbjOF6?OIpf`04NYfk=!=%Y&Q0-'h_/#&08:/N;Y/o#R4!pV`/22^6-*"$]3DYY/>jjR4J1sh836]"g<W(fO">f*Y`7TlT\kY)qaN#XnsXCAb6LsJXW=1,CeFN%a3;fmM\mtSrZ,ds\c-Y[;:=<c[>T7I0X`?WksDU<%l57Ri*37AQs\<ro[:*^)mc<<E=E6>J&h9)G2L#BGVqef(8c&hL&DR0hBPp$%Vc:T.K1T;>LQN?:):D2nE7c3MP2^_(EacC.59?k7[<h5/P/[WTH/;;#9L.$lg$_sgdpmhqpj;=l:.I1jeA<NkpP'Mlj:EO=+=u6g%6eIgHT4p?]l/$N=O7^aTQ%H`"J3"[Li2a5\b2"JgV2YAG8.ZlWn:94_*oB9J46Ib&+Yb#N^6#46!$7U%C,;)4Lqb9V%Cu;&g72Xk%[ZF'QB</C`jN:o9O^@h</$KuSUB-JgMku@ZHnmhXgM_Wu-!Yd``U_d'D:J_N+nT0Hf_/[5Xo!TM!P\/%fR%[G'-iB]\jf;6c[H5a%Z[`]o^S*"!1V4O%k7`E<V)i,q+,aN-$>[%>h<Z5%F7\B=9_ls)dbc!J(XErAJ@WVE0c'A(Lf-K\F%6**E*-2)mN7KmHAi5?kQDGq%I@@q&2nt8U^Wq_(NODbd6JkC_+QQ]F_0=.@Rp*3W6U^k4G,G:M2J!bJ]V#+^<A6?)jfr;R5d2dMeZg#PBGh6r<jL3hdUq+-b$@p0%6-LDHq;JQQjZM1%ql5mF%Tu.Y(T2o:^%m&B;K_gZp,uWoOf:3$3i')g]2^XmUdntKFugn0D;':_QG&"ggQP,*.rt:,#IEIhj0<1c%`=GSrSgO7AX#@2EDn6c>a/Ec2Q5Xs=k8l?0j+6"BN)u2C3mYLrL^h1;Nl1SYoQA@G2'&\tIj*#OFR@@5e6oE@X'kdIo"c+@VfPU)%aMH<HD3NW?mmf]9&Eu<Gm%+H5LXL6?cY(M8%)+q="+7+/3oa)&&@J+9"&a@HMK++]ONe3nmco-$qrd]dCQQkTX)BNullbKS2tAl9%s-@HCs(tEi*E2sN=3;caRIj81%jMH7N)J"50h*i.HQI&)kY-F*KG*@WJS4&#VWdI%+GVT*mLE&`B]l9W5;%m^qBBO#IYRg*GNm`q%7\gaIlb_o5+]aB^oAd\C';7G-+tPa1@.kPd(BANY1Bd<e`SVZ$i\[9QPT#%S7u'?Rf3(>b@7_gd4io%8q7>Rhd;@3[D_?U2-?gD^%Bhmo>l$($.O``W3p"D>`/g`k0ljJ>@#_4X=6hD,:AR;JKZ8s`db,Fpr^WVeaIr5Z*\-pBg:(<oej_]g.+:j=0<Clghj:WRJ_R(&T%7DlFPm/bDI1q8'<"V/nX:$Xn4n9lPDIa39C/%bUp'q+od1M6RU!Ns\,Mn465F*^-/4"/PP>:@%g&a_4:?+F!=PpJt+Lhu+qkf86@%E_75SCaO+Ven+A3ldh;3QG<c9"+GT&Rfh.pDM0Z3^UpEpQ^HLC@@"^!a=s0gS]b(]A$<5'pu^(8dE2"3@pR2B'/BqM&R_qYB-:*,%/d-5^P]-)ORMeTAd3NqlaB003*&\[kL;'(NJJ5mM]+IaaN;<Cp^mB$g+e97r5,dfQO47Nt=_-h7Ym_)^h]VgekCQgQ*C(%A3dfFe%.$Jh@Km[rd9Q,*^g5$d5N=;;=r<[2+DT*D]&&NslncMd*!AR#S&BD]7_eCV<+)46&=rWIp;2#(%Qum5%p>WVFPAaHdAr=8lm]&X+%?=X;9_1^EY;[5.t^i"/Z1D0Mt=khb)6o5Y/["3,J?6,_^bB+(695\lCS7^9n.Z)2Hdg"ZEeK@@%[S3n:E`$")JC`.LDDtb+f7VqN%(P-W+(PU.7e+3t^(pZnGjcn4'2B66_]9%G12V'09T:LRn([j[3aUmc(D!\k.]@C0D's>C"RuqgGq_[T'%N:<FR1XgA%#GT:i'U`h%U@420c8BWT0m3'cf@/t*fEk]AR,T+oS*?Vn@15s5,+!?^.=NQj9CuqKM/98"ZJ3<qNU88#1a%bE+_>f-[h>`R#:&s(0m+d+n^*N?%1eW>9(i/e\G7Me?CD`.:c*kbeAJ`3/`1J+V@sqF`H&j\:*IFt93b4:[+eKhm7R_t+MKs2[hJ>3>G/5E)Q`q((C.)ZAf.'rnC6-Tg%qtWB,lc(n:/ShQ#*:2kKCsn_]>W1[r"4MtNNQ8J%fQ09Q=fj>cCFat#16N<M83#')=l6$a3+fj..7NQV0Eiqf8rXb(6fJM`M8,BV%Vgt#THd!_1Dgf)L?(:%@-hYC`INY&*Yn2=r(,si[T9P:bnb;X._j6D]8T$-rBE*<g;r/b7bWuH9!rRb\>]LgYHmT6;DH%X6h:L8<%nMei[nsl:e$\'sGPKkFmGIS3i^$h!i9D0*ADm/cMIcX09Pk/*h@Xp,b:==!?3](!adaYfUb,6S1(3JsF>lXi8)f[>m*jV.l10R<U%q>@b,]u3@u2f:oqa=87)3@`oZS/&JT/[<4e&ne.\YE<Bh8V:T0D\/!Bh;,'\MTBdXnVlZ0R4.qjPKGM2pZZ"?AlTqeq40kA)jKaN%&9+roEl>#'"E95*=u55D6SBJ_@fCMr:&$BM?ohI83]S-n$;^M**uDqmWU-%pi>\k=[O?hVc\:TWF"DM[=[j>%="W6!kUG8!L/lbj%BBRf3$(9KFRP#1(PB)DL<^iGEkr_L.%s]1`aUTP_<Ktj0&<Fa>57JVa(0,P0:05#;7gH4kJ?5HkQu"B;J^t`pYuo[$!#YrZ.-uHa%J=&P,Z@XcB0GRd77;+7+$H-bk.X7=_R`E?"g<?/a+SAnnq%b=QB0,."RS-JbgD3>K8^G0\"3Q<O38sbP@7b>h5WTur/>aFAnt`pI%)mPOOon6AHZ33?""`I#WQr4Se&@7U!AJm%k++F(!!;c*`@BI;(kd-f(8SGTe8E,iS,FL_'%QY,KO7Aq4!Bm)1K&YYC)Skt@9m7gG%O"\<*rNo^WC6e@O\_k9[\\lg1"0fKM-boM$/&"LbOh(2^5m/[$XHV.3%Z.5[l%SZM/_d7A?.DUWB,;*%;=!D4A8Wn,J35BrgF8"L%(rOj?bZaj;g8$YEhBjM"B9r1'`^-OIB\);k&>]<A3mh\oB:VSmgRhpAOWeZkMRF`6F[`@*QUa4Y:=4c\*@=]:FVk=bkL=CWr!o4X%nD`MmkrC:<-no0n_$K&][QWq)-b1Cm(F!r7_(.\@@a!)t\T4P4SZTn&q&o]XS)dcoKL5/oSeje-.8kqhB_c^Zo[LGaWbkj)X'E6,%&hI+oD^7Y`<_SCl1hB*TG#/gtY^KpY)0$mh)4IDK,g.ZD]u9bPXklFdk&n0QD7417r]B^o[:g6="\H@#.NJG7A&a>ZEmM#M)F.1X%Y8hUG:!=bN0!nj5A[,M::lk,?n=@IaMj?NF+[%<]GOtRi"HukMDdY%Nk?I>91ZmqMI_(U0*"VK-np=m4iIG:&VQ/+_!=3!,[T^s$%\62![%Wn:cAU2@fQ^rc[_[]i1Ecd@*\#)Ft\hAa/qrq/<4mY:C@turg[i<H.5E%cj/o1i.W.m0^='>CV2tCco\fQ%91J$95D`-7F%r-[6,s)LV9WGY(0)s+?4;2e?=IVK;I]V\KCoP'9^q##*`PRkir_n`XOj)P0B\H!g>QI7Cl/1(M2f'[YP5YC99Thm=:^/HGa\5>tu%9c97IMBuB&+c:UVWY:7a)QIedYqM.YWl%MKU>*bd\Zn9-2U.6Q/<hp+,>4H/0i)j#1C>(!co=E<n.`?o9lJi-3Y.K,=!s%W4--;K%[8a'SUgS6ENKko^*l2@`kee0K$DfnNq<n;9J/1T#'Y!lu&Dobfh^7gP,>00Bh2&P2#'%NGe[8WS@c,R9n/r8^-;2H@m-KVMlmN"[%<ot!R_<m0$f$5E4SfV$M6.%dcYTJPMrk*CYC#jT2G:Q<cjH08CqhqIl\"Rk?Gt]"h@q9q-<tGEgS%43UMi.&#V>=5,`?)4@as65H%nsD$ZoH_2.FTpauWYt9V7>5^/'\hGYO'ELOg\c:n1%SFg0BV.2g\_R"[RTp/C0C>X7HG,nW&Aa"#*STfHcRk;iN^?[&H#_3IghoK%?!!:]elB+4:S83PUCV'DgcNWJEY57f2M&^i\6T7&HJ_9]rFR&bVSrE'h7Su8Djtb&<#q"F'"8`Qp3U;.*Wi)2nn&WgJ35BW*ha<Y%BhO>R8oOgL@_s/h(?WOp=D,dsB@Tm30Lu@6H!R"1GW6h0h*J"%lGL?j(`djPP[I;PM52m(3VaR2o$-F<;LB^j9?Tgm`n<djL]cp"%I3o21%'&p^qN?US_AqDOd<?ndEOXYXX?%E]]Ah:f#?H^`c]?,tea*<?W)s(:PX"#b[5Z:<$Dp4TnJm(Y>mCK>D.g'"^7mb428Ma5%^)o=(Vg/5F>o>tP.qF.RAg'KESdS\EXGpX#i7W2qbb)_cRunPo7d0Tj0Q"p@Jb0\]`%7@QK+_a0>m_/TB/3.!--S?tgpZ'b+DI^]%?qaFsMgg6dQ)YS^87O%igkDsB_*pWFZqa`qE7p&PT"3a5j@YKHk$(jHSWZtBr/Zq9UL'lMn"B,9Zr\Nn:*aohRR1beIrX!fp(7CN%+B!!%6.0jlY2+-#%RPN/7i7rkl+aP0j3N_(QS4]%Nal0`fXNAB/fX\%[Fh/nj_@@(n9_04k,;sm!A7n"V57m2Z_l!H>4UfC`:0t^%mm\"#m"^Fq_NNa)C3/%@JZjHG\Ki<h>;Vg.(%#DU_ph3bq]Vha.bgIt-_0d%_bNiVgp0i&#Pi!3UL$Dsrh=[71rL-AO't%5-Y/_\%V(gZlmtF"Zi8:e>G;^@uOX2+1RpW"+-Z?Ilff/Ok[b7a\_>Z<?VqUUl,p\)_=A(A](@F,CmD,tU!)`Bc!`:JLBjU[2e(R+SdeisP%YQRae09*Zb"8umF8oi2MZFp4^"o[9cLC9-R.P1EMjf#F]et71q[UV>MmT*g$E\:#;7\$dL@%FPTM7FXj5B4pT@!GShH8h$?XOZ0G%(:njhLsJ/0g&J%8AF.I(<fp=Y:Jt<'>J@n`:j_[rSsDeP_ub->YeAqT=QS.:i'j-&_<uf#6r_tF)m77phH>"Fik`s`&V8deN@d_[%a9u$N.'qsS$d*oS(Hh%c+_8"!pWVM71?/Ug*RpKd\Z0)adam!#'[f+g"mX?_ClcZF)qn-330guoZ]&V^Cc1HS$^A@Ofe?S#p/r<,%,lM'rj^[r:XEnci-1,'#OH28V]roD3N42K5(Xs)Y_0mqT+@Z.r?fccmkpOe*XX%+_j!b.'\koBuQO639_6A;_YdnE1M3g<=,Y`S8%=m-ta2ko:$%Lm@5Tt"6edM2qAqYDda"`.'DP:?`8;a^f71:%%.*\8Ma6d`nJEts&d%6d]Dg!c7J.fJ=tO'.?85#fYpG/?$8<PcH6%QbkfDF<=nBr0Ql4=-a^_.QhcU;30Y"SIc7e5D87<#-9&70bN'BJOk*@djHXQ,g!Hdnf_N5,5O^kW<HWJBX!"MP(NVZ$M4(sWbcL(%>aH:WMp!+m,:tW(^6a\l`'\&D\ZrE0.faY&%$CT?>Srd]APd+k@MN'o\=LL^;<^pt+q\/Y5V0qo0NuAEd@'4a_mP-FWmWa6(ouJ$%(l_:D0Y\nClktJhTL8,#+W@F=<n2A)iCXuF0ik]^Q0q(,miQFjlpY6Fc'F`.>e`.3A>gb3mIsei0sN&SOC!Qf2kuo;E1Z@[I12ki%7KA![R"Y<omIEL`C/f6?Yq6;KOV^8+)M(.p"b]INM4f%mWmul%b_^GI^`mt;AqD0uAY]`sLin3/>[+J@U&u.71r`]Lo!ccQVWK_\%%$pCHbgt;Q5tD?fY9>_JY\$VHVNJpS7+r'OIm57YjdM8[*4m-p+2#@A<0dqVYH:4a#CY5l,Sp1KJ/:0X,"Dq7;4cc(]N/kG1m`,M%U-57NF/t\KH-u_lgkI8m=mS6NE\VZ(Vd1G?M,1CNLhrcAV7&4V<ND9hjDl:LW>O!>GqlUl0RRr6")&`t)-`'V3P$kQ[1rT!>ULQF%9r<>s>3>/\$-hF?S;+V9NOt`mm$+t_i'PgQ\]FYd%&Em"7s:,h/"a^E=9uoYaH=@0<kL=nAeJKkL1uk6>8Q,E8NlH5[6X<0%i1I0%_@W<NfX=*McnHD;Q9>1X-0jS;Xjb]T6Z_Te1:)&X@ia,88'#6_H(?bQTN<O,+h$qJ8&U_TComT0[]edIN&86+F:h*TQsC5>T;b#=%'"``01k"MX_=p5G=X2$$WYN)oGK'_cMELH]@)Z0r[Y[`E87,/;52t`pk[M:#!4H^(df?\$Y(-8[fa5Ll#T*q]':DsD+;N<g&E\1t%<Q16;m:8NL!=$8+,[-s\Nj,O1"pDJ(^NoSmCQ:P[%)KTmX**8cQP[?8nAZq2?%!Mc5nt'Z;(h^H>(G-pi5FE4T_3*2l@@fdN!cN!%7aREZ%Z5^20k7d$Rg'dX.!G&J)eLtBgP6^Y+k%EC+bC15Zt,^O0K!ZA1r&NdMmb=:^:(6Se02ZB%u)O##7[YJ"AL3:,U<h?ECC!3%W]EO-L,KD[R6ed,RtJHKfJ0Pa#uY02BC'4<g><$]25q^Bg[U1SmM&0S$]mJ4-5;Qa7Q3m*:h,`m%KJ/*1s-M"Wg09&J8Q8dpt8/d%QJk-1hhLt<!4ajH:*fABW[*eLRAZZ4I59u%(no?&93fGRofo4J^ARoP^lPu/K-"bY`LtXn^VlKJ)d(Et)RX\.Ye^%n2%"rU!o)[*%qdUun>Qaq)R$nX[LI\c3$W5D5oUFV_*M[7])V6]da^C&n#G>X]U1t#`3Lr57Pu"X\V(O):3b3eT8S#p9pZu)tgS`U2#ceAjbHoDB%0U#@g<U5KeKh#8%(*H<<U@7G6'V-<%@][T_Mb65*JFGmaQ;'a=+%m0_WPokE"1$=YVlF5?@:fKNRmdW,]apM;BRFL2F5m6U7;4cV%-P=sh[_Bs!UbU9BX(s*:\<4:UV\G0c5Zg6:Z[5fPNW^lIlOrU9qlm",'iMoKPl2UC+b6C)("Zj;1Z=1+>_2HIK\AXdgJNh>UgC\m%`Kl7_U1B'*N_m,]APAZ+>c4]0fUSZZZC]7+U3NaH7U]9UYbN%H4PRD5'N@%FiXoI<&tc)#;,f:$62MYdDG'^r[bK?4b<;KZN(L4H%kTo4$7);/,qSdKPSITl[nT528qN(+tc$#4TBCqH@<>-3:_p)'PFb\LEJ>^H77A5$)!EF6A<eH_>hY+YM25:go%F:pFXAH;__3r.s%DrFZtKG^F-o/aTp3e1s&p-g]!9I6\"U@FNT#hMWuN[3P6$-]g`Y>HiTYh2O]feQZ*(ejRtcWHZ5,EH:M&%)hkDFFHW]dP_Pn[05k%4`D-)0suiY!)uD4>4+**&uGqoTb6?:)aL^UH]C]<X8g)c%`'444GOU%Bc&BSBf@>cB=TKT%$P=nenG6ppF4H<'5;_H-Uq8@S"]+/%HHCae!\22Di!<(\Cm44tBna7I=,%Z9K#+,DpK1(K#RLufQU\:LBLh/p'Q%=AF7"Q"k\DcZG_IMU8#=PYj^nHb/19p/?sQ&)Wp^^2%rWColP8sJC9eGqOj(DLf)!UshO?\EZBLQ5e<aJ-9=nCEA;[GOqoSLsk;t^Pr=q+Z=kJe:60gnLgdJX0Jb%*#+k:!,P^=f0&/\2;2%(UUAn;?G#r6t=)DmD`C_D:9PdPdf]VWI`]h.q#N:6D!L9Us5N!P<RU'Tkb,l-91)R8BCk0F9Wb]#Z!]01"n&s;aY<%<>0&P%2)fH%aSf3t'#.K4$;=HrLHr9AMHl+oKYE$L.tWYgGn7g%mo2\%5d=ub;:!V9P]r&+I0L_@/P\X80[($bWn7Yr7Uj3)+Dte?H2<ON%q*pg%DSRe3J@7&8M,*?VrKNWm7i+-5UK@ELF(]03aa,4WD3bu](umYqoMq(41pt6'G!0-&Mb;n"d-JF@NA>f_iW4F]Luc8O.?,i7F-)/b%2nSTUW?r2GBr@2q(4I(3GZUMGI7N*?0W(`_LEf%$'-Sn*8f&u,]Wk-l$OP\K`1R->9GS@Xl:F:%]#)8cN&YhTCXUmgi<FgSFeB1C%-n!I1kIQQ)&n?Jt$ju):M9ND_BsC-aP!C.*mH_BSMLC8X+B;O`CW*k@F,X:l[I#r?D-67b+dCN(U^V,q;*a]V:rI(5&V7ouARS_&%+L)l,]/efGSf+iX4Qcm5eEma?1C^".l7.s,=n97\7llMC4;]Sq9hLhoCS>a%&rOpDMfGaJ!Y\7-TGX[W&h(mUo>PhkK=;NTcP6b_%Z_&!07jN&5:^s=+>T2q6"I'1t\1p/rJ7Jpa)EXo!(eF]a#^MhtC6Pl+6]b_a,-RYZ_Z46lL=n-sPrf7^Ub7+4N6YbkT:?8]n'CSC%8[>6gO"N%!#UU5+OAo=N$!:(lJS`V5A3^6TME>JAHo?i8\eTJ<X$UVrk<on9YVa[(AILb(6P[Yk/HAdZW"snKNh;#Y\toK)$=HWb%*d+P8(Q+5/^PX!E<bq-8UDcTNf!Ii-8F<95iffSlhVs\E<'V+de!!?ccu&r1Y-pRp@8)<?]CJF>^!l@HoT2U)ljQqD8CtQFYG`Qd%OV\\]"/E#`Tl>_`$a^b.L!U81%-mY#r*$p`*SlWZk/cIu!&U%VO2-Yt%nYgA+]er/NN(`ji?cD%MJ"2rb/Y)*#Y.:_<5\KK<:qP/%!(_RqKg[[b@k-o1+_":+U[Z8H7eJqjVp=.s['tEbp8U^8W.7)<VKaHhUZkJYSgFIKmOZr3;KMq.k2Whd^pMQqqFmY%%nI`]_2M9Q%B6.ek`lLgs7H5Xl-JO'UJk3!oHnj8dF(T85=Xo0JB>(#N]7ro!;P-,M8K=nLhh7JbRja6^>)S11-b3Vf\lV?SOD(r5k,#No6/g8Q%Jt3iA='Ar;Vd5e2"XPfl.Nfk47f#k!0,E5PB8^`3CeK$o=fF<b"r2#+G_8b3fa-mcR!?'>0+Yu6M-1/mWY^0adbTC^?&L;'O:;<:%ACd*'_K_7_T!><AieLF-B`V'aPM"X!9C!7""E!LVpU>I&fp9dq.4+m&0iS*8.uPCc5YOgbIVTP[f3.bsP"UB2,Acg>irS!+,MlHr%)arSZY,:ps&KG=qU*"shdPJgbZr*):@&sYFXC<c8<:s4Qq4-?IW$)l.;VY]GkhAJDBV]r:ZE,2p95"Z@:*:`t=]9($aEj9)[$OV6%WA!BPVEV96>`$uG7H7%;@>K$VW59r3")5#5?cuntg_K)#44?0<o!;@j4\HHR\mgq:[!H8)I`L4q6>#@NWSZTHR9(dj=f^'&A1Q3L%"_)tZTs(D]d/<H>Rb'$HC<0+EXilsG'NgZ>)6gfOLt8>e"jF'2+A*D4:jl&g3X$XHB`lq^g4D8+k\QNk2n$Cb=P&S.Je\1*n*KS`%$sdWKP^2<9muSf?qa>bWPA4+O&Z2]\\cQ`daMk\PGE*.uf&S5Q]cRn8`^Mj=(0TR!Wg-)1DWd-!X11?gK,Ym?cU/3M.k_If?!maQ%S1"6T+e:Aa;!0Zj]lIP$R7uNXl'aL90g^D@/2Rkm86]-bK4^hh7Cu41PYCQ;6]?kTBQh=F!tmI33j^dh]f*3rm]Im:J']O&.$?iQ%:_5)Z1W[5o?KU+?SjS+hJ.`qQ\]ERKhno&_h5F;Xn9(POBAk)<09h>ZBU.ZDVRFQSb+adWmSl1j9=YG3P`h#geN(#nbZ,(IXo5$b%SGOra1.k<i>T`4Zbb:nF:60M\0p<LZ&gB-RUrIM)Oksl\lQS?%m+)t?_eFuq/u1.0b\o*aV&0U<Pl`P(<$1]QGpPA4]q/r,`<HAH%gs1C@E@TfOEA0+Z+Yl#sWZ?N]cq609PIW+EU"1(Ob$`QtL@WELR2@#4pd$Z(F>Qk+i-bl(pkhU9*GH0-.L,cC9NE6=?9o%EgcWi%%?Fpaap`u$t>)Ooh;e5U'(_PK4oHLO.^sm(:+3_.n9R:AehNG8r6"GY26me,[*]M&bIreo[<Do.q0f!(FC'u(k;s/CKUKEi-!Q%eQ%4BB%G=!.VD>kG<(7aEY;iUa56''bn,7=@QXIPu$$)/#s(0ut/uE>$ceR;trW[]/<m;ZYD*+rm._-j69S9dbEc7\`E[3XLH7<[0tj%TdQPVW,%aa6NSAoe&J[^h9/X7%U3`r*oN1aX`_fV)Za@emkf%MZ6Ob6W(!Q2+GaWu;B9.ON<<LPjge\T'%(b(e'-<K!+T+i0P[/M%)4?<d#c'0tbhfA].>q^@RJ>:$Q(N%Pi'2j@Ti]pql+@)l\^/#!Hja.LLKu;E#$J\u-!#)]bKj_0fZ;3uD"fU`,i]Ork*Ykk$nOhs%]R/nU"$I2,&rE-&37G#H&J071Id8q.ehWC&,:b-`\_P,+#*I]cI>CY4RMh:p?sEjbocIXOB"8u17`Il+2/PGeTHO;u+bJ=2G/l#,%d/D)'pIPqe5(gBul<p[<3HN3i7Je+iq15g%1_:POl&(]oU9dk%$_MM:4hbS[[6:$gAr]=^=hhuOD6?j=F"rZ[f4Crso"!.b//\,D%.L\Q!AmRSLQrb"I@E;W@)UU'4@uOtZ:p%8;3*)63R^#98cR<Xe=<$Z]BQlpJ/<P66mK)\+=E-M&Ya3]#S!I4N7%YrH*Kp&Yb]Gq@%ViaC<oG#a]A2.0.R-6!kX>?1j246Qid2])Sj0DY=4!*jZFY`h*;m*Vg7>Z#T<k:gk,rZTXj..2l`?:2?VeFuLd_t&\!A0c&>rhSD%dV720;V1]g"7pIMRpP,f#bfDp)#=u[+4:t>KM#Bp9CX/u[`$m[6*!_g0J$8[2GsfVW8%i?[Vb;4:C<%'P+a:1%PO$R_Rl]!nDY-.%&#FCm"sj6\-?bT>,&]6;hS]G*]/=QdB:U]USV`<EHFRZf4@6tD`u67o:jALU]J,[a8%1c]p9l<\plRXEY*)4sWF'*hK3ojWbcj)l%:OXIoc>i4+394#[abF,(g-)22"BiX(1H^+`66!!(O:`f#T%AE197`Sa0Q'FAOqauk^.M*?\lS5UdLriB<2O7FM61O?+H$^1jEgNY%'/Su*Aul+la&(Y+bE8MHnJ!m\:Ol:8clcJeMsf#T>U)o;9RR^mbCAC#nq^=66"2^h>!-Ya8UFHL7'9PNht/a6pNX7NTprLqdE!Bf%3=_YgY$L!_oh!D.^JE6]T.jYTDVeZW@d^(s'U,14Z<%+gX]hSu;RL)Y;jTJ6l+#O!2T830X\(i`3ijJYP7G2e(l<pG0dkf'5f/uC%_[=$>2j;X5ZU!N[Ag7\s]5Y%J@@r[EOZAFN\kL'Q7uU_AaGPFH>4l@#.LRt:J#i@k*2tJ)@iIc%*Nu&KT=%;R#WjUWiS98+0E_c=%9\/,AjFm(uc9mR8cT)&CJQ0?KE#2n6aIW*Ad)O0:2mPUjfq'M$617cE!hk)L&;jNAS3"UsN#a5?fE#E["Ei"b1;jlOon:%](0(q,%/'Uhi%?d\Z\89""TNXul><jhJIT7Z;oOoe7WZ^`b>^JIh/^"3P,sYK?Er"/%)aZ920"HiO0`"Z(d99<1.6K%H5(u6o:RYRPE/+S1%H-M@h$K=h-NNiIZ'h'p2(QW8afD7Vr!6NIc:pi2iFL<:liMi=]A9c%eNKPU9EDe79niL#j*i.AuH3u^lcdSoJY;*88N$;5j?*RE^%BC,bm<('>^f*3<sm&PhRS@5C3j-dkpL>(_!YF@pI36,a"R=$lBoP>>*fGY_Sdob5OUoudf=R;D4PYU?H9%:p8VWY?AUF8M1m&kKe%cW2C'Agm3o'd'AS0rKJtl^T*E\f:./%0.]<j"s@'T0,*7P/__PLlGc+#ZtU$R0o*,AA``QR/9)TL"89FicaDpjlrU4es0^6LR50d%phC69@Tn-rfuS!nFLW+dNZ)Vj9c"!kp\9X6AL+G(C)4Te>E7;BoHO&n*D9$O`p(nF'dQm=!&,UgeKu('`BEL?CLsXP_Ic>Kh(t9B%-g[+Xc#TLi_&Q+(,X^Xb_9(%qOc)`M:?IIuY'`W#*U:cN#6]?;?AWWe"2H<X,#LI5,kL!3D1bIcaM)QNP00U>bna`hYDbGu6KYf?%Lh#Ps7Xa^/.TRD]H7fV)aH<&ChOml?l`PXqomb%lTGnH6SscUY=/oP@*CLlid`>CHK.ILSbm"XJNFk#pK%eV+7DFF1=Y//,$(O&!%_ujRVF80$%_\DrX@]%\_YM"*]I10?T5Z%m-DG5eor">0n;k?Z]9q^.2YS,l4IF':)O(K0E4S;)e6KaFm)1kRJ'$HN19qQ,rnAGZ.%N@G7/b8:;68SN`0+n%?+PjUEEnGEB]k6:(=G)T:_$4pL`895?n:?oe,.6poTFHsK#`kmEo`9&Jb(b/.2SXD,H5GPCd2Ps(NHnY`M%+?<H-5qpfi,1DjrmVJIB,q-fb#aN,U*!4!fM,]W\m?Q')J]!..cEplDLIH(flc&p>$p*KD=H:?n2/2So8\oU_E'WT.53FO4UQ+cu%N.9\tinrG;&46f-=XJe$@#p#:?V^qs<;bG$"'+$K$?TT;:K-R+e=o:^h]l:G55!@YIqD9idi3]5\`04`6/Oo+n-Ukf6^D=&4$Hci%YVJ+DJ,/ddGD]9"BiNZ!;&R#u&ke%Lf+WKT9E80Q7G*-c(]`B0=Z97;*>PDIA0KuG*QF>%Xa8t9$]M?(6;f,HW!Y!cTY;XKqGJ,+%D,%*Udn[]S8u2$i,V:kMc:PI<WHnu?4"L+uSP0\<[Z%:K10f#/Ojpg[#6:G:Y07gV#V0FN0pudgc7Y%^mF=FrfRQgPJ=T:Dg4@W,%KNcRA]drYdO91`f?M4PR9a2H5B)uS3r2)fn37LM3%'#pBKQ",6fklgSO4^ZYAASBla:HS!nY@d<"3=HWG\)E"bV[L3/Ku6BZX;Dp%R]J5gLr.kJ>)GQF9`%ClY^^2P*2]b@=!uF_eqm8;J6JI@1/X0)9$4$*VnW7*FjZ4</6Yg[DlKV$-9E=c9GL?a-B`4(D)o:m8_e`0%9H+BY`*tW!<:-+^q<[uE\YQ\[N?jta8bG`8OcmXDrJGiXj5)9`8*/k4M#-=8qCOmt+@6g#"f@^lH07bXl3@VE1^="j'U=b&rY#3;%^<R_1R:KIK/#YVd'tb4O+B.A+SkKk5>Njm%lna\jJuHCMSPum[1D-C;LC`Ol=0\V&,CV34'fl[Q:7>L(W'%/j,e!SlD,lZuN>1Kf%=Mo0n27^0H.As*todSJP[kZPpGd2PmU)isC'[hcm-*`B(09uf/I^G2H<`HUppNf`7PA?\I#Qhkr^Q3W--f65^)P#R-AaA(h?/!<p%?6acUiIj\-]R=j3BVt)hT]G>kUXsX6fgu87PJt"sLTsfAd+l$W037:p;S:&\lmr6==USTN-n=a-Cio-RBp'7pL*m*b$F"03>f,rZ%=`9Yd2'Or7VR-s0#Vte$9sIqcX?c.a1s*bPDDDEXRVNnGh)g=(LsUH9g?Yk$CM56'b.(W([c+B6iT+f*fp-?tX'3_Za30*GT$!(q%j\V9W;FjQs(fG.NGutn4[q*F(Tmoog^7B#'<a!creHFmhKKS/<7MN8*_3oq9-XX>Mj&?Sb0M9">($s(b7S4HMQK!DDEK%\?*rJ&^%4G9bb]?:4PaP^M*PI!u$eEY=Um1uMb&fOC5f3tZK+N-;hp:'YMM@!J7ZC/]e/``OJJJ,XVk=&BQUp[So,G-r&+a$K),.Vp3.$4J\%]Vfs%k8k>j$2?2Q:WR@/&VojR(hIHMc8@b*hT-cHj0/-%HXecTbspBo%kY^X_+LRq<Am0kWAHi1^&kl%0*QJ9pNUOr;4%jBV1Eqb%#ginTga3"pfF[3MJiWAN[Mp4>?2"D74e=)Y0#E+-I]6X83@]]J1jC-r_.0XGaX?lg6U63jo0=-:h7^$gCWkD[NPQ.&ho91V`."Ae%,HOSb=GKsOo^FZnp=h%1!p3%)a>PC+LtNg*-9<ff,T<nKK@qMC6?&j,Al[?P-EUlgFDO(<D]p*/5%#LE8k-O'(t`I?"f[2^_ggU"%RL"S6,=Z'p",be"QajJt9s_Hq=*EB@,?U1BiaZ(&7a<(2/'%+tM%QP/6AT]*pLG(BbMd$qJ<+;WFWc-u8B?R$pP7nd?@pr1/ZrmX%p[DlTRn<P7W+T'6_\,6DW%$2][^COP0UgX)283N%B+V:OC=6U_P.L((qE,?PH.]_MN7?WQn\>d3Z[Q]uWj7tRV5u/KcK?\6+dR_>%7'iGtUTF6\qPT:V4=G#H-gR`ncQ2#A=*F6BP7bub5$bUf$S9<ej(WY;=Oh8$5Ga8e$f?`W[^!&60n&D5D4s;=#c)U9>u_E.eB?0$%qF<7,C7A"_FZrY:>1cXQD3JHQl'f29ePQT`l@`]iXG53D8(5bWbrd_m(j67/9"&08d&iBiM0E2T?C/O9lS+SrWSH2,erJum8<ZO"%Ad$odk6Op!2KUPW62#rh.X3k8=lrBJ:$]J*f+49A(S.Nh[%^FX5G,iF$34^s,pBg:0ihjhdUGQX!bDA[%WBROcl!oJ2?<.0b\U=2%#)t@?Ym0R2fYsO?4Q?ho6<pjdOGLR!6rYcEMLF`?*2Oeuiu3Y-I-q`[nV*>q811*I1d]9o?r(o,*ju-O6>tiVXEMWq-c_CN1?A<6%YX;l54KI@+%;.Zln/c($Hjo,5@Vq5RB7I,WmR*hCRmD3A0h@.n+J211r0D5LE]`"&-$$L9G;J]@hig1[c'N/L_IgkpD3M<UO?$0Z%3gKp\[m_J&D^sm$p0bkaVjOcHof/EGRES=TC`5A^@`=:HLM0pr,jogm<)Mk*]J`8/TpF?IVPhROEN3?7UfqGJ3P3t,AJlAOauc*U%"NdA`B3oAm>B7.5#.1^(i6h(AdRf#NQK"^dR#%%QYq9bN6dVZSDa3>q%gg$T0SM[,A],Y_je(i,Hc-V+1N,Z$E"]W^G_i#%KUMlM%O/TrqG-f"T(u0!qfYBh^AP%%.EPmi>c?AiBb/L9'Jgj8aLGedAR8uEQBXAfqZ=8p<.n#KCg&O3f&ufP.'/%[d6P"I7W[FKe&@U,H%==W^:1"Vr)lE<RubjSO>RoGl42lo1TMWC$oA>h`3&hE)QBr>E&_C#*%,gUd5Sd2MB@Pp"J,[67cbu7do_Ym#H%J]ErSO5<c*J(r=%rA;ijeWoKJ7dSYd]ap526K")<B5[Rs9K;"EC>DP[5&JK$31@F<U_[glJ8I2:@9@09lslpV(f5pN\;rMtX9V>=gD:''^ZQjHD;^_T%;.]RdLjJ(T7QpLU(9M+&/<lo,jesM^ktfEF2p`u-A$NLt%g@g/D)I@F2EB&^W>%.8\J%mCP..oR,JKD);+@(u^?+`Q/b^t(c]]E.%CUYW')DSHoI?\_Tpa76/5[8#>13ke"Da$89rKBi[B'Dunl?5RUYRed[#!O';US^1=T`ZZ?Wb?jVq88'HSBZ6A5,"KICjYe%+Tjl;%3e1!3Z!%!0_a:MePBG"&[CE>\-Z47]$2"I#rbO[aYQqp76l9">L*.N1VLg4Ij4+LoHn^\#'aZp1,\>3`qL1u-l>r]32EMi!=k,E3%j+pHCmGg7$gHGBm@qNnLP`(lH=T2bKo4Y6IT>GWAEU\]neKA`E/"K#:b1ZU.B\BI@6Q'LIA3"&/'X@8EIVMRbC(@rGIp'H4F\QS6%F]cu,$7L*$=%KB.Z:6sJ:o#RHg6*$Ba=Pb)'IOVN'l2A2T80-C#pp%AOGT*YL]XD!I5Kp*>t`/a`9=^aN<1[Wkm5Qp+hed]8g?mL%IV&adJUY%.%tJ,\h2W)NaU(['UliTnCV3,?C*R+^g%WYGZ;*A!cmse)AY'cOB1h0+8_21DKbX[2'47Y8;+cj#ij>:(bS%p<9FJ,B%-,g_`&aKp68kF"aA_NCh%>*"7U'u/fDWp_=s5?,H;E8;'@)5cJkM)o*IP.B=bt&ZJ@J]N_ZAnK4FD%2g=6!!%M)]!lDo\q0+YI]B%ZZrpS5Af^)pgWp`_FSh(^1,TW>VBpE&X//P6-9E9WrB/\s,XdO,3^DtgaQ_fX=t&?]6uYQ^7X&NDA*tb3*DRBH6"4[p9RF1p[Pfo%7LY--R(c!)X3.q*q[8+Sd[=O<(.1R,T_87:mp:Z9\q=KPOg?5kR"XGl;(/Ot=O3jbAOq7[41c&uBg@n7-A8tk0V]EHos-K1O+ifm%TK"/"NO9+Mg5ON#&?=b6/p]WY$,%b.e$q:K0EE@i&&,dUTr6ahoKu^H,(:-_;XDq`(s==NKNIIEVq";"S%=V*4.!@UM^Z]?8;1JY%<1N:3HtkL%U/Fq:?cU4;>doZ(=Zr-\i=H($#0:[D`[[d+M,<3K-$oGWMB2;*nolJ#[,(:!SkL:qM#Xsg9"q%GM'bnd@t:L+'@2nR%"S8V5$?)*)&1/5IT%k1Vk3@Q<#dS?XEp5CcB3f0#4D/:qK`mL3]_.P[b/p+*VQJJ(pH>92U8&8,1u(NcE`q#-6co37Z76_GFl5"d%j"qnnnRArC'#?jT)G+0_M"p$J(mbooNbP;G)TrU%cU1dAmE])/LGDDtrQ0##P8sOQeVRCF;'8e'%$dA$WVluR#8Z:`,QtNPRnOOa%>dBdZ!,-qNP>8:3MC9bMT@_dOf@1q$Q\!uIXK(?WObB[%eS:>'Z21'GaLE@o$VV=?@8O!AW>;3T^;9Qc5UomR>YjoM=@`k*!*"EP%[Zs3[:c>XRo!??(>>8=t^^\MWS>St+-3>I5;99.:0uV\[/sDpZEOR.P_2mmtfef6Q@TGfi@c(j$;mV]8cocX$Eu;c%s,nnL#!U+@%h=LEi0O_7WOg&f]dtR]=0kuP@('l2._HJGZ2=\k8[.1bIMJ8YJlkC;6$PR",OiBVH1NU/`^Y*E`%p"6[pEcJ?\\S*e,r=;n,Qs96%+_A3aTPW29,;K)Xl#u#W'*NBc4a2@;F'H!:m?N)spH$6Ai3-38nl4Wur8oR-;+$9hMcO7H6mRLkpBG(I@<2/[7mm(?ikJou5WgBW%D\D*Wbg0Sh)&9G@^!4K0ZJ+X6,.Egp#Rr\C*R9tk&&^o43gR/nf.3?EaPYPB7l9-j3HH&@beijCBJsEA(GaV5/l\VNO#5$b,-?<=%X"@AHpuJa<_D=3)rNsYQDB[mcc)!U?EtY/j$q=S)6Fk*'#fVTfjNBXGM2\jm4k8Y!5V7CR'?.#'GG0:TSn\_E$'I4g-;>YgC51cd%H-Z`]E8GC.S50ZXn;M&1Y1@)Vi2MGEd33%f`CJ`7$q`q[(<l!uGK$7+-Gu).]u/Qt_<c1=8KLJdShhjWI*UImDe*ongN''Fg]&&u%Q:0V>`Mk5G<8Y_'XZ9GRnU0W[Xo!3%`H<#c;Xj@5E.R:B8>s3G:c1+o]G9'UPn\s`?]Lc:ghn)MgNi%#g3i3MP7YXMl]S&U4,-$M%Ge3EnG4&,5Z]Fi_CVoH!445t\6F&k?q5ktCc;p(_K$A[g&Xm60(0BB$]BL*'4*MM@,\H+'p_X+f_V1%'4YU[,a\1q#Ap+\&.?_W>%ChZ$D>VnbaGOC^GV9NNa0<l6pbR\31H\7\76qHU@itAE)fR=tHUUn3Oru9^kcM//K_np_lr`2]m1JL0OH]\.WQrebS_hq%aHs]Eh%?^d8,O6M1X&$n^r\Vs>Bf,3q,.Hc'N,^!ms/1W]qA>MQD.X=J,4^2pp3t?[/m-$D*($7d2/PY?t[$"ElA$+hP8/WK"(5grUep!3U%I1o$K(Lhk^Ei#Qb)N#,ZqjU=d2a3RACXjotWJVk1#@lQ\;[r>mAi?(;=fj>?etI\Xgak;<2PZ3??XIf21su(V&MK'TR?gL@Kr=!Z%?D@qB-j\pU53CkS>1ph1a#,023)OKBjVZ2!MqQj,@`Tr'I.c>+HNCL+5J.e=6>8ulo:QIW2&#$3??)A)PPZ`+>!.o)Ukbgq;*:'O%3:76h,[#fE#g4C'Q6skOQatNX5RMiP&I*\9eM(j._KCnF!QAobj$P,1L#dL!cflNkDm\k#%4ad"<s%(rSlF_1h)PfFgJB/d9d;@/%ED*\J"t?8[EjAgQZYAu9FcIO'IEW84gcfB=*"+V-dm*jV/_G-Uo5m?Iq!)M@1#>QQp:(oC_tl.aWGHlrfH<Kd]TCR"*>n"_6L]P8%%]Q7X$$.5geq/!n`bU@hfQ=H0-tY#8N'$J'=OhbPHmeS60%.X]g!BZR:517P^cm1:6B^hR/=csHR-F&e2GC=\<ZpD#@KG4l>9Z9;%Uc!@U6Vn'9qOF)iqU$e4Z5V,K=90LOCKG$$E/\<t2ipTWA<mqW%:#5'fj@*KP`!p8WDq^A5<Na><>-Za?:-TDLAaD>8;0f$^rZ#]%9h9gl8B,7$<H[K+&<Sh/1Xc!I`H(Sk"HnNePgX:#&kLd68VES[p)OppD!.k'>4XJT'BTI1F5:e%Q\UK@;)C")q<Rp25M2E0!G7>q%:Zfn4Z^>4=;#BQ%J@i1tcNU#m;T2,=N`B.-]O*A6oJe=BafZidN6i)e?)nec9,RBmc;s^._h?>F6:bGqW@2m\5Wcfa,]3E9Gi+>)%TjY2jN?(IhC=;/.TkJ;Wq74DG#g$lQ1C:9-EeT?D81P:F#-W\eZOmS+Yt"sM&V/0tS?CK&@+sntQHRIV?7:RTl<Hh!(5FSrj9Vq8%'?BS#'OVYS87#XfN>`-eUBPde>t5l?9iilKZ(%U3mRN?S/a%UKC-CBooG4^TWZ[S$g`$>q4dZld=$R_&HS?-p/6^#n1^W29MaC,f%bal.1"$3XQ'*]o3I*CE(_0fR83l'qk%V5%C+BW)L=F+16j;Z5KSXfsFR34SelAJ-Wisj.j]s>L)-&a%Z6BqLA*5l=!Qi1b2,qRHu%Nph<`;@8&@_UT1-#!Y!i.$'#DMh^Di^(Tf)!2CTj@m!ak/AhSV-8ZSm=SB6kk;EjKQbAGnq"PU8@EIPMZB6?c#IEg)A]EBQ*Z#U_%he@BH,DqET60]H`>saaLb627t+H*"Ik:'pp?eQ)NKf&IL?=S%H1#-kV6K<#tNUM\F6FZMHUjs>MbZ1`b3uqQeS!D^_hrT`5m'>-$%;m(H?ed;WaTaP18iHM*Q]a&WOnB)p*-,H#jGEg)ds7qn#P(*GomR^4YB7b1DmU91a>#@@ZLN\IBVN;Ul"%cUZH;]3dKRmIScshEP%m_=#[PidYRUfOO[^O^)N.m5`$b#Bm'en[n9b;KQS]R+o:P\mBD9<COUK,Lg]jd!X*PW0nVs!/?bU>HH$KVFtkF@[\ncf*="eN#^+%%JH_*R#Q/Z6_nU4MaG0$1*aIU`DhqR5i?A:4%i1tdMK7V!KH_<"$1\G"M#L&hipL.!)[rPMeZU$L"'1pWAI2\+'h:V(mEmXe+\_Q%%i19K_WLR!#)br4M4TdD,X:TKkF`F$ekJ*lDpcE#C?pgp#V^Upl4O!S1na'2>0ecp?e:<Li.l.I7SM=2ULq*pcr`cV^"_FE[<hIN%Y5;QW'-n%1C$uX,a)31TSOA2c^IQYV''?O4]Gu/L8Eq'XiV.7U.bEQBZ)0.P`[jXlMuH$th+"7R4Jab?:llSG0hP_3oXn=rQY0+A%+IMe[0ZV.pfg##`1r^t\K^kA9;PotF/b6q_=LX^0>+)h9r-Hn9/PRp)61itbq]5UEZ%3l48!PFQK)qI]:dZ*$&o1)V!/2sD*TAJ_%j34rA[@iPB:R1`V5>2aN<FVHW+ccA=Gs#fV@*8u"%1;rVP>Y*AA=;89cMak]#AsG/hUXO3/k&9pG,S>4A.]aE7bY5O'27[$*..5f%/'HC)S<P](*9%dDm<7'/K+r2maZgQ=l,jr08hQ.\AugK%:SK=rWs!r1%kDj6IE8i9##*cR8<6'ec/U<\Ws<\D3JhebbN)h(p?3(D%G&"rY!\;8=qq6S,VEl<\4;=SH)o7=&]JbYr\ekh<V04_b4.'i9G6E?O8<5*nlu."[E>gXt[O'0"lP%Cs_rV?JRdTVe&prX(l&Kug%CZPsn4;9;'S%Ce==Z#X&`1JkZaq0XT]g0[IXpme:#fA37Tt<1W:h!;UrGTNdbF,V.J9F9_pp6S!dF=1SiiE`[qm7#84d(@]0F/W2%H]!u=^!L4_hH/R3<:E=`"GmlM^J[G*0h/WQR#++TaD#@:i`[>d#R*U_<<5E.->J*^&KN'%5sU,')Iq#N++#%6$!5Y4kto;OPC3hT%]O=*8)I_/T_%ra2Ad^4k^P\W#QtF9inDo/d3!"r&>?OB;Z>aOPi%-?T=j"@:KQC<c'l%S,8Io!"=VD>eGZ;%jHjEh/jq>f4&of]G%-WSIMpGb97_(QcYC)%?;n5ei?DL%6k#\iloF`5^JEi?LLRDfVX&r^[#(FPf=@b7lIm[!4J:=&<,/4!Nli$-XIK]SNWRkk&2n7!E8%K7tKm$@fcW/J&J!rqWtRElN-t2JK;b+_'eOG@(=Fm+pKUTT_s0ISIbbeV0m.U^6,cS*)&?G&p6``Om@*DkBbLbbhnI"d)cn`I]Bd%#sG%`=%d9B0hj/PgCT=o:adbHTQd*iDDbo&8ofN>ZslPQKCg%]+m_I%4^E@d%WYupqr"&0+sY+S#jWtMX"AU5li>4q;Bj,O<e@O$%8;giVTj//JdAWW#9(4]19RA2-Ni+-)<5k*uiuca$)Z`pt6o;sC[R>G+JGRefVEW=^'F5;7VrMGB)Ti<gK;iKS2dg'2Y%rcXRuub%%UY.o]"C"CXVf7(-ENs,5F@QmoC@!Ct/:t7(^"]KX?%_mqOS12$XS3*Zo.#WBd=dgGEp\3<"O,K"k'9%.Zdq<4U-a&!q?XW'd(GI'%`f[EgQgdhYQq(DDGol\W^N4DM#^+0n5W.qdFd@?t)dq?c.ArA.q/4NJ7]2\b/]@=hUhHdr[G27$k63PD7V!lDc+gp;M8BkOEd*p\%O-gDh'jd^(=q1$h+_tAM$E$WeW#Y2*L*6Qpp$*Q$+Gd)9WO+I4U0n<BP8Hb8'7r;?_HLM"ppk+"J2BVg`uLe_Ljc'@%;45P0X@[)%buI`YMQr;,T5m>0DGeVI^PD&AUUfE>R3Gq%=m58q$Cm5njF-aiLP(5lF)^B`iBYVp0_t2Lqit/6b4r=G)=BaAkB)(-8DNa;>9Y0K%3[<'r<,):N_&jfaSDFs6a<QT>9'd3lW"5/0_9q8_9$E<Wl?6ZcpRPGWG7M3CcbB?@)T8uSCl\139-$+"_8a#84&JAqaBlmjEI093%oA9:hX4'^tGeE8Ul82$Q+cN)#!n3!@+]F/<2IeoUWk;g0Ln)@L+Q^(@!Fk\U_,q%Q.sA,('O%+@WIJWS^]Ir1%-^bf(eg)9"g>0C%8Hp'bPk9s.j4I%fcu23?.K`e\(V1YL0Nd[>GWA&<4Un.WlI>V*3^TOg/o3-]HeUj&gA*p`fm8qYXm>\[cfYk8QMJ"I<a`PYFK?%B%,2Qg=;iZLuD+XMIEe7%bm1c+H(48d)d`1u`kn7]pr:-UsE+_kp6k\@U`4&YJBR#.C5:;,W=cK_Ni]oj-Mo*`Y\nstQT,l><Gm@7G%F+(VB+IL*R>X1[rl:[-2]#.a*kVg<8nGK:\97\U$;K@Ib88@5Cnl7VI'O:^iI)"eT)Yo1epB;>h?6R\PcoFe9+?$.)&o&rLnj7\0%f6;UVY!BQ1$NBk7$_p\i)rN_*&X,t,*nN[9!)J%N7V!a&\>W6NHgcbZ'MpT=G?p#W75P0b`QUp2#O"/d8Z9#$(,K9,%4Eh8)6X#D%I6!Q;cli^.kthtS)uOJhII-/_;>m076rQKJ-KSF=&iXr'*GTC:oi[RWN&L@^KOACVL`:jVak2CWrIs;N[Zm6Y-)@Ztctdg2=T"5q%R[<<*+0q92XFd*-H\Y<+dnQBd[,"ij(pQ/o"G+'[&fdljg%D9Zc9PF:W/P'#T8"j3`G7J-=U7-^5([1Zk:)Z6j[r+/V%uZ6JaSUH%OF2-QGWLe;DF'7lenU1CL`1#ET+r*iG+A6W-EEj3$)s_Ckk>^F;1u$*`N7(+0SQHP<Q?2nV8bJT=;gSs\1U\DN-SQ7Bi?:j79D)?%q2fY>IY=m!FZH]b>e5Uc5_i3RqAX:CQmjdOV"SF.4$7)Y;a@?,bZm:.j(n\>NM&T]Z?YVBk4e]#WcFi`SuNVGhL@"X[Mm;@Z+?,B%5$kq8#\,h"S:=]89oMB"F!];W&]uSo+oAf(DPKP.T2gK6A0r@g+Aj0te14U)n<h]G`>'G%,SP]JW>s%2*$H0"T&P@U"?]Sq3r?A[%U(U_+<MkPirs1r;!j><_K;&+!&V?FWmN?=kJ5)J=bsZ#+IaAOVR#r5jiloR?Ph)ffkat#D=fpZ-aL>'8),Ue-qg#3ql-SQd'r6]d%63ttZ1oo?+X/CcffT<0,o.B>4@9bC<TOr^"`\/OkpsufPB119s@@0Fd.!$4*PNB$qk1=?/4[^<j,]E,"6`:MtUW(i3<L-LlGU8,_%`<rlJ>`]Xp+Z\Lfl]))KO_IJ0g<NG3g;Gh^>Bo`cH,M1hlakHA[#%`o+d=k_o'c82Vf6+U%G>%P+e_oY71t<X.hRhbX+W.8b.\"\%D?UoWMr_IT"a9O+(tt%!o#GFB8h3Oq]opDcolQ&ugi.a9fPrbTb7e)[l&Ce4Z0_)TDP/`MF<W\Up$F@.VjDN1TFCn=HI\BNV?0=C%$cppeP:c*M-IpHf34(`s(^,O_&B.b=Q!bb=G=K#2YS1[1#c2iZEMM&0/!N.RX;snElYens!eM@^K1[.+`%?1"24@C$'^s@f]e4.?%3VeU*/@6S8%"_V!PQs]q5Y\&H.MV$=f-48U[<ArAPas3e7=WCbf@2*M(3,B,HFRpheg2#:l?0#S9qbUO!`Tk@W1#lhE/FsS8bN0S%+tB@kEcZU[?V#BF+UbBIi`X#5eCCq]?1NY2^pns#>aJ2R#3ROF)7ip<I<YcWY7]Bq>)aQ&r"4F:1kJ>#Yft0l`l_@NYda!g$f*/!%_%bnGG4cVk7cr@K_q$i4#O?:i86#q(6#+:1edt;"F>mY$C!9_K&2-eNBi*d;AOL+^`kK(fk4U^L55G9.Pn/[;^E^8drD3Zj#Qu)#%\_>r&9o!4o4%^P^Jl+<uW:]9Dq]cZjc'b^'^hoq7_<dge@>*)Fngos3=r.5fK5L?ZZ6QnRER`QDLoTr3c-)V*TAoc./)Gqhq_]om%C>frg2>N:hg?e.A';;).O;"WT%dtG,+To0pme$1@PZTh1I\BEF,+5YLNLI1Xg2V/+XC@UG@(2o4mMtNs>62kr'b^2d\bj1sa7Q")%<c-HLQ#e$Oh+aoMLH=+Ug?gC$9('./&J=17Q.BO^eW$#k$9L?Bn'kVe8#'<]kg9b"roJd',`1#V&Y+ReE%WDifH2n%Tm._4Y8Q,=%U)!?c$Zp+`WA?ZR[M`0,)BGH-?pp%7S5F?#>f8/7/2Oo\/anDeWt`87fnjgo&q62^\ZDFZ]:4[#^uT7^D>F28F$bbY(_oX=+R^(c%`\\)Z.'"jMpo^=`j=3dQo?$:&+J9nfk*P..cZ.SQ.=b]-@%3rd@f*HTq0&<!N'<+^6.C.$<tq,FgNhb*X)``Wl12Qi+nM64C,N0W%p)GTbBu[=K<EqOXjC"eA>`MUNb:s]*rg)$@[,3YiX#d28V(J-N+dZJC\EZkX;8:bl#,rgcBO@Br2ki^TO6OGR6^\:I*h:7rh(-F2%W%s5j-OpQ:PE@pOU="\1OdS]"ouod^R"ike?^>(\nXHQ#2i&h56F\pkB2]YbZ.k'[NRV_r&4.e^Vf+Tb_8Y.Z8D%[c\)\>uCpLp4%oa3Y73FT3iOe,.19/R?/U02]gn>toM7\?tXTqD4K?7aj>+</an90htUeWXRpUjc;7=CG_=Ta<!EdO_r@M_iO=IZUpccGf;t\@@e/%0rAX(<m8\[&<`Pl4NZiR:Q0XYiNa#:m=uP@jOE8TiS$KV8\FK5G"63rr#08Z6l/Hs;`(fI:WnJSWkrQk(o>(JG\Q-Fi[kpekA4_I%U2aqDAf+^\F6L\db&4UC<&G%@9Un'YKg=4j^7M8?c(Afm>%[tDkohG_Z@\<NdN,&Wn6`_T/urd`PhXa"-6>#L0b-"YHHf<qe=D62%OS>!O:,4kMG<%.CrLLCKTeM*--jRrL0Agif@1M]Jg-LOC0&_`?5hI5(GHr`T.qaqG;Z.s/6E+J$H]"jpRTZttHUa\uEk`Wb6$RI1%ek3%F+TXdJ-5r#TeT8<lmD/)4il(XbE/5DdX0^C7]6?IRXu+_2gRk5j'q@t-^DoDm"e7"i0^TSu[,hn$#E3UXlO:nH*+ZV5r@3JJ%>TqRl5%O5JesE-[T@<MOaWYZ-"C@1Y"'I-6!OOfXhY(AMG9rsS2"puGc#BoHpLN2YrDY2s^3*?LNt\U_434E!h6&Mjd./csXSb2d%O?gm"h]ma@bIR+IMfLVI[7;Q`4Q[FT:dX=:;t)YQF6Y`DlDab6XNk5Z<RASRgp#t(TNb>f@/\VS;F^<OBP4`8SXE;_6FWUJZ'FP&%k*Dn/<+g;s];-]&5Loq7P).#tb/rE&_nVuQS(U*HSI*kO'OnM;QOTk=PCfR],+rOJe*%F>E3dA1kCSniK*=$cC59O66Ko$6VaXJ_%g3p27D'P>Sn1.-t.+tHVIa!(6mEUJY&Rkl"Z5c;e?tQY,fFI$@@>(1TV<YjMHr2BPnPEEO8I0=/O>VfY*%jNcQpaX;JRmR07.FU?%IcabP`47#F*s7:*P&U(,5mN'0;!Y3oh:"QJ_nJb`_LMb37G.`7@?[K-)2=/OE$hd:7c4AI:^DB]\m'ML?>*VsN/6c?^5\K`bd0V_%5(k7.WG8#pDD"/pnm&>CB$LX,M,8VtfC:QZIn3F(\?$8Ma.=o>@q1s<_2^tCSeQku'Y%0gcl`LmJFYG[MP("U/O2ae4I=Q4!bmZW%R*d$]eH3aN\Lc%nbe_s>YiDi?iH$G6`0KA'qdhcJ,;ph3,&^Wb)#K\Q_E97`5%5eka@6qj;(!:ALL''_g*`2E3?IP%;!%%TIZ1!d%.KS/LD8H#nRAJVs5roR_:0I]u'NS9XR>CCi]imrZZ"TUEJbYBGnHF5u1j"Sh[LW<>L/EOUF;hr\:a;]gC_c(F#)`n$9TAcpWTU.^%R,80KTO8c!,8Wj40_Bf'E_q?(B(F$*0He<ZK[l+gJ,3LDA%n'D9d!8+,j/\((iWRurX-3NXof:Si,DQc@\VLpD,Mj26U8?`rhn?7%\sO=LSQ\:=Rq#E`_kS:Qo""e[4*^HM&r^jAZN'IraL74/"4fMq/"N')-#Vf4IsL_^%eQuJ':mF6W`?ni><&P`/R)St;M@R_2iEcS%QCWZHJS4nPbeRa5fA(t,[YU`[P+eek#>WPWTm@h8)$gf\3q$MP35K5l]LT=9QqS#5E6&C6nQ^nuM%@^mn#RXE8nm5X3*AP--d=rd%7m[k\I!IdQPXLrXd8.`d-Glcm4I-H3hgEU]e6;6fkOX+(342Q*ak*i"R`#Pq4[_]:f')`#Ml)q];4:.5':]1W"o\"k5pDj&@XNR3%i_1Vql8g,h7OHR9nL`qZkSHelaNLt25o;6H0PVMfpp<dqent@NGGZubM(r%k"QA)$<DkA5#e/c2s5L7G7n?tBZK^F(jUq^'$9jWZ%6!CsgCIBA10!sY+E8,c&"R-m5_K72`+=r8EgJ#W-+[3uY05KLr.*1Do_K?M3VF/^q<`(o(/[W'\qrHR4=>_eUC+kM((W_$.[UY6S%%#%=J#K9Kgh!L*+)Fs(^g*FOLF@)L!\Hd%YY4`feOF`jq5_.`bNg!E'::YM#KHa18%BmS`/(In&d?dGVY3F;(5JU[@B<4[T'XF`/%^EeuML.UPn7O36g%XcQh`[FS`WC/AJC4tReI+n=dR\L]B;F<m.5fdink`[FkGBC"kE]ja3[K]5`i"q?6o,Q='!PUea(Z_=;pEm<c%qAQD2ah-#[:>;@(@UR<oDZ\q^Z/NKCO5RAj;*$B;?Q//RD>@U-ET<IiE8Z::8``sW%=<d35S@iB%kS#o,5;N94=_)q,ZtY9Crj>t%Zq*[<5E[poMb?A\T#nalTp1%PA!;;?(#MhgGRcelDp%sq$iCHfN)(;I.TT&gBL."pl>]EU-^)f_k6lXA7AOnJ[NbQuYh^tQ4jgqt%QbL2;(`X\oJIjSa5/>rBIk`_cEn3;7`/'V3]!1$?dfZ%HK@boNb7aB9b6YS0FHZ=BTgeu`Osi'cMHTp`GCRP^:-3BKltD,\0TqrC%m*H`G=uVpAi!YW-9MH=/h2=(KbGbmr1K'P%'h,jifRa2oQOV8CO<ge9gZ?iY[ZWi)k1,4@KP^s)*kP$KYoD^+.S#L]F_gRG1?BST%CUisQqbcA)Xu/d]TFfQTCP6Xi&Pl\\[@PbQV7I8'M!'Fg\sD[=<Gh)3/>lho'9eZREN[4ql6Ug"1dLoP&\!oc2o"MS(8%`268cj0%an_I:9@W1e>s);)ccMDdIDj^p"tV$AVq>O+cZV9j.)RO<D@bL3RV`QR/nZbLn\V/b=&a'6O*55-<YAQ=*fOgdp=')N>ID'*.rH-E%Vb=*7j=ZbQl9R!X/7Fr/qiCa4\LL4.bDC7r73A_Yf16+3;RERQQFL")TT[AI-1ZG;9`?*R(.K)4F5rSS=J^a_CPYe";S#Y3D@X[4%M@nekp]([*\@NH-^6YFkbYdb*ccd9ICgOV$e.)oOR*Cdm`CgM+IbRbq+i1pH271BoYiO8Kc#Q<I-=_kh%M=2@H"#o2Kr&'j:GuJR%<qs'CdA5iorm67C,%#JFo5LNCj-I?nhIcnQ#j(]O;Tj0a.,8/?c%o2&DPW=1_WbI_]%AA#@djak4l`5sYh]SXH<qZ'-*lsG\25/B%PWO\Pek9Dbr9L;[j;SK]hK,ncnFqfm$(H^3#X6QuH+msj'pB@(cOUe]/$5dZ)Ou-5$DpTW+X`58_"]Qh.^RlPZ83(*4@YQ_MR\!s%eKT7K,?'LqY8+ms:/Vcq]fFk%15dng%b$mWF8_VcE#I02NXob^YiurT%(a@!Zk2@ghMeG^*#e[ufZP!iM]4EIcsh4G[1K:TE8t)_%%Yk2G.^@#o(gL,:8dI!u\hXf*.`5an:,O\Y'/q[!^_#XB\p>1!hm8*4fB.@$N^%O=`5/BP.71/IV[7;g*A-c`&;;lFoU'LR>]U@+%M.DVg;+TS)>Tag33mAkuqf"GAdBRrj4S:PE[Y%C?;-5,p=>FCLo2]s8<>62Z\bM'[BW=Js3HqZ*5t>hr?ZX-\"kstTBQ3VN_)u8k%AfZ8]o.K*u4708kmDusr*63XjP!_N+GRt[BJj5(:La@JX4YuIg`4-^bVa!"ZpB#([TCp+4-[.3+:K]ttMKb3orU&;:4A^<CW+/_G%iMU=tX8gt-j<QlD@:E$nOeAT&)S3XlK1,P:18fa@@*BE"Y'2V2,ZJ)MHfi>3W,dgW(Sa5*Dl6[>OO?T@;F-SW]#+IR`P]%NWe]q8%4T*Yp_M^U0mmIQg,Z\UiFO!3]Z#n"-H)QfePR+X_>t)hlL#T%-$BqYYPa\IF71]`e*ZF\V=G/A=-ZTUbAVkt_/md)9(BG$i**W79%<'IIp@Y;][=PqT$"(adi/'OF$MP630R*S,OVib$\TFd8AR@S)A*,uD>MjRf@=n=FETU"-Sa(!st;W+g?)?OmK@"l\FkVt8r`!_C3%8>_TMO=B*tc5$sUILS.PU3DH0lt^k2m2Ds'1lc5U_K)6OO\$XGlqhO+a`o7GMc8iI5"&-R0)qKfcWu\+b5SA_>*Do:a_'b$DAXN]%&TK%s3gHRG9fA8&K\Ce6AoN/+ER%B,Rk[+gbI0a4iU[_ghM.geO4A*K:,3,bh+GOd">;=R2Y/)Q8bK[bHUO(0^G6fY5!8u,AZanZ%H")&^eOS&NQVEu<E,46&@Df9o+A9(s,b?*:TMCYL)^ej:T9Pd`DDD,+K>f_7r*K%^;U0MWW]77;OR\F)Qb>=+TBK;k09S&!Q8Y'f%.OE"9bRc=MgR'4-`T.)k&'lK5[ou@j>D-,RQQp0Uggp'2$F(4hL5tl)nK,sVG4bKkLcDC#\5bK(4@UdSB)M/bL.il)%`!CaJhhF;%Bhb<43qVpK5`tPnK%p,>M*FOboMCKNfR!m1D+>Yaf>Be;@YVrbq\^;D+Z>#e3k'FJ2_;M'8L&r!<hU(Y[.8:h&p2H8T&(&0-+UMp%5`KHUXJBUL2UmN9n9J?b[,.9H[7LHu*&..'Br6#UIEB7TJiG8,qkK;I15le"\WEl0$.fTL$!`/"Ds^Z^(#(/BUA@>$!q%;ZJGP'W%<kuG73kE.HMF\J+Z8+;=2>^90UEl8@m9DIt!LJ-S2qHaXr`c7NLhh.Qe4I<A*Oa/Q3.q_g1f,Z"VM@/P)#sOfY?mV$$AR_o</'m@%K?Vo_Qm/W(4nr6<*!1`b=H'C<!C1B1%;W5,^<Ws`IdsaFTl4L<."@YDEMe;#=4\=PM8@o8"*$#N8=c"t$s%A'7q<9(lK33.LqrKD%3r*>:k/C;QVXcFuYSP#*2I!sBN"Ke?-T)8tTF4&*pk!FOo^PP8?Hh[A#r8JaGs5#?&m3!;[[_7;d^+de=dU>VR0F@$/cHLi(4Q_g%]mAs^_\"J]4K\'0&@%`5g"W)_`?%YcK#_)85p.D6YtRFMl_-d;2C=J#orYSt:,7Mq)7!U]kXJ=C+nsEkm@89,F*XQiN\Ia@l.^<u%pe3rQh>%`p></P_1=P0l!>-[pD5\M0=WEl$Z`6NW?m7O\P+R[K;1W=@%Rc0;>,]g8JrF9de)H1I(hFc"5!FjLLYqgI?[hT\cQaB&%&PBfGeEg"=8MLi4Bik3K'*YcH+l:VqjU*Y[lCOVOnW7S:]L=poM%h"X]CC)A9FJ/@<&MA%j/[;D&39Gu:<A7tQsBDI]@/oq$.ukb%]8To9#2Gk`,+hIJKGKQEn8C14Ikb/HUDq)SRiu"eFou_='*YQUf'+k?%&)b$T>lQR3OCFHo'+,dImG+ETTe92pNKHR;J3CD7=o[s%D\,5iph7Bk6rs-K52r3;:q/%:8-hfuATcAs_6?eILhO>$T9oGn73O?I-rA?PI[Hdng'kF$J!5]<lC&(7Lf3n.*-a]AFA<*lYaP>l%,_-1Gnm2U?/0Grcp?MRU)>,c"BU5bH$3ZW^-^oat1FYn)$>J]PWJXN3OK]#=eiHHCm_BOmlijWlK@CrTA`H/`EHi1FgW<62)[g+j%A8g,Z]Y<3RRYmFW>CeN]Xi@kI^.8W:3eKXbZmXi[REW9K,'Lr"N-6$/%sV*/aI%aIRB)W;K8ni2l2C,f8G,X#Rg;X#?XkBg6.i^8%eGpcQXePQ#mnn2%+'sSfJXn@*5odg_>#jlk6Fqam5S!0r$H%P8"N3#m/EO*+8gO2K[uHitK^A7UdN_Ud(&"Rt!l;])-%geMH^fMj%''&:k/n'!&Aj;KdbueC/i<E9:,Y(E#[@sR.kAdXTV.n@s=;NmO_gbf<//Dd8OW=jbKU;PGWt@/s@e#X@H9J@83>/6efm<acj[F+r%s.-_;[rqKg*tnNm([(q*8+akg!8.O#.qRn><RU^TH[B,5L4T_*$aPjNeh(H-Mk`s%78U6sg-2%`":+ft)'2_V<,t%l*G^5fX0c^_%Q+2,Ncb,5S(`]R=Pi;Ys\Mmi1Xk;u9P#1jfN/YFfR><1f0$TH:$ls<)X9B^U%3R==[8/VLF\203.sW<QJHQaW'4oVpK:u6IUVhOL%'!Cn9&Z@IUeJ<KQ6K/?gZ#Y^rI0D]TN6r]%YBn5tNE-#lImSipiqacc_tlf[E"KACVL>QqC'T*LF]2n5P'gTZUaCU/+b60/4re-k%^f5mt7dE&:g!bTJ4q1V*d^0C8L@m<SF?In9?_H-G"1i6I$a=`_mO1amVbg4Bnea``Y7na4-d4XLp<GCL2A,B$fVHG2=Q=MYQZ5jq%m@+!Vc$-HuVjK-[m=A6N[HpC=#rk%S1aC=6!kq/bl:^l@CP5/=^%],,kH).(h`C#cF2,Y+ZtmU="9EZV.UaJ]gXU-LGmnHqC>Rnh%9<Wnab&8-54S[0s]C43g]ERle-DZ(ag#6>B;6kCO@ml%G$DTl_[Xu?Mi],q7iVdYq]4Tk%MV]D+*9EKBU)\]Af+Z$>-6^&K#`3ct%k=+O'6fu2UDMmB#B8D&V+.7;a=]UeeEtAt>DA5]#Qs?,:ruH4;flK=%;.dG]-,bEpffO17[_U,:gP@L`lH*S-:/f5(FB"9I0?HQ!%?=B\(i-@+1FA1t=+ZU'F%m?!N."H4f_fr$)WI%(7A-^;N)aEH%TlMMVOjf37L?)2!8d3jEUB=1cOI!mG>H<X[9:425Ti*_go]irj%=YFV3hIhYORBg"JOLpeTRLJ>'p-m)Y"J4`>]gAYi[O6iWSk%dYn*Ys_!mCoVS)H_UTMB6qX)gN'-45M2+0ahk!",OETjooagr$cu%4J^U8ORC+>=#s0nN-4OTGW#f^5T_,-#rTR+Z\+d;kb[G5Kcc.rORC^ICJ8.s'eusf@9a,(bSFkoAfZum7W%J$O+/.n'u,N:K#"$b%<lhck@:E(.6e>%8;IN<TVm99[c;Ye*cEhM'#g[+QEfY.ZYmp6tQNPH([5>\djkqCGQ]DdBQ?#En;&5(@aaT!A5ESa@qt=Ap`6j:e%!`k,OR\@JOnZ;2o9>MZcS`.b<*2=8-'rcOKS#AY[oFcMGEL851Aoc>2PdA7i:erTA*ja\dR*[S\b]'Z<0@+&_96f@C/=q08Mn&Il%e?@"45c7\:%PGG[lj7n*M\R(/i'EgpmBSnOP)iH`iZ:M:33jfe>M2Q4,ETru]Ncq@\<%RtZ*X*0mI/V0**T+F)f5N5MJkYpDpA\a%_(cI]a`d^*r8gQSS"NFiIjqHdgSHS$?E>Xj@c!Qa$-`K9G-PTT#mm>$`jLpG4!dR$9!q_r*q9;$r166,jJi=JB,56>D2Y*S.%N)"%S&VdP`<T\O7cY$A']iW4UL(70PfpIGr-P\i,>!^TS2Mp%/KIA\5i8$e;.$u&0?\'*NZ^n7CbPo[aCiRXNFJ6;iSXkY[=5nlE>tje%ad:.0L]k/8D\^$BcK@+\3\h`"k/\2;m/?bBQkdOo]*KRS%FX6:;s^SoA&WU=Iu"@RSDUZ,(I8)`B.G3r4aIUsQHZ$1RWl4s1;-g2%48WF,]:L)(70FQY#Ueeo)XsiZ*B1#Q]Juj+>"R@\eG-Ft`5_B:2]KPelbE>1lN0MR0mh6(C3MBEOP5+dOr,*!Pb9L/PIOktR63+\%Q&,rHI,,-l2s6;gS)E*IA-q>%]]gRa4p9_4ZGB**nN9%o>N/R,.SZ@&Gt#1X1'VJ8p1=q<3QW.cNdF_nmEJWs*rkfEs-@NKK/0L8%883SQGaFse+TYk'M9s?-a.\ZF$Ff3$WVlP3]2uR009M^Z\rZbrYiiq6@hY>l0M\7<g1$C##^KZlfVpI@&Vb/T!VP4ZI7B5rgF&sr%QpWHY;6WOr@?s6G<hBq[=aK&T<c@H;$Af<L[tJ-]kqa=3697:5[EB`K4ZRLRD9-nBJT7db*$P2Bfha-94m^j.eh>l1\u,qR;YLW4%U>hcI5Qnc)'S+SpZfh.umS:-*e(,L!\ntgEhd')nd3Dbpr@Ope[-\Pa=q:_K^+Pj<p!G'SH;N8od-j<[$=SD'ggL&^"(*9?Xt"?)%pTR,k65R1Xn$.=HU:X-$EW>1ecMVS/]KhN[3Jqrndj5Sk`W:gDd_T`B^-0pRm3-'/5j?co8jJT)*mo4G&R(DjnAIN`HG>4ga\AGZ%Lp4>NLnUN9__K=UR-')0[7^qZpA/rG]QQd<`iulCA#oM^)YP6"j7!]l6N/f\\GX<TW.Mc&?ADFdieVq)/sIk!`>hOa7Tb2n!:bmQ%nHKE&K+PE&7Ssbie\+H1Z)WG4Y(c*c^:H`kR1Rt+C!F:D?aRLn,b)NnotQ^<^Prg7h2d=/U`4kR76pR[Yq%4p0)X;;&W&J8SgaDl%c4&UXKM_Kon);ZK%^c*j-c`]k)LdY7Fcl"gN(%nmemC?=*b<[=Wic>rOiT\q+a!kP8'.lI&Uj)%T`!1<1!e5[A9S\Q"C%i13J*@O%^]AQbT'FnNp1[r?#k_qpl0qDO$-<fLq4Iu=-0SK8f^IUB6t1?pA'[[=]M[k9ikf+?C9-^j()J.\`MCnC(A?qW+Te`kNmrs+@H;j/%NoXmirspe_0mBs.At^Z"nPk"o+^LPmdC]l`3OD7\:Nd]"=jT=mD.,XF;rbGJNj]`^k7Q4(s(85u'=`bdEFg[-+i0sC,."+JTpU_'%^#J2shGepA3_XA0@LenDS94m<afN=-5L3Y(+LW]<b-!'&X9EOZkPG'+)l2+8We`\p0TkZA*-krYMB50X"KKPT/7$)gLSggWIXIFp%\u=hhKT'ca(eU`gmU3^hcEY39m)qj/%[C(U&R(!+mVJA]oqeU=Z_JeX+M<G\#$3^O.2emY!O43_d1rmSh&a6klqS-^.>35nbS1qL%nXpEaBBlVY^bY.?=qc%6gUp<dc"I[\J,P%HWR6hL,)k?QY!M[1B1/V4!%^iV,^\$d9"i]*l'b'U>G.+$GU-]rrLCBaa>q@/FdOQ9%Q\IIKXX_S<\KQmp,q8u,*@Urp^UDU.BY#$"/=V&Ui!d8udc,Ta4d3/Wl`>d%B*oFLlf_C==3Ed3@(W=1Jn'(Q"Ic<L2@T9mZENbn%I73O.hsQdT/P;(742g!'!l=q;X@c5NkUkeTCC@IODc-&82Q'`aDi"7nbr*b[d#+qdeR2S\#/_k0^ij33VBju)=Jk^V*@Ed9j\YI+%$@rMOJlGY:]3#9+OV3B5qVaD2W7>_3I#Nc2i"U@Tr<Tm1hLb/\EE:?;B>$a1,;jqr1Cu,\19u/Phc4b$J+b;PKc)t\?&E)tdmN<6%F@El03VbB==DdoV.3oDR(<t^2WhZf[]M'n)iY?6c]=b"m*%TQl;Q_n_%YQ?#VV6\]`.Ds.9athb$Ss#MNN8$n(S.\QZtbYhfFhc?%Y]>[:6o+$p#pd[cW-HKL]#dpCG#_.>%-]&fb7T"_W`SC5;';PaTF'1'RsKAr*!U0Wbj2?/ijpS)eLaU'99Fg45'g]N't_(0iN0Ib%5HB)b]:?=hJdK6iR#U-#i0prWp^(NL_S^XjMQOqc-%1ITO6SK[BuDaCH8"V9g8qHOZ()ken4fg(;ct.Lf+q<<+)-;o!:G5CET-.W%V5:?BaqfJeo2b7R*("u(GYO/CCk#MJCGPRHqLZ4Xa&C,(jF#^]q+T.mH<<$p#]r:6"o;%4jgsON>YupW.3/n8+eb1faH0E>*OOPp%X+$>o7J`]IVC39bh"(-.EGD3G/N^=EUl15@9H2<Fml4V0BCBsk5ae7DPD#t3b85.]lKK8ia:s(L31Y_14Ji"="ek(A!)U#TZP]mP%Rd__HhH3B\Q`5f&J1=p4mDIZCQGY/gGHV+<,#IYHfT=QqWJQ`Ce[WNG1<l?`ft"Rj@E'Tt9J;B=*_p-aTS:LbrbX3SC7t:Qbk"eh%/$:&A<bP?V-Qbdm`Aa&0Q<h!;lJU_97l_c9+WVUVKN(?b!!5:eLrN:_pM97TrpX+X^$5Z/64tHm8odh"<ZO2B6`$u'JjtD&QZR#'%GBt+dKNE%-pP4mWH>07+j6N4$Wn.sY9/]<T^EUugL;lT`:qGU70<2Yc&rMZ%L2)%?B3SK[mLEIU<tUed/_/rUII6NTX9:(]Ob,Y^%jtUXuVZsG)iKbLO>'?F%Us,rSQ%qLaJ,=:MpitNmF)nTY^&7OpEEGtl<p#?T-0Q&mL67)W5;*\^s"MU72/T502e2,Hib94D&8H@r%)<"L*pTmEuAn8B/2*(nP#;lgA7)9q/Y]pQ)f&>e#&J_*5MF`U:K-=bniEXWT&+0s1LHmDIPJ[\0:_Hm&:3L"RZ<pZE3=S47/-+=X%Zm/%sb"pZ$B9-WJk)rTk_91@F8J0*.+sBoM5B]5/eYl#-9fN\n_Vo0knO#j-<c[0lTXa3A>)n9_0U8<b_%HrMUIch765ZMmb%+Q#%&Wj7kKYcc3-7*_>eCdX\I.%`'M.Yhd<js9+Hmf'^PYlI40k%n1Z,H=A]q3;r<H9t6:5Ip0>p62&VW75q=NaubI&':P;gNTH2<Zf"%NhUma6C;t)Qa4U_/F@V1b@r=B'22@l3"^15PPtBb$r[TI?l]G]kN9t@**^<>Q5jNMl>7"X(&3c:W;6!1Z@a1Pg,DFP<I.nLVV.6m%i:T:S+9e5IkoiB*bcfI/q!pJ9r2lSuCJJ$i:'T.7RXus2ep![A3M0mAS_<bre_%%Q_\%,JAIYfRk>9+`^X%8n)qK8R;R2kTkQH*Y%c)S&bC0RTS?3@!4:CC&:"I4$P@oQG3nSCN9</2<STT-asWfMM1b&n`>r[-Yhg^&[3Z&@:hWd.H#[/?if_GsI6F[*ZPg6FqZa=aF@%es;7l8r7@LO3c/N2^cHLU@,1',2JKU!a%nO,mh.<>W:=>_?`0c0O3<;r:04:6r9-Fo3g&QHF'Mo/Oq)X;&SF:@#A=M0nPB"[kDNn%&-kt5l0&^cUC+5pnm%lZ3n@gAe.qM`*I]'KQC&pN&AhI:<@&;6mql^1M=jKM-nsZD5b>Ol#Vl=Z3[glCiNo6bBV&L<?4N;,P7P)P%*/q*q(qaGaBnX+%#k71UY<(L5euGs=SKG@n&5\`"`ZIIr5H0]83FD.^^EPl&a^<;$5Fi?Jo-(5JEk1W9\Ja;ALdG%*RjB?'`5bf$%Qdpc2+pb4A+#cjdZKQK%;[O?G+bEZaNV>u/M;d1Cdn2$H(CrfQrPYW@)m6NhoQO25^gmca<^eJD,,67d!Fnb`$E`Np0s.lZZW%4*%[$fdG,_K:_K'$iN0Bbg`-18*T=P`G$/Bht(\5fFVO;.[OI=pZdkXd6_,)P,)E9&9NQLjYK0A%)+UJVolDAU^@<k59Xb$%W7<*)ai%>RG[8>==LYNP;LT*>sraDSl?Y*02?JO.DBfc[3+Y4K$<N%pIYja?RIZo!!'%]P0-BEc&S&PM,\`<0s9l7_jncmU1V53k[l@0GB!"%T%C::EGPB+oaYP4FU36X;<8c_7[m/oR'#X9[(!;XiO#\ikXCB[I5CR6r:lWlif"II`iC[3)3d:&gY?:*MRVu5W(U$1Z@<K.;)Mk<%H&qG&+u&[F#A0ILg@bp]TeN)MP".Ue`r19X(CF^.RNk!bOFT#S8I5.LHBCmH%C5%,hp,7qG8(dg"W?V)jChO:pc=*WSY(WuH$^p>%Y(@j@Bd[8e].'HP+c/R:2VfLU\-P+*P"Q1^HDKhFSC3;EI)^5Q0k<_O+_#$/A)MH9e+1R,:sdNo/#Eid)c]W=gYIcBA3:*Qf5sO"%:5=dS8a@3-"KS)D_%b+4<1a;i%Z>GsnKDrK)&/nMpe)biLM9_A5`Dm*M(WG9GlroXf#Bf5,?=1qX#jO0[Fh`)g9m!T*gWK>Jq0/2%aF!8*fYp.G*?HsCQ\6$^RpWCPE0V"*e>L\q1dH'k#bseDHW?#d!7*I,aE1;NCbt')BK?@:1.9]WISUUaU5L@H07JnZV<Bt\,&Dqg%4d?mOJ;n"[^#N]qY"/4aHCe[r&P<_9*7njI9M'39o,-<pA]d\21Fi&YRP..8mBIg,N%-fmMp]HY8kgT^>[`fGJK$]GAV=J[$#*V4%?R7g@fp&f&>V@kGW!k]>0V`!V2BV\2]^l+JP*YLp!]:SH$Z\iP&HpqK=\1-XeT15D?Hq7b.SEaRKK#mDgY]t:`Xp(L7u]dRaVmVC%KS5HPh?b-=/g9jN$+JrOe:-*4eSc)[I_c<J'h3TF!t=2lcabSpEd<<JO5P2=1*/F3bCk2*gmkfSpb<4,]gR'rSuE&.8]%b^FVp;g%9pCUarQ%o6E>!1LI=U=-N7q8P(@3H-Kf+\<Z7VetSp_^`F`M119*"@a8`?<+YUW\WoA#Vj`Yh?f\gTZfP71"32mRV'Y!mNDdK4R%%@N.e]-#>`u.>@8W*Bp)*+esI]4OnX``!inHjF?AIrrcB_grp?6ioeDRj5"O?Mqr3ik;empP.RU@GgcYdMeo!DgZe,rrIm&\P;V@k%BqM+Sh3K#lU*#Z:<TDHH,j9.ia0a$FR>$l@B[(fkXJ.3-N0<4'M3;OPJT7VECK`Y'%O?Lbb"^>NA8(Q;JZH;?%osn)X;Oa13h`$R%LHeVcXf])<>]m+F2sbfO89fApSurV\TqQ4pEpUkcB08]..t25DiYXQ<#A()eK)FGkIMPX&0n2\2"I9I)E,)m,>qLZQ=h7<MiToF-%YTT7hqH8\2=D?kVDW0'og4'GaT?5bS>0=jTHc?fC="blKbn6joo@C4_6>;Ak>B6-8q(itel2^'LU'?^p8%Mjr>GDT?+CGqYh8uI#%g=h`RP'dnP0;KKWk2q>"AnpQ_T]$N-A9q@<gPnT:+>#6!d-8ge>g'?]##Su?X5:DtS<fhHFJjCg7X$KDiM1UdTG5e9UJqu1XQOtT%Bs06C(`*Qc(hQY]9FXGrBQSo(IpQKNadpP^mj]&K&RgV+=qB%[17Tu/U1SH$V9c+`!t&bB!+'-$Oj02WfbQAb4G<Wm;JUb.IjcfY%M<%Z'@$]$!:ed:/XK01P;HF@q@_+T2MnGOEXO<+AGAL!7=[J#E(?c\n83q3uZYqm'@?qDWY6g,M[j8kk;-8=om9@AHM1Ep<+(L$U%f(O1#/GCU!H2(q1G!S9`bgFd*97ASC!PMN[An$)-Q@,XBoos!UO,#-#CD.,0H]Tbi<_i3Fg3p"P2Y'>UKe5oJZGYo(-s+_kDO!Ud%3CY0lkmVf$j<iF6h@A`5N#G1@HBhaoA5_#!k.T_qA.u[Jj$,r6k)!8jL)Q;J'`=g(]jNim%X&EsN)M1n1E&L046&K7HJ)BPA!N*(%cQ9DIMLWtKCt'Md2:,rrdlg,OY-UE,4j>OL<C4b()PR)"lKO)#KH5-N!GG='?t'M#7W(V\0(mbb2_`Z7]K6s,iqL&&]02OT":S@J%KEhg)'Pu"<4!S0XA+IX-d-TLb7o?LJ74:CdX9F.a'F:"8_:D&*1RlUrPRhaKkPpA&KQWlmaX)7biLPDL@Mr,Y,4_]rbTMR7'.mld%_-joc?IU^#m@6ofk?i:ZT!bJp0"X_,IC%2/Z<1@J.MY6[kh.b8bhT,AoR3(?Br]Y0N%D)A7<P1T1p4_7`8Pra<fLn^%N@[HNk.6f%E#J/6-oJd=EBS#Y@G@LLrJr6u2F\]S@l1pCIU>GXe0@KWWTdY.8E`"-7TQsZ?B.bXU8b\Xr#$^^rbto.7j.*<?RdXb#+UChO!H]r%bqg2?-Vd?b.Fc4L9,W\'3@&4j3sY4XMA;J9Vg$'j)#j:tfJg9`lgm=W)1.h[9p97__lC)ffCB;=3Xsmdco/cQDS+>;])T+A&:b;+%gW\4&*:3`8T*>q]T:48u1KC``BVc[UI?P!'=HdA7+i2E(;R+_MT:q^28-fq(qGoI:SZjf$_dodt?e>SGo2^>%E()5rU@Wj(?*Y'O%h]mF53NUo!$#(+W<]]u_JS@1\=/[ks$^b2<M^pDU.2G2$kf'[HY0\S57]URb`UpDUgs<3JK"+?=Z.G+6R7W7lE1]rfO<h+q0*<?G%X_ShTb$8OPB=&LWF7W.*P.M-`8nprRS;K5i6ZQrpAS@GlR:4!SQ@*`c7Q?le&locVD<r.4[in-ll4Kl)\/PcpmAK"`1&=%lO'97A%XQ3=UIh(E`HsPQ=YpOaM;-+%?nEV/pBBjku5'k[-]fDiLATqL6UT-7[UTB.\m,HM]fI!AIfTQ!1o>:4Eesh[1oUI(8F\\U#RPC6u%I[Db1"P([#1GShL^c(5dRRT;Y[Si-<T-sdkUlFa(n-`L_Z\78[J<JV1BLM66(=%k7;-nkQ@jQ6n*/!V2>13&.3qaaJ22?nR)pJ"U%$8$4ho_5+RiN16nn!2jL\L(IXJ()A>h<h]_Cu7.`5:to[Td:&RDaXoNM%CXOA3u3DP%&9_$)-`/b3K`LW:m:W-^UCC/P:D4+r5?]%?R1oJ;hZNE,&:G9A=9$$ri`q[-r<Qu>rXV3Hdt0[,TJ.2W;2c1-!6cI1:0i>H;o!$ChtciV<c(g5BcR/0>!@aJ_h-cem\H9,!2%Q%epopV47oW@qQPRGp&_'6)<fUVaT\k!BB/T2k,%;^hi<a[b0gt->_%o:U'277&Taf#7];n)SapX8iD3-U%`FY[`F-(8pUW`4kt.p.%@U\Y#]e(N;)k`-&^J\j[7k$]3FPITJ\tpM]l7SQf/5Gqii\nH`*H@WKeCYoc&#?Q\'S<*_KFmg\OGqU^_!Or'i]%O$XpacDmS98i%V*G_q_6X^+79"rd/hZWGCsq.HW,"<.'LC2ek>69\I-R_#7e.dEC/1t8eiiQ!BDFE4.VuEP31T%3Ht+"7R?Qb\W#Oq8Zubcen*)$$%^AhrZEn#,Ule5XLe*3lW;'nldOC'\>OZDHd$hXM#eRR?/W0a]<]U0ZV"i#tVd#OP`T!EOS=F:jjqV9(:MK7^1+&qO!CmL.4+Q[q=%DGe2!cT/?_LOG%=UBV2c-hJH/(Ac9b/fft!j\n=XCm3>4TI#pI8b5QI5Z*PgHO9\Z+1K)D;K1-/P[0g?q#m$11]I2`V#7Wq=#br'%p\Hg)"hTSpLd#bX%9!pPlc24"QC&^$X,96.PRfMoc6oD\FYqD\@u(5@Bm(8NA!5hbL%//)h9/Vd6F7bG-rFS%\P`1hlu'=DRM??o%'a>U#3#\c%kF7QZO!e/!(-D&'fWd84ah_i8FM6N)H&IJsCF$h+._r'SR;2ct?QQKdJYZ4[73;n=k(Zn\P#`g81W2Dm@Le"mTSYoP%;h$f]0uVD!4/kV&A2ULDV81f]^0TusP,eFBOc7NkY'_Wt%pqE3mW$,t5pn4:1-#IB@U@W`E@,p_YnFX7+c,6J$HNhaGHB'N<&>7&%WoiqZ=H+l37bl7%5!U$lH+5E.qaS0,0XU@>a#T#H7)5+E2#ta0`I"jr7mn7'Z'%5noAfR[1r't7N*PDBBgTZA(b$'6MV.McPRcU0%:tLt:e*'r+-g_*hF7GW;.FTEH1C,9,X5q0?Jpr[u!Y:F8,-LeU!s;=LM[CP8$(%J9L11O47t+F',@[%?%QaS7r,qfL@^4,\W#C4[%K'=8^WC8j&[i"g+F,6r&8]j2JK1`Fa\(?L84Aq7.Q4TA\bbn_g$s<*VJ5HLReX4qMBL!S$h?sLu7CcRR>:jUP-jE4;l3,u[^G]>T%7i64`+>kc\Y.D[%NjH$fFLDm4HAr_a;"ZT_6\Rk8-1X..pW[J-0i#G.U6(\s-k%="f2#PaBrB<f%<_D5$%qm<L1;h*f80LflQ\;=%6&?]fq/F#K4\fA@kT_A'&e4-DM[]XN<<P]\O"8h\_\3sc6dK"qZd48$9""lW'o-aChYl*?IB/#>'<K/5i0\tb)BQXm,%qla5fPeV%E@,.2T+r\;f<-E/W`8T-Z<hKqEn&j*V!8<^$740J"]&\;Q3(Xa5@j7\S;ZE%f\HlMP&-`8da[F=@e#93R,7F0P`sJP`h7SVJOl"(%LMU4]!C(t'llTZS2Ni#e$*&*Up7IB]>hYh8))SefE-e?*#cUbVYEBMjI)&W(KER_VHm@GLK>+GJO$5*dSTY/LZIRVg,`%[&rO0sN%hjP$M`5P=S,:5]J's&iVDnsVOm+`hs9fO959nll?nY'P93<<+R6UmDQ/SUZ_\l3X#J9H@4dXR3O[M%_ch&tI?*m^=@-O7\YF$FsZ%Ec5RrP1:5Fd*"ul"IBL!,WI%/r<W&/?<p?T]CW#8$'@Ga3g\\'+>C[QA4RFf_VW(=9Cck.)Bk`lq'bDD;]dK9_mXP[C@[gVPGTns%$,lhT0LC&.(@!ISQ'Bb\&.c<Q>oc`%"etY$YjWO.G^s3TM=^"`*hQg:D\8qmFlN9Ih=c2JaHIij9Bio1*!jm\TeV&S]Y[Gf-&='m%f6,@r5fX?b.bNc%F&`)G;<XU'$/.5j#rh\ClBeu^7@6*l%!.pGS+]MITJRk1+9+nCHJLY<VMSmP(j61HNkrF+R`+ZOqhNHMa#Su.%+bea<RW%U)1td,5>!)[SI`hT?Y9#0E`%e!inI"X;fJ2UaBi;o3[Yb,i?V",u]mZrL3U#cmc@MOk:FEM90bIl<8CPk#;rrj,_NQ%^%&+>c'!>sEeE7VZFBn]o1CU&8l=<dZ/[V7+J^9D$D$29pY&f.=B37-g2.$LSme1NuU*?je5+@#n=XetE`5U6X34&D9C`*PeJf\=c2%TgF;D0-jG4h@L[p5QAB);o[i:Z@Ys=A%UN+:p5AEE`7JB8cdalOq6XR]E).'?N]@OV&#9#i`Zia!"'SZ=D]X5efAIEqY-REeAk.T%M\mFi6;lT\Z'DsF`&,J\`_tkr[<Bb'.2(Of,TD/q_tVsW(KP&1gqIpK*'>huL^ktG%_FmViuLK1&OP1U2R)OS>F#NPPu?)uR5^OW%?Fp4b?+V?ZrnEmR[HUjD4,E7ka<Gj)6HGTDlYXn;nTmPrU%hel=#S]JblmaKY`]*shN05MrG*)Wiq^E`Ea^#!Eo1bQ2V33g@X>3o%&gi+3OhaTYios+q/B(Yp@Z;)Z^]V-ncGBKrP^)eS325e(%^b1Y56ngHO4hDHI@MaX=5K)%]D<K?>S6Z.<-@Hc^UsIdN7rku)ndk[%:W8r(_F=MP,WndnQ/6^M.G%;q^11HW1d9FL(5/sZp2bf[4^/A&:Xu4DlJeM=Rl`r&1;-b-$7Jo29"99;m=+LE_5OR-kdCc2M8?tK%n!Np2=qK>=5W#ENOaDEu?['m0fNiU_AgdoU?$%(Q/io#L!7?qkgT]tg*.nOf[QFY=C]F(i%<92D?2VU6p9m'cHX!)d(:cBbqYGo9%d[PI)GoA?37m>qQI/N;mV/1P`NSGoI@#oNUC#aE58D/?\>!cu&1N@.Mk^I7elud(!&PfGHZ((Jd$R1<hDJ)qn[Z%pDR)n]nQ85ss%4QX)+E_(4T43!qAkf-b'"Sq6_#D^iFiC1GY)knfd:*Y0qdj5ZGVdpK&]Uak3aL:hA1?`JehnO<O@]9mqLYnDD@#oMJosJ_9,c3?e%HX+VP6/IoR?uJ^:HLlkVDfl:u_V7\t2="G<,I438#_c)nLhdjA/bBmb2hV=&gWqJCd_;99J\C_g#64ZCGodIUISL+<G"r88G"u@^%?74ZggrMQ4WWSVqfT,U.f/^Cfp#A(\"*pB,^u"pos'As;;H&C*CE.$*g[kXB2E_XJHpb>Z]Pg?5Z!2+5)'^b%qi2Z2Q`LL^rqlU5%lq`+)2gRtfSU2H6'sti]q$HD)I]bWUaO`f2qEjaQ,jp]3<V+FqkTVAMc^CDXgumj.DmJt\o7gXYH:(Tamg$hJmdhZ4M`U;&Lu`$6%mf4(#pZ[fn-+iT*R.fe)-ocT)D+)O1BR-a*_C!HV">!7'9"^]L6\2W)Q[ZheS8tk.#Y6rc&L]CfjMuI?rQ=N,mMprDY?@Q@4FOU!%la+i[H\]LH`SdNpP[>KOqKQH+mhcE*p\VRHV-AMV(FI'td+'"CDno=iZq',m0$PB1oJZnFS-t02?>bkN;u7/50:ni>4(;u\fTu6D%%S!fa;(M&#!s5%,_qGe0@j'%<rdO=Q8kM9:lol%b:s[u:[aQ88ZUcOp\#2d`'S9KdL:ke1KbYGOod/TTY@Z3h>2oTIZ16q-]q2b8%b':Z%MT9hmJ>a=4EQ,4OMOFYK)31_Wg1!`.KT)]<(WL>;kO>WiLKrYb/Q/*2Y?g52ZmG]djbP0#&M-dNi3boRM2bLH=4^A$Ef4;2%F@5QPke.AiNWca49&<2sKfj@&(.AVOfuR\4ZC\"//Eq_n;cOHCLkH-Z>rUik_+[&M9F5ZT^!@/an*91]TZN\7)VCP#?%6ZA<S:*K%hbK8cfN8I;iIu\!,DB;hG9_466@-L7*\V%a3EUcp].;r&ee>u)3<sgk/HYguoQ]t^OT4hPU&f1f`N<"(N1WBirBch+Y&=UDF`413%;?t6J,E'^CT+gaDokVau6MK_)f_7IN8:P"!$t_%638l/7G<7QXbOlub^1-h]&'V@g(ZjsWcd1q3nTXp1f0;4TC?:lZKDE\#cI\P+%:#D&s.'bc7J'$#$Dcg?5mCdN3OR)X?TcnN.BN624GD*W+f@k!i(?_=)3q)@(pE9V./_]L6_7oA?,:r*V5.ZL*#1q5pqp!O2fAGBo%SQdbY.iuHbD.%9lgEV@?KueGbeiWGeJq(d@:10oth2tB3iTp4D@=B0M5]1(9m5o[M&Q2\JSZhb+h*re(DoPnWocimMXleroCW0Xf%^EMRL]4&0l?Mc:Xqdt?Nq1cht>Y$Yrd!`78`qVm'H+8;VB'ZR)[opCQbl-;1^=L=^&n_5N_e$X,dqM"TV0G;8'mgT"?uH-qXoFl(%8T3>VfgTiX\a?f*hgrJ#o<iKijP&?IUt,!JS1cmB+dXbU.mIr%3'RB!,QHM%/+kMJ9F-%92ro4;`8dEZGWWN+ND:\*Ua!/q4U68Z%*Jk+q0.7"5T7j7eG<%^*=M(ZOMZ#Xc_pg#Q*-LeT(UVBe9.5=;I6)Q`.t*G2Im#).TiA?7d`b^a?X*3eZo-S$6EukdVH2l-#8AsS%b+&+ulMo662+FEqNCqlN)TgL\Br'eR?fQR;T_CHlT=KmJYRSW@lX+%hq=PXrgH4%\gXZd2%eGCek2q9Vk?bS`30CH4-j4engd/eC%L][F!l6q<(</"6-OP>:k=E2X!=8o_=qets&<K.Y8Ph;l$HG[K>mhhWi&C3$=pp%bWEZX:Z,!OZ8DC,^1A^0-"Ad>s&c(GG]GIna:%lg8RK4,@gF4FU^V5@ntTDk7oPa?dqdIN`0D1+2Z$UVnJi3OG`?4[VG(`Q&@3lZTn-$X__EQg_'*+E(P_p5t[Pfg%LW(cr3?>pdYi%@.*U9L3QYr?^Y-eL]p<GoWs@SQVo<:2:bK5s+X>oj)$+=@f-G?C5ICV`?[S#1#qH.=/X427[kfg^f2bPr."/W&+'1#QL6\hmkArN%(LNa@226LES3%9dK"*=unD\J$Jf>lRIN6mUL#GTnW8P$!OYc[=g<'(%?X;/h&4XrraBM<GrD<Kl/dAl:_Hfecmm/Kci:hYHauRrq%B,bpKO_o8oOI9JfoS$"De'no'0fNF$]7HI`Np`p(?uRUPOm0*+4#5C^qqb5<o?.DY8$X>20>q)3#N3E>[r(\^o>o7-7:t&cH,EP4%'YJ+tcJ0t?CWoa^Q^(!7.R>A9/LH.YR%O)$8#T>T-IN^[6VLHbSsH\*h<JtkO4/1<p\Rlge9aP*BB7N3$]K[)_T9P,65]h^b!`j>%K%RM/[aqY4'Z3S.)@4UuZ]=pq[p[^YjF#f'S=CM-1&]T_dhrO'7f)V!;1`h`)YO%XMb8DGe@R/-mG*-'$e0%4)@8ZBVYCU!nRc>$%L%Jb#GmX0*A-hNV*3;<oT)LB=29UXfAY7ikqrM]d?0g]D(D]q*,%g2%Qr)id<`N4,[n2&(/1[n_0Br.J#TP(-!d"UX"A"Ck*lgmO%ISn0<%%&PoO$s1<E:"[NUJ55<9KKB7gTIFGL3-#kh@Tfun*c5Yl$CV4?,40IiCeUe&J6st+0HB1F+G)'-QY5<T<NUMonfiZV>Q?9%Y=nO_J(3ZQ%*L!fG![/fpU:HQ4`HT<4IS:)I!.JdiF'.n+ia33ru`VXrASP9G/H$".7ij_f[oT:Hmp$LM%eH`\6M/Z6XK'R#D!*C%IOWY=bi9I6eO*GTHF]'L5U+&RZFY[:hm)>A\&URBC:?.?,BFf,&C1W)hel4q_Rfu`mL-#VFaXqn7<[1:#!aCL1Gr_QeK;b4+2GeP%Ye&FRf5al_oNdFt8m`(srIm,lnfdVuSF?(K^,l7C;5pV9NCg3seT&h`"TkIF(p7@%B%5t#_4><K[W/=oU1h9QC;WL`hoGKj.lD'@%M=6\)lko_&G?/=JgNBsK.L7'`o)a&7<;q.::5qjdl`MFTh40L?9`m]Z4G#.bWhYI/D3GULcJ7T^4Xrk\Gs]f)?Y#=7h3(9E`eX&:%$*(K[5VsKJAhba2Za#gafm\/TrcoV]+?0qE5L`kt-HS]Omo0[7-qUgYk->6e@Braj2q@aMhG@aX6q,F9_?B"T'^@]Ls7'Zh=3gS$%?$YVf,cDd8BuYUOT.<C'_&<gnCA($JCn9DX'1,TYX03T:H#l#0ae*UjKg&;SqA&[HBLHQ(?q@2piJA7<HA/T@c"^CZ17$EO;PQAC%/$^#BKZU^4%k"QMM="q.kC3_+T$JC:_g_eiN4BRu&5j6se7@iLEkSAr*e2C`WLPe2F]9%BP%uG`<T[^kD-go%IHIdQO_1B_VIPV)%\I(Wf0FDj()5JC>9@UMhcBqqVA"A<B5*<',V\bXZ$<9Mm3>nGnjGah\RQYVEIIS,PB*P<G*1kjQW)M)D$l:8&'&9cKfDn2qj52uR%?iJQUaaZkX2#aLj#F-4gbRuL@]0`/(:m#OUVZ$9Q1?hc6PR<dm4"7Jh$C"3<e@Ucq'3%jqX03h"/IZ+*Zg+IRe%iqYK6C"2X*b(8%UH_1MNGh"GOr)SgN>P9]1sT[9JMGXQ;8Lh7?opHhKN=HN9NAN18J=Pn6RLFSe"&.5_3.[T'%8A@7,^uX7d.7A[/<`@h5mPMR\@+O%]GO\CV4>Beq_5o;.Gq.)Nknj?-i&2qmk.<W^J%0:-Eg,%gRg'T2s_OV==P:_d(taJ)P+14rNM.4*_G&MPbU<P<7^du9O4I(0Q0Uf%fI=0c(%r-`-u?LU<mBpq:m:=/NR_gm?>%F<H@_HdDF0>r@U](59_iZs/nnarl@n>_n@Q9U'oOupTY**UV>;AHh8>.FB)m:/&h'Ih%KcZOcZ%>B.KV26sr[bJrmrb7*4"=5;,A`pSPL`5Qf&.j/MJ>UMS(B`g;.39hd!"i(Wc_*?PJ<UdN>m!E@gW8t\5Al-D><b"dc68Y%:KrC%1nr8?F^L%jq(`@]@.P$"Pd,bdcN&e<!h>iC=0N>=6!hR$V;MA"LY_'o9b`CXKO\P_f:4YB*aY]W%'_ST`W,;Z@7I*CH_89f%[_LrB7+n-]2U2P0`XFW')>leA=.DQ<#o=c72&b0_jG1YGSi?eK"&JS09JnjtCRk^Jd],15K31t?R+nMK*(h>M$jatkCM=^L3P9RN%@%DBXN+@/SLYC:+LD7I(=ImN>4[N/gU(G;=H"j@9-egLl8G#ja[VjbgWdESVk3g,LobsC].\+Y1[8BXtQNZVL=Puo1)CqIaJpbka%)td0M_8ea'a^fk:lq!aXj>2dXR(+8@H"*j<.)R0VRBd2G'CedF"fCRWFL0;XaA&)AoLBFrZ!"N#l:8()WU_?`Pn""]Ht:6K']`MB%D,*tl;[L$]m:]AKcq7bbO;I5EXc_-c6(4M,8hYaHJP/O0Q53;+QtF^BT,H>"n/QbJa9@]"mHRp&ljhMAJSC7*:C\3fiBlW5O1=%>%/Z;p2mZ=f:*$etl<kGZj`!Y`MGLI+ORfUr#</S39c976Z/bQk#VFZmm95F:=QuT0qA=4C1&d5+4Bd5Of%T/Ol9<Uo"\@KRhTa2jt%=gPUP%;_r5jl$PWr_aZt[8d],WS-fpj_F)6l1J,PEf4*do'mB=?H#Si3eL=J(:\EoqXbg\k%p\H(?SK3qC;aN$)7l`YIAl8(SlmU%6Za`bhd:,C)RNjD3n$HN'Pg/iG_!&$RFp1dU$46S*NN]cL^t?6IO^Zhqqn*#dSuEc.5&j+1Tf9%#^-EE%\5KfLF-#4eZA+XV^sa7%$&.qDrb9C&$1j7FT33U#;@rrP@a";u%V#Cuo+[.FYJ!WD2mWSjB`U$m1Rgi*LK;r>W"Q_RUFq63b'-2E3W)E968/NRmEI%;s56Nj%RR6sZ%7X6"k(LrhA@1?7D-ndGQQ\?9kLe$c_p(<UO:?rid'Mq9P$,2\c$\_;ad87ud'Wr6U*8'BTdPI'EJ;ojcMRIYe>(KN/tCIR%16VS6P_)_cM16-*>)C4e/V,rcpbOmZg^OLZl)D$"frFMXqGc9_Kf#3aKWb+5Bn@(RjH;\BGo\j2FR;ekmOLg`oDb`D^F3!lh75=V%,lO0?Pe%bXlCYuS8bAnlZbX$EKs>!DTXm$k-f,P-J_&;E0KEG@Y#R"'agK<AJrk,#E=Ar^2'C`h&O(k^4hR"_<5$MK$@HXbM]m42%EL7?Sg:q%j_pl&2at5c2&U(+gCR]lT)r%eY;:?%R7Z-hHM?9a_![:9n#Vhu(KJT26@fdYiARona%T,g,'"t5]=:hub4(O#'eq-QB%S>gUQT-g6"YnIiR&)SP3<G_SMEl]^?A;&iF?KK(iJrm_k^n[Sn*+#0jrU$]K$SfOFJ[ptj=j*V%0TYKBF&@fk@TqPOjis2bRfk*-%4,9H6<hjs_8fag198N<&>%o=D%Cr$mH"1[miZ[o6L*4!K/l$.B-`VUI4/!;73E72]D72!G9J`99-rilHbf8@t*3Y-eR#3O\&pB@j%p)jFeVr6.R_DoT1fllurOVj:h\6,Ti_U2QDbC"rebVttP>sRB3,k=7lEMM3C'r?6Bbh64AXAB2Od>4M`+NpZ@:Q#_dG&$Kn@@WQl%3suQ#;eXO4=if.7n2)U,Vrm1rjl1N@&o$SYk??rO/'ZW="Qg1_9)UWa!ZrbG'OW-#O59W/T!"^t*n-#D03CT>*n*6/&*Qp9-pPXY%JZP9RS-a27lZCo>A"=l$BH2HbN&5R=,Heb^;fA3U`^84Va&!7[@m2sNRR,udj8NNa#-,+R*uYgsq4b!7B5(%Oma6JVnKDah"uRj8%F'0GJ@PQVr>X(?O"&^U3-$G0=M1q1//>ouJ.AEu#$[S9&[.lM=j<%P:54IfP*lO1;W/bR&a6.9+*H_M4Nnc0Hb^[GO@)pKoZfBfd%_6Z"N1@P=1Nt]INQ\CN_32/ro8`3\nU-0Q0pKY.t+??iB+(c!^Oa,qGVkjqkA;9*1P&&Ok&P(NA`$E4i<mISig&DLS)"]G.X7[+_%2rBJ+`Z47?`$&jt:'s0[=+93A)D=Fn<P2&$+Q*\!Fe.O"\JC[:)Mr>%jjEYT?CVeuN*r%LP0F+?^@&3;[:)#cfU4'i893rRo*MBP%M9m,gb*Q1(mTLq3-*Mr<NF6:6&L;t`g#eee6rH(.+?G:-3qPH'9$QfAMTX6,SF"9)rR>G$h_J]ESJ*E,XiKU;k`9SJbg.gu1Z'$k%Hg$jQ2:^ZZ9\UbTaoWcjgpZRmnj>FPH>FM2-a"@]QnJ=oo-jn"i/\^mePL64'5]WXkp!hXjV15m+YAVD&CUs3.r-,^dDi1+4snL\%lge<O&Tt*aQF!oPh8BcJrFH,4O/Z/KedQ*,LEP37d\g81Pdr-_*`6p/cYj9k(_2OUdhG%:J<Q-./H94be4g8\,:GCYUUs>."/o\3%6M`\&_U%hm]+ZpWnY>620W]l'&uFqF5=g'/MF&/Qa;mC^(i42_RG'1sCD9ZBAghR"+6u8u7LNn32iL=C=iRuTl):FJL5`O\]l%pR%QHd[Eh+lchrHhQr8%15N4-ip*:F2/8:#\i'Kg&PN#Dc*^[l>/+bO!<^qRhgdkKm%[G_<:66;G07,NrZ%"mSPH,RXBe/,LlN8@7,s%8Jn<"+.8iAjNB"s8VlT/V\o2/K,$oCW)4]O_h*skeN\J[+(;l@+/YH3orZ`<!,D+@e1,ujPtU?I/^COsanbLs]/"8_I&\f^lLK-D%r%.AR:kXi?'?Fb1[LoD]Kj2IN3g4:0?tCA8-[QR!1>83E7!9`r_JTJ!eO(3Ic>u0,c-.#Bo\l62YW&`;85Qi$Mrfh567lg+>Ho#N%b4X*)]pQ'"[4<SRF57H<UYI"D_,4I5f^+0T"`Ad5TMEEN]%^2CdC(/kJuS7*<\K49K:8#r4#>4#m-881Q>&AB>)O-%U5Em%-_d1i%@_<\f1.36f@s%41Ni;dHftTIhe/j<*'ETVhp".]MfGR2&\@cP5cjbZYekP_tiZ"ni9<ALVo*l8@J%ko-d9HRaZHd'kM&;,e:QTea%-Hf$\)iqZ8<$\83Y[G?U73X3P-q.hRlJ%NoF!lbr0f+g0F2u#'O2"&)K.-K(NqHO#=&G(n-L@;KApRno#ln6;`,t>]%TL/p7F4Ge%j>qlr\'g69<mEL,WHF+%%[[)o"?a5Aoc0d6!#i0>RQ^fqZatRQV:"@m]9BK!*_d2B2bfE$qjg9+qE:Y7oLG2Bp@O^$eZFt+X38#m%.LrQb0SH%>Hq\$PYV[57COrh$n5^]XPj@1shPWi[((FW<6LcrA"cH.1M-mhr%+K&TZ=YFieRQ:Ve4&/s+q'Q\jcFnl6X[68SLhp@%aFlC"B)=@D-!5-6+1b,c7C6jUbr\GpBc,om]P0\do#8[@?WG>GIhfJfUCPW:kc%eiq]/G((s]#@Bf-X!41jEf3e,f^+la&._GQNR%"^S0dR3Glj=9m(hTB;_Y22`C\R%D:jUK`W8UPS;=BLbGsc5MMJ)P&p+SahKB0Ms.0D'_:kEK0MB4SrGcG7%?c^8,9E)hiPP'<q@d%i/X`Wc=:7ED("d^r05!B:31q_Z8ssWa?#6n2jTQYaK)%g7k#$Ld1+`VOb0RH"F#q!IagJ-e\G[B]s?n`[QrBr<X&/.khcg8o62-3%-:Hg<A1apdn\AC6V2VH:$>A^Yk+&f)7UJ;X9CC!h]susDW4&A"i[WYpUQ^nI[+Ff`-8dPB^=!)L7n>8l5\!DFL)R71=c.])gQ;&B%DiU.Bpdq[p=,]k1ZaQ!;fG:,mc)ad*\aJ:k3WRMlmc*7g>'fji<HYO,%U4KE281VBI+T<f)T3N`PA+2)IICR.@IZQbh^a6N)QOU?%Lm7r_8imR>.QrFb,,>DEId2o7a"BBO3b#W%OXo\aKNRRn5mI@KLO8PK8RE_4.9G:KRkF#,Gu,qPBPc16EJp#cTdl&igUdA\;7gh!%::sp]3'(KC!K/ug1m=ldMrcR-31";i*Wk91&VkLV$"YgM'tq.Lm^nFZ7S4SS;M]ZWZr[,H-&sN"!j^#"Rh(ZLi*A:IXdjnbZnH;C%GsYGC?QA'"iaT?Pi_lf`&>qkmc2Q+JB>O:KFhWtoK>'Tp9o>48cqDc'J`f:l"3Mmk6>&o"/&2`B!MCe@1E@c`P3ZZ][T4sXAOd-[%l"[bDZ$H'<rsESA?Sr-b@W/gVi,2;ei"6JLO04Ws=*kfBq!0n\OLAn7mLu7PA7q.rj;'?3VlGliaG?!3:2QiJPf1G0!-;O$\;X4?%2L=AOj=/EM#u*l-BL1soVnSq*3B-WL1f:=<H8+9?T/(49AR7%6dNRMSl<::)q]@rHJhhWGTT#?p.-\GOBk8kNA0qcaW)NcffpNsa%!)u>7Ci"SDN<Pn@?h`YpPMj`2A9o@C1SN\D)+DYng?P@sfl%XJbG,XMbc$`(\^O#[$R[BeNBi&^%XKPh!.KUaA18+odfD5sXqEVu%?AF9Ak,T3grp=V'k/6c_me#oGn8^YKhX:+7:PX_ckO[ZQcf9<Fn9"GR]K)KWO3`UEj0-Z+gcV*f:X>*bj3?'Ia$1u_g_,tBpNI_:%n,<A[RsTn~>%AI9_PrivateDataEnd