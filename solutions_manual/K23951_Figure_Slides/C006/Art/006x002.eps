%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 006x002.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 397 38
%%HiResBoundingBox: 0 0 396.0010 37.3018
%%CropBox: 0 0 396.0010 37.3018
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 12 8%%BeginData: 4112 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45A8527D527D7D7D767D7D7D767D7D7D517D7D7D527D7D7D767D7D7D%767D7D7D767D5252FD047D527D7D7D527D7D7D767D52FD057D767D7D7D76%7D7D7D52527D7D527D7D7D767D7D7D767D7D52527D7D7D767D7D7D767D7D%7D767D527D767D7D7D767D7D7D767D7D7D525252FD097D527D7D7D527D7D%527D7D7DFFFFFFA8A8FFA8FFFFA8FFFFFF7DA8FFA87DA8A87DFFA8FFA8FF%A8A8A8FFFFFF7DFD0DFFA87DFF7DA8FFFFFFA8FFA8A8A8FFFFA87DFFA8FF%A8FD07FFA8FF7DFFA8A8A8FFFFFFA8FFA8FD04FF7DCAAFA8FFA8FFA8FFFF%FFA8FFFFFF52FF7EA8FFFFFFA8A8FFA8FFA8FFA87DA8A87D7DA87DFFFFA8%7D7E527D527D52FFFFFF7DA8537E7DCAFD047D527D5252527D527EA87DFD%04FFA8FD08FFA87DFF7D84527D7D7D527D527D52A87DA1FF7E7D53527D7D%A8537D527DFF7DA8A87D52527D527D5253527D52FF7DFFA87E7D7D52527D%A8525252A8FF7DA8A87D7D527D537D527D7D527DFF7DFF52FD047DFD04FF%A8FFA8AFA8FD04FF7DA87D7D7DA8FFA8FFA8FFA8A8A8FFA8FFA8A852FFFF%FFA87D52A8527D7DFFFFFFA87DFFFFA8A8A8FFA8A8A8FFA8A8A87D7DFFA8%A87EA8A8FFFFFFA8FFA8FF52A8A8FFA8FFA8FFA8FFA8AFA8AFFF7DA8FFA8%FFA8FFA8FFA8FFA8A8A8FF52FFA8FFA8A8A8FFA8A9A8FFA8FFA87DA87D52%7DA87DFFFFFFA8FD09FF7DFF7DA87DA8FFFFA8FD09FFA87DFD04FF7DA852%7D7D7DFFFFFFA87DFFFFFFA8FD09FF7DA1FD04FFA8FFA8FD06FF7DA8FD0D%FF7DFD04FFAFFFA8FD07FF7DFD08FFA8FD05FF7DFFFD057DFFA8527D527D%527D527D52A8FF7DA87D7D7DA8FF7D7D5252527D5252527DFFA852FD06FF%A8A8FD05FFA87DFFFF5252527D5252527D52A8FF7D7DFFFFFF7EFD05527D%FFFFFF52A8FFA8527D5252527D525252FFFF7DA8FFFFFF7D52277D527DFD%04FF52FFA87D525352535353527D7DFFA87DA8527D7DA87DFFFFFFA8A8A8%FFA8FFA8FFFFFF7DFFA8FF7DFFFFFFA8A8A8FFA8FFA8FFA8FFA87DFD0EFF%7DFFFFFFA8A8A8FFA8FFA8FFFFFF7DA8FD04FFA8FFA8FFA8FD04FF7DA8FF%FFFFA8FFA8A9A8FFA8FFFFFF7DFD05FFA8FFA8FFA8FD04FF7DFFFFA8FFA8%A8A8FFA8FFA8FFFFFF7DFFA8A87D7D527D7D527D7D7D527D7D7D527D7D52%527D7D52527D7D7D767D7D7D527D7D7D527D527D527D527D527D527D527D%767D52527D7D527D7D7D527D7D7D527D7D52527D767D527D7D7D527D767D%527D527D527D7D7D527D7D7D527D7D7D7752527D527D7D7D527D7D7D527D%527D277D767D527D7D7D527D7D7D527D52527D7D52A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFFD07A8FFA8A8A8FFFD05A8FFA8A8A8CAA8FFA8A8A8%FFA8A87DFD08A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFFD05A8FFA8A8%A8CAA8FFA8A8A8FFFD0BA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8A8%A8FFA8FFA8FFA8FFFFA87DA8FD0AFFA87DA8FF7D53FF7D7D7DFD08FFA852%A8FF7E527DFD08FF7D7D7DFF7D527DFD08FFA8527DA87D7DFD09FF527DA8%A852A8FD08FFA85252FFA87D7DFD08FFA87DA8FFFFA8A8AFFD07FFA8A8A8%FF7DA87DFFFF7DFD0BFFA8A8A8FF84A8FFFF7DA8FD08FFA8A8A8FFA87DA8%FD08FFAFA8FFFFA87DA8FD08FFA87EA8FF7DA8FD09FFA87DFFA8A8A8FD09%FFA8A8A8FFA8FD09FF7D7D84FFA87D7DFD07FFA87E52A8FF7D7DA8FD5BFF%A8FFFFFFA8FD0BFFA8FFFFFFA8FD09FFA8FD06FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T17:45:34+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T17:45:34+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T17:45:34+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>24</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAGAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7P5W8peVdX1XzZdato1j&#xA;qF0NbmjE91bQzyBFtrcheUisaCvTFUHqnlG1s725e08g6RqEAmMdvbrZWcS+iUUrMZiGYtzDgp6f&#xA;h0pViqXvoVw8VyE/LHR42ARYJBbWpIMiHk/FoxyETLXtyrT3xVPvPnkLyJB5D8xXNv5b0yCeLSry&#xA;WGVLK3SRHW3dlZSEBVlOBWNeedE8tqvmfSrPyno1rb2Wh3159bNlClyGW3cI8JRSBSQrxJp0NOmK&#xA;p1rPk2zs9amksPJGi32jRxxgQiwt1naVwSWRuHHivGjVH7Qp0OFUubRX9FpR+VukAxqaxfV7UmRt&#xA;uPEmNeI69RiqnFo9wVaaT8q9JFWIitfQtAQnFfjd/Sap5ctgP64qm1t5K8oXHmvQhd+U9Ls2n0vV&#xA;ZLiyFnblPUiurBEYj01qQrtxJFQGPicCp7qvk38s9MtRdXXlfTDEZIof3WmwSNzmkWJBxSMsau4G&#xA;wxVJ4R+RE0drImnaCBef7zI1napIy8S3L02QPT4fDY9caVPrPyN+WV7bR3Vn5d0a4tpRyimjsrVk&#xA;YdKqwShGKsSfyLoJPm1dH8taPLqEOs2kFmlxYwPFHFJY6eZduHwoqySSHj3rsScVU10JfrjWrflh&#xA;pDRoAv1wW1sqNJXcrGY2PDwJbCqEbR711ljH5WaRE6CTjcfVrRg9AOHFOJoWYnqTT3xVF3XlvSLn&#xA;Q9Z+v/l/pekCPTLuaO5W3tnZJkj+FQViWh+IkFT+z8sCqkPkzQovLnl+5s/Kml3UcumxveSmwtHf&#xA;1ytuVZ2dQ3ExmYs25rT5FClB2VhHdQNIn5WaNVSqkenbjZ4i4ahtuW9V27bg74aVMNU8v2dtqBtr&#xA;T8sNKu4PUKC6EFmF4jhRqenXcFqfce+Kr7jyZ5WnfybNfeUNK0y7vNSlS+sUtrd1CjTb5xGzCNA4&#xA;5IrdKVA8K4FQuoeVnsLk/V/y/wBE1W2uLuaOLjZW8D28CSFUklPpvzDKVK8RXrXwBVTutGaOVmh/&#xA;KzSZYWiZo1+r2gYShmCqx9PoQB0Xb6cVWR6LKkV00n5W6TJIsrC2UQWiAx0Wmwifcb9969htiqaz&#xA;+RfJ6+aPMUdp5a0uSSHRbCaytzY25QTvLqIqEKAcn9NAfGg8MCoS48vRB0Sy/LLSpk5RRNNPb2UR&#xA;PNKvKU4/CiuCKAlum2+xVfD5ftzpT3U/5X6Ot6LhY1sI47VmEJRnMpdoEU/EFSi13PhgVW8reW9P&#xA;1K9EWsflrpOk23pFzO0FpIfUASiBRF4lt6/xxVI/K3k3TpPI+hXWmeWNIvrljdPem7sYJDIkU7kJ&#xA;6hXkHZV4JXatK7CmIUo39C84wI/yt0lZD8RLW9rQAOF4kGNfiZamoNBhVSXRpZLtB/yq7SorVQ5k&#xA;Y21oWYhV4AfBtvyrt4b9sVV7/wAraBdeXVn1HyRpei3Q1jSIkjS2t3LQy6lbI4LiKOvJWZWHQj54&#xA;FSvULDSrfzjYR2Ok6VYR2Gv2kMM9nYpa3LB3eq+oN3VQOL0VRWnWoOJUMm0LzR5e0q885WV9rlhp&#xA;GpSavcPbrezwxsvO0txHL6cjIWXkPpxVJ18x6gk6ej+ZOhRWxcvcKbyzlkYsatxZ46KKdABTr0BA&#xA;Uq4eYtUJikk/NHQ/USN0dUnsArFvTIahQioKNWo6Gg412VReuectCX8t/M9lqPnLStX1Kex1BbQx&#xA;XVoJGSSBxDEFi9MO/bZN8CoTzvrnkyVfNmsW3mTRZjfeXLnToYIryFrqSYJIyLQOQw+Kigb1OKsh&#xA;80ec/LuoQwR6T520ezVWJuR9ftlZ6EFKSVkK0I3FN677DiVWOQ+ZtdAczfmh5fZiRwVZbEKF4uGH&#xA;2K15FCDXt95VVi8xXsXID80NGceqXTncaefhM3Pi1Yyf7skbMOwFKbqp5eefvIreetIuV8x6WbeP&#xA;S9TjkmF7blFeS4sCis3OgLCNiB3ofDAqa6h50/LHUbb6teeZNJlg5pJw/SEC/FGwdD8Mg+yyg/PF&#xA;UgEP5FDUTfDWNHVjGIlt11GFYEC8qFIllCqQJGAp0rtTG1ZBp/nb8sdOsobKy8xaPBawLwhiW+tq&#xA;Kv0yYqk2hefPJSal5sb/ABLpcBudSR7SaS8t+LD9F2UfqLVxzUSIy7dwRiqQL5g1JLsvF+Z2iJbS&#xA;usk6G6sZHJ4cXCF4yEFaEDpt74VXw+YtT5pLP+aOiNIqspSOewVCGdGqaowJAQitOh249cVTKbzp&#xA;ocfknXLTV/OekarqEttdC2aK6tFYq1vxWPjH6YZi/LovemBU28qfmB5Dh8r6PDN5k0qKaKxtkkje&#xA;9t1ZWWFQVYF6gg4qxnUtaEt3O+m/mXpFlbNeG5ghN5ayBUaRnKsWqxFCBx5cabACm5VOPLfnLTrS&#xA;9kk1v8wNH1C0aELHD9asVZZQ5PPlGsG3CgPv4YFVfMfn7yLLrHlaSLzHpciW+qSSTut7bkRodMvY&#xA;wzkP8I5uq1Pcgd8VQnmfzbYXupQXGi+ftFsraBVKwNeWu8nxq7PX1eYKsoAOw69aHFUrj8x6sSqz&#xA;/mjoRjMRSUJNYBi5Cj1FYKOPQmnvSo2IKo/RvNgttVt5dR/MbRbvTUJ9a1+s2ILLxlAo6qj9Wj/a&#xA;7Gte4VMLPz95FXz1q9y3mPSxbyaXpkccxvbcIzx3F+XVW50JUSKSO1R44q7zR5v8uX5sn0bzxpGn&#xA;TW8haWX69atWNgAw4MZI2NOnJdu2Ksdstd1K2sooD+aejSyxj4pnubF+RLMd+aM5+0B9rt27lXoH&#xA;/Kxvy9/6mjSf+k62/wCa8CsI8lec/Lkf5aWdjbeatL0vVh6nFri6tgyA3bs1UkLULR1oSppWtDiF&#xA;KGHmHVo0SG2/M3QobeKNY4w1zZTP8CMoJeROTVYqTyJO3U71Kq7eY7w3izr+Z+jLGSnrQrcWHEqs&#xA;hJC8kfjWM/OtKk8d1UfrnnfyufKem2155r0nUNUi1DR3u5obu2HP0tTtpJZOCMKKqKWbYAAVwKkl&#xA;3c6JL5nt5bHX9O1STU/Mdhc21lY3UVxLHFGJPUZlX4/Ak8iPlTdKh6jbwa8vmK6mmnRtHeIC3hFO&#xA;QeiU241BDCQk8jUMooOO6qa4q7FUg1Gz8zvriT2d1w0wG39S3PDfjITNSqk0MZ33rXxHRVRex83j&#xA;zSlyl2ToZl5NbloxRPRKFePp8iC5VlIcUoQQag4q3pVh5vi1+We9vhLpLNcenbMEqqOYzDuqg8kK&#xA;v3+yw7imKskxVQvhemynFiyLeFGFu0tTGJKfCWA3oDirHNL0nzvb+XbqO41NZ9dltoI4ZpSrRJOs&#xA;KiaUcIkFWkLUHAjYHuRiqO8o2vmi3s7weY7lLm6kvJZLUxUKpbEL6abKnSh6jFU8xVKfMNnrN0tp&#xA;Hply1qFm5XbqVBaLiQVBZXofi5Lt9oCu1cVSrW9L87to2m2+k6iqalBBIt9cy8Ssk31cqjU4gn99&#xA;RqCm33hVkWmJepptol84kvVhjW6kFCGlCgORQIN2r2HyxVE4qxfXbPz7LrkL6Td2sWkB7Vpo5OQl&#xA;MaThrhVNGFZI6gkjpstCScVXLZedT5oM8l1D+gln5JClVcw+iy8GFDWkhVhv/NXbjRVk2KtOGKMF&#xA;NGoeJ60P04qxDQNK/MKCC+i1jVo7h5YJFsrmONA0crf3TekQF5Jvyq5B2HbCqc+WbfzBBZPHrcy3&#xA;F1WMrIlOIHoRq6rQKf7xXNT1r9ACpviqV+ZrXXLrRp4NDu1sdTfj9XuXRZFUhgTyVu1Pn8jiqVrY&#xA;eeX0COGW/hi1n62JJLiNQ0Zg51KkN9kAdKdaAHq2FU60S1vrXTY4L64a6uVaRmmkIZuLyMyKzKqA&#xA;lEIWvEVpgVHYqxrUrrzsusFLG1RtNEiUkKxEtGTDy6zow29b9n+Xx2Ku8wXXneO7KaLaRzQENweT&#xA;0wtfT+HkWlVv7zwQ7fiqyXAqndGcW0ptwGnCMYgehenw1qR398VSLQbrzlLq1wmr2kcGlqj/AFeU&#xA;FBIX5JxBCSS/DTlQ7e4xVT0GXzxLdwfpeKG3t1iVrgKqHlIYI+aoVlkIAmL0qOg9xRV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:063B4F983D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:063B4F983D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:063B4F983D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T17:45:34+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -37.3018 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 37.3018 li
396.001 37.3018 li
396.001 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 37.3018 mo
396.001 37.3018 li
396.001 0 li
0 0 li
0 37.3018 li
cp
clp
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
3.39111 .63623 mo
392.839 .63623 li
392.839 23.5518 li
3.39111 23.5518 li
3.39111 .63623 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.746 .676 .668 .898 cmyk
@
grestore
3.77637 30.2524 mo
3.77637 29.6758 3.86328 29.1797 4.03711 28.7632 cv
4.21094 28.3472 4.44238 28.0371 4.73047 27.8335 cv
4.9541 27.6719 5.18506 27.5913 5.42383 27.5913 cv
5.81152 27.5913 6.15967 27.7886 6.46777 28.1836 cv
6.85303 28.6733 7.04541 29.3364 7.04541 30.1738 cv
7.04541 30.7603 6.96094 31.2583 6.79199 31.6685 cv
6.62305 32.0786 6.40723 32.376 6.14502 32.561 cv
5.88281 32.7461 5.62988 32.8389 5.38672 32.8389 cv
4.9043 32.8389 4.50293 32.5542 4.18262 31.9854 cv
3.91162 31.5059 3.77637 30.9282 3.77637 30.2524 cv
cp
4.50928 30.3438 mo
4.50928 31.0396 4.59473 31.6069 4.76611 32.0469 cv
4.90723 32.417 5.11768 32.6021 5.39795 32.6021 cv
5.53174 32.6021 5.67041 32.5415 5.81396 32.4214 cv
5.95801 32.3008 6.06689 32.0991 6.14111 31.8159 cv
6.25488 31.3882 6.31201 30.7856 6.31201 30.0083 cv
6.31201 29.4321 6.25244 28.9512 6.13379 28.5659 cv
6.04443 28.2803 5.9292 28.0776 5.78809 27.9585 cv
5.68652 27.8765 5.56396 27.8354 5.41992 27.8354 cv
5.25146 27.8354 5.10156 27.9116 4.97021 28.063 cv
4.79199 28.269 4.67041 28.5933 4.60596 29.0356 cv
4.5415 29.478 4.50928 29.9136 4.50928 30.3438 cv
cp
false sop
0 0 0 1 cmyk
f
52.2803 28.6606 mo
52.4248 28.3188 52.6074 28.0552 52.8276 27.8696 cv
53.0483 27.6841 53.3228 27.5913 53.6514 27.5913 cv
54.0571 27.5913 54.3687 27.7227 54.585 27.9863 cv
54.7495 28.1826 54.8315 28.3926 54.8315 28.6162 cv
54.8315 28.9839 54.6001 29.3638 54.1367 29.7563 cv
54.4487 29.8784 54.6846 30.0522 54.8442 30.2783 cv
55.0039 30.5044 55.084 30.7705 55.084 31.0757 cv
55.084 31.5132 54.9443 31.8921 54.6655 32.2124 cv
54.3018 32.6299 53.7754 32.8389 53.0854 32.8389 cv
52.7446 32.8389 52.5122 32.7964 52.3892 32.7119 cv
52.2656 32.627 52.2041 32.5361 52.2041 32.439 cv
52.2041 32.3672 52.2334 32.3037 52.292 32.249 cv
52.3506 32.1938 52.4209 32.1665 52.5034 32.1665 cv
52.5654 32.1665 52.6294 32.1768 52.6938 32.1968 cv
52.7363 32.2095 52.8325 32.2554 52.9819 32.335 cv
53.1313 32.4141 53.2349 32.4614 53.2925 32.4766 cv
53.3848 32.5044 53.4829 32.5181 53.5879 32.5181 cv
53.8423 32.5181 54.0635 32.4194 54.2515 32.2231 cv
54.4399 32.0269 54.5337 31.7939 54.5337 31.5254 cv
54.5337 31.3286 54.4902 31.1372 54.4028 30.9507 cv
54.3379 30.8115 54.2671 30.7056 54.1895 30.6333 cv
54.0825 30.5342 53.9351 30.4438 53.748 30.3628 cv
53.561 30.2822 53.3701 30.2417 53.1758 30.2417 cv
53.0562 30.2417 li
53.0562 30.127 li
53.2524 30.1021 53.4497 30.0317 53.6475 29.9146 cv
53.8452 29.7979 53.9893 29.6572 54.0786 29.4932 cv
54.1685 29.3291 54.2129 29.1489 54.2129 28.9526 cv
54.2129 28.6968 54.1328 28.4897 53.9722 28.332 cv
53.811 28.1743 53.6113 28.0952 53.3721 28.0952 cv
52.9858 28.0952 52.6631 28.3037 52.4038 28.7202 cv
52.2803 28.6606 li
cp
f
59.2163 31.7715 mo
58.8618 32.7549 li
55.8784 32.7549 li
55.8784 32.6143 li
56.7559 31.8145 57.374 31.1611 57.7319 30.6543 cv
58.0898 30.1475 58.269 29.6841 58.269 29.2637 cv
58.269 28.9434 58.1709 28.6797 57.9741 28.4736 cv
57.7778 28.2671 57.543 28.1641 57.269 28.1641 cv
57.0205 28.1641 56.7974 28.2358 56.5996 28.3799 cv
56.4019 28.5234 56.2559 28.7344 56.1611 29.0117 cv
56.0234 29.0117 li
56.0854 28.5542 56.2456 28.2031 56.5034 27.9585 cv
56.7612 27.7134 57.083 27.5913 57.4688 27.5913 cv
57.8799 27.5913 58.2227 27.7231 58.498 27.9868 cv
58.7729 28.251 58.9106 28.562 58.9106 28.9204 cv
58.9106 29.1768 58.8511 29.4326 58.7314 29.689 cv
58.5474 30.0918 58.249 30.5181 57.8359 30.9683 cv
57.2163 31.644 56.8301 32.0483 56.6763 32.1821 cv
57.9907 32.1821 li
58.2578 32.1821 58.4453 32.1719 58.5532 32.1519 cv
58.6606 32.1323 58.7578 32.0918 58.8447 32.0308 cv
58.9312 31.9702 59.0068 31.8833 59.0713 31.7715 cv
59.2163 31.7715 li
cp
f
63.3867 28.6606 mo
63.5313 28.3188 63.7139 28.0552 63.9341 27.8696 cv
64.1543 27.6841 64.4292 27.5913 64.7578 27.5913 cv
65.1636 27.5913 65.4751 27.7227 65.6914 27.9863 cv
65.856 28.1826 65.938 28.3926 65.938 28.6162 cv
65.938 28.9839 65.7065 29.3638 65.2432 29.7563 cv
65.5552 29.8784 65.791 30.0522 65.9507 30.2783 cv
66.1104 30.5044 66.1899 30.7705 66.1899 31.0757 cv
66.1899 31.5132 66.0508 31.8921 65.772 32.2124 cv
65.4082 32.6299 64.8818 32.8389 64.1919 32.8389 cv
63.8506 32.8389 63.6187 32.7964 63.4951 32.7119 cv
63.3721 32.627 63.3105 32.5361 63.3105 32.439 cv
63.3105 32.3672 63.3398 32.3037 63.3984 32.249 cv
63.457 32.1938 63.5273 32.1665 63.6099 32.1665 cv
63.6719 32.1665 63.7354 32.1768 63.8003 32.1968 cv
63.8428 32.2095 63.9385 32.2554 64.0884 32.335 cv
64.2378 32.4141 64.3413 32.4614 64.3989 32.4766 cv
64.4907 32.5044 64.5894 32.5181 64.6943 32.5181 cv
64.9482 32.5181 65.1694 32.4194 65.3579 32.2231 cv
65.5459 32.0269 65.6401 31.7939 65.6401 31.5254 cv
65.6401 31.3286 65.5967 31.1372 65.5093 30.9507 cv
65.4443 30.8115 65.3735 30.7056 65.2959 30.6333 cv
65.189 30.5342 65.0415 30.4438 64.8545 30.3628 cv
64.6675 30.2822 64.4766 30.2417 64.2822 30.2417 cv
64.1626 30.2417 li
64.1626 30.127 li
64.3589 30.1021 64.5562 30.0317 64.7539 29.9146 cv
64.9517 29.7979 65.0952 29.6572 65.1851 29.4932 cv
65.2744 29.3291 65.3193 29.1489 65.3193 28.9526 cv
65.3193 28.6968 65.2393 28.4897 65.0781 28.332 cv
64.9175 28.1743 64.7178 28.0952 64.4785 28.0952 cv
64.0923 28.0952 63.7695 28.3037 63.5103 28.7202 cv
63.3867 28.6606 li
cp
f
67.2061 28.6606 mo
67.3506 28.3188 67.5327 28.0552 67.7534 27.8696 cv
67.9736 27.6841 68.248 27.5913 68.5771 27.5913 cv
68.9829 27.5913 69.2939 27.7227 69.5107 27.9863 cv
69.6753 28.1826 69.7573 28.3926 69.7573 28.6162 cv
69.7573 28.9839 69.5254 29.3638 69.062 29.7563 cv
69.374 29.8784 69.6099 30.0522 69.7695 30.2783 cv
69.9297 30.5044 70.0093 30.7705 70.0093 31.0757 cv
70.0093 31.5132 69.8701 31.8921 69.5913 32.2124 cv
69.2275 32.6299 68.7007 32.8389 68.0112 32.8389 cv
67.6699 32.8389 67.438 32.7964 67.3145 32.7119 cv
67.1914 32.627 67.1299 32.5361 67.1299 32.439 cv
67.1299 32.3672 67.1592 32.3037 67.2178 32.249 cv
67.2764 32.1938 67.3467 32.1665 67.4287 32.1665 cv
67.4912 32.1665 67.5547 32.1768 67.6196 32.1968 cv
67.6621 32.2095 67.7578 32.2554 67.9077 32.335 cv
68.0571 32.4141 68.1606 32.4614 68.2178 32.4766 cv
68.3101 32.5044 68.4087 32.5181 68.5132 32.5181 cv
68.7676 32.5181 68.9888 32.4194 69.1772 32.2231 cv
69.3652 32.0269 69.4595 31.7939 69.4595 31.5254 cv
69.4595 31.3286 69.416 31.1372 69.3286 30.9507 cv
69.2637 30.8115 69.1924 30.7056 69.1152 30.6333 cv
69.0078 30.5342 68.8608 30.4438 68.6738 30.3628 cv
68.4868 30.2822 68.2959 30.2417 68.1016 30.2417 cv
67.9814 30.2417 li
67.9814 30.127 li
68.1782 30.1021 68.3755 30.0317 68.5732 29.9146 cv
68.771 29.7979 68.9146 29.6572 69.0044 29.4932 cv
69.0938 29.3291 69.1387 29.1489 69.1387 28.9526 cv
69.1387 28.6968 69.0581 28.4897 68.8975 28.332 cv
68.7368 28.1743 68.5366 28.0952 68.2974 28.0952 cv
67.9111 28.0952 67.5889 28.3037 67.3296 28.7202 cv
67.2061 28.6606 li
cp
f
112.357 30.8911 mo
112.357 31.418 li
111.677 31.418 li
111.677 32.7549 li
111.059 32.7549 li
111.059 31.418 li
108.927 31.418 li
108.927 30.9429 li
111.265 27.5913 li
111.677 27.5913 li
111.677 30.8911 li
112.357 30.8911 li
cp
111.059 30.8911 mo
111.059 28.3784 li
109.292 30.8911 li
111.059 30.8911 li
cp
f
114.089 30.2046 mo
113.687 29.8765 113.427 29.6133 113.311 29.4146 cv
113.194 29.2153 113.136 29.0093 113.136 28.7954 cv
113.136 28.4673 113.264 28.1846 113.518 27.9473 cv
113.772 27.71 114.11 27.5913 114.532 27.5913 cv
114.941 27.5913 115.27 27.7017 115.52 27.9229 cv
115.769 28.144 115.894 28.3965 115.894 28.6797 cv
115.894 28.8687 115.827 29.061 115.692 29.2573 cv
115.558 29.4536 115.278 29.6851 114.853 29.9507 cv
115.292 30.2886 115.582 30.5542 115.724 30.748 cv
115.914 31.0015 116.008 31.2686 116.008 31.5493 cv
116.008 31.9048 115.873 32.2085 115.601 32.4604 cv
115.329 32.7129 114.972 32.8389 114.531 32.8389 cv
114.049 32.8389 113.674 32.6885 113.405 32.3882 cv
113.19 32.147 113.083 31.8838 113.083 31.5981 cv
113.083 31.3745 113.158 31.1528 113.309 30.9331 cv
113.46 30.7134 113.72 30.4707 114.089 30.2046 cv
cp
114.676 29.8052 mo
114.977 29.5352 115.167 29.3228 115.247 29.1665 cv
115.327 29.0103 115.367 28.8335 115.367 28.6362 cv
115.367 28.3745 115.293 28.1689 115.146 28.0205 cv
114.998 27.8716 114.796 27.7974 114.542 27.7974 cv
114.286 27.7974 114.079 27.8711 113.918 28.0186 cv
113.759 28.1655 113.679 28.3379 113.679 28.5352 cv
113.679 28.665 113.712 28.7949 113.778 28.9248 cv
113.844 29.0547 113.938 29.1782 114.061 29.2954 cv
114.676 29.8052 li
cp
114.265 30.3467 mo
114.058 30.5205 113.905 30.7095 113.805 30.9136 cv
113.706 31.1182 113.656 31.3394 113.656 31.5771 cv
113.656 31.8965 113.744 32.1523 113.919 32.3447 cv
114.095 32.5366 114.319 32.6323 114.591 32.6323 cv
114.86 32.6323 115.076 32.5571 115.238 32.4058 cv
115.4 32.2549 115.481 32.0713 115.481 31.856 cv
115.481 31.6772 115.434 31.5176 115.339 31.3765 cv
115.162 31.1138 114.804 30.7705 114.265 30.3467 cv
cp
f
100.846 30.8911 mo
100.846 31.418 li
100.166 31.418 li
100.166 32.7549 li
99.5474 32.7549 li
99.5474 31.418 li
97.4165 31.418 li
97.4165 30.9429 li
99.7539 27.5913 li
100.166 27.5913 li
100.166 30.8911 li
100.846 30.8911 li
cp
99.5474 30.8911 mo
99.5474 28.3784 li
97.7803 30.8911 li
99.5474 30.8911 li
cp
f
101.877 27.6904 mo
104.589 27.6904 li
104.589 27.8374 li
102.908 32.8618 li
102.49 32.8618 li
104 28.3013 li
102.609 28.3013 li
102.328 28.3013 102.127 28.335 102.008 28.4023 cv
101.799 28.5166 101.631 28.6929 101.504 28.9316 cv
101.396 28.8906 li
101.877 27.6904 li
cp
f
146.31 27.6904 mo
146.018 28.3247 li
144.491 28.3247 li
144.156 29.002 li
144.823 29.0991 145.348 29.3442 145.732 29.7373 cv
146.062 30.0757 146.226 30.4741 146.226 30.9316 cv
146.226 31.1978 146.172 31.4443 146.064 31.6709 cv
145.956 31.897 145.82 32.0898 145.656 32.249 cv
145.492 32.4082 145.31 32.5366 145.109 32.6333 cv
144.823 32.7705 144.53 32.8389 144.229 32.8389 cv
143.927 32.8389 143.706 32.7876 143.568 32.6851 cv
143.431 32.5825 143.362 32.4697 143.362 32.3462 cv
143.362 32.2773 143.39 32.2163 143.447 32.1631 cv
143.504 32.1099 143.576 32.0835 143.663 32.0835 cv
143.728 32.0835 143.784 32.0933 143.833 32.1128 cv
143.881 32.1328 143.963 32.1831 144.08 32.2646 cv
144.266 32.3931 144.455 32.457 144.646 32.457 cv
144.937 32.457 145.192 32.3467 145.412 32.126 cv
145.632 31.9058 145.742 31.6372 145.742 31.3208 cv
145.742 31.0142 145.644 30.728 145.448 30.4629 cv
145.251 30.1973 144.98 29.9927 144.635 29.8477 cv
144.364 29.7358 143.996 29.6709 143.528 29.6538 cv
144.498 27.6904 li
146.31 27.6904 li
cp
f
147.578 27.6904 mo
150.29 27.6904 li
150.29 27.8374 li
148.609 32.8618 li
148.191 32.8618 li
149.702 28.3013 li
148.31 28.3013 li
148.029 28.3013 147.828 28.335 147.709 28.4023 cv
147.5 28.5166 147.332 28.6929 147.205 28.9316 cv
147.097 28.8906 li
147.578 27.6904 li
cp
f
158.043 27.6904 mo
157.751 28.3247 li
156.224 28.3247 li
155.889 29.002 li
156.556 29.0991 157.081 29.3442 157.465 29.7373 cv
157.794 30.0757 157.959 30.4741 157.959 30.9316 cv
157.959 31.1978 157.905 31.4443 157.797 31.6709 cv
157.689 31.897 157.553 32.0898 157.389 32.249 cv
157.225 32.4082 157.042 32.5366 156.841 32.6333 cv
156.556 32.7705 156.263 32.8389 155.962 32.8389 cv
155.659 32.8389 155.439 32.7876 155.301 32.6851 cv
155.164 32.5825 155.094 32.4697 155.094 32.3462 cv
155.094 32.2773 155.123 32.2163 155.18 32.1631 cv
155.237 32.1099 155.309 32.0835 155.396 32.0835 cv
155.46 32.0835 155.517 32.0933 155.565 32.1128 cv
155.613 32.1328 155.696 32.1831 155.813 32.2646 cv
155.999 32.3931 156.188 32.457 156.379 32.457 cv
156.67 32.457 156.925 32.3467 157.145 32.126 cv
157.365 31.9058 157.475 31.6372 157.475 31.3208 cv
157.475 31.0142 157.376 30.728 157.18 30.4629 cv
156.984 30.1973 156.713 29.9927 156.368 29.8477 cv
156.097 29.7358 155.728 29.6709 155.261 29.6538 cv
156.23 27.6904 li
158.043 27.6904 li
cp
f
160.012 30.2046 mo
159.609 29.8765 159.35 29.6133 159.233 29.4146 cv
159.117 29.2153 159.059 29.0093 159.059 28.7954 cv
159.059 28.4673 159.186 28.1846 159.44 27.9473 cv
159.695 27.71 160.033 27.5913 160.455 27.5913 cv
160.863 27.5913 161.193 27.7017 161.442 27.9229 cv
161.691 28.144 161.816 28.3965 161.816 28.6797 cv
161.816 28.8687 161.749 29.061 161.615 29.2573 cv
161.48 29.4536 161.2 29.6851 160.775 29.9507 cv
161.214 30.2886 161.504 30.5542 161.646 30.748 cv
161.836 31.0015 161.931 31.2686 161.931 31.5493 cv
161.931 31.9048 161.795 32.2085 161.523 32.4604 cv
161.251 32.7129 160.895 32.8389 160.453 32.8389 cv
159.972 32.8389 159.597 32.6885 159.327 32.3882 cv
159.113 32.147 159.005 31.8838 159.005 31.5981 cv
159.005 31.3745 159.081 31.1528 159.231 30.9331 cv
159.383 30.7134 159.643 30.4707 160.012 30.2046 cv
cp
160.599 29.8052 mo
160.899 29.5352 161.089 29.3228 161.169 29.1665 cv
161.249 29.0103 161.289 28.8335 161.289 28.6362 cv
161.289 28.3745 161.215 28.1689 161.068 28.0205 cv
160.92 27.8716 160.719 27.7974 160.464 27.7974 cv
160.209 27.7974 160.001 27.8711 159.841 28.0186 cv
159.681 28.1655 159.601 28.3379 159.601 28.5352 cv
159.601 28.665 159.634 28.7949 159.701 28.9248 cv
159.767 29.0547 159.861 29.1782 159.984 29.2954 cv
160.599 29.8052 li
cp
160.188 30.3467 mo
159.98 30.5205 159.828 30.7095 159.728 30.9136 cv
159.628 31.1182 159.578 31.3394 159.578 31.5771 cv
159.578 31.8965 159.666 32.1523 159.842 32.3447 cv
160.018 32.5366 160.242 32.6323 160.514 32.6323 cv
160.783 32.6323 160.999 32.5571 161.161 32.4058 cv
161.323 32.2549 161.404 32.0713 161.404 31.856 cv
161.404 31.6772 161.356 31.5176 161.262 31.3765 cv
161.084 31.1138 160.727 30.7705 160.188 30.3467 cv
cp
f
192.89 27.5913 mo
192.89 27.7363 li
192.562 27.7686 192.295 27.8335 192.087 27.9312 cv
191.88 28.0293 191.676 28.1782 191.474 28.3789 cv
191.271 28.5796 191.104 28.8027 190.971 29.0493 cv
190.838 29.2954 190.728 29.5884 190.638 29.9272 cv
190.995 29.6836 191.354 29.562 191.713 29.562 cv
192.058 29.562 192.356 29.7007 192.609 29.979 cv
192.862 30.2568 192.989 30.6147 192.989 31.0513 cv
192.989 31.4731 192.861 31.8584 192.605 32.2056 cv
192.297 32.6279 191.89 32.8389 191.383 32.8389 cv
191.038 32.8389 190.745 32.7246 190.504 32.4961 cv
190.032 32.0513 189.796 31.4746 189.796 30.7666 cv
189.796 30.3145 189.887 29.8843 190.068 29.4771 cv
190.25 29.0698 190.508 28.708 190.845 28.3926 cv
191.182 28.0767 191.504 27.8643 191.813 27.7554 cv
192.121 27.646 192.408 27.5913 192.673 27.5913 cv
192.89 27.5913 li
cp
190.575 30.1997 mo
190.529 30.5356 190.506 30.8066 190.506 31.0132 cv
190.506 31.252 190.55 31.5112 190.639 31.791 cv
190.727 32.0708 190.857 32.293 191.031 32.457 cv
191.157 32.5742 191.311 32.6323 191.492 32.6323 cv
191.708 32.6323 191.9 32.5308 192.07 32.3267 cv
192.239 32.1226 192.324 31.8315 192.324 31.4536 cv
192.324 31.0283 192.24 30.6602 192.072 30.3491 cv
191.903 30.0381 191.665 29.8828 191.355 29.8828 cv
191.261 29.8828 191.16 29.9028 191.052 29.9424 cv
190.945 29.9819 190.786 30.0679 190.575 30.1997 cv
cp
f
196.839 30.8911 mo
196.839 31.418 li
196.159 31.418 li
196.159 32.7549 li
195.54 32.7549 li
195.54 31.418 li
193.409 31.418 li
193.409 30.9429 li
195.747 27.5913 li
196.159 27.5913 li
196.159 30.8911 li
196.839 30.8911 li
cp
195.54 30.8911 mo
195.54 28.3784 li
193.773 30.8911 li
195.54 30.8911 li
cp
f
203.744 27.5913 mo
203.744 27.7363 li
203.417 27.7686 203.149 27.8335 202.942 27.9312 cv
202.735 28.0293 202.53 28.1782 202.328 28.3789 cv
202.125 28.5796 201.958 28.8027 201.825 29.0493 cv
201.692 29.2954 201.582 29.5884 201.493 29.9272 cv
201.85 29.6836 202.208 29.562 202.567 29.562 cv
202.912 29.562 203.211 29.7007 203.464 29.979 cv
203.717 30.2568 203.843 30.6147 203.843 31.0513 cv
203.843 31.4731 203.715 31.8584 203.459 32.2056 cv
203.151 32.6279 202.744 32.8389 202.237 32.8389 cv
201.892 32.8389 201.599 32.7246 201.358 32.4961 cv
200.886 32.0513 200.65 31.4746 200.65 30.7666 cv
200.65 30.3145 200.741 29.8843 200.922 29.4771 cv
201.104 29.0698 201.363 28.708 201.699 28.3926 cv
202.036 28.0767 202.358 27.8643 202.667 27.7554 cv
202.975 27.646 203.262 27.5913 203.528 27.5913 cv
203.744 27.5913 li
cp
201.43 30.1997 mo
201.384 30.5356 201.361 30.8066 201.361 31.0132 cv
201.361 31.252 201.405 31.5112 201.493 31.791 cv
201.581 32.0708 201.711 32.293 201.885 32.457 cv
202.011 32.5742 202.165 32.6323 202.346 32.6323 cv
202.562 32.6323 202.754 32.5308 202.924 32.3267 cv
203.094 32.1226 203.179 31.8315 203.179 31.4536 cv
203.179 31.0283 203.095 30.6602 202.926 30.3491 cv
202.758 30.0381 202.519 29.8828 202.209 29.8828 cv
202.115 29.8828 202.014 29.9028 201.907 29.9424 cv
201.799 29.9819 201.64 30.0679 201.43 30.1997 cv
cp
f
207.456 27.6904 mo
207.164 28.3247 li
205.637 28.3247 li
205.302 29.002 li
205.969 29.0991 206.494 29.3442 206.878 29.7373 cv
207.207 30.0757 207.372 30.4741 207.372 30.9316 cv
207.372 31.1978 207.318 31.4443 207.21 31.6709 cv
207.103 31.897 206.966 32.0898 206.803 32.249 cv
206.639 32.4082 206.456 32.5366 206.255 32.6333 cv
205.969 32.7705 205.676 32.8389 205.376 32.8389 cv
205.073 32.8389 204.853 32.7876 204.714 32.6851 cv
204.577 32.5825 204.508 32.4697 204.508 32.3462 cv
204.508 32.2773 204.536 32.2163 204.593 32.1631 cv
204.65 32.1099 204.722 32.0835 204.809 32.0835 cv
204.874 32.0835 204.93 32.0933 204.979 32.1128 cv
205.027 32.1328 205.109 32.1831 205.226 32.2646 cv
205.412 32.3931 205.601 32.457 205.792 32.457 cv
206.083 32.457 206.339 32.3467 206.559 32.126 cv
206.778 31.9058 206.888 31.6372 206.888 31.3208 cv
206.888 31.0142 206.79 30.728 206.594 30.4629 cv
206.397 30.1973 206.127 29.9927 205.781 29.8477 cv
205.511 29.7358 205.142 29.6709 204.674 29.6538 cv
205.644 27.6904 li
207.456 27.6904 li
cp
f
235.077 32.8618 mo
235.077 32.7241 li
235.399 32.7192 235.699 32.6436 235.978 32.4976 cv
236.255 32.3511 236.523 32.0957 236.783 31.731 cv
237.042 31.3657 237.223 30.9668 237.324 30.5327 cv
236.936 30.7817 236.583 30.9063 236.269 30.9063 cv
235.914 30.9063 235.61 30.769 235.357 30.4946 cv
235.104 30.2202 234.978 29.856 234.978 29.4014 cv
234.978 28.9595 235.104 28.5659 235.357 28.2207 cv
235.663 27.8008 236.062 27.5913 236.554 27.5913 cv
236.968 27.5913 237.323 27.7627 237.619 28.1064 cv
237.981 28.5317 238.163 29.0571 238.163 29.6816 cv
238.163 30.2437 238.025 30.7681 237.749 31.2549 cv
237.474 31.7412 237.09 32.145 236.598 32.4663 cv
236.197 32.73 235.762 32.8618 235.289 32.8618 cv
235.077 32.8618 li
cp
237.384 30.2573 mo
237.43 29.9341 237.452 29.6763 237.452 29.4824 cv
237.452 29.2412 237.411 28.981 237.33 28.7017 cv
237.248 28.4224 237.132 28.208 236.982 28.0591 cv
236.832 27.9102 236.662 27.8354 236.472 27.8354 cv
236.251 27.8354 236.058 27.9351 235.892 28.1338 cv
235.726 28.3325 235.643 28.6279 235.643 29.02 cv
235.643 29.5444 235.752 29.9541 235.973 30.2495 cv
236.134 30.4634 236.332 30.5703 236.566 30.5703 cv
236.681 30.5703 236.815 30.543 236.972 30.4883 cv
237.128 30.4336 237.265 30.3564 237.384 30.2573 cv
cp
f
238.767 30.2524 mo
238.767 29.6758 238.854 29.1797 239.027 28.7632 cv
239.201 28.3472 239.433 28.0371 239.721 27.8335 cv
239.944 27.6719 240.176 27.5913 240.414 27.5913 cv
240.802 27.5913 241.149 27.7886 241.458 28.1836 cv
241.843 28.6733 242.035 29.3364 242.035 30.1738 cv
242.035 30.7603 241.951 31.2583 241.782 31.6685 cv
241.613 32.0786 241.397 32.376 241.136 32.561 cv
240.873 32.7461 240.62 32.8389 240.377 32.8389 cv
239.895 32.8389 239.493 32.5542 239.173 31.9854 cv
238.901 31.5059 238.767 30.9282 238.767 30.2524 cv
cp
239.5 30.3438 mo
239.5 31.0396 239.585 31.6069 239.756 32.0469 cv
239.897 32.417 240.108 32.6021 240.388 32.6021 cv
240.521 32.6021 240.66 32.5415 240.805 32.4214 cv
240.948 32.3008 241.057 32.0991 241.131 31.8159 cv
241.245 31.3882 241.303 30.7856 241.303 30.0083 cv
241.303 29.4321 241.243 28.9512 241.124 28.5659 cv
241.035 28.2803 240.92 28.0776 240.778 27.9585 cv
240.677 27.8765 240.554 27.8354 240.41 27.8354 cv
240.242 27.8354 240.092 27.9116 239.961 28.063 cv
239.782 28.269 239.661 28.5933 239.597 29.0356 cv
239.532 29.478 239.5 29.9136 239.5 30.3438 cv
cp
f
246.443 32.8618 mo
246.443 32.7241 li
246.766 32.7192 247.065 32.6436 247.344 32.4976 cv
247.621 32.3511 247.89 32.0957 248.149 31.731 cv
248.408 31.3657 248.589 30.9668 248.69 30.5327 cv
248.301 30.7817 247.949 30.9063 247.634 30.9063 cv
247.279 30.9063 246.976 30.769 246.723 30.4946 cv
246.47 30.2202 246.344 29.856 246.344 29.4014 cv
246.344 28.9595 246.471 28.5659 246.724 28.2207 cv
247.029 27.8008 247.428 27.5913 247.92 27.5913 cv
248.334 27.5913 248.689 27.7627 248.985 28.1064 cv
249.348 28.5317 249.529 29.0571 249.529 29.6816 cv
249.529 30.2437 249.391 30.7681 249.115 31.2549 cv
248.84 31.7412 248.456 32.145 247.964 32.4663 cv
247.563 32.73 247.128 32.8618 246.655 32.8618 cv
246.443 32.8618 li
cp
248.75 30.2573 mo
248.796 29.9341 248.818 29.6763 248.818 29.4824 cv
248.818 29.2412 248.777 28.981 248.696 28.7017 cv
248.614 28.4224 248.498 28.208 248.349 28.0591 cv
248.198 27.9102 248.028 27.8354 247.837 27.8354 cv
247.617 27.8354 247.424 27.9351 247.258 28.1338 cv
247.091 28.3325 247.008 28.6279 247.008 29.02 cv
247.008 29.5444 247.118 29.9541 247.339 30.2495 cv
247.5 30.4634 247.698 30.5703 247.933 30.5703 cv
248.047 30.5703 248.182 30.543 248.338 30.4883 cv
248.494 30.4336 248.631 30.3564 248.75 30.2573 cv
cp
f
250.743 28.187 mo
251.979 27.5913 li
252.104 27.5913 li
252.104 31.8608 li
252.104 32.1455 252.115 32.3228 252.139 32.3926 cv
252.162 32.4624 252.212 32.5161 252.287 32.5537 cv
252.362 32.5913 252.515 32.6123 252.745 32.6172 cv
252.745 32.7549 li
250.835 32.7549 li
250.835 32.6172 li
251.074 32.6123 251.229 32.5918 251.298 32.5557 cv
251.367 32.5195 251.416 32.4707 251.443 32.4097 cv
251.471 32.3481 251.484 32.1655 251.484 31.8608 cv
251.484 29.1265 li
251.484 28.7583 251.472 28.522 251.447 28.4175 cv
251.43 28.3374 251.397 28.2793 251.352 28.2417 cv
251.306 28.2046 251.25 28.186 251.185 28.186 cv
251.093 28.186 250.964 28.2246 250.8 28.3013 cv
250.743 28.187 li
cp
f
281.45 32.8618 mo
281.45 32.7241 li
281.772 32.7192 282.073 32.6436 282.351 32.4976 cv
282.628 32.3511 282.897 32.0957 283.156 31.731 cv
283.415 31.3657 283.596 30.9668 283.697 30.5327 cv
283.309 30.7817 282.956 30.9063 282.642 30.9063 cv
282.287 30.9063 281.983 30.769 281.73 30.4946 cv
281.478 30.2202 281.351 29.856 281.351 29.4014 cv
281.351 28.9595 281.478 28.5659 281.73 28.2207 cv
282.036 27.8008 282.435 27.5913 282.927 27.5913 cv
283.342 27.5913 283.696 27.7627 283.992 28.1064 cv
284.354 28.5317 284.536 29.0571 284.536 29.6816 cv
284.536 30.2437 284.398 30.7681 284.122 31.2549 cv
283.847 31.7412 283.463 32.145 282.971 32.4663 cv
282.57 32.73 282.135 32.8618 281.663 32.8618 cv
281.45 32.8618 li
cp
283.757 30.2573 mo
283.803 29.9341 283.826 29.6763 283.826 29.4824 cv
283.826 29.2412 283.785 28.981 283.703 28.7017 cv
283.621 28.4224 283.505 28.208 283.355 28.0591 cv
283.206 27.9102 283.035 27.8354 282.845 27.8354 cv
282.624 27.8354 282.431 27.9351 282.265 28.1338 cv
282.099 28.3325 282.016 28.6279 282.016 29.02 cv
282.016 29.5444 282.126 29.9541 282.346 30.2495 cv
282.507 30.4634 282.705 30.5703 282.94 30.5703 cv
283.054 30.5703 283.188 30.543 283.345 30.4883 cv
283.501 30.4336 283.638 30.3564 283.757 30.2573 cv
cp
f
288.286 27.5913 mo
288.286 27.7363 li
287.959 27.7686 287.691 27.8335 287.484 27.9312 cv
287.277 28.0293 287.072 28.1782 286.87 28.3789 cv
286.668 28.5796 286.501 28.8027 286.368 29.0493 cv
286.235 29.2954 286.124 29.5884 286.035 29.9272 cv
286.393 29.6836 286.751 29.562 287.11 29.562 cv
287.455 29.562 287.754 29.7007 288.007 29.979 cv
288.26 30.2568 288.386 30.6147 288.386 31.0513 cv
288.386 31.4731 288.258 31.8584 288.002 32.2056 cv
287.694 32.6279 287.287 32.8389 286.78 32.8389 cv
286.435 32.8389 286.142 32.7246 285.901 32.4961 cv
285.429 32.0513 285.193 31.4746 285.193 30.7666 cv
285.193 30.3145 285.284 29.8843 285.465 29.4771 cv
285.646 29.0698 285.905 28.708 286.242 28.3926 cv
286.579 28.0767 286.901 27.8643 287.209 27.7554 cv
287.518 27.646 287.805 27.5913 288.07 27.5913 cv
288.286 27.5913 li
cp
285.972 30.1997 mo
285.927 30.5356 285.903 30.8066 285.903 31.0132 cv
285.903 31.252 285.947 31.5112 286.035 31.791 cv
286.123 32.0708 286.254 32.293 286.428 32.457 cv
286.554 32.5742 286.708 32.6323 286.889 32.6323 cv
287.104 32.6323 287.297 32.5308 287.467 32.3267 cv
287.637 32.1226 287.722 31.8315 287.722 31.4536 cv
287.722 31.0283 287.638 30.6602 287.469 30.3491 cv
287.301 30.0381 287.062 29.8828 286.752 29.8828 cv
286.658 29.8828 286.557 29.9028 286.449 29.9424 cv
286.342 29.9819 286.183 30.0679 285.972 30.1997 cv
cp
f
293.122 32.8618 mo
293.122 32.7241 li
293.444 32.7192 293.744 32.6436 294.022 32.4976 cv
294.3 32.3511 294.568 32.0957 294.828 31.731 cv
295.087 31.3657 295.268 30.9668 295.369 30.5327 cv
294.979 30.7817 294.628 30.9063 294.313 30.9063 cv
293.958 30.9063 293.654 30.769 293.401 30.4946 cv
293.149 30.2202 293.022 29.856 293.022 29.4014 cv
293.022 28.9595 293.149 28.5659 293.402 28.2207 cv
293.708 27.8008 294.106 27.5913 294.599 27.5913 cv
295.013 27.5913 295.368 27.7627 295.664 28.1064 cv
296.026 28.5317 296.208 29.0571 296.208 29.6816 cv
296.208 30.2437 296.069 30.7681 295.794 31.2549 cv
295.519 31.7412 295.135 32.145 294.643 32.4663 cv
294.242 32.73 293.807 32.8618 293.334 32.8618 cv
293.122 32.8618 li
cp
295.429 30.2573 mo
295.475 29.9341 295.497 29.6763 295.497 29.4824 cv
295.497 29.2412 295.456 28.981 295.375 28.7017 cv
295.293 28.4224 295.177 28.208 295.027 28.0591 cv
294.877 27.9102 294.707 27.8354 294.516 27.8354 cv
294.296 27.8354 294.103 27.9351 293.937 28.1338 cv
293.771 28.3325 293.687 28.6279 293.687 29.02 cv
293.687 29.5444 293.797 29.9541 294.018 30.2495 cv
294.179 30.4634 294.377 30.5703 294.611 30.5703 cv
294.726 30.5703 294.86 30.543 295.017 30.4883 cv
295.173 30.4336 295.31 30.3564 295.429 30.2573 cv
cp
f
297.3 27.6904 mo
300.012 27.6904 li
300.012 27.8374 li
298.331 32.8618 li
297.913 32.8618 li
299.424 28.3013 li
298.031 28.3013 li
297.751 28.3013 297.55 28.335 297.431 28.4023 cv
297.222 28.5166 297.054 28.6929 296.927 28.9316 cv
296.818 28.8906 li
297.3 27.6904 li
cp
f
324.466 29.6758 mo
325.496 29.1792 li
325.599 29.1792 li
325.599 32.7378 li
325.599 32.9746 325.608 33.1226 325.628 33.1807 cv
325.648 33.2388 325.689 33.2837 325.752 33.3149 cv
325.814 33.3462 325.941 33.3638 326.134 33.3677 cv
326.134 33.4824 li
324.542 33.4824 li
324.542 33.3677 li
324.741 33.3638 324.87 33.3467 324.928 33.3164 cv
324.985 33.2861 325.026 33.2456 325.049 33.1948 cv
325.071 33.144 325.083 32.9912 325.083 32.7378 cv
325.083 30.459 li
325.083 30.1519 325.073 29.9551 325.052 29.8677 cv
325.037 29.8013 325.011 29.7529 324.973 29.7217 cv
324.935 29.6904 324.888 29.6748 324.834 29.6748 cv
324.757 29.6748 324.649 29.707 324.513 29.7715 cv
324.466 29.6758 li
cp
f
329.825 32.6631 mo
329.53 33.4824 li
327.044 33.4824 li
327.044 33.3652 li
327.775 32.6987 328.29 32.1543 328.589 31.7319 cv
328.887 31.3096 329.036 30.9233 329.036 30.5732 cv
329.036 30.3062 328.954 30.0864 328.79 29.9146 cv
328.627 29.7427 328.431 29.6567 328.203 29.6567 cv
327.996 29.6567 327.81 29.7168 327.645 29.8364 cv
327.48 29.9565 327.358 30.1318 327.279 30.3633 cv
327.165 30.3633 li
327.217 29.9819 327.35 29.6895 327.564 29.4854 cv
327.779 29.2813 328.048 29.1792 328.369 29.1792 cv
328.712 29.1792 328.997 29.2896 329.227 29.5093 cv
329.456 29.729 329.571 29.9883 329.571 30.2871 cv
329.571 30.5005 329.521 30.7144 329.422 30.9272 cv
329.269 31.2632 329.02 31.6187 328.675 31.9937 cv
328.159 32.5566 327.837 32.894 327.709 33.0049 cv
328.804 33.0049 li
329.026 33.0049 329.184 32.9966 329.272 32.98 cv
329.362 32.9634 329.443 32.9297 329.516 32.8794 cv
329.588 32.8286 329.65 32.7563 329.704 32.6631 cv
329.825 32.6631 li
cp
f
333.008 32.6631 mo
332.713 33.4824 li
330.227 33.4824 li
330.227 33.3652 li
330.958 32.6987 331.473 32.1543 331.771 31.7319 cv
332.069 31.3096 332.219 30.9233 332.219 30.5732 cv
332.219 30.3062 332.137 30.0864 331.974 29.9146 cv
331.81 29.7427 331.613 29.6567 331.386 29.6567 cv
331.179 29.6567 330.992 29.7168 330.828 29.8364 cv
330.663 29.9565 330.541 30.1318 330.462 30.3633 cv
330.348 30.3633 li
330.399 29.9819 330.532 29.6895 330.747 29.4854 cv
330.962 29.2813 331.23 29.1792 331.552 29.1792 cv
331.895 29.1792 332.181 29.2896 332.409 29.5093 cv
332.639 29.729 332.754 29.9883 332.754 30.2871 cv
332.754 30.5005 332.704 30.7144 332.604 30.9272 cv
332.451 31.2632 332.202 31.6187 331.858 31.9937 cv
331.342 32.5566 331.02 32.894 330.892 33.0049 cv
331.986 33.0049 li
332.21 33.0049 332.366 32.9966 332.456 32.98 cv
332.545 32.9634 332.626 32.9297 332.698 32.8794 cv
332.771 32.8286 332.834 32.7563 332.888 32.6631 cv
333.008 32.6631 li
cp
f
337.891 29.6758 mo
338.92 29.1792 li
339.023 29.1792 li
339.023 32.7378 li
339.023 32.9746 339.033 33.1226 339.053 33.1807 cv
339.073 33.2388 339.114 33.2837 339.177 33.3149 cv
339.239 33.3462 339.366 33.3638 339.558 33.3677 cv
339.558 33.4824 li
337.967 33.4824 li
337.967 33.3677 li
338.166 33.3638 338.294 33.3467 338.353 33.3164 cv
338.41 33.2861 338.451 33.2456 338.474 33.1948 cv
338.496 33.144 338.508 32.9912 338.508 32.7378 cv
338.508 30.459 li
338.508 30.1519 338.497 29.9551 338.477 29.8677 cv
338.462 29.8013 338.436 29.7529 338.397 29.7217 cv
338.358 29.6904 338.313 29.6748 338.259 29.6748 cv
338.182 29.6748 338.074 29.707 337.938 29.7715 cv
337.891 29.6758 li
cp
f
343.25 32.6631 mo
342.955 33.4824 li
340.469 33.4824 li
340.469 33.3652 li
341.2 32.6987 341.715 32.1543 342.013 31.7319 cv
342.312 31.3096 342.461 30.9233 342.461 30.5732 cv
342.461 30.3062 342.379 30.0864 342.215 29.9146 cv
342.052 29.7427 341.855 29.6567 341.628 29.6567 cv
341.42 29.6567 341.234 29.7168 341.069 29.8364 cv
340.905 29.9565 340.783 30.1318 340.704 30.3633 cv
340.589 30.3633 li
340.642 29.9819 340.774 29.6895 340.989 29.4854 cv
341.204 29.2813 341.473 29.1792 341.794 29.1792 cv
342.137 29.1792 342.422 29.2896 342.651 29.5093 cv
342.881 29.729 342.995 29.9883 342.995 30.2871 cv
342.995 30.5005 342.945 30.7144 342.846 30.9272 cv
342.692 31.2632 342.444 31.6187 342.1 31.9937 cv
341.584 32.5566 341.262 32.894 341.133 33.0049 cv
342.229 33.0049 li
342.451 33.0049 342.607 32.9966 342.697 32.98 cv
342.787 32.9634 342.868 32.9297 342.94 32.8794 cv
343.013 32.8286 343.075 32.7563 343.129 32.6631 cv
343.25 32.6631 li
cp
f
343.836 30.0708 mo
343.956 29.7861 344.108 29.5664 344.292 29.4116 cv
344.476 29.2568 344.704 29.1792 344.979 29.1792 cv
345.316 29.1792 345.576 29.2891 345.756 29.5088 cv
345.894 29.6724 345.962 29.8472 345.962 30.0337 cv
345.962 30.3398 345.769 30.6567 345.383 30.9839 cv
345.643 31.0854 345.839 31.2305 345.972 31.4185 cv
346.105 31.6069 346.172 31.8286 346.172 32.0835 cv
346.172 32.4478 346.056 32.7637 345.823 33.0308 cv
345.521 33.3784 345.081 33.5522 344.507 33.5522 cv
344.223 33.5522 344.028 33.5171 343.926 33.4468 cv
343.823 33.376 343.772 33.3003 343.772 33.2192 cv
343.772 33.1592 343.796 33.1064 343.845 33.061 cv
343.895 33.0151 343.953 32.9922 344.021 32.9922 cv
344.073 32.9922 344.126 33.0005 344.181 33.0176 cv
344.216 33.0278 344.296 33.0664 344.42 33.1323 cv
344.545 33.1987 344.631 33.2378 344.679 33.2505 cv
344.756 33.2734 344.838 33.2852 344.925 33.2852 cv
345.137 33.2852 345.321 33.2031 345.479 33.0396 cv
345.635 32.8755 345.714 32.6816 345.714 32.458 cv
345.714 32.2939 345.677 32.1343 345.604 31.979 cv
345.55 31.8628 345.491 31.7749 345.427 31.7148 cv
345.337 31.6318 345.215 31.5566 345.059 31.4893 cv
344.903 31.4219 344.744 31.3882 344.582 31.3882 cv
344.482 31.3882 li
344.482 31.2925 li
344.646 31.272 344.81 31.2129 344.975 31.1157 cv
345.14 31.0181 345.26 30.9014 345.334 30.7646 cv
345.409 30.6279 345.446 30.4775 345.446 30.314 cv
345.446 30.1006 345.379 29.9282 345.245 29.7969 cv
345.111 29.6655 344.944 29.5996 344.745 29.5996 cv
344.424 29.5996 344.154 29.7729 343.938 30.1201 cv
343.836 30.0708 li
cp
f
370.392 29.6758 mo
371.422 29.1792 li
371.525 29.1792 li
371.525 32.7378 li
371.525 32.9746 371.535 33.1226 371.555 33.1807 cv
371.574 33.2388 371.616 33.2837 371.679 33.3149 cv
371.741 33.3462 371.868 33.3638 372.06 33.3677 cv
372.06 33.4824 li
370.469 33.4824 li
370.469 33.3677 li
370.667 33.3638 370.796 33.3467 370.854 33.3164 cv
370.912 33.2861 370.952 33.2456 370.976 33.1948 cv
370.998 33.144 371.01 32.9912 371.01 32.7378 cv
371.01 30.459 li
371.01 30.1519 370.999 29.9551 370.979 29.8677 cv
370.964 29.8013 370.938 29.7529 370.898 29.7217 cv
370.86 29.6904 370.814 29.6748 370.76 29.6748 cv
370.684 29.6748 370.576 29.707 370.438 29.7715 cv
370.392 29.6758 li
cp
f
375.752 32.6631 mo
375.456 33.4824 li
372.97 33.4824 li
372.97 33.3652 li
373.701 32.6987 374.217 32.1543 374.515 31.7319 cv
374.813 31.3096 374.963 30.9233 374.963 30.5732 cv
374.963 30.3062 374.881 30.0864 374.717 29.9146 cv
374.553 29.7427 374.357 29.6567 374.129 29.6567 cv
373.922 29.6567 373.736 29.7168 373.571 29.8364 cv
373.406 29.9565 373.285 30.1318 373.206 30.3633 cv
373.091 30.3633 li
373.143 29.9819 373.276 29.6895 373.491 29.4854 cv
373.706 29.2813 373.974 29.1792 374.296 29.1792 cv
374.638 29.1792 374.924 29.2896 375.153 29.5093 cv
375.383 29.729 375.497 29.9883 375.497 30.2871 cv
375.497 30.5005 375.447 30.7144 375.348 30.9272 cv
375.194 31.2632 374.945 31.6187 374.602 31.9937 cv
374.085 32.5566 373.763 32.894 373.635 33.0049 cv
374.73 33.0049 li
374.953 33.0049 375.109 32.9966 375.199 32.98 cv
375.289 32.9634 375.37 32.9297 375.442 32.8794 cv
375.515 32.8286 375.577 32.7563 375.631 32.6631 cv
375.752 32.6631 li
cp
f
378.871 29.1792 mo
378.871 29.3003 li
378.598 29.3271 378.375 29.3813 378.202 29.4629 cv
378.03 29.5444 377.859 29.6685 377.69 29.8359 cv
377.522 30.0029 377.383 30.189 377.272 30.3945 cv
377.161 30.5996 377.069 30.8438 376.995 31.1265 cv
377.292 30.9233 377.591 30.8218 377.891 30.8218 cv
378.178 30.8218 378.427 30.9375 378.638 31.1694 cv
378.849 31.4009 378.954 31.6987 378.954 32.063 cv
378.954 32.4146 378.847 32.7354 378.634 33.0249 cv
378.377 33.3765 378.038 33.5522 377.615 33.5522 cv
377.328 33.5522 377.083 33.457 376.883 33.2666 cv
376.489 32.896 376.293 32.4155 376.293 31.8257 cv
376.293 31.4487 376.368 31.0903 376.52 30.751 cv
376.671 30.4116 376.887 30.1099 377.167 29.8472 cv
377.447 29.584 377.717 29.4072 377.974 29.3159 cv
378.229 29.2251 378.469 29.1792 378.69 29.1792 cv
378.871 29.1792 li
cp
376.942 31.353 mo
376.904 31.6333 376.885 31.8589 376.885 32.0313 cv
376.885 32.23 376.922 32.4463 376.995 32.6792 cv
377.068 32.9126 377.177 33.0977 377.321 33.2344 cv
377.427 33.332 377.555 33.3804 377.706 33.3804 cv
377.886 33.3804 378.046 33.2954 378.188 33.1255 cv
378.329 32.9556 378.399 32.7129 378.399 32.3979 cv
378.399 32.0435 378.33 31.7368 378.189 31.4775 cv
378.049 31.2188 377.85 31.0889 377.592 31.0889 cv
377.514 31.0889 377.43 31.1055 377.34 31.1387 cv
377.25 31.1719 377.117 31.2437 376.942 31.353 cv
cp
f
383.689 29.6758 mo
384.72 29.1792 li
384.822 29.1792 li
384.822 32.7378 li
384.822 32.9746 384.832 33.1226 384.853 33.1807 cv
384.872 33.2388 384.913 33.2837 384.976 33.3149 cv
385.038 33.3462 385.165 33.3638 385.357 33.3677 cv
385.357 33.4824 li
383.766 33.4824 li
383.766 33.3677 li
383.965 33.3638 384.094 33.3467 384.151 33.3164 cv
384.209 33.2861 384.25 33.2456 384.272 33.1948 cv
384.296 33.144 384.307 32.9912 384.307 32.7378 cv
384.307 30.459 li
384.307 30.1519 384.297 29.9551 384.275 29.8677 cv
384.261 29.8013 384.234 29.7529 384.196 29.7217 cv
384.157 29.6904 384.111 29.6748 384.058 29.6748 cv
383.98 29.6748 383.873 29.707 383.736 29.7715 cv
383.689 29.6758 li
cp
f
389.049 32.6631 mo
388.754 33.4824 li
386.268 33.4824 li
386.268 33.3652 li
386.999 32.6987 387.514 32.1543 387.813 31.7319 cv
388.11 31.3096 388.26 30.9233 388.26 30.5732 cv
388.26 30.3062 388.178 30.0864 388.015 29.9146 cv
387.851 29.7427 387.654 29.6567 387.427 29.6567 cv
387.22 29.6567 387.033 29.7168 386.868 29.8364 cv
386.704 29.9565 386.582 30.1318 386.503 30.3633 cv
386.389 30.3633 li
386.44 29.9819 386.573 29.6895 386.788 29.4854 cv
387.003 29.2813 387.271 29.1792 387.593 29.1792 cv
387.936 29.1792 388.222 29.2896 388.45 29.5093 cv
388.68 29.729 388.795 29.9883 388.795 30.2871 cv
388.795 30.5005 388.745 30.7144 388.646 30.9272 cv
388.492 31.2632 388.243 31.6187 387.898 31.9937 cv
387.383 32.5566 387.061 32.894 386.933 33.0049 cv
388.027 33.0049 li
388.251 33.0049 388.407 32.9966 388.496 32.98 cv
388.586 32.9634 388.667 32.9297 388.739 32.8794 cv
388.812 32.8286 388.874 32.7563 388.928 32.6631 cv
389.049 32.6631 li
cp
f
389.953 29.2622 mo
392.213 29.2622 li
392.213 29.3848 li
390.813 33.5718 li
390.464 33.5718 li
391.723 29.7715 li
390.563 29.7715 li
390.328 29.7715 390.161 29.7993 390.062 29.855 cv
389.888 29.9507 389.748 30.0977 389.643 30.2964 cv
389.552 30.2622 li
389.953 29.2622 li
cp
f
120.211 14.3223 mo
120.211 14.1846 li
120.401 14.1846 li
120.614 14.1846 120.766 14.1162 120.855 13.98 cv
120.91 13.8979 120.937 13.7139 120.937 13.4282 cv
120.937 10.1514 li
120.937 9.83594 120.902 9.63867 120.833 9.55908 cv
120.736 9.44971 120.592 9.39551 120.401 9.39551 cv
120.211 9.39551 li
120.211 9.25781 li
122.27 9.25781 li
123.026 9.25781 123.601 9.34375 123.995 9.51563 cv
124.389 9.6875 124.706 9.97363 124.946 10.3745 cv
125.186 10.7754 125.306 11.2383 125.306 11.7637 cv
125.306 12.4683 125.092 13.0571 124.665 13.5303 cv
124.185 14.0581 123.454 14.3223 122.471 14.3223 cv
120.211 14.3223 li
cp
121.655 13.9502 mo
121.97 14.02 122.234 14.0547 122.448 14.0547 cv
123.023 14.0547 123.501 13.8521 123.881 13.4468 cv
124.261 13.0415 124.45 12.4917 124.45 11.7979 cv
124.45 11.0986 124.261 10.5479 123.881 10.145 cv
123.501 9.7417 123.014 9.54053 122.418 9.54053 cv
122.194 9.54053 121.94 9.57666 121.655 9.64893 cv
121.655 13.9502 li
cp
f
126.679 9.01318 mo
126.783 9.01318 126.872 9.05029 126.945 9.12354 cv
127.019 9.19678 127.055 9.28516 127.055 9.38965 cv
127.055 9.49365 127.019 9.5835 126.945 9.65771 cv
126.872 9.73242 126.783 9.76953 126.679 9.76953 cv
126.575 9.76953 126.485 9.73242 126.411 9.65771 cv
126.336 9.5835 126.299 9.49365 126.299 9.38965 cv
126.299 9.28516 126.335 9.19678 126.409 9.12354 cv
126.482 9.05029 126.572 9.01318 126.679 9.01318 cv
cp
126.986 10.8008 mo
126.986 13.5508 li
126.986 13.7632 127.002 13.9048 127.033 13.9751 cv
127.064 14.0454 127.11 14.0981 127.171 14.1328 cv
127.232 14.1675 127.344 14.1846 127.506 14.1846 cv
127.506 14.3223 li
125.848 14.3223 li
125.848 14.1846 li
126.014 14.1846 126.125 14.1685 126.182 14.1362 cv
126.239 14.1045 126.284 14.0513 126.317 13.9771 cv
126.351 13.9028 126.368 13.7607 126.368 13.5508 cv
126.368 12.229 li
126.368 11.8613 126.356 11.6226 126.334 11.5142 cv
126.317 11.4351 126.29 11.3799 126.252 11.3491 cv
126.215 11.3179 126.165 11.3022 126.1 11.3022 cv
126.03 11.3022 125.946 11.3213 125.847 11.3584 cv
125.795 11.2212 li
126.823 10.8008 li
126.986 10.8008 li
cp
f
128.81 13.0688 mo
128.602 12.9668 128.441 12.8247 128.33 12.6421 cv
128.219 12.46 128.163 12.2583 128.163 12.0371 cv
128.163 11.6997 128.29 11.4092 128.544 11.1655 cv
128.798 10.9224 129.124 10.8008 129.521 10.8008 cv
129.846 10.8008 130.127 10.8799 130.365 11.0376 cv
131.087 11.0376 li
131.194 11.0376 131.256 11.0405 131.273 11.0469 cv
131.291 11.0532 131.303 11.064 131.311 11.0786 cv
131.325 11.1011 131.333 11.1411 131.333 11.1982 cv
131.333 11.2632 131.327 11.3076 131.314 11.3325 cv
131.307 11.3452 131.293 11.355 131.275 11.3623 cv
131.256 11.3701 131.193 11.3735 131.086 11.3735 cv
130.643 11.3735 li
130.782 11.5527 130.852 11.7813 130.852 12.0596 cv
130.852 12.3774 130.73 12.6494 130.487 12.8755 cv
130.244 13.1016 129.918 13.2144 129.509 13.2144 cv
129.34 13.2144 129.168 13.1895 128.992 13.1396 cv
128.883 13.2349 128.809 13.3174 128.771 13.3887 cv
128.732 13.46 128.713 13.52 128.713 13.5703 cv
128.713 13.6128 128.733 13.6538 128.774 13.6938 cv
128.815 13.7339 128.896 13.7622 129.015 13.7798 cv
129.084 13.7905 129.259 13.7998 129.537 13.8081 cv
130.05 13.8213 130.382 13.8398 130.533 13.8638 cv
130.765 13.896 130.949 13.9819 131.087 14.1211 cv
131.226 14.2607 131.294 14.4321 131.294 14.6362 cv
131.294 14.9175 131.163 15.1812 130.899 15.4272 cv
130.512 15.7905 130.006 15.9722 129.382 15.9722 cv
128.903 15.9722 128.498 15.8638 128.167 15.6475 cv
127.981 15.5229 127.888 15.3936 127.888 15.2593 cv
127.888 15.1992 127.901 15.1396 127.929 15.0796 cv
127.971 14.9878 128.058 14.8594 128.189 14.6953 cv
128.207 14.6729 128.333 14.5386 128.569 14.292 cv
128.44 14.2144 128.35 14.145 128.296 14.084 cv
128.243 14.0225 128.216 13.9531 128.216 13.8755 cv
128.216 13.7881 128.251 13.6855 128.322 13.5679 cv
128.393 13.4502 128.555 13.2837 128.81 13.0688 cv
cp
129.459 10.9839 mo
129.275 10.9839 129.122 11.0571 128.998 11.2036 cv
128.874 11.3496 128.812 11.5737 128.812 11.876 cv
128.812 12.2671 128.896 12.5703 129.065 12.7861 cv
129.194 12.9497 129.357 13.0313 129.556 13.0313 cv
129.744 13.0313 129.898 12.9604 130.02 12.8193 cv
130.142 12.6782 130.202 12.4565 130.202 12.1543 cv
130.202 11.7607 130.117 11.4521 129.946 11.2295 cv
129.819 11.0659 129.657 10.9839 129.459 10.9839 cv
cp
128.774 14.3223 mo
128.659 14.4487 128.571 14.5669 128.511 14.6758 cv
128.452 14.7852 128.422 14.8857 128.422 14.9775 cv
128.422 15.0967 128.494 15.2012 128.638 15.2905 cv
128.886 15.4443 129.245 15.5215 129.713 15.5215 cv
130.16 15.5215 130.489 15.4424 130.701 15.2847 cv
130.914 15.1265 131.02 14.958 131.02 14.7793 cv
131.02 14.6499 130.956 14.5581 130.83 14.5034 cv
130.701 14.4487 130.445 14.416 130.063 14.4063 cv
129.504 14.3916 129.075 14.3638 128.774 14.3223 cv
cp
f
132.561 9.01318 mo
132.665 9.01318 132.754 9.05029 132.827 9.12354 cv
132.9 9.19678 132.937 9.28516 132.937 9.38965 cv
132.937 9.49365 132.9 9.5835 132.827 9.65771 cv
132.754 9.73242 132.665 9.76953 132.561 9.76953 cv
132.456 9.76953 132.367 9.73242 132.292 9.65771 cv
132.218 9.5835 132.181 9.49365 132.181 9.38965 cv
132.181 9.28516 132.217 9.19678 132.291 9.12354 cv
132.364 9.05029 132.454 9.01318 132.561 9.01318 cv
cp
132.868 10.8008 mo
132.868 13.5508 li
132.868 13.7632 132.884 13.9048 132.915 13.9751 cv
132.946 14.0454 132.992 14.0981 133.053 14.1328 cv
133.114 14.1675 133.226 14.1846 133.388 14.1846 cv
133.388 14.3223 li
131.73 14.3223 li
131.73 14.1846 li
131.896 14.1846 132.007 14.1685 132.064 14.1362 cv
132.121 14.1045 132.166 14.0513 132.199 13.9771 cv
132.232 13.9028 132.25 13.7607 132.25 13.5508 cv
132.25 12.229 li
132.25 11.8613 132.238 11.6226 132.216 11.5142 cv
132.198 11.4351 132.171 11.3799 132.134 11.3491 cv
132.097 11.3179 132.046 11.3022 131.981 11.3022 cv
131.912 11.3022 131.828 11.3213 131.729 11.3584 cv
131.676 11.2212 li
132.704 10.8008 li
132.868 10.8008 li
cp
f
134.778 9.77734 mo
134.778 10.8999 li
135.576 10.8999 li
135.576 11.1523 li
134.778 11.1597 li
134.778 13.3765 li
134.778 13.5981 134.81 13.7476 134.873 13.8247 cv
134.936 13.9019 135.018 13.9404 135.117 13.9404 cv
135.199 13.9404 135.278 13.9146 135.355 13.8628 cv
135.432 13.8115 135.492 13.7354 135.534 13.6348 cv
135.679 13.6348 li
135.592 13.8804 135.469 14.0654 135.309 14.1895 cv
135.15 14.3135 134.985 14.3755 134.816 14.3755 cv
134.702 14.3755 134.59 14.3438 134.48 14.2803 cv
134.371 14.2163 134.29 14.1255 134.237 14.0068 cv
134.185 13.8882 134.159 13.7056 134.159 13.4585 cv
134.159 11.1523 li
133.617 11.1523 li
133.617 11.0332 li
133.754 10.979 133.894 10.8872 134.038 10.7583 cv
134.181 10.6289 134.31 10.4751 134.422 10.2959 cv
134.48 10.2012 134.561 10.0283 134.663 9.77734 cv
134.778 9.77734 li
cp
f
138.078 10.8008 mo
138.078 11.9619 li
137.955 11.9619 li
137.861 11.5981 137.74 11.3501 137.593 11.2192 cv
137.446 11.0879 137.258 11.0225 137.03 11.0225 cv
136.856 11.0225 136.717 11.0684 136.61 11.1602 cv
136.504 11.252 136.451 11.354 136.451 11.4653 cv
136.451 11.6045 136.49 11.7241 136.568 11.8232 cv
136.644 11.9253 136.8 12.0332 137.036 12.1475 cv
137.581 12.4116 li
138.085 12.6577 138.337 12.9824 138.337 13.3848 cv
138.337 13.6958 138.22 13.9458 137.985 14.1362 cv
137.75 14.3262 137.487 14.4214 137.196 14.4214 cv
136.987 14.4214 136.749 14.3853 136.48 14.3125 cv
136.398 14.2886 136.332 14.2764 136.279 14.2764 cv
136.222 14.2764 136.177 14.3071 136.145 14.3682 cv
136.023 14.3682 li
136.023 13.146 li
136.145 13.146 li
136.215 13.4946 136.348 13.7578 136.544 13.9346 cv
136.741 14.1113 136.961 14.1997 137.205 14.1997 cv
137.376 14.1997 137.517 14.1499 137.625 14.0493 cv
137.733 13.9487 137.787 13.8276 137.787 13.686 cv
137.787 13.5151 137.727 13.3711 137.605 13.2544 cv
137.484 13.1377 137.243 12.9902 136.882 12.8125 cv
136.521 12.6348 136.286 12.4736 136.174 12.3291 cv
136.063 12.187 136.007 12.0078 136.007 11.791 cv
136.007 11.5093 136.104 11.2739 136.296 11.085 cv
136.489 10.8955 136.737 10.8008 137.043 10.8008 cv
137.177 10.8008 137.339 10.8301 137.531 10.8887 cv
137.657 10.9268 137.742 10.9458 137.784 10.9458 cv
137.824 10.9458 137.855 10.937 137.877 10.9194 cv
137.899 10.9014 137.925 10.8618 137.955 10.8008 cv
138.078 10.8008 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
106.396 .63623 mo
152.226 .63623 li
152.226 23.5518 li
106.396 23.5518 li
106.396 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
19.332 4.36914 mo
19.4468 6.08789 li
19.332 6.08789 li
19.1787 5.57275 18.9595 5.20264 18.6743 4.97607 cv
18.3896 4.74951 18.0474 4.63672 17.6484 4.63672 cv
17.314 4.63672 17.0117 4.72168 16.7417 4.89209 cv
16.4717 5.06299 16.2593 5.33496 16.1045 5.7085 cv
15.9492 6.08154 15.8721 6.5459 15.8721 7.10107 cv
15.8721 7.55908 15.9448 7.95654 16.0913 8.29248 cv
16.2373 8.62842 16.457 8.88623 16.7505 9.06543 cv
17.0439 9.24463 17.3789 9.33447 17.7554 9.33447 cv
18.0825 9.33447 18.3711 9.26416 18.6211 9.12402 cv
18.8711 8.9834 19.146 8.70459 19.4458 8.2876 cv
19.5615 8.36426 li
19.3081 8.81299 19.0132 9.14209 18.6753 9.3501 cv
18.3379 9.55859 17.9375 9.6626 17.4731 9.6626 cv
16.6367 9.6626 15.9893 9.35156 15.5303 8.72949 cv
15.1875 8.2666 15.0166 7.72168 15.0166 7.09424 cv
15.0166 6.58936 15.1294 6.125 15.3545 5.70166 cv
15.5801 5.27881 15.8906 4.95117 16.2861 4.71826 cv
16.6812 4.48584 17.1133 4.36914 17.5815 4.36914 cv
17.9458 4.36914 18.3052 4.45898 18.6597 4.63818 cv
18.7637 4.69336 18.8379 4.7207 18.8823 4.7207 cv
18.9492 4.7207 19.0078 4.69678 19.0571 4.64941 cv
19.1216 4.58252 19.1675 4.48877 19.1948 4.36914 cv
19.332 4.36914 li
cp
f
21.6963 6.02686 mo
22.2139 6.02686 22.6294 6.22314 22.9429 6.61572 cv
23.2095 6.95166 23.3423 7.33691 23.3423 7.77197 cv
23.3423 8.07764 23.269 8.38721 23.1221 8.7002 cv
22.9751 9.01367 22.7729 9.24951 22.5156 9.40869 cv
22.2578 9.56787 21.9712 9.64746 21.6553 9.64746 cv
21.1401 9.64746 20.7305 9.44238 20.4272 9.03223 cv
20.1709 8.68652 20.0425 8.29883 20.0425 7.86865 cv
20.0425 7.55566 20.1206 7.24414 20.2759 6.93506 cv
20.4316 6.62549 20.6362 6.39648 20.8901 6.24854 cv
21.144 6.10059 21.4126 6.02686 21.6963 6.02686 cv
cp
21.5806 6.271 mo
21.4487 6.271 21.3164 6.31006 21.1836 6.38867 cv
21.0503 6.4668 20.9429 6.604 20.8608 6.7998 cv
20.7788 6.99609 20.7378 7.24805 20.7378 7.55566 cv
20.7378 8.05225 20.8364 8.48047 21.0342 8.84033 cv
21.2319 9.2002 21.4922 9.37988 21.8154 9.37988 cv
22.0566 9.37988 22.2559 9.28076 22.4121 9.08252 cv
22.5688 8.88379 22.6475 8.54248 22.6475 8.05811 cv
22.6475 7.45264 22.5166 6.97607 22.2559 6.62842 cv
22.0791 6.39014 21.854 6.271 21.5806 6.271 cv
cp
f
24.7783 6.74316 mo
25.1777 6.26563 25.5586 6.02686 25.9209 6.02686 cv
26.1069 6.02686 26.2666 6.07373 26.4009 6.16699 cv
26.5347 6.26025 26.6416 6.41406 26.7207 6.62842 cv
26.7754 6.77783 26.8027 7.00684 26.8027 7.31592 cv
26.8027 8.77686 li
26.8027 8.9917 26.8198 9.1377 26.8545 9.21436 cv
26.8818 9.27588 26.9258 9.32422 26.9863 9.35889 cv
27.0469 9.39307 27.1587 9.41064 27.3223 9.41064 cv
27.3223 9.54834 li
25.6338 9.54834 li
25.6338 9.41064 li
25.7046 9.41064 li
25.8633 9.41064 25.9741 9.38623 26.0371 9.33838 cv
26.1001 9.29004 26.1445 9.21924 26.1689 9.125 cv
26.1792 9.08789 26.1841 8.97168 26.1841 8.77686 cv
26.1841 7.37012 li
26.1841 7.05762 26.1436 6.83057 26.0635 6.68945 cv
25.9829 6.54834 25.8477 6.47754 25.6572 6.47754 cv
25.3633 6.47754 25.0703 6.63965 24.7783 6.96436 cv
24.7783 8.77686 li
24.7783 9.00635 24.792 9.14844 24.8198 9.20313 cv
24.8545 9.2749 24.9028 9.32715 24.9639 9.36084 cv
25.0249 9.39404 25.1489 9.41064 25.3359 9.41064 cv
25.3359 9.54834 li
23.6401 9.54834 li
23.6401 9.41064 li
23.7148 9.41064 li
23.8896 9.41064 24.0073 9.3667 24.0684 9.27881 cv
24.1294 9.19141 24.1597 9.02393 24.1597 8.77686 cv
24.1597 7.50879 li
24.1597 7.09863 24.1504 6.84912 24.1318 6.75977 cv
24.1133 6.66992 24.0845 6.60938 24.0464 6.57666 cv
24.0078 6.54443 23.9565 6.52832 23.8921 6.52832 cv
23.8223 6.52832 23.7393 6.54688 23.6426 6.58447 cv
23.5869 6.44678 li
24.6177 6.02686 li
24.7783 6.02686 li
24.7783 6.74316 li
cp
f
28.5366 5.00342 mo
28.5366 6.12598 li
29.3345 6.12598 li
29.3345 6.37793 li
28.5366 6.38574 li
28.5366 8.60254 li
28.5366 8.82422 28.5684 8.97314 28.6318 9.05029 cv
28.6948 9.12744 28.7764 9.16602 28.8755 9.16602 cv
28.9575 9.16602 29.0371 9.14014 29.1138 9.08887 cv
29.1909 9.03711 29.2505 8.96143 29.293 8.86084 cv
29.438 8.86084 li
29.3506 9.10645 29.2275 9.2915 29.0684 9.41553 cv
28.9087 9.53955 28.7446 9.60156 28.5752 9.60156 cv
28.4604 9.60156 28.3486 9.56982 28.2393 9.50635 cv
28.1294 9.44238 28.0483 9.35107 27.9961 9.23291 cv
27.9438 9.11426 27.918 8.93115 27.918 8.68457 cv
27.918 6.37793 li
27.3755 6.37793 li
27.3755 6.25928 li
27.5127 6.20508 27.6533 6.11328 27.7969 5.98389 cv
27.9399 5.85498 28.0684 5.70068 28.1812 5.52197 cv
28.2388 5.42725 28.3193 5.25439 28.4219 5.00342 cv
28.5366 5.00342 li
cp
f
30.6143 6.02686 mo
30.6143 6.79834 li
30.8979 6.28369 31.1895 6.02686 31.4883 6.02686 cv
31.624 6.02686 31.7363 6.06885 31.8252 6.15234 cv
31.9141 6.23584 31.9585 6.33252 31.9585 6.44238 cv
31.9585 6.53955 31.9268 6.62207 31.8628 6.68945 cv
31.7988 6.75684 31.7227 6.79053 31.6338 6.79053 cv
31.5479 6.79053 31.4512 6.74756 31.3433 6.66064 cv
31.2358 6.57422 31.1558 6.53076 31.104 6.53076 cv
31.0596 6.53076 31.0112 6.55615 30.9595 6.60596 cv
30.8481 6.7085 30.7329 6.87695 30.6143 7.11182 cv
30.6143 8.74609 li
30.6143 8.93652 30.6377 9.08057 30.6851 9.17822 cv
30.7173 9.24561 30.7744 9.30127 30.8564 9.34521 cv
30.9385 9.38867 31.0562 9.41064 31.21 9.41064 cv
31.21 9.54834 li
29.4609 9.54834 li
29.4609 9.41064 li
29.6343 9.41064 29.7627 9.3833 29.8472 9.32861 cv
29.9087 9.28857 29.9521 9.22559 29.9771 9.13818 cv
29.9893 9.09619 29.9956 8.97559 29.9956 8.77686 cv
29.9956 7.45508 li
29.9956 7.05811 29.9873 6.82178 29.9712 6.74609 cv
29.9551 6.67041 29.9253 6.61523 29.8818 6.58057 cv
29.8389 6.5459 29.7847 6.52832 29.7202 6.52832 cv
29.6436 6.52832 29.5566 6.54688 29.46 6.58447 cv
29.4229 6.44678 li
30.4575 6.02686 li
30.6143 6.02686 li
cp
f
33.7725 6.02686 mo
34.2905 6.02686 34.7061 6.22314 35.0195 6.61572 cv
35.2856 6.95166 35.4189 7.33691 35.4189 7.77197 cv
35.4189 8.07764 35.3452 8.38721 35.1987 8.7002 cv
35.0518 9.01367 34.8496 9.24951 34.5918 9.40869 cv
34.3345 9.56787 34.0479 9.64746 33.7314 9.64746 cv
33.2163 9.64746 32.8071 9.44238 32.5034 9.03223 cv
32.2471 8.68652 32.1191 8.29883 32.1191 7.86865 cv
32.1191 7.55566 32.1968 7.24414 32.3525 6.93506 cv
32.5078 6.62549 32.7124 6.39648 32.9663 6.24854 cv
33.2202 6.10059 33.4893 6.02686 33.7725 6.02686 cv
cp
33.6572 6.271 mo
33.5254 6.271 33.3931 6.31006 33.2598 6.38867 cv
33.127 6.4668 33.0195 6.604 32.937 6.7998 cv
32.855 6.99609 32.814 7.24805 32.814 7.55566 cv
32.814 8.05225 32.9131 8.48047 33.1108 8.84033 cv
33.3086 9.2002 33.5688 9.37988 33.8921 9.37988 cv
34.1333 9.37988 34.332 9.28076 34.4888 9.08252 cv
34.6455 8.88379 34.7236 8.54248 34.7236 8.05811 cv
34.7236 7.45264 34.5933 6.97607 34.332 6.62842 cv
34.1558 6.39014 33.9307 6.271 33.6572 6.271 cv
cp
f
37.0381 4.23926 mo
37.0381 8.77686 li
37.0381 8.98926 37.0537 9.13037 37.0845 9.19922 cv
37.1157 9.26855 37.1631 9.3208 37.2275 9.35693 cv
37.292 9.39258 37.4121 9.41064 37.5884 9.41064 cv
37.5884 9.54834 li
35.9155 9.54834 li
35.9155 9.41064 li
36.0723 9.41064 36.1792 9.39453 36.2363 9.3623 cv
36.2939 9.33008 36.3384 9.27686 36.3711 9.20313 cv
36.4033 9.12891 36.4194 8.98682 36.4194 8.77686 cv
36.4194 5.66797 li
36.4194 5.28662 36.4106 5.05225 36.3936 4.96484 cv
36.376 4.87744 36.3481 4.81787 36.3101 4.78564 cv
36.2715 4.75342 36.2227 4.7373 36.1631 4.7373 cv
36.0986 4.7373 36.0166 4.75732 35.9175 4.79688 cv
35.8545 4.65967 li
36.8706 4.23926 li
37.0381 4.23926 li
cp
f
14.3823 17.7964 mo
14.2905 18.248 14.1104 18.5942 13.8418 18.8345 cv
13.5732 19.0752 13.2759 19.1953 12.9502 19.1953 cv
12.562 19.1953 12.2241 19.0327 11.9355 18.707 cv
11.647 18.3813 11.5029 17.9414 11.5029 17.3872 cv
11.5029 16.8501 11.6626 16.4136 11.9819 16.0781 cv
12.3013 15.7427 12.6846 15.5747 13.1313 15.5747 cv
13.4668 15.5747 13.7427 15.6636 13.959 15.8418 cv
14.1753 16.0195 14.2832 16.2041 14.2832 16.396 cv
14.2832 16.4902 14.2529 16.5669 14.1919 16.6255 cv
14.1309 16.6836 14.0459 16.7129 13.9365 16.7129 cv
13.79 16.7129 13.6807 16.6655 13.6084 16.5703 cv
13.564 16.5176 13.5347 16.4175 13.521 16.27 cv
13.5073 16.1221 13.457 16.0093 13.3701 15.9321 cv
13.2832 15.8569 13.1626 15.8193 13.0083 15.8193 cv
12.7598 15.8193 12.5596 15.9116 12.4082 16.0957 cv
12.207 16.3398 12.1064 16.6626 12.1064 17.064 cv
12.1064 17.4727 12.2065 17.8335 12.4067 18.146 cv
12.6074 18.4585 12.8779 18.6147 13.2188 18.6147 cv
13.4629 18.6147 13.6816 18.5332 13.876 18.3696 cv
14.0132 18.2554 14.146 18.0469 14.2754 17.7441 cv
14.3823 17.7964 li
cp
f
15.7725 13.7876 mo
15.7725 16.2871 li
16.0488 15.9839 16.2681 15.7896 16.4302 15.7036 cv
16.5918 15.6177 16.7534 15.5747 16.9155 15.5747 cv
17.1099 15.5747 17.2764 15.6284 17.416 15.7354 cv
17.5552 15.8428 17.6587 16.0107 17.7261 16.2397 cv
17.7734 16.3994 17.7969 16.6909 17.7969 17.1143 cv
17.7969 18.3247 li
17.7969 18.5396 17.8145 18.687 17.8486 18.7661 cv
17.8735 18.8252 17.9155 18.8721 17.9746 18.9067 cv
18.0342 18.9414 18.1431 18.9585 18.3013 18.9585 cv
18.3013 19.0962 li
16.6284 19.0962 li
16.6284 18.9585 li
16.7061 18.9585 li
16.8647 18.9585 16.9751 18.9346 17.0371 18.8862 cv
17.0986 18.8384 17.1421 18.7671 17.167 18.6733 cv
17.1743 18.6338 17.1782 18.5176 17.1782 18.3247 cv
17.1782 17.1133 li
17.1782 16.7397 17.1587 16.4941 17.1201 16.377 cv
17.0815 16.2598 17.02 16.1719 16.9351 16.1133 cv
16.8506 16.0547 16.748 16.0254 16.6289 16.0254 cv
16.5063 16.0254 16.3794 16.0581 16.2476 16.1226 cv
16.1152 16.1875 15.957 16.3179 15.7725 16.5151 cv
15.7725 18.3247 li
15.7725 18.5571 15.7856 18.7017 15.8115 18.7583 cv
15.8379 18.8154 15.8862 18.8628 15.9565 18.9014 cv
16.0273 18.9395 16.1494 18.9585 16.3228 18.9585 cv
16.3228 19.0962 li
14.6348 19.0962 li
14.6348 18.9585 li
14.7856 18.9585 14.9043 18.9351 14.9907 18.8882 cv
15.04 18.8638 15.0796 18.8164 15.1094 18.7476 cv
15.1392 18.6782 15.1538 18.5376 15.1538 18.3247 cv
15.1538 15.231 li
15.1538 14.8433 15.1445 14.6045 15.126 14.5156 cv
15.1074 14.4268 15.0791 14.3662 15.0405 14.334 cv
15.002 14.3018 14.9507 14.2856 14.8862 14.2856 cv
14.834 14.2856 14.7495 14.3052 14.6333 14.3452 cv
14.5811 14.2075 li
15.6016 13.7876 li
15.7725 13.7876 li
cp
f
20.417 18.5991 mo
20.0664 18.8716 19.8462 19.0288 19.7568 19.0713 cv
19.6226 19.1338 19.4795 19.165 19.3281 19.165 cv
19.0918 19.165 18.897 19.084 18.7441 18.9224 cv
18.5913 18.7603 18.5151 18.5474 18.5151 18.2837 cv
18.5151 18.1172 18.5522 17.9727 18.627 17.8506 cv
18.7285 17.6812 18.9058 17.522 19.1582 17.3726 cv
19.4106 17.2231 19.8301 17.0415 20.417 16.8276 cv
20.417 16.6934 li
20.417 16.3535 20.3628 16.1206 20.2549 15.9937 cv
20.1475 15.8672 19.9902 15.8042 19.7847 15.8042 cv
19.6284 15.8042 19.5044 15.8462 19.4126 15.9312 cv
19.3184 16.0156 19.2715 16.1128 19.2715 16.2222 cv
19.2788 16.4385 li
19.2788 16.5532 19.2495 16.6416 19.1904 16.7036 cv
19.1318 16.7661 19.0552 16.7969 18.96 16.7969 cv
18.8672 16.7969 18.7915 16.7646 18.7329 16.6997 cv
18.6743 16.6353 18.6445 16.5464 18.6445 16.4346 cv
18.6445 16.2202 18.7544 16.0234 18.9736 15.8442 cv
19.1929 15.6646 19.5005 15.5747 19.8965 15.5747 cv
20.2002 15.5747 20.4492 15.626 20.6436 15.728 cv
20.7905 15.8052 20.8984 15.9258 20.9683 16.0898 cv
21.0132 16.1968 21.0356 16.416 21.0356 16.7466 cv
21.0356 17.9077 li
21.0356 18.2334 21.042 18.4331 21.0542 18.5068 cv
21.0669 18.5801 21.0874 18.6294 21.1162 18.6543 cv
21.145 18.6792 21.1782 18.6914 21.2153 18.6914 cv
21.2554 18.6914 21.2905 18.6826 21.3203 18.6655 cv
21.373 18.6333 21.4741 18.5425 21.624 18.3936 cv
21.624 18.6021 li
21.3438 18.9771 21.0767 19.165 20.8218 19.165 cv
20.6992 19.165 20.6021 19.1221 20.5293 19.0366 cv
20.457 18.9512 20.4194 18.8052 20.417 18.5991 cv
cp
20.417 18.3569 mo
20.417 17.0566 li
20.0391 17.2056 19.7954 17.3115 19.6851 17.3735 cv
19.4878 17.4829 19.3462 17.5972 19.2612 17.7163 cv
19.1763 17.8354 19.1338 17.9658 19.1338 18.1074 cv
19.1338 18.2861 19.1875 18.4346 19.2949 18.5527 cv
19.4023 18.6704 19.5264 18.7295 19.6665 18.7295 cv
19.8564 18.7295 20.1069 18.6055 20.417 18.3569 cv
cp
f
22.7847 15.5747 mo
22.7847 16.3462 li
23.0688 15.832 23.3599 15.5747 23.6587 15.5747 cv
23.7944 15.5747 23.9072 15.6167 23.9961 15.7002 cv
24.085 15.7837 24.1294 15.8804 24.1294 15.9907 cv
24.1294 16.0879 24.0972 16.1704 24.0332 16.2378 cv
23.9692 16.3052 23.8931 16.3389 23.8047 16.3389 cv
23.7183 16.3389 23.6216 16.2954 23.5137 16.209 cv
23.4063 16.1226 23.3267 16.0791 23.2744 16.0791 cv
23.23 16.0791 23.1816 16.104 23.1299 16.1538 cv
23.0186 16.2563 22.9033 16.4248 22.7847 16.6597 cv
22.7847 18.2944 li
22.7847 18.4844 22.8086 18.6284 22.8555 18.7261 cv
22.8877 18.7935 22.9448 18.8496 23.0269 18.8931 cv
23.1089 18.937 23.2266 18.9585 23.3809 18.9585 cv
23.3809 19.0962 li
21.6313 19.0962 li
21.6313 18.9585 li
21.8047 18.9585 21.9336 18.9312 22.0176 18.8765 cv
22.0796 18.8369 22.1226 18.7734 22.1475 18.6865 cv
22.1597 18.644 22.166 18.5234 22.166 18.3247 cv
22.166 17.0034 li
22.166 16.6064 22.1582 16.3701 22.1421 16.2944 cv
22.126 16.2188 22.0962 16.1636 22.0527 16.1284 cv
22.0093 16.0938 21.9556 16.0767 21.8911 16.0767 cv
21.814 16.0767 21.7271 16.0952 21.6304 16.1323 cv
21.5933 15.9951 li
22.6279 15.5747 li
22.7847 15.5747 li
cp
f
26.1533 18.5991 mo
25.8027 18.8716 25.583 19.0288 25.4932 19.0713 cv
25.3589 19.1338 25.2163 19.165 25.0645 19.165 cv
24.8281 19.165 24.6338 19.084 24.4805 18.9224 cv
24.3276 18.7603 24.2515 18.5474 24.2515 18.2837 cv
24.2515 18.1172 24.2886 17.9727 24.3633 17.8506 cv
24.4653 17.6812 24.6426 17.522 24.8945 17.3726 cv
25.147 17.2231 25.5669 17.0415 26.1533 16.8276 cv
26.1533 16.6934 li
26.1533 16.3535 26.0996 16.1206 25.9917 15.9937 cv
25.8838 15.8672 25.7271 15.8042 25.521 15.8042 cv
25.3647 15.8042 25.2407 15.8462 25.1494 15.9312 cv
25.0552 16.0156 25.0078 16.1128 25.0078 16.2222 cv
25.0151 16.4385 li
25.0151 16.5532 24.9858 16.6416 24.9272 16.7036 cv
24.8682 16.7661 24.7915 16.7969 24.6963 16.7969 cv
24.604 16.7969 24.5283 16.7646 24.4692 16.6997 cv
24.4106 16.6353 24.3813 16.5464 24.3813 16.4346 cv
24.3813 16.2202 24.4907 16.0234 24.71 15.8442 cv
24.9292 15.6646 25.2368 15.5747 25.6328 15.5747 cv
25.9365 15.5747 26.1855 15.626 26.3799 15.728 cv
26.5269 15.8052 26.6353 15.9258 26.7051 16.0898 cv
26.7495 16.1968 26.772 16.416 26.772 16.7466 cv
26.772 17.9077 li
26.772 18.2334 26.7783 18.4331 26.791 18.5068 cv
26.8032 18.5801 26.8237 18.6294 26.8525 18.6543 cv
26.8813 18.6792 26.9146 18.6914 26.9521 18.6914 cv
26.9917 18.6914 27.0269 18.6826 27.0566 18.6655 cv
27.1094 18.6333 27.2104 18.5425 27.3604 18.3936 cv
27.3604 18.6021 li
27.0806 18.9771 26.813 19.165 26.5581 19.165 cv
26.4355 19.165 26.3384 19.1221 26.2656 19.0366 cv
26.1934 18.9512 26.1558 18.8052 26.1533 18.5991 cv
cp
26.1533 18.3569 mo
26.1533 17.0566 li
25.7759 17.2056 25.5317 17.3115 25.4219 17.3735 cv
25.2241 17.4829 25.083 17.5972 24.9976 17.7163 cv
24.9126 17.8354 24.8701 17.9658 24.8701 18.1074 cv
24.8701 18.2861 24.9238 18.4346 25.0313 18.5527 cv
25.1392 18.6704 25.2627 18.7295 25.4028 18.7295 cv
25.5933 18.7295 25.8433 18.6055 26.1533 18.3569 cv
cp
f
30.4233 17.7964 mo
30.3315 18.248 30.1509 18.5942 29.8823 18.8345 cv
29.6138 19.0752 29.3169 19.1953 28.9912 19.1953 cv
28.603 19.1953 28.2646 19.0327 27.9761 18.707 cv
27.688 18.3813 27.5435 17.9414 27.5435 17.3872 cv
27.5435 16.8501 27.7031 16.4136 28.0225 16.0781 cv
28.3418 15.7427 28.7251 15.5747 29.1724 15.5747 cv
29.5078 15.5747 29.7837 15.6636 29.9995 15.8418 cv
30.2158 16.0195 30.3242 16.2041 30.3242 16.396 cv
30.3242 16.4902 30.2935 16.5669 30.2329 16.6255 cv
30.1719 16.6836 30.0869 16.7129 29.9775 16.7129 cv
29.8306 16.7129 29.7217 16.6655 29.6494 16.5703 cv
29.6045 16.5176 29.5752 16.4175 29.5615 16.27 cv
29.5479 16.1221 29.4976 16.0093 29.4106 15.9321 cv
29.3237 15.8569 29.2031 15.8193 29.0493 15.8193 cv
28.8008 15.8193 28.6006 15.9116 28.4492 16.0957 cv
28.2476 16.3398 28.147 16.6626 28.147 17.064 cv
28.147 17.4727 28.2471 17.8335 28.4478 18.146 cv
28.6479 18.4585 28.9189 18.6147 29.2598 18.6147 cv
29.5034 18.6147 29.7227 18.5332 29.917 18.3696 cv
30.0537 18.2554 30.187 18.0469 30.3164 17.7441 cv
30.4233 17.7964 li
cp
f
31.8057 14.5513 mo
31.8057 15.6743 li
32.604 15.6743 li
32.604 15.9263 li
31.8057 15.9341 li
31.8057 18.1509 li
31.8057 18.3721 31.8374 18.5215 31.9009 18.5986 cv
31.9644 18.6758 32.0454 18.7144 32.145 18.7144 cv
32.2266 18.7144 32.3062 18.6885 32.3833 18.6372 cv
32.46 18.5854 32.52 18.5093 32.562 18.4087 cv
32.707 18.4087 li
32.6201 18.6543 32.4971 18.8394 32.3374 18.9634 cv
32.1782 19.0874 32.0137 19.1499 31.8442 19.1499 cv
31.73 19.1499 31.6177 19.1177 31.5083 19.0542 cv
31.3989 18.9907 31.3179 18.8994 31.2656 18.7808 cv
31.2134 18.6626 31.187 18.4795 31.187 18.2324 cv
31.187 15.9263 li
30.645 15.9263 li
30.645 15.8071 li
30.7822 15.7534 30.9224 15.6616 31.0659 15.5322 cv
31.2095 15.4028 31.3379 15.249 31.4507 15.0698 cv
31.5083 14.9751 31.5884 14.8022 31.6914 14.5513 cv
31.8057 14.5513 li
cp
f
33.4023 16.9653 mo
33.3999 17.4702 33.5229 17.8662 33.7715 18.1538 cv
34.0205 18.4409 34.3125 18.5845 34.6484 18.5845 cv
34.8721 18.5845 35.0664 18.5234 35.2319 18.4019 cv
35.3975 18.2798 35.5361 18.0684 35.6479 17.7671 cv
35.7627 17.8418 li
35.7104 18.186 35.5591 18.4976 35.3081 18.7769 cv
35.0571 19.0562 34.7432 19.1953 34.3652 19.1953 cv
33.9556 19.1953 33.605 19.0361 33.313 18.7168 cv
33.021 18.3979 32.8755 17.9688 32.8755 17.4302 cv
32.8755 16.8462 33.0249 16.3911 33.3242 16.0649 cv
33.6235 15.7383 33.999 15.5747 34.4512 15.5747 cv
34.8335 15.5747 35.1479 15.7012 35.3936 15.9531 cv
35.6396 16.2056 35.7627 16.5425 35.7627 16.9653 cv
33.4023 16.9653 li
cp
33.4023 16.7515 mo
34.9834 16.7515 li
34.9712 16.5327 34.9448 16.3784 34.9053 16.2896 cv
34.8433 16.1504 34.7505 16.041 34.6274 15.9614 cv
34.5044 15.8818 34.3755 15.8423 34.2412 15.8423 cv
34.0352 15.8423 33.8506 15.9224 33.6875 16.0825 cv
33.5249 16.2427 33.4297 16.4653 33.4023 16.7515 cv
cp
f
37.1299 15.5747 mo
37.1299 16.3462 li
37.4136 15.832 37.7051 15.5747 38.0039 15.5747 cv
38.1396 15.5747 38.252 15.6167 38.3408 15.7002 cv
38.4297 15.7837 38.4741 15.8804 38.4741 15.9907 cv
38.4741 16.0879 38.4424 16.1704 38.3784 16.2378 cv
38.3145 16.3052 38.2383 16.3389 38.1494 16.3389 cv
38.0635 16.3389 37.9668 16.2954 37.8589 16.209 cv
37.7515 16.1226 37.6714 16.0791 37.6196 16.0791 cv
37.5752 16.0791 37.5269 16.104 37.4751 16.1538 cv
37.3638 16.2563 37.2485 16.4248 37.1299 16.6597 cv
37.1299 18.2944 li
37.1299 18.4844 37.1533 18.6284 37.2007 18.7261 cv
37.2329 18.7935 37.29 18.8496 37.3721 18.8931 cv
37.4541 18.937 37.5718 18.9585 37.7256 18.9585 cv
37.7256 19.0962 li
35.9766 19.0962 li
35.9766 18.9585 li
36.1499 18.9585 36.2783 18.9312 36.3628 18.8765 cv
36.4243 18.8369 36.4678 18.7734 36.4927 18.6865 cv
36.5049 18.644 36.5112 18.5234 36.5112 18.3247 cv
36.5112 17.0034 li
36.5112 16.6064 36.5029 16.3701 36.4868 16.2944 cv
36.4707 16.2188 36.4409 16.1636 36.3975 16.1284 cv
36.3545 16.0938 36.3003 16.0767 36.2358 16.0767 cv
36.1592 16.0767 36.0723 16.0952 35.9756 16.1323 cv
35.9385 15.9951 li
36.9731 15.5747 li
37.1299 15.5747 li
cp
f
40.7734 15.5747 mo
40.7734 16.7358 li
40.6514 16.7358 li
40.5571 16.3721 40.4365 16.1245 40.2891 15.9932 cv
40.1416 15.8618 39.9541 15.7964 39.7261 15.7964 cv
39.5527 15.7964 39.4126 15.8423 39.3062 15.9341 cv
39.1997 16.0259 39.1465 16.1279 39.1465 16.2397 cv
39.1465 16.3789 39.1855 16.498 39.2642 16.5972 cv
39.3403 16.6992 39.4961 16.8071 39.7324 16.9214 cv
40.2764 17.186 li
40.7808 17.4321 41.0332 17.7563 41.0332 18.1587 cv
41.0332 18.4697 40.9155 18.7202 40.6807 18.9102 cv
40.4458 19.1006 40.1831 19.1953 39.8921 19.1953 cv
39.6836 19.1953 39.4448 19.1592 39.1763 19.0864 cv
39.0942 19.0625 39.0273 19.0503 38.9751 19.0503 cv
38.918 19.0503 38.873 19.0811 38.8408 19.1421 cv
38.7188 19.1421 li
38.7188 17.9199 li
38.8408 17.9199 li
38.9106 18.269 39.0439 18.5317 39.2402 18.7085 cv
39.437 18.8857 39.6572 18.9741 39.9009 18.9741 cv
40.0728 18.9741 40.2124 18.9238 40.3208 18.8232 cv
40.4292 18.7227 40.4834 18.6016 40.4834 18.4604 cv
40.4834 18.2891 40.4224 18.145 40.3013 18.0283 cv
40.1802 17.9116 39.939 17.7646 39.5786 17.5864 cv
39.2178 17.4087 38.9814 17.2476 38.8701 17.103 cv
38.7588 16.9609 38.7036 16.7817 38.7036 16.5649 cv
38.7036 16.2837 38.7998 16.0483 38.9922 15.8589 cv
39.1846 15.6694 39.4336 15.5747 39.7388 15.5747 cv
39.873 15.5747 40.0356 15.604 40.2266 15.6626 cv
40.3535 15.7007 40.4375 15.7202 40.48 15.7202 cv
40.5195 15.7202 40.5508 15.7109 40.5732 15.6934 cv
40.5952 15.6753 40.6216 15.6362 40.6514 15.5747 cv
40.7734 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
3.27588 .63623 mo
49.1069 .63623 li
49.1069 23.5518 li
3.27588 23.5518 li
3.27588 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
299.832 8.15039 mo
299.955 8.17627 li
299.52 9.54834 li
295.601 9.54834 li
295.601 9.41064 li
295.79 9.41064 li
296.004 9.41064 296.156 9.34131 296.248 9.20313 cv
296.301 9.12402 296.326 8.94092 296.326 8.6543 cv
296.326 5.37744 li
296.326 5.06201 296.292 4.86475 296.223 4.78516 cv
296.126 4.67578 295.981 4.62109 295.79 4.62109 cv
295.601 4.62109 li
295.601 4.48389 li
297.893 4.48389 li
297.893 4.62109 li
297.623 4.61865 297.435 4.64355 297.326 4.69482 cv
297.218 4.74658 297.144 4.81152 297.104 4.89014 cv
297.064 4.96875 297.044 5.15674 297.044 5.45361 cv
297.044 8.64648 li
297.044 8.854 297.064 8.99609 297.104 9.07373 cv
297.134 9.12598 297.181 9.16504 297.242 9.18994 cv
297.305 9.21484 297.499 9.22705 297.825 9.22705 cv
298.195 9.22705 li
298.584 9.22705 298.857 9.19873 299.014 9.1416 cv
299.171 9.08447 299.314 8.9834 299.443 8.83789 cv
299.573 8.69238 299.703 8.46338 299.832 8.15039 cv
cp
f
301.982 6.02686 mo
302.5 6.02686 302.916 6.22314 303.229 6.61572 cv
303.496 6.95166 303.629 7.33691 303.629 7.77197 cv
303.629 8.07764 303.556 8.38721 303.408 8.7002 cv
303.262 9.01367 303.06 9.24951 302.802 9.40869 cv
302.544 9.56787 302.258 9.64746 301.941 9.64746 cv
301.427 9.64746 301.017 9.44238 300.714 9.03223 cv
300.457 8.68652 300.329 8.29883 300.329 7.86865 cv
300.329 7.55566 300.407 7.24414 300.563 6.93506 cv
300.718 6.62549 300.923 6.39648 301.177 6.24854 cv
301.431 6.10059 301.699 6.02686 301.982 6.02686 cv
cp
301.867 6.271 mo
301.735 6.271 301.603 6.31006 301.47 6.38867 cv
301.337 6.4668 301.229 6.604 301.147 6.7998 cv
301.065 6.99609 301.024 7.24805 301.024 7.55566 cv
301.024 8.05225 301.123 8.48047 301.32 8.84033 cv
301.519 9.2002 301.778 9.37988 302.102 9.37988 cv
302.343 9.37988 302.542 9.28076 302.698 9.08252 cv
302.855 8.88379 302.934 8.54248 302.934 8.05811 cv
302.934 7.45264 302.804 6.97607 302.542 6.62842 cv
302.365 6.39014 302.141 6.271 301.867 6.271 cv
cp
f
303.875 6.12598 mo
305.307 6.12598 li
305.307 6.26367 li
305.175 6.27344 305.089 6.29736 305.048 6.33447 cv
305.007 6.37207 304.986 6.42529 304.986 6.49512 cv
304.986 6.57227 305.008 6.66553 305.05 6.7749 cv
305.786 8.7417 li
306.527 7.13379 li
306.333 6.63721 li
306.273 6.48779 306.194 6.38428 306.098 6.32715 cv
306.043 6.29248 305.941 6.271 305.792 6.26367 cv
305.792 6.12598 li
307.408 6.12598 li
307.408 6.26367 li
307.233 6.271 307.11 6.3042 307.038 6.36279 cv
306.989 6.40332 306.965 6.46826 306.965 6.55713 cv
306.965 6.60498 306.976 6.65381 306.995 6.7041 cv
307.769 8.65625 li
308.487 6.7749 li
308.538 6.64063 308.563 6.53369 308.563 6.4541 cv
308.563 6.40674 308.539 6.36426 308.49 6.32715 cv
308.441 6.28955 308.346 6.26855 308.203 6.26367 cv
308.203 6.12598 li
309.278 6.12598 li
309.278 6.26367 li
309.062 6.2959 308.902 6.44189 308.801 6.70166 cv
307.66 9.64746 li
307.509 9.64746 li
306.654 7.45898 li
305.646 9.64746 li
305.516 9.64746 li
304.416 6.7749 li
304.344 6.59326 304.272 6.4707 304.203 6.40723 cv
304.134 6.34375 304.024 6.2959 303.875 6.26367 cv
303.875 6.12598 li
cp
f
310.099 7.41699 mo
310.096 7.92188 310.219 8.31836 310.468 8.60547 cv
310.717 8.89258 311.009 9.03613 311.345 9.03613 cv
311.568 9.03613 311.763 8.97559 311.929 8.85352 cv
312.094 8.73145 312.232 8.52002 312.345 8.21924 cv
312.459 8.29346 li
312.407 8.6377 312.255 8.94922 312.004 9.22852 cv
311.754 9.50781 311.439 9.64746 311.062 9.64746 cv
310.652 9.64746 310.301 9.48779 310.01 9.16895 cv
309.718 8.84961 309.571 8.42041 309.571 7.88184 cv
309.571 7.29834 309.722 6.84326 310.021 6.5166 cv
310.319 6.18994 310.695 6.02686 311.147 6.02686 cv
311.53 6.02686 311.844 6.15283 312.09 6.40527 cv
312.336 6.65723 312.459 6.99463 312.459 7.41699 cv
310.099 7.41699 li
cp
310.099 7.20313 mo
311.68 7.20313 li
311.667 6.98438 311.642 6.83057 311.602 6.74121 cv
311.539 6.60205 311.446 6.49268 311.323 6.41357 cv
311.2 6.33398 311.072 6.29395 310.938 6.29395 cv
310.731 6.29395 310.547 6.37402 310.384 6.53418 cv
310.221 6.69434 310.126 6.91748 310.099 7.20313 cv
cp
f
313.872 6.02686 mo
313.872 6.79834 li
314.156 6.28369 314.447 6.02686 314.746 6.02686 cv
314.882 6.02686 314.994 6.06885 315.083 6.15234 cv
315.172 6.23584 315.217 6.33252 315.217 6.44238 cv
315.217 6.53955 315.185 6.62207 315.12 6.68945 cv
315.057 6.75684 314.98 6.79053 314.892 6.79053 cv
314.806 6.79053 314.709 6.74756 314.601 6.66064 cv
314.493 6.57422 314.414 6.53076 314.361 6.53076 cv
314.317 6.53076 314.269 6.55615 314.217 6.60596 cv
314.105 6.7085 313.991 6.87695 313.872 7.11182 cv
313.872 8.74609 li
313.872 8.93652 313.896 9.08057 313.942 9.17822 cv
313.975 9.24561 314.032 9.30127 314.114 9.34521 cv
314.196 9.38867 314.313 9.41064 314.468 9.41064 cv
314.468 9.54834 li
312.719 9.54834 li
312.719 9.41064 li
312.892 9.41064 313.021 9.3833 313.104 9.32861 cv
313.167 9.28857 313.21 9.22559 313.234 9.13818 cv
313.247 9.09619 313.253 8.97559 313.253 8.77686 cv
313.253 7.45508 li
313.253 7.05811 313.245 6.82178 313.229 6.74609 cv
313.213 6.67041 313.184 6.61523 313.14 6.58057 cv
313.097 6.5459 313.043 6.52832 312.979 6.52832 cv
312.901 6.52832 312.814 6.54688 312.718 6.58447 cv
312.681 6.44678 li
313.715 6.02686 li
313.872 6.02686 li
cp
f
320.12 8.24805 mo
320.028 8.69971 319.848 9.0459 319.579 9.28662 cv
319.311 9.52686 319.014 9.64746 318.688 9.64746 cv
318.3 9.64746 317.962 9.48486 317.673 9.15918 cv
317.385 8.8335 317.24 8.39355 317.24 7.83887 cv
317.24 7.30225 317.4 6.86572 317.72 6.53027 cv
318.039 6.19482 318.422 6.02686 318.869 6.02686 cv
319.205 6.02686 319.48 6.11572 319.696 6.29346 cv
319.913 6.47168 320.021 6.65625 320.021 6.84766 cv
320.021 6.94238 319.99 7.01904 319.93 7.07715 cv
319.869 7.13574 319.784 7.16504 319.674 7.16504 cv
319.527 7.16504 319.419 7.11719 319.347 7.02197 cv
319.302 6.96973 319.272 6.86963 319.259 6.72168 cv
319.245 6.57422 319.194 6.46143 319.107 6.38379 cv
319.021 6.30859 318.9 6.271 318.746 6.271 cv
318.498 6.271 318.298 6.36328 318.146 6.54785 cv
317.944 6.79199 317.844 7.11475 317.844 7.51563 cv
317.844 7.92432 317.944 8.28516 318.145 8.59766 cv
318.345 8.91064 318.616 9.06689 318.957 9.06689 cv
319.2 9.06689 319.42 8.98486 319.614 8.82129 cv
319.751 8.70752 319.884 8.49902 320.014 8.19629 cv
320.12 8.24805 li
cp
f
322.48 9.05127 mo
322.13 9.32324 321.91 9.48047 321.82 9.52295 cv
321.687 9.58545 321.543 9.6167 321.392 9.6167 cv
321.155 9.6167 320.961 9.53613 320.808 9.37402 cv
320.655 9.2124 320.579 8.99951 320.579 8.73584 cv
320.579 8.56885 320.616 8.42432 320.69 8.30273 cv
320.792 8.1333 320.97 7.97412 321.222 7.82471 cv
321.475 7.67529 321.894 7.49365 322.48 7.2793 cv
322.48 7.14551 li
322.48 6.80566 322.427 6.57227 322.318 6.4458 cv
322.211 6.31934 322.054 6.25586 321.849 6.25586 cv
321.692 6.25586 321.568 6.29834 321.477 6.38281 cv
321.382 6.46729 321.335 6.56445 321.335 6.67383 cv
321.343 6.89063 li
321.343 7.00488 321.313 7.09326 321.254 7.15576 cv
321.195 7.21777 321.118 7.24902 321.023 7.24902 cv
320.931 7.24902 320.855 7.21631 320.797 7.15186 cv
320.737 7.08691 320.708 6.99854 320.708 6.88623 cv
320.708 6.67188 320.818 6.4751 321.037 6.2959 cv
321.257 6.1167 321.563 6.02686 321.96 6.02686 cv
322.264 6.02686 322.513 6.07764 322.707 6.17969 cv
322.854 6.25684 322.962 6.37744 323.032 6.54199 cv
323.077 6.64893 323.1 6.86768 323.1 7.19873 cv
323.1 8.35938 li
323.1 8.68555 323.105 8.88525 323.118 8.9585 cv
323.131 9.03174 323.151 9.08105 323.18 9.10596 cv
323.209 9.13086 323.241 9.14307 323.279 9.14307 cv
323.319 9.14307 323.354 9.13477 323.384 9.11719 cv
323.437 9.08496 323.538 8.99414 323.688 8.84521 cv
323.688 9.05371 li
323.407 9.4292 323.141 9.6167 322.886 9.6167 cv
322.763 9.6167 322.665 9.57422 322.593 9.48877 cv
322.521 9.40332 322.483 9.25732 322.48 9.05127 cv
cp
322.48 8.80908 mo
322.48 7.50879 li
322.103 7.65771 321.859 7.76318 321.749 7.8252 cv
321.552 7.93457 321.41 8.04883 321.325 8.16797 cv
321.24 8.2876 321.197 8.41748 321.197 8.55908 cv
321.197 8.73828 321.251 8.88623 321.358 9.00439 cv
321.466 9.12256 321.59 9.18164 321.73 9.18164 cv
321.92 9.18164 322.171 9.05713 322.48 8.80908 cv
cp
f
326.094 6.02686 mo
326.094 7.18799 li
325.972 7.18799 li
325.877 6.82373 325.757 6.57617 325.609 6.44482 cv
325.462 6.31396 325.274 6.24854 325.046 6.24854 cv
324.873 6.24854 324.732 6.29443 324.626 6.38623 cv
324.52 6.47803 324.467 6.57959 324.467 6.69141 cv
324.467 6.83057 324.506 6.94971 324.584 7.04932 cv
324.66 7.15088 324.816 7.25928 325.053 7.37354 cv
325.597 7.6377 li
326.101 7.88379 326.354 8.2085 326.354 8.61084 cv
326.354 8.92139 326.235 9.17188 326.001 9.3623 cv
325.767 9.55225 325.503 9.64746 325.212 9.64746 cv
325.004 9.64746 324.765 9.61133 324.496 9.53857 cv
324.415 9.51416 324.348 9.50244 324.295 9.50244 cv
324.238 9.50244 324.193 9.53271 324.161 9.59375 cv
324.039 9.59375 li
324.039 8.37158 li
324.161 8.37158 li
324.23 8.7207 324.364 8.98389 324.561 9.16064 cv
324.757 9.3374 324.978 9.42578 325.221 9.42578 cv
325.393 9.42578 325.532 9.37549 325.641 9.2749 cv
325.749 9.17432 325.804 9.05371 325.804 8.91211 cv
325.804 8.74072 325.743 8.59717 325.621 8.48047 cv
325.5 8.36377 325.259 8.21631 324.898 8.03857 cv
324.538 7.86084 324.302 7.69971 324.19 7.55518 cv
324.079 7.41309 324.023 7.23389 324.023 7.01709 cv
324.023 6.73535 324.12 6.5 324.313 6.31104 cv
324.505 6.12158 324.754 6.02686 325.059 6.02686 cv
325.193 6.02686 325.355 6.05615 325.547 6.11475 cv
325.674 6.15283 325.758 6.17188 325.8 6.17188 cv
325.84 6.17188 325.871 6.16309 325.894 6.14502 cv
325.915 6.12744 325.941 6.08789 325.972 6.02686 cv
326.094 6.02686 li
cp
f
327.377 7.41699 mo
327.374 7.92188 327.497 8.31836 327.746 8.60547 cv
327.995 8.89258 328.287 9.03613 328.623 9.03613 cv
328.847 9.03613 329.041 8.97559 329.206 8.85352 cv
329.372 8.73145 329.511 8.52002 329.622 8.21924 cv
329.737 8.29346 li
329.685 8.6377 329.533 8.94922 329.282 9.22852 cv
329.032 9.50781 328.718 9.64746 328.34 9.64746 cv
327.931 9.64746 327.579 9.48779 327.288 9.16895 cv
326.996 8.84961 326.85 8.42041 326.85 7.88184 cv
326.85 7.29834 326.999 6.84326 327.299 6.5166 cv
327.598 6.18994 327.974 6.02686 328.426 6.02686 cv
328.809 6.02686 329.122 6.15283 329.368 6.40527 cv
329.614 6.65723 329.737 6.99463 329.737 7.41699 cv
327.377 7.41699 li
cp
327.377 7.20313 mo
328.958 7.20313 li
328.945 6.98438 328.92 6.83057 328.88 6.74121 cv
328.817 6.60205 328.725 6.49268 328.602 6.41357 cv
328.479 6.33398 328.351 6.29395 328.216 6.29395 cv
328.01 6.29395 327.825 6.37402 327.662 6.53418 cv
327.499 6.69434 327.404 6.91748 327.377 7.20313 cv
cp
f
305.142 13.7876 mo
305.142 18.3247 li
305.142 18.5376 305.157 18.6782 305.188 18.7476 cv
305.219 18.8164 305.267 18.8691 305.331 18.9048 cv
305.396 18.9409 305.516 18.9585 305.691 18.9585 cv
305.691 19.0962 li
304.019 19.0962 li
304.019 18.9585 li
304.175 18.9585 304.282 18.9429 304.34 18.9106 cv
304.396 18.8784 304.441 18.8252 304.474 18.751 cv
304.507 18.6768 304.522 18.5347 304.522 18.3247 cv
304.522 15.2158 li
304.522 14.8345 304.514 14.6001 304.496 14.5132 cv
304.479 14.4258 304.451 14.3657 304.413 14.3335 cv
304.374 14.3013 304.325 14.2856 304.266 14.2856 cv
304.201 14.2856 304.12 14.3052 304.021 14.3452 cv
303.957 14.2075 li
304.974 13.7876 li
305.142 13.7876 li
cp
f
306.539 16.9653 mo
306.536 17.4702 306.659 17.8662 306.908 18.1538 cv
307.157 18.4409 307.449 18.5845 307.785 18.5845 cv
308.009 18.5845 308.203 18.5234 308.369 18.4019 cv
308.534 18.2798 308.673 18.0684 308.785 17.7671 cv
308.899 17.8418 li
308.847 18.186 308.695 18.4976 308.444 18.7769 cv
308.194 19.0562 307.88 19.1953 307.502 19.1953 cv
307.093 19.1953 306.741 19.0361 306.45 18.7168 cv
306.158 18.3979 306.012 17.9688 306.012 17.4302 cv
306.012 16.8462 306.162 16.3911 306.461 16.0649 cv
306.761 15.7383 307.136 15.5747 307.588 15.5747 cv
307.971 15.5747 308.284 15.7012 308.53 15.9531 cv
308.776 16.2056 308.899 16.5425 308.899 16.9653 cv
306.539 16.9653 li
cp
306.539 16.7515 mo
308.12 16.7515 li
308.107 16.5327 308.082 16.3784 308.042 16.2896 cv
307.979 16.1504 307.888 16.041 307.764 15.9614 cv
307.641 15.8818 307.513 15.8423 307.378 15.8423 cv
307.172 15.8423 306.987 15.9224 306.824 16.0825 cv
306.661 16.2427 306.566 16.4653 306.539 16.7515 cv
cp
f
310.244 14.5513 mo
310.244 15.6743 li
311.042 15.6743 li
311.042 15.9263 li
310.244 15.9341 li
310.244 18.1509 li
310.244 18.3721 310.275 18.5215 310.339 18.5986 cv
310.402 18.6758 310.483 18.7144 310.583 18.7144 cv
310.665 18.7144 310.744 18.6885 310.821 18.6372 cv
310.898 18.5854 310.958 18.5093 311 18.4087 cv
311.146 18.4087 li
311.058 18.6543 310.935 18.8394 310.775 18.9634 cv
310.616 19.0874 310.451 19.1499 310.282 19.1499 cv
310.168 19.1499 310.056 19.1177 309.946 19.0542 cv
309.837 18.9907 309.756 18.8994 309.703 18.7808 cv
309.651 18.6626 309.625 18.4795 309.625 18.2324 cv
309.625 15.9263 li
309.083 15.9263 li
309.083 15.8071 li
309.22 15.7534 309.36 15.6616 309.504 15.5322 cv
309.647 15.4028 309.775 15.249 309.889 15.0698 cv
309.946 14.9751 310.026 14.8022 310.129 14.5513 cv
310.244 14.5513 li
cp
f
312.253 14.5513 mo
312.253 15.6743 li
313.051 15.6743 li
313.051 15.9263 li
312.253 15.9341 li
312.253 18.1509 li
312.253 18.3721 312.284 18.5215 312.348 18.5986 cv
312.411 18.6758 312.492 18.7144 312.592 18.7144 cv
312.674 18.7144 312.753 18.6885 312.83 18.6372 cv
312.907 18.5854 312.967 18.5093 313.009 18.4087 cv
313.154 18.4087 li
313.067 18.6543 312.943 18.8394 312.784 18.9634 cv
312.625 19.0874 312.461 19.1499 312.291 19.1499 cv
312.177 19.1499 312.064 19.1177 311.955 19.0542 cv
311.846 18.9907 311.765 18.8994 311.712 18.7808 cv
311.66 18.6626 311.634 18.4795 311.634 18.2324 cv
311.634 15.9263 li
311.092 15.9263 li
311.092 15.8071 li
311.229 15.7534 311.369 15.6616 311.513 15.5322 cv
311.656 15.4028 311.784 15.249 311.897 15.0698 cv
311.955 14.9751 312.035 14.8022 312.138 14.5513 cv
312.253 14.5513 li
cp
f
313.834 16.9653 mo
313.831 17.4702 313.954 17.8662 314.203 18.1538 cv
314.452 18.4409 314.744 18.5845 315.08 18.5845 cv
315.304 18.5845 315.498 18.5234 315.663 18.4019 cv
315.829 18.2798 315.968 18.0684 316.079 17.7671 cv
316.194 17.8418 li
316.142 18.186 315.99 18.4976 315.739 18.7769 cv
315.488 19.0562 315.175 19.1953 314.797 19.1953 cv
314.388 19.1953 314.036 19.0361 313.744 18.7168 cv
313.453 18.3979 313.307 17.9688 313.307 17.4302 cv
313.307 16.8462 313.456 16.3911 313.756 16.0649 cv
314.055 15.7383 314.431 15.5747 314.883 15.5747 cv
315.266 15.5747 315.579 15.7012 315.825 15.9531 cv
316.071 16.2056 316.194 16.5425 316.194 16.9653 cv
313.834 16.9653 li
cp
313.834 16.7515 mo
315.415 16.7515 li
315.402 16.5327 315.376 16.3784 315.337 16.2896 cv
315.274 16.1504 315.182 16.041 315.059 15.9614 cv
314.936 15.8818 314.808 15.8423 314.673 15.8423 cv
314.467 15.8423 314.282 15.9224 314.119 16.0825 cv
313.956 16.2427 313.861 16.4653 313.834 16.7515 cv
cp
f
317.546 15.5747 mo
317.546 16.3462 li
317.83 15.832 318.121 15.5747 318.42 15.5747 cv
318.556 15.5747 318.668 15.6167 318.757 15.7002 cv
318.846 15.7837 318.891 15.8804 318.891 15.9907 cv
318.891 16.0879 318.858 16.1704 318.795 16.2378 cv
318.73 16.3052 318.654 16.3389 318.565 16.3389 cv
318.479 16.3389 318.383 16.2954 318.275 16.209 cv
318.168 16.1226 318.088 16.0791 318.036 16.0791 cv
317.991 16.0791 317.943 16.104 317.892 16.1538 cv
317.78 16.2563 317.665 16.4248 317.546 16.6597 cv
317.546 18.2944 li
317.546 18.4844 317.569 18.6284 317.617 18.7261 cv
317.649 18.7935 317.706 18.8496 317.788 18.8931 cv
317.87 18.937 317.988 18.9585 318.142 18.9585 cv
318.142 19.0962 li
316.393 19.0962 li
316.393 18.9585 li
316.566 18.9585 316.694 18.9312 316.779 18.8765 cv
316.841 18.8369 316.884 18.7734 316.909 18.6865 cv
316.921 18.644 316.928 18.5234 316.928 18.3247 cv
316.928 17.0034 li
316.928 16.6064 316.919 16.3701 316.903 16.2944 cv
316.887 16.2188 316.857 16.1636 316.813 16.1284 cv
316.771 16.0938 316.717 16.0767 316.652 16.0767 cv
316.575 16.0767 316.488 16.0952 316.392 16.1323 cv
316.354 15.9951 li
317.39 15.5747 li
317.546 15.5747 li
cp
f
321.175 15.5747 mo
321.175 16.7358 li
321.052 16.7358 li
320.958 16.3721 320.837 16.1245 320.689 15.9932 cv
320.542 15.8618 320.354 15.7964 320.127 15.7964 cv
319.954 15.7964 319.813 15.8423 319.707 15.9341 cv
319.601 16.0259 319.548 16.1279 319.548 16.2397 cv
319.548 16.3789 319.587 16.498 319.665 16.5972 cv
319.741 16.6992 319.897 16.8071 320.133 16.9214 cv
320.678 17.186 li
321.182 17.4321 321.435 17.7563 321.435 18.1587 cv
321.435 18.4697 321.316 18.7202 321.082 18.9102 cv
320.847 19.1006 320.584 19.1953 320.293 19.1953 cv
320.085 19.1953 319.846 19.1592 319.577 19.0864 cv
319.495 19.0625 319.429 19.0503 319.376 19.0503 cv
319.319 19.0503 319.274 19.0811 319.242 19.1421 cv
319.12 19.1421 li
319.12 17.9199 li
319.242 17.9199 li
319.312 18.269 319.444 18.5317 319.642 18.7085 cv
319.838 18.8857 320.058 18.9741 320.302 18.9741 cv
320.474 18.9741 320.613 18.9238 320.722 18.8232 cv
320.83 18.7227 320.884 18.6016 320.884 18.4604 cv
320.884 18.2891 320.823 18.145 320.702 18.0283 cv
320.581 17.9116 320.34 17.7646 319.979 17.5864 cv
319.618 17.4087 319.383 17.2476 319.271 17.103 cv
319.16 16.9609 319.104 16.7817 319.104 16.5649 cv
319.104 16.2837 319.2 16.0483 319.393 15.8589 cv
319.585 15.6694 319.834 15.5747 320.14 15.5747 cv
320.273 15.5747 320.437 15.604 320.628 15.6626 cv
320.754 15.7007 320.839 15.7202 320.881 15.7202 cv
320.921 15.7202 320.952 15.7109 320.974 15.6934 cv
320.996 15.6753 321.022 15.6362 321.052 15.5747 cv
321.175 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
289.719 .63623 mo
335.55 .63623 li
335.55 23.5518 li
289.719 23.5518 li
289.719 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
207.756 4.62109 mo
207.756 4.48389 li
209.535 4.48389 li
209.535 4.62109 li
209.346 4.62109 li
209.147 4.62109 208.995 4.70459 208.888 4.87109 cv
208.836 4.94824 208.81 5.12744 208.81 5.4082 cv
208.81 7.46094 li
208.81 7.96826 208.76 8.36182 208.659 8.64209 cv
208.559 8.92188 208.361 9.16211 208.066 9.3623 cv
207.772 9.5625 207.372 9.6626 206.865 9.6626 cv
206.314 9.6626 205.896 9.56689 205.61 9.37549 cv
205.324 9.18359 205.122 8.92627 205.003 8.60254 cv
204.923 8.38135 204.884 7.96533 204.884 7.35596 cv
204.884 5.37744 li
204.884 5.06689 204.841 4.86377 204.755 4.7666 cv
204.669 4.66992 204.531 4.62109 204.34 4.62109 cv
204.15 4.62109 li
204.15 4.48389 li
206.335 4.48389 li
206.335 4.62109 li
206.142 4.62109 li
205.933 4.62109 205.784 4.68701 205.694 4.81885 cv
205.633 4.9082 205.602 5.09424 205.602 5.37744 cv
205.602 7.5835 li
205.602 7.78027 205.62 8.00537 205.655 8.25928 cv
205.691 8.51318 205.757 8.71094 205.852 8.85303 cv
205.946 8.99463 206.082 9.11182 206.26 9.20361 cv
206.438 9.2959 206.656 9.3418 206.915 9.3418 cv
207.245 9.3418 207.541 9.26953 207.803 9.12549 cv
208.063 8.98096 208.242 8.79639 208.338 8.57129 cv
208.434 8.3457 208.481 7.96436 208.481 7.42676 cv
208.481 5.37744 li
208.481 5.06201 208.446 4.86475 208.377 4.78516 cv
208.28 4.67578 208.137 4.62109 207.945 4.62109 cv
207.756 4.62109 li
cp
f
209.581 6.4624 mo
210.632 6.04199 li
210.772 6.04199 li
210.772 6.83447 li
210.95 6.53564 211.127 6.32617 211.305 6.20654 cv
211.483 6.08643 211.671 6.02686 211.867 6.02686 cv
212.211 6.02686 212.497 6.16113 212.727 6.4292 cv
213.008 6.75732 213.148 7.18506 213.148 7.7124 cv
213.148 8.30127 212.979 8.78857 212.641 9.17383 cv
212.361 9.48975 212.011 9.64746 211.587 9.64746 cv
211.403 9.64746 211.243 9.62158 211.109 9.56982 cv
211.01 9.53271 210.897 9.4585 210.772 9.34717 cv
210.772 10.3882 li
210.772 10.6235 210.787 10.7729 210.816 10.8369 cv
210.845 10.9009 210.895 10.9512 210.966 10.9888 cv
211.037 11.0264 211.166 11.0454 211.354 11.0454 cv
211.354 11.1826 li
209.559 11.1826 li
209.559 11.0454 li
209.652 11.0454 li
209.789 11.0479 209.907 11.022 210.004 10.9673 cv
210.052 10.9399 210.089 10.896 210.115 10.8354 cv
210.141 10.7749 210.154 10.6206 210.154 10.373 cv
210.154 7.12646 li
210.154 6.90771 210.145 6.76904 210.124 6.70996 cv
210.104 6.65088 210.073 6.60645 210.029 6.57666 cv
209.986 6.54688 209.927 6.53223 209.853 6.53223 cv
209.793 6.53223 209.718 6.54932 209.626 6.58447 cv
209.581 6.4624 li
cp
210.772 7.05518 mo
210.772 8.33398 li
210.772 8.61084 210.784 8.79248 210.807 8.87988 cv
210.842 9.02441 210.927 9.15186 211.063 9.26123 cv
211.198 9.37109 211.369 9.42578 211.576 9.42578 cv
211.825 9.42578 212.027 9.32861 212.182 9.13428 cv
212.383 8.87988 212.484 8.52197 212.484 8.06104 cv
212.484 7.5376 212.369 7.13477 212.141 6.85303 cv
211.98 6.65869 211.792 6.56152 211.572 6.56152 cv
211.453 6.56152 211.335 6.59131 211.218 6.65137 cv
211.128 6.69629 210.979 6.83057 210.772 7.05518 cv
cp
f
213.37 6.4624 mo
214.42 6.04199 li
214.562 6.04199 li
214.562 6.83447 li
214.738 6.53564 214.916 6.32617 215.094 6.20654 cv
215.271 6.08643 215.459 6.02686 215.656 6.02686 cv
216 6.02686 216.286 6.16113 216.515 6.4292 cv
216.797 6.75732 216.938 7.18506 216.938 7.7124 cv
216.938 8.30127 216.768 8.78857 216.429 9.17383 cv
216.15 9.48975 215.799 9.64746 215.376 9.64746 cv
215.191 9.64746 215.032 9.62158 214.897 9.56982 cv
214.798 9.53271 214.687 9.4585 214.562 9.34717 cv
214.562 10.3882 li
214.562 10.6235 214.576 10.7729 214.604 10.8369 cv
214.634 10.9009 214.684 10.9512 214.755 10.9888 cv
214.825 11.0264 214.955 11.0454 215.143 11.0454 cv
215.143 11.1826 li
213.347 11.1826 li
213.347 11.0454 li
213.44 11.0454 li
213.578 11.0479 213.695 11.022 213.793 10.9673 cv
213.841 10.9399 213.877 10.896 213.903 10.8354 cv
213.93 10.7749 213.942 10.6206 213.942 10.373 cv
213.942 7.12646 li
213.942 6.90771 213.933 6.76904 213.913 6.70996 cv
213.894 6.65088 213.861 6.60645 213.818 6.57666 cv
213.774 6.54688 213.716 6.53223 213.642 6.53223 cv
213.582 6.53223 213.507 6.54932 213.415 6.58447 cv
213.37 6.4624 li
cp
214.562 7.05518 mo
214.562 8.33398 li
214.562 8.61084 214.573 8.79248 214.596 8.87988 cv
214.63 9.02441 214.716 9.15186 214.852 9.26123 cv
214.987 9.37109 215.158 9.42578 215.365 9.42578 cv
215.614 9.42578 215.815 9.32861 215.97 9.13428 cv
216.172 8.87988 216.272 8.52197 216.272 8.06104 cv
216.272 7.5376 216.158 7.13477 215.929 6.85303 cv
215.77 6.65869 215.58 6.56152 215.361 6.56152 cv
215.241 6.56152 215.123 6.59131 215.006 6.65137 cv
214.917 6.69629 214.769 6.83057 214.562 7.05518 cv
cp
f
217.976 7.41699 mo
217.974 7.92188 218.097 8.31836 218.346 8.60547 cv
218.594 8.89258 218.886 9.03613 219.222 9.03613 cv
219.445 9.03613 219.641 8.97559 219.806 8.85352 cv
219.971 8.73145 220.109 8.52002 220.222 8.21924 cv
220.336 8.29346 li
220.284 8.6377 220.133 8.94922 219.882 9.22852 cv
219.631 9.50781 219.316 9.64746 218.939 9.64746 cv
218.529 9.64746 218.179 9.48779 217.887 9.16895 cv
217.595 8.84961 217.449 8.42041 217.449 7.88184 cv
217.449 7.29834 217.599 6.84326 217.897 6.5166 cv
218.197 6.18994 218.573 6.02686 219.024 6.02686 cv
219.407 6.02686 219.722 6.15283 219.968 6.40527 cv
220.213 6.65723 220.336 6.99463 220.336 7.41699 cv
217.976 7.41699 li
cp
217.976 7.20313 mo
219.558 7.20313 li
219.545 6.98438 219.519 6.83057 219.479 6.74121 cv
219.417 6.60205 219.324 6.49268 219.201 6.41357 cv
219.078 6.33398 218.949 6.29395 218.815 6.29395 cv
218.608 6.29395 218.424 6.37402 218.261 6.53418 cv
218.099 6.69434 218.003 6.91748 217.976 7.20313 cv
cp
f
221.772 6.02686 mo
221.772 6.79834 li
222.057 6.28369 222.348 6.02686 222.646 6.02686 cv
222.782 6.02686 222.895 6.06885 222.983 6.15234 cv
223.072 6.23584 223.116 6.33252 223.116 6.44238 cv
223.116 6.53955 223.085 6.62207 223.021 6.68945 cv
222.957 6.75684 222.881 6.79053 222.792 6.79053 cv
222.706 6.79053 222.609 6.74756 222.501 6.66064 cv
222.394 6.57422 222.313 6.53076 222.262 6.53076 cv
222.218 6.53076 222.169 6.55615 222.117 6.60596 cv
222.006 6.7085 221.891 6.87695 221.772 7.11182 cv
221.772 8.74609 li
221.772 8.93652 221.796 9.08057 221.843 9.17822 cv
221.875 9.24561 221.933 9.30127 222.015 9.34521 cv
222.097 9.38867 222.214 9.41064 222.368 9.41064 cv
222.368 9.54834 li
220.619 9.54834 li
220.619 9.41064 li
220.792 9.41064 220.921 9.3833 221.005 9.32861 cv
221.067 9.28857 221.11 9.22559 221.135 9.13818 cv
221.147 9.09619 221.153 8.97559 221.153 8.77686 cv
221.153 7.45508 li
221.153 7.05811 221.146 6.82178 221.129 6.74609 cv
221.113 6.67041 221.084 6.61523 221.04 6.58057 cv
220.997 6.5459 220.942 6.52832 220.878 6.52832 cv
220.802 6.52832 220.715 6.54688 220.618 6.58447 cv
220.581 6.44678 li
221.615 6.02686 li
221.772 6.02686 li
cp
f
228.066 8.24805 mo
227.975 8.69971 227.794 9.0459 227.525 9.28662 cv
227.257 9.52686 226.96 9.64746 226.634 9.64746 cv
226.246 9.64746 225.908 9.48486 225.619 9.15918 cv
225.331 8.8335 225.187 8.39355 225.187 7.83887 cv
225.187 7.30225 225.347 6.86572 225.666 6.53027 cv
225.985 6.19482 226.368 6.02686 226.815 6.02686 cv
227.151 6.02686 227.427 6.11572 227.643 6.29346 cv
227.859 6.47168 227.967 6.65625 227.967 6.84766 cv
227.967 6.94238 227.937 7.01904 227.876 7.07715 cv
227.815 7.13574 227.729 7.16504 227.62 7.16504 cv
227.474 7.16504 227.364 7.11719 227.293 7.02197 cv
227.248 6.96973 227.219 6.86963 227.205 6.72168 cv
227.191 6.57422 227.141 6.46143 227.054 6.38379 cv
226.967 6.30859 226.847 6.271 226.692 6.271 cv
226.443 6.271 226.244 6.36328 226.092 6.54785 cv
225.891 6.79199 225.79 7.11475 225.79 7.51563 cv
225.79 7.92432 225.891 8.28516 226.091 8.59766 cv
226.291 8.91064 226.562 9.06689 226.903 9.06689 cv
227.146 9.06689 227.366 8.98486 227.56 8.82129 cv
227.697 8.70752 227.83 8.49902 227.96 8.19629 cv
228.066 8.24805 li
cp
f
230.449 9.05127 mo
230.099 9.32324 229.879 9.48047 229.789 9.52295 cv
229.655 9.58545 229.513 9.6167 229.36 9.6167 cv
229.124 9.6167 228.93 9.53613 228.777 9.37402 cv
228.624 9.2124 228.548 8.99951 228.548 8.73584 cv
228.548 8.56885 228.585 8.42432 228.659 8.30273 cv
228.762 8.1333 228.938 7.97412 229.191 7.82471 cv
229.443 7.67529 229.863 7.49365 230.449 7.2793 cv
230.449 7.14551 li
230.449 6.80566 230.396 6.57227 230.288 6.4458 cv
230.18 6.31934 230.023 6.25586 229.817 6.25586 cv
229.661 6.25586 229.537 6.29834 229.445 6.38281 cv
229.352 6.46729 229.304 6.56445 229.304 6.67383 cv
229.312 6.89063 li
229.312 7.00488 229.282 7.09326 229.224 7.15576 cv
229.165 7.21777 229.088 7.24902 228.992 7.24902 cv
228.9 7.24902 228.824 7.21631 228.766 7.15186 cv
228.707 7.08691 228.678 6.99854 228.678 6.88623 cv
228.678 6.67188 228.787 6.4751 229.006 6.2959 cv
229.226 6.1167 229.533 6.02686 229.929 6.02686 cv
230.232 6.02686 230.481 6.07764 230.676 6.17969 cv
230.823 6.25684 230.932 6.37744 231.001 6.54199 cv
231.046 6.64893 231.068 6.86768 231.068 7.19873 cv
231.068 8.35938 li
231.068 8.68555 231.074 8.88525 231.087 8.9585 cv
231.1 9.03174 231.12 9.08105 231.149 9.10596 cv
231.178 9.13086 231.211 9.14307 231.248 9.14307 cv
231.288 9.14307 231.323 9.13477 231.354 9.11719 cv
231.405 9.08496 231.507 8.99414 231.656 8.84521 cv
231.656 9.05371 li
231.377 9.4292 231.109 9.6167 230.854 9.6167 cv
230.732 9.6167 230.635 9.57422 230.563 9.48877 cv
230.489 9.40332 230.452 9.25732 230.449 9.05127 cv
cp
230.449 8.80908 mo
230.449 7.50879 li
230.072 7.65771 229.828 7.76318 229.718 7.8252 cv
229.521 7.93457 229.379 8.04883 229.294 8.16797 cv
229.209 8.2876 229.166 8.41748 229.166 8.55908 cv
229.166 8.73828 229.22 8.88623 229.328 9.00439 cv
229.436 9.12256 229.56 9.18164 229.699 9.18164 cv
229.89 9.18164 230.14 9.05713 230.449 8.80908 cv
cp
f
234.086 6.02686 mo
234.086 7.18799 li
233.963 7.18799 li
233.869 6.82373 233.748 6.57617 233.601 6.44482 cv
233.454 6.31396 233.266 6.24854 233.038 6.24854 cv
232.864 6.24854 232.725 6.29443 232.618 6.38623 cv
232.512 6.47803 232.459 6.57959 232.459 6.69141 cv
232.459 6.83057 232.498 6.94971 232.576 7.04932 cv
232.652 7.15088 232.809 7.25928 233.044 7.37354 cv
233.589 7.6377 li
234.093 7.88379 234.346 8.2085 234.346 8.61084 cv
234.346 8.92139 234.228 9.17188 233.993 9.3623 cv
233.758 9.55225 233.495 9.64746 233.204 9.64746 cv
232.995 9.64746 232.757 9.61133 232.488 9.53857 cv
232.406 9.51416 232.34 9.50244 232.287 9.50244 cv
232.23 9.50244 232.186 9.53271 232.153 9.59375 cv
232.031 9.59375 li
232.031 8.37158 li
232.153 8.37158 li
232.223 8.7207 232.355 8.98389 232.553 9.16064 cv
232.749 9.3374 232.969 9.42578 233.213 9.42578 cv
233.385 9.42578 233.524 9.37549 233.633 9.2749 cv
233.741 9.17432 233.795 9.05371 233.795 8.91211 cv
233.795 8.74072 233.734 8.59717 233.613 8.48047 cv
233.492 8.36377 233.251 8.21631 232.891 8.03857 cv
232.529 7.86084 232.294 7.69971 232.183 7.55518 cv
232.071 7.41309 232.016 7.23389 232.016 7.01709 cv
232.016 6.73535 232.111 6.5 232.304 6.31104 cv
232.497 6.12158 232.745 6.02686 233.051 6.02686 cv
233.185 6.02686 233.348 6.05615 233.539 6.11475 cv
233.665 6.15283 233.75 6.17188 233.792 6.17188 cv
233.832 6.17188 233.862 6.16309 233.885 6.14502 cv
233.907 6.12744 233.934 6.08789 233.963 6.02686 cv
234.086 6.02686 li
cp
f
235.392 7.41699 mo
235.39 7.92188 235.513 8.31836 235.761 8.60547 cv
236.01 8.89258 236.302 9.03613 236.638 9.03613 cv
236.861 9.03613 237.056 8.97559 237.222 8.85352 cv
237.387 8.73145 237.525 8.52002 237.638 8.21924 cv
237.752 8.29346 li
237.7 8.6377 237.548 8.94922 237.298 9.22852 cv
237.047 9.50781 236.732 9.64746 236.354 9.64746 cv
235.945 9.64746 235.595 9.48779 235.303 9.16895 cv
235.011 8.84961 234.864 8.42041 234.864 7.88184 cv
234.864 7.29834 235.015 6.84326 235.313 6.5166 cv
235.613 6.18994 235.988 6.02686 236.44 6.02686 cv
236.823 6.02686 237.138 6.15283 237.383 6.40527 cv
237.629 6.65723 237.752 6.99463 237.752 7.41699 cv
235.392 7.41699 li
cp
235.392 7.20313 mo
236.973 7.20313 li
236.961 6.98438 236.935 6.83057 236.895 6.74121 cv
236.832 6.60205 236.74 6.49268 236.617 6.41357 cv
236.493 6.33398 236.365 6.29395 236.23 6.29395 cv
236.024 6.29395 235.84 6.37402 235.677 6.53418 cv
235.515 6.69434 235.419 6.91748 235.392 7.20313 cv
cp
f
213.484 13.7876 mo
213.484 18.3247 li
213.484 18.5376 213.5 18.6782 213.531 18.7476 cv
213.562 18.8164 213.609 18.8691 213.674 18.9048 cv
213.738 18.9409 213.858 18.9585 214.034 18.9585 cv
214.034 19.0962 li
212.361 19.0962 li
212.361 18.9585 li
212.519 18.9585 212.626 18.9429 212.683 18.9106 cv
212.74 18.8784 212.785 18.8252 212.817 18.751 cv
212.85 18.6768 212.866 18.5347 212.866 18.3247 cv
212.866 15.2158 li
212.866 14.8345 212.857 14.6001 212.84 14.5132 cv
212.822 14.4258 212.795 14.3657 212.756 14.3335 cv
212.718 14.3013 212.669 14.2856 212.609 14.2856 cv
212.545 14.2856 212.463 14.3052 212.364 14.3452 cv
212.301 14.2075 li
213.317 13.7876 li
213.484 13.7876 li
cp
f
214.883 16.9653 mo
214.88 17.4702 215.003 17.8662 215.252 18.1538 cv
215.5 18.4409 215.793 18.5845 216.128 18.5845 cv
216.353 18.5845 216.547 18.5234 216.712 18.4019 cv
216.878 18.2798 217.017 18.0684 217.128 17.7671 cv
217.243 17.8418 li
217.19 18.186 217.039 18.4976 216.788 18.7769 cv
216.537 19.0562 216.224 19.1953 215.846 19.1953 cv
215.436 19.1953 215.085 19.0361 214.793 18.7168 cv
214.501 18.3979 214.355 17.9688 214.355 17.4302 cv
214.355 16.8462 214.505 16.3911 214.805 16.0649 cv
215.104 15.7383 215.479 15.5747 215.932 15.5747 cv
216.313 15.5747 216.628 15.7012 216.874 15.9531 cv
217.12 16.2056 217.243 16.5425 217.243 16.9653 cv
214.883 16.9653 li
cp
214.883 16.7515 mo
216.464 16.7515 li
216.451 16.5327 216.425 16.3784 216.386 16.2896 cv
216.323 16.1504 216.23 16.041 216.107 15.9614 cv
215.984 15.8818 215.855 15.8423 215.722 15.8423 cv
215.515 15.8423 215.33 15.9224 215.168 16.0825 cv
215.005 16.2427 214.91 16.4653 214.883 16.7515 cv
cp
f
218.587 14.5513 mo
218.587 15.6743 li
219.385 15.6743 li
219.385 15.9263 li
218.587 15.9341 li
218.587 18.1509 li
218.587 18.3721 218.619 18.5215 218.682 18.5986 cv
218.745 18.6758 218.827 18.7144 218.926 18.7144 cv
219.008 18.7144 219.088 18.6885 219.164 18.6372 cv
219.241 18.5854 219.301 18.5093 219.343 18.4087 cv
219.488 18.4087 li
219.401 18.6543 219.278 18.8394 219.119 18.9634 cv
218.959 19.0874 218.795 19.1499 218.626 19.1499 cv
218.511 19.1499 218.399 19.1177 218.29 19.0542 cv
218.18 18.9907 218.099 18.8994 218.047 18.7808 cv
217.994 18.6626 217.969 18.4795 217.969 18.2324 cv
217.969 15.9263 li
217.426 15.9263 li
217.426 15.8071 li
217.563 15.7534 217.704 15.6616 217.847 15.5322 cv
217.99 15.4028 218.119 15.249 218.231 15.0698 cv
218.289 14.9751 218.37 14.8022 218.473 14.5513 cv
218.587 14.5513 li
cp
f
220.596 14.5513 mo
220.596 15.6743 li
221.395 15.6743 li
221.395 15.9263 li
220.596 15.9341 li
220.596 18.1509 li
220.596 18.3721 220.628 18.5215 220.691 18.5986 cv
220.754 18.6758 220.836 18.7144 220.935 18.7144 cv
221.017 18.7144 221.097 18.6885 221.173 18.6372 cv
221.25 18.5854 221.31 18.5093 221.353 18.4087 cv
221.497 18.4087 li
221.41 18.6543 221.287 18.8394 221.128 18.9634 cv
220.968 19.0874 220.804 19.1499 220.635 19.1499 cv
220.521 19.1499 220.408 19.1177 220.299 19.0542 cv
220.188 18.9907 220.108 18.8994 220.056 18.7808 cv
220.003 18.6626 219.978 18.4795 219.978 18.2324 cv
219.978 15.9263 li
219.435 15.9263 li
219.435 15.8071 li
219.572 15.7534 219.713 15.6616 219.856 15.5322 cv
220 15.4028 220.128 15.249 220.24 15.0698 cv
220.299 14.9751 220.379 14.8022 220.481 14.5513 cv
220.596 14.5513 li
cp
f
222.177 16.9653 mo
222.175 17.4702 222.298 17.8662 222.547 18.1538 cv
222.795 18.4409 223.087 18.5845 223.423 18.5845 cv
223.646 18.5845 223.842 18.5234 224.007 18.4019 cv
224.172 18.2798 224.311 18.0684 224.423 17.7671 cv
224.537 17.8418 li
224.485 18.186 224.334 18.4976 224.083 18.7769 cv
223.832 19.0562 223.518 19.1953 223.141 19.1953 cv
222.73 19.1953 222.38 19.0361 222.088 18.7168 cv
221.796 18.3979 221.65 17.9688 221.65 17.4302 cv
221.65 16.8462 221.8 16.3911 222.099 16.0649 cv
222.398 15.7383 222.774 15.5747 223.226 15.5747 cv
223.608 15.5747 223.923 15.7012 224.169 15.9531 cv
224.414 16.2056 224.537 16.5425 224.537 16.9653 cv
222.177 16.9653 li
cp
222.177 16.7515 mo
223.759 16.7515 li
223.746 16.5327 223.72 16.3784 223.68 16.2896 cv
223.618 16.1504 223.525 16.041 223.402 15.9614 cv
223.279 15.8818 223.15 15.8423 223.017 15.8423 cv
222.81 15.8423 222.625 15.9224 222.462 16.0825 cv
222.3 16.2427 222.204 16.4653 222.177 16.7515 cv
cp
f
225.89 15.5747 mo
225.89 16.3462 li
226.173 15.832 226.465 15.5747 226.764 15.5747 cv
226.899 15.5747 227.012 15.6167 227.101 15.7002 cv
227.189 15.7837 227.233 15.8804 227.233 15.9907 cv
227.233 16.0879 227.202 16.1704 227.138 16.2378 cv
227.074 16.3052 226.998 16.3389 226.909 16.3389 cv
226.823 16.3389 226.727 16.2954 226.618 16.209 cv
226.511 16.1226 226.431 16.0791 226.379 16.0791 cv
226.335 16.0791 226.286 16.104 226.234 16.1538 cv
226.123 16.2563 226.008 16.4248 225.89 16.6597 cv
225.89 18.2944 li
225.89 18.4844 225.913 18.6284 225.96 18.7261 cv
225.992 18.7935 226.05 18.8496 226.132 18.8931 cv
226.214 18.937 226.331 18.9585 226.485 18.9585 cv
226.485 19.0962 li
224.736 19.0962 li
224.736 18.9585 li
224.909 18.9585 225.038 18.9312 225.122 18.8765 cv
225.185 18.8369 225.228 18.7734 225.252 18.6865 cv
225.265 18.644 225.271 18.5234 225.271 18.3247 cv
225.271 17.0034 li
225.271 16.6064 225.263 16.3701 225.246 16.2944 cv
225.23 16.2188 225.2 16.1636 225.157 16.1284 cv
225.114 16.0938 225.06 16.0767 224.995 16.0767 cv
224.919 16.0767 224.832 16.0952 224.735 16.1323 cv
224.698 15.9951 li
225.732 15.5747 li
225.89 15.5747 li
cp
f
229.518 15.5747 mo
229.518 16.7358 li
229.396 16.7358 li
229.302 16.3721 229.181 16.1245 229.033 15.9932 cv
228.886 15.8618 228.698 15.7964 228.471 15.7964 cv
228.297 15.7964 228.157 15.8423 228.051 15.9341 cv
227.944 16.0259 227.891 16.1279 227.891 16.2397 cv
227.891 16.3789 227.93 16.498 228.009 16.5972 cv
228.084 16.6992 228.24 16.8071 228.477 16.9214 cv
229.021 17.186 li
229.525 17.4321 229.777 17.7563 229.777 18.1587 cv
229.777 18.4697 229.66 18.7202 229.425 18.9102 cv
229.19 19.1006 228.928 19.1953 228.637 19.1953 cv
228.428 19.1953 228.189 19.1592 227.921 19.0864 cv
227.839 19.0625 227.771 19.0503 227.72 19.0503 cv
227.662 19.0503 227.617 19.0811 227.585 19.1421 cv
227.463 19.1421 li
227.463 17.9199 li
227.585 17.9199 li
227.655 18.269 227.788 18.5317 227.984 18.7085 cv
228.182 18.8857 228.401 18.9741 228.646 18.9741 cv
228.817 18.9741 228.957 18.9238 229.065 18.8232 cv
229.173 18.7227 229.228 18.6016 229.228 18.4604 cv
229.228 18.2891 229.167 18.145 229.046 18.0283 cv
228.925 17.9116 228.684 17.7646 228.322 17.5864 cv
227.962 17.4087 227.726 17.2476 227.614 17.103 cv
227.503 16.9609 227.447 16.7817 227.447 16.5649 cv
227.447 16.2837 227.544 16.0483 227.736 15.8589 cv
227.929 15.6694 228.178 15.5747 228.483 15.5747 cv
228.617 15.5747 228.78 15.604 228.971 15.6626 cv
229.098 15.7007 229.182 15.7202 229.225 15.7202 cv
229.264 15.7202 229.295 15.7109 229.317 15.6934 cv
229.34 15.6753 229.366 15.6362 229.396 15.5747 cv
229.518 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
198.057 .63623 mo
243.888 .63623 li
243.888 23.5518 li
198.057 23.5518 li
198.057 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
67.2231 7.17432 mo
67.2231 8.6543 li
67.2231 8.97217 67.2578 9.16992 67.3271 9.24658 cv
67.4214 9.35596 67.564 9.41064 67.7554 9.41064 cv
67.9487 9.41064 li
67.9487 9.54834 li
65.7793 9.54834 li
65.7793 9.41064 li
65.9702 9.41064 li
66.1846 9.41064 66.3379 9.34131 66.4302 9.20215 cv
66.48 9.125 66.5049 8.94238 66.5049 8.6543 cv
66.5049 5.37744 li
66.5049 5.05957 66.4712 4.8623 66.4038 4.78516 cv
66.3066 4.67578 66.1621 4.62109 65.9702 4.62109 cv
65.7793 4.62109 li
65.7793 4.48389 li
67.6353 4.48389 li
68.0884 4.48389 68.4453 4.53027 68.707 4.62354 cv
68.9683 4.71729 69.1885 4.87451 69.3677 5.09619 cv
69.5469 5.31738 69.6367 5.58008 69.6367 5.8833 cv
69.6367 6.29639 69.5005 6.63232 69.228 6.89111 cv
68.9561 7.1499 68.5708 7.2793 68.0737 7.2793 cv
67.9517 7.2793 67.8198 7.271 67.6782 7.25342 cv
67.5361 7.23584 67.3848 7.20947 67.2231 7.17432 cv
cp
67.2231 6.96045 mo
67.3545 6.98535 67.4707 7.00391 67.5728 7.0166 cv
67.6743 7.02881 67.7607 7.03516 67.833 7.03516 cv
68.0908 7.03516 68.3135 6.93506 68.5005 6.73535 cv
68.6875 6.53516 68.7813 6.27637 68.7813 5.9585 cv
68.7813 5.74023 68.7363 5.53711 68.6475 5.34961 cv
68.5581 5.1626 68.4316 5.02197 68.2681 4.9292 cv
68.1045 4.83594 67.9185 4.78955 67.71 4.78955 cv
67.5835 4.78955 67.4214 4.81299 67.2231 4.85986 cv
67.2231 6.96045 li
cp
f
73.0742 6.12598 mo
73.0742 8.20361 li
73.0742 8.59326 73.0835 8.83203 73.1021 8.91895 cv
73.1206 9.00586 73.1504 9.06689 73.1914 9.10107 cv
73.2319 9.13574 73.2798 9.15332 73.3345 9.15332 cv
73.4111 9.15332 73.498 9.13184 73.5947 9.08984 cv
73.647 9.22705 li
72.6235 9.64746 li
72.4551 9.64746 li
72.4551 8.93115 li
72.1621 9.24609 71.9385 9.44434 71.7842 9.52539 cv
71.6304 9.60693 71.4673 9.64746 71.2959 9.64746 cv
71.1045 9.64746 70.9385 9.59229 70.7983 9.48145 cv
70.6577 9.37061 70.5601 9.22852 70.5054 9.0542 cv
70.4507 8.88037 70.4233 8.63428 70.4233 8.31592 cv
70.4233 6.79053 li
70.4233 6.62842 70.4058 6.5166 70.3711 6.4541 cv
70.3359 6.39209 70.2842 6.34375 70.2158 6.31055 cv
70.147 6.27686 70.0225 6.26123 69.8428 6.26367 cv
69.8428 6.12598 li
71.042 6.12598 li
71.042 8.41895 li
71.042 8.73779 71.0977 8.94727 71.208 9.04736 cv
71.3188 9.14697 71.4521 9.19678 71.6089 9.19678 cv
71.7158 9.19678 71.8369 9.16309 71.9727 9.0957 cv
72.1079 9.02832 72.269 8.8999 72.4551 8.71045 cv
72.4551 6.77539 li
72.4551 6.57813 72.4199 6.44482 72.3486 6.37549 cv
72.2773 6.30615 72.1299 6.26855 71.9053 6.26367 cv
71.9053 6.12598 li
73.0742 6.12598 li
cp
f
74.8232 6.74316 mo
75.2227 6.26563 75.6035 6.02686 75.9653 6.02686 cv
76.1514 6.02686 76.3115 6.07373 76.4453 6.16699 cv
76.5796 6.26025 76.686 6.41406 76.7656 6.62842 cv
76.8203 6.77783 76.8477 7.00684 76.8477 7.31592 cv
76.8477 8.77686 li
76.8477 8.9917 76.8647 9.1377 76.8994 9.21436 cv
76.9268 9.27588 76.9707 9.32422 77.0313 9.35889 cv
77.0918 9.39307 77.2036 9.41064 77.3667 9.41064 cv
77.3667 9.54834 li
75.6787 9.54834 li
75.6787 9.41064 li
75.7495 9.41064 li
75.9077 9.41064 76.0186 9.38623 76.082 9.33838 cv
76.145 9.29004 76.189 9.21924 76.2139 9.125 cv
76.2236 9.08789 76.2285 8.97168 76.2285 8.77686 cv
76.2285 7.37012 li
76.2285 7.05762 76.1885 6.83057 76.1084 6.68945 cv
76.0278 6.54834 75.8926 6.47754 75.7021 6.47754 cv
75.4077 6.47754 75.1147 6.63965 74.8232 6.96436 cv
74.8232 8.77686 li
74.8232 9.00635 74.8369 9.14844 74.8643 9.20313 cv
74.8994 9.2749 74.9473 9.32715 75.0083 9.36084 cv
75.0693 9.39404 75.1938 9.41064 75.3809 9.41064 cv
75.3809 9.54834 li
73.6851 9.54834 li
73.6851 9.41064 li
73.7598 9.41064 li
73.9341 9.41064 74.0518 9.3667 74.1128 9.27881 cv
74.1738 9.19141 74.2046 9.02393 74.2046 8.77686 cv
74.2046 7.50879 li
74.2046 7.09863 74.1953 6.84912 74.1768 6.75977 cv
74.1582 6.66992 74.1294 6.60938 74.0908 6.57666 cv
74.0527 6.54443 74.001 6.52832 73.9365 6.52832 cv
73.8672 6.52832 73.7842 6.54688 73.6875 6.58447 cv
73.6318 6.44678 li
74.6626 6.02686 li
74.8232 6.02686 li
74.8232 6.74316 li
cp
f
80.4834 8.24805 mo
80.3916 8.69971 80.2109 9.0459 79.9424 9.28662 cv
79.6738 9.52686 79.377 9.64746 79.0508 9.64746 cv
78.6631 9.64746 78.3247 9.48486 78.0361 9.15918 cv
77.748 8.8335 77.6035 8.39355 77.6035 7.83887 cv
77.6035 7.30225 77.7632 6.86572 78.0825 6.53027 cv
78.4019 6.19482 78.7852 6.02686 79.2324 6.02686 cv
79.5679 6.02686 79.8438 6.11572 80.0596 6.29346 cv
80.2759 6.47168 80.3843 6.65625 80.3843 6.84766 cv
80.3843 6.94238 80.3535 7.01904 80.293 7.07715 cv
80.2319 7.13574 80.147 7.16504 80.0371 7.16504 cv
79.8906 7.16504 79.7813 7.11719 79.7095 7.02197 cv
79.6646 6.96973 79.6353 6.86963 79.6216 6.72168 cv
79.6079 6.57422 79.5576 6.46143 79.4707 6.38379 cv
79.3838 6.30859 79.2632 6.271 79.1094 6.271 cv
78.8608 6.271 78.6606 6.36328 78.5093 6.54785 cv
78.3076 6.79199 78.207 7.11475 78.207 7.51563 cv
78.207 7.92432 78.3071 8.28516 78.5078 8.59766 cv
78.708 8.91064 78.979 9.06689 79.3198 9.06689 cv
79.5635 9.06689 79.7827 8.98486 79.9771 8.82129 cv
80.1138 8.70752 80.2471 8.49902 80.3765 8.19629 cv
80.4834 8.24805 li
cp
f
81.9043 5.00342 mo
81.9043 6.12598 li
82.7021 6.12598 li
82.7021 6.37793 li
81.9043 6.38574 li
81.9043 8.60254 li
81.9043 8.82422 81.9355 8.97314 81.999 9.05029 cv
82.0625 9.12744 82.1436 9.16602 82.2432 9.16602 cv
82.3252 9.16602 82.4043 9.14014 82.4814 9.08887 cv
82.5586 9.03711 82.6182 8.96143 82.6602 8.86084 cv
82.8057 8.86084 li
82.7183 9.10645 82.5952 9.2915 82.4355 9.41553 cv
82.2764 9.53955 82.1118 9.60156 81.9429 9.60156 cv
81.8281 9.60156 81.7163 9.56982 81.6064 9.50635 cv
81.4971 9.44238 81.416 9.35107 81.3638 9.23291 cv
81.3115 9.11426 81.2852 8.93115 81.2852 8.68457 cv
81.2852 6.37793 li
80.7432 6.37793 li
80.7432 6.25928 li
80.8804 6.20508 81.0205 6.11328 81.1641 5.98389 cv
81.3076 5.85498 81.436 5.70068 81.5488 5.52197 cv
81.6064 5.42725 81.6865 5.25439 81.7896 5.00342 cv
81.9043 5.00342 li
cp
f
85.9678 6.12598 mo
85.9678 8.20361 li
85.9678 8.59326 85.9771 8.83203 85.9956 8.91895 cv
86.0142 9.00586 86.0439 9.06689 86.085 9.10107 cv
86.126 9.13574 86.1738 9.15332 86.228 9.15332 cv
86.3052 9.15332 86.3921 9.13184 86.4888 9.08984 cv
86.5405 9.22705 li
85.5171 9.64746 li
85.3491 9.64746 li
85.3491 8.93115 li
85.0557 9.24609 84.832 9.44434 84.6777 9.52539 cv
84.5239 9.60693 84.3613 9.64746 84.1895 9.64746 cv
83.998 9.64746 83.8325 9.59229 83.6919 9.48145 cv
83.5513 9.37061 83.4541 9.22852 83.3994 9.0542 cv
83.3447 8.88037 83.3174 8.63428 83.3174 8.31592 cv
83.3174 6.79053 li
83.3174 6.62842 83.2998 6.5166 83.2646 6.4541 cv
83.23 6.39209 83.1782 6.34375 83.1094 6.31055 cv
83.0405 6.27686 82.9165 6.26123 82.7368 6.26367 cv
82.7368 6.12598 li
83.936 6.12598 li
83.936 8.41895 li
83.936 8.73779 83.9912 8.94727 84.1021 9.04736 cv
84.2124 9.14697 84.3462 9.19678 84.5024 9.19678 cv
84.6094 9.19678 84.731 9.16309 84.8662 9.0957 cv
85.0015 9.02832 85.1626 8.8999 85.3491 8.71045 cv
85.3491 6.77539 li
85.3491 6.57813 85.3135 6.44482 85.2422 6.37549 cv
85.1714 6.30615 85.0234 6.26855 84.7993 6.26367 cv
84.7993 6.12598 li
85.9678 6.12598 li
cp
f
88.6489 9.05127 mo
88.2983 9.32324 88.0781 9.48047 87.9888 9.52295 cv
87.8545 9.58545 87.7114 9.6167 87.5601 9.6167 cv
87.3237 9.6167 87.1289 9.53613 86.9761 9.37402 cv
86.8232 9.2124 86.7471 8.99951 86.7471 8.73584 cv
86.7471 8.56885 86.7842 8.42432 86.8589 8.30273 cv
86.9609 8.1333 87.1377 7.97412 87.3901 7.82471 cv
87.6426 7.67529 88.062 7.49365 88.6489 7.2793 cv
88.6489 7.14551 li
88.6489 6.80566 88.5947 6.57227 88.4873 6.4458 cv
88.3794 6.31934 88.2227 6.25586 88.0166 6.25586 cv
87.8604 6.25586 87.7363 6.29834 87.6445 6.38281 cv
87.5503 6.46729 87.5034 6.56445 87.5034 6.67383 cv
87.5107 6.89063 li
87.5107 7.00488 87.4814 7.09326 87.4224 7.15576 cv
87.3638 7.21777 87.2871 7.24902 87.1919 7.24902 cv
87.0991 7.24902 87.0234 7.21631 86.9648 7.15186 cv
86.9063 7.08691 86.877 6.99854 86.877 6.88623 cv
86.877 6.67188 86.9863 6.4751 87.2056 6.2959 cv
87.4248 6.1167 87.7324 6.02686 88.1284 6.02686 cv
88.4321 6.02686 88.6812 6.07764 88.8755 6.17969 cv
89.0225 6.25684 89.1309 6.37744 89.2002 6.54199 cv
89.2451 6.64893 89.2676 6.86768 89.2676 7.19873 cv
89.2676 8.35938 li
89.2676 8.68555 89.2739 8.88525 89.2861 8.9585 cv
89.2988 9.03174 89.3193 9.08105 89.3481 9.10596 cv
89.377 9.13086 89.4102 9.14307 89.4473 9.14307 cv
89.4873 9.14307 89.5225 9.13477 89.5522 9.11719 cv
89.605 9.08496 89.7061 8.99414 89.856 8.84521 cv
89.856 9.05371 li
89.5762 9.4292 89.3086 9.6167 89.0537 9.6167 cv
88.9312 9.6167 88.834 9.57422 88.7612 9.48877 cv
88.689 9.40332 88.6514 9.25732 88.6489 9.05127 cv
cp
88.6489 8.80908 mo
88.6489 7.50879 li
88.271 7.65771 88.0273 7.76318 87.917 7.8252 cv
87.7197 7.93457 87.5781 8.04883 87.4932 8.16797 cv
87.4082 8.2876 87.3657 8.41748 87.3657 8.55908 cv
87.3657 8.73828 87.4194 8.88623 87.5269 9.00439 cv
87.6348 9.12256 87.7583 9.18164 87.8984 9.18164 cv
88.0884 9.18164 88.3389 9.05713 88.6489 8.80908 cv
cp
f
91.0474 5.00342 mo
91.0474 6.12598 li
91.8457 6.12598 li
91.8457 6.37793 li
91.0474 6.38574 li
91.0474 8.60254 li
91.0474 8.82422 91.0791 8.97314 91.1426 9.05029 cv
91.2056 9.12744 91.2871 9.16602 91.3862 9.16602 cv
91.4683 9.16602 91.5479 9.14014 91.6245 9.08887 cv
91.7017 9.03711 91.7612 8.96143 91.8037 8.86084 cv
91.9487 8.86084 li
91.8618 9.10645 91.7383 9.2915 91.5791 9.41553 cv
91.4194 9.53955 91.2554 9.60156 91.0859 9.60156 cv
90.9717 9.60156 90.8594 9.56982 90.75 9.50635 cv
90.6401 9.44238 90.5596 9.35107 90.5068 9.23291 cv
90.4546 9.11426 90.4287 8.93115 90.4287 8.68457 cv
90.4287 6.37793 li
89.8862 6.37793 li
89.8862 6.25928 li
90.0234 6.20508 90.1641 6.11328 90.3076 5.98389 cv
90.4512 5.85498 90.5791 5.70068 90.6919 5.52197 cv
90.75 5.42725 90.8301 5.25439 90.9326 5.00342 cv
91.0474 5.00342 li
cp
f
92.9858 4.23926 mo
93.0898 4.23926 93.1787 4.27588 93.252 4.34912 cv
93.3252 4.42236 93.3618 4.51123 93.3618 4.61572 cv
93.3618 4.71973 93.3252 4.80908 93.252 4.88379 cv
93.1787 4.9585 93.0898 4.99561 92.9858 4.99561 cv
92.8813 4.99561 92.792 4.9585 92.7173 4.88379 cv
92.6431 4.80908 92.6055 4.71973 92.6055 4.61572 cv
92.6055 4.51123 92.6421 4.42236 92.7153 4.34912 cv
92.7886 4.27588 92.8789 4.23926 92.9858 4.23926 cv
cp
93.293 6.02686 mo
93.293 8.77686 li
93.293 8.98926 93.3086 9.13086 93.3398 9.20117 cv
93.3711 9.27148 93.417 9.32422 93.478 9.35889 cv
93.5391 9.39307 93.6504 9.41064 93.8125 9.41064 cv
93.8125 9.54834 li
92.1548 9.54834 li
92.1548 9.41064 li
92.3208 9.41064 92.4321 9.39453 92.4888 9.3623 cv
92.5459 9.33008 92.5908 9.27686 92.624 9.20313 cv
92.6577 9.12891 92.6743 8.98682 92.6743 8.77686 cv
92.6743 7.45508 li
92.6743 7.08691 92.6631 6.84863 92.6406 6.73975 cv
92.6235 6.66113 92.5962 6.60596 92.5591 6.57471 cv
92.522 6.54395 92.4712 6.52832 92.4067 6.52832 cv
92.3369 6.52832 92.2529 6.54688 92.1533 6.58447 cv
92.1016 6.44678 li
93.1294 6.02686 li
93.293 6.02686 li
cp
f
95.8555 6.02686 mo
96.3735 6.02686 96.7891 6.22314 97.1025 6.61572 cv
97.3687 6.95166 97.502 7.33691 97.502 7.77197 cv
97.502 8.07764 97.4282 8.38721 97.2817 8.7002 cv
97.1348 9.01367 96.9326 9.24951 96.6748 9.40869 cv
96.4175 9.56787 96.1309 9.64746 95.8145 9.64746 cv
95.2993 9.64746 94.8901 9.44238 94.5864 9.03223 cv
94.3301 8.68652 94.2021 8.29883 94.2021 7.86865 cv
94.2021 7.55566 94.2798 7.24414 94.4355 6.93506 cv
94.5908 6.62549 94.7959 6.39648 95.0493 6.24854 cv
95.3032 6.10059 95.5723 6.02686 95.8555 6.02686 cv
cp
95.7402 6.271 mo
95.6084 6.271 95.4761 6.31006 95.3428 6.38867 cv
95.21 6.4668 95.1025 6.604 95.02 6.7998 cv
94.938 6.99609 94.897 7.24805 94.897 7.55566 cv
94.897 8.05225 94.9961 8.48047 95.1938 8.84033 cv
95.3916 9.2002 95.6519 9.37988 95.9751 9.37988 cv
96.2163 9.37988 96.415 9.28076 96.5718 9.08252 cv
96.7285 8.88379 96.8066 8.54248 96.8066 8.05811 cv
96.8066 7.45264 96.6763 6.97607 96.415 6.62842 cv
96.2388 6.39014 96.0137 6.271 95.7402 6.271 cv
cp
f
98.9229 6.74316 mo
99.3218 6.26563 99.7026 6.02686 100.065 6.02686 cv
100.251 6.02686 100.411 6.07373 100.545 6.16699 cv
100.679 6.26025 100.786 6.41406 100.865 6.62842 cv
100.919 6.77783 100.947 7.00684 100.947 7.31592 cv
100.947 8.77686 li
100.947 8.9917 100.964 9.1377 100.999 9.21436 cv
101.026 9.27588 101.07 9.32422 101.13 9.35889 cv
101.191 9.39307 101.303 9.41064 101.466 9.41064 cv
101.466 9.54834 li
99.7783 9.54834 li
99.7783 9.41064 li
99.8486 9.41064 li
100.007 9.41064 100.118 9.38623 100.181 9.33838 cv
100.245 9.29004 100.289 9.21924 100.313 9.125 cv
100.323 9.08789 100.328 8.97168 100.328 8.77686 cv
100.328 7.37012 li
100.328 7.05762 100.288 6.83057 100.208 6.68945 cv
100.127 6.54834 99.9917 6.47754 99.8018 6.47754 cv
99.5073 6.47754 99.2144 6.63965 98.9229 6.96436 cv
98.9229 8.77686 li
98.9229 9.00635 98.9365 9.14844 98.9639 9.20313 cv
98.9985 9.2749 99.0469 9.32715 99.1079 9.36084 cv
99.1689 9.39404 99.293 9.41064 99.4805 9.41064 cv
99.4805 9.54834 li
97.7847 9.54834 li
97.7847 9.41064 li
97.8594 9.41064 li
98.0337 9.41064 98.1514 9.3667 98.2124 9.27881 cv
98.2734 9.19141 98.3037 9.02393 98.3037 8.77686 cv
98.3037 7.50879 li
98.3037 7.09863 98.2944 6.84912 98.2759 6.75977 cv
98.2573 6.66992 98.229 6.60938 98.1904 6.57666 cv
98.1519 6.54443 98.1006 6.52832 98.0361 6.52832 cv
97.9668 6.52832 97.8838 6.54688 97.7871 6.58447 cv
97.731 6.44678 li
98.7622 6.02686 li
98.9229 6.02686 li
98.9229 6.74316 li
cp
f
71.6685 17.7964 mo
71.5767 18.248 71.3965 18.5942 71.1274 18.8345 cv
70.8589 19.0752 70.562 19.1953 70.2363 19.1953 cv
69.8481 19.1953 69.5098 19.0327 69.2217 18.707 cv
68.9331 18.3813 68.7891 17.9414 68.7891 17.3872 cv
68.7891 16.8501 68.9482 16.4136 69.2676 16.0781 cv
69.5869 15.7427 69.9702 15.5747 70.4175 15.5747 cv
70.7529 15.5747 71.0288 15.6636 71.2451 15.8418 cv
71.4609 16.0195 71.5693 16.2041 71.5693 16.396 cv
71.5693 16.4902 71.5391 16.5669 71.478 16.6255 cv
71.417 16.6836 71.332 16.7129 71.2227 16.7129 cv
71.0762 16.7129 70.9668 16.6655 70.8945 16.5703 cv
70.8501 16.5176 70.8208 16.4175 70.8071 16.27 cv
70.7935 16.1221 70.7432 16.0093 70.6558 15.9321 cv
70.5688 15.8569 70.4482 15.8193 70.2944 15.8193 cv
70.0459 15.8193 69.8457 15.9116 69.6943 16.0957 cv
69.4932 16.3398 69.3921 16.6626 69.3921 17.064 cv
69.3921 17.4727 69.4927 17.8335 69.6929 18.146 cv
69.8931 18.4585 70.1641 18.6147 70.5049 18.6147 cv
70.749 18.6147 70.9678 18.5332 71.1621 18.3696 cv
71.2988 18.2554 71.4321 18.0469 71.5615 17.7441 cv
71.6685 17.7964 li
cp
f
73.0586 13.7876 mo
73.0586 16.2871 li
73.335 15.9839 73.5542 15.7896 73.7158 15.7036 cv
73.8779 15.6177 74.0396 15.5747 74.2017 15.5747 cv
74.396 15.5747 74.5625 15.6284 74.7021 15.7354 cv
74.8413 15.8428 74.9448 16.0107 75.0117 16.2397 cv
75.0591 16.3994 75.083 16.6909 75.083 17.1143 cv
75.083 18.3247 li
75.083 18.5396 75.1001 18.687 75.1348 18.7661 cv
75.1597 18.8252 75.2017 18.8721 75.2607 18.9067 cv
75.3203 18.9414 75.4287 18.9585 75.5869 18.9585 cv
75.5869 19.0962 li
73.9141 19.0962 li
73.9141 18.9585 li
73.9922 18.9585 li
74.1509 18.9585 74.2612 18.9346 74.3228 18.8862 cv
74.3848 18.8384 74.4282 18.7671 74.4531 18.6733 cv
74.4604 18.6338 74.4644 18.5176 74.4644 18.3247 cv
74.4644 17.1133 li
74.4644 16.7397 74.4448 16.4941 74.4063 16.377 cv
74.3677 16.2598 74.3062 16.1719 74.2212 16.1133 cv
74.1367 16.0547 74.0342 16.0254 73.9146 16.0254 cv
73.7925 16.0254 73.6655 16.0581 73.5332 16.1226 cv
73.4014 16.1875 73.2432 16.3179 73.0586 16.5151 cv
73.0586 18.3247 li
73.0586 18.5571 73.0718 18.7017 73.0977 18.7583 cv
73.124 18.8154 73.1719 18.8628 73.2427 18.9014 cv
73.3135 18.9395 73.4355 18.9585 73.6089 18.9585 cv
73.6089 19.0962 li
71.9204 19.0962 li
71.9204 18.9585 li
72.0713 18.9585 72.1904 18.9351 72.2769 18.8882 cv
72.3262 18.8638 72.3657 18.8164 72.3955 18.7476 cv
72.4253 18.6782 72.4399 18.5376 72.4399 18.3247 cv
72.4399 15.231 li
72.4399 14.8433 72.4307 14.6045 72.4121 14.5156 cv
72.3936 14.4268 72.3647 14.3662 72.3267 14.334 cv
72.2881 14.3018 72.2368 14.2856 72.1724 14.2856 cv
72.1201 14.2856 72.0356 14.3052 71.9189 14.3452 cv
71.8672 14.2075 li
72.8877 13.7876 li
73.0586 13.7876 li
cp
f
77.7031 18.5991 mo
77.3525 18.8716 77.1323 19.0288 77.043 19.0713 cv
76.9087 19.1338 76.7656 19.165 76.6138 19.165 cv
76.3779 19.165 76.1831 19.084 76.0303 18.9224 cv
75.8774 18.7603 75.8008 18.5474 75.8008 18.2837 cv
75.8008 18.1172 75.8384 17.9727 75.9126 17.8506 cv
76.0146 17.6812 76.1919 17.522 76.4443 17.3726 cv
76.6968 17.2231 77.1162 17.0415 77.7031 16.8276 cv
77.7031 16.6934 li
77.7031 16.3535 77.6489 16.1206 77.541 15.9937 cv
77.4331 15.8672 77.2764 15.8042 77.0708 15.8042 cv
76.9146 15.8042 76.7905 15.8462 76.6987 15.9312 cv
76.6045 16.0156 76.5576 16.1128 76.5576 16.2222 cv
76.5649 16.4385 li
76.5649 16.5532 76.5356 16.6416 76.4766 16.7036 cv
76.418 16.7661 76.3408 16.7969 76.2461 16.7969 cv
76.1533 16.7969 76.0776 16.7646 76.019 16.6997 cv
75.96 16.6353 75.9307 16.5464 75.9307 16.4346 cv
75.9307 16.2202 76.0405 16.0234 76.2598 15.8442 cv
76.4785 15.6646 76.7861 15.5747 77.1821 15.5747 cv
77.4863 15.5747 77.7354 15.626 77.9297 15.728 cv
78.0762 15.8052 78.1846 15.9258 78.2544 16.0898 cv
78.2993 16.1968 78.3218 16.416 78.3218 16.7466 cv
78.3218 17.9077 li
78.3218 18.2334 78.3281 18.4331 78.3403 18.5068 cv
78.353 18.5801 78.3735 18.6294 78.4023 18.6543 cv
78.4312 18.6792 78.4639 18.6914 78.5015 18.6914 cv
78.5415 18.6914 78.5767 18.6826 78.6064 18.6655 cv
78.6587 18.6333 78.7598 18.5425 78.9097 18.3936 cv
78.9097 18.6021 li
78.6299 18.9771 78.3628 19.165 78.1079 19.165 cv
77.9854 19.165 77.8877 19.1221 77.8154 19.0366 cv
77.7427 18.9512 77.7056 18.8052 77.7031 18.5991 cv
cp
77.7031 18.3569 mo
77.7031 17.0566 li
77.3252 17.2056 77.0815 17.3115 76.9712 17.3735 cv
76.7734 17.4829 76.6323 17.5972 76.5474 17.7163 cv
76.4624 17.8354 76.4199 17.9658 76.4199 18.1074 cv
76.4199 18.2861 76.4736 18.4346 76.5811 18.5527 cv
76.6885 18.6704 76.8125 18.7295 76.9526 18.7295 cv
77.1426 18.7295 77.3926 18.6055 77.7031 18.3569 cv
cp
f
80.0708 15.5747 mo
80.0708 16.3462 li
80.355 15.832 80.646 15.5747 80.9448 15.5747 cv
81.0806 15.5747 81.1929 15.6167 81.2817 15.7002 cv
81.3706 15.7837 81.415 15.8804 81.415 15.9907 cv
81.415 16.0879 81.3833 16.1704 81.3193 16.2378 cv
81.2554 16.3052 81.1792 16.3389 81.0903 16.3389 cv
81.0044 16.3389 80.9077 16.2954 80.7998 16.209 cv
80.6924 16.1226 80.6123 16.0791 80.5605 16.0791 cv
80.5161 16.0791 80.4678 16.104 80.416 16.1538 cv
80.3047 16.2563 80.1895 16.4248 80.0708 16.6597 cv
80.0708 18.2944 li
80.0708 18.4844 80.0947 18.6284 80.1416 18.7261 cv
80.1738 18.7935 80.231 18.8496 80.313 18.8931 cv
80.395 18.937 80.5127 18.9585 80.6665 18.9585 cv
80.6665 19.0962 li
78.9175 19.0962 li
78.9175 18.9585 li
79.0908 18.9585 79.2197 18.9312 79.3037 18.8765 cv
79.3657 18.8369 79.4087 18.7734 79.4336 18.6865 cv
79.4458 18.644 79.4521 18.5234 79.4521 18.3247 cv
79.4521 17.0034 li
79.4521 16.6064 79.4443 16.3701 79.4277 16.2944 cv
79.4121 16.2188 79.3823 16.1636 79.3389 16.1284 cv
79.2954 16.0938 79.2412 16.0767 79.1768 16.0767 cv
79.1001 16.0767 79.0132 16.0952 78.9165 16.1323 cv
78.8794 15.9951 li
79.9141 15.5747 li
80.0708 15.5747 li
cp
f
83.4395 18.5991 mo
83.0889 18.8716 82.8687 19.0288 82.7793 19.0713 cv
82.645 19.1338 82.502 19.165 82.3506 19.165 cv
82.1143 19.165 81.9199 19.084 81.7666 18.9224 cv
81.6138 18.7603 81.5376 18.5474 81.5376 18.2837 cv
81.5376 18.1172 81.5747 17.9727 81.6494 17.8506 cv
81.7515 17.6812 81.9287 17.522 82.1807 17.3726 cv
82.4331 17.2231 82.8525 17.0415 83.4395 16.8276 cv
83.4395 16.6934 li
83.4395 16.3535 83.3857 16.1206 83.2778 15.9937 cv
83.1699 15.8672 83.0132 15.8042 82.8071 15.8042 cv
82.6509 15.8042 82.5269 15.8462 82.4351 15.9312 cv
82.3408 16.0156 82.2939 16.1128 82.2939 16.2222 cv
82.3013 16.4385 li
82.3013 16.5532 82.272 16.6416 82.2129 16.7036 cv
82.1543 16.7661 82.0776 16.7969 81.9824 16.7969 cv
81.8896 16.7969 81.8145 16.7646 81.7554 16.6997 cv
81.6968 16.6353 81.6675 16.5464 81.6675 16.4346 cv
81.6675 16.2202 81.7769 16.0234 81.9961 15.8442 cv
82.2153 15.6646 82.5229 15.5747 82.9189 15.5747 cv
83.2227 15.5747 83.4717 15.626 83.666 15.728 cv
83.813 15.8052 83.9214 15.9258 83.9912 16.0898 cv
84.0356 16.1968 84.0581 16.416 84.0581 16.7466 cv
84.0581 17.9077 li
84.0581 18.2334 84.0645 18.4331 84.0771 18.5068 cv
84.0894 18.5801 84.1099 18.6294 84.1387 18.6543 cv
84.1675 18.6792 84.2007 18.6914 84.2383 18.6914 cv
84.2778 18.6914 84.313 18.6826 84.3428 18.6655 cv
84.3955 18.6333 84.4966 18.5425 84.6465 18.3936 cv
84.6465 18.6021 li
84.3667 18.9771 84.0991 19.165 83.8442 19.165 cv
83.7217 19.165 83.6245 19.1221 83.5518 19.0366 cv
83.4795 18.9512 83.4419 18.8052 83.4395 18.5991 cv
cp
83.4395 18.3569 mo
83.4395 17.0566 li
83.0615 17.2056 82.8179 17.3115 82.7075 17.3735 cv
82.5103 17.4829 82.3687 17.5972 82.2837 17.7163 cv
82.1987 17.8354 82.1563 17.9658 82.1563 18.1074 cv
82.1563 18.2861 82.21 18.4346 82.3174 18.5527 cv
82.4253 18.6704 82.5488 18.7295 82.689 18.7295 cv
82.8789 18.7295 83.1294 18.6055 83.4395 18.3569 cv
cp
f
87.7095 17.7964 mo
87.6172 18.248 87.437 18.5942 87.1685 18.8345 cv
86.8999 19.0752 86.6025 19.1953 86.2769 19.1953 cv
85.8892 19.1953 85.5508 19.0327 85.2622 18.707 cv
84.9736 18.3813 84.8296 17.9414 84.8296 17.3872 cv
84.8296 16.8501 84.9893 16.4136 85.3086 16.0781 cv
85.6279 15.7427 86.0112 15.5747 86.4585 15.5747 cv
86.7939 15.5747 87.0698 15.6636 87.2856 15.8418 cv
87.502 16.0195 87.6099 16.2041 87.6099 16.396 cv
87.6099 16.4902 87.5796 16.5669 87.5186 16.6255 cv
87.458 16.6836 87.3726 16.7129 87.2632 16.7129 cv
87.1167 16.7129 87.0073 16.6655 86.9355 16.5703 cv
86.8906 16.5176 86.8613 16.4175 86.8477 16.27 cv
86.834 16.1221 86.7837 16.0093 86.6968 15.9321 cv
86.6099 15.8569 86.4893 15.8193 86.335 15.8193 cv
86.0869 15.8193 85.8867 15.9116 85.7349 16.0957 cv
85.5337 16.3398 85.4331 16.6626 85.4331 17.064 cv
85.4331 17.4727 85.5332 17.8335 85.7334 18.146 cv
85.9341 18.4585 86.2046 18.6147 86.5459 18.6147 cv
86.7896 18.6147 87.0088 18.5332 87.2031 18.3696 cv
87.3398 18.2554 87.4731 18.0469 87.6025 17.7441 cv
87.7095 17.7964 li
cp
f
89.0918 14.5513 mo
89.0918 15.6743 li
89.8901 15.6743 li
89.8901 15.9263 li
89.0918 15.9341 li
89.0918 18.1509 li
89.0918 18.3721 89.1235 18.5215 89.187 18.5986 cv
89.2505 18.6758 89.3315 18.7144 89.4307 18.7144 cv
89.5127 18.7144 89.5923 18.6885 89.6694 18.6372 cv
89.7461 18.5854 89.8057 18.5093 89.8481 18.4087 cv
89.9932 18.4087 li
89.9063 18.6543 89.7827 18.8394 89.6235 18.9634 cv
89.4644 19.0874 89.2998 19.1499 89.1304 19.1499 cv
89.0161 19.1499 88.9038 19.1177 88.7944 19.0542 cv
88.6846 18.9907 88.604 18.8994 88.5518 18.7808 cv
88.4995 18.6626 88.4731 18.4795 88.4731 18.2324 cv
88.4731 15.9263 li
87.9307 15.9263 li
87.9307 15.8071 li
88.0684 15.7534 88.2085 15.6616 88.3521 15.5322 cv
88.4956 15.4028 88.6235 15.249 88.7368 15.0698 cv
88.7944 14.9751 88.8745 14.8022 88.9775 14.5513 cv
89.0918 14.5513 li
cp
f
90.6885 16.9653 mo
90.686 17.4702 90.8091 17.8662 91.0576 18.1538 cv
91.3062 18.4409 91.5986 18.5845 91.9341 18.5845 cv
92.1582 18.5845 92.3525 18.5234 92.5181 18.4019 cv
92.6836 18.2798 92.8223 18.0684 92.9341 17.7671 cv
93.0488 17.8418 li
92.9966 18.186 92.8447 18.4976 92.5942 18.7769 cv
92.3433 19.0562 92.0293 19.1953 91.6514 19.1953 cv
91.2417 19.1953 90.8911 19.0361 90.5991 18.7168 cv
90.3071 18.3979 90.1611 17.9688 90.1611 17.4302 cv
90.1611 16.8462 90.311 16.3911 90.6104 16.0649 cv
90.9097 15.7383 91.2852 15.5747 91.7373 15.5747 cv
92.1196 15.5747 92.4341 15.7012 92.6797 15.9531 cv
92.9258 16.2056 93.0488 16.5425 93.0488 16.9653 cv
90.6885 16.9653 li
cp
90.6885 16.7515 mo
92.2695 16.7515 li
92.2573 16.5327 92.231 16.3784 92.1914 16.2896 cv
92.1289 16.1504 92.0366 16.041 91.9136 15.9614 cv
91.7905 15.8818 91.6616 15.8423 91.5273 15.8423 cv
91.3213 15.8423 91.1367 15.9224 90.9736 16.0825 cv
90.811 16.2427 90.7158 16.4653 90.6885 16.7515 cv
cp
f
94.416 15.5747 mo
94.416 16.3462 li
94.6997 15.832 94.9912 15.5747 95.29 15.5747 cv
95.4258 15.5747 95.5381 15.6167 95.627 15.7002 cv
95.7158 15.7837 95.7603 15.8804 95.7603 15.9907 cv
95.7603 16.0879 95.7285 16.1704 95.6646 16.2378 cv
95.6006 16.3052 95.5239 16.3389 95.4355 16.3389 cv
95.3496 16.3389 95.2524 16.2954 95.145 16.209 cv
95.0376 16.1226 94.9575 16.0791 94.9058 16.0791 cv
94.8613 16.0791 94.813 16.104 94.7607 16.1538 cv
94.6499 16.2563 94.5347 16.4248 94.416 16.6597 cv
94.416 18.2944 li
94.416 18.4844 94.4395 18.6284 94.4868 18.7261 cv
94.519 18.7935 94.5762 18.8496 94.6582 18.8931 cv
94.7397 18.937 94.8579 18.9585 95.0117 18.9585 cv
95.0117 19.0962 li
93.2627 19.0962 li
93.2627 18.9585 li
93.436 18.9585 93.5645 18.9312 93.6489 18.8765 cv
93.7104 18.8369 93.7539 18.7734 93.7788 18.6865 cv
93.791 18.644 93.7974 18.5234 93.7974 18.3247 cv
93.7974 17.0034 li
93.7974 16.6064 93.7891 16.3701 93.7729 16.2944 cv
93.7568 16.2188 93.7271 16.1636 93.6836 16.1284 cv
93.6401 16.0938 93.5864 16.0767 93.522 16.0767 cv
93.4453 16.0767 93.3584 16.0952 93.2617 16.1323 cv
93.2241 15.9951 li
94.2588 15.5747 li
94.416 15.5747 li
cp
f
98.0596 15.5747 mo
98.0596 16.7358 li
97.9375 16.7358 li
97.8433 16.3721 97.7222 16.1245 97.5747 15.9932 cv
97.4277 15.8618 97.2397 15.7964 97.0122 15.7964 cv
96.8389 15.7964 96.6987 15.8423 96.5923 15.9341 cv
96.4858 16.0259 96.4326 16.1279 96.4326 16.2397 cv
96.4326 16.3789 96.4717 16.498 96.5503 16.5972 cv
96.626 16.6992 96.7822 16.8071 97.0181 16.9214 cv
97.5625 17.186 li
98.0669 17.4321 98.3193 17.7563 98.3193 18.1587 cv
98.3193 18.4697 98.2017 18.7202 97.9668 18.9102 cv
97.7319 19.1006 97.4692 19.1953 97.1782 19.1953 cv
96.9697 19.1953 96.731 19.1592 96.4624 19.0864 cv
96.3804 19.0625 96.3135 19.0503 96.2612 19.0503 cv
96.2041 19.0503 96.1592 19.0811 96.127 19.1421 cv
96.0049 19.1421 li
96.0049 17.9199 li
96.127 17.9199 li
96.1968 18.269 96.3296 18.5317 96.5264 18.7085 cv
96.7231 18.8857 96.9434 18.9741 97.187 18.9741 cv
97.3584 18.9741 97.4985 18.9238 97.6069 18.8232 cv
97.7153 18.7227 97.769 18.6016 97.769 18.4604 cv
97.769 18.2891 97.7085 18.145 97.5874 18.0283 cv
97.4663 17.9116 97.2251 17.7646 96.8643 17.5864 cv
96.5039 17.4087 96.2676 17.2476 96.1563 17.103 cv
96.0449 16.9609 95.9893 16.7817 95.9893 16.5649 cv
95.9893 16.2837 96.0854 16.0483 96.2783 15.8589 cv
96.4707 15.6694 96.7192 15.5747 97.0249 15.5747 cv
97.1587 15.5747 97.3218 15.604 97.5127 15.6626 cv
97.6392 15.7007 97.7236 15.7202 97.7661 15.7202 cv
97.8057 15.7202 97.8369 15.7109 97.8589 15.6934 cv
97.8813 15.6753 97.9077 15.6362 97.9375 15.5747 cv
98.0596 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
60.5645 .63623 mo
106.396 .63623 li
106.396 23.5518 li
60.5645 23.5518 li
60.5645 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
158.885 7.17432 mo
158.885 8.6543 li
158.885 8.97217 158.919 9.16992 158.989 9.24658 cv
159.083 9.35596 159.226 9.41064 159.417 9.41064 cv
159.61 9.41064 li
159.61 9.54834 li
157.441 9.54834 li
157.441 9.41064 li
157.632 9.41064 li
157.846 9.41064 158 9.34131 158.092 9.20215 cv
158.142 9.125 158.167 8.94238 158.167 8.6543 cv
158.167 5.37744 li
158.167 5.05957 158.133 4.8623 158.066 4.78516 cv
157.969 4.67578 157.824 4.62109 157.632 4.62109 cv
157.441 4.62109 li
157.441 4.48389 li
159.297 4.48389 li
159.75 4.48389 160.107 4.53027 160.369 4.62354 cv
160.63 4.71729 160.851 4.87451 161.03 5.09619 cv
161.209 5.31738 161.298 5.58008 161.298 5.8833 cv
161.298 6.29639 161.162 6.63232 160.89 6.89111 cv
160.618 7.1499 160.233 7.2793 159.735 7.2793 cv
159.613 7.2793 159.481 7.271 159.34 7.25342 cv
159.198 7.23584 159.046 7.20947 158.885 7.17432 cv
cp
158.885 6.96045 mo
159.016 6.98535 159.133 7.00391 159.234 7.0166 cv
159.336 7.02881 159.423 7.03516 159.495 7.03516 cv
159.752 7.03516 159.975 6.93506 160.162 6.73535 cv
160.35 6.53516 160.443 6.27637 160.443 5.9585 cv
160.443 5.74023 160.398 5.53711 160.309 5.34961 cv
160.22 5.1626 160.093 5.02197 159.93 4.9292 cv
159.766 4.83594 159.58 4.78955 159.372 4.78955 cv
159.246 4.78955 159.083 4.81299 158.885 4.85986 cv
158.885 6.96045 li
cp
f
164.736 6.12598 mo
164.736 8.20361 li
164.736 8.59326 164.745 8.83203 164.764 8.91895 cv
164.782 9.00586 164.812 9.06689 164.853 9.10107 cv
164.894 9.13574 164.941 9.15332 164.996 9.15332 cv
165.073 9.15332 165.16 9.13184 165.257 9.08984 cv
165.309 9.22705 li
164.285 9.64746 li
164.117 9.64746 li
164.117 8.93115 li
163.824 9.24609 163.6 9.44434 163.446 9.52539 cv
163.292 9.60693 163.129 9.64746 162.958 9.64746 cv
162.766 9.64746 162.601 9.59229 162.46 9.48145 cv
162.319 9.37061 162.222 9.22852 162.167 9.0542 cv
162.113 8.88037 162.085 8.63428 162.085 8.31592 cv
162.085 6.79053 li
162.085 6.62842 162.068 6.5166 162.033 6.4541 cv
161.998 6.39209 161.946 6.34375 161.877 6.31055 cv
161.809 6.27686 161.685 6.26123 161.505 6.26367 cv
161.505 6.12598 li
162.704 6.12598 li
162.704 8.41895 li
162.704 8.73779 162.759 8.94727 162.87 9.04736 cv
162.98 9.14697 163.114 9.19678 163.271 9.19678 cv
163.377 9.19678 163.499 9.16309 163.634 9.0957 cv
163.77 9.02832 163.931 8.8999 164.117 8.71045 cv
164.117 6.77539 li
164.117 6.57813 164.082 6.44482 164.01 6.37549 cv
163.939 6.30615 163.792 6.26855 163.567 6.26367 cv
163.567 6.12598 li
164.736 6.12598 li
cp
f
166.485 6.74316 mo
166.884 6.26563 167.265 6.02686 167.627 6.02686 cv
167.813 6.02686 167.973 6.07373 168.107 6.16699 cv
168.241 6.26025 168.348 6.41406 168.427 6.62842 cv
168.482 6.77783 168.509 7.00684 168.509 7.31592 cv
168.509 8.77686 li
168.509 8.9917 168.526 9.1377 168.561 9.21436 cv
168.588 9.27588 168.632 9.32422 168.693 9.35889 cv
168.753 9.39307 168.865 9.41064 169.029 9.41064 cv
169.029 9.54834 li
167.34 9.54834 li
167.34 9.41064 li
167.411 9.41064 li
167.57 9.41064 167.681 9.38623 167.744 9.33838 cv
167.807 9.29004 167.851 9.21924 167.875 9.125 cv
167.886 9.08789 167.891 8.97168 167.891 8.77686 cv
167.891 7.37012 li
167.891 7.05762 167.85 6.83057 167.77 6.68945 cv
167.689 6.54834 167.554 6.47754 167.364 6.47754 cv
167.07 6.47754 166.777 6.63965 166.485 6.96436 cv
166.485 8.77686 li
166.485 9.00635 166.499 9.14844 166.526 9.20313 cv
166.561 9.2749 166.609 9.32715 166.67 9.36084 cv
166.731 9.39404 166.855 9.41064 167.042 9.41064 cv
167.042 9.54834 li
165.347 9.54834 li
165.347 9.41064 li
165.421 9.41064 li
165.596 9.41064 165.714 9.3667 165.775 9.27881 cv
165.836 9.19141 165.866 9.02393 165.866 8.77686 cv
165.866 7.50879 li
165.866 7.09863 165.857 6.84912 165.838 6.75977 cv
165.82 6.66992 165.791 6.60938 165.753 6.57666 cv
165.714 6.54443 165.663 6.52832 165.599 6.52832 cv
165.529 6.52832 165.446 6.54688 165.349 6.58447 cv
165.293 6.44678 li
166.324 6.02686 li
166.485 6.02686 li
166.485 6.74316 li
cp
f
172.145 8.24805 mo
172.053 8.69971 171.873 9.0459 171.604 9.28662 cv
171.336 9.52686 171.039 9.64746 170.713 9.64746 cv
170.325 9.64746 169.986 9.48486 169.698 9.15918 cv
169.41 8.8335 169.266 8.39355 169.266 7.83887 cv
169.266 7.30225 169.425 6.86572 169.744 6.53027 cv
170.063 6.19482 170.447 6.02686 170.894 6.02686 cv
171.229 6.02686 171.505 6.11572 171.722 6.29346 cv
171.938 6.47168 172.046 6.65625 172.046 6.84766 cv
172.046 6.94238 172.016 7.01904 171.955 7.07715 cv
171.894 7.13574 171.809 7.16504 171.699 7.16504 cv
171.553 7.16504 171.443 7.11719 171.371 7.02197 cv
171.327 6.96973 171.297 6.86963 171.284 6.72168 cv
171.27 6.57422 171.22 6.46143 171.132 6.38379 cv
171.045 6.30859 170.925 6.271 170.771 6.271 cv
170.522 6.271 170.322 6.36328 170.171 6.54785 cv
169.97 6.79199 169.869 7.11475 169.869 7.51563 cv
169.869 7.92432 169.969 8.28516 170.169 8.59766 cv
170.37 8.91064 170.641 9.06689 170.981 9.06689 cv
171.226 9.06689 171.444 8.98486 171.639 8.82129 cv
171.775 8.70752 171.909 8.49902 172.038 8.19629 cv
172.145 8.24805 li
cp
f
173.566 5.00342 mo
173.566 6.12598 li
174.364 6.12598 li
174.364 6.37793 li
173.566 6.38574 li
173.566 8.60254 li
173.566 8.82422 173.598 8.97314 173.661 9.05029 cv
173.724 9.12744 173.806 9.16602 173.905 9.16602 cv
173.987 9.16602 174.066 9.14014 174.143 9.08887 cv
174.22 9.03711 174.28 8.96143 174.322 8.86084 cv
174.467 8.86084 li
174.38 9.10645 174.257 9.2915 174.098 9.41553 cv
173.938 9.53955 173.774 9.60156 173.604 9.60156 cv
173.49 9.60156 173.378 9.56982 173.269 9.50635 cv
173.159 9.44238 173.078 9.35107 173.025 9.23291 cv
172.973 9.11426 172.947 8.93115 172.947 8.68457 cv
172.947 6.37793 li
172.405 6.37793 li
172.405 6.25928 li
172.542 6.20508 172.683 6.11328 172.826 5.98389 cv
172.969 5.85498 173.098 5.70068 173.21 5.52197 cv
173.268 5.42725 173.349 5.25439 173.451 5.00342 cv
173.566 5.00342 li
cp
f
177.629 6.12598 mo
177.629 8.20361 li
177.629 8.59326 177.639 8.83203 177.657 8.91895 cv
177.676 9.00586 177.706 9.06689 177.747 9.10107 cv
177.788 9.13574 177.835 9.15332 177.89 9.15332 cv
177.967 9.15332 178.054 9.13184 178.15 9.08984 cv
178.203 9.22705 li
177.179 9.64746 li
177.011 9.64746 li
177.011 8.93115 li
176.718 9.24609 176.494 9.44434 176.34 9.52539 cv
176.186 9.60693 176.023 9.64746 175.852 9.64746 cv
175.66 9.64746 175.494 9.59229 175.354 9.48145 cv
175.213 9.37061 175.116 9.22852 175.061 9.0542 cv
175.006 8.88037 174.979 8.63428 174.979 8.31592 cv
174.979 6.79053 li
174.979 6.62842 174.961 6.5166 174.926 6.4541 cv
174.892 6.39209 174.84 6.34375 174.771 6.31055 cv
174.702 6.27686 174.578 6.26123 174.398 6.26367 cv
174.398 6.12598 li
175.598 6.12598 li
175.598 8.41895 li
175.598 8.73779 175.653 8.94727 175.764 9.04736 cv
175.874 9.14697 176.008 9.19678 176.165 9.19678 cv
176.271 9.19678 176.393 9.16309 176.528 9.0957 cv
176.664 9.02832 176.824 8.8999 177.011 8.71045 cv
177.011 6.77539 li
177.011 6.57813 176.975 6.44482 176.904 6.37549 cv
176.833 6.30615 176.686 6.26855 176.461 6.26367 cv
176.461 6.12598 li
177.629 6.12598 li
cp
f
180.311 9.05127 mo
179.96 9.32324 179.74 9.48047 179.65 9.52295 cv
179.516 9.58545 179.374 9.6167 179.222 9.6167 cv
178.985 9.6167 178.791 9.53613 178.638 9.37402 cv
178.485 9.2124 178.409 8.99951 178.409 8.73584 cv
178.409 8.56885 178.446 8.42432 178.521 8.30273 cv
178.623 8.1333 178.8 7.97412 179.052 7.82471 cv
179.304 7.67529 179.724 7.49365 180.311 7.2793 cv
180.311 7.14551 li
180.311 6.80566 180.257 6.57227 180.149 6.4458 cv
180.041 6.31934 179.884 6.25586 179.678 6.25586 cv
179.522 6.25586 179.398 6.29834 179.307 6.38281 cv
179.212 6.46729 179.165 6.56445 179.165 6.67383 cv
179.172 6.89063 li
179.172 7.00488 179.143 7.09326 179.084 7.15576 cv
179.025 7.21777 178.949 7.24902 178.854 7.24902 cv
178.761 7.24902 178.686 7.21631 178.626 7.15186 cv
178.568 7.08691 178.539 6.99854 178.539 6.88623 cv
178.539 6.67188 178.648 6.4751 178.867 6.2959 cv
179.086 6.1167 179.394 6.02686 179.79 6.02686 cv
180.094 6.02686 180.343 6.07764 180.537 6.17969 cv
180.684 6.25684 180.792 6.37744 180.862 6.54199 cv
180.907 6.64893 180.929 6.86768 180.929 7.19873 cv
180.929 8.35938 li
180.929 8.68555 180.936 8.88525 180.948 8.9585 cv
180.96 9.03174 180.981 9.08105 181.01 9.10596 cv
181.039 9.13086 181.072 9.14307 181.109 9.14307 cv
181.149 9.14307 181.184 9.13477 181.214 9.11719 cv
181.267 9.08496 181.368 8.99414 181.518 8.84521 cv
181.518 9.05371 li
181.238 9.4292 180.97 9.6167 180.715 9.6167 cv
180.593 9.6167 180.496 9.57422 180.423 9.48877 cv
180.351 9.40332 180.313 9.25732 180.311 9.05127 cv
cp
180.311 8.80908 mo
180.311 7.50879 li
179.933 7.65771 179.689 7.76318 179.579 7.8252 cv
179.381 7.93457 179.24 8.04883 179.155 8.16797 cv
179.07 8.2876 179.027 8.41748 179.027 8.55908 cv
179.027 8.73828 179.081 8.88623 179.189 9.00439 cv
179.296 9.12256 179.42 9.18164 179.56 9.18164 cv
179.75 9.18164 180 9.05713 180.311 8.80908 cv
cp
f
182.709 5.00342 mo
182.709 6.12598 li
183.507 6.12598 li
183.507 6.37793 li
182.709 6.38574 li
182.709 8.60254 li
182.709 8.82422 182.741 8.97314 182.804 9.05029 cv
182.868 9.12744 182.949 9.16602 183.048 9.16602 cv
183.13 9.16602 183.209 9.14014 183.287 9.08887 cv
183.363 9.03711 183.423 8.96143 183.465 8.86084 cv
183.61 8.86084 li
183.523 9.10645 183.4 9.2915 183.241 9.41553 cv
183.082 9.53955 182.917 9.60156 182.748 9.60156 cv
182.633 9.60156 182.521 9.56982 182.412 9.50635 cv
182.302 9.44238 182.221 9.35107 182.169 9.23291 cv
182.117 9.11426 182.09 8.93115 182.09 8.68457 cv
182.09 6.37793 li
181.548 6.37793 li
181.548 6.25928 li
181.686 6.20508 181.826 6.11328 181.969 5.98389 cv
182.113 5.85498 182.241 5.70068 182.354 5.52197 cv
182.412 5.42725 182.492 5.25439 182.595 5.00342 cv
182.709 5.00342 li
cp
f
184.647 4.23926 mo
184.752 4.23926 184.84 4.27588 184.914 4.34912 cv
184.987 4.42236 185.023 4.51123 185.023 4.61572 cv
185.023 4.71973 184.987 4.80908 184.914 4.88379 cv
184.84 4.9585 184.752 4.99561 184.647 4.99561 cv
184.543 4.99561 184.454 4.9585 184.379 4.88379 cv
184.305 4.80908 184.268 4.71973 184.268 4.61572 cv
184.268 4.51123 184.304 4.42236 184.377 4.34912 cv
184.451 4.27588 184.541 4.23926 184.647 4.23926 cv
cp
184.955 6.02686 mo
184.955 8.77686 li
184.955 8.98926 184.97 9.13086 185.001 9.20117 cv
185.033 9.27148 185.079 9.32422 185.14 9.35889 cv
185.201 9.39307 185.313 9.41064 185.474 9.41064 cv
185.474 9.54834 li
183.817 9.54834 li
183.817 9.41064 li
183.982 9.41064 184.094 9.39453 184.151 9.3623 cv
184.208 9.33008 184.253 9.27686 184.286 9.20313 cv
184.319 9.12891 184.336 8.98682 184.336 8.77686 cv
184.336 7.45508 li
184.336 7.08691 184.325 6.84863 184.303 6.73975 cv
184.285 6.66113 184.258 6.60596 184.221 6.57471 cv
184.184 6.54395 184.133 6.52832 184.068 6.52832 cv
183.999 6.52832 183.915 6.54688 183.815 6.58447 cv
183.763 6.44678 li
184.791 6.02686 li
184.955 6.02686 li
cp
f
187.518 6.02686 mo
188.035 6.02686 188.451 6.22314 188.764 6.61572 cv
189.03 6.95166 189.164 7.33691 189.164 7.77197 cv
189.164 8.07764 189.09 8.38721 188.943 8.7002 cv
188.796 9.01367 188.594 9.24951 188.337 9.40869 cv
188.079 9.56787 187.792 9.64746 187.477 9.64746 cv
186.961 9.64746 186.552 9.44238 186.248 9.03223 cv
185.992 8.68652 185.864 8.29883 185.864 7.86865 cv
185.864 7.55566 185.941 7.24414 186.097 6.93506 cv
186.253 6.62549 186.458 6.39648 186.711 6.24854 cv
186.965 6.10059 187.234 6.02686 187.518 6.02686 cv
cp
187.402 6.271 mo
187.27 6.271 187.138 6.31006 187.004 6.38867 cv
186.872 6.4668 186.764 6.604 186.682 6.7998 cv
186.6 6.99609 186.559 7.24805 186.559 7.55566 cv
186.559 8.05225 186.658 8.48047 186.855 8.84033 cv
187.053 9.2002 187.313 9.37988 187.637 9.37988 cv
187.878 9.37988 188.077 9.28076 188.233 9.08252 cv
188.39 8.88379 188.469 8.54248 188.469 8.05811 cv
188.469 7.45264 188.338 6.97607 188.077 6.62842 cv
187.9 6.39014 187.675 6.271 187.402 6.271 cv
cp
f
190.584 6.74316 mo
190.984 6.26563 191.364 6.02686 191.727 6.02686 cv
191.913 6.02686 192.073 6.07373 192.207 6.16699 cv
192.341 6.26025 192.447 6.41406 192.527 6.62842 cv
192.582 6.77783 192.608 7.00684 192.608 7.31592 cv
192.608 8.77686 li
192.608 8.9917 192.626 9.1377 192.661 9.21436 cv
192.688 9.27588 192.731 9.32422 192.792 9.35889 cv
192.853 9.39307 192.965 9.41064 193.128 9.41064 cv
193.128 9.54834 li
191.44 9.54834 li
191.44 9.41064 li
191.511 9.41064 li
191.669 9.41064 191.78 9.38623 191.843 9.33838 cv
191.906 9.29004 191.95 9.21924 191.975 9.125 cv
191.985 9.08789 191.99 8.97168 191.99 8.77686 cv
191.99 7.37012 li
191.99 7.05762 191.95 6.83057 191.869 6.68945 cv
191.789 6.54834 191.654 6.47754 191.463 6.47754 cv
191.169 6.47754 190.876 6.63965 190.584 6.96436 cv
190.584 8.77686 li
190.584 9.00635 190.598 9.14844 190.625 9.20313 cv
190.661 9.2749 190.708 9.32715 190.77 9.36084 cv
190.831 9.39404 190.955 9.41064 191.142 9.41064 cv
191.142 9.54834 li
189.446 9.54834 li
189.446 9.41064 li
189.521 9.41064 li
189.695 9.41064 189.813 9.3667 189.874 9.27881 cv
189.935 9.19141 189.966 9.02393 189.966 8.77686 cv
189.966 7.50879 li
189.966 7.09863 189.957 6.84912 189.938 6.75977 cv
189.919 6.66992 189.891 6.60938 189.852 6.57666 cv
189.814 6.54443 189.762 6.52832 189.698 6.52832 cv
189.628 6.52832 189.545 6.54688 189.449 6.58447 cv
189.393 6.44678 li
190.424 6.02686 li
190.584 6.02686 li
190.584 6.74316 li
cp
f
163.33 17.7964 mo
163.238 18.248 163.058 18.5942 162.79 18.8345 cv
162.521 19.0752 162.224 19.1953 161.898 19.1953 cv
161.51 19.1953 161.172 19.0327 160.883 18.707 cv
160.595 18.3813 160.451 17.9414 160.451 17.3872 cv
160.451 16.8501 160.61 16.4136 160.93 16.0781 cv
161.249 15.7427 161.632 15.5747 162.08 15.5747 cv
162.415 15.5747 162.69 15.6636 162.907 15.8418 cv
163.123 16.0195 163.231 16.2041 163.231 16.396 cv
163.231 16.4902 163.201 16.5669 163.14 16.6255 cv
163.079 16.6836 162.994 16.7129 162.884 16.7129 cv
162.738 16.7129 162.628 16.6655 162.557 16.5703 cv
162.512 16.5176 162.482 16.4175 162.469 16.27 cv
162.455 16.1221 162.405 16.0093 162.318 15.9321 cv
162.231 15.8569 162.11 15.8193 161.956 15.8193 cv
161.708 15.8193 161.508 15.9116 161.356 16.0957 cv
161.155 16.3398 161.054 16.6626 161.054 17.064 cv
161.054 17.4727 161.154 17.8335 161.354 18.146 cv
161.555 18.4585 161.826 18.6147 162.167 18.6147 cv
162.411 18.6147 162.63 18.5332 162.824 18.3696 cv
162.961 18.2554 163.094 18.0469 163.224 17.7441 cv
163.33 17.7964 li
cp
f
164.721 13.7876 mo
164.721 16.2871 li
164.997 15.9839 165.216 15.7896 165.378 15.7036 cv
165.54 15.6177 165.702 15.5747 165.863 15.5747 cv
166.058 15.5747 166.224 15.6284 166.364 15.7354 cv
166.503 15.8428 166.606 16.0107 166.674 16.2397 cv
166.721 16.3994 166.745 16.6909 166.745 17.1143 cv
166.745 18.3247 li
166.745 18.5396 166.762 18.687 166.797 18.7661 cv
166.821 18.8252 166.863 18.8721 166.922 18.9067 cv
166.982 18.9414 167.091 18.9585 167.249 18.9585 cv
167.249 19.0962 li
165.576 19.0962 li
165.576 18.9585 li
165.654 18.9585 li
165.813 18.9585 165.923 18.9346 165.985 18.8862 cv
166.047 18.8384 166.09 18.7671 166.115 18.6733 cv
166.122 18.6338 166.126 18.5176 166.126 18.3247 cv
166.126 17.1133 li
166.126 16.7397 166.106 16.4941 166.068 16.377 cv
166.029 16.2598 165.968 16.1719 165.883 16.1133 cv
165.798 16.0547 165.696 16.0254 165.577 16.0254 cv
165.454 16.0254 165.327 16.0581 165.195 16.1226 cv
165.063 16.1875 164.905 16.3179 164.721 16.5151 cv
164.721 18.3247 li
164.721 18.5571 164.733 18.7017 164.76 18.7583 cv
164.786 18.8154 164.834 18.8628 164.904 18.9014 cv
164.975 18.9395 165.097 18.9585 165.271 18.9585 cv
165.271 19.0962 li
163.583 19.0962 li
163.583 18.9585 li
163.733 18.9585 163.852 18.9351 163.938 18.8882 cv
163.988 18.8638 164.027 18.8164 164.057 18.7476 cv
164.087 18.6782 164.102 18.5376 164.102 18.3247 cv
164.102 15.231 li
164.102 14.8433 164.092 14.6045 164.074 14.5156 cv
164.055 14.4268 164.027 14.3662 163.988 14.334 cv
163.95 14.3018 163.898 14.2856 163.834 14.2856 cv
163.782 14.2856 163.697 14.3052 163.581 14.3452 cv
163.529 14.2075 li
164.549 13.7876 li
164.721 13.7876 li
cp
f
169.365 18.5991 mo
169.014 18.8716 168.794 19.0288 168.705 19.0713 cv
168.57 19.1338 168.427 19.165 168.276 19.165 cv
168.04 19.165 167.845 19.084 167.692 18.9224 cv
167.539 18.7603 167.463 18.5474 167.463 18.2837 cv
167.463 18.1172 167.5 17.9727 167.575 17.8506 cv
167.677 17.6812 167.854 17.522 168.106 17.3726 cv
168.358 17.2231 168.778 17.0415 169.365 16.8276 cv
169.365 16.6934 li
169.365 16.3535 169.311 16.1206 169.203 15.9937 cv
169.095 15.8672 168.938 15.8042 168.732 15.8042 cv
168.576 15.8042 168.452 15.8462 168.36 15.9312 cv
168.266 16.0156 168.219 16.1128 168.219 16.2222 cv
168.227 16.4385 li
168.227 16.5532 168.197 16.6416 168.138 16.7036 cv
168.08 16.7661 168.003 16.7969 167.908 16.7969 cv
167.815 16.7969 167.739 16.7646 167.681 16.6997 cv
167.622 16.6353 167.593 16.5464 167.593 16.4346 cv
167.593 16.2202 167.702 16.0234 167.921 15.8442 cv
168.141 15.6646 168.448 15.5747 168.844 15.5747 cv
169.148 15.5747 169.397 15.626 169.591 15.728 cv
169.738 15.8052 169.847 15.9258 169.916 16.0898 cv
169.961 16.1968 169.983 16.416 169.983 16.7466 cv
169.983 17.9077 li
169.983 18.2334 169.99 18.4331 170.002 18.5068 cv
170.015 18.5801 170.035 18.6294 170.064 18.6543 cv
170.093 18.6792 170.126 18.6914 170.163 18.6914 cv
170.203 18.6914 170.238 18.6826 170.268 18.6655 cv
170.321 18.6333 170.422 18.5425 170.572 18.3936 cv
170.572 18.6021 li
170.292 18.9771 170.024 19.165 169.77 19.165 cv
169.647 19.165 169.55 19.1221 169.477 19.0366 cv
169.405 18.9512 169.367 18.8052 169.365 18.5991 cv
cp
169.365 18.3569 mo
169.365 17.0566 li
168.987 17.2056 168.743 17.3115 168.633 17.3735 cv
168.436 17.4829 168.294 17.5972 168.209 17.7163 cv
168.124 17.8354 168.082 17.9658 168.082 18.1074 cv
168.082 18.2861 168.135 18.4346 168.243 18.5527 cv
168.351 18.6704 168.474 18.7295 168.614 18.7295 cv
168.804 18.7295 169.055 18.6055 169.365 18.3569 cv
cp
f
171.732 15.5747 mo
171.732 16.3462 li
172.017 15.832 172.308 15.5747 172.606 15.5747 cv
172.743 15.5747 172.855 15.6167 172.944 15.7002 cv
173.033 15.7837 173.077 15.8804 173.077 15.9907 cv
173.077 16.0879 173.045 16.1704 172.981 16.2378 cv
172.917 16.3052 172.841 16.3389 172.752 16.3389 cv
172.666 16.3389 172.569 16.2954 172.461 16.209 cv
172.354 16.1226 172.274 16.0791 172.222 16.0791 cv
172.178 16.0791 172.13 16.104 172.078 16.1538 cv
171.966 16.2563 171.852 16.4248 171.732 16.6597 cv
171.732 18.2944 li
171.732 18.4844 171.756 18.6284 171.803 18.7261 cv
171.835 18.7935 171.893 18.8496 171.975 18.8931 cv
172.057 18.937 172.175 18.9585 172.329 18.9585 cv
172.329 19.0962 li
170.579 19.0962 li
170.579 18.9585 li
170.752 18.9585 170.881 18.9312 170.965 18.8765 cv
171.027 18.8369 171.07 18.7734 171.095 18.6865 cv
171.108 18.644 171.114 18.5234 171.114 18.3247 cv
171.114 17.0034 li
171.114 16.6064 171.106 16.3701 171.09 16.2944 cv
171.074 16.2188 171.044 16.1636 171 16.1284 cv
170.957 16.0938 170.903 16.0767 170.839 16.0767 cv
170.762 16.0767 170.675 16.0952 170.578 16.1323 cv
170.541 15.9951 li
171.576 15.5747 li
171.732 15.5747 li
cp
f
175.101 18.5991 mo
174.75 18.8716 174.531 19.0288 174.441 19.0713 cv
174.307 19.1338 174.164 19.165 174.012 19.165 cv
173.776 19.165 173.582 19.084 173.429 18.9224 cv
173.276 18.7603 173.199 18.5474 173.199 18.2837 cv
173.199 18.1172 173.236 17.9727 173.311 17.8506 cv
173.413 17.6812 173.59 17.522 173.843 17.3726 cv
174.095 17.2231 174.515 17.0415 175.101 16.8276 cv
175.101 16.6934 li
175.101 16.3535 175.047 16.1206 174.939 15.9937 cv
174.832 15.8672 174.675 15.8042 174.469 15.8042 cv
174.313 15.8042 174.188 15.8462 174.097 15.9312 cv
174.003 16.0156 173.956 16.1128 173.956 16.2222 cv
173.963 16.4385 li
173.963 16.5532 173.934 16.6416 173.875 16.7036 cv
173.816 16.7661 173.739 16.7969 173.644 16.7969 cv
173.552 16.7969 173.476 16.7646 173.417 16.6997 cv
173.358 16.6353 173.329 16.5464 173.329 16.4346 cv
173.329 16.2202 173.438 16.0234 173.658 15.8442 cv
173.877 15.6646 174.185 15.5747 174.581 15.5747 cv
174.884 15.5747 175.133 15.626 175.328 15.728 cv
175.475 15.8052 175.583 15.9258 175.653 16.0898 cv
175.698 16.1968 175.72 16.416 175.72 16.7466 cv
175.72 17.9077 li
175.72 18.2334 175.726 18.4331 175.739 18.5068 cv
175.751 18.5801 175.772 18.6294 175.8 18.6543 cv
175.829 18.6792 175.862 18.6914 175.9 18.6914 cv
175.94 18.6914 175.975 18.6826 176.005 18.6655 cv
176.057 18.6333 176.158 18.5425 176.308 18.3936 cv
176.308 18.6021 li
176.028 18.9771 175.761 19.165 175.506 19.165 cv
175.384 19.165 175.286 19.1221 175.214 19.0366 cv
175.141 18.9512 175.104 18.8052 175.101 18.5991 cv
cp
175.101 18.3569 mo
175.101 17.0566 li
174.724 17.2056 174.479 17.3115 174.37 17.3735 cv
174.172 17.4829 174.031 17.5972 173.945 17.7163 cv
173.86 17.8354 173.818 17.9658 173.818 18.1074 cv
173.818 18.2861 173.872 18.4346 173.979 18.5527 cv
174.087 18.6704 174.211 18.7295 174.351 18.7295 cv
174.541 18.7295 174.791 18.6055 175.101 18.3569 cv
cp
f
179.371 17.7964 mo
179.279 18.248 179.099 18.5942 178.83 18.8345 cv
178.562 19.0752 178.265 19.1953 177.939 19.1953 cv
177.551 19.1953 177.212 19.0327 176.924 18.707 cv
176.636 18.3813 176.491 17.9414 176.491 17.3872 cv
176.491 16.8501 176.651 16.4136 176.97 16.0781 cv
177.29 15.7427 177.673 15.5747 178.12 15.5747 cv
178.456 15.5747 178.731 15.6636 178.948 15.8418 cv
179.164 16.0195 179.272 16.2041 179.272 16.396 cv
179.272 16.4902 179.241 16.5669 179.181 16.6255 cv
179.12 16.6836 179.035 16.7129 178.925 16.7129 cv
178.778 16.7129 178.669 16.6655 178.597 16.5703 cv
178.552 16.5176 178.523 16.4175 178.51 16.27 cv
178.496 16.1221 178.445 16.0093 178.358 15.9321 cv
178.271 15.8569 178.151 15.8193 177.997 15.8193 cv
177.749 15.8193 177.548 15.9116 177.397 16.0957 cv
177.195 16.3398 177.095 16.6626 177.095 17.064 cv
177.095 17.4727 177.195 17.8335 177.396 18.146 cv
177.596 18.4585 177.867 18.6147 178.208 18.6147 cv
178.452 18.6147 178.67 18.5332 178.865 18.3696 cv
179.001 18.2554 179.135 18.0469 179.264 17.7441 cv
179.371 17.7964 li
cp
f
180.754 14.5513 mo
180.754 15.6743 li
181.552 15.6743 li
181.552 15.9263 li
180.754 15.9341 li
180.754 18.1509 li
180.754 18.3721 180.785 18.5215 180.849 18.5986 cv
180.912 18.6758 180.993 18.7144 181.093 18.7144 cv
181.175 18.7144 181.254 18.6885 181.331 18.6372 cv
181.408 18.5854 181.468 18.5093 181.51 18.4087 cv
181.655 18.4087 li
181.568 18.6543 181.445 18.8394 181.285 18.9634 cv
181.126 19.0874 180.961 19.1499 180.792 19.1499 cv
180.678 19.1499 180.566 19.1177 180.456 19.0542 cv
180.347 18.9907 180.266 18.8994 180.213 18.7808 cv
180.161 18.6626 180.135 18.4795 180.135 18.2324 cv
180.135 15.9263 li
179.593 15.9263 li
179.593 15.8071 li
179.73 15.7534 179.87 15.6616 180.014 15.5322 cv
180.157 15.4028 180.286 15.249 180.398 15.0698 cv
180.456 14.9751 180.536 14.8022 180.639 14.5513 cv
180.754 14.5513 li
cp
f
182.35 16.9653 mo
182.348 17.4702 182.471 17.8662 182.719 18.1538 cv
182.968 18.4409 183.26 18.5845 183.596 18.5845 cv
183.82 18.5845 184.015 18.5234 184.18 18.4019 cv
184.345 18.2798 184.484 18.0684 184.596 17.7671 cv
184.71 17.8418 li
184.658 18.186 184.507 18.4976 184.256 18.7769 cv
184.005 19.0562 183.691 19.1953 183.313 19.1953 cv
182.903 19.1953 182.553 19.0361 182.261 18.7168 cv
181.969 18.3979 181.823 17.9688 181.823 17.4302 cv
181.823 16.8462 181.973 16.3911 182.272 16.0649 cv
182.571 15.7383 182.947 15.5747 183.399 15.5747 cv
183.781 15.5747 184.096 15.7012 184.341 15.9531 cv
184.587 16.2056 184.71 16.5425 184.71 16.9653 cv
182.35 16.9653 li
cp
182.35 16.7515 mo
183.931 16.7515 li
183.919 16.5327 183.893 16.3784 183.853 16.2896 cv
183.791 16.1504 183.698 16.041 183.575 15.9614 cv
183.452 15.8818 183.323 15.8423 183.189 15.8423 cv
182.983 15.8423 182.798 15.9224 182.635 16.0825 cv
182.473 16.2427 182.377 16.4653 182.35 16.7515 cv
cp
f
186.078 15.5747 mo
186.078 16.3462 li
186.362 15.832 186.653 15.5747 186.952 15.5747 cv
187.087 15.5747 187.2 15.6167 187.289 15.7002 cv
187.377 15.7837 187.422 15.8804 187.422 15.9907 cv
187.422 16.0879 187.39 16.1704 187.326 16.2378 cv
187.262 16.3052 187.186 16.3389 187.097 16.3389 cv
187.011 16.3389 186.915 16.2954 186.807 16.209 cv
186.699 16.1226 186.619 16.0791 186.567 16.0791 cv
186.523 16.0791 186.475 16.104 186.423 16.1538 cv
186.312 16.2563 186.196 16.4248 186.078 16.6597 cv
186.078 18.2944 li
186.078 18.4844 186.101 18.6284 186.148 18.7261 cv
186.181 18.7935 186.238 18.8496 186.32 18.8931 cv
186.402 18.937 186.52 18.9585 186.673 18.9585 cv
186.673 19.0962 li
184.924 19.0962 li
184.924 18.9585 li
185.098 18.9585 185.227 18.9312 185.311 18.8765 cv
185.373 18.8369 185.416 18.7734 185.44 18.6865 cv
185.453 18.644 185.459 18.5234 185.459 18.3247 cv
185.459 17.0034 li
185.459 16.6064 185.451 16.3701 185.435 16.2944 cv
185.419 16.2188 185.389 16.1636 185.346 16.1284 cv
185.302 16.0938 185.248 16.0767 185.184 16.0767 cv
185.107 16.0767 185.02 16.0952 184.923 16.1323 cv
184.886 15.9951 li
185.921 15.5747 li
186.078 15.5747 li
cp
f
189.721 15.5747 mo
189.721 16.7358 li
189.599 16.7358 li
189.505 16.3721 189.384 16.1245 189.237 15.9932 cv
189.089 15.8618 188.902 15.7964 188.674 15.7964 cv
188.5 15.7964 188.36 15.8423 188.254 15.9341 cv
188.147 16.0259 188.094 16.1279 188.094 16.2397 cv
188.094 16.3789 188.133 16.498 188.212 16.5972 cv
188.288 16.6992 188.444 16.8071 188.68 16.9214 cv
189.224 17.186 li
189.729 17.4321 189.981 17.7563 189.981 18.1587 cv
189.981 18.4697 189.863 18.7202 189.629 18.9102 cv
189.394 19.1006 189.131 19.1953 188.84 19.1953 cv
188.631 19.1953 188.393 19.1592 188.124 19.0864 cv
188.042 19.0625 187.975 19.0503 187.923 19.0503 cv
187.866 19.0503 187.821 19.0811 187.789 19.1421 cv
187.667 19.1421 li
187.667 17.9199 li
187.789 17.9199 li
187.858 18.269 187.992 18.5317 188.188 18.7085 cv
188.385 18.8857 188.605 18.9741 188.849 18.9741 cv
189.021 18.9741 189.16 18.9238 189.269 18.8232 cv
189.377 18.7227 189.431 18.6016 189.431 18.4604 cv
189.431 18.2891 189.37 18.145 189.249 18.0283 cv
189.128 17.9116 188.887 17.7646 188.526 17.5864 cv
188.166 17.4087 187.929 17.2476 187.818 17.103 cv
187.707 16.9609 187.651 16.7817 187.651 16.5649 cv
187.651 16.2837 187.748 16.0483 187.94 15.8589 cv
188.132 15.6694 188.381 15.5747 188.687 15.5747 cv
188.821 15.5747 188.983 15.604 189.174 15.6626 cv
189.301 15.7007 189.386 15.7202 189.428 15.7202 cv
189.467 15.7202 189.499 15.7109 189.521 15.6934 cv
189.543 15.6753 189.569 15.6362 189.599 15.5747 cv
189.721 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
152.226 .63623 mo
198.057 .63623 li
198.057 23.5518 li
152.226 23.5518 li
152.226 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
250.547 7.17432 mo
250.547 8.6543 li
250.547 8.97217 250.581 9.16992 250.65 9.24658 cv
250.745 9.35596 250.888 9.41064 251.079 9.41064 cv
251.272 9.41064 li
251.272 9.54834 li
249.103 9.54834 li
249.103 9.41064 li
249.294 9.41064 li
249.508 9.41064 249.661 9.34131 249.754 9.20215 cv
249.804 9.125 249.828 8.94238 249.828 8.6543 cv
249.828 5.37744 li
249.828 5.05957 249.795 4.8623 249.728 4.78516 cv
249.63 4.67578 249.485 4.62109 249.294 4.62109 cv
249.103 4.62109 li
249.103 4.48389 li
250.959 4.48389 li
251.412 4.48389 251.769 4.53027 252.03 4.62354 cv
252.292 4.71729 252.512 4.87451 252.691 5.09619 cv
252.87 5.31738 252.96 5.58008 252.96 5.8833 cv
252.96 6.29639 252.824 6.63232 252.552 6.89111 cv
252.279 7.1499 251.895 7.2793 251.397 7.2793 cv
251.275 7.2793 251.144 7.271 251.002 7.25342 cv
250.86 7.23584 250.708 7.20947 250.547 7.17432 cv
cp
250.547 6.96045 mo
250.678 6.98535 250.794 7.00391 250.896 7.0166 cv
250.998 7.02881 251.085 7.03516 251.156 7.03516 cv
251.414 7.03516 251.637 6.93506 251.824 6.73535 cv
252.011 6.53516 252.104 6.27637 252.104 5.9585 cv
252.104 5.74023 252.061 5.53711 251.971 5.34961 cv
251.882 5.1626 251.755 5.02197 251.592 4.9292 cv
251.428 4.83594 251.242 4.78955 251.034 4.78955 cv
250.907 4.78955 250.745 4.81299 250.547 4.85986 cv
250.547 6.96045 li
cp
f
256.397 6.12598 mo
256.397 8.20361 li
256.397 8.59326 256.407 8.83203 256.426 8.91895 cv
256.444 9.00586 256.474 9.06689 256.515 9.10107 cv
256.556 9.13574 256.604 9.15332 256.658 9.15332 cv
256.735 9.15332 256.821 9.13184 256.918 9.08984 cv
256.971 9.22705 li
255.947 9.64746 li
255.779 9.64746 li
255.779 8.93115 li
255.485 9.24609 255.262 9.44434 255.107 9.52539 cv
254.954 9.60693 254.791 9.64746 254.619 9.64746 cv
254.428 9.64746 254.262 9.59229 254.122 9.48145 cv
253.981 9.37061 253.884 9.22852 253.829 9.0542 cv
253.774 8.88037 253.747 8.63428 253.747 8.31592 cv
253.747 6.79053 li
253.747 6.62842 253.729 6.5166 253.694 6.4541 cv
253.659 6.39209 253.607 6.34375 253.539 6.31055 cv
253.471 6.27686 253.347 6.26123 253.166 6.26367 cv
253.166 6.12598 li
254.366 6.12598 li
254.366 8.41895 li
254.366 8.73779 254.421 8.94727 254.531 9.04736 cv
254.643 9.14697 254.775 9.19678 254.933 9.19678 cv
255.039 9.19678 255.16 9.16309 255.296 9.0957 cv
255.432 9.02832 255.593 8.8999 255.779 8.71045 cv
255.779 6.77539 li
255.779 6.57813 255.743 6.44482 255.672 6.37549 cv
255.601 6.30615 255.453 6.26855 255.229 6.26367 cv
255.229 6.12598 li
256.397 6.12598 li
cp
f
258.146 6.74316 mo
258.546 6.26563 258.927 6.02686 259.289 6.02686 cv
259.476 6.02686 259.635 6.07373 259.769 6.16699 cv
259.903 6.26025 260.01 6.41406 260.089 6.62842 cv
260.144 6.77783 260.171 7.00684 260.171 7.31592 cv
260.171 8.77686 li
260.171 8.9917 260.188 9.1377 260.223 9.21436 cv
260.25 9.27588 260.294 9.32422 260.354 9.35889 cv
260.415 9.39307 260.527 9.41064 260.69 9.41064 cv
260.69 9.54834 li
259.002 9.54834 li
259.002 9.41064 li
259.073 9.41064 li
259.231 9.41064 259.343 9.38623 259.405 9.33838 cv
259.469 9.29004 259.513 9.21924 259.537 9.125 cv
259.547 9.08789 259.552 8.97168 259.552 8.77686 cv
259.552 7.37012 li
259.552 7.05762 259.512 6.83057 259.432 6.68945 cv
259.352 6.54834 259.216 6.47754 259.025 6.47754 cv
258.731 6.47754 258.438 6.63965 258.146 6.96436 cv
258.146 8.77686 li
258.146 9.00635 258.16 9.14844 258.188 9.20313 cv
258.223 9.2749 258.271 9.32715 258.332 9.36084 cv
258.394 9.39404 258.518 9.41064 258.704 9.41064 cv
258.704 9.54834 li
257.009 9.54834 li
257.009 9.41064 li
257.083 9.41064 li
257.258 9.41064 257.376 9.3667 257.437 9.27881 cv
257.497 9.19141 257.528 9.02393 257.528 8.77686 cv
257.528 7.50879 li
257.528 7.09863 257.519 6.84912 257.5 6.75977 cv
257.481 6.66992 257.453 6.60938 257.415 6.57666 cv
257.376 6.54443 257.325 6.52832 257.26 6.52832 cv
257.19 6.52832 257.107 6.54688 257.011 6.58447 cv
256.955 6.44678 li
257.986 6.02686 li
258.146 6.02686 li
258.146 6.74316 li
cp
f
263.807 8.24805 mo
263.715 8.69971 263.534 9.0459 263.266 9.28662 cv
262.997 9.52686 262.7 9.64746 262.375 9.64746 cv
261.986 9.64746 261.648 9.48486 261.359 9.15918 cv
261.071 8.8335 260.927 8.39355 260.927 7.83887 cv
260.927 7.30225 261.087 6.86572 261.406 6.53027 cv
261.726 6.19482 262.108 6.02686 262.556 6.02686 cv
262.892 6.02686 263.167 6.11572 263.384 6.29346 cv
263.6 6.47168 263.708 6.65625 263.708 6.84766 cv
263.708 6.94238 263.677 7.01904 263.616 7.07715 cv
263.556 7.13574 263.471 7.16504 263.361 7.16504 cv
263.214 7.16504 263.105 7.11719 263.033 7.02197 cv
262.988 6.96973 262.959 6.86963 262.945 6.72168 cv
262.932 6.57422 262.881 6.46143 262.794 6.38379 cv
262.707 6.30859 262.587 6.271 262.433 6.271 cv
262.185 6.271 261.984 6.36328 261.833 6.54785 cv
261.631 6.79199 261.53 7.11475 261.53 7.51563 cv
261.53 7.92432 261.631 8.28516 261.831 8.59766 cv
262.031 8.91064 262.303 9.06689 262.644 9.06689 cv
262.888 9.06689 263.106 8.98486 263.301 8.82129 cv
263.438 8.70752 263.57 8.49902 263.7 8.19629 cv
263.807 8.24805 li
cp
f
265.228 5.00342 mo
265.228 6.12598 li
266.025 6.12598 li
266.025 6.37793 li
265.228 6.38574 li
265.228 8.60254 li
265.228 8.82422 265.259 8.97314 265.322 9.05029 cv
265.386 9.12744 265.468 9.16602 265.566 9.16602 cv
265.648 9.16602 265.728 9.14014 265.805 9.08887 cv
265.882 9.03711 265.941 8.96143 265.983 8.86084 cv
266.129 8.86084 li
266.042 9.10645 265.919 9.2915 265.759 9.41553 cv
265.6 9.53955 265.436 9.60156 265.267 9.60156 cv
265.151 9.60156 265.04 9.56982 264.93 9.50635 cv
264.82 9.44238 264.739 9.35107 264.688 9.23291 cv
264.635 9.11426 264.608 8.93115 264.608 8.68457 cv
264.608 6.37793 li
264.066 6.37793 li
264.066 6.25928 li
264.204 6.20508 264.344 6.11328 264.487 5.98389 cv
264.631 5.85498 264.76 5.70068 264.872 5.52197 cv
264.93 5.42725 265.011 5.25439 265.113 5.00342 cv
265.228 5.00342 li
cp
f
269.291 6.12598 mo
269.291 8.20361 li
269.291 8.59326 269.301 8.83203 269.319 8.91895 cv
269.338 9.00586 269.367 9.06689 269.408 9.10107 cv
269.449 9.13574 269.497 9.15332 269.552 9.15332 cv
269.629 9.15332 269.716 9.13184 269.813 9.08984 cv
269.864 9.22705 li
268.841 9.64746 li
268.673 9.64746 li
268.673 8.93115 li
268.379 9.24609 268.155 9.44434 268.001 9.52539 cv
267.848 9.60693 267.685 9.64746 267.513 9.64746 cv
267.321 9.64746 267.156 9.59229 267.016 9.48145 cv
266.875 9.37061 266.777 9.22852 266.723 9.0542 cv
266.668 8.88037 266.641 8.63428 266.641 8.31592 cv
266.641 6.79053 li
266.641 6.62842 266.623 6.5166 266.588 6.4541 cv
266.554 6.39209 266.502 6.34375 266.433 6.31055 cv
266.364 6.27686 266.24 6.26123 266.061 6.26367 cv
266.061 6.12598 li
267.26 6.12598 li
267.26 8.41895 li
267.26 8.73779 267.314 8.94727 267.426 9.04736 cv
267.536 9.14697 267.67 9.19678 267.826 9.19678 cv
267.933 9.19678 268.055 9.16309 268.189 9.0957 cv
268.325 9.02832 268.486 8.8999 268.673 8.71045 cv
268.673 6.77539 li
268.673 6.57813 268.637 6.44482 268.565 6.37549 cv
268.495 6.30615 268.347 6.26855 268.123 6.26367 cv
268.123 6.12598 li
269.291 6.12598 li
cp
f
271.973 9.05127 mo
271.622 9.32324 271.401 9.48047 271.313 9.52295 cv
271.178 9.58545 271.035 9.6167 270.884 9.6167 cv
270.647 9.6167 270.452 9.53613 270.3 9.37402 cv
270.146 9.2124 270.07 8.99951 270.07 8.73584 cv
270.07 8.56885 270.107 8.42432 270.183 8.30273 cv
270.284 8.1333 270.462 7.97412 270.714 7.82471 cv
270.966 7.67529 271.386 7.49365 271.973 7.2793 cv
271.973 7.14551 li
271.973 6.80566 271.919 6.57227 271.811 6.4458 cv
271.703 6.31934 271.546 6.25586 271.34 6.25586 cv
271.184 6.25586 271.06 6.29834 270.968 6.38281 cv
270.874 6.46729 270.827 6.56445 270.827 6.67383 cv
270.834 6.89063 li
270.834 7.00488 270.805 7.09326 270.746 7.15576 cv
270.688 7.21777 270.61 7.24902 270.516 7.24902 cv
270.423 7.24902 270.347 7.21631 270.288 7.15186 cv
270.229 7.08691 270.2 6.99854 270.2 6.88623 cv
270.2 6.67188 270.31 6.4751 270.529 6.2959 cv
270.748 6.1167 271.056 6.02686 271.452 6.02686 cv
271.756 6.02686 272.005 6.07764 272.199 6.17969 cv
272.346 6.25684 272.454 6.37744 272.524 6.54199 cv
272.568 6.64893 272.591 6.86768 272.591 7.19873 cv
272.591 8.35938 li
272.591 8.68555 272.598 8.88525 272.61 8.9585 cv
272.622 9.03174 272.643 9.08105 272.672 9.10596 cv
272.7 9.13086 272.733 9.14307 272.771 9.14307 cv
272.811 9.14307 272.846 9.13477 272.876 9.11719 cv
272.929 9.08496 273.029 8.99414 273.18 8.84521 cv
273.18 9.05371 li
272.899 9.4292 272.632 9.6167 272.377 9.6167 cv
272.255 9.6167 272.157 9.57422 272.085 9.48877 cv
272.013 9.40332 271.975 9.25732 271.973 9.05127 cv
cp
271.973 8.80908 mo
271.973 7.50879 li
271.595 7.65771 271.351 7.76318 271.24 7.8252 cv
271.043 7.93457 270.901 8.04883 270.816 8.16797 cv
270.731 8.2876 270.689 8.41748 270.689 8.55908 cv
270.689 8.73828 270.743 8.88623 270.851 9.00439 cv
270.958 9.12256 271.082 9.18164 271.222 9.18164 cv
271.412 9.18164 271.662 9.05713 271.973 8.80908 cv
cp
f
274.371 5.00342 mo
274.371 6.12598 li
275.169 6.12598 li
275.169 6.37793 li
274.371 6.38574 li
274.371 8.60254 li
274.371 8.82422 274.402 8.97314 274.466 9.05029 cv
274.529 9.12744 274.61 9.16602 274.71 9.16602 cv
274.792 9.16602 274.871 9.14014 274.948 9.08887 cv
275.025 9.03711 275.085 8.96143 275.127 8.86084 cv
275.272 8.86084 li
275.186 9.10645 275.062 9.2915 274.902 9.41553 cv
274.743 9.53955 274.579 9.60156 274.409 9.60156 cv
274.295 9.60156 274.183 9.56982 274.073 9.50635 cv
273.964 9.44238 273.883 9.35107 273.831 9.23291 cv
273.778 9.11426 273.752 8.93115 273.752 8.68457 cv
273.752 6.37793 li
273.21 6.37793 li
273.21 6.25928 li
273.347 6.20508 273.487 6.11328 273.631 5.98389 cv
273.774 5.85498 273.902 5.70068 274.016 5.52197 cv
274.073 5.42725 274.153 5.25439 274.256 5.00342 cv
274.371 5.00342 li
cp
f
276.31 4.23926 mo
276.413 4.23926 276.502 4.27588 276.575 4.34912 cv
276.648 4.42236 276.686 4.51123 276.686 4.61572 cv
276.686 4.71973 276.648 4.80908 276.575 4.88379 cv
276.502 4.9585 276.413 4.99561 276.31 4.99561 cv
276.205 4.99561 276.115 4.9585 276.041 4.88379 cv
275.967 4.80908 275.929 4.71973 275.929 4.61572 cv
275.929 4.51123 275.966 4.42236 276.039 4.34912 cv
276.112 4.27588 276.202 4.23926 276.31 4.23926 cv
cp
276.616 6.02686 mo
276.616 8.77686 li
276.616 8.98926 276.632 9.13086 276.663 9.20117 cv
276.694 9.27148 276.74 9.32422 276.802 9.35889 cv
276.862 9.39307 276.974 9.41064 277.136 9.41064 cv
277.136 9.54834 li
275.479 9.54834 li
275.479 9.41064 li
275.645 9.41064 275.756 9.39453 275.813 9.3623 cv
275.869 9.33008 275.914 9.27686 275.948 9.20313 cv
275.981 9.12891 275.998 8.98682 275.998 8.77686 cv
275.998 7.45508 li
275.998 7.08691 275.986 6.84863 275.964 6.73975 cv
275.947 6.66113 275.92 6.60596 275.883 6.57471 cv
275.846 6.54395 275.795 6.52832 275.73 6.52832 cv
275.661 6.52832 275.576 6.54688 275.478 6.58447 cv
275.425 6.44678 li
276.453 6.02686 li
276.616 6.02686 li
cp
f
279.179 6.02686 mo
279.697 6.02686 280.112 6.22314 280.426 6.61572 cv
280.692 6.95166 280.825 7.33691 280.825 7.77197 cv
280.825 8.07764 280.752 8.38721 280.605 8.7002 cv
280.458 9.01367 280.256 9.24951 279.999 9.40869 cv
279.741 9.56787 279.454 9.64746 279.138 9.64746 cv
278.623 9.64746 278.214 9.44238 277.91 9.03223 cv
277.653 8.68652 277.525 8.29883 277.525 7.86865 cv
277.525 7.55566 277.604 7.24414 277.759 6.93506 cv
277.914 6.62549 278.119 6.39648 278.373 6.24854 cv
278.627 6.10059 278.896 6.02686 279.179 6.02686 cv
cp
279.063 6.271 mo
278.932 6.271 278.8 6.31006 278.666 6.38867 cv
278.533 6.4668 278.426 6.604 278.344 6.7998 cv
278.262 6.99609 278.221 7.24805 278.221 7.55566 cv
278.221 8.05225 278.319 8.48047 278.518 8.84033 cv
278.715 9.2002 278.976 9.37988 279.299 9.37988 cv
279.54 9.37988 279.738 9.28076 279.896 9.08252 cv
280.052 8.88379 280.13 8.54248 280.13 8.05811 cv
280.13 7.45264 280 6.97607 279.738 6.62842 cv
279.563 6.39014 279.337 6.271 279.063 6.271 cv
cp
f
282.246 6.74316 mo
282.646 6.26563 283.026 6.02686 283.389 6.02686 cv
283.574 6.02686 283.734 6.07373 283.868 6.16699 cv
284.002 6.26025 284.109 6.41406 284.188 6.62842 cv
284.243 6.77783 284.271 7.00684 284.271 7.31592 cv
284.271 8.77686 li
284.271 8.9917 284.288 9.1377 284.322 9.21436 cv
284.35 9.27588 284.394 9.32422 284.454 9.35889 cv
284.515 9.39307 284.627 9.41064 284.79 9.41064 cv
284.79 9.54834 li
283.102 9.54834 li
283.102 9.41064 li
283.173 9.41064 li
283.331 9.41064 283.441 9.38623 283.505 9.33838 cv
283.568 9.29004 283.612 9.21924 283.637 9.125 cv
283.646 9.08789 283.651 8.97168 283.651 8.77686 cv
283.651 7.37012 li
283.651 7.05762 283.611 6.83057 283.531 6.68945 cv
283.451 6.54834 283.315 6.47754 283.125 6.47754 cv
282.831 6.47754 282.538 6.63965 282.246 6.96436 cv
282.246 8.77686 li
282.246 9.00635 282.26 9.14844 282.287 9.20313 cv
282.322 9.2749 282.37 9.32715 282.432 9.36084 cv
282.492 9.39404 282.616 9.41064 282.804 9.41064 cv
282.804 9.54834 li
281.108 9.54834 li
281.108 9.41064 li
281.183 9.41064 li
281.357 9.41064 281.475 9.3667 281.536 9.27881 cv
281.597 9.19141 281.628 9.02393 281.628 8.77686 cv
281.628 7.50879 li
281.628 7.09863 281.618 6.84912 281.6 6.75977 cv
281.581 6.66992 281.553 6.60938 281.514 6.57666 cv
281.476 6.54443 281.424 6.52832 281.359 6.52832 cv
281.29 6.52832 281.207 6.54688 281.11 6.58447 cv
281.055 6.44678 li
282.086 6.02686 li
282.246 6.02686 li
282.246 6.74316 li
cp
f
254.992 17.7964 mo
254.9 18.248 254.72 18.5942 254.451 18.8345 cv
254.183 19.0752 253.886 19.1953 253.56 19.1953 cv
253.172 19.1953 252.834 19.0327 252.545 18.707 cv
252.257 18.3813 252.112 17.9414 252.112 17.3872 cv
252.112 16.8501 252.272 16.4136 252.591 16.0781 cv
252.911 15.7427 253.294 15.5747 253.741 15.5747 cv
254.076 15.5747 254.353 15.6636 254.568 15.8418 cv
254.784 16.0195 254.893 16.2041 254.893 16.396 cv
254.893 16.4902 254.862 16.5669 254.802 16.6255 cv
254.74 16.6836 254.655 16.7129 254.546 16.7129 cv
254.399 16.7129 254.29 16.6655 254.218 16.5703 cv
254.174 16.5176 254.145 16.4175 254.131 16.27 cv
254.117 16.1221 254.066 16.0093 253.979 15.9321 cv
253.893 15.8569 253.772 15.8193 253.618 15.8193 cv
253.369 15.8193 253.169 15.9116 253.018 16.0957 cv
252.816 16.3398 252.716 16.6626 252.716 17.064 cv
252.716 17.4727 252.816 17.8335 253.017 18.146 cv
253.217 18.4585 253.487 18.6147 253.828 18.6147 cv
254.072 18.6147 254.291 18.5332 254.485 18.3696 cv
254.622 18.2554 254.756 18.0469 254.885 17.7441 cv
254.992 17.7964 li
cp
f
256.382 13.7876 mo
256.382 16.2871 li
256.658 15.9839 256.878 15.7896 257.04 15.7036 cv
257.201 15.6177 257.363 15.5747 257.525 15.5747 cv
257.72 15.5747 257.886 15.6284 258.025 15.7354 cv
258.165 15.8428 258.269 16.0107 258.335 16.2397 cv
258.383 16.3994 258.406 16.6909 258.406 17.1143 cv
258.406 18.3247 li
258.406 18.5396 258.424 18.687 258.458 18.7661 cv
258.483 18.8252 258.525 18.8721 258.584 18.9067 cv
258.644 18.9414 258.753 18.9585 258.91 18.9585 cv
258.91 19.0962 li
257.237 19.0962 li
257.237 18.9585 li
257.315 18.9585 li
257.475 18.9585 257.585 18.9346 257.646 18.8862 cv
257.708 18.8384 257.752 18.7671 257.776 18.6733 cv
257.784 18.6338 257.788 18.5176 257.788 18.3247 cv
257.788 17.1133 li
257.788 16.7397 257.769 16.4941 257.729 16.377 cv
257.691 16.2598 257.63 16.1719 257.545 16.1133 cv
257.46 16.0547 257.357 16.0254 257.238 16.0254 cv
257.116 16.0254 256.989 16.0581 256.856 16.1226 cv
256.725 16.1875 256.566 16.3179 256.382 16.5151 cv
256.382 18.3247 li
256.382 18.5571 256.396 18.7017 256.421 18.7583 cv
256.447 18.8154 256.495 18.8628 256.566 18.9014 cv
256.637 18.9395 256.759 18.9585 256.933 18.9585 cv
256.933 19.0962 li
255.244 19.0962 li
255.244 18.9585 li
255.396 18.9585 255.514 18.9351 255.601 18.8882 cv
255.649 18.8638 255.689 18.8164 255.719 18.7476 cv
255.749 18.6782 255.764 18.5376 255.764 18.3247 cv
255.764 15.231 li
255.764 14.8433 255.754 14.6045 255.735 14.5156 cv
255.717 14.4268 255.688 14.3662 255.65 14.334 cv
255.611 14.3018 255.561 14.2856 255.496 14.2856 cv
255.443 14.2856 255.359 14.3052 255.243 14.3452 cv
255.19 14.2075 li
256.211 13.7876 li
256.382 13.7876 li
cp
f
261.026 18.5991 mo
260.676 18.8716 260.456 19.0288 260.366 19.0713 cv
260.232 19.1338 260.089 19.165 259.938 19.165 cv
259.701 19.165 259.507 19.084 259.354 18.9224 cv
259.201 18.7603 259.124 18.5474 259.124 18.2837 cv
259.124 18.1172 259.162 17.9727 259.236 17.8506 cv
259.338 17.6812 259.516 17.522 259.768 17.3726 cv
260.021 17.2231 260.439 17.0415 261.026 16.8276 cv
261.026 16.6934 li
261.026 16.3535 260.973 16.1206 260.864 15.9937 cv
260.757 15.8672 260.6 15.8042 260.395 15.8042 cv
260.238 15.8042 260.114 15.8462 260.022 15.9312 cv
259.928 16.0156 259.881 16.1128 259.881 16.2222 cv
259.889 16.4385 li
259.889 16.5532 259.859 16.6416 259.8 16.7036 cv
259.741 16.7661 259.664 16.7969 259.569 16.7969 cv
259.477 16.7969 259.401 16.7646 259.343 16.6997 cv
259.284 16.6353 259.254 16.5464 259.254 16.4346 cv
259.254 16.2202 259.364 16.0234 259.583 15.8442 cv
259.802 15.6646 260.11 15.5747 260.506 15.5747 cv
260.81 15.5747 261.059 15.626 261.253 15.728 cv
261.399 15.8052 261.508 15.9258 261.578 16.0898 cv
261.623 16.1968 261.646 16.416 261.646 16.7466 cv
261.646 17.9077 li
261.646 18.2334 261.651 18.4331 261.664 18.5068 cv
261.677 18.5801 261.697 18.6294 261.726 18.6543 cv
261.755 18.6792 261.788 18.6914 261.825 18.6914 cv
261.865 18.6914 261.9 18.6826 261.93 18.6655 cv
261.982 18.6333 262.084 18.5425 262.233 18.3936 cv
262.233 18.6021 li
261.953 18.9771 261.687 19.165 261.432 19.165 cv
261.309 19.165 261.211 19.1221 261.139 19.0366 cv
261.066 18.9512 261.029 18.8052 261.026 18.5991 cv
cp
261.026 18.3569 mo
261.026 17.0566 li
260.648 17.2056 260.405 17.3115 260.295 17.3735 cv
260.097 17.4829 259.956 17.5972 259.871 17.7163 cv
259.786 17.8354 259.743 17.9658 259.743 18.1074 cv
259.743 18.2861 259.797 18.4346 259.904 18.5527 cv
260.012 18.6704 260.136 18.7295 260.276 18.7295 cv
260.466 18.7295 260.716 18.6055 261.026 18.3569 cv
cp
f
263.395 15.5747 mo
263.395 16.3462 li
263.679 15.832 263.97 15.5747 264.269 15.5747 cv
264.404 15.5747 264.517 15.6167 264.605 15.7002 cv
264.694 15.7837 264.739 15.8804 264.739 15.9907 cv
264.739 16.0879 264.707 16.1704 264.643 16.2378 cv
264.579 16.3052 264.503 16.3389 264.414 16.3389 cv
264.328 16.3389 264.231 16.2954 264.123 16.209 cv
264.016 16.1226 263.937 16.0791 263.884 16.0791 cv
263.84 16.0791 263.791 16.104 263.739 16.1538 cv
263.628 16.2563 263.513 16.4248 263.395 16.6597 cv
263.395 18.2944 li
263.395 18.4844 263.418 18.6284 263.465 18.7261 cv
263.497 18.7935 263.555 18.8496 263.637 18.8931 cv
263.719 18.937 263.836 18.9585 263.99 18.9585 cv
263.99 19.0962 li
262.241 19.0962 li
262.241 18.9585 li
262.414 18.9585 262.543 18.9312 262.627 18.8765 cv
262.689 18.8369 262.732 18.7734 262.757 18.6865 cv
262.77 18.644 262.775 18.5234 262.775 18.3247 cv
262.775 17.0034 li
262.775 16.6064 262.768 16.3701 262.751 16.2944 cv
262.735 16.2188 262.706 16.1636 262.662 16.1284 cv
262.619 16.0938 262.564 16.0767 262.501 16.0767 cv
262.424 16.0767 262.337 16.0952 262.24 16.1323 cv
262.203 15.9951 li
263.237 15.5747 li
263.395 15.5747 li
cp
f
266.763 18.5991 mo
266.412 18.8716 266.192 19.0288 266.103 19.0713 cv
265.969 19.1338 265.825 19.165 265.674 19.165 cv
265.438 19.165 265.243 19.084 265.09 18.9224 cv
264.938 18.7603 264.861 18.5474 264.861 18.2837 cv
264.861 18.1172 264.898 17.9727 264.973 17.8506 cv
265.075 17.6812 265.252 17.522 265.504 17.3726 cv
265.757 17.2231 266.176 17.0415 266.763 16.8276 cv
266.763 16.6934 li
266.763 16.3535 266.709 16.1206 266.602 15.9937 cv
266.493 15.8672 266.337 15.8042 266.131 15.8042 cv
265.975 15.8042 265.851 15.8462 265.759 15.9312 cv
265.665 16.0156 265.617 16.1128 265.617 16.2222 cv
265.625 16.4385 li
265.625 16.5532 265.596 16.6416 265.536 16.7036 cv
265.478 16.7661 265.401 16.7969 265.306 16.7969 cv
265.214 16.7969 265.138 16.7646 265.079 16.6997 cv
265.021 16.6353 264.991 16.5464 264.991 16.4346 cv
264.991 16.2202 265.101 16.0234 265.319 15.8442 cv
265.539 15.6646 265.847 15.5747 266.242 15.5747 cv
266.546 15.5747 266.795 15.626 266.989 15.728 cv
267.137 15.8052 267.245 15.9258 267.314 16.0898 cv
267.359 16.1968 267.382 16.416 267.382 16.7466 cv
267.382 17.9077 li
267.382 18.2334 267.388 18.4331 267.4 18.5068 cv
267.413 18.5801 267.434 18.6294 267.462 18.6543 cv
267.491 18.6792 267.524 18.6914 267.562 18.6914 cv
267.602 18.6914 267.637 18.6826 267.666 18.6655 cv
267.719 18.6333 267.82 18.5425 267.97 18.3936 cv
267.97 18.6021 li
267.69 18.9771 267.423 19.165 267.168 19.165 cv
267.045 19.165 266.948 19.1221 266.875 19.0366 cv
266.803 18.9512 266.766 18.8052 266.763 18.5991 cv
cp
266.763 18.3569 mo
266.763 17.0566 li
266.386 17.2056 266.142 17.3115 266.031 17.3735 cv
265.834 17.4829 265.692 17.5972 265.607 17.7163 cv
265.522 17.8354 265.479 17.9658 265.479 18.1074 cv
265.479 18.2861 265.533 18.4346 265.641 18.5527 cv
265.749 18.6704 265.872 18.7295 266.013 18.7295 cv
266.202 18.7295 266.453 18.6055 266.763 18.3569 cv
cp
f
271.033 17.7964 mo
270.94 18.248 270.761 18.5942 270.492 18.8345 cv
270.224 19.0752 269.927 19.1953 269.601 19.1953 cv
269.213 19.1953 268.874 19.0327 268.586 18.707 cv
268.298 18.3813 268.153 17.9414 268.153 17.3872 cv
268.153 16.8501 268.313 16.4136 268.632 16.0781 cv
268.951 15.7427 269.335 15.5747 269.782 15.5747 cv
270.117 15.5747 270.394 15.6636 270.609 15.8418 cv
270.825 16.0195 270.934 16.2041 270.934 16.396 cv
270.934 16.4902 270.903 16.5669 270.843 16.6255 cv
270.781 16.6836 270.696 16.7129 270.587 16.7129 cv
270.44 16.7129 270.331 16.6655 270.259 16.5703 cv
270.214 16.5176 270.185 16.4175 270.171 16.27 cv
270.157 16.1221 270.107 16.0093 270.021 15.9321 cv
269.934 15.8569 269.813 15.8193 269.659 15.8193 cv
269.41 15.8193 269.21 15.9116 269.059 16.0957 cv
268.857 16.3398 268.757 16.6626 268.757 17.064 cv
268.757 17.4727 268.856 17.8335 269.058 18.146 cv
269.258 18.4585 269.528 18.6147 269.869 18.6147 cv
270.113 18.6147 270.332 18.5332 270.526 18.3696 cv
270.663 18.2554 270.797 18.0469 270.926 17.7441 cv
271.033 17.7964 li
cp
f
272.415 14.5513 mo
272.415 15.6743 li
273.214 15.6743 li
273.214 15.9263 li
272.415 15.9341 li
272.415 18.1509 li
272.415 18.3721 272.447 18.5215 272.511 18.5986 cv
272.574 18.6758 272.655 18.7144 272.755 18.7144 cv
272.836 18.7144 272.916 18.6885 272.993 18.6372 cv
273.069 18.5854 273.13 18.5093 273.172 18.4087 cv
273.316 18.4087 li
273.229 18.6543 273.106 18.8394 272.947 18.9634 cv
272.788 19.0874 272.623 19.1499 272.454 19.1499 cv
272.34 19.1499 272.228 19.1177 272.118 19.0542 cv
272.009 18.9907 271.928 18.8994 271.875 18.7808 cv
271.823 18.6626 271.797 18.4795 271.797 18.2324 cv
271.797 15.9263 li
271.255 15.9263 li
271.255 15.8071 li
271.392 15.7534 271.532 15.6616 271.676 15.5322 cv
271.819 15.4028 271.947 15.249 272.061 15.0698 cv
272.118 14.9751 272.198 14.8022 272.301 14.5513 cv
272.415 14.5513 li
cp
f
274.012 16.9653 mo
274.01 17.4702 274.133 17.8662 274.381 18.1538 cv
274.63 18.4409 274.922 18.5845 275.258 18.5845 cv
275.481 18.5845 275.676 18.5234 275.842 18.4019 cv
276.007 18.2798 276.146 18.0684 276.258 17.7671 cv
276.372 17.8418 li
276.32 18.186 276.169 18.4976 275.918 18.7769 cv
275.667 19.0562 275.353 19.1953 274.975 19.1953 cv
274.565 19.1953 274.215 19.0361 273.923 18.7168 cv
273.631 18.3979 273.484 17.9688 273.484 17.4302 cv
273.484 16.8462 273.635 16.3911 273.934 16.0649 cv
274.233 15.7383 274.608 15.5747 275.061 15.5747 cv
275.443 15.5747 275.758 15.7012 276.003 15.9531 cv
276.249 16.2056 276.372 16.5425 276.372 16.9653 cv
274.012 16.9653 li
cp
274.012 16.7515 mo
275.593 16.7515 li
275.581 16.5327 275.555 16.3784 275.515 16.2896 cv
275.452 16.1504 275.36 16.041 275.237 15.9614 cv
275.114 15.8818 274.985 15.8423 274.851 15.8423 cv
274.645 15.8423 274.46 15.9224 274.297 16.0825 cv
274.135 16.2427 274.039 16.4653 274.012 16.7515 cv
cp
f
277.739 15.5747 mo
277.739 16.3462 li
278.023 15.832 278.314 15.5747 278.613 15.5747 cv
278.749 15.5747 278.861 15.6167 278.95 15.7002 cv
279.039 15.7837 279.084 15.8804 279.084 15.9907 cv
279.084 16.0879 279.052 16.1704 278.988 16.2378 cv
278.924 16.3052 278.848 16.3389 278.759 16.3389 cv
278.673 16.3389 278.576 16.2954 278.469 16.209 cv
278.361 16.1226 278.281 16.0791 278.229 16.0791 cv
278.185 16.0791 278.137 16.104 278.085 16.1538 cv
277.974 16.2563 277.858 16.4248 277.739 16.6597 cv
277.739 18.2944 li
277.739 18.4844 277.763 18.6284 277.811 18.7261 cv
277.843 18.7935 277.899 18.8496 277.981 18.8931 cv
278.063 18.937 278.182 18.9585 278.335 18.9585 cv
278.335 19.0962 li
276.586 19.0962 li
276.586 18.9585 li
276.76 18.9585 276.888 18.9312 276.973 18.8765 cv
277.034 18.8369 277.077 18.7734 277.103 18.6865 cv
277.114 18.644 277.121 18.5234 277.121 18.3247 cv
277.121 17.0034 li
277.121 16.6064 277.112 16.3701 277.097 16.2944 cv
277.08 16.2188 277.051 16.1636 277.007 16.1284 cv
276.964 16.0938 276.91 16.0767 276.846 16.0767 cv
276.769 16.0767 276.682 16.0952 276.585 16.1323 cv
276.548 15.9951 li
277.583 15.5747 li
277.739 15.5747 li
cp
f
281.383 15.5747 mo
281.383 16.7358 li
281.261 16.7358 li
281.167 16.3721 281.046 16.1245 280.898 15.9932 cv
280.751 15.8618 280.563 15.7964 280.336 15.7964 cv
280.162 15.7964 280.022 15.8423 279.916 15.9341 cv
279.81 16.0259 279.756 16.1279 279.756 16.2397 cv
279.756 16.3789 279.795 16.498 279.874 16.5972 cv
279.95 16.6992 280.105 16.8071 280.342 16.9214 cv
280.886 17.186 li
281.391 17.4321 281.643 17.7563 281.643 18.1587 cv
281.643 18.4697 281.525 18.7202 281.29 18.9102 cv
281.056 19.1006 280.793 19.1953 280.502 19.1953 cv
280.293 19.1953 280.055 19.1592 279.786 19.0864 cv
279.704 19.0625 279.637 19.0503 279.585 19.0503 cv
279.527 19.0503 279.482 19.0811 279.45 19.1421 cv
279.328 19.1421 li
279.328 17.9199 li
279.45 17.9199 li
279.521 18.269 279.653 18.5317 279.85 18.7085 cv
280.047 18.8857 280.267 18.9741 280.511 18.9741 cv
280.683 18.9741 280.822 18.9238 280.931 18.8232 cv
281.039 18.7227 281.093 18.6016 281.093 18.4604 cv
281.093 18.2891 281.032 18.145 280.911 18.0283 cv
280.79 17.9116 280.549 17.7646 280.188 17.5864 cv
279.827 17.4087 279.591 17.2476 279.479 17.103 cv
279.368 16.9609 279.313 16.7817 279.313 16.5649 cv
279.313 16.2837 279.409 16.0483 279.602 15.8589 cv
279.794 15.6694 280.043 15.5747 280.349 15.5747 cv
280.482 15.5747 280.646 15.604 280.836 15.6626 cv
280.963 15.7007 281.047 15.7202 281.09 15.7202 cv
281.129 15.7202 281.16 15.7109 281.183 15.6934 cv
281.205 15.6753 281.231 15.6362 281.261 15.5747 cv
281.383 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
243.888 .63623 mo
289.719 .63623 li
289.719 23.5518 li
243.888 23.5518 li
243.888 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
342.208 7.17432 mo
342.208 8.6543 li
342.208 8.97217 342.243 9.16992 342.313 9.24658 cv
342.407 9.35596 342.55 9.41064 342.74 9.41064 cv
342.934 9.41064 li
342.934 9.54834 li
340.765 9.54834 li
340.765 9.41064 li
340.955 9.41064 li
341.17 9.41064 341.323 9.34131 341.415 9.20215 cv
341.465 9.125 341.49 8.94238 341.49 8.6543 cv
341.49 5.37744 li
341.49 5.05957 341.457 4.8623 341.39 4.78516 cv
341.292 4.67578 341.147 4.62109 340.955 4.62109 cv
340.765 4.62109 li
340.765 4.48389 li
342.62 4.48389 li
343.073 4.48389 343.431 4.53027 343.692 4.62354 cv
343.954 4.71729 344.174 4.87451 344.354 5.09619 cv
344.532 5.31738 344.622 5.58008 344.622 5.8833 cv
344.622 6.29639 344.485 6.63232 344.214 6.89111 cv
343.941 7.1499 343.557 7.2793 343.059 7.2793 cv
342.937 7.2793 342.805 7.271 342.663 7.25342 cv
342.521 7.23584 342.37 7.20947 342.208 7.17432 cv
cp
342.208 6.96045 mo
342.34 6.98535 342.456 7.00391 342.558 7.0166 cv
342.659 7.02881 342.746 7.03516 342.818 7.03516 cv
343.076 7.03516 343.299 6.93506 343.485 6.73535 cv
343.673 6.53516 343.767 6.27637 343.767 5.9585 cv
343.767 5.74023 343.722 5.53711 343.633 5.34961 cv
343.543 5.1626 343.417 5.02197 343.253 4.9292 cv
343.09 4.83594 342.903 4.78955 342.695 4.78955 cv
342.569 4.78955 342.406 4.81299 342.208 4.85986 cv
342.208 6.96045 li
cp
f
348.06 6.12598 mo
348.06 8.20361 li
348.06 8.59326 348.068 8.83203 348.087 8.91895 cv
348.105 9.00586 348.136 9.06689 348.177 9.10107 cv
348.218 9.13574 348.265 9.15332 348.319 9.15332 cv
348.396 9.15332 348.483 9.13184 348.58 9.08984 cv
348.632 9.22705 li
347.608 9.64746 li
347.44 9.64746 li
347.44 8.93115 li
347.147 9.24609 346.924 9.44434 346.77 9.52539 cv
346.615 9.60693 346.452 9.64746 346.281 9.64746 cv
346.09 9.64746 345.924 9.59229 345.783 9.48145 cv
345.643 9.37061 345.546 9.22852 345.491 9.0542 cv
345.437 8.88037 345.409 8.63428 345.409 8.31592 cv
345.409 6.79053 li
345.409 6.62842 345.392 6.5166 345.356 6.4541 cv
345.321 6.39209 345.27 6.34375 345.201 6.31055 cv
345.132 6.27686 345.008 6.26123 344.828 6.26367 cv
344.828 6.12598 li
346.027 6.12598 li
346.027 8.41895 li
346.027 8.73779 346.083 8.94727 346.193 9.04736 cv
346.304 9.14697 346.438 9.19678 346.594 9.19678 cv
346.701 9.19678 346.822 9.16309 346.958 9.0957 cv
347.093 9.02832 347.254 8.8999 347.44 8.71045 cv
347.44 6.77539 li
347.44 6.57813 347.405 6.44482 347.334 6.37549 cv
347.263 6.30615 347.115 6.26855 346.891 6.26367 cv
346.891 6.12598 li
348.06 6.12598 li
cp
f
349.809 6.74316 mo
350.208 6.26563 350.589 6.02686 350.951 6.02686 cv
351.137 6.02686 351.297 6.07373 351.431 6.16699 cv
351.564 6.26025 351.672 6.41406 351.751 6.62842 cv
351.806 6.77783 351.833 7.00684 351.833 7.31592 cv
351.833 8.77686 li
351.833 8.9917 351.85 9.1377 351.885 9.21436 cv
351.912 9.27588 351.956 9.32422 352.017 9.35889 cv
352.077 9.39307 352.188 9.41064 352.353 9.41064 cv
352.353 9.54834 li
350.664 9.54834 li
350.664 9.41064 li
350.734 9.41064 li
350.894 9.41064 351.004 9.38623 351.067 9.33838 cv
351.13 9.29004 351.175 9.21924 351.199 9.125 cv
351.209 9.08789 351.214 8.97168 351.214 8.77686 cv
351.214 7.37012 li
351.214 7.05762 351.174 6.83057 351.094 6.68945 cv
351.013 6.54834 350.878 6.47754 350.688 6.47754 cv
350.394 6.47754 350.101 6.63965 349.809 6.96436 cv
349.809 8.77686 li
349.809 9.00635 349.822 9.14844 349.85 9.20313 cv
349.885 9.2749 349.933 9.32715 349.994 9.36084 cv
350.055 9.39404 350.179 9.41064 350.366 9.41064 cv
350.366 9.54834 li
348.671 9.54834 li
348.671 9.41064 li
348.745 9.41064 li
348.92 9.41064 349.037 9.3667 349.099 9.27881 cv
349.159 9.19141 349.189 9.02393 349.189 8.77686 cv
349.189 7.50879 li
349.189 7.09863 349.181 6.84912 349.162 6.75977 cv
349.144 6.66992 349.114 6.60938 349.076 6.57666 cv
349.038 6.54443 348.986 6.52832 348.922 6.52832 cv
348.853 6.52832 348.77 6.54688 348.673 6.58447 cv
348.617 6.44678 li
349.647 6.02686 li
349.809 6.02686 li
349.809 6.74316 li
cp
f
355.469 8.24805 mo
355.377 8.69971 355.196 9.0459 354.928 9.28662 cv
354.659 9.52686 354.362 9.64746 354.036 9.64746 cv
353.648 9.64746 353.31 9.48486 353.021 9.15918 cv
352.733 8.8335 352.589 8.39355 352.589 7.83887 cv
352.589 7.30225 352.749 6.86572 353.067 6.53027 cv
353.388 6.19482 353.771 6.02686 354.218 6.02686 cv
354.553 6.02686 354.829 6.11572 355.045 6.29346 cv
355.261 6.47168 355.369 6.65625 355.369 6.84766 cv
355.369 6.94238 355.339 7.01904 355.278 7.07715 cv
355.217 7.13574 355.132 7.16504 355.022 7.16504 cv
354.876 7.16504 354.767 7.11719 354.694 7.02197 cv
354.65 6.96973 354.621 6.86963 354.607 6.72168 cv
354.594 6.57422 354.543 6.46143 354.456 6.38379 cv
354.369 6.30859 354.249 6.271 354.095 6.271 cv
353.846 6.271 353.646 6.36328 353.494 6.54785 cv
353.293 6.79199 353.192 7.11475 353.192 7.51563 cv
353.192 7.92432 353.293 8.28516 353.493 8.59766 cv
353.693 8.91064 353.964 9.06689 354.305 9.06689 cv
354.549 9.06689 354.768 8.98486 354.962 8.82129 cv
355.099 8.70752 355.232 8.49902 355.361 8.19629 cv
355.469 8.24805 li
cp
f
356.89 5.00342 mo
356.89 6.12598 li
357.688 6.12598 li
357.688 6.37793 li
356.89 6.38574 li
356.89 8.60254 li
356.89 8.82422 356.921 8.97314 356.984 9.05029 cv
357.048 9.12744 357.129 9.16602 357.229 9.16602 cv
357.311 9.16602 357.39 9.14014 357.467 9.08887 cv
357.544 9.03711 357.604 8.96143 357.646 8.86084 cv
357.791 8.86084 li
357.704 9.10645 357.58 9.2915 357.421 9.41553 cv
357.262 9.53955 357.098 9.60156 356.928 9.60156 cv
356.813 9.60156 356.701 9.56982 356.592 9.50635 cv
356.482 9.44238 356.401 9.35107 356.349 9.23291 cv
356.297 9.11426 356.271 8.93115 356.271 8.68457 cv
356.271 6.37793 li
355.729 6.37793 li
355.729 6.25928 li
355.865 6.20508 356.006 6.11328 356.149 5.98389 cv
356.293 5.85498 356.421 5.70068 356.534 5.52197 cv
356.592 5.42725 356.672 5.25439 356.774 5.00342 cv
356.89 5.00342 li
cp
f
360.953 6.12598 mo
360.953 8.20361 li
360.953 8.59326 360.962 8.83203 360.981 8.91895 cv
361 9.00586 361.029 9.06689 361.07 9.10107 cv
361.111 9.13574 361.159 9.15332 361.214 9.15332 cv
361.29 9.15332 361.377 9.13184 361.474 9.08984 cv
361.526 9.22705 li
360.502 9.64746 li
360.334 9.64746 li
360.334 8.93115 li
360.041 9.24609 359.817 9.44434 359.663 9.52539 cv
359.509 9.60693 359.347 9.64746 359.175 9.64746 cv
358.983 9.64746 358.817 9.59229 358.677 9.48145 cv
358.537 9.37061 358.439 9.22852 358.385 9.0542 cv
358.33 8.88037 358.303 8.63428 358.303 8.31592 cv
358.303 6.79053 li
358.303 6.62842 358.285 6.5166 358.25 6.4541 cv
358.215 6.39209 358.163 6.34375 358.095 6.31055 cv
358.026 6.27686 357.901 6.26123 357.722 6.26367 cv
357.722 6.12598 li
358.921 6.12598 li
358.921 8.41895 li
358.921 8.73779 358.977 8.94727 359.087 9.04736 cv
359.198 9.14697 359.331 9.19678 359.488 9.19678 cv
359.595 9.19678 359.716 9.16309 359.852 9.0957 cv
359.987 9.02832 360.147 8.8999 360.334 8.71045 cv
360.334 6.77539 li
360.334 6.57813 360.299 6.44482 360.228 6.37549 cv
360.156 6.30615 360.009 6.26855 359.784 6.26367 cv
359.784 6.12598 li
360.953 6.12598 li
cp
f
363.634 9.05127 mo
363.283 9.32324 363.063 9.48047 362.974 9.52295 cv
362.84 9.58545 362.697 9.6167 362.545 9.6167 cv
362.309 9.6167 362.114 9.53613 361.962 9.37402 cv
361.809 9.2124 361.732 8.99951 361.732 8.73584 cv
361.732 8.56885 361.77 8.42432 361.844 8.30273 cv
361.946 8.1333 362.123 7.97412 362.376 7.82471 cv
362.628 7.67529 363.048 7.49365 363.634 7.2793 cv
363.634 7.14551 li
363.634 6.80566 363.58 6.57227 363.473 6.4458 cv
363.364 6.31934 363.208 6.25586 363.002 6.25586 cv
362.846 6.25586 362.722 6.29834 362.63 6.38281 cv
362.536 6.46729 362.488 6.56445 362.488 6.67383 cv
362.496 6.89063 li
362.496 7.00488 362.467 7.09326 362.408 7.15576 cv
362.349 7.21777 362.272 7.24902 362.177 7.24902 cv
362.085 7.24902 362.009 7.21631 361.95 7.15186 cv
361.892 7.08691 361.862 6.99854 361.862 6.88623 cv
361.862 6.67188 361.972 6.4751 362.19 6.2959 cv
362.41 6.1167 362.718 6.02686 363.113 6.02686 cv
363.417 6.02686 363.666 6.07764 363.86 6.17969 cv
364.008 6.25684 364.116 6.37744 364.186 6.54199 cv
364.23 6.64893 364.253 6.86768 364.253 7.19873 cv
364.253 8.35938 li
364.253 8.68555 364.259 8.88525 364.271 8.9585 cv
364.284 9.03174 364.305 9.08105 364.333 9.10596 cv
364.362 9.13086 364.396 9.14307 364.433 9.14307 cv
364.473 9.14307 364.508 9.13477 364.538 9.11719 cv
364.59 9.08496 364.691 8.99414 364.841 8.84521 cv
364.841 9.05371 li
364.562 9.4292 364.294 9.6167 364.039 9.6167 cv
363.917 9.6167 363.819 9.57422 363.747 9.48877 cv
363.674 9.40332 363.637 9.25732 363.634 9.05127 cv
cp
363.634 8.80908 mo
363.634 7.50879 li
363.257 7.65771 363.013 7.76318 362.902 7.8252 cv
362.705 7.93457 362.563 8.04883 362.479 8.16797 cv
362.394 8.2876 362.351 8.41748 362.351 8.55908 cv
362.351 8.73828 362.404 8.88623 362.513 9.00439 cv
362.62 9.12256 362.743 9.18164 362.884 9.18164 cv
363.074 9.18164 363.324 9.05713 363.634 8.80908 cv
cp
f
366.032 5.00342 mo
366.032 6.12598 li
366.831 6.12598 li
366.831 6.37793 li
366.032 6.38574 li
366.032 8.60254 li
366.032 8.82422 366.064 8.97314 366.128 9.05029 cv
366.191 9.12744 366.272 9.16602 366.372 9.16602 cv
366.453 9.16602 366.533 9.14014 366.61 9.08887 cv
366.687 9.03711 366.747 8.96143 366.789 8.86084 cv
366.934 8.86084 li
366.847 9.10645 366.724 9.2915 366.564 9.41553 cv
366.405 9.53955 366.24 9.60156 366.071 9.60156 cv
365.957 9.60156 365.845 9.56982 365.735 9.50635 cv
365.626 9.44238 365.545 9.35107 365.492 9.23291 cv
365.44 9.11426 365.414 8.93115 365.414 8.68457 cv
365.414 6.37793 li
364.872 6.37793 li
364.872 6.25928 li
365.009 6.20508 365.149 6.11328 365.293 5.98389 cv
365.437 5.85498 365.564 5.70068 365.678 5.52197 cv
365.735 5.42725 365.815 5.25439 365.918 5.00342 cv
366.032 5.00342 li
cp
f
367.971 4.23926 mo
368.075 4.23926 368.164 4.27588 368.237 4.34912 cv
368.311 4.42236 368.347 4.51123 368.347 4.61572 cv
368.347 4.71973 368.311 4.80908 368.237 4.88379 cv
368.164 4.9585 368.075 4.99561 367.971 4.99561 cv
367.866 4.99561 367.777 4.9585 367.702 4.88379 cv
367.628 4.80908 367.591 4.71973 367.591 4.61572 cv
367.591 4.51123 367.628 4.42236 367.701 4.34912 cv
367.774 4.27588 367.864 4.23926 367.971 4.23926 cv
cp
368.278 6.02686 mo
368.278 8.77686 li
368.278 8.98926 368.294 9.13086 368.325 9.20117 cv
368.356 9.27148 368.402 9.32422 368.464 9.35889 cv
368.524 9.39307 368.636 9.41064 368.798 9.41064 cv
368.798 9.54834 li
367.141 9.54834 li
367.141 9.41064 li
367.306 9.41064 367.417 9.39453 367.475 9.3623 cv
367.531 9.33008 367.576 9.27686 367.609 9.20313 cv
367.643 9.12891 367.659 8.98682 367.659 8.77686 cv
367.659 7.45508 li
367.659 7.08691 367.648 6.84863 367.626 6.73975 cv
367.608 6.66113 367.581 6.60596 367.544 6.57471 cv
367.507 6.54395 367.456 6.52832 367.392 6.52832 cv
367.322 6.52832 367.238 6.54688 367.139 6.58447 cv
367.087 6.44678 li
368.114 6.02686 li
368.278 6.02686 li
cp
f
370.841 6.02686 mo
371.358 6.02686 371.774 6.22314 372.088 6.61572 cv
372.354 6.95166 372.487 7.33691 372.487 7.77197 cv
372.487 8.07764 372.414 8.38721 372.267 8.7002 cv
372.12 9.01367 371.918 9.24951 371.66 9.40869 cv
371.402 9.56787 371.116 9.64746 370.8 9.64746 cv
370.285 9.64746 369.875 9.44238 369.571 9.03223 cv
369.315 8.68652 369.188 8.29883 369.188 7.86865 cv
369.188 7.55566 369.265 7.24414 369.421 6.93506 cv
369.576 6.62549 369.781 6.39648 370.035 6.24854 cv
370.288 6.10059 370.558 6.02686 370.841 6.02686 cv
cp
370.726 6.271 mo
370.594 6.271 370.461 6.31006 370.328 6.38867 cv
370.195 6.4668 370.088 6.604 370.006 6.7998 cv
369.924 6.99609 369.883 7.24805 369.883 7.55566 cv
369.883 8.05225 369.981 8.48047 370.179 8.84033 cv
370.377 9.2002 370.637 9.37988 370.96 9.37988 cv
371.201 9.37988 371.4 9.28076 371.557 9.08252 cv
371.714 8.88379 371.792 8.54248 371.792 8.05811 cv
371.792 7.45264 371.661 6.97607 371.4 6.62842 cv
371.224 6.39014 370.999 6.271 370.726 6.271 cv
cp
f
373.908 6.74316 mo
374.308 6.26563 374.688 6.02686 375.05 6.02686 cv
375.236 6.02686 375.396 6.07373 375.53 6.16699 cv
375.664 6.26025 375.771 6.41406 375.851 6.62842 cv
375.905 6.77783 375.933 7.00684 375.933 7.31592 cv
375.933 8.77686 li
375.933 8.9917 375.949 9.1377 375.984 9.21436 cv
376.011 9.27588 376.055 9.32422 376.115 9.35889 cv
376.177 9.39307 376.288 9.41064 376.451 9.41064 cv
376.451 9.54834 li
374.764 9.54834 li
374.764 9.41064 li
374.834 9.41064 li
374.992 9.41064 375.104 9.38623 375.167 9.33838 cv
375.229 9.29004 375.273 9.21924 375.299 9.125 cv
375.309 9.08789 375.313 8.97168 375.313 8.77686 cv
375.313 7.37012 li
375.313 7.05762 375.273 6.83057 375.192 6.68945 cv
375.112 6.54834 374.978 6.47754 374.787 6.47754 cv
374.492 6.47754 374.199 6.63965 373.908 6.96436 cv
373.908 8.77686 li
373.908 9.00635 373.922 9.14844 373.949 9.20313 cv
373.984 9.2749 374.032 9.32715 374.093 9.36084 cv
374.154 9.39404 374.278 9.41064 374.466 9.41064 cv
374.466 9.54834 li
372.77 9.54834 li
372.77 9.41064 li
372.845 9.41064 li
373.019 9.41064 373.137 9.3667 373.197 9.27881 cv
373.259 9.19141 373.289 9.02393 373.289 8.77686 cv
373.289 7.50879 li
373.289 7.09863 373.28 6.84912 373.262 6.75977 cv
373.243 6.66992 373.214 6.60938 373.176 6.57666 cv
373.138 6.54443 373.086 6.52832 373.021 6.52832 cv
372.952 6.52832 372.869 6.54688 372.772 6.58447 cv
372.716 6.44678 li
373.747 6.02686 li
373.908 6.02686 li
373.908 6.74316 li
cp
f
346.654 17.7964 mo
346.562 18.248 346.382 18.5942 346.113 18.8345 cv
345.845 19.0752 345.547 19.1953 345.222 19.1953 cv
344.834 19.1953 344.495 19.0327 344.207 18.707 cv
343.918 18.3813 343.774 17.9414 343.774 17.3872 cv
343.774 16.8501 343.934 16.4136 344.253 16.0781 cv
344.572 15.7427 344.956 15.5747 345.403 15.5747 cv
345.738 15.5747 346.014 15.6636 346.23 15.8418 cv
346.446 16.0195 346.555 16.2041 346.555 16.396 cv
346.555 16.4902 346.524 16.5669 346.463 16.6255 cv
346.402 16.6836 346.317 16.7129 346.208 16.7129 cv
346.062 16.7129 345.952 16.6655 345.88 16.5703 cv
345.835 16.5176 345.806 16.4175 345.792 16.27 cv
345.778 16.1221 345.729 16.0093 345.642 15.9321 cv
345.555 15.8569 345.434 15.8193 345.279 15.8193 cv
345.031 15.8193 344.831 15.9116 344.68 16.0957 cv
344.479 16.3398 344.378 16.6626 344.378 17.064 cv
344.378 17.4727 344.478 17.8335 344.678 18.146 cv
344.879 18.4585 345.149 18.6147 345.49 18.6147 cv
345.734 18.6147 345.953 18.5332 346.147 18.3696 cv
346.284 18.2554 346.417 18.0469 346.547 17.7441 cv
346.654 17.7964 li
cp
f
348.044 13.7876 mo
348.044 16.2871 li
348.32 15.9839 348.539 15.7896 348.701 15.7036 cv
348.863 15.6177 349.025 15.5747 349.187 15.5747 cv
349.381 15.5747 349.548 15.6284 349.688 15.7354 cv
349.827 15.8428 349.93 16.0107 349.997 16.2397 cv
350.045 16.3994 350.068 16.6909 350.068 17.1143 cv
350.068 18.3247 li
350.068 18.5396 350.086 18.687 350.12 18.7661 cv
350.145 18.8252 350.187 18.8721 350.246 18.9067 cv
350.306 18.9414 350.414 18.9585 350.572 18.9585 cv
350.572 19.0962 li
348.899 19.0962 li
348.899 18.9585 li
348.978 18.9585 li
349.136 18.9585 349.246 18.9346 349.309 18.8862 cv
349.37 18.8384 349.414 18.7671 349.438 18.6733 cv
349.446 18.6338 349.449 18.5176 349.449 18.3247 cv
349.449 17.1133 li
349.449 16.7397 349.431 16.4941 349.392 16.377 cv
349.353 16.2598 349.291 16.1719 349.206 16.1133 cv
349.122 16.0547 349.02 16.0254 348.9 16.0254 cv
348.778 16.0254 348.65 16.0581 348.519 16.1226 cv
348.387 16.1875 348.229 16.3179 348.044 16.5151 cv
348.044 18.3247 li
348.044 18.5571 348.057 18.7017 348.083 18.7583 cv
348.109 18.8154 348.157 18.8628 348.228 18.9014 cv
348.299 18.9395 348.421 18.9585 348.594 18.9585 cv
348.594 19.0962 li
346.906 19.0962 li
346.906 18.9585 li
347.057 18.9585 347.176 18.9351 347.262 18.8882 cv
347.312 18.8638 347.352 18.8164 347.381 18.7476 cv
347.41 18.6782 347.425 18.5376 347.425 18.3247 cv
347.425 15.231 li
347.425 14.8433 347.416 14.6045 347.397 14.5156 cv
347.379 14.4268 347.351 14.3662 347.312 14.334 cv
347.273 14.3018 347.222 14.2856 347.157 14.2856 cv
347.105 14.2856 347.021 14.3052 346.904 14.3452 cv
346.853 14.2075 li
347.873 13.7876 li
348.044 13.7876 li
cp
f
352.688 18.5991 mo
352.338 18.8716 352.117 19.0288 352.028 19.0713 cv
351.894 19.1338 351.751 19.165 351.6 19.165 cv
351.363 19.165 351.169 19.084 351.016 18.9224 cv
350.862 18.7603 350.786 18.5474 350.786 18.2837 cv
350.786 18.1172 350.823 17.9727 350.898 17.8506 cv
351 17.6812 351.177 17.522 351.43 17.3726 cv
351.682 17.2231 352.102 17.0415 352.688 16.8276 cv
352.688 16.6934 li
352.688 16.3535 352.634 16.1206 352.526 15.9937 cv
352.419 15.8672 352.262 15.8042 352.056 15.8042 cv
351.899 15.8042 351.775 15.8462 351.684 15.9312 cv
351.59 16.0156 351.543 16.1128 351.543 16.2222 cv
351.55 16.4385 li
351.55 16.5532 351.521 16.6416 351.462 16.7036 cv
351.403 16.7661 351.326 16.7969 351.231 16.7969 cv
351.139 16.7969 351.063 16.7646 351.004 16.6997 cv
350.945 16.6353 350.916 16.5464 350.916 16.4346 cv
350.916 16.2202 351.025 16.0234 351.245 15.8442 cv
351.464 15.6646 351.771 15.5747 352.168 15.5747 cv
352.472 15.5747 352.721 15.626 352.915 15.728 cv
353.062 15.8052 353.17 15.9258 353.239 16.0898 cv
353.284 16.1968 353.307 16.416 353.307 16.7466 cv
353.307 17.9077 li
353.307 18.2334 353.313 18.4331 353.325 18.5068 cv
353.338 18.5801 353.358 18.6294 353.388 18.6543 cv
353.416 18.6792 353.449 18.6914 353.487 18.6914 cv
353.526 18.6914 353.562 18.6826 353.592 18.6655 cv
353.645 18.6333 353.745 18.5425 353.896 18.3936 cv
353.896 18.6021 li
353.615 18.9771 353.348 19.165 353.093 19.165 cv
352.971 19.165 352.873 19.1221 352.801 19.0366 cv
352.729 18.9512 352.69 18.8052 352.688 18.5991 cv
cp
352.688 18.3569 mo
352.688 17.0566 li
352.311 17.2056 352.066 17.3115 351.956 17.3735 cv
351.759 17.4829 351.617 17.5972 351.532 17.7163 cv
351.447 17.8354 351.405 17.9658 351.405 18.1074 cv
351.405 18.2861 351.459 18.4346 351.566 18.5527 cv
351.674 18.6704 351.798 18.7295 351.938 18.7295 cv
352.128 18.7295 352.378 18.6055 352.688 18.3569 cv
cp
f
355.056 15.5747 mo
355.056 16.3462 li
355.34 15.832 355.632 15.5747 355.931 15.5747 cv
356.066 15.5747 356.179 15.6167 356.268 15.7002 cv
356.356 15.7837 356.4 15.8804 356.4 15.9907 cv
356.4 16.0879 356.368 16.1704 356.305 16.2378 cv
356.24 16.3052 356.164 16.3389 356.076 16.3389 cv
355.989 16.3389 355.893 16.2954 355.785 16.209 cv
355.678 16.1226 355.598 16.0791 355.546 16.0791 cv
355.501 16.0791 355.453 16.104 355.401 16.1538 cv
355.29 16.2563 355.175 16.4248 355.056 16.6597 cv
355.056 18.2944 li
355.056 18.4844 355.08 18.6284 355.127 18.7261 cv
355.159 18.7935 355.216 18.8496 355.298 18.8931 cv
355.38 18.937 355.498 18.9585 355.652 18.9585 cv
355.652 19.0962 li
353.902 19.0962 li
353.902 18.9585 li
354.076 18.9585 354.205 18.9312 354.289 18.8765 cv
354.351 18.8369 354.395 18.7734 354.419 18.6865 cv
354.432 18.644 354.438 18.5234 354.438 18.3247 cv
354.438 17.0034 li
354.438 16.6064 354.43 16.3701 354.413 16.2944 cv
354.397 16.2188 354.367 16.1636 354.324 16.1284 cv
354.28 16.0938 354.227 16.0767 354.162 16.0767 cv
354.085 16.0767 353.998 16.0952 353.901 16.1323 cv
353.864 15.9951 li
354.899 15.5747 li
355.056 15.5747 li
cp
f
358.425 18.5991 mo
358.074 18.8716 357.854 19.0288 357.765 19.0713 cv
357.63 19.1338 357.487 19.165 357.336 19.165 cv
357.1 19.165 356.905 19.084 356.752 18.9224 cv
356.6 18.7603 356.522 18.5474 356.522 18.2837 cv
356.522 18.1172 356.56 17.9727 356.635 17.8506 cv
356.736 17.6812 356.914 17.522 357.166 17.3726 cv
357.419 17.2231 357.838 17.0415 358.425 16.8276 cv
358.425 16.6934 li
358.425 16.3535 358.371 16.1206 358.263 15.9937 cv
358.155 15.8672 357.998 15.8042 357.792 15.8042 cv
357.636 15.8042 357.513 15.8462 357.421 15.9312 cv
357.326 16.0156 357.279 16.1128 357.279 16.2222 cv
357.286 16.4385 li
357.286 16.5532 357.257 16.6416 357.198 16.7036 cv
357.14 16.7661 357.063 16.7969 356.968 16.7969 cv
356.875 16.7969 356.8 16.7646 356.741 16.6997 cv
356.682 16.6353 356.652 16.5464 356.652 16.4346 cv
356.652 16.2202 356.763 16.0234 356.981 15.8442 cv
357.2 15.6646 357.508 15.5747 357.904 15.5747 cv
358.208 15.5747 358.457 15.626 358.651 15.728 cv
358.798 15.8052 358.906 15.9258 358.977 16.0898 cv
359.021 16.1968 359.044 16.416 359.044 16.7466 cv
359.044 17.9077 li
359.044 18.2334 359.05 18.4331 359.063 18.5068 cv
359.075 18.5801 359.096 18.6294 359.124 18.6543 cv
359.152 18.6792 359.186 18.6914 359.224 18.6914 cv
359.264 18.6914 359.298 18.6826 359.328 18.6655 cv
359.381 18.6333 359.481 18.5425 359.632 18.3936 cv
359.632 18.6021 li
359.352 18.9771 359.084 19.165 358.829 19.165 cv
358.707 19.165 358.609 19.1221 358.537 19.0366 cv
358.465 18.9512 358.427 18.8052 358.425 18.5991 cv
cp
358.425 18.3569 mo
358.425 17.0566 li
358.047 17.2056 357.803 17.3115 357.693 17.3735 cv
357.495 17.4829 357.354 17.5972 357.269 17.7163 cv
357.184 17.8354 357.142 17.9658 357.142 18.1074 cv
357.142 18.2861 357.195 18.4346 357.303 18.5527 cv
357.41 18.6704 357.534 18.7295 357.674 18.7295 cv
357.864 18.7295 358.114 18.6055 358.425 18.3569 cv
cp
f
362.694 17.7964 mo
362.603 18.248 362.423 18.5942 362.153 18.8345 cv
361.885 19.0752 361.588 19.1953 361.263 19.1953 cv
360.874 19.1953 360.536 19.0327 360.247 18.707 cv
359.959 18.3813 359.815 17.9414 359.815 17.3872 cv
359.815 16.8501 359.975 16.4136 360.294 16.0781 cv
360.613 15.7427 360.996 15.5747 361.443 15.5747 cv
361.779 15.5747 362.055 15.6636 362.271 15.8418 cv
362.487 16.0195 362.596 16.2041 362.596 16.396 cv
362.596 16.4902 362.564 16.5669 362.504 16.6255 cv
362.443 16.6836 362.358 16.7129 362.249 16.7129 cv
362.103 16.7129 361.993 16.6655 361.921 16.5703 cv
361.876 16.5176 361.847 16.4175 361.833 16.27 cv
361.819 16.1221 361.769 16.0093 361.682 15.9321 cv
361.595 15.8569 361.475 15.8193 361.32 15.8193 cv
361.072 15.8193 360.872 15.9116 360.721 16.0957 cv
360.519 16.3398 360.418 16.6626 360.418 17.064 cv
360.418 17.4727 360.519 17.8335 360.719 18.146 cv
360.919 18.4585 361.19 18.6147 361.531 18.6147 cv
361.775 18.6147 361.994 18.5332 362.188 18.3696 cv
362.325 18.2554 362.458 18.0469 362.588 17.7441 cv
362.694 17.7964 li
cp
f
364.077 14.5513 mo
364.077 15.6743 li
364.875 15.6743 li
364.875 15.9263 li
364.077 15.9341 li
364.077 18.1509 li
364.077 18.3721 364.108 18.5215 364.172 18.5986 cv
364.235 18.6758 364.316 18.7144 364.416 18.7144 cv
364.498 18.7144 364.577 18.6885 364.654 18.6372 cv
364.731 18.5854 364.791 18.5093 364.833 18.4087 cv
364.979 18.4087 li
364.892 18.6543 364.769 18.8394 364.608 18.9634 cv
364.449 19.0874 364.285 19.1499 364.116 19.1499 cv
364.001 19.1499 363.89 19.1177 363.779 19.0542 cv
363.67 18.9907 363.589 18.8994 363.537 18.7808 cv
363.484 18.6626 363.458 18.4795 363.458 18.2324 cv
363.458 15.9263 li
362.916 15.9263 li
362.916 15.8071 li
363.054 15.7534 363.193 15.6616 363.337 15.5322 cv
363.48 15.4028 363.609 15.249 363.722 15.0698 cv
363.779 14.9751 363.859 14.8022 363.963 14.5513 cv
364.077 14.5513 li
cp
f
365.674 16.9653 mo
365.671 17.4702 365.794 17.8662 366.043 18.1538 cv
366.292 18.4409 366.584 18.5845 366.92 18.5845 cv
367.144 18.5845 367.338 18.5234 367.503 18.4019 cv
367.669 18.2798 367.808 18.0684 367.919 17.7671 cv
368.034 17.8418 li
367.981 18.186 367.83 18.4976 367.579 18.7769 cv
367.328 19.0562 367.015 19.1953 366.637 19.1953 cv
366.228 19.1953 365.876 19.0361 365.584 18.7168 cv
365.293 18.3979 365.146 17.9688 365.146 17.4302 cv
365.146 16.8462 365.296 16.3911 365.596 16.0649 cv
365.895 15.7383 366.271 15.5747 366.723 15.5747 cv
367.104 15.5747 367.419 15.7012 367.665 15.9531 cv
367.911 16.2056 368.034 16.5425 368.034 16.9653 cv
365.674 16.9653 li
cp
365.674 16.7515 mo
367.255 16.7515 li
367.242 16.5327 367.216 16.3784 367.177 16.2896 cv
367.114 16.1504 367.021 16.041 366.898 15.9614 cv
366.775 15.8818 366.646 15.8423 366.513 15.8423 cv
366.307 15.8423 366.122 15.9224 365.959 16.0825 cv
365.796 16.2427 365.701 16.4653 365.674 16.7515 cv
cp
f
369.401 15.5747 mo
369.401 16.3462 li
369.686 15.832 369.977 15.5747 370.275 15.5747 cv
370.411 15.5747 370.523 15.6167 370.612 15.7002 cv
370.701 15.7837 370.745 15.8804 370.745 15.9907 cv
370.745 16.0879 370.714 16.1704 370.649 16.2378 cv
370.586 16.3052 370.51 16.3389 370.421 16.3389 cv
370.335 16.3389 370.238 16.2954 370.13 16.209 cv
370.022 16.1226 369.942 16.0791 369.891 16.0791 cv
369.847 16.0791 369.798 16.104 369.746 16.1538 cv
369.635 16.2563 369.52 16.4248 369.401 16.6597 cv
369.401 18.2944 li
369.401 18.4844 369.425 18.6284 369.472 18.7261 cv
369.504 18.7935 369.562 18.8496 369.644 18.8931 cv
369.726 18.937 369.843 18.9585 369.997 18.9585 cv
369.997 19.0962 li
368.248 19.0962 li
368.248 18.9585 li
368.421 18.9585 368.55 18.9312 368.634 18.8765 cv
368.696 18.8369 368.739 18.7734 368.764 18.6865 cv
368.776 18.644 368.782 18.5234 368.782 18.3247 cv
368.782 17.0034 li
368.782 16.6064 368.774 16.3701 368.759 16.2944 cv
368.742 16.2188 368.713 16.1636 368.669 16.1284 cv
368.626 16.0938 368.571 16.0767 368.507 16.0767 cv
368.431 16.0767 368.344 16.0952 368.247 16.1323 cv
368.21 15.9951 li
369.244 15.5747 li
369.401 15.5747 li
cp
f
373.045 15.5747 mo
373.045 16.7358 li
372.923 16.7358 li
372.828 16.3721 372.708 16.1245 372.561 15.9932 cv
372.413 15.8618 372.226 15.7964 371.997 15.7964 cv
371.824 15.7964 371.684 15.8423 371.577 15.9341 cv
371.471 16.0259 371.418 16.1279 371.418 16.2397 cv
371.418 16.3789 371.457 16.498 371.535 16.5972 cv
371.611 16.6992 371.768 16.8071 372.004 16.9214 cv
372.548 17.186 li
373.052 17.4321 373.305 17.7563 373.305 18.1587 cv
373.305 18.4697 373.187 18.7202 372.952 18.9102 cv
372.718 19.1006 372.454 19.1953 372.164 19.1953 cv
371.955 19.1953 371.716 19.1592 371.448 19.0864 cv
371.366 19.0625 371.299 19.0503 371.246 19.0503 cv
371.189 19.0503 371.145 19.0811 371.112 19.1421 cv
370.99 19.1421 li
370.99 17.9199 li
371.112 17.9199 li
371.182 18.269 371.315 18.5317 371.512 18.7085 cv
371.708 18.8857 371.929 18.9741 372.172 18.9741 cv
372.344 18.9741 372.483 18.9238 372.592 18.8232 cv
372.7 18.7227 372.755 18.6016 372.755 18.4604 cv
372.755 18.2891 372.694 18.145 372.572 18.0283 cv
372.451 17.9116 372.21 17.7646 371.85 17.5864 cv
371.489 17.4087 371.253 17.2476 371.142 17.103 cv
371.03 16.9609 370.975 16.7817 370.975 16.5649 cv
370.975 16.2837 371.071 16.0483 371.264 15.8589 cv
371.456 15.6694 371.705 15.5747 372.01 15.5747 cv
372.145 15.5747 372.307 15.604 372.498 15.6626 cv
372.625 15.7007 372.709 15.7202 372.751 15.7202 cv
372.791 15.7202 372.822 15.7109 372.845 15.6934 cv
372.867 15.6753 372.893 15.6362 372.923 15.5747 cv
373.045 15.5747 li
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
335.55 .63623 mo
381.381 .63623 li
381.381 23.5518 li
335.55 23.5518 li
335.55 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
58.1968 7.6958 mo
56.7393 7.6958 li
56.7393 7.58105 li
57.019 7.54395 57.2417 7.47705 57.4077 7.38037 cv
57.5732 7.28369 57.7051 7.146 57.8022 6.96729 cv
57.8999 6.78857 57.9487 6.604 57.9487 6.41309 cv
57.9487 6.19678 57.8828 6.01807 57.751 5.87695 cv
57.6191 5.73584 57.4692 5.66504 57.3013 5.66504 cv
57.1729 5.66504 57.0557 5.70996 56.9497 5.79932 cv
56.7939 5.92822 56.5864 6.23438 56.3271 6.71826 cv
56.1157 7.11279 55.9531 7.38232 55.8403 7.52637 cv
55.7271 7.67041 55.5938 7.78125 55.4404 7.85938 cv
55.2871 7.93701 55.1265 7.97607 54.9585 7.97607 cv
54.6392 7.97607 54.3638 7.85205 54.1323 7.604 cv
53.9014 7.35596 53.7856 7.03711 53.7856 6.64697 cv
53.7856 6.5249 53.7949 6.40967 53.814 6.30176 cv
53.8242 6.2373 53.8623 6.104 53.9287 5.90186 cv
53.9946 5.69971 54.0273 5.57178 54.0273 5.51758 cv
54.0273 5.46582 54.0117 5.4248 53.9805 5.39453 cv
53.9487 5.36475 53.8838 5.34229 53.7856 5.32764 cv
53.7856 5.21338 li
55.2305 5.21338 li
55.2305 5.32764 li
54.9282 5.38184 54.7017 5.45459 54.5513 5.54541 cv
54.4009 5.63721 54.2764 5.77637 54.1768 5.96436 cv
54.0771 6.15186 54.0273 6.35791 54.0273 6.58203 cv
54.0273 6.84131 54.0962 7.0459 54.2334 7.19629 cv
54.3706 7.34668 54.5332 7.42188 54.7202 7.42188 cv
54.8242 7.42188 54.9292 7.39355 55.0356 7.33691 cv
55.1416 7.27979 55.2407 7.19141 55.332 7.07178 cv
55.3945 6.99121 55.5264 6.77002 55.7275 6.40771 cv
55.9287 6.0459 56.0898 5.78857 56.21 5.63525 cv
56.3301 5.48242 56.4629 5.3667 56.6079 5.2876 cv
56.7529 5.2085 56.9126 5.16846 57.0869 5.16846 cv
57.3892 5.16846 57.6499 5.28516 57.8687 5.51807 cv
58.0874 5.75049 58.1968 6.04639 58.1968 6.40625 cv
58.1968 6.63037 58.1421 6.86865 58.0322 7.12012 cv
57.981 7.23633 57.9551 7.31836 57.9551 7.36621 cv
57.9551 7.42041 57.9707 7.46436 58.0029 7.49854 cv
58.0352 7.53271 58.0996 7.56055 58.1968 7.58105 cv
58.1968 7.6958 li
cp
f
56.4526 8.19873 mo
56.8027 9.07373 li
56.8027 9.19189 li
56.1426 9.19189 li
56.3916 9.33887 56.5659 9.48682 56.6655 9.63525 cv
56.7656 9.78369 56.8154 9.93994 56.8154 10.1035 cv
56.8154 10.3901 56.7036 10.6284 56.48 10.8198 cv
56.2065 11.0542 55.8501 11.1714 55.4111 11.1714 cv
54.9199 11.1714 54.5142 11.0303 54.1929 10.748 cv
53.9297 10.5156 53.7983 10.2231 53.7983 9.87012 cv
53.7983 9.7168 53.8198 9.58398 53.8633 9.47168 cv
53.894 9.38867 53.9556 9.29541 54.0483 9.19189 cv
53.1807 9.19189 li
52.9849 9.19189 52.8604 9.20361 52.8071 9.22754 cv
52.7539 9.25146 52.7119 9.29297 52.6802 9.35254 cv
52.6489 9.41162 52.6333 9.51953 52.6333 9.67529 cv
52.519 9.67529 li
52.519 8.17969 li
52.6333 8.17969 li
52.6333 8.25781 li
52.6313 8.37207 52.6528 8.47021 52.6982 8.55127 cv
52.7212 8.59082 52.7578 8.62158 52.8081 8.64307 cv
52.8589 8.66504 52.9873 8.67627 53.1938 8.67627 cv
55.8989 8.67627 li
56.0815 8.67627 56.1973 8.66797 56.2461 8.65137 cv
56.2954 8.63477 56.3325 8.6084 56.3574 8.57227 cv
56.3818 8.53613 56.3945 8.48682 56.3945 8.4248 cv
56.3945 8.37549 56.3799 8.3125 56.3511 8.23584 cv
56.4526 8.19873 li
cp
55.9585 9.19189 mo
54.8926 9.19189 li
54.6621 9.19189 54.5107 9.20117 54.438 9.21973 cv
54.3174 9.24854 54.2114 9.31982 54.1201 9.43311 cv
54.0288 9.5459 53.9829 9.68896 53.9829 9.86084 cv
53.9829 10.0684 54.064 10.2368 54.2261 10.3652 cv
54.438 10.5337 54.7358 10.6177 55.1201 10.6177 cv
55.5566 10.6177 55.8921 10.522 56.127 10.3311 cv
56.2891 10.1982 56.3701 10.0405 56.3701 9.85791 cv
56.3701 9.7583 56.3452 9.65967 56.2949 9.56201 cv
56.2578 9.4873 56.1455 9.36377 55.9585 9.19189 cv
cp
f
54.2954 13.0874 mo
54.0684 12.7949 53.9375 12.6118 53.9019 12.5371 cv
53.8496 12.4253 53.8237 12.3062 53.8237 12.1797 cv
53.8237 11.9829 53.8911 11.8208 54.0259 11.6934 cv
54.1606 11.5659 54.3384 11.5024 54.5581 11.5024 cv
54.6973 11.5024 54.8174 11.5332 54.9189 11.5952 cv
55.0601 11.6807 55.1929 11.8281 55.3174 12.0386 cv
55.4419 12.2485 55.5933 12.5981 55.7715 13.0874 cv
55.8833 13.0874 li
56.1665 13.0874 56.3608 13.0425 56.4663 12.9526 cv
56.5718 12.8628 56.6245 12.7319 56.6245 12.5605 cv
56.6245 12.4302 56.5894 12.3267 56.519 12.2505 cv
56.4482 12.1719 56.3672 12.1328 56.2764 12.1328 cv
56.0957 12.1387 li
56.0005 12.1387 55.9268 12.1143 55.875 12.0654 cv
55.8232 12.0166 55.7969 11.9521 55.7969 11.873 cv
55.7969 11.7959 55.8242 11.7329 55.8779 11.6841 cv
55.9321 11.6348 56.0059 11.6104 56.0991 11.6104 cv
56.2778 11.6104 56.4419 11.7017 56.5913 11.8843 cv
56.7407 12.0669 56.8154 12.3232 56.8154 12.6533 cv
56.8154 12.9067 56.7729 13.1143 56.688 13.2759 cv
56.6235 13.3984 56.5229 13.4888 56.3862 13.5469 cv
56.2974 13.5845 56.1147 13.603 55.8389 13.603 cv
54.8716 13.603 li
54.6001 13.603 54.4336 13.6079 54.3721 13.6187 cv
54.311 13.6289 54.27 13.646 54.2495 13.6699 cv
54.229 13.6938 54.2183 13.7217 54.2183 13.7529 cv
54.2183 13.7861 54.2256 13.8149 54.2402 13.8403 cv
54.2671 13.8838 54.3428 13.9683 54.4668 14.0933 cv
54.293 14.0933 li
53.98 13.8599 53.8237 13.6372 53.8237 13.4248 cv
53.8237 13.3228 53.8594 13.2412 53.9307 13.1812 cv
54.002 13.1206 54.1235 13.0894 54.2954 13.0874 cv
cp
54.4971 13.0874 mo
55.5806 13.0874 li
55.4565 12.7725 55.3687 12.5693 55.3169 12.4775 cv
55.2256 12.313 55.1304 12.1948 55.0313 12.124 cv
54.9316 12.0532 54.8232 12.0181 54.7051 12.0181 cv
54.5562 12.0181 54.4326 12.0625 54.334 12.1523 cv
54.2358 12.2422 54.1865 12.3452 54.1865 12.4619 cv
54.1865 12.6206 54.29 12.8286 54.4971 13.0874 cv
cp
f
54.9644 16.6201 mo
54.5879 16.5435 54.2998 16.3931 54.0991 16.1694 cv
53.8984 15.9458 53.7983 15.6978 53.7983 15.4263 cv
53.7983 15.103 53.9341 14.8213 54.2051 14.5811 cv
54.4766 14.3403 54.8433 14.2202 55.3052 14.2202 cv
55.7529 14.2202 56.1162 14.3535 56.396 14.6196 cv
56.6758 14.8857 56.8154 15.2051 56.8154 15.5776 cv
56.8154 15.8569 56.7412 16.0869 56.5933 16.2671 cv
56.4448 16.4473 56.291 16.5371 56.1313 16.5371 cv
56.0527 16.5371 55.9888 16.5122 55.9399 16.4614 cv
55.8916 16.4106 55.8672 16.3394 55.8672 16.2485 cv
55.8672 16.1265 55.9067 16.0352 55.9858 15.9751 cv
56.0298 15.938 56.1133 15.9136 56.2363 15.9019 cv
56.3594 15.8906 56.4531 15.8486 56.5181 15.7764 cv
56.5806 15.7036 56.6118 15.6035 56.6118 15.4751 cv
56.6118 15.2681 56.5352 15.1011 56.3813 14.9746 cv
56.1777 14.8071 55.9092 14.7231 55.5747 14.7231 cv
55.2344 14.7231 54.9336 14.8066 54.6729 14.9736 cv
54.4126 15.1406 54.2822 15.3662 54.2822 15.6504 cv
54.2822 15.8535 54.3501 16.0361 54.4868 16.1982 cv
54.5815 16.312 54.7554 16.4233 55.0078 16.5308 cv
54.9644 16.6201 li
cp
f
55.6572 17.3901 mo
55.2363 17.3882 54.9058 17.4907 54.6665 17.6978 cv
54.4272 17.9053 54.3076 18.1489 54.3076 18.4287 cv
54.3076 18.6152 54.3584 18.7773 54.46 18.915 cv
54.5615 19.0527 54.7378 19.1685 54.9888 19.2617 cv
54.9263 19.3569 li
54.6396 19.314 54.3799 19.1875 54.1475 18.9785 cv
53.9146 18.7695 53.7983 18.5073 53.7983 18.1929 cv
53.7983 17.8516 53.9312 17.5591 54.1973 17.3159 cv
54.4629 17.0728 54.8208 16.9512 55.2695 16.9512 cv
55.7559 16.9512 56.1353 17.0757 56.4072 17.3252 cv
56.6797 17.5747 56.8154 17.8877 56.8154 18.2642 cv
56.8154 18.583 56.7104 18.8447 56.5 19.0498 cv
56.29 19.2549 56.0093 19.3569 55.6572 19.3569 cv
55.6572 17.3901 li
cp
55.8354 17.3901 mo
55.8354 18.708 li
56.0176 18.6978 56.1455 18.6758 56.2202 18.6426 cv
56.3359 18.5908 56.4272 18.5137 56.4932 18.4111 cv
56.5596 18.3086 56.5928 18.2012 56.5928 18.0894 cv
56.5928 17.9175 56.5259 17.7637 56.3926 17.6279 cv
56.2593 17.4922 56.0732 17.4131 55.8354 17.3901 cv
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
49.1069 .63623 mo
60.5645 .63623 li
60.5645 23.5518 li
49.1069 23.5518 li
49.1069 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
386.155 4.24561 mo
386.27 4.24561 li
386.27 4.40381 li
386.27 4.58154 386.326 4.70801 386.44 4.78223 cv
386.509 4.82764 386.662 4.85059 386.899 4.85059 cv
389.631 4.85059 li
389.894 4.85059 390.058 4.82178 390.124 4.76367 cv
390.215 4.68311 390.261 4.56299 390.261 4.40381 cv
390.261 4.24561 li
390.375 4.24561 li
390.375 5.96143 li
390.375 6.59131 390.304 7.07031 390.16 7.39893 cv
390.018 7.72754 389.778 7.9917 389.444 8.19141 cv
389.11 8.3916 388.725 8.4917 388.287 8.4917 cv
387.7 8.4917 387.209 8.31299 386.814 7.95703 cv
386.375 7.55713 386.155 6.94775 386.155 6.12939 cv
386.155 4.24561 li
cp
386.465 5.44873 mo
386.407 5.71143 386.378 5.93164 386.378 6.10986 cv
386.378 6.58936 386.547 6.9873 386.885 7.30371 cv
387.223 7.62012 387.681 7.77832 388.259 7.77832 cv
388.841 7.77832 389.3 7.62012 389.636 7.30371 cv
389.972 6.9873 390.14 6.58105 390.14 6.08447 cv
390.14 5.89844 390.109 5.68652 390.05 5.44873 cv
386.465 5.44873 li
cp
f
387.931 9.29346 mo
387.51 9.2915 387.18 9.39404 386.94 9.60107 cv
386.701 9.80859 386.581 10.0522 386.581 10.3315 cv
386.581 10.5181 386.632 10.6802 386.733 10.8184 cv
386.835 10.9561 387.012 11.0718 387.263 11.165 cv
387.2 11.2603 li
386.913 11.2168 386.654 11.0908 386.421 10.8813 cv
386.188 10.6724 386.072 10.4106 386.072 10.0962 cv
386.072 9.75439 386.205 9.4624 386.471 9.21924 cv
386.737 8.97607 387.095 8.85449 387.544 8.85449 cv
388.03 8.85449 388.409 8.979 388.682 9.22852 cv
388.953 9.47803 389.09 9.79102 389.09 10.1675 cv
389.09 10.4863 388.984 10.748 388.774 10.9531 cv
388.564 11.1577 388.283 11.2603 387.931 11.2603 cv
387.931 9.29346 li
cp
388.109 9.29346 mo
388.109 10.6113 li
388.291 10.6006 388.42 10.5791 388.494 10.5459 cv
388.61 10.4941 388.701 10.417 388.768 10.3145 cv
388.833 10.2119 388.866 10.1045 388.866 9.99268 cv
388.866 9.8208 388.8 9.66699 388.666 9.53125 cv
388.533 9.39551 388.347 9.31641 388.109 9.29346 cv
cp
f
390.579 12.521 mo
386.798 12.521 li
386.621 12.521 386.503 12.5337 386.445 12.5596 cv
386.388 12.5854 386.344 12.625 386.314 12.6787 cv
386.284 12.7324 386.27 12.8325 386.27 12.979 cv
386.155 12.979 li
386.155 11.585 li
386.27 11.585 li
386.27 11.7158 386.283 11.8052 386.31 11.8525 cv
386.337 11.9004 386.381 11.9375 386.442 11.9648 cv
386.505 11.9917 386.623 12.0054 386.798 12.0054 cv
389.389 12.0054 li
389.706 12.0054 389.901 11.998 389.975 11.9834 cv
390.047 11.9692 390.097 11.9458 390.124 11.9136 cv
390.15 11.8818 390.164 11.8408 390.164 11.7915 cv
390.164 11.7378 390.147 11.6694 390.114 11.5869 cv
390.229 11.5342 li
390.579 12.3813 li
390.579 12.521 li
cp
f
387.931 13.6729 mo
387.51 13.6709 387.18 13.7734 386.94 13.9805 cv
386.701 14.188 386.581 14.4312 386.581 14.7109 cv
386.581 14.8975 386.632 15.0601 386.733 15.1978 cv
386.835 15.3354 387.012 15.4512 387.263 15.5444 cv
387.2 15.6396 li
386.913 15.5962 386.654 15.4702 386.421 15.2612 cv
386.188 15.0518 386.072 14.79 386.072 14.4756 cv
386.072 14.1343 386.205 13.8418 386.471 13.5986 cv
386.737 13.3555 387.095 13.2339 387.544 13.2339 cv
388.03 13.2339 388.409 13.3584 388.682 13.6079 cv
388.953 13.8569 389.09 14.1704 389.09 14.5469 cv
389.09 14.8657 388.984 15.1274 388.774 15.3325 cv
388.564 15.5371 388.283 15.6396 387.931 15.6396 cv
387.931 13.6729 li
cp
388.109 13.6729 mo
388.109 14.9907 li
388.291 14.98 388.42 14.9585 388.494 14.9253 cv
388.61 14.8735 388.701 14.7964 388.768 14.6938 cv
388.833 14.5913 388.866 14.4839 388.866 14.3721 cv
388.866 14.2002 388.8 14.0464 388.666 13.9106 cv
388.533 13.7749 388.347 13.6958 388.109 13.6729 cv
cp
f
389.942 16.7476 mo
389.007 16.7476 li
389.007 17.4126 li
388.797 17.4126 li
388.79 16.7476 li
386.942 16.7476 li
386.759 16.7476 386.634 16.7739 386.569 16.8267 cv
386.505 16.8794 386.474 16.9473 386.474 17.0298 cv
386.474 17.0981 386.495 17.1646 386.538 17.2285 cv
386.581 17.2925 386.644 17.3423 386.728 17.3774 cv
386.728 17.4985 li
386.523 17.4258 386.369 17.3232 386.266 17.1904 cv
386.162 17.0576 386.11 16.9204 386.11 16.7793 cv
386.11 16.6841 386.137 16.5908 386.19 16.4995 cv
386.243 16.4082 386.319 16.3408 386.418 16.2974 cv
386.517 16.2534 386.669 16.2319 386.875 16.2319 cv
388.797 16.2319 li
388.797 15.7798 li
388.896 15.7798 li
388.94 15.894 389.018 16.0112 389.125 16.1309 cv
389.232 16.2505 389.361 16.3569 389.511 16.4512 cv
389.589 16.4995 389.733 16.5664 389.942 16.6519 cv
389.942 16.7476 li
cp
f
387.931 18.0522 mo
387.51 18.0503 387.18 18.1528 386.94 18.3599 cv
386.701 18.5674 386.581 18.811 386.581 19.0903 cv
386.581 19.2769 386.632 19.439 386.733 19.5771 cv
386.835 19.7148 387.012 19.8306 387.263 19.9238 cv
387.2 20.019 li
386.913 19.9756 386.654 19.8496 386.421 19.6401 cv
386.188 19.4312 386.072 19.1694 386.072 18.855 cv
386.072 18.5132 386.205 18.2212 386.471 17.978 cv
386.737 17.7349 387.095 17.6133 387.544 17.6133 cv
388.03 17.6133 388.409 17.7378 388.682 17.9873 cv
388.953 18.2368 389.09 18.5498 389.09 18.9263 cv
389.09 19.2451 388.984 19.5068 388.774 19.7119 cv
388.564 19.9165 388.283 20.019 387.931 20.019 cv
387.931 18.0522 li
cp
388.109 18.0522 mo
388.109 19.3701 li
388.291 19.3594 388.42 19.3379 388.494 19.3047 cv
388.61 19.2529 388.701 19.1758 388.768 19.0732 cv
388.833 18.9707 388.866 18.8633 388.866 18.7515 cv
388.866 18.5796 388.8 18.4258 388.666 18.29 cv
388.533 18.1543 388.347 18.0752 388.109 18.0522 cv
cp
f
gsave
0 -.000488281 mo
396.001 -.000488281 li
396.001 37.3018 li
0 37.3018 li
0 -.000488281 li
cp
clp
.63654 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
381.381 .63623 mo
392.838 .63623 li
392.838 23.5518 li
381.381 23.5518 li
381.381 .63623 li
cp
.746 .676 .668 .898 cmyk
@
grestore
41.27 28.6606 mo
41.4141 28.3188 41.5967 28.0552 41.8169 27.8696 cv
42.0376 27.6841 42.312 27.5913 42.6406 27.5913 cv
43.0469 27.5913 43.3579 27.7227 43.5747 27.9863 cv
43.7388 28.1826 43.8213 28.3926 43.8213 28.6162 cv
43.8213 28.9839 43.5894 29.3638 43.126 29.7563 cv
43.438 29.8784 43.6738 30.0522 43.8335 30.2783 cv
43.9932 30.5044 44.0732 30.7705 44.0732 31.0757 cv
44.0732 31.5132 43.9336 31.8921 43.6548 32.2124 cv
43.2915 32.6299 42.7646 32.8389 42.0747 32.8389 cv
41.7339 32.8389 41.5015 32.7964 41.3784 32.7119 cv
41.2549 32.627 41.1934 32.5361 41.1934 32.439 cv
41.1934 32.3672 41.2227 32.3037 41.2813 32.249 cv
41.3398 32.1938 41.4106 32.1665 41.4927 32.1665 cv
41.5552 32.1665 41.6187 32.1768 41.6836 32.1968 cv
41.7256 32.2095 41.8218 32.2554 41.9712 32.335 cv
42.1211 32.4141 42.2246 32.4614 42.2817 32.4766 cv
42.374 32.5044 42.4727 32.5181 42.5771 32.5181 cv
42.8315 32.5181 43.0527 32.4194 43.2407 32.2231 cv
43.4292 32.0269 43.5234 31.7939 43.5234 31.5254 cv
43.5234 31.3286 43.4795 31.1372 43.3921 30.9507 cv
43.3276 30.8115 43.2563 30.7056 43.1792 30.6333 cv
43.0718 30.5342 42.9248 30.4438 42.7373 30.3628 cv
42.5503 30.2822 42.3599 30.2417 42.165 30.2417 cv
42.0454 30.2417 li
42.0454 30.127 li
42.2422 30.1021 42.439 30.0317 42.6367 29.9146 cv
42.835 29.7979 42.9785 29.6572 43.0679 29.4932 cv
43.1577 29.3291 43.2026 29.1489 43.2026 28.9526 cv
43.2026 28.6968 43.1221 28.4897 42.9614 28.332 cv
42.8008 28.1743 42.6006 28.0952 42.3613 28.0952 cv
41.9751 28.0952 41.6523 28.3037 41.3931 28.7202 cv
41.27 28.6606 li
cp
f
45.5933 28.187 mo
46.8291 27.5913 li
46.9531 27.5913 li
46.9531 31.8608 li
46.9531 32.1455 46.9648 32.3228 46.9883 32.3926 cv
47.0122 32.4624 47.0615 32.5161 47.1367 32.5537 cv
47.2119 32.5913 47.3643 32.6123 47.5947 32.6172 cv
47.5947 32.7549 li
45.6851 32.7549 li
45.6851 32.6172 li
45.9238 32.6123 46.0781 32.5918 46.1475 32.5557 cv
46.2173 32.5195 46.2656 32.4707 46.293 32.4097 cv
46.3203 32.3481 46.334 32.1655 46.334 31.8608 cv
46.334 29.1265 li
46.334 28.7583 46.3218 28.522 46.2969 28.4175 cv
46.2793 28.3374 46.2476 28.2793 46.2012 28.2417 cv
46.1553 28.2046 46.0996 28.186 46.0347 28.186 cv
45.9424 28.186 45.814 28.2246 45.6494 28.3013 cv
45.5933 28.187 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (006x002.eps)%%CreationDate: 26/05/15 5:45 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l$Dn[dkEa/^c=XmP)oj[0A-Ybm/+MP"Hm_Z!!1Noe*i@dfLMd$Ct[I\/H&>i>]]Yi"Nn$9;Jdm`8a5kZo=%Sr2*Npfs'87>%P*FI,1TB'gIpGjGdlXtDC<'[.CYH3#"gaA$BV`"t[3USoF=jOCQ;$-c2W&tuX,ZO=]D5LpF:-9=Ze\bV(B,pFP)&-0nt_egXk)g_%s!0PhjgVE]3kq^[QYQ2.WS.8'GE]>&PlN3_c^V\WHKFAbqmG-a8uf</@.fpgH.a?`O_Wi:Jp//Pp"rC7KN)-Wm!b/=*I(sUe*lJM%DO1cboE73X35"&`4%Q%2^Y/Ljl:7u*D3qlBB&bV`RVXoehrXPJH!MWo)7#D^D$?P;<52Z1EjnY\Ue5r6-XER@mWV]p%$HoS%.ZYA%P.CfC9Kk-HFk+6Aec.0HGH0as[>c$G\%Ch2rujaq22t9FrPU'r^\)@=Z;KqNhPgL\&OhK"9!qD4F5AS#b9(O'U]U9($XAqN+4W!3%oOe%<`kI\EGRJ$h%a'9&gPA"+i4)d(>VrWt0,GAPbc6D3-;Dt7RM$bg3@el:fd;pas!n:j99j>a<H[#^h+qhk.YT?t>:,c;'/FdP%mFk(4Z"/u_FI^eHG-0cLW2V$or1LsL>/L:tru_,4:seT1)f-LI`!V9;4bUN[c`r%Z:I92`EfK!Q<_0p"Emg@M65khm\Q`Aa4@!:9%ec-sTs6]r^8`ZMD_P^hXVes=aTtmA%$@c%jSuO8&<E4EM.`'m7Q=3$-_gl*K!Mp2,8f:*t`9XdI-tD".`jUGAi%L>#D(#SFi"J]t%$;da!J2[i>GZ#qTR8O?_Q:cl4DjO)c]MualYfGC'ljpO\:Z5%I>U@l(T25m7"J8Kt`l(B)cX901$"[L4n-S.;R)!oS9^iA'?psJj%2'JQqAf),-_RSPX5[d@5-=RYCLJffYpk1E!'#=;?5gL%_Ldf5pI,^VTEpPs_*W(Sn6dPQJnIkU-9#:;\'5GB%`)5PNS2'dHV-n[u%L(Ps2/rU<)i>7F_k8ummk5^'/-jAX`:RjkL'#Z</%kVf?J=^iYiH'bP6``X(`#H`)NZ<BV4i`"[]3$k]0.as>5oCL[Vb@pJ]T&]+%V_C=0KMk@u0L!D]^'gQ0#"FqMF3<XXK:'OlOLdF]F'@PP#!GIK6!E2o_<2O&NkIf]A%ROUkW,7I4uVahPiAfTmJ&k/a+)`_j@l@]%S9)UXeki+@OFCJQa*//1cE/^3EBLe=O4;G=hPEG]gSH(=l0^*D/A(KR4lVi^[p<h>^@M9oG-PA$;jJa+&,r;&PhA8i_'eYXr!/)f%rjdOK?QuW<#]]n(5L[R.mU,m)=npaWGhX#2Qd=\*pFlO#gr/+<?i66](Q/Q=s5Leq/c>#8`IF'B&*5gq*IQkZic"f(s,un$>!^X/%QEHTDpn.OuGlR%aqs/U#8;ed:79<)M8TW(3jlnR,XIHlI8n#9gf(i6/SA&jE[u?smpb$F8p@em5NP?&9Gq3gL-[nRQ=[X,)Khm't%rtG'Ai>YmZZr"](r%269>L'>OhBm0.p^<d5D6+1u7sJ(UkFGYY"E4Gr9?(!f\(ip]P&A%n09.i,;64X)\VBkS89NJ<K(dt;7-r=i%>I4Td2<YeBS`Pm`dR;mMs0QndH:NF`*9X[D=p!H3;GJ2#:$'&TXMET'"FZd5#dMCi7c.&<]^iW_DWjV&P8*21+T](I5+cETI.?Z]%+iHC$$esVWkBQ*,M1;cMi#G571W(N;c.b/F@:#Tj52Z>\6I1$rg>9Aqrka'S?F$!*&O-PF.%\:qQ8s-XmG?6JooM0d17CJ,_0Sj9%!d`/XbO`2:#34fflj_)AJ8o<h%cu4$T.cPCh7r_Cp&R/flf\6?Qfn&4;41Wb*o#iTL#_a<7:f(_jE,p8o`nA:it@k(:=\ETQ1G$K%+8dEo(&em0Rn4Dd:3^KtbNktm>;5KLE__\7q=8J,d^__F[]^JUQi?a72]0gBHLGlhYAW8p/s1MBIBRbWr?!nZ?^(9>i4?c-2nZL5%oHsC[FQJbe3PGsohc%#5CYj\M.=q*XPomdh^>HO!S*5Ns[umS7CCdN$W=*<3XGoF"m$32hne'dQ538#'C<8QpJNHil1RI]A^?MsU%j;H'[8sD:WnWKF6;<HeTe-<'&6Cr;A=`3Q,cR#`63S%H\UMjt[A$\">O,_(6C2BA*rF<h[>?k><16pHV+PuqVEYPmZd!l^EE[;Ea%e2OoZF(Fd;b@tj@-ip#XHE0mD:B>np1r$l3e)<KDPBO:hr4lsjGP^C5gAPl^4,!T^5&-8/[0F,h&kDSNomB[;-',Lhc/7)ij1UkJ%bu^@;e`902r'lPiO'hodhn#6:/-EE>c@9WcC:7A_AKiWSe][>p&g*:'kth;fs4bNXHaE\<^5gRB`a@8BZR&T:5g#'Yo"*Uoorn4f%?>c"^8IBZV5,eEKSs0PAgq$cnN(U/<:5^6R^-[bQ)Mfda4GqN_\bhfMXB-@+N`.n9oQD3_rTcOp"(tXr\_6uLHmUM8c+6iUpQ8B9%"&gV4s*(hi6=4CG2\89g/[5BVQLaG2^TJ;L3kPXenD@JtTj4eQ52,,LBC.:LJUloY9DE<7_YX0,[99\U^0Q$t+=H8o\+Wk+T)[X2%<kkDE")PX%)APSp<4]WRD18s%q]^=b=`.5RS__U)/U?b`W':q%/BZVa`G"4GitLq%GQ4gI4,MaAU\UMdrK1>Wbha#t=8o=G+#D$o%;>Ihm>Y*r$CYp^!'NRUo*[`5q"TK\'c4\nU^7X>$Gq"%12u0^K^AK.Is!2/)H'l6oP`ca_^,\i:hu'@7aJ%6j:*anV?1O?UO:97u%?f+/@Pj;=9pp:hbYDKKC&Em%?dBbuVns28gF;j+\%>)G!;OrWQSh\Rn_p"Asi?KU!W94+h?rE*t(fEB[/)Qa\NW,I.^WCT7YM'q'%UYPj<rg*4fm]9TpHaEnA=?ID"om229,gjjEUnAE&Y#K<tgW/dOSLQ.X]/_u5C0%@Arn5C#CS&o*H++54J+gY7o`ckL#TjLBGPGM6%o=rH@?WOs;k'"j#4HI+(\(K/7^>1F%TY*G_Y'.u'JrA#<+:m(T^WPqIq6^^eHC]OQ-iP4V_uD&!QJF<7T='!A?#?f$5#)Xr'&D9E%^&E2KUC6]k04"Uce1$$G">9RYT%M[_o(EpWkq)e`\"g:YNQs>JWm5WU;5)=Ys6__RA*BHpqC(4YhL7QBk4cW5Gb/:$j>\D"e=1A`%eOk<R24BNi^CNWCpAt1oDA+ojU''U<[auE,'TrEDitFrQ:K#"/bjo\<">Q&"*IHuJ5Q?dY^eVT:pAYHl7gF(kr,'2KC#%7RE_P=B%Io^>,TDa`ke]b%VU2Y2J?UF1no=ZsMT3A)gfmcu0Od.3f?T'CbpYJ47h02+Z>i3;37"5H1-@JDEKId&67e>N1dC_BL`-OJC^3;<_%XoI=B\]naXh_V:h!W5Si/^[8l0A!Sk;`A4O]\n73UhH]mb4(bTjdqT$\a`b3!thSoYCi+%jeUp#Tt;>eK6$#4\,9)tShs[0<VI%a%IGpu-m8Vhi<Ke6Ls)sT1Q!1Zp>-$8dIsW]$0\q,g>0^&J9!@(/)^^':=R3?ZjhD>Lm4Vi,]:F>]qq<U1/'L0<RZS4N!2F?jC"=3Y%ZYKH5H%sfZWd4<6fr78QoVmd&R?hDLPcQLM8.3l`?BK@Q`)qn&]tu1hpGN>$pgp5o7])92rfJTkR,9?Bk+`Gn!C^2\9M!9L%%s`2%P:\sGc+g:G(3n(@M5[+s/b"8#,baFq"a?F&gA`uK4+`2f$q8b"K_^OYgt?RH3B;lHMiP2Gq9:''<A=q=UfpsuN3A6;QJ?T#M5FKh%=C5c>Z*RJEDdcaPs6Vk;(/a]4&1*X-6CNZhEB^S3T*kONcellf2C-b)(hhUjq[R`EWnaOq4pfce@TWYVQW0VlYpt9P5%4YI:@VCo%g&k;od;0-XLZ-0#IT>^`:p-=4bM?q*>BD%oIneknh+"7;hbpT4l-hls/*GHlAqNr,OX1.4WbfVn#r&&D.@+D^Ror?n,>Bbl@Do^!%lgRYelqY>9EOj3D24Uim*J"WbBS^Q:n`I'"'ZZN^Dq06qUY`I6*JptA-j_l.%O<r*;r^`+>E>BbUu\7&8U]L"')>=P:uW"[KlG^<%S+ap06e>=$C;>krNC8[TGG@P_/LnhIBKSU&3)/_)D93@nh:BK!:@2M1jKl.`Q*QQ\R"".@9>C-\[u@I\%>79odqC'*<j/ooDb]_i%s#8W6IZSb7?B`stQOCj8("&Z2[?G0>4M3uR&CCt00")lebVA%o%^aEMDRI1Q(MSH5o3/</Ca-E<[Zdh6Mj3YZ^45I5r>6UD&$(uL%ms!2S4*p8$>_6e3P1'MJ)g7FJH)"!W6pSr9^YRIZ2gIkS>5KDq]$MLf4%3)LE*Oe8/u4T>B`<2@[73%,l*d'ggg9DQnZ1uWd67Fl%XEHf)o\+61o%>:21V,;$),seIXKVN_HEH5&Y"l%Nop,A+GF2C3)SCF!Ei%bH#P,LKr,9(/FL?>d"0p?%Q@)@?[089-/.2/-,l,u(%^3u,iaWrb>qOoQ^4-_9^WG]?'kd8KC@J'7PWNB2E'`1+teJqIkAER]<b(uQ7o3A+5nsJ6Sa^Q-lrmkmeWg2F4:Zd\+h*E+R;<6Md%?1(M[2+nDREkTa[_C/p&QQ,mAni$j>5($PX?aO)b98-+UHIIm,8^L:XZs-Y)4(#DH.hOaJdDbn-Y`pYYHchHsW%a$=BC-!K(44;-%Lc7m,Fp",8(X]RC-5f&p=ZYD'bH#gW@<VDC3%6A4AhGQ+MBlmHR:tZqI?UfmheS5YXor2!X^0&3eIprn\q2*0@(i+RQ>3UbH5g.U%fU/IV(IUS;]&YdfJ5ZLq6r+=b<V:A_q\`6E.Fof"%;1frl%Cg_\$q+L@dYhsWk\)sWta9g%]jTSD!TOU.b4CjrlW[5hraf_(;3tX%MmqNmCQ-]tAh/&X3\`$,0MVuhJQ&]GHQ@plDd`j&fn46f-];3AiJ;DpZAn->flau]'RHk^cS1n&>bk*t76S;HpI7*rq0e6s![psG%\(^:Fa"J#]FtDbc5H)eU>?NYdU'iYeTrL>i=)LT2rDBsE<0EUg??I>fY1]iQp*n@FmSgIber3ubO@/6tBm)_Am;PHi\cXZj,GMJ>%Z+"m4!i7LQZ[QI#4d=AFeTW\rKUn/X[IRMeI[=8f]R#2'U'*5K8l[A44he:Zc3*tBG,iK(h1VC4EjXA3HPiiFipCjRXE^dG$1A07%X5MX#E\V;UAUu/mJhK:,9;#@dm7&@9`"$4$<n7VJ?%S:ZSDN02a*n1ta_5B\=Aa)$:Ubr_M\Hg1.WChJ&N5qGiQ@SOmJH?*YK?#Z%#l*V'<r#=s;XMst)Z=b@oSjcq;0nY)U+(a5L)9__]OE'o@q_b55c#J>Lf)`u+@?8C=PBt?FqdkA\[E(=.P*9+jCm:$=\LugTP'fH%#7dYqKf)f(g55*%-VGe_Vd.jo]&YtH"<N\mQ/q8ga^U_fluk48_s8pb>>fF,*@;IP%c&t:$O]ALf2VX+)C%+m5I`]i=bbH?1cnO0%`V*?,ND-'g>+a(5s2:(^P`uIRG&,o[4IM'p8nGZI"ph'R%R`q`;+]:B7#G%AiJ3idIgtD3n^2Ps`;pUR+mc0sXl)7=]jh`k(/7)h%eg^@9_JE\'PZkla7\eXr?s6`i]/htn6!=CHGioa#pSgV<G[1OJ?9(WHFhjsBdbr!`1>ea]3g"ND,PZ,godSlD-1=Gdc\i-GA^NH2%]<8f1g4-0rPA:!.qW=Le$hei4)oBgS'_uSEB;\epofo"6s/I+Q/R</BX*Lmu_rGe_6eFF[:N!Yb'j+8\]JT8tKo's8*HZblY0[Wh%.>i>14&T+Bq;(*435?YB#?md)gAVl#rLtqSeh-_j7'FNHTk0:Q?gbd:R"Q27(EK#/V$c.D/hiXaRHTeD&LE$uQW=[Vg?i5L:.I\e%Z4BIG^>3R-oNF2Bmd>8(etAUXcjbP)MbV6Z><hZQ]AW?-dLq\+j"1p*4'4%]HBroK=DgHf2Zj8!_ort]&V$+f!F1;.@k<+9f\Nt-%@MM9]e2k@A^R4WY=0FV52h/=k^])ndiL?RDS1^edK2^qPIB]fU?Z\5bn+QJ,cK*Yn\bIf5XuT:Cq:.:]1R1g]<`=peRBo:B28Ajm%P0+d#fr9\O)L:uGSk[K0/tJmU%W@6(7HmX2EiZ[U[!=f7aIHucV/o0g=8^LtO'gJf9hVmQ46-3UAauVH1p9oYi]`WNSu[Q5]%p[s%IEaFPNqPC)mEV0.ZZ;Tg2=IoQXnKZ'<4ja;?BeL^X)IQ6hJBDse>^9=7PKRLCU^_$_U[+QC=-4l;Y+h[Eu:/GYcZElF%&l9C1$X5%VRou`Tk209Ba\QO:-1[]>/l-"Z+QmuM):H5Z.W6meI\jPc-?oM@kSmF82lF%JX\=A?NdsnIOO)h=nTT,SR:,H9tNs@juV(:,-Ce"%^:Y)oG$V+Ah\O1GQTI.na%Z"73pPrN5rEq3r_AqZQKH8(1.C<0d-0Md;03aOUj^MQVs7>FXO3C.j%oD)Us[&[EE6CFJf5rAhm'?G%Yd*V0FuoX<guuo!FD#3cfa;K$rVMbKRXL_fH_?AX]ElbS-#%cRUetWBb$'8'K,`?Y+/I?(k%RYeM0*C)e65Hdf+-,Y`[Yh$2@i+n%S_6*O%`?Y?fm\0Ep7TeAU#[6t:L'r7]fSSfe=&P,\hph7)EjLVn]e%V@;a\2UP-0a\(jH(/!i>YmDl8/9(SJ-7[K_>bK<=-YgKAf%MkeWgc.r3l$uIh`p,,KTQ*=q7Btb89k_],2h0^7p"?"o$=hBrO)GR#!Zhe<HB!]&h1fg!o>H).+7tHXpPWm<jZZ"qbW)9PdpfO8M%JkYm!eX0$[2%C"&NL$F.KpSju7^o5l9Qeq!oejnQ=M$Z*Yg177]/]+dRe7nBo`6#fHMAt8)SK@;%a7?Z)P-2.FJmigS=3!4B$HWk%X9\KDjcDrk8b8u\H4"Gp-lpSrg:g$J/(j4VcdKh*p<d#NUZ]fVC1sC>eT4^tC%QjO3e,FKOB)G']"_0,]"cG4"u^cbe+a2co_e<F%8RJr(BSA=U/R@bQ<e;8R:t(c-NKr&P7U(3QToEAADbkJSh@CUlZ#m[n?OUiEE,Fq:l1FL#YgLMOY?bM1Zk_0YT3K!,$>K.KOrc^X%`Sa4Hrj9D#D+b=SoQbYCaQ1^Q[aXF2WK9Sf0;Yf)pKh7&f$WJFC?';RM_r$;6Q7=Tb`tf8cfR$!oMs02QmQlu:nFGA.PkkH45Q)@%82#$WH"_;n8(0U#q+7B[jh9gbdd1`'0+'eckuH;JGCA=,dM,RN)/OEd<o3KV_M*0rE\.HSAne#N/>?+t?0#KIFFB.o0CMROf]]oZ%^Z]B2s'05O7k_5HF_[n[mqm.R,_,Wt!R479Z*s8S-E#b7P[FFTJ!MuqUJ%Lf+*o<'eX$YCDq4EbiNk0/S]g8qk*#Vsp[n/Yrk8_d%q?aU^DpVE0q2+;e:5?JVk$WMLOCh;g<))7K_igX;^H5egs(UM7i[0ctI;YYC/j4kO[?S5.QggoFjej!jW=NLYA6t\<HOG9!@(rnK%KKjlJIU<S28hjpO*`'G^mY&5im7cuM>^#W$qok,gX8?qO[etnDPp_mq:LEkA)]W>gc``5tgr^%MHC]N0V8Aig'UMkVV`blD8O&VA%Tl9tqT!WZ-T71&pS#8PJ)90D*8o%42Dj0.O0'f3,pCqK3-M6P,j7W<m*+RHsl.q-*d&1+D_q/Yedlh8j64V%<5,CqaQ9sHZGGM@k%3BlT%fk''iq2<_I3dY&OY5#PJkMg'"/g'_Uo'G/]3]DhHT!$sf*/dV7dS*a\()H'?@)L4D(Ylut\25^!lOccGV)ni2ha2'tcb:\U%h`hqHOTei9[88t9^rJ;EFnQMOj(pH+&r*eq525.=ZTY#+XI^suD'5`F%C%gj!fQMqj'mcpblhq,*EnF?ZAcHl"dr&M4/Bji'rSae%>]'-k6Y+ri(+aYF4i1B=FFH[S3"9TOR%1g*eaGr?mktR=p+E^LU4WBcToD[@pS7>Q7N&sk_L)_0.l:EA)qE63KLW)=c#]T+b4P>%%gLt6jZ[*t^IFX,2[@aGeHf!t0h:$'"2RH>5hGkl#;.bg:[=^89eV@O74$83RHM\OCdYUjloB:Vk=R"N_Zr'peHj2O@P0*td9%ROZ%fn5\h"B14(Zr+%t/j+2Y[<_B9)k27bC_c@fhpEaTgsb_9UMi/&o&j`Qk#dj%+XQeW7X%O4Cm$M;jQ?]-PfpQiZeo)-%h\i<h_l3%%">/dU9I@A)k%^)Q$gu&=CUS9"QMT*<7?G+3b,hrQrt/57B(&FlTm^%L\*o5CCmDK&AX0IoKFY)#V:io+@?WQ6%;=UKgD_oTeJ8qj%Gflu3gWY(HMeVA7be(/g0!Ac_GS+-4(5Mdm\'DU5GsZsT_d`%XNai<2I\3D'Pcg.H"Vgee0CA#g2#RE;]^FCJ07,XV98PLkeFW,;%+l1$>AS,6%FZhWH7jUU8o(]i-mijn3jm^*tXu4V)j<#Q?!)bPk7mHjqh`4iQp7K/mB7+coird3n13EM',p$t/@K)]Z$LNa&<Y\^Q%]p6]\Rt"'/.Z6[\bDVD;+.9FC++BsSSqrGQ@N+&3aZ3\a-cf1Dn*I_2Ol[<@)-?Ga]heLr[,mi^FkGC"HJ!(m#UK*5Q+2TkVlB.l%_;3S+KAM^H/8Qor#K%SVo_)2Mm@opt7BmlWQ.2-:34)m3=$!ZBaO&H0X,Fl/7)QZRmnZ<ccU,3@S<#J+l:H/fc$g2.Dp_UgRNi=K%Q@_%^*ulX"8sksh2!Njk0k?^g>&nn'Au?^SL7e]R@>L%4&X3*.cED9BE@@59KS"1pql4]70_$Xao%dQSatK*5\;kkL#N`Sg`6E5]%9MW_<Qgt3*gp=8ih1cuf+Hg_fCHlo-q/jIYR82@jh+J\u\BMc:"i\WE:Rt5e4X4J$D?olND>U^S1e9sTjS=O0m9\q$XK[L0RI?]0%b''_D9;Fq/:G>Lm=e/BA+OjkBFJWW!M)BA3NDrUNq$ihLD8=5Qf7NZEVV'HuA_S`5rG!d4V!BMeLe`*EpHlH5I)^IGdO!:bJXm-,%l("`221P=acfX[N/>@!1choYp%6C"DZ5/?SKA.d2UC`'NOeK)P`jdG?UJ=XGNDS;FoHIm$N:jIA#/f)7HYaN4-/&nICO#snb]_=L%[CbQ;6D>57`&c`mA1;a=,0)T[5#ZG;2SiYO?(VrQ=)Qmm9Z:*^UWn9H0C7g*?tWd%5DY5gT\^sBb3&*0oSD.&lSrW><$o487BgL9%dpFNqkm4X_\e9LL(Z(8[.?I*@`JN3T*3:Au?0q2rHf)tb5"'18m""EuhFB'`=tF?(Lmsj9PP`S+;0hN@Ad*B:q6gYF^D5uVnMbul%#!KI@Q=(]1L*/U/4]nM;G:n*=iA&,o34qnJrRUkN"i+V,h8dhccrdXTfH!?[prDQ#mun@/%$'sfP^=s85lK];g+Zb1cRs#>?H3mi%,2IGIMd:VoZ*PJ.T@(7tB.H/4rL`B-OO_8,J\I%Ea9l>F:h$)^lp6r(`RQF7/*CL64[4i00%)l=V%=.DU"Y?#I0k8'9@hq*nFe7'%U>gOGCVPXN83BZ#YbB=#1,P6nHP"_HfQTIujka++pO9ej=nV(&^((Y,AO6Vdb)c]<.!`!dWt++_q;-a`iEIC-!jl':`:WZoq*Y6d%cNi3jJ/oj=Fp(\#nMGJbl&B&/*tsWJ63hM#M>^05IFj\nj-LUm><5JKpVp3cgi"(-#hAT@F/D/joML7^0Dg2e37Q;1TgMJK@nNTr%SqZ_8FRE%ICYu>kL)Nn2X7AT*I?=S=rA(Jc/c\"2cjVYTIQ.4%[Of7SUZ`mN3M%f1RoM7RoEL83^bWV=hlqK0+MGn:nTaX??gt"4%cM^t/_eD2INK_N)j_ojQH<G/_R1)b&A!=c"WSZi\5&[,e0.t5m>23[7O7!jjScB6/WWb!,LjDPCWGlVrlhuAl?YF$-rP;=r,1]Km%U_><'HL8rY%<2j=*4@@9e*g;0TrWgHS%s.m<2O12guAc2je(fXpgHLN)7%L-.FC1`R3%49q3k+OdG8dg)F;Te:S2psDp@*CNZuku%*dCT9fHf1I/('*\Pe\pm=/&.S5+/l782NC)?J!i6ogDH[7/V@#hg;3m7-k.1CsG*=34V<"nP5Hi"\n`RKhW_!lS-s`@=_`I$B_E7%H@4`Qo5;>R*HMCRi3@qH=Cts##Fhdu_WSteOtjD,,rE('E0V?pWos>lSI","NO``8\JfK?m@>&\2d]\90L>eTnJLto7rbbZ,"!K#%[=guKd!C#)eALojC%a0"LH!X,pK&-la9meHMpd>jI.Mf(877A'S<Jc4%EfDtJKY'sXnZe:a(+":<F/rJ8n2kJiH<qPFWqhp+qHnj%g\3l%Nm(ZN4h<P)HD5Oj4=s%gM.tj;Be`f;aS%dH&u5o+p&8@QnDPaP%=<1?HEJI"iH+H_0u*u"!ebh*eV6`'1#oLn0T=r;djVWe%G/TW$W!op76lroGibe-&3BhZE$tSV^]S(>"9e>`#/%->8@^11X`?gqoC_2qg7B)!n2$BOQ\Teh9hpY4['pBhnREMXs+A/bt?0kE^%Kku"##?moPRl?VinCZ,JO_`g&L$o)YMJiLgU(Jg6Mme>^qX<:Zft2g8&nuK'H2h7\6sRg%Z2D^PHNW-8I#__$@o]4<jP.c6>7X0@%lB:/]'-Apt'cGWRB5@?P,B.5Qn35*`l[5KD)lM#,Lrs15I=f\RXggB5c?'8&d*Ybn`fNP(SO&T5O!f^cVbp4o*D4N&F6K>SkTF)K%*'&,^CLJ*&Ch5>A%UF/\*Qo3<3JT5k;($uK-sLYX*4k>B3du7mW&\tI)0BcagLrThd2@$Ka2X6/k8."PGj+)ab/&/_H<$@MN_DS]%@@9A.1SoONBQ;94Sd,D#6jL>K3Yg&=W;*=p1C[i*9U.Z$5u6Gl-N?hMd;T'Y`D`/sHXCl;4c`S[&l1\-;f?nB@O]\h%<$O;6a-T2%Aui,AdA^MqNt9\.r`$)@6Vg!f=T7td9KH9^*,'`:r_%18S(D]rL@kINb5$3ML-[ld;ErK-<2W'Hk'.X>;s#KfodABDIpDZ^?9c"6%?g,K=#)Nfn$$@0`4hWT*``n(NJct.lhC_Q`SEq"&#ru7rgE<14TfIr;X\i>':4?A!_WDp?1#\fK_D3AK@r8RfR\:I;:"/Z&&\Q2u%HT&(M:Hpn$-^2`M_3_jOe+p!J##K?$i]p)4jbZ?SemYrGN6Zn)g7BE;@P9ftj,CSZ\OKp&Z<BFN$$lDg9^+6UP$XO/eLqHWQN\.>%F:FAQpY/Ig%?SX))P-m`l#Bm\Vl!0V`5'DQNl'8AccNCDD$W.&YnEN%`4ulp78V\2H8#HF_:\A2G!24d[cILSoikpBd;sWo<Rrfl%-E:G0>u@Q%ha/Re+C4a,(bc_r-9<9hqAk::#@kL7RE_5U7;o-R:2'>p>[*NW-@j],-F3sBpulNSk9PpK<I@O5l,/GM,f@Yq&8qqr%j#^aTm!\5F*P4UMh)L>+cmnmKLRnj#''<[OqJ[-gV?]YVoB2))T:omHmYWBNpE@L-Y*1";T0Z,[Y]XM:3r5\m#49M8f_f8FIJM[Y%%>Y;O?_V0?TD<N/MVURaRGjPt5.jB_EhE!!kk$iqe8`bR%a&MOF@5`s5k`h_N+G[&s(Bs(nNlkN4?UT)n+[=YT(lj;*6X=s"PcG>%P?T'2;ZU0%@WY1t*0/0,)os6;R:3"Q#u?!@?DBRCouLZj4YkoATcTU5)@Q)Vlj`3AnOaXDIqh(e)0K[C3uu@c&]5j"2i\.f;T7u>%;?jU+^.1@_M9L6pO%^`m)VW7R);)("J$a2<-6bIJ-g*WBfEIH1]IXjTUkEMo?QSM/79B$ubPV8/:nrt\nK\HarGm@-6t0is#J"rh%OX`(e/O[_!8f`%Z3Y<9u$uK^%jIoFl=5a$#-kt+M_S&V1J.hhPl:*rrXL/R92Zn`XL.tSr3a+1;oH58gPgiQMQ*_Xt"RV[`k7?'(%&b]'B8d8u/c%dJ6i<DNMDjYp^d(Q6[k/0J8UF)c0c\IFHB/*jZS<IUEabUlsHR'jYDSV4\+nOZEZN\C?&(b/lN[#XkZ202NeVK=u%(],28On.H4k2fB]DVY&,h@nUgma0&03\6>/oZVVXDfI^kgth6LQR,ThC.tERq6-6l@Nt\\I&TEambP.*1'7ls!>7b2UXON)7Q$YC%^2Sg_4RrFDN$XYq@MqMablaM*$MG;^f7c<)#*!j3bA5DDKP6G>R>@5HGSRfAp7=P"2j\7"4k]ms,#gJ'd,`psA\uirEPQafeRBV9%]J,Z#J2(94fI%7]%f;>k_V$=1fc:5T^1$Nf#Sq5"qFKOq,/8Or!XG>\35?+^R>"rh(8ROI(=WB\@e!p,_#G2iJPgH(i1l"$1/c:/%c[ff+6Y*!Y-XHlq#(pK_?B6HYp#0O')6$HU3&4AT?Yg]"WDLq))6$Gj59i&P)!Ltp>Lu%(CJV_I8B\_U7U@uX$t-uBBYRUGB\QB^%iI\Ghpf$-<k@L`oE:,aUE>Iu[VSWLHCtu"/1"V[8VSXWgGA<@A\=SM4+]I?o%7;;JqDN)0AZuj,$bcTIs3A^DH$+\],2\DT+rt1>%"tGOR;HHsoT]_PO;V=V/8J,I(,DO,1P59)LckNoJkGq=_rQ5]EnCi`Q_MPH9n2.9%T!Q-9NBn:B5bE:6gd5rg$(D$C60?nkkB?g(%r*5bnr,.edWK!h(`S/Gb7]ngO-s`pD\+D`Qin[X^,JR_nlkMFbDhZ&?DBCJS3,`eJPcjn3Yfu:kc,PX^4'P;4LYpm!SM$IX4c8*,%\)k*Z6dbi`1oc&NV,pR>Y[k54L^^o@7&c=_)8qm.G-MpV@0`-6Qbs_iM9N3Y?F5DUrV)^3c$,[IrQ/qre[0CuTpPh7p[QKt-+h:P%cpm2"QG:<mm#9'.+63)=1rJbT4t?$f4"A.NH#XGG.)1i3T__dtbHS$:jV"0AKK$JbFMBE/`V^"5C8f>%@?$lPO:ku'ei`oNk^4ge%p4H!ja/W!`3/B0lXg!2n'.h7)kCF4QMK6]grRUr42!QX"%3aF`k-=sXNLhj"PNc\$bXNe"*_i_'g]alQe3-hsd@H0N-1>jAI:KDa%^.BruqF+[McC<mH'I)ripGm=Y/tPBs,R96_.E8l;`+*1EhYT4l-#u:O;:>*h0Z2=)hoeL)L?T^e@&NkV2%\:a615Tp%Ao*JP0\23%!l&PQqclML#.oa1&ECm0$gOF82du>p\tE<>Si]k?cDCtiGk&C*a-TL:PY2hYjN2tYl,*0Fa-fX<-8!9-9fJ6e3d*Ded,H:#P"3`n%o,%cbQd3eOj2e)*b,#K/0V`4."g+7-A'_"[b,'1Q?H8@+`sb=2/fg"]*FC^1:bJ=)LDa/O?-qq9YOu#(l%4+Ja.5p@e>7iFTCHI@%"jLE4ai5Q:dfnj]79`C%ACC]^Po-a2rn2BJGBcX%VXmjm'L+4/7GEIt@Osu,?$qTjP"caW98C,tj34A.b,#K[.;tGe\tBCVF%/XD%VA%>9m$<=dN!u=Q(M#TTr!/CES4sfa9@r?5d35g[Jn?FjN:%jql,;QO>e51Gb#!2u9YUnkGonr6/ndNL1[PFiVXns[@K@=.Om63P%#4/l!fo:?#;kI(<DSKs:j5j_^N'2?5qD#U<rdOUl"^;f'^990_]a9,UX,EIRet&H'`k`.CVd_U=Yin5I-fQU7Dh>j!?/dblS?(r7%VK_`?5oZCEg]pW'/HFZWB+^[A&#C,E9>E4.rm)^Ll!4n'bBk8%X'D4$><]aX)h/RB%5u9bGMt<&DeoZ2J+*1f2KV&jj>D.dI2=,6%F6E$ce4"Sde!._P\Jm(`H.Zp#I&@)M?Z\5ogF_?P]Da``KS1c_FNkiXQ&um=q)=B2?ZR%X>e&AaaIYD7rDHC;ouk\_M#/n^M\7b(%mah@cEVPKUal$2U,:Con7NN$NCJ>K,L.a#eAT=S;c@F^]$K2ga.h1pD>FN7ka1.]`ZEQDg$$Kc(_8OMEU,4bgj3K-*6W9`^D.Du-%CnH+Pf.TK<M"QT/+!;JZ<#-u"3E@sNW@Ue4GBA3mQ$d)`HlVd=8Vb=`oo,D>95@rc03h]#X=$,dC7onda)TKP^F+$&M7)OGTF#p_%_KfWrVZK1b!VTeaIV#%.'@PVp_T[AU6tkZ<78-[<$crA^_Y%/Fk'C,$OGc'qf`;$<V_M_Zps2)53*.8H.Kc[:+?D#^J/\p=UQZOa%`;OTCF6rYK1*>O'1.:"S"SI_"CG+*lN`-#K3k6X`hMk;!?]UN_#J$)%pR]=E</,r;)<TW=HeIn'4Da5niGSGgb!BpTA$(EjiE1!-%_``qI473;]_seW5#0_H717ouQVS(=0YigbQ&T5`1?nECE;dMF&%X>l3hYn1;;L"hVr7M`,2r+(a\quhWHQ=-`'N^;Xr/>+Io]3`G%/[>$.a+"K4OLMF4^*Pp'oC6c.H0M,jm-$0*[%9HsW'oEe7TquqC"X/)1N\(-?C)HCUH!LIqpOgt%i[.GqD4<;iqd,hiQXVZ9S$M0%DarAXW%f/OM93<EE+q6.HE_t/S"M7G2l?mjEK<#5b2RAO\DP_mYss\Ij'o,@DrRWK73sZO[mTg>D.Tpkf:0U?QtUA[\7le!>Tun-%)UL/H]8s.W*Bh].UD!!C)deWkD<R">@unUTEP3CjBWCQCY&;:$h'9Z`DbN0oKkrA`""06!W@TU@[3lA-PTkFbe9_B3FD;694YdNZ%9Z)Df@gPI'2uOlZD.iO9pa$_7F*lNXam.`.EIIia@^Z"eDienl-^`Y4o2)G81M[Xm<'8[8.q4HepS?agXe1H0HLg#UP?54@U8uF`%&)1"@rmmDH-fcS-Vr>%5?^Bd"7\u8)(RFl09MV!gR7D8il:ooW#Z!FM.(.Ro7^jc6/q&^Waj9EagO7=qK\aP3M+C?&dDPS73]#o?%>DT[fI9DSug%G5g88;<To#A5G5P'q*W&b4@?TAF,e<ipF8&^h!I(8?q7^o9(&&7lm\iZIq$Ye,EnYB4^)a3dMMK'FBrU+$H2nHD>%=n9l''KfZ?^9JBrhmq:-Y8h#Q\"m2h@alg>bUqpdPTq#LC3I'k2+^8cX8/M+SF)aFeQI]14p`Th`=/7^8C]NQh4S64YfR`kR&riU%2YD;c!j[=&jt@2]=r#nj6==&fE,nV,e>COLZ/i_Z9TMP"?>*>HQ5&QUR$!JYn9!M7!%iY#>)^h.\63No@Pm,l'<b$`o'-n;gFqkF%As='<=[[A3-VeIH0$u5ql/k6N>#AQ4p(@nP0?o;$/_6DARjNOBC?o;Fc7?'+7eSRCeLRVG2o^S\T=hI+kreIk:Uc716=GJ3^EF5%%%.<5T/_A8ig-7LBJT9ZJZ)r"^=[-b#cZ8(a7'SL*>;6V]9uK<@YcF'48hS+g'ZULunSbY;47't-%!63BCZKMME+a-WT-"^6,4)C^%*!,/!YFg<kPD?e7(%%p^e:fQVh>d2sfSO,t;5]rW59n%/$J<[B$_6%G8<q>@hu*2XR7qeHbnc7Zc9Z\u>L^cn0s#@jVo")Z@jD,5%hGJmPYGj7QEdIHokq:</WIXq#]u$e&>@sTZMn[fQDnk(d<2cnmB&d;)fs>$G;J#fIGm;)eT:O0A0\0n"EhG]>BFgdRlU_m&?-Ee#%URn,cL<'FTRfhm5b(6l!Hi"AE"6d#0#L3C0fQiM?:QC\D(cM](mg\Vl<=EuE?=5Thln#r^3Ins/oZ#,WN/Q")>o>j70Q%A.N&>WD%(1>o;^coAKd91u=fUL_pq(LjI(e%6[_*;lf?XHFnPI2.o;SIT-;2j[95*Rb5s6uk4^AF)mThG2JmRJ>iV0mo?iJ,+3c[V875BA9G%7uR=UQgt;`8oaB37+fel2uV'W)XLeF_9RcRp0Ks\7.oF%2tYd"^3fgQK,=Dq4ib:g061a4UW4hNNTY,V=SM[b4WA,ep\I>9l8LtW%jTrC.!BH!(h<PkfYe.C@q/.o+6dTf!Xa\/uEXa(l(nSi,fY)a]\,))3IjM_YD`#4?gjB!oZgMKWA%:,D3aP$WKPLO6rSls@NcqUu%LECgtAcaE,LjT*U`4[9^(M/X:Ej&jB9SR,TN@E\Sh<GfocQDIZ^M%I#2[[.R]mfM?iu:#A4nMdiU$gq[=QK_Da#=>1]!]&R4*&AV%J:%7k9?V>1lPH+`Jfa^7n+DSK.M-MRP")t5Y6U>a>Q#c/7G+U(GHYBGXa\)(6\F:^(MsZUb=W^LH7.1,A'93)^=@.0h@I0K0A6g?%]T6ueHi4"\=m.gAKAYu2>t^gepgW.H(O`>k`#dfDGn8H(>Q(K?)oK@<dC8rudY"c4pq;+YAu1J=b?DR/0<Q;\GH]n;ep,tsrSlVQ%2u:4:dC8r]Fs#VGm,PjADqKF8]X@Nqq$YJA)>mgU+D9Cn-gJX]f.VG9:!^3g_nCNH\,,c#]uEj&O1a"=\@Hj[Hi4.0[;"iOrI!jc%^AY.ln)GA*Rh^2jhrr2OlrLkuA$5U?INe,q(/Vmm<CX^S0@&88UYkARmFUpcaYj"0IR34.mTM,+M[ag4?hCWE,DSe(f.VI'mcV`$%n+@(*=Nj=W!UfW=\ZQqB?GBUiK-T:>f4,YDDY8'S)=_#tB4:s]ob1)i+6d+Hk_.SV^Vt*7Hi9[_C]o]VFK_=G?[h2!co-jO?GG^K%Kg)C:`P0qWqGogC[qG>[rHOZ\'4PrWI.4I?EWO>A/lXi=%e!u!6VQ+?5C6.)Up0>O9HJH9HV\*9ihDL*&1=UkCMgI*aBW>_Z)2-H%>3mQiF:fbZNiRmja[_r1kWu-&<]Zj%U/ptcoCkaR;XW\j`$1:=Q'sa=gW`?sNE#?5^87grcb0t-=T-W2]ptQtr6EN&rbP1g+%Q.K%TAN?foh_fijP.ktPdUG$219`IF/Jtbh;4WI<dV._9/kQ&CceI8Chk\nB4%"kQ1IB'qX^G-V#O]E<o9gXo,4\*BB%oe5EYqKWit27%X6[*OT4daCh;2f^8#bgLopI7OG2#R&hs]uFIQo4K[H9i!M,#YIls.08358'skFXY1b/_iYr/*PA+dFt[2l4t"gRbch9V8`I0D94o%@pKasktF8YY9!T7rkqA3]U3'N/RE)?"+,Wt^&?'\3tG&qCsJU\hY$PPQS./94PT\@dh[b]o9M0cE1c4[Mk$B^D]J*I+cE(I%(A=S%DQ?^8aH:qsQ=m3FP?2rECK$49Nm,\RU4)r7egm^,jHAs$jNuEF6;'ClGdYEnbt1Uj9,ACYBrY>[Y`ks9?uPknLCERGi-JFl58eU?%E5*\2CI+=i1X_!7ia&O06a+fe4DpeI(e9;&`($oAZF>t^<0g2NjO_N)onN<2d+2=RY$^!I,guK/,P=[o\bb:8iWYdWo)+g\ac*])%)p8Jc2B>fs]6VcFmpBEdcYm+Fm(bP8glm%"P'.X\;89!c[ctq+b&q>?(?)gIf>os842\hTZda1mE+1`H:NMQYr=X[fgEJj`([+Yh%`U;LAB-GH*/*0B-b+V8(h3$iX$gHQsm*>%%]J/sQS4N73mUsI.G.6g#QkphabeH.K(<$MSB%;0g'-FRg+$qK`n7[1?#P&7_k![k`%lmj`:ZlhR-cmm=n/A9q;hO3)Z5UB+G4,YDMlMVqFQO(.h9*N[.:fQl:Kj$Ja90#<hOS$&u&9tLmaD(ZuNesNpK.JT@"6%AJ1J)lY%]ZT<1!^CT;4@O<d?,%NS$>h;]WGI;`hX)qd"4Be-?=o2R*bT1;lDCC]bLNN7Hf<F%*H0N28P<0&XIW%7;bMsm'R`U0\#q(.T&g0[%[c]!4hJ+\i[p%g4FfCJ;S6gXnI%'r7r'e>>%GJTu2Xfh#9$`q&I3nK.;rdIiTt2LEm,Z_E702WNf7O6^&'BQ]Zekn/L+E=bO:6Rg%:L#L"DZp%%F80VD:>GqnF/qG&Y3aSTlBM8',o(gk:h5^Z+11T]8W;8XD4/V@2+&IJ](<9'XZTTcAQ//"<h/$ZOp3Pjq1B3;Zc\j,%N9+&F^FVZ5hMVOoB&"sRF6/\OV2rX?ASG^KqpUb9]7"bCf!5!)mF`OW%TYutm,$ouLHp'/3p&!d_X5Sm<9SQ#6_uJGG0OsQrj]Wr%m_3o1`V4K;@Uj!J7a(8X8<Z5Y_.t,dqkU&5bQa/p997-<fraSb_nF;g]a[IF(d"3k;YD;*>5GEASjCrhF-U0L*[:6Ei4A`Q7h4:d%Gp:K,23H/6-;LFXp8-GYBC"sNa/0I^DOS)G?)1e-!mi\Z\X?iF"+DlI'2e:4%0YU@1TM&IN@P<C=_c,G^eL+iR(WB^"olG7cF75J%E'-]R1j#SP\:gaTKDer/H2WjAUrJ<;oSA`9D19S7Kli5qH#80@$<U#n&Ri)US!3KrIDGP?SD*$9T2KZIV(%Nna0J(?:H1AUZeMO%%I!eHUFFIZD2dmQ]N&Y"Zk-nPf@"'/Z&+aN`OY4:ojf;(ZD4_,W'66nIHHj9XkhRWX-Wk=u,*kSJ34QM$ko-PFd@HhsJ'2`Fa(B'P%.37Bnbf\=2C>nGl2mo$B3D7Vh:/&RSo@.5U?%\21C>nYo-^ADT(K(X?QPgp(/!l(FqM!"qeTk!(m(@kNLXM5n/hTMmdDf5_Aa=-,%nWS=Q\=,Fic!N%%R4[j`)ghDPhq8=Q1o79@lp%YpQMX?7(]:lOfPHL9$anE)S$[D2ZdIQBhj0iMFsch$+"ITlMkW+0Hp@"g;9Q#(%HCQEVQ#rc,(gF\CUo&cBHok[//oos[Hs1oiDG;a_L#OU#ptN,n\3qQ3%(O\324eU_'d$6aC^8;ER0N"[LVj>cg*65eb"Ps$e1!:6%O&%YT'BrClf3\_I2/W0**iNX60=5TXm<NSZq;LqUQp#e1(Z&44Y;).,U0PsP;oKlDs-#:JG5480e`43W6X>Lr#R>26IC"P]9$bB)%mAQj/QO_;!QF<g$c*,gRe#f1)R_80ScfL(shmH4Y=I1u"C.^#-Lu:G^,$3'#[@R6i82D9CD'Jenn\)YYMMmk0hs$ADkrmD/#pg*;%FO.b_',nR/,lZ0N%"*JKD-GH6je'NKbS5%G*$n);AgUSW$U:`q&>KK7ADS[E(>BrocVk4>%3fNL2A]8Lf&BUPS]]II7(>-M+5guB%MQ]CFVE?C*!L_cal=BTu1&EA.k,M$cs([%+\+JIh88Z$Wa.KW)I:rp#2W0^/)aCeZEkl[M$\S_n`EU+@/"-:uUjM,S7\/Uj0b[u=%22*E/&'\s2H&^2'W+%oE:a_RW^fl,)*DUJNnJa'tBX(Eh9+gR+o.`/'#8o/!?n&(##]4WpaHf36gnVgi3GV#$,C2T.?5l;8i*suS%S@OP<[PL6W/8SoEKe2%tO7EZ1Bd<Y$H;lAscg,rRL$$el=m'oLahmH,B]K&c[Ck%=Hp-'HY>8*9ht"nZ7]tR<g3bnYc:dl,^/hP;%c74Og]uci,hiG1!7!^Yi[BGg_osnq3IuGK3Q(uB/AZ9m*T41;,Z]gr^q:aY;ro34S]j.u"?Y&f.:\/5^lsQl!T#km+<@0o_Bj/@n%UmmDKYRhMS17!,IUQ4+"e.f/4INDl$#kA@!&(HshqPBfEd5bZKQ4;7*[8P4\=0@CNr7l^b2jX3PcJmM2Zr+"=dFW\:Udm<_A&r^0%Wt7pJ&#6\_H?rrg7Lfrdn$q!kY8/(u;VLB#D5/sa`\J>,+hHc'HLQ'oi:?Q5>`"[,bnHs)E?]k/^(3]'p^"M;knhnOVtp4PI/o+G%J#u$Jq:t"h[X.(;C>];j7j7X1Nk9cDlcSl2F6W5UcmHoQfH;7dRm^+I*mpT1.uW3uU-Z3uLuLEZfZ83ep[^KCAX99aX)mi1.P4@R%MbD%2MBVpCqB`iUJ?]4_gejE=5&hNC^Pp`a,&L#^$AHa.RDqTKCX.$r<NAp#rpT-=I[U`+@/H[EJDh+Ie!fhf@s[^/`p\j069UH;%Cb/c_#g^;ZbqJN]'d&=fgT+[LWi/.(i)IJ0Rd![C.(V2iTRIoO`"VAi]"p^;Ap/4m3?O-h''Xu"CWPIhaKZ=j/82O*1`"#9,KR+j%fP=%?MP.3sp)9+)0Ri@hN$%YGT@+MlMJ!:+oSui@GI&6fq79U!/Nd,.i9*dKiUbA?Gjp`$hddUpHcN,0bI[os.U,`0[$"VJZYs.4%h`+nkN`ASMY@I:7#8oIWoXOi6_g4lMCp$2'q'd?"Ic[daeKNPcA+<J#%@kXkUb?[LM\oR2%-<?dW;4.kfV..#U-1ZHIr$6bLR!+O%/O-u:`/rMboMXZjoYC__T+6JN@t^[jGD>^M2-TCq`O^4[QR!l(in"TEWs#P(0FkNUT?k^sC8q)(>UAFM"O=4#N,,e.iDd+'GDJ,W%4B(V_50_,_Zts7***ge:(d@oqqYjt#*9(4h=P2iQ-H>o8gdD)#o$:7Y<>,72H;9T@b7!Np':b`cW"%e_.D=h9cX6@U;SHK:'8*p]%2c@tLWKUM6jH3F'T59U6GAf>5LF/Tf4,o$k-RW6iOSj_E:T#6*b<J&XFP>\+Rt#P>q(BuX47RFHLYCc-AE$nOs!K1c:-6CUr1ap$%V]@nhA".^TfQYs1IIU6R$p7!U3O/GmZRoG*+cIQ(+XOZF^@l-aH)($)hU<DAObl2@Rd.EYeaomM2iQXk`MTR\?.lu925sK`Gh'`:%bU@T(a7qgY<P5.+<W'S&r!54EoUW98N.AcCX1.!3lL`MGV[m"FhMUaZBt[[?=/#'=]2bA2'eBrRi.M<L@Dm*KGt,o'Djlc20Iq'+%I7QU.KI[qIr%lBd?PE#Bq!/-8<dGNP0P5XCO`QB*grB"lR?@`!5\'7XRdTQ,$#bR:_CT3QjmP"O9g>/GQg9u.d*W/EE9k4(B\&`@%RoD2QL#M[kc.dSr.mIZRVp6@Enq=F\Oo8UcP\kH"rMH78'V\LkgeW"*U=VHZPAY;D][M5/PU8o;L+4;h]om^#8C2B0&th0j_MPtu%MB##MZ#f?+i5%h_Bk@,7rn'Mgn!^50:aEP!:cD-^B,M'!lc1%\/9RIr.+W3,S<CTWJ:l]>N:o1dq[NsV*jZN0/q%hlr8PEQM4]BS%6u3oo0dJ0^Z:G4=a+n)F0SAp2H`_[c$?pMR`i_Y$78cR5$L#'!X9,R<)Pd^i"nZgG00eC-`8q7qK@lb;]FVkcdYp_[6Oa,nTakIG%MQp:$!3)/&Z4AAZB@JC-.lRf478kMK=PkT?7CiodmRZ3+V>J=D>n0kg8<q(aQs#P(`@BkF`%7`WNj8('`'3ssE2bU?3nK_4)DM%j%`E_,(Kg;!B&GE1uQ"2G`<T-he"<KO8+Rf&(iR"F.;`oPPDN/FVb@Or<P=cX\:1%o]IH=qd=N%-n0dIjf=C`-i1_uG'1Eqefa75S-%P0]u0hC8XH)ep36N=@n,0H(>c"4ERO(GRaeC8UcFb5.cQT"Gf^q';T*OlKn[cDA[nIIM%5\JVV*\doubEf(.La:Ya5kA''k_;u>7%Jju=N<[6'>=7o?Ha-L>_7>lON4HI$8;duV1l1paFm$onX*nYa2?MO:tUPhd2jTgW5n?.t2PbUJ%d$@i.m8"HP)gC5s"PVl4bR^e"%GNRT)V-1#0G8AlX"-$=NI_!ti=\ZMkPEPMck)6@0)>=1!5Bo]gdH\C68B;cT.kJ7B`/M15h44@-SQc$6o*<!G,P52XYKj[T&U2u`%"lY$Zo(Hr:aE`f%LBj9q#(6F5Q_kb=JM?]dcMAD0+&4O"PcVf;im[564EqlA(NB?H2J"MG)-f.;@Xce\i[QLn:34pK,/:8K_M"K&%m#BIe=tSMo\hZk+1>sEZS9A$)/SZsE(IAn<P$-[EG+8VHS+Z-g>lNgOrLg[8RlYcbiK2#A$"31h5atAXVmIZCP_QC)oO-56c)0>\%RAt-hhH:rroA?P$em7A?ZI^^>6=WdAV=OEY[)!DOT2\S((Rd&!ik"C8n6R=C.`Kj<XOOCo4<OBfeG]62JT%i8%Z,X/PJ!@R9m+0a%=N/k^[m>K"Yo97l8q?oQ*)Gn4PFQPX&hr*AioH0WWFG:bnl#CS@a+?77s>S%%<4J,I\,D"YVT&obL4qj]F^+q1<Y]h`<!Lk3#;6*%[5In;lSbb<B9!"pO6#?p)OB';ZL^d&b8l%F!7M!qF'<n#\h,2U`H`t4.W$24=mi@(\Q[f'?"8\S]l05/=F/8c?n+t=;+"re(Er@)%0N&[@!PNdB^sef-q[Wg;[V;<mVE_pDXI_QEF,c$EV:cqCAi:F(<t'c/*FZ*$QAAj10prk)1?mYB#IecQh>>[@K-.r!!-686T);1A%+9VB$SIRlie9)t+BJq-p8n%mMD:U'Q-#Z8`6us+eA$P#?()%RkP_&'_UdnAqlrZ%&DYnJ*,+S7E4AW<)1&^W0"+bKWAMP./a)`f>%Er/t5U.H&LQp;/%$[d-scW\2m/0elnQC5sfrRS%:j*'gbejqD=Q4ph,Xt3p<.a:l'>.pm6[p*[_rI.feh;hHhQTm.imTOqAqUV`I%POq0qrP]Iu(oX*p_bN=e_\3Q218+D[Dh%.JSun<:n'^Tl5?]2)m]=i!8n('1YC3N\^<j`0m1[><ZDmZWV/s]`.]*uX6Nsi+i;$#t%=8'r7^0=`f.5f@c<N:lQ`PVT)<aYG+XeWRhIClgtmAsQ*9?fQcC9.;P-Pc)B[hkmkr9>5D^W"JHFcZ>0O,*J*6;9i,W!6bFJrpgI%;ai3lGtnLN#Or?q(`>U\X:'<LF$Gk*nFKf_^H(fP1C#<96LqCG45%E<'5;c7##";H.FGNe3EM#gm';0?/L!iJajcn%kO8J,c't=S%o(,c!o,@,>J<P=;GBj)jRd";<2%8\8&C)Q24`D#)_HRW$m/&..43*NW,lQJS2!JMF0ZG"o]188PldWAOM#k"=;nXUI<`W/s:kp"C%Ylkcggo3M61@i".CVg)]!dVI#j,"2gKDp1bis/QE?>h+bojB^G^>6t+ID%fnC\Fntk3B@Uno#8&<l([,lYI/oD1JD!aNp=qHhZi4%inp><@J4&nRIu1iIRHOl(!^]A8u^-]%`QWM:RW41haX]B0hT3'[OoBs*rj#c[+nS7\i3cid5ONEh'YeNQ8`Et\$F5m<SW3QhH4ZF%pQ*=Sne1hpGHXV[RC-VtC2r7;oQ$>-`=o@?:KV)<4e)?P#WP,-Ds94dL9W._RAK/FU2=1Sr`j=$\oYi9>LupNd5J+LH>E[Xk91@:%fA44G)D],X/(dNe$t6(CDPk5"WIl*=K:=;h,7eId$uVs#f&'kib+N@(HQZnH.7p8QgN.D4he;^'_6r7VIe.A/;s6Um5N-Fo?2=3`%!1"4t=K$*4.[Vk_X`"MMNO/>\.W1SMketEnqDR5GCsMjb)ESV/OrK@c,?6,`S?IO6S!1K`6#G0Z_o2.B[d/$M&a<L1bDYZXo"@^D%^:4.jC#GD7'F"etA.eOfGucANF8>[fp#)BdJqeE:c8Yo8H].7?XB!6qiIW)H8%QT,m'3.!^A5bsgO*tZFi1]+`AW0tp:,]t\AW6P%!?=sg'51];_L5X:j[c%+Y8dk&]?1fEkp3qS;#mmK"9g3o!"!^F!YX&l5>?-eDmn:>I(NJ8.N`e'-5U0i1Qd^Om`ir_=JS$c!MgE4%6"\s_q&-Jq\[['\Q;V**o)iu#5R$SQ0u;L]_cRlaPsJZCac8E@S?EG[Y\:7L825qC=+N$l1*[<9Kr9NV9Fu,@N5aoHKt/AGK,]cU%0WKe/=9tm6<J_ZTZ*5'K77\N=$L"1*$eZB'&JYh]i$U!]*uOH:%RV.j2ZbIjKoj^g9LSBiK#0#l-=,d!9Pj/6Hl1&O\L"-llLG63%=o)/]2<Nm08C4;?)Ts^kLmVEaJLnneNCAtD/e3Gcp&Qo!LICtL6]+>Z&!Mhg`i)c_VhEK#>`R.0rVNfdAq0KX0TT5@f6#PAKef[X%;&0:o*8ZUp5(jT7Y7Id*p@fam,"3o3EK`p(-+K2UUlMC9kq\_Za>Q*CSY+(ijMb^!p@Tsh$f'k&f$i%S>C7Gm)f0YCo<kMZmo1(d%3DOs[l*9hOf8I/%;qEZMk_YW^gn-A_6gpD9#8Z=Qf/^'sra[&QZLYu,O.@blnZ#?dXLqBE#HX&[2EmWGW7Xu))2,kZ6J=G1F^I7A%Fl?5A%U%U(G"(=MKoac.@@c_uZT,Aiko@p9@8#7*$0V6=,Ot\6Z=n:PSrUb\A%,Z8&g#urC`"0a\?EAO*5FBPTsn'OI7cSDT?^r/%f9Qi0I(JNDbYsnd6"!j(4(o>$Q;_H#%!q_dkEl<Q[;U9`1-`ac2"*C1ED<THN$S]`(YKWE:fLVE\"J$e'@(Xr+ud`3(>G&]Y#,fV%]5s1,Q2/Vb[]t"T*TbPdat2:T]K8o/s51NU\U&8;9?I*4^>.aqY8>-*`19odrTc#h6G2&AVZrZ9UpG"498.fk]mmm4"L^)IBD,'q%d%LN3*?:e9hebW<G?GhhW]\lDn9A=%q=fiurK=^2W9m@PA\K]sr\tEFiTsTh/2,VSJro%*YqO:=kjohaRJ-$pWp/DHa8,=o6S>!3%/iC),!8[dJI4LVSD9bY:Q+Zt=qg3Bh\9KP>lP"44Z\sU,Xk1OOCHeYO%H$u\cCW!7:/DB_58Dbj@llt6o__\_B[ni-TGi-*C*Gg\%'3%?F:PEY8k60>ts&huGPBM.]q0B#<&[quYkqms]=1c4!.%ieC<^1>YKC[pMG!\s`IhMPf5#"*f.ooQqFn.m)keV%DQBk7fRH+B'%S=XftG.1S#ldhMaEr5=d&qFj0%k`'aae^8KI3rNlPI%&DdPE=H*bA_TnsT.>3?]^?jSt_L,_!ga;Xu@^APLE?8m0'-T8#cu/_`nc%-R@8#;Z-!:P2%9hr]h(Gd'_qaP-U<79\r!+aU2!lQB3CE/)-5Xe9!Q`fWq(G:1uQ]W`l8-3tPdLC"kI$!d!8\Y^/Q_#Diq)C6*K&%5NF7BBTmm[\s?>2bFksT=\Fn\fRX$dc)d_Ff(cis<Y).t+Rtl0:,ET]#s1/:8`!]"k'kF:'hK4%',$eA0Ckj/<@(jEC5SIf/PRH1%n\>jk<2L42dg8FaRYn1CLi2E7Kd`7g-K"$6VF3,5aB;`5AQm0@9q=UE`;k][Y[Ucg"C<miW[dm<Br7[K`%h`.0k;$VZR*M"n!Q5=%9-JO6<Eb9E2R-2<9`_[L@4ub+;<VcuCV#7SCt48<AsRPjU>sc]72I*MSMJ#3^?<9_gIPdB$M9Kha#(%Y<Ac2?1g"Oh9:?'=N3&hC%fI'V&.6u9,SH<oV7#5T>Rdi8[1/nV0F;ZT1%>k/fYn_p?"IUkFhii.b'haZLOCSeDZCt3QM/Oht0!gD`D&MZ*a>[:WblB2oC,SC(%h4bJ"-:l#J</n=U:ngVX*[;\b[&+__?32W&h?a2u.>R*i9sguiAs/=K!&J^#k*16J<110FCR.F5(;UZ<kQ^8jp-b&mm?-@2fF^PN%&FTrFOfh:r1Rc,d<`]n)L2NrG/PAHeW=j2;Z)l;DAIuec+YtZ2V/4u=.>63,e=hCl!f3pl3[5e'.)[8@6P_7bBf_:+[com^&6[Ua%p)\hu!]<Xs=js&(<O7is@ngbL'iMMXZM-1E@8*]S8D"8^;-f;%LM2Vi%?iTD@4;D7l'?r!W7^m6B%b7>Z=W5PKX8E?MkshL'n"=a%<L_:)D(-CjOfBjd9eC/'1;YSrbrMO#Q,k!#:A3*C:sn'0671,\,5*7Ue0)'ZS&,k.6e"aAFG)n9a^im$g]nBX0c=3Z(7cKJZSY<E%EZgT=d%;UN6^W4N&9_#8e=Zp6)^<PjKN&BgWPO[P63N*ZBuj_9AahiLO[P`o$=Tb:WN/S/WZOQhA@)"MQjU-QedcAf<5a-$X)rdj%EDCk<Ag'jsaE.JO"-s(G@d5k[`rM97o@GNb78gH+'jn9uQ,uZS/RF7-PPJeY+cK*qXC:4f7L;K)C+?rp)7iE@ZE0P^2-H*)p]t:Y%F=b#&.fs"m6s9.FQhkfch6cK7.94C>F;7o9!+a9mRUnipDb4=J:^WIQYlR6jZ'8u"!1%1XYAoqH84ZO>W[^[[d4$1LcB+3'bNqAp%Q]T^.<PqQ]aH6TlHA11@=A9K]muc:&]VPm,15IPmH\@hi9rdP&75\V1?jgs^W/A`DV-"F@=u)9J[`ZX'F55G(R51-48_($ZeZfft%.l[j$cMC*L`mShs(p+@lZBtp%A-m#qp6,KmpC-WI>DhW/Ppq(gWK*r91)<IE'Wp(KA6"dmj9/IO6Ub':DfCLY.@eBt(uZFp1FabP%1tq/3M/p<;\t'MAXI@39A@tIJP%!9q"pbRYG8B:SYkg1H5$/0/9H0cMJP`18=j!IL5\OCY&Rki8i-VII=c=5@HquX;T1bK$PAZl$%iBdl"`^J1)#G_?bf4jWrH6FtWFhq$k2Tc9D2Gf9ER]/&ZXr>Sb0u3qfPRb]B.c2p+m&">t-q,[eB5cIXV(t2h#UUQXKe4OA#nYY:%q#ic5.e?K@.;33'l%5H_9sdl9gMk5*Q;H:uYqrp"-7MppWkr^hb-h[DZ8W@k:+=%Z#.)l#[T4Ycj:Mi;1Q6[GciMNhZ6>@U1Zm//%_k=$O-3]cYdnR\q0KDNmR$J?l1M&m/0OmMg'6/s'acs=e1'T(KAHMs4e5>dh-SQqV`"l+^Ce7IG-=gm8@A1,K!'nnEX,&I0\tC8%%A2]`>/MR=#C7S+ScJBdO0U^`A;6mK(e'lDm1k`*5)<?bec;L$T`_(eJ_fRdO1]S\6:;a'^/;:c--lP0Y&HeMgOq:>qe^DPu:e9'/%aG`\!&5\5lX!8&'MU'E\W(YUe8s!Ii!*qkKm+UaO;1i!\1@"sLGY9k!/7K#k?6bWKLactoV$P3Y`A&;[J='V#[i/4(0=o7TQV:>T%V+b#Y[$ZU,K+PZ8AFDN4VD&9-l4Q]&bLWp]?"N`BTe]V\PGV&$-WI=4TpqL)<6'YL)2bF=fr;Q"Zf*poDcggB#qI`Ge-)8+5W"\*%-_`L+oJP*`F9bc89%5:Y+c)kH=CFntYqE$2N\Cp&-dCSLf%(GH3j6RAM4q1c/O?b`nYBXMA4SU1A.^8O<f<h`7@#A1N*Q]sFqarq%2j7P5Peb@\([2+*;Z`Zjlrp:k-j[78iRTH/ft&M4VhUdC'[c7m!&d*/ap?3L<)"nINNa]=)Q*e@LmV&_NDfp[6os@*NKl8!'*SFU%V]pd5V]lP/;Zb>mK8G'D3%Taq^hm!OJgt'T']--`njCk?C=X[o.GCX%B$1f>'[Y\:Lh/@g9l3f@_JN3f`beWU+Y-YQb::4q4"&aZ%J3""g8naY+ll$WQk@erUC`OmlV?X,5--]YOi#.kWBU]p5F#C.@C,d]#)lE[u=\Vk0M?%OaMD-k^!M\:-37MC;Yq9Rj1?0([TGq^c%e2RV0<D:DGeEhjK9=A62id7+CS).&SWf+kGTKnZB:!>RSW6rZ\RMr)gln-UE28FBEHB9)D"R0G[Jk/Dle,\*NbfiRlS-$X;R$#LL%;rAH+/_i<C5df9I4%_70d;2N27.EF(XcT)?[_Z9;gXH3b_dk/\gCu&>dm`"*fM#lI%rG5W_JN3`L:/P\A5aYgX]'ahT*i&&JMqLf%`N<)&Pc6EBPZk!#GW(c7gcC/*=A50YF\3blH?H`?C/B*X6F_.FQnk%GLt4$5(S%,#FUBp9.7qoH"o^1iU!S?,`m%GL5b1Xm2c!kf%\.*5[g3$]?,2>55\^G':4GD0:UDBt1_f>3+eg]Ore@6;!&PV7'F#kJ>#nV!FMD2D4Td#afcoQmC9bV@SDOs0BAWte.e3&GYaJNWq%;IisG;D_1#)/M_u@Y)o8k!F#(>Eu`Jb08<U/VL]l-tl2]]t2>FlVg;4&aN/&2@7i,(8+t'l6^6OC4^?/dG$+K*BU<jK!b]!&QOa)%6XIhZ>1@.Z:=Mu@U<8Yed7jb@RCXs5-3>@-?5@XH#iW?dKV<:8g(j%)iuPT;k2k^IM3MI]2V1^N!u-Am4$h[^'<ZL&0S2#bcqX^Q%EQ1H7,XT"aEa`37RBX0:KEB\!cuE:P$[^AuJ3:eM7J0&"*_@!WF>-RX/@an_mPMiAg`mA!APRQKSHrNBRd/Eu->5G/e4p.`h1Wj+%!l32Y!fUh@'7?^PEWX^P)/>1P+u"*=3m,PGCJYht%dCH3#nVJ[Z"7hs<G+33dnKrGZH\pqZATFM(3Pi&>)u?9=g6_UHZbOkI=[Dr%Z='&gW1.Te4@(pZ6uU_dW1.V-20;^_&.Xk'YA1AZ+09_qd6'Z[2q_`p`g&OK-6QuV3E/]UT]ig6W$W+n<Kd\UeH?Fd[fk4a<@`1Y%n#@]W9LI?!eO97E.uL9o#Xm7WRL'C@dh"AMXI^_*e4dg'2c[brR0_q+_[n\hc1R['R4Q'&,,cgr*+>jK2$ks,28M?+&iC>j4B#<M%eHEb7lSjBo17:GO1_Zt3R'W'W-5\Jd6X2J\OKBFQC*JI3/R;=M!lRr1!fX**;N]6=&Q;C,S$o;B<>2G6%7=)hA14IOM+S#Wadq[$%2-I/p[)GprcRd6R<>/eCKe;1&e`9duTUOM.V'6"k0Nun(fH1_khuY$1jFG$2BeXl;MB2?'H,0-D'H%mpL?Y\c!@bOGJG4nfjZM!"%F5/T=4$bRp?&;7_iiCCZ&P`A9"1BAHGE$<):V/nHGK@L\*T.-YK1kL_@1Gc$<9VC\:(f$s)F-tf6Zt4MliG%dO>#jIhA^m&XMYU[%`#=3a6j]W!Uo'pm@aZht%nKW1Cl?r19G![S^.+DMbc\BRNP1,0)lOGp+CH>9kQ3>+?\@/Fa`&DAFLX_:.,Ii;'=r]S70Z]8_Kq"d%_T#u3-h11KR8+*oR+%HUN][ltUmo"<(j2fS#VP%$KhFI\a>@c7YQR&!fLm0k$t,7f#jo+>7AWbW`'87Go*%tQ3?_K-0>KN#RG@cg%nhQ'P)p$qMbSVA-AhYSDC.R&5Kis1!fjj3%PXYr7.eQ&?0EZZ__e^MRY]cL_qK,rX*b[UgV^bL[%bfu=/PS0C8p/lRJO2aLRo55_%YYkb@8+`K,Q?)oI:m9!,aPtIt%^kTGogUJK,Ws=^ZI-*,`="E"<TF2.rF];rbWLlrWo@g<eHp+OQ+r(nBOJTU)YOKh['3*/D<s1W%ojK#E^g:XAI(Bq`6dpn'D\Z8bN6@pt1lMnE#gl)>-AYPcj=i4e;&lNe5XsD9\cjF4?labOB=99o?@]1.-@^r)BYU6UVU**X<Y;0m%F=?.*mE-#Z.QA;6Q6<o/[t[I03mSZ>iN*A7I;"cmQ83E?S(=APa@rVXeifItX,J*Ba/]UY7t;/7S1+i13<FlFYjjj]VSO<;KlE&K%$mmM^RtZ/Z-DO(M=da)m_pn0=$0_JHJC9C:;%,:A"K`j.&oM<3=,,::Z1o!tGG\kI<+L=2P%=9X.BC[u,2Jui/BL415a82j6AXPG%Fs).XJWZ*FNmD7*n3iT%H^a"4WM\q$"fC#_=\!ALSJJY1_!.$cpD4LqROsGo1iB)1i)N6e;'`SE84.>5Q#W.\Crm#17HR(;N`Xa=%0idq5"(=NPeAEk90Zkdg8/C2_[<:%j@`V_Hc"Y6`/AAuQ3UPq>JleL8').8FG(^6D9G?*fE;B]#m=3SnF@h4H2;M3-!trf^#n1)i%"Ql-rDEC-<k?[9qR;+S^k*dW[`4[b*)</(D"ET@b)]:G+'M3kc4iZ+3*.T3uY1Z?S#@<d09*ccD_Ha>akVr\o\BuV<1l.da%MHZk%jYY)a9F]WY".7<M5q!.&B.M9A,)CS;iTh'W;:*T20LA<(36GX$87:?E>r(&s!/QM5]oJ,c!e!kQ=YpjZM,*s07gIsDd7h80FHN@2%QKI1mN"/l<MWT.B"W2%n(sLs4(pJ=;Ee_Fh:dNJoAMUi3@..8f#hqetcjB`,9cAC&"F^^AR&&riHIR?C3mP3f#::*8d)p3(5oQQh%+]u.p,F;)X2+L\&gu/:^5Qd_(4NIjX<.JXCgN$_?!e;`TJs:+13khgf"&dTf@>q(WL8+jHi6iOG/r`I];2PsAUtD9+'>Uf.>1Y2l%D.@BWf>-h'?l,G\Yc1O9pCrngAVfJ&BITA<$e*XY#=@c@S%ZjMAAgO-@XqQ=pJ]-=+^!nK&"UDR#`t]S[]l5Nh[.agCnL*91C1^l%UH_<u`E+r)`%M,+M'aD"J0W%;GXRIl@r%sX,?cqBM.JH'$ah7!$7(74c;r&]JPrl#[RB>.)aHqY<#:/T;:4DQ`LI;k>0N3\AEM,[%CrRnm;\cGN'eH1;//dBhDugO;KDJ%;WN9^+R@#=P%1_*X`k3'&`9cDd/9D%R@VF;ff9X>`"-mm;#QgPc:0J:N$/GtZ7T:3SD4UJ2%J61r6.M`Q0+Bl(dA:Z2NN.V*jK$qU>]>Q4*FI=!"[RUgQ?sEhM2E3u;O1Ze3fes3lj=m-<%Z)'K>R"unh^-@u3doUXR&,fuQp;)!%ELqdk-4iN<Q:D-pi8V'p5mA!YXNHhOK/N-SBXUD8'9&U#iJQP7FAO5K"9jioE0(4j5SdhG`@XIc.&uE`5qF=+c7fh=5m4d%]-<UH%$ufFAMI7>VTG\d_$r,I"%?2PK2Tp6W'<h95>Qfs='Ysc8o8AN7=uGo&E"PcO)K#t'&IadA\tTQV(]mMbgEV8Xhd=d@#Lm@\e!P5G%&Iad%I(t]"?l(7s"p6mq7IXUc121"$."cZh!k,QLl's&U?la=hDiTZ^h:WV-+rK;SD,$,-!e:Yd#K5^W<5Tqs;>pX8&uDcANWphl%;>S`?=G!cR&=XP[>l;Gu$q^,XU7j'>quqnm@bJ<i"barJJcXsd5\utr:`r(5R0NaJq$X^?);7pd6J.6.$IT]%6oOkD.[.UY_niem%S5Q5Y3LWU9&/JgCb$Q83K+T9L?_D[Cdf]^<6<jgJ_Pda;5u>d-71fsQ=WRSP?*]i-'a68omDu:O#[eL>@<poe"9dE5%T3k%6mZ#g%psh+A8X-qS[li*oOe7(7,5O;/M'LaIbn1dk&DT37+=puiqrS0;.;7<n7pqe&JeZ$]7t*7N`gq/pKK83`&3B!I)SX?Zk8Z=^3VE_>%k6R%!Tfa:q385R%6=[PGk]\6_<E98/]LV#)IAI5B0c:!BDF8TV9t5Pq:j=rXGL%-6&'!Yt3>'-aF!;%KEs<!lEntd@E.Z<">0K-B%aLKFO]'#aHMLfi!6E4\dW-]!YD-L[PF8)1*@qA;*lCKeB^;f7%3BCiNh7.eA3i;F,4R/L?Lh3846hd)ViU/]<L+?baaF)a,]&sL1%g)&Rd0GB>^[s&:O;dC1;D?QULCamH=F"m+so=hG,Y`$V%;08"#OIR#uF$O@hiZ=Y3!0AJ/o"d=66C;gh"JKlH+=cu!TlU^2"8=ub%k8_8G6hJYiT+%-#Q[lN=N2NCQ^qFePe*/F;.0m)%"7D_T]jm`Dka`q0;E=?m;XYTYMlBDJE:9;,>@9!+(,P2kGI%CbF!?:Lk<p0`%kFa$BM;;&AX,=nDQ2Ba;Rl8HQ5lVf4L@=f1k7)$,f7`?BS8":N,F#KN[Z?LK3T)lVA`%J,*.^+IB'>j3&A":rqWC6PpWn[MoZn,*%c<15IF&9?IiM)Y8kF`@@`('bHcRY`m3M:+c_cc!%3Q`KrU'+bCL9l'dXuU/fA*Sf\k+IW-r$-@/);q/sq^1NqF!7]%:5#<V%YeRO%KoW;rk^fJ4oaPue5sKL[Do_1bai'8R<i7p"MI7:[PS<"*>#ZX?D3i4p^,_id(9c%iF-JA(TGD[pd?mH?i.\<o&],6i!'pVg&2\I=%DiV+(gU^n/3G@;Jp_K*KgnSQj^4tLT*j5*[kA2"o6J5k,l;I[3/C)+coJHu<=H\fLa?GD0e&4!PN!:D$LbA5]$s9A<Lo+?<l%%nm%!K:_"cqFQe!21_AeQre-#7ug*:UrJs6Xgf=Tn(WL`E(c-51GiU"KT[ONCmTijMZMO;FK@1?jsghJQN,;!e^^p]Vk=N-.%c^#2A&B%_gZC0i<<%9_RF&6+`ug7X'q<NJSgV@Y[)P'AfW]S'b)GmLSaN7,7V);kWj:8EZt2n\#rgVd#e$,@D=C"_%L8c9SPl4@r!Gl@oK7/%Ct23rl5g;k8Vo,6_m0F`q!Ed_*4n7cW<Q"`e1$"P%Zkg9Jg!R8`AYk=gLLCA/;^8N>)4]Re9RXYNMo]J^29RkW#:HuPNRK_&f8N?%UnSDGM_^8Y9GZH[0ED84VcntYb`FG[BS$P]@ap;qPpB,sVThHgBRhp7Nlk[\(ir;hgjl75m%q\16s(n')d4.`Y5i!;".1*61BN.;%2N)[E!+B:e.dhV-+GsmclobQ*L@lfm`1qPd3][uj&=$O/4>NY?9cghJ2?o]f>83#M?q^/\8g1s<i`[#"WUZomfXF:pTsEdAMK;;<%.^GF5jTRA+C_dq(l1?P4!XYHW2'&'==pZ=+Aah*^=LUZJBY_Gb^*>oh9Ig8GRDjt&GCXf-Ti/JKrbprU?.Y+-lOnOG]n8XqntC:U%j.3R]2!h$/T>Z7+",6om^=TkgOsT>qSMbkD5L(<ZeRJ&0Y@H8g>$?i:B0&gJ\"l%Yh=k(!h.MlC`i^Qic2#Kl)=0.pcElN)69r=3%N*BifqTDA*/RW!1.sr@%_QOn>_&o^I3lH2#r;Pamf%+g*rq4DC*H0(e0(3WVJfSdPq459/f<asiXhR6D^Tq6Mm.DE\lW=+@SIb_e%]A=c8*[\e>Y!ZThjW1U+TBhS0`)cChHm-36?Pot6^3praE#fQoq/m\Z/+^<S6Qi!)HX2ClqG&*]FU0PX'mUf$=M704ro^"+E8B%;%\dj:VT$"ZFPNCBI+cqi0lT,12BIdGF5h>F6i-kAeHm)g`Da_:<[XBOgkBa`-7.k7^82H`3bhq"m&;K.MG9TO"[C[$G7*h\8?p$V#%HmtBAW:HcekbrMW+YUf!(J<J?j^G79(!c^BNVQTXB#gT`7?1'4f<*,FW+fMG+pXk;lK#(gTucQ2(!H-om9>]?OkY"/o$c@'DFL_.%h!SC/?bX5L\.uD6drd0IMg/TeHr[+b]G<@h[Kl?>e&iW5CQVsTpVUlKK<E#A,"Je?p$fB1&P`qZLhdS.[?l:n^(=Y0(T(tF064oD%Y=8FqKQ?omjA`O/?&P5>>-86o+'chO>3)ohoP0XY?hUnKF/.CrVJEHP/*sm;*=#E1UT\no?HBhr0?i#lOB+_>/<dlj:2T[+#])Zc%\eT@Pfb)A2;<q]I[j(QIBu/A_2!+]Lhhj[6n#orX;a0Jh.rrf0*U3^eZhU\FXfoKU1nWm%qtp!^mH(8qc[ZK%jT[?1C/Epi$Zer=%p-AZtI3(=$?C"['gqZ0=ZGjurN,CaR^O-SXS>7DP`!`d[ie>bb5pX^u%BNX7QQ)<!pt/D;+%.:B7>iETcJtglO09Ka+b3]?ZP.q_%f@o<k/r'[D4!Cb(YnM`L.Ihd=mOjF]CC;8p0Y^fYa<,aPJ@&9_NaQ7+oZIh?jOqB.Zb@%K+YM!!#U6*NNX-gZquE=CG'4^.&aYaQ%nanQ?h_3l?*pZED\lset(k)bi4m'oubV@6<ncK\+d0+(_O&%b3g<1"3T'`Sd++dFqK9IDo!&<*I,q8JB"PTtI6sNp&"]Dc2>CHic%T*s]M"*6cQT`mkL`.`"l`!\)EH(,CFoK;D(=ln`PAuF4i>f#Y!b2-%g7.Bdnok[\40^$:)(W"M#l#HrKH:NBD,<0p*13;N$q"$&I%S.VUAO:80`BtoI@_4Z0.5QWN>H9RO8"1(VZfF[%#]A',P_aYIUIk1E7V;Y733HGJ,"eo3=Z49bJi'CZ,c3\M5h0B/ZYk<"3#m"uL%LRF6SjP^d)HqD,FE9"N0%ir)orrDlMDb^@@AE3dBZuTTP`l9SnXAmHRkD`=<dW<F.bfkH5$`YXH!ZteY9-,2.UAHZ$949,HI>hIe%71p,mdVYs-U<hj$HF9KdON<+-NPQT0]pNBMF"=mo'Os-Th=Bo![ca7jAP7r83H*f!%)B%_"L$*HISs@0*oMmmZ#QQLo`0t>3$;WX%M[B!Sc*S78G7OS_?iq536mo;l>pKS;BP6olf8q)MA:*VL>)fgs0ucP@NT*cYC1mIP)>[t-dYF;QEXf>"kL.?'E4*Qg$rI3C>9&1U%5epNEp_BlUVa`&08-&/s<;Ek,#S.D.B<391BRISOA1k1RpE0s))Tsl!/SGpZo'\NF'u.8D=,\cPV;J#*#1#%9#^$,H`<LiX/&dY/%C`9g(\lp\.!9/:8!=5t-8D)QN]c(P?KNO;,CI(QXhk3af):C\V5tB9-/e"4npiXbO>YP(eDHi7f!B)ZMdN4-a/865MY8R04F5?kn%LY!p5<&W:`$R=1C&2QbCC(JDJr@lbC0^%kkCCeL4Jh[CcAuY%dNAp_USq@p9MXbRqSXW<"q"qBb/NS`&&(mfsd2mhk_R^3@Z/W'<%Jt%F2f2CS<X>YGkdfbgTml;$J?-"AHHXW9m]uZ-/1VWdlCt#;-p=LTC;I1I3F0O\eB+Kf:qT[j4Y92&6U9BS%'['c@_?Y)/D;6$E%-FS:\!UHPb.$Eot0gXQkg#GJ(F!/XIJ/Z?O,R!,nY6[9-b9!o$g<?>4]P(!EpZKscBCQ=qk9el/@2)UjoN!/-!E/(cRG$/%PO.70%*iBcp=5[.Q[`QnRe++/^-fGX>;1l:YVI6RVY^#L'i!A4DO2e[ol*j\mr8hD]_T:1!2ocsnZO3(0%u?O+W>TTh%!r47_&`TQ(n4kC%5dS16H9FMTdY>t;>e58d_CqUB@I'0Rp%W7=XuX.YX"^Y[K>uagrN0ULcegoM9m[";5\2Ieouna'&A9,=VWUk+b+<Ir^ZkFj>U<al%*F0%PFn>J^'ES[>1kidWd*oY(_A`fdn6dCUi^I@TAOA(<ADuf^Ygt*#/D7oo\ZfE,30FX]<EPe'A@[d&M3h>C+N%tV"6lYsBJb9o%M/#!'/<H#%&Q'BU.j5W_U@</U32Jqa&Ml&=n4#_o4BP..+(X1o+X7mG;\2:SM0fZ)&D^[%9_\WX$(8dg+\&+c;/j"Mks&]F$tN2*%KhTSH[S.p6&5uJ#67J>lO*.bSU!Eu*>-;8\?Z4.d@3#t&N`:h>l"9sZ=GX5\c6iq'&77&JHAI9B<r!Ou/Au1%X.LOOen%=;&.:^Q%Et(GejC5LW(31S9=2S-8\I]ukDh/E^$B[Ki6EHS`-a[)Dp^R='GJ\l"*oa]J64?g(_^rbn7.XFeh\$<8,fIQPKij-i%7eB./EH8&%5n("0@kMD>LkT+6[nhc$S8S0Q%neACDRFRc*P&C,Xg)(_Cl",iOai/FCeqS,/JfJdaFuQ"\I^Dtp-_P+X=(26`'TtZ_1pFu"NljD%+L)Jbf>ES\Yn4af5tNK0Y\l<I`53$_>>*jlZ1*gN+#^e:dnoO`IUot7Q=pO6=dSp^K:#B"J&AR*=FRt=L/8G$9H+)X#].,?9q9#1%%5+9Dp/rZ6ZV)_a)RFs.<WedJnJE\;9\HAT-Jt[H`rT4k,#1lt#M&k?gC(@>$j4mMSc=T;fq62pKH'1]+HT(F+=OpZX:^]'3PI1i%J'Ki-/uC3k;YGsc*3D'X1%,k0O47c&6%G9](W'>MqK?:Ab]H),=R5K0.G^Z!K0+fN#RZck;lsnl9N,%V5@p6DL1,X$R]R66/as!0%bmBhpO5[=m'p914PEmICDWDn!n&kUbC.,"-U*Un>G-*8es6J!bI+sis'd)-]3m8Kh>DiskEk`lT$OFRW6QnDHbn4)SYlVY(hr^_;%j'i;!@58d6>[kU(*9\qbM[^cL]EFN>B%d$7,_?P7m^OK"9H<@W7lLulqLmWXb=V47\RB*3f&,%(+K=2JU`0WNiF!ffbcJ1-/NCuA%*Bf"l"N,&jX[sV14heWU'23Z8T!pQ`A'dhp[p!j=96.gMf(ug%EQ"Jp8Ih,Q12^mU+3S1f%MM2.95Z_FV1oN=<9'&Y0JX4M7A4.-%k1q7=E4X&+9>[L-D;!2Q^D0=P+Z)l;3U87Si!WVuNCio^2'UmN;T!#ll>984.(=AX%Hp_bDemeVa7!o21#KGt#t%N5?JJul`[NH-%&fYGC;$aGc7RCoN=GRFL9d)Ebh`G;b]UWOG)n>h7pecK[mOsSeXdPNUa3c]@VSn3l8L\aS%C8WS4&WuO:(U&-#<5W!NCdlP/]dEJ%C7#hHql<&"R"!!d)mBfuNg+*nmL`MiL^i!Rj129`fVG?MM5igWLHAt_DsRB]A('^P[66er^iI2B3e0?d%P+L<7O"ek`Y?o',a&EJ%eF>iek#I]c48[-J;,##`ERkiRMWsmYQ5bm_Ao<61"Ef*Rp5D)3@ua*L3^Fd-KLp6oqT.-d?SRR+4sTP,lBjA4U(PoF5r]c1W8g>k%W8h7teA4)'/#Zrq?Ip4InU[b[.&^X9P;oUf%=E"pr$/.M6>i=^7]#c>WWPWQR(N^iQm4La"Ee*IAl._HW8iqmEXpZC#W3g)j2N:A%A*sK*#jT2b6n#Nr3\V,OhP#t"SD^MH:^;_ajPXlZ)BA@;SY-H$71WEr#'F<)T'$UKR$"FjJi^.09)+kmeA:hBa@6>UlpZ;23q0#3%n!FS[cZ@-K@,[sF*RfQMDY9%SR.JZ:.]26YQoXlYFC9XR\mmcb8=I7S'[q%H&^t_Ra)oO`'j!+1r4-2dF\E$Qb']M@,Nb-MAOXH@%cTB`]_r?;q\*DpiN0k(r)sJ*d1&GBe;c(MVk2m!8362Ek3*6<+9LuK%*fTRg]K.el,H,,GLrGFJ%ecl-ToN@o20',$nR+M>E(r$b%j+I,*,,bU][.@E?eFC@I)L##u#I1O]hcudFctRu]3r[cF^RaJ%O4k2.=-#0sMoYm!pJj[#q*m\A5$1@t5[(e5XpY7=e_.2CPLl]"%#r-^RrZ`uS&sHB)POK?O=$)WM'U(aHHho;p0BB:'69F8h%q\#6h5Wr;8'&fQ8u'#[A-RBE_,uGUHu14#OHXT.jQ(rIS;]Dkk-1BR%!M%;UjCE?^UA?,_Y81a'OFTQOM<0eg]NR:MY?%Nq$98uVR;@Kb3LN7+Dm/KlOX;)hnfMXY+6T\Xb]4uj)mcW)d*q7n6*g']-d#*!%1'SsnBa5$hS27Ke86B1MQjlAa`b/oH&VdNK&"Q"i7U[0MXZMYB_D4<]S"_3^jjh3\'#HDY3h4V2K/"Cg%(@B2A)53RYZi7[/!t<*%/2*4_h81q%WWqJkL#l<D'LGp9OV!fh(;fWf;[CSE]t!hg/7[0Oq^s-FEt@otonj>fo9Fd$Kl\VUH1\fm=aBfS]7jf1'$JRpP-DSg%`%G4q5/7brDbS#'?IXVEPeo1"QWJIE?4dF5k3[K6i\'nI]ja/?$ZUi2X>7ge8QK.O(%cfQ2%U]EO0&9"g(+kOR^$UOf\GZPO6iP\%rpmqMDc#"_K[06g]PjVD_XQpc%@H#QmH,a@(V^!T6Q(tG-7FkX_I$+p&_d[O^B)(mLTLiQ`2m&Q2noA)MuK4'!8."PR,HoKn\@C=%O0438-0+3NeE2,<U[5;[*=lf;.K77>AIg>S0C1Ys_`LR1S4G'c2#dKlkA#.?B:9mYp1(U;X[u]B:(S/GTBi5LI2!mGbu)$h*teAO%E<sgabi5gE08qjRO)MTVq>S-=9BR^7;'%4a#?o3S:Uj=A(`o0Yb'cfsg78grM)QcqfoaF`3XG8^dYf2gaap8K8Knc8<h^Sf7Q;&g%h_)!Dg]"jj)O^3Aerje%dO&F,Sp^<>pRq0"JW8RA+_eigpC:KgY4W$d?oaKJWC>lQ4^R;XaukKOgBOA-Wl>A$Z]fQ*o'a+#_k1_4%/%e"E#q?7#(B,LeL7`7Q&LCE=^LE-g_$J=bOfF>fF9Om$%^,$_8BPC#`&Fehi.6TQ;nTtXJiokjhoKJ1cnDIEBSh^R\.5u.:%^$2%%l`T$YSrXXc@9&<]HBNp\`6K(gAq&)T/TeTG:UbF&c&TPG>j?jr4V4"4\s(7;?#I3?tn+0k^%-Y^mN45`?BD"LG98.PPV-0nm+?R%?G95qADDqhDmuU`Nh`LmRDRkGFiQiWhe[;MLrO29476-ZMp_cm<?B]FjR4CpS\Qd_6__L0@pog:D^lRe7NRl-\KH\=6SEXo:3!7+%]K3ZlO4@6R+bIs4$i4!FacZM]TsF`haM)@]WQi>d,5PHnJF3#)OZC1UFclgk^9h8iRqdcXe7+@=bCOk1N"A%-n9/n0%'l_TpuLfr%&nqY90Usc,0/*[Rmb`o/&J*D%WrhTD&;MtffB=VRp(%b$\)6X9?Dg$p5PmGF5Y4\<qeZ(k@\3U[`A(1eLmi;l'WA^*7Fs7j@%'h&%N2U6Zj<I"U(b#8DLh#@4iYXYBO+EHiPs68k,mP%^3<h\"hRklRapq[5%:4(B(X=a3;Q)gl<O*2p:4\Qpi'4,)8R]f$;kRM1fV5*=%TR]>F905n"P/7NQ:'"a<-];H]iE\>U\-t$<:Kn4X+b5#bDe:!k,mPejD!uuP5#-uk6NA@=l>NfUZomJ<TK%)_3Whub)sfAR**\NN%J.%2i?pjf".'\a*)8PoAhIcg<"[m#:NW?-g8+l0N^ir2N;Od`SiS\Y%&PuAq*,u*h3gX\GE<KZ<c(863!.Srn7g4ub,!;ItjlBY4%';2#b_RNAAk\,.Xq?/2V@CZku&mG<!!(t<?qZ&#f;k*sJ\';&h?m;EH$@Tf(YTf7h8@8kUF*XuSYp8MiQm>r[%MFkr$_[;@$:,Jq%h,BJX&\++-PtTD6.$o]GjBMiG.9f$th"l9N6OH8dTYf<AR!W??4@=Wdn,J9!R*4.:2QpI9.r'0ZSGPTMjLU#7qn[<#:1f^VYQtQG%!/Bs$&9<?@/L;S7KC%A0$+Vu-6LM[MOF+2CEr#DMkE:DSb75s;=:a]?llXHj5#qu<ptSF!#Uu*-&@$/<Ee,Lj$7*Aqi7bghg4(rl%F!kt3eT?a;#e?=f-mfKlmN9W>Mn@PZo'bnHqY%Fs):=aj>5TD!l`K"F0#A]/W:.CP&2KXtc.=o/kN>aK&>Q;kKB+F[XIJTHiat9>%D`57A7/7q]C_^lqrASUPF<U8jh/%oHCbE]"3t"?Cfi`-2ZQX3CXmp<%P^6\R#Uo+<akBf8@Yu7K2!SgC9X2cEl=L,07sNg*#Ute$%ZFJR!nep+B]%Ipl>jn^&58TSBj(^qO+.$6^eQ00'&XO9qC,nI=Y-to1L#&b^GSsT;#B=bDF19[4Cn>XU@7^V_K^Q8fn_JA]\D)O5%?X(+rnEN^Um(3^4Lr(:GgsF:o)Q_[&ZbFZ#(UmU;!j?MFh/7?KHH#9k:g>C4`U/C['`g^B]@F45.U?q7=-&BrNSS]25hp7baO53K%[jj&i\_QH[W]7Il/[:;pFp$a)9UAt;FXn;EFh.IbeRSWKL8`6<qhs+Zq?^1=3.[hQQ\6V<Y=>b\;PkS@4</2^ifVr(@IFB,PQ%^r%L6>Y%hlXJhAt/6A:oH;HP4FAL1C&8Lfg-/La$ECRYT*A-8C`c\/OhK*V31u<<&E=^rU:,uk`_UmN'b'AqF:dB6:(-OFo+lF<k!gU%><sUQg^GB(qp)Nl+\n]CY[dq`E#rr+983P2hq2t%8l9Wm<"np:hZ\a^c:>qN5i!k3No`!ia`D4GDH.qHq%95#R>[R'!9KGaq.0LD%3H]("@5SR0%r[+8Q?qn*<3(QQM33gc=sI-!M6Y5g(ZF`AJDsJ7D,h/dm'a6#M!2)TST^d9AOmh!22(\!Ue-V=EZT-B,C&$>W),sf%k`[HZP(F0'^*0h_H4>^W9l^%]^WEl-OpV3Q3Nr#7KJd^B([J=?l*5_i-hF=V:\g682K6Bah(NQ3\1V#a_N:,UN[JOClduE`iN!;h%\IgkNopi:srU?]Cn;5(6"GdbR*'S2AbIYR`gsjTIZDH8o!4#t];i+5?8s%9^ZKuS/k;]m(.A$,kcXSss4=/`JK#+SNat2O/c,f>U%nte-Y3k:[2NuJ1`60gZ%Rpn"+2."6R1hOfb/c2V*lY'&(m`BKp2q?\.ch!$]n#kWUZNB!HdQA"*r^)qtJSJp2'd5^Gr8IP"g6c>a%nF@-RR)d#Q<8YWrUqNXgX\YK"Pk^X24Q/S=+pTs!)=lQa5^#E'>O;d)O@5Qj',NU,N2-FLb9b*-BjaH-\)'"5&O8\')EA/qr=(i7%f8WAj!b+ffoI^-G^@a*d%Nq(o2.-`I/Q`JK]kk)ljC@JQf(B&cZ%l(2+Gd20eobIGArj]_hW#o.9C!Mg0"l]W`L.WJf18c'o4VDS%"k/;#/cajIT\]i[[("mL;H2]`]k\`gHJNo!NJ-/2YbQC_/G(R/I7?c-J`0$2HIpeh`h@SWfkM&4@CWDtX`jg3c`MBl8bLZH0Q[nI%'7(H!GaA2D<MFXE:L)+:XR4BHr`I0Dgm:[VHIpeH(Y;')p:IUirf2]h2;f@\K:Y$IBOM8Zh.sA'[6M7S#OC=WQgQ`pJ%g'/)[Y?d%@+N$\U(I-sH]<3)BL;G[(L$T?W-aL>$-&Z=N>dE7dCf`ZP;M-u=pY[Ml<^5,K6cZe""-dWFfth4Zif'-SW"SrI<;Yi+slR=?3:]6%I-Y*`EqET1_U&1XHAu4b+]L+B9/-$1g)XCr3&:#;&N+g@1A+VF?@sN:r]R;g@nWtuHAsH78#k1#=S4^OW*Z5hC-ee)UE<]UW*\])%Wjc7Gh2FD\;SDQK.[tZ^YCTS3oiAa[:n+tcWn41>64)0MMlJmXeI0.%76p-E@rmBXm_sXh%?'7=`g5nD&+%]$\ebSp^NHa-:WA9f%G9E4!UjJ)MUcn$M^MiisgS'Yt)7#>aO?iY8fOGAV6o.*PFN2tHr'iYms*T0%%tYu"VS)SXUc49=2E]P0,#7MoY6dh@#MHORq>\Gs%E[@i5G]&8[p8B#X&7;,-5bJ+9)10/TT'Pqf>chTIi>8bd5W4sVI^2_1Kn*.K&_V5UCeb8Y>rT(3PN0484MEp<gFIM:E#eEO_='hg%de7eWdsguLW%.GP>0b<&l+++D>Y7E1RDJf9Q(tR%cMg"/=>-V/d/;Z4l'N[2`&q.-AMDB$b9`mnn4B\f\dsd-DiFPF:L`H>BM-Ri%=:EZWXpQ%U/@u.%Yg@>;jSX0d*/C8BD[6*_5b.RNAWuX\6i`J4078!a;P+O4@c(NiFG6%Al65asQK06L<(Q-pSY]SU39;;gAi]Aj%2P\nLHmN'^d<EkX&3]bbinN:(`SrM!_,r(PS#+-4[!I_cSZMfI[\l:/D1!MPm(]bM3cD^RRTs?5-%E+O#$U^u*[0^SUes(kB^"lO%LNG!:qRi'MNCLj.4:W(al!\AZUG,n[Gt)X/(;KYfNr)N4GWlB]Kr+%hQjWSH#f&&F(&\/<Ofp1&>E@;Hq8"UAbYEl0P*Hrr13V?)%'^(R\X(jd$VbY;TMn7B)kN71jNkogkVM8>5c$=8uq;U5@]LKX7ZI9dT<fr%j=%JM&=XGDfeaCGmHHtb^YbSP[QunYIK!ZqjQ?gl4%L!g$=KMYIHA[W8+-FF"JM"RIMb]];8oG3*_/'oKiMRc;eNoG(h+f?MI96o3?a$Oc3RZ=,LpFk$he-s;"aYgmj(lHLQ&T2I)"[Ena%V7?TZFs^uWo<R=GF$VES`!]1Y\WP6D%X'[qK8&I)\*kGJ"2crsTt(0h&I"HuKA2_8blqIe6Gg.m_GRNS9T]Fmf$gU]b^/K;6ZKpB%7uY]1AN#Cl>im>/LZ\0J@]&9Cf*O=@k44)iQ+gjV7)\NNZ-Z_e7NXKuFBHh:GD>C7OSPh<'<94\>="8pe`ESu`5-pJTt7n".<(9l%II;mUJp;["GXlmB(F&$:WXI6#g1F)Q6?YZF:gK.rOObE`JW(AN@S:cN6AnVq.kXM5.X*uXndf?DiusfKP2Gd@a@r#n*=ot+T]_>j%?nR(Y5fJH1*9/%MJSscGTt)j;-f'mpR&QA.nIWe>.IG])0]E\&.a;P-rrcDaop1I0UNM>Z?qmc%[6VFe7]a'=..e8t[GKjRG]fD=%6>o-pf'P1Y+6spYL&#&iKgX'9[tN>L6nN&-8o)7`0)6LtJb>8Fo4+nVbOE'[+j_Se%8pBljk:3HAM,9L*N]L;p\#G4#YNn)elq3n%(qe4!J;dPl`*=\^e8!1qH^tDWH:$S2q7Y)\!.+8OWs..:)hV*]>1!ZinRREkBSqLM]/7`cj^>IbEMRcSkKCC+P?<]M,)(KK-cAKE%XZ0ERGTPO[K-ZnN[-6B=XQ0DX77g/:46no>HOjjqIdsr]hW+R*^Q6E@V[;'\_rXp)0Bj9-)/t*Lh'CIT9OmqZ+uAjHNIHt=^1Aqf%nnJnBdU7bq/SH7^`741MaZ6LCGjI`KQ'qLpJ+[FhS\L_gX(QIZ_\_uEc9$n9PO"R8K(JN^mLN(7Y4%`?b[L360m.qJZ=A^359(9g%&PfBC[jO=$TU%eeM3E$iBDjj%S%"r/K#`EHSmQDp*%*t,jlaX4&ef+Y@$r(FVGJ-cN<18%'Rs8T':?JXW%<T?!SJ/#5\OSR+`l&q%E+)b@rQdDl9hK=7a4TIC,ZiE)Z-;;^1q4spnj5c+*Xg(20"A3j:H%cd%umh92oYnZA=UuC[bBA00?\OH__Mf#._TRs$WW'&qNXUV%JL-TJqWmh%Wg'1WodO<:a@tc5M?I<M(d4`g7<"hWe>H]/N#FFDq>aZY;EP[*fK2na"-MdtbJfO[)*j1#W8S(/g&9N_j(IFRl<.+l%bp+7elRtp"V!`['IRhDOo9o%?$[]h5q"'K-8e$S326jYnpEs1,@&TAL/Ztiu-r5"GdSS&tVS>XLh^$jn;\K?OA"=8FCe87AHuAeY%?/+H+gC*Us@[K5Qd=9"+(@0tP5<mLhb74Z`"<op6blu8\Lk#KgcOcL!6!`OCd1<O<7HH+OTn]&VY%\kR+3ii()C%2X=nqi:@BcV+%jF:UNGkH5t<<s+0SWX5]MItaO+JB2g;,BrD4a3:C63[f01+NGEqh*#-c;5kUXWC>d7:hWBQLa)Sd;kSYk&*&V=!$V92(r6BZB,On%`TJLC+dhOlh:5:C<;ei.m#So_@hq5P:u:SB"]'Xa2hRY&inLE"10e@'r+%Penu*fW<\ea4:sKhO8KplHa/@dD=4%]W+[`U*pt0Ma%.dqHW(+t^sVT(c>%)V6cKSlbLoO.sr<#N*W)s(cEkC-3%4pS8uqkt5)h5?$>(@HWijSCiGB)khDjZQ$-Z"s%Oa?1\D+bmT_U]-jJ%f<kKW)%1-g_nsO08f+uB*4cLC%ZiFe`NFY8OXqb,+HtO>5C>"D*4#)R?t%4[-u6MX+sZF^bH0ThK3&NpP<A#o$5+LgZAa$cL)^=d%Z=#6s$kt&S*.&g.7hj&-Z1>,&e7k+_s5JAZX,%gHoNe)Gi8c#**,537+YN#l"/X0RQ,a7UmAuo6=<BL)Qlj]IAOGp+RK0(:lgRh&%;n*&SSRhOG`WW'0:4^c]2'P\-Y/!XtehUb=@mha_5d)*YpKY$],nj=VY$At6r?<T#7UUK7o1M-4FJCJcLb!7j[@!3b"_FP2Od(NX%k"]`g2O/a)Z)?pL4ea<l;8J;j$sd>pR\!]`#V$ODOAS>3's;sE9fOU2WsV6>eS8ge<mh6CVTtSq=;42tUa-d1*_'gpY*4RMO9>(;%0pXa[J;kM:c[^*RiAJ_)1Ss($*'&hQJ:=OH#?PN5$tn_4N,(o^R($A,N(H(C1QmWAGY^Ql4EIU7c'T*B#ZXTY]I$XD3&JVbgJ.5^%5ql]t[cWGKfnEten%,3aVr"P'3%PM0L-.c%_`l26VOq@aY9GOPoX])ohF3r4#/LK&iF:m3h+IBe]W$5KC"P`.o!%%2G3F#m@R#]p%<>itN'kn`cX;OB6M<rT#lX@Sp]9U51#Xl&=S3p%SPjW#iX3)@_gWC?k('"[?n/RGFJ?0*:2b#$IhW+'OZMU1jlpd']pc7%bJ^(:Z%SlL[BCe=W;3\3=jS05kF>C+,uBUAk">5NC7$derIb772Jgnk0oBqj`EfGo"Xe=@D=]bCt].c&-XFnR0L@h,-o?-ALaDr-#'%E!))%^);Zie>*])iTXoK6u+:&-XEjY(4/.KgR8U<D'>A1ib$>Z'aIdoEN0,j*HViWP)#CI>QQFt]"N:@E[D\9=V<@*g_+NV2>nRHhGQ!I%^5;U#hb,Qub\b3\;IT9mCFQsiVCai-Q"^-,e`&U>5R(8:IOU8-CsUR7PbrUJ*mD_35p-k<YoRHi;CA)gD+lU[Y3*o(_6B!u;nPHQ%,F*:3Hha:kc&4G`Tmq1H@ZgP."G?IWL]Y[W<hW<0OY_%fP">8"9i!Rn1gCt3h'Q&#)!>Bo8DsgWqDsrUk[=P>0FkV+GFKT5`Seki%FcAb1-j,.B(`f\f_?N@>VWg4/YmXhe[GT%lDWp_6)l&IbD^+9HONG+\g(auUVg:3ro9VbkWDl_AHk73[MRTpa1ZY'h@o]N[&EQ9_%8igZ7qf!$a!HdXS:['#/aIWjS0K,K-I"BM9?1=r`)6YohqZoDpF_f]@:U6,mYO2dSZf/omD^j8b`C?i;qbHc=*W:gH+GqR`9GjZ%%.@)_;L&Q?$+0dmDB)u7<Jdi_F_$.qM^l12;mBR<<n3cR_0ASr@A;MuQPi<o[2M+9<`p^BnTG4;mD%f47B*1_X0@cm$/ec'\KfK.d%XZDXFNeN=?M3ZI!rB`D$f!Z/E/%55`ZU\##En^kW0<&G,!4$u?fLCDh`3=j77KA*10t3/#7`%W6Y[\of1"cj-G"O>p,@FtuPEF!G%!qsc;KB6n"es\9)0RL;$n!Ak2A$FrnVhkCE#_GtRR?3iZ61g],54;Mt+Zh"PcHGk)D\E-aJVR8*0G3XseB:8Lq\l>c!9p"qQs:s>%Ui4]!]G8kcjgp^X]M,'C;/OL:Kan8'8EmQXee`9>ko5htI9mU;q>%Rr\=ZNMH@Iss-@k]5a&'"H>45LkqsF8Tca"kkqRqq:g$`69%@e&^YL$\9_fGT@gMpcsBFr%qPR]2YQ*ci8^YBbE>Sr]sX)?Mn0^QE>C(P]a!aVq#[TlLpcs+[dLg5l!7WR(:X*;B$qNDZL4+FKL"%i&QKV#Tpua@K,4aUU2_OG!.3"YA3%s+BH=;kdf%=Cj2q_j:/gPnZ:uX850]8Ve:e<_Qlr%C8Gt+PcXF$;Ab>;M@HD&VtL(Ch3?8^%%FtlKW"(thJ/'&A4f_LQ_W2pZe6Q-6d%g4>%`5S)B&ToQ:b`J2&3\X:eD@;7bM`GpD80Jp`.;6C."V$7LG2BE!O93,;)BAW@bWnW%/H4U^nTh)c[=ns0'ak0L+m8h+=INLHN1aqi<>AO02_;icnWT>aF]#:KOM7ekIXX[jR)S54WOS^u3Wpo"nVagIFFA13BXL1`?-1d;%ih<BX>@BAK^ee2+dS,?+>NtH,gIl0.Z@8QQ+XLqUX0U=f@`mjClmK'pPOB`<(8[+?X%`LAa$.iEW@:8lQ#.'H^jq59&n=Fg$FQ&6%lq@Q.%FoEC[8LZRZR5Lq_j.C3hu/q"@TO5e!b"qIos1GR6>MpZgXsmGcNlGbR2B_RR_c.'-D.mI=KU/-59HdeYp>rX(-MSN.<T%1%J[GBp;,NHbW16sp)I,]i;sE?rZ8RH>8!RSgO[m]:o\m[NfE7l3&Y:sb'/^WAH:pBL'f7=9Bk$WQ1/Y=u'=t>[U-S@mj,[4jL]sU:%jfu-18o[;GM>ET+q9fPH@[["*8V8D5Sj;r'@fac4\l\ui:ic_GB_Ch<++Z62NVp9t.b$HrdrU*=e?:11L<8&f?InWAcqfLP:p'Aq%lCrUHg7*-UG(#:k11A7<WPZN%HqG!u,U``\DH06Z#Xl[<<#hk\LtZAFQ-d[!OYM&@.@=0Pbqp7-d5b)e(YDF<_V%.$TjkTl4]IG=%7VlOSmUE!Cj):o3<"SlGF[,71D.h![1kZU'X,+Zom!1Qi.>r<89'uhOTXp-022gOfa>:3&BVKhsAr1tFN"G!l=f2>!6*!$U'ZS2R%W8uV.1U>Hnlc*c+NnIIJTb+,gD(oGT:TNa$j=5$Z:1ee2e[EZGD/Z90<#a5qhKujmB5nU3;a$K))EF)`EQ/uqBoZ0,HH+IVYY^l=%aKm#D3CmVql_sQ5I/W/q^ub+dI!`U-n)%MQmb_FSirB%k'0urrqu?LEJ,c];$A'>u^MfMT8?nC_OY,X8eMO<9)uFV`Yb-Ioj2^h/%?pF\^^)u83hbT=4lhC&I[Ih68O7TFr@f/$S#Va,YGV8@'Kr#reV'"<qJc5MiqgNqi5JR0kDu]R@s6\S;rkJAtn,LFXs8;S?qtq!)%QbNK,hbno..2/Ockj\_=/(_klp%RKaB'f,!Bpeu.j^?eTpj`e(bsn\%O"*C_79<>H8.H,;9EM.DD>!/S7qr)3=XHIm*?a?&$j=o$%0]DG#_n;4!@*&T3FU:!0k@7BA'Qn4'OUd$ZjsnP]I5Y%sh;mh!Mj0O!lSbn?%0ll[:L.B$L!X/.a,G.qWouTGBrd23">X&!7]]9k%lr11SnlbmC^!+_NhWL\;qR@<`9IEssLHr=/Us@CJFNSraV?GpBOI_J*7"[Ltoe<jA[/D64W5`kg3/D[SR(FE!R/,!,5]V$i*4oMB%Vs/i+9'6703a.nh$hi,C>#UKqYq3\NG>1"g>SgL*p0fUXGhG^o"=k*UhlB^IBU$1:ahr]V&WMufmSBm$rXcg!'.hR!F@a-Dcg#Oc%%R()R!^O[u$r-j5e4.4]?C%5<fI3AESSqsc-5I:N[de\od=>4EWbM08csX1j=lFsA"p_T`d)$?&G-tW#T/X1&5%f=QUI>eOmqW>(%dGPAY)R+W@g7WDOFpd9D3<@B/[86hP;Q_o4e0*bFd%$ar6VGHYWt@LmrH'n0"VkC/MNHEFB$B5Slt]nl/J4G'd7pip'3Y!UaOd'I%g(gTS&EkT8Q=>:%TpK?Qh,n-cn?2S5dKG`WjG1lY\f$((lt!6$A,p.r2$<Yf<R:?`)g06CV!!!r!J>lR!)m\aVY<Y@d\Bpn$d6V.%iQI/.o#]t60%lUhVfiLu$lg5&-rPN_nr\HT2N`li?&0P#+k+o?K_l9,(X+(U*$`V&l7aH*oc-0,C140hLRH_%@MTK+0C_s[RBVnE%4gBigHX+<MFA094,cp199RTM`o0&H/)%ZI\;N2(?"eWJ8\/'s8p,C!o`SSQD!H9AgN!BZ?Z4ClgTt9n^==B%@-R];k6<`^.cY\UJ%*T,AEcI<$:*5<j.k@tWLNRuO;EkZU(G#=9e`S!D+bqk_folF/GX/u(f";<g8U$Zi!>.Y=t4gR`H<lmA%YgO\&"A$hP`Ni8WA3^P.%=*Dps,j%[/T;fn'H6GCio\@Hrr:q\m]+k[>a=-&u5[Jh\PE@Yk)-C5Y,M'Jn7hWVTXK(8fO0>Tj1ZXVT%Um?BZO2.g.lI_]KQFGB%/iNK@>XQcH(ANm7hLA:D8]^dWW(?MblO<aUdSR,J81!MH/gG*V1&B#<V4R>46c&Zr4mqfJ%P:`)j>f&%JG.h^_c\tL_?CL9+0/Fr%?3o$%^:mkiW*E6ZKmmG6dFL_6P,X^=(m/EZ(H[t?ansa*('m;24@!:l:F?RS_EOUjS8*2p-J\6IWs'A2i[c8kcu_E=d.[ne0N.l-%\1@UK?SFYoX?Es4lmK'!:6P$Pm4(,sK+kO0_\B_Fl*9.)N(lJLc@1c#JMi<U*!MQF]LGA\\5-/#=aUi=%fD$"HG7+!=D-:'cPpod%9D-)E>lBIIl8]56@b&Q@b3tg>r*csq6=7,iQr;/UoA4SL0qb=ng5VO/JlJ'nHL7O1O4W!s^TPP!@@q*lod&!p0mEdE1mkWDo(*%=%cMDl+0A^=(F&e5SJSt2e"V!W7Qo$D&W`H0TQlVB^aR+"$[0ta4Wlj8sDqJB2eYIfk;KG8(orBr$#j<kI,%`UVloTM.h_>m1RqRP4%8@3/iQ$X[$c"sI3IdcHZ%Ac`(H$"jASip(D/PhWqj*J(#3lJeUN[f>VQRHBTAn?+uLq+(Cc=5d02E$X?46r!>b@+PIR]SIGS.\H_%<_=1fRs;6h#g#B>C`365_NGm@UhKFRdpJ;7F.UN=mKNAE9G[`*c3/WAkn`3^Ljn14<:Pmm_[)2L<X8WBL5,KDrTk(o`sZZD3IecJ%VF,HZ3OmI*T,:7j/m$[iI&or-DRsEm,A&K9P,(,n[P8tH]@;/4Y)i-kjYIGDga&QjDnNZ+AM+_dPfW?>M@h\rE_FGN"gT]1\<&*m%V,dip;hNWeZm0c-T?Q`P;kW/*FE1R/9t<d?T,F%Y;ls6r.F6-K*4jN-TZ:/&m+"WA[[G8o$PA0aPH7I\4C^$^Z&.6DTo)`U%?c#,%Y[p&>2(Bq2cKC/=Xi@q]0;'gNiPM`D"<0WWs+3s:T0J13KE*8,W0JL6-PHm=.&oB2;6:sW"#1)P-d*.B4>_M\L4.59c;F*!@=4.@%e5VnI.,ob,noMpWb<ZqYSi>-M?T&b1?.lb_8$YA3:`.2J@XS]$$^c#YMW*5D(mrM0^"5K^7<Cf'`40##Z^?p0'%1:b#(m-oK+Wup%:O'a5-jY;N2"?8n<O7$\>,4ENKM+nG-iKPpbg'4J:+[ubjB<po/^@4]jJN]MaA"t^^^:GOgoY+>*V)0;P%MakhO0Cr81!-J.?H`4%1g;*\DC"e;H'!M8$fV9#>D\:N,"C_P2D.<UUmI3b-c`Iq9d"U7%+2JsjufQEdplm[UN'm!K+65u9LO6A.796=[)U&tIHj.WQij5F%'2a9g;^EB+ZT6!aJYm`gjD^>3QCaT5]'_SEO+!rM:u#.Y%laso1]A*si;lg)V;?5BU;+*$X8GSH_8B\DPTg<IFsL;=$V&(IIgkU:%13gi2mt#c$^=Eu45\)_W<O@!'O:XD^f#_M!o7eBbl7r/,YS9B2U(5,qbjk:F&4#"fIOZ*e#pT/LdpgIu?M@7b$\su`K1%nl/P$RF%Eo+Y;L,R!4h*r\?\$3[coeg*n#-1ke\$1Fn?!X6rYk[64]Brbjp,APN@Ep@=5dO0-#Z+aYk75a>#](_M^h(eXpm\3"_jlDt\[8gd%,i989FNdkn,EcQWk,bk6N5M0.OCQSI0q#?b`g=)rABnXPhBS^;lrbWL"`J`'5.HA-:/b0G1>ss$+dSgTVP[BGm"Afo6KH"*qGA*:%8s!FuK,+M'ZE7puBH8?,=uRXX(4mZp:J;Y5cL2jGS3\2J->)gI"r"E5fmHNi[V(l`S%WaR(-tdoVV:jD[V%<G-t_0+/;3ppmlK..%&:p%BVG$Wa)[UlBNQIcG31[&O7-:Qa?ZaLp--@]SEu)W7W_$c5c783Rn[1B8,?Q0L(`!NJZ.'B]_iS8a#sW?T(7'I8\((kenZe*,%_$ja[:XM`Mp+1q\qQ,lDX#Q$tfX#H@lrc7oHPWA!H^K12InlgA/peAG&F'en=XqRW^E8(D2GL[=&I'hAXaWLsXO#eHmQ-9apSAMb%/4P-I<c*nbj*k:dV1RT,!?Ea(Eqdr;1T$6O(6(F6JhT_aL1B7t1)sLn*ION$1F2^paA=u8HrmWJ1q'^[H/E:SF):[/GNOVHqlqY;%i8:beB6IA<4hhQZQ`:$cFT*`D1hA+S\-rN/;2rJk*u52%LOU:nRuJ*NlBBDX_m_B?j^c('F*3g.ZEMK39bDjR]J2C/i4(6u7ruXX%$g2W:i7ptF+"4/;KA*ge(el3X9M:GYrn'fmlL)9`d$\77k<uZdA3EjYVeJ&`dpe46rG#oq))FX5HrLrt]D.kB(igDiq6ZM3TS'Lo%Z#G3jAMI+D81fu9\h[!/&^rJVK+D$aWm3&+*$p9k<41n?e8V6R`=*;LA2TNQRR^;2LCC7HkANK$lCRV'k/kj>jB2So<]7c&%`0bY%mg#oSX^dl2T55fs*(3K;E:H8>hWd+20[]*hb,dGf`nL*,9VBA-C@5VY>\/Oe5X<7Xa7tQ:jDtUgK4mYPBDf-:=t!)%kkqjR]%Mlk%R3\ZiGgkQ.*W+1c9Wp>Tge-aJ*.8;E3"RI+5kCm/5F:gb[:&MBlJEe.,o04oFd$&YQj?r*lm&JY!mu'=-$Qhu$pt4#ons*V#iPHG%*S4<R9_OZo/eFK<3<P>6/(k4\:R`f)UO<ZZ67i_CbJ4+4?.$&bc0*2^`q[1`\2lSR`EA#9Q-=b4PA2>2ENoQ%XU5e!]Er"r5baGn%CobUHiA+AI!/jEbj;\m1gFn3tJ6J5XbkUWc$)&5/56oM_l.WK?4k6'Qd"'JF+FO[c3@6.q"B7S/81`!_>H=bZ4\`R0gu:ErZ,>:3%IZD-`7R:[H\=t#elqk8h_1%+PKn\Uf4CiR+oXK&d`S^X*0ZL%;7b;_q&f'/$kkFO@MJ@jW"7ZTL;bB(T+or!3%u7iM7`r,'J`rQ7%GO/-DLTAr^l*$hd'Ln6ae&4&,>9O-np#.68%bspm]ZYj^qF$HDW3&6.Pc'M8%71P8+uCNQ]c]0(L!\WJp$KUWr'H?f3`r^s,YaJ-%;h.P5#RthdHmPTj)F]Y>P8,8"EVZ-lXm7_3g&oGY$AmV^7Yc3\S.VPbZkc^_Rmt-+]eF3=58:JeBDttkcO,lC*nX7t4@cS^*HhZ\%aUfZnCN0K>-<f"QYj"+l\u7GD$BGhaA8+s,]KR1Q"UoN&KW(#oZN**F?f)>MA1[ZSJf5C,!A0\TJQ:b<&$mE+7/'k(E2pdM6GJg%%,<8?jrM=8"n^mE'\Ena*&clIu7(a'oio;0<7QY<=>,C1g8,l;+;9*^8Lp?'sa&F,a'TG)ORBUdMoYD4&le_NjRbh/A?%]rJU-MfT%P,f#"#h:;'HjDJ<QAEjPk%M7t?K<Tac(g#"H`lV4a&Jl3?<rE;./01EYe>LT\ZGf7gZu>>&+VA1'1%D:9Op;LS*1mAD*M#Ucm2(K%aL]NTL=JKl.lNLblo6U*=/7>h!1kJWr(jqeCB\VbH'T\elPlTZO9j[N8E\3n44pS_RbKAilIKq*aciIb;sC'X-bX6F7rKSIQp3V+%O;R3'JSC/"Au6r;8<%o[r]-5E]Gn7LlMF-7qRK4F#ZG"!ngBe"7*,+t';u.EK(#c_J%<U++]_/Xjh*u)J,Hl47q=(ROG-AYE@h3*%X6F@AY<NS$>p7M%g)V/"p&PL1'iGkM^8_0Y*$2Cui,@%Xr8W<-A"V<=i5O\)-fa%ka\&7U@J#ccQkoKhho]:NRntiiXS^)Mp,kh_%R>(:*mY/3K^TDiE7`aNnlg;\/q!u?<#BSjrj*LirY(&_KU]PjTpWn:@2FZ'4jcPl3E'u0H,t>oVqNeHG<oTO.0,dJHUEcD+:0,4s%1gG*)7oHBU"r$Zd8]hGcXPT$![a9)S$.k"l'T^>r4'h7"]TFgZNLpUFUYu!ZB#1OTLdS%FPF6$'<M0jrq(.J1@&'EiP[-I%::-i[%>3%fHe=roFHRuMl/+P:)(-9n_^>=d?;3O6%fKssH&@-fL<hXk)$7%>W^IDb`Wm6=%SUN=2a<d58U;(9F%O@omk'&>^j?S#a659#Z%7:Q%sch?m/QlLi,9qN5=.rPQJbh"d>]QnI=lcd*uMCM#=+r+$`/!TYQp>84(E\mg:e'gY[/*8rRE-*oeAZkC;7;).12\Q'P?W6T,%EYe2cAum=JX92[0X/YB++&\2-aBT32hq1n11Z.&(#SF>WaNMg/0+gsk<n7EJm^#;=\@*rK-)Si#7q+E0JfB4T8IJog=g=am8)UMq%'9R9Oq7Vd.Iu]sP9VBK;?L?;M=l2ZoL$Ze6-O#mG0HKrO2F9S@Xa"=rETGY#IUbJnM,`4qk0ehl\R=R,44*$_UX(r6/gu]S]dAc0%4rdRg,/pR]p]D+dXBdP7fpm,7r1d(k#0XbbC##/5FVl$e+$\?t6i`MtWr];3_#V>Liq-^(CUf=CC6tr[Ea^2:l@(a_Pn9Z$ZM++5%UUU-]"^T]-b3G2V>44qQHeUG))@oBU]<$dh'LB\r-o=A[o3_n+.TX^X<nWUrjW$*^MSF%FLtD,DZ.U^>1PV&iYO/0++rD\,a1]Wr%pfLk)(emU+fATI3Q(T&^d+G;._E=Zp<XQE'#A=+LO]'2Z;$tO@FWbALcR%E+<EtbF7R%Ji7HZ%8ep07q.9hLo97]S2fjh<tZ<E^]%h25qohc-n19ap"UrNq`[;luZg4ZJa$ib,aNJS3KF!Bp*d.nj\VU-LG<"BE:gT3hD)7o^ppM$48IYpWbTi#K=f9XWK*dhM\%0*:4E%Pi5&=X=7ie8:R_#b/aRY=UFPX,E&:D23qaOC8IGhio5RVBD*3?98hua1PJ]3clhsblbLl0g\9-3DCflHCf?`^s,Me>PB0FirWQDD%_d]ilSgXc7i`J5rlrISq,/lk9@Hji#Woncsg[V*&'T334<e\,C!X+/R`,iW*2=lG0L!9IB@k=FN[p)%1dlg6.l(peoXm&NUL%AMb%6;06/16')hhfK%h5:\@TWlLJq-M)<,1#(<d%\i,kqu(9k>1BoL.^su)`;7/*rPA';EjmQ$YIO:GS1Qu)Eh9t/RdMq1[o0Q;9<!JS%A4*YfRN@1?[o1Zqa)igh4Zi^KWG*tiZF--uka5SVa\=DBUXgR/<VG?ICMkEIRN#0*BGB;aC(7OeMr\*E\MS#kLg:V\QbLm:I.5R!%H;)-)W`LFrC478_UX`WL&mA"R[/&*ahuLl"1SiTPI3MoPenVe]fj%]T[j1ZQS'C<:pYBR[orF@PVRBM-.e.4E+gd]^#_arq1-!i+%^n]F"jCgD0-ERKnS=4))2;)9G[2S\22_2UBMa9)#>H>lSiP!_Z]9A7YdhR:VWAW:*heLDiD7/NCXO_LFUcrP<B0D$PCo]GLS5)SV%l"=d9Aa.6&Z5&k3F6;#1M2.F,e&%c#'Ur\\@d>nrJ]:3`\WG0RRT\Qd^#m25f3%#oH4BW"n3C-[i<H[;id!NkMBqTON0?o<!VVcR%DH3tG#q7c;"RGref)Q/k<I,*WacjD;e8&qIoU:Dd?@t0gO08*nd[@<.j`sn6;(o>S.g5SZjgoKa?NORFQeU&*:#?=ZDMI0J?ciiG%Ys,m/b0?"jE%*_5,T&2rB%SGR[%$#(&P'IDOKI>Tm*]c(bhC<\4S[KFL7I$Po`f+d4q=MM%&_>lm:NlrdB27ZBuYIVe=0kN[%k/?%`Tc4Dc%q@'2;44WeXPO)^K\Aha/3VE`]!3W]toD@GPP9X/o7RI_f`\SH37NS:Mq8W#a"o-Y_9Zen;$I5MQ/Z4%@gsHZh9f*HHrYM%ptWLRS)<Y#*=@FP[doFl!*NfgdorG^O%;8+1ue]U=_QPs`!I,6-g<O0r1U(;9*>9W6Sfb@+3!8)0fIGCl'=%=.6qK3H\`kD!28+f%glVYok,q,nQga3/,#[?,NYFa3pCl6h,6\Y'SaC]E=q)\5m<;O*!(,nY9gTd:k1BNk'Hl#k\.8a4>F%?KJC1"GU(JgS*`I+%m779%%MChng'\Io-8:_.HUd-Xbl%p*&;3LI,'Ys'qF@Q[gdrL2LOtcsU1jO;@!$b(q`/ReLV`Re,EMMh?.0/]@l]S"6`7fG;"\PT>?\&9o%Wl8-."U(/Eqkt2W:q#n7#7=iJArjDF"U_e_I-WuAgR*,s,6^X'q"/b\e\]t$![P#*P'Q_1p7"LH!"o<!nkc-tNC9SX_'2d-Ds@sB%'e-qjZVqtj"jj4eIS/j79?BZYXN=+1JZs^D_Xs8$>:FC&7&0g^F2J:P8-(7N7_nCf!A'krmna%d6d^t^:k:jV)5T#PR;Ck.@smsQ%)k4ujrkTF;MZeOMBES,$IMRe30*p[fjkr0:^+0g(9#OqaR$,Pr:E4Y*7lZN8I7H,l2GfMZOr2?10<:W757pa1>.IiPeM,r.[1qRj%^/J<%:BY,VSsgI.G.;-fiKTp[d13Kl^uuT,CJV^LT,OhBdi!(+^3t_,I/7+t#([MgoZ:N>ba$"bfi<QA=q=(>kPoY]aoq@$83lW5%8h_b2e!PXT=EL2R;9u'R#)tCf.OBFhl,@7d5[8iA3k6H8m%H'(VHa3Vb,-kV$gFB)d],-IXW^f4lb?qhUf:$>#\Sda!L'fIFKTiN%47m.`4+_7SF6LeHPn\\@I+h4]>KT;f%<$,?P&WTfMsRVM)"WS&"I[)d=dG>dRD/[+_0ucm\,Qq9>TXHP*n,Zj`-r'"ABue1!jYQ1%E=ih//;l:&l(;mODRMtXNM0D4G:@,]A)')$gTb16O/VX0[AdHZgreF3"UROjC&a;Gh7u8QR^cDSVOlEG.]Wt-TCsf&aS.1]&:;]\%*Q,bb^:9b\eoU;2\td[I^D+%TC''A[3lrUi5MO=Xkltd6Z:1k!7,e<Sj\8qYq;!Ko,`kir3.8u&6p/c42XoO;qa4p=UQI<G)m*og%UEbFPP]GPYA?K`,U9pc4<8T=!Yqoa79IVjo2b5G+,&YMbV5/FqX4gONB&T$3c%].:fDCUridD#BIrPk."@YUK_XGQD,R^u@P)JKn%<?`kF.Q&E(\BQ-/SYe2-iL>(^_P(Pk'a".sjr/4H)]RA9q5,Y+Ls/3\3K%LAZ&M-[dPaa)>g@=kNX)s;fT^;tMi3O...9X*W\*PO%`c9]'<Lf9(7:[au0PdmU8L(N"/qbbJlS#=5`sIjbL@Xh[*:.o5BLiDY+2&^0Q<mI/62k@3n'@LraLPJ+0aSo1#?f\2J*dr-'jEKL%*^Je=$Fe'8K\PP,jRs_^\PI#:4n*g9-[Ia9J0k(TjnW:aR[6ePh\$Q>GWtWAh/`7-2'QL3Se$]6p)&MH"/",\o1[J##d)j^6.n%f%:%E[V+l#f#WBcISr5\<.m,M]H-$VL8n/jN>O6QGLk<'_+#<Rs,K8&?<(A09*/:I!Y37oZ"+#+VQn\J-`_Op&e@$c;SL#[f#=c#tj%Ub>\ieIla+?Ia6"f%7AI(/>?ASk&g)/0#b]+P4,Q!>tno!kOmmctsO.`s5$1>XM@`:3l'@b'A%P_<9JAd+Il>/bqBa7ZJ!%2HBWN%&)ar\2KZSQ(F5nK)(/=R?B6djhHl7P^5V+F-pnX*EI6VbQ`nkWHN7j<0lhWfhYPk:d[[5/'\[T_*jjG"]2@XcPjj!<;J[]gY6Wkf%%Kj2lK/Ul"SNoF=Eh6/*!%[3A,DUd)(^sOuPaki^,[K%u@\r`'il&qDmf,!-IBN*8KF&O]*'^c!<?Z0g`'ksfpF$XGN;6m"NHQIk%Y(VRE\(ZrqP'7J_k4>m[3;/a".O.:2Z+'#djRX<'dE;b63noJ7(8_8&KNN(YJ-rRPpK9gO7bOV%C/tSYAptYdq/M`b'Vm]\MSgKu%*Ak?dCXbMKTq"%$ciSIpWU"=Y"JGl?Zm[;e[]:-p(hReX^nmPoR'pa.R1dUq8(3#!OtXo1SM!<;>9cmh\'![9rFjHe/0'`&<0(3m%47*9tSL==r_5X6/8<hZj3f"gjahcf57m+e(X!](@=sXd`^A(fg*.^MhbR<].iXk6"NW&K&4q;.<9CEZ3,7Od3dq%O9`n.#L/3I@S%Md@82P]MOdgZ3qs`Oa.N`l]23HeUAujC+4D#sKo%gh)&*M4Q_M&Wd&?LVPIq(>I`flsmtD_Rd6-oV*mi=u_$"n_'A%!mPk]+enL^%7.i?Hj!'/Qalq!NHfp:`+"(;s&m82MTeLOi9>HQ[>Sb'5Q:_QV2B1A&UqPr/WkH-/&VB2c2VS>N_X+HQAN>)KTd$A&$4?PH@Yn^&%gmM!o^%:X:^t*b$[[bPSmL2]0Qq`u5k,,2t!4NTO*M`K/MukuD>=Ge<Ln6,2rRQkV"c8mW.$8aOWNjW6hWui[r7I,[gtUF0mk=M5%b73u+::U2S6;Eh.KY+4PVY_R^4kLq54jP1dh*9fk58W9rIIQVqg!NdrIh=J<!M%X*1GI)78Ph">T5)8n_os)(9K?i8OgX\:K%12F%&73UjV>/9]7n?Q]K9MH*-p:A1!I^7a&^t;+W8T[#e(N?^"&1dFIU3RfF1U5gCgPUdqCE[34(4@O3;])6NCoBYO:aUP#R%b'<l!<M%-A$]ZTo!k@?s)1Zhm).3K?N%QX/pUVKYj3l;*X@d8:2Eme:77\X-tSb%Inl/<a.$]5icntCS`a"O=M8'C#)1WH&k1arX/beF_r2j%9a"-fMk=pH6*8bn)gN@)*]1,0WXCGme"csWM+T;j]^b<&n;5PmaYA%1k+>O#)Q.0;3o1Ym?8D]spu5d*+Y4WB*WLNa/?]:5s2.'g%3@l]GXn1u3C0cU11;h[qD'TiR#`F7q7@f'_:ud&4fh<(08_<Yup3G3N;O`1&gTP*:r2@hs2*MEgJ6KK$3.T?d]bre[jDH;%1N3==%6/-#0!('_;c+rk3+rpu5(c[%o#!o<j/9hCBfDL%QE*UIri-8[($KoV(c+q.JAb.+8JHK"G2Zj:LGQ`j<NGqZoT$,*g;4dn=[bn2`%NoXg1!)d*Jh.B2C$4@7D%Nl+Z$Nc=r0`f<&+TVi*o+[Bm1.C.!r$L?0-[SP1e;)PC55($D%uVh7JZLRBrruer<US!H42t5lo5E-V%??7[s%:E'EJq!lY;UpAKj+WkMj+YTOrmW@oC'"mZqse)<it8oMP6h7]fC>*`A2=1>L@<C%T`I"#!Vn[)Ck>eFCN*6P??PjXE:Jk#%C:?ftpi$-@+>!cYR9Tm12D;X^nXh(AM9Wg*6Hm47_RTI<VIt8eq@3AIBXs%M6TqsD2h6j[lqppfG0DXK^?ITOF[=\I]ntM$UpFA1%^Fp<,*FL5jW*13(J$F`Se10;8J1li^!C&eN;p:M--4__rbGWs,_5'<#Yt6oU1`J"rc<4Q\@`DDQ&UD*Q=c+<UOK(<*mEd_JN/Tu6%SfssTJ$J<VRc!NX``IU!N%u`"@Uu&aC6.)>cf-=hY#KMI.9Z*'8sU,8,'PRIe7QpM1m:)F@8,EWSfXqQDsJGYU)m0U26]77e(a&h%d%1X!MdGio-BnMI:sWcqW$(E7Bi%;RB>H3QK`HcLDBqt_l]$jciirs?R1*Vn_2$!*M6(+(b*CjC7F<R[c,/Xa=e1qcT>X@o<8lJj%=[PT'"aT<$k0WX;5pC@4Mh8.EEtD19o/0U]*4,TT5a%!C:HRm7jY2C8XtD7P-9X7SrX6/IC\b^+Ddm';9*&ZLkNYAJoYBGOc/Vm/%;bTj#"`uC+FECc^?/5;1^LibBg@[hc]s6_<qg15i;abAr4[1p%I<p;OcRM>XJY@SQP[?`L-]Ri!+T^ru^<W?6ZG3#'Q_tP8Bb$Iq%^#=$=JR2khZiTet:cE<[D@D\rR%g$[_aGOj/GerKTA/[c+_3iYh$4N].qS9MnuECuWO7,.%u-=#`WmTBY>$Ig7Mrrd.;5HY<i&t<%>Kq(Y1Br;njl`40XNd9ioRu'V<'L&;1"m8Xq$1"e&l3j`9shNtF;XcZeK40+!;mtFP?3N8qZBf9N6ZsN%tB2U$q:\b<4.s^=,m:k%>1dN;6;3_O(#1LrKO&`=!%UU)B/gbGd]P.T9J$;M)?$!somN,=#X+XP_4EtD4L*h#B<d@oI!q[rb`Tok4dH8C[A"&@;Pfo$=;kaV%H\s&phqVSSC<Pktb'IsuV1L^PJipViUn3YPm!\t57ZqT#*aG]Ml130d3Ffs03%721YX"T3N8IP_G?;1L5L"[=*U&<N93V`X,&Ln!%F-C@^4KhdgKWq<t'f'FKs5g>9>_9,)\B`9cXPpIEp[iI=If3gegJ_9IVNNR2kLY]1&lrDK7G'.mPKgPf-c#Q6f)%g=0K<C@\1KWG%.hF"(*#;R_MWkKaerLrQb`'f`qEiECqSGc]_Dh!)%2MtgN$UM9XR&<Y5q9/`1&0We*(tV9>?78B@UUS&!0t/2_sK>k.hJ1.2@V0,%0@U<>:Qd_j2npi(e:V.//?He<aR</*pT]GA0EQS(7)R1#HV>e<_K@O[=b;ddn=Fa.Y[1G9YeD4lf`51+r"RtBG?:ClAmluTVNtUu%"Z!4APD#3l9Yl0=F$-=/JO./Q&L][lBI;c\p!F<@p$IId&;PZWa2,Mu2T,Xf2"+d"Z1H5W$H,u59uBT)8'0ZJ5rKO\H!#of0[%['%1n1[F`E@bR+R:$9(Lg:Q$O\$,$R-+^?>XD^l'f3U=:qeN8q)R&6i<+GUEd'?P)*7E0G,g*AQ]D-Sckim)6bD&,uB1-=agWc:Wi-,%iWBN;<m=9NFd5q-Q.0E[`(e4.^70_(e#r[qUuADUaN<&2G>S&f@PbVa!Ri_PGo)'1R,=,M?Z3<#kgX7f]hQ(:LYB1ZmJ@7G,P/BK%D<YNB=s9skq0ljN2u&eqB:<-d4SLiPV]"A\r=8BGD'm9mn%TI_[#1K48h>)(-9Fo3j2j(]?D\EXWaMMmnt`gDT+udBq7QG&:-QGe%0b9k+Vr#QP#sc^K.Ru/e%AGlk`<nb@2VCW8aO`#EBtP$1J:G;HYX2!9)&D^#dh_ItNZnaN8TAd_jj^ZmV%t6so<clb@H#U:%9rp<%m>Y-n:`W1,WZjC,fh-)F`#b*YX0<$.'eBM=P8ZtJq)<)SGq<ISqJKD*I9*(*ON7(qR;K=B4=8OR>03-$h"iU:4a][3d;rHDR9-G%%L&HR6`Q=h(@Y[.P_F>!;G4KF3`QP$S\>k2RT\4U!ML[m/lDaj,T<hC^`4G6rQAZK8M_,^P&N]BbANH_S31<nN:>GEVb3aoihaHK8%1D%)Hg,?\(#04lSQDA0eo(%P(iWoJZb7Sfr?mroM>rA>'MfqCuG"5!0mc1$6U<7#OX<du<B88#^Wf7DId7&oa=cr<!Oc*5*8,=iB%.h6rI,.PNr<cns$eF1!X?j6SI10(n6SSr%0gUeX)Fi_Y^nKNr1J#c!YM_"rGqU8Y./Xh!aqV@ALY^>kN`IgQHc]+<uh<Hs3d$*A-%G,oNT5@haroBGW9l-/-?p^"m>a,%p/NoRgl:bc(:_?11(U%c.bWZqH;eKHm`nRt@b0"4GM_mddH%AJYk=Pd^Kq(^LqK"/_i/Y.6E%Nm&<VYT>s:0p2"d:#7/ToHsm_U\49?(;7']%DeHT\sKQM6NnNp/:FHeom0B4KXreF1l#t&6(cr#B+!S/SD#A-Q=fPip_Tea%NrB2%!_o"'6rZ+0!;sg7"m9&n&*7\@ZPQi?Ghf#peWmh(GX@aV]=V("&fB$tq0fl:98ht2:t!\hW)Y=E<``S$)^,ISQ_(61rD8Ctbo?Or%PH6-qNH)LREB_gDO]7bCU08ndQQSV@(&ae_?%\1`gBL;=O-ujBC1XRX?Bd;8Xqicl7,"]:p]?]1&'3do,pfbo7SICg_F0cFhqJgs%"LnNXN6:ehi[A^a)p9SN/R;oY$/IAXB-hZG]3CP!*CZ!S*2t6GDsFEQY"+aQYp=n66;lKUhB:H$4IS+)l`iH:'B_P3:84V=`EB__%qF%abNAVF\qt\5m(Bg-\[Q?'Vm76Op7W5:3@`YBKW9X]1aCnjQ8)kMj)3q<5Z4:>gI2N"k`0Xl#=BOW3=VmgQD!ST7V-PU3gRcV/%iL*HHBS$_JJVE[jB!s1EQX#S#Z%3BYVK]a.Sh`P'.Nb4RS&_:%TBjS[Cbfl*5(q+YU9Rp&$8sF<<:m&nm.[$-5:!]152,gX8qkhW%Sj;]o-CdKJW@sTQo'=;M@L[eu)oICW@R#^[kk8sQ]A1[2<h2")ghc-Mngp$3#Aa`1N$bO(Q$?oXo2Un\^FKuM(PY'H&XN9,V*N)d%OBNba%&PO5G`*-#i?G>HCQEA=>jIA/a8(G2XGf)$;(.SNBL&H\;n,(Uqr#;cWIs<m>`DGM36<%G.>OuF?Q>=T4k57428JMaNJWfF%16ia(Ke&63P(PTrS"g3)`W/gX:Pi7*3ohJAl-R[rqKe4<+Pp\c;9W5\,gAch&:O'Y$?@Z$<7G$n?/KHW1ob'Q)(!6O=*)f/VX""[%1H3!<N/3&K0kCT[<n42&PZF7HlKXF[%RE#,X&^1!rO=R/.5k[bf%<duVDjUt+L5TIV4UpKdA:(+9t$^'+I_-8.Sp==K+TC9-q'9'%j_4tI<(Qhs>8;YIC-6pL./\.f60K2fEG2Y&/br*\h]af=7MH(,K%_4$a]l/EqQ[!Y:&36WH.d/D\mK;CZ,]SpbRFd`s%L$8euk`_%*6ZBKJP@-7"FbBt`t@\G]k5=hYf-k<Heh4aE?T.SI+*Ie=B9!9acQYE,=r4i2ga'e,j''kj^$57)u2,+Woq#1G:S@,\Ki*Bn1^-X%E?@2D9'r>$LLm$3kqE`s<\^J&Gj<HJXd+gF:W8q+OLR@eGcSkSg5\.2m-Vf)p<IgCn&U)Fmu*P+Lp$VAYQI\_r!r?t:pjOV#9Irc%f=4U[KO#N'#9L*d<Mfjoj8b?JjM59rpo.<KrELDU0O!"JY4*5;3b3f*#iKa`JY(e&rGE?YBApf33C;U,,NZnf4'F5KGX*=>+QUN=%I@uTM\GtN4nVF`eOh>r:M/F'"VH]-4<!PaC(QZQ8>\6Z94FH6!)t)-ef*Kg1(D!8l)pr@UX7^(;8&1)G*t'_Co)H02IQ>3P,R=4W%5QI`MPN,U/`Bu]!V"Wif/!$_uCc<Eljnh`/,J"Ft;!c,1RE5=)q!bLKdOTbPo3Q=XVFRUJ[nRR\'uSXVI!FQtR1[e\+!):rp)m1d%(oPZ@I!>lV5.lN%&!(Z"JrpQS^DFl__M=K"32FeI+!0)rb'!JuV<<#=:=&)ZIr"-ii,R1Qo"5mYKiajEmS9\%RAk/ah/aAb]K[0N%\F:&,<,_3f?PdlFb:bD[]7I=3Q<=PlfY#<Qk!m/(0%3)^DBdoiA_\2[F"35Lgp.$CE6UFhKji%MEZu.C(gjOcI_N"(0?iZsN.=H2%+oE;A'K=$,N17kX&Jd[`:PBHj)9#PfZm,LE:lQ3SlV*FfRMFZ<g&j`tdq)_$oACZG-Za2t!?EIV_Xf8E7WssLKe6Sj5Mm=RBS_JC%!1`/.mW(56&tP<!@)D)<@HNEBguWQ#$r4ojCb;2,pu2n8j)i!uc.51%O`TSS;fESs'sEeg7f0nY@C^tiJfig;gf)*A]*ZXuQ_l@C%aiXQfaS-."i3OOMGHsHmG]kA7-i4PjM7^+mJ]o!Z;4?>ZS@1N6+4qFH1W;[,+2k7HcLt<bQ?2\hmEb!j)Hlo13d[SJCLjjSd48#(%59nEB)L&7@U5>$$%jWXAlo<`ClF!2Nc[k?+5@_;)T0maQ?a"s!]"]pHbqn0_Thkf4#GYpm&quj(bO58k&C^)(9dSgFILaqF#LHR%%f&\`GGd'^GAK4isik7/H'p.RqN![5EZBHgPrIO1a,0umT?u%2?b'F!)C6Y`tN%SEHf8)P=Ksj##eTq.!<3&KKS%_p$<+O<(VX1H%%V*UQnH!tTEe0i!9I='nBqL5::1K6,egQ3Wn@?E"<cRSR.,L5kp0PC4Q7@ZMRq=D),'4@Bnci/$aai^!3M2dBI9GuiVc'sGDG0BJl%[1oD%1k3c<dq4NafdKc>C&Z^(NJJ1]&?#@(\S??X8qOZG8"8ae/o4JR0Z#73qqj*VUqE96rQYR`qOJ!Mr=4r4E`82T!eZAu?qe>Q%J?Vsj+=f9^VtZ$*(%H*]1I%*A_,1*-jC&m.oKYH09&^StpihOr9t$0!6m\CtR"'n4Ek]-\G8.:BX5!P6*3Nn>9I:?#4tg[>9Y[XI%.%#L>I<Sl,ZENf?hJ],=^t?2]VVbg$??\?akRjfDVV_D0C?26%L\X(g0l?b-7WC;X;i8+]OZ65sr=1NZcC'-:8G8.Gb0rX7rQ^+f%22!AX:#On`dI/d)2$FWrpih7ULsPu\$qf9u'+V1c:I]%!o'c(#2!X5\i@rJ)ahdm:f5QRr8'u-YO""A(+d$$8Rt'VI*QD1g`r>)#%jf]W8p)*?6,.6qof\Ui(Za&sWFR?]"m<r(8'C=6*G/\'rHeT8sl-Hdg3do>'.T)Jsg3(AHK=b-AhtO9(;-Mu5FiF:AHde7QcIeVh%S9o3n\miqYhK0lO%iYE*/r]&t_jdeWK]1d/jXa_V\e7O5hG=A$+kIM,LI$bhP;o]8iS!n4bKbdR[p9b&jgFK]NKe)1ALe;c[`e]U%YjP5P%puM!h+"PA\$=Q$4eo%2hltaTn6qc&_4*'4[';Pq5183BFBS:VY"b6Gl?gjnnN"a=cg@up4dSn5['s;[e_K"cme>!!$KS@u%HsBQglF-@l;K1oV)+RSDl7O$eV-kFb1b0^QVskL=.@B(X_*Urf1kfZ3P(F8s)+i;?Jl>cm[sX)faH>@XE,)9^j_jbXMAHDqbOSt;%0PaUq>7/BcFOPn6$N=P6:-eRH0-LK4HYt8lKkG(W_(!7o00)"S.eNV#K,FerDF%CtY:`6'S=\0s<o$V4>7sD"Vk2e/E9a0p32/+l%KluSA9,'k'Yi.L+Ki@'i>d?%VLtP0==W">_#:KnRJ5fZi8Jp9Ro9+c*4$'i]gsf*4^Q=+OC%8@1Wpie?U+3%R?8@Lo@91g8+eUZN%8t+c,#\j''65i$i8AfgR];/m5>\e7l(k$/lQA.--jX'(FT_Zihb[&\M1-hsfR+!SrF5j8]3W^/IjP$`!L<hE)1jgMk%KE\Z[knM"%fV%OD*R'4SdOW=EAJZRk5T[eEZB\&VIlU?jrlX=J`Of.;k4XsFPpLRcT-J7dnUf<;22.'oYWeNJl@kVtl@m>r%O=RQP9O#C%2%rN%l\RS\"VDK5?Ep-I_alg=IS4ksZP=(9.r6Y9Wt]V,SgQqG8_Dam<uemj"U-e-MD@"8.`Dgs%!nQbOd767/%CFSG*?6PSsE1/IGA4=%>,rk3(#q`p:OeO6^#n+G<u8;:Y:e%p=%)ll-"8;e[JJH4k7s[=4\3jKFt1XA3p?_%oN>)2H,\+o4pG"V%%eMPM9L+$qb*8Q:L2j[%)#mJ:E;g4\#/RZ`,Pr;8#MDNS#D!YLcK;b@[Y\[.N!(mfRZR+Ja9\Kf^-4g8;AL^bK_X3kTtZY!%m8KV]m=+_]cnY(>gZlW#Nhp@%m?RP468PFN,1=\3.2I@Taj_W6^!\;3ZR*"?+NZ^5N)gq0(5u;=q(Lc)[m_P!&#R%g]YlQ@m1lm6fb3\;@[q@/]cV_ad1j]nil4"A%gqbo9'k</*]!.e6JSHD6Yr`(<U`e)l0gKWZkZj%M\ns"^Nb$jN5XHtjIqEc,ReDV)a=hQb7ZtdL9Ai+CknDUA=%!%,U1Wt&0a@Gm%7mFa3k.S>[o3N"8,&HgVn_J1kN#ggrVk\nQQ8:="2J4#eVEt9PpPQjF]L'ki`G(\gmU?Epb",q"Wu#7-Ws]<_P&YHt\>77*Ceia:%7"*%RX!ZFt$9.*]QHKO=jB4E%]=un9Vfo-(BJ@j>)"t/8D!!5P&$JfX(s*+1gVuf_/&ls,D/*!V.9doEH:9>WffMmn&R.a3jsroG%#N;qTY:aKE?_%E\nWePVkjP!nQ+'>+/4\CF3)iV#`Bf;u<^@?,<#C&E"AXt(.)C<8BKJ\Xbt!QZJ]_YD_uXJ:1beY=kAG(\9V;G"%7kDcc?AQ_,0$NBXHBZ'D%+G\Ie<$'o9'a@BI?itZKceCs=59jfr\sY<U;LR6Th`n<S_aY5^8e*<io[u77&^W`Y8"*W_K[hC]oWiS%kJe^b%^G=cHGuL_6($8*U_o=EUF%`k:81n1-)>PLh?U+$j*C/]E>j%(%uMHra/H^_egh5IZUKbQ=#rOi!kL=j]Y0*nMT9U`IVT[=%PX5l\7-R.H?4kqWj-mIK/o2Y&]5u,5g8dGVM#VJKX0NdZL)ntul5V'A37Lq541&)PfgC,ZkPP8AU:i$qf2*PEYL9U5'_G&&8MZh#%YE6;b@*00"^uf<V<[>MM'ahMKMP4.PV?00b2K16&*fX!9%gmDl,*Zk.;t]oS7dLT^qK?:Q(:9]PX>I\m2<Q&4h!.-Ket^\:!^sR\%$M[O=Ve+kjkhe*g@]M]_IN1C[qLEX`WKk@\WjYiO=AIfTG\dL#dVdPZ]<\F<#*:<l$AY\@\LmqrVFXZKefka#aWOVTqr,2nOddD-%k+S`V5Q\l\/mZW]$Xn1>YAY5#kedn=P\`^?;De3e53EfF`mUF9fBT?G%m8*)+?&mt+lhlp.a>o%LHl9.B--VVdG7VM9sTs:(@1Ek%4;t)YCV>=eoqE<S:NrfUZrmrH0i4RD=7)[g8Z\:kN9(D&4FVEBjd?MHi-g$cYV'PaT5Uf^oM%.1r$(^:'2b2h<rf?!YT*bj0EH@1%R<3t7/QWYh()UMu98d..cA&2E'He%!(sL745KrMGKr-%s^iFC80nd<gIscM,o\>7Ae>3L,fFUf!gT;Ud4!'9qN^-Q1N]BI5lbQ<?%kYQ`Qg/M]!ZFNCQaY4+":N,;6FB!&<b#VY5F]ds@^(CufkpS90Xn@YW=!!pP4afP"H0BmtFZ*;B?)1fIilZm\\b'r>!cS;"=mEaB%ba1?"d,X8A_Q:%i(Y3+ZqYA,Jb"Tao=p*@dJ1duK;tU+-a*K!Ad1Z[OZ5FDXdR+Ap)uT!!1S,01$?j=AVo$Rt+h'^/UhhP6(Jr'6%mkuAUN>u^V;D48Q^j1XSB:@Y<r<AEt%?cYK64b9ci11\(BILUZUk`Che#!j!H^hgL+*gI!q?rB#aZ">6kj-Gc6U]8BP^0`!GsgM[%"nG(41ZSKuQ9"M0OD)]q(ll1?9]r%k+ACV(Rjn+f>H&&bOBP?"OHIcXj'EjX_hLL@[#daf%-R=i]lQ@He5Ca[3!NgA9`*:OM>5\u%"]<<]`VX]LqZUYfG%R'[7EH@ch[T]>4$ec2+aRtr>;_)9!"kD81FteOGS!j=PcSk7N/9#X?=-GXKX(Sg#DOVpC+c":R/)e"Y(`A5%^dg!_Wo5<fP+tA8c.sj/"U;i<3P*B'J1k@IY6W+n3Zt',F?/]Y'pPkh_pM'h`re&[J%\V]\1F[&<#BDu:!K"T`M2R"M.;*X>ZCYi%?)W&_%UQ:O-$t(@=Z+k'ig2H#L>U%'[M>8dqkR&;KorQW08sA:APSe'J&h>c0_<@&qamlOf"=%d#DcDj;=\lR[7i<,,enj(QkU!;%F1RWmgBt+^7"jOj*3;:#R*Uj<DC?]<R\H^i]b+k7IXSi4c^t-+$L[`0=OU)b2fh<<Y"p<)DhbfGm_e'cI11>Ur04Q@'$)C&))CW"%=>kBY9HL.'OpTAALj\K=kW,IAgoV'W"-Rph0p,4AJqlQ$.sj2JD:`#lmCqsGG27<Xk1d%UqG?'mYl:)1ESks/<C_)>DEC8![b#BJ%No79_]B6W:IGHauB[9E(9ilVrG!2RMY=:'0G?oDUEcA5JXp6W*^@"IP$LI(r,M.'^@D;.LBQe:**Y_N(D$TCJHJNaMRb2bDoo#^p%DS,n?Ls(";(8Rf(Z9rgpQ'!`3k+&;ifsMs;gR$abX5I6+'c+dG0"Vl:s4>5uhs`Sk]'QY)B"G1XG%a0ah6iHRZ*1cWMpT$&H8%,A%S#hC$I,0#&3r<Up,?)5C]4'jJqn=!sA(UJ2#j/LBhehGcmk2iY*J+;^#_fo^L(0[IIFgj4g@nlS_<C23MdV27^2'T64g!G`/+@u=%c:tb94*Zt0\F7%Q;Xo1mmE%Hah1i*0m_XA/22e1*\dP"hIGI=0l#YZ<f1suM?$M(kl`OB^h7$Yt'(LD)61)tLNMVYRCu9%dfL>e"%mG"et;0q,C'jZ4CFu:,Zp2sHs^qQt`)VY)&mV4#Dmd%%0"*NLF20`3rICJI6p3h-.qnCh;Fl-Jln%0KQq7c=_@?B1:?&c4mIG[J<%aLUg*8O_MQ*ib[Z8FoRp/)L@(.]\=;EF3s_0qN*n>ErT3on?Hl,P/M9IQt&c^[UBZ#?B>VJ]3s&q471IW)i*,_N.>8]adb]!$Y@b%=^T,,Y[uB%OHcrEY<lD7NLFq&$<Un0n=ejY"YrdM_dkA"^<(Q@(U3b[r,.d@&7%3/kikmA(I^\Q%kAk6gI*+3<AE\&O't'c_Z#=]%o-MTh'f,"C-_):&S?J)6Qg)fk!`jnHYp)H%T/kZJkMg1:F9%AA23187fbt!7^4;S:DWcB^qBDHg`PW^P<<;91("i#.OMa(cKjG5F%WB9:$m=IJ:i=oibo-3@U?'s47Sb0m]QH6I(7L*!blE:<f1\37P7uri:ak^^+"K,1Zl_>&YQhk6@!W*k,0atCn<HaNGPJ.O2F1r.F%PV9]sQ9J3\pg_LVTi8\XV.K']VL5Z'2b,+EH*FHk%?9%g.AV6Q6os:b1Y45C3oc,SYR/kl1iU^'1VR0OkDZT/Q`lI*!h,Y+ekI`8%@@OX/O9m6.Vr:K&3T=Pp-PQgPh;;@7)t\#YrQ^pm5Xsu0k%lSZ`!?iS38=m5.m+ZACqKd)2VnuO)u5p?-fr6eWEbs$,&Ccp>#6K'%ki=R+32mbj*FY?j@3`%tV!YeEAl<$b)j$d&r_;%dOc);T5(+VhZRZQGXr5qP@jA7\qP[C0nV?Oe/AQ'H->_beD;c?2fg9;AYXK^;%rAEVICqQu[Cj\MWE[JZaSSH/6^:a;50Ol=^&IP#4&Vr)I;`:qNa^bOOCa?GUgO\B^6h%*lP)Id52e1kW7HG50P(Qcm03D1K3UB33%rS_Z'_F>XT^c@(-`4ATBOKc!O7cuLo_isa?1$mFbfLW(J1C9e:Lbq1kI&^P0#obNK#TGFQKT1;c$$f(o84:DuK!8+coKsm?jHg!P%#,NIeAVIYQV%7cb[giU_6R![];>1(=LWtf*Ca9caG.X#R(IM$I]Y(&0m<#P$Y7Z\fhKeQSrc4CbPUh#@eM^]C@9RPZ08%FJ86[]6%P4_8B*GIPEdkq2RJgk0o4<$R.'UMc?+lo8r%+H?K`#<ODPmA1BN<$U22d7L\A]%QT2&6`>9JbUG2-n:8CqMHC2Y'SY.S.iSra$,A%M1T$dWG-@1S;l`WlF.t*a-"I:+[:Q/BXaEr\7NfP+Gp:^P`<K&7q]t6cHE)0);G`=@`l\,7`n1E`?.e%7_X6Eo+Xh`.(O.$iu^8F%6"-cs2gL-fCpQ%j@tr=qh9*)KAo6VG#Xak[)i<*QP&+H8B(e,u,EX?EqSh10iEX36Wr$3Emf?Q1JXDjAZSlhQp8C]JG[-9e#r!GG%(['p1'5JgH=38!V.9EF9[BYfk@c+:`nS6bO#[&*t\3?*Z)_Ya.2SLlN2I:;7CSQ@(V5VVlaA/kq#1V<gNce*WiZ*N.JTs.iJ$kaF%$0LlS]f-r4?8m!O=$hu^P.HeALOhqFe;[^Vc!OrF`]oNRgWNXG(.?-sG`YYT=NV;oO,4g,0Ec\82Zg6%F;$S71WP`:)[croU-&k^%%mZ^tSdKNt&po5+*Qc_5liT9fbhi+]L6]I\idC;cBn[umWLKn)<&].KYfuU>CA(,?4GKK+'ThUB2L-Of@"ntD)OX0!jGgp8mT/0s%gsh<'j(2MN)j'O?=IHga@m#BR6KF-mfHt#p:)5p`DFQ=/FLPDr]O;e]*0kTt$@F>/DMYq;!9jJ9o#=#aO!p$RGg\/KAlb*S^(?Je%^9Ab0HTAg@R_=jPDH]scDe'Z1."\M"OfHQm]TF;1_eG;nE^k2%R(SQ6fg@q(H/k<Fc/!V3VJa$i1,f7GpHpfZ,7sHoD!"3i"B!X9%\WQKQj%P)!^b1J3AhuAd2S3+:G,qoO"LAne%ON/O2faXWMY$U?Wt`OMaP?PWbhP`?KkXZ5NA$77NFh^YR(/8DNXJCrNS8e]D+NFf%A-S#91W_V%^0XOh81;!;GGB%K%G@D]#f6cihF:t8<@$!qE:jW$E66l06Hn3Z_T:KQ2bcr*ZO*jbZ?[D^_6&1D]T$KdbCkP"GW=B?%NuWbJ;=5o,>YbrP6/"dN+0F(*G0r2LlTm'Zr7EF6:kV@K+>`XLdl%i>g[0MC%&A78aP6JVbhIANS%%pA;1BcF,)@FYiD4`J2fBqG%TR.r&,7sH[3$=SZ[CsVnNPrgBIh;N]-&7E6P`/"RKh)e7&t:fa,ZuFXn#,6aCM2Kn@%WY>f5fskcXG?<D^,7o0fEt1$Su]G?U(XJ%d;Qj>frf0DQ4u0Gk5[+`BF(eB[CD`f`2p8&Jo0L:XWSRV8DH`]e,h[&I_T2_g\CRqQSuHl.gOh9NPJ$0(\X'F-5\+I,EN\h,iW)1%lrjstD$6_Nn3Pe7`8iEqAGg8=-ptCV)hE,<Zr\d,Fu^iO8EaVsD$3h$XV>;_"L;g!OL=V4R'lI<af5b[Krb^67_[Ws%[/fV#L1(=%biEBN+5>ur[DoDN(2ut%LbU=,@ZY:C3>!J"1i6_gFF83S*murQaJNg%@E`'Ynmq(U,^8:%g6NURS=%"iT=Jl3P2$8)4b<%J-]jGj%$%Qf.FUN&_qeohrIfdHdl7ndYRpEK>1Qqr-&Fjc74'a-$*kT>kaH/)ne^4cA9:fLNl<C>$'i'_DP164*)hB#ES6I@r1M*te`u'Vc%`_s2V=I2^\NbYj]c_=Pb\%5;0g)/K-B>OSM=K49Fc_bG%I^?"0%m43hWuW=Vg5*jigItR\Zks(k-q^lZK/IJ]JP(/_6],/&n!>U;%b#+]9>4o_kflCP+ZAj53eZ9\s"99M=(1DK7+_5W,+K.1"Z#N:\B(0<.#">hWS/m&Ikc:P=0%EG8I0WJ`hfbj?V:paQonK*,%c#I/%%aitB5VF&o7GA-!;k!cc2SKa&2SL;5rUAX@MITJ"`4\8aThX',54%!66+)jLZC3u83JP%2ID:"'n)R?t:-t_I)Rn.t'2i\cp^YCo%1:<-HWVUj'ZK_97eOHXVrVU]c-aZgX+6S("'Y()"iosNZT5EZjFD8OaW*37"'Q*dI[WocN_g:fT^?\_KQFhML#09ZbG@5#g[<re7%XN,0A.c9p`$[)7Tm#k_fH5C*DX&uEK(F0`l:0>.:ns4>+.*De!V;"F*`OfN!D$N*AQ.hTXh?C5tAnqs9GJT8X])mn7_9&s'#)d\4%#AM5.q1i7g"33p3oISkX-X&+YJ^AJNMg'.A[L-O70!>)UH,RVd`oauLn%bPYcdsnp2Q][EJms,AMg*!YFENM\]3^Y`/D^PcLVL9U%GJOm(-,T-1?!tEjkq9[uj%,F&^j?jVdTrC*2/;A.Aqp%WH6J]-=^PCNc,Y+ZE)FoW]=7t2aEHeX\gBp!h*KIVb:[RS)qi3BNOa@j%Dpj;Ioe(^>72Atn5iV(:H5C5.<b\JJ7)+b+`Y89ir]Z//)gdQImO$fP]=:qf^pAEtn!)">p"m6,pMBuDHl&mbCctP0`f4iO`e*%7%ft*segniYZ7Y<>L-RgqT6\_^9Yn9\<LH+%T],3):,K3.E3criUQb+S^b9sUE-MH(FIWgE5`SN2O^VN=a%]mE%*780K`1M]j,EO3T%[fdYtp+%DQ9^r'nIUQaL0%1"feJa!)*jhu'%uB:a+P+&RjCW<YV&Ck;:,)aE=Au12!6Kqoe-N-5$8AI<Y?SV(;N3r?8Wco1I61jX%].NhfrD58.5T!1k<[5WX_A9!gebK-,=<m:VV/oQ0()VH8;lgRZ.a5c*0]Vn!r8K#u84LbOTU-)T(gEjAfNhHkfPi/YpVV=sGp]L\%8>QNX8:V8N6)0qr+!=I60""'RGDXhB_/;j"#&=cr0!T%H)]QJ,jJo(J%9ah!l[BpuVM)s/Zajk05Z";3*KCo5=DD-27AK#B3:5:^%neZ#i!2JbN1hudn;TXM[%@RfG;-"t]JbDI7)N,.":rAX]B/!Y/cAcM)Dl];sW%!"/lPZ@.d(2sbW<nM@7#TOt6K<$Ce-)N'ZUdfG%@i>*Od\suZO1;j\R,a\4.Om;8")CV%V$?+>KV2:Z0L;...8[`ul]^m6@Q4RlhligC9bk\a!:>TAcZcrhOmN3NW<n6_OB$%%LfA*r%-C#Kudj5(13fqCUW@*rL9XR5#!_hRFp38@M'iVe=F?u^0geLKQkbqW4^5[?#3b'U;K3N;0W^EXqh^>DQ<'VWbhktD,q]6+XUi]kX%;C2mu7S=HPT.m6l]fo*R\,rLK>eq[+LPE1b'Bqc?E]Ebq+.:i&*I__^r0+E$?!l054$/qN^o&a;EG-Bp#GiIf8Jl0^FcaPDG=:gX%FHDogO#dG,jJ50Fm5Q5T1e"5]LV>#AWCT+2]h6j4SE^HWVfnDM*)==[+RqEr%^J3&ic0B^lpqm%,NZDA`8`PgfEBd#c:=?6LrZ4*%D`q,ka9Fk0!P650G0=6ZGT78J3tdTAF4B7/"'$+CMGhuWHsAs85-A:)&hU)0rs#6G*.#e_+1umh`9tNPULWd=Ue.h7Hg%3,QGhg&%aW,K'a'iB6CVA9Y3*85AhjeuY(:AN0=sstWDY^g2%iF%M:@T@IA%/`6LkUPN1^JQI4?E/AHL*Ps+1mO.Z.l8[IdGu_VMXTYDX.`+%Z%L?;?(\`0oLJl87G#^CY4kf[7`sm(iW+FZrS0imr:0Xq%pkHKc@59:IN.F%f9?rJ%j$/np1)^=Z-11jSbl^Y`t!Q6=u#g)U$JT-%#HBfY>opTp@Hq]rURGLYI-Mi*U?BBh?1`ZaSMZs"1mi$]c_mo\buHuNJK5do4EY=;Q"3"L\rH'SDI[5f*EIUa):MLh,o4T4nYqGL%bL9@aGj;#SosT1#T"8M?KRE3\cnf<[mUBk4f2K-`92AhMAko>"nu6CW:R.jGg[eEh__$!gpMRK0C3^Q\?Xf?YlF7iEKIX7`%YlRc%I,<W:^a)[nm;Vi925tA13t1.#%AL>Ll1(%n@G$?,JsIA3ke,sY[C='$B?<Z=**%*"L!Y[VCknbp&0<@4*=dbGV`2QOL+5.#oe5/5%"1u(WF$koDQutb9]pr0l#-R<2oc&l0@e?1NZMhau[J&Gga$=",^Q0;a2s,iS9Q=kUi!j\Yi_\ss)e.IZ*-FX(DZ=$\LuIJPUfsN6%E?'^FYM9`1=*83uECV"H?k$i=Lmukfh@[dJ3G716VO(K>&][Fb0/#NS[.64=g0<7`BLeR5VR[q3`]pNpE(=.Fmt`pb*AP9"@QN-R%UV0XlUYZTX2cmS@g_%SP>K;tTh3dTsId`*QITgPEO.*29*AJP7en[e2m*qUgidIT7-*E'u`8>0G[W;s:a_X8LJu*Er?r%-.5(bFo%D,d3u5glAL06:;q]c8?+puTM].7:J6_Mu>^KQa\M*+_Q/cuZl4#rfRPVTp.FEYpMhX?,t(;n!>d-,E]\-^o?$;im-4@Kk,t[Ji@E%SFA/Y7^UKeI68TqcY9j<bsi,<Ps1rsN$c]XAchlE)>iM4'(ib')hIVqd(S4T8+'lRBHoS"(`u;UnTDSmg/tQnD(M&B)q"Y12THDj%\l<T\$)uVaXGSpq'J:>u+DDdmfsR,OrUr4UFh:;RO^i>iAp?.QlRl>W^]&Idc2b^[E1F\^S.uGO\+^EgWdT)+2PO+cl8Cd_)qdAi%3Vj!*/jgrA/p8:tqfM\!V7s_r<=R>F+B*'If(;@R@W5g+gA&P+1;gR[4iTGL(41pcMDbNWp'R;70$R8W2<)b(Jge0!5[Y+HaYdOd%DS;:.`/%it>[>K0!^!fYj\^=W8?\/b`"JutCCKRX<f1pWBEpsp@7tEb?cN_(T[dqGL%i?>V-G6KWZG_=,hL+\/4hfNIY^[/5.I.(%9M7YheJcgTjcgq<)UZs.o;=n`SBL8Gd5?Qnoj"I!*OTqK[F&,]]O%]ec/.Pf>)h`*:#4O`pju&;Z!c!p`&BP*!RPT"cQ1^bc>79.%Vn^1hES;>QG3[4$I8$V0$rPKdPZ/n):2dmrg!@c87S>VQ&4n_p9N$jda4"3Jg%V?XY([eIIX#N`B_,7HA^uFQ/aDAeO+ZcLql&UX%P5=Q+C<&uH&S#VJ%4F*.B7-^)!Y%UAV\W/Z2>/ktX%-=mQ@2o`FI_'ICT)He3@.(i`WDu7A,0Y-2<*rLQtiTiS<gLLOD;];\dB^^%7Lm?#&kHLS@A\D,np/p,UM$?8<^hBE3E0:kB?ZU6F^%b'\9f)I+8;ng7]ic=K6SQ&C+PaJ)VP*LPal'NaKdF<1Yj>=L3E5$CW*V3%)$")h'?J:18r>Kh@%^d`JoNOLDE\HK;E$RH(UdKlD@C#Ykr%Jo>tWU6YOR<?mlD+TG28>K@[CaQcCi?@5ba7.Z-.EZV0-CqZ>efH%Xt%f>EOcc]jZt="4h:H7[OmOtj^O#fI5s,'\V;RoSBpQLY(Gm2Gpg.`ZIh'X`6\^h.Z6\6Jb@'O>P/_88JoU*AZ8JM`p^*fs1N#S%HX_8\?2)odm&4L9j_rtoNGZq[rRn=+q#1*hIqpqlU[XRer2bP!3PR8!,JOeWlMFGaq:pZhprYtmmq4omUefakZaLq-2,06Z4tCIm%[oqBY_!#7P1i1#2'(a#]4M,Fe5J'N1r=F_t'pSLG@uG9tN8U@USa'mIS_=HKs6L-2@L8i':*WXTpuY4s?BC6DYmtE%.h\hRLEho3%--cbp:EZ9R-BIC*fSGHLHHnkr:*?/F,`t0O0Gl(fKc8q53d)kCW6_1arPS4jJ!F4S\oB6HMS@un^QenHr<;"ns&D`!a+)uKaP?i(%,@ct.(,+X2)W\0of'DZT.Qubu7PD\P>j#sd)DX6+)OL6T_#AdmU2GFG!%G&M#0Y=^LYG;t"eld<4HF315DTOs+RWo\*<%DG>VK24%"fHd(D_f[G#R9b$573^.Ig$4r5MXEW-ai1['(Q#Bd_DSU$;QbIHID].L!\A9>(1b!<r4BL@^Wre,S<[3VYr+an+p4g#[h+jVjcQ(%#NZd<^V'J(c*8NeGTM7rQlUnolfY"fH*Dpb17%,K%SU3P&%g0ji?%F(m=,5iL%iIm4(=\=0CmOF,2rmho0ucM(kO$'jXo=I'&@f(%V\U;W;_S8OljY)-eWBNM*JJnUOC6@RdGqDNo9t,Q]7(5pG!%M&p@II9^V2pml6/B)(COV*lhXt>#)+l5/PpPRI^WD[QHeM9^D"\0%Ul6h4&&=VK,XMkVa=Ysu\8jj9!SSIg?U!pZ%QBmV5C5jBdqYJe?WSL4qF:6?g1Ss2eFkKSe3HpETlhtt'?O.WTFS=n`He03-p,Y/%[C\=i^G&.T0j;h_%Ln!k&BX0G8/)@&h_#ZnrkYM8DH9h#q(ZPljj+*NO:InbE9B?sk3#V)rjg>p><qUH*S`&=noLGjXOb8`7j(VI%c3?ESLUmLdNsQ4g(D94b^V*d>G<GhXKHi.7GRGiUK7Dbq&jehnWRr?^(W\V]bsp7oO>SJYcLZ.E5#u"jC#sbp;]\a"F'/JuEm9/3%U-"Hu8..iN!fOUT^]&IdGXh\P):4Q:8*hR2jPMn>8+I54UZP9ic>cdDBkI.F1`>f@OpC$hTK@.:S:$7ICi4nJgF@/+MOkDnCqhtH%Vfca$]C[h(<MOp5=a2D,2K#5,`of2Aq.E3W2o*E[mH4CrA!g6OWb,_&"9N$H)fk`YN8L+&3Jkr_:8pen%6D3_EH6HLXXRB/L+b&\%Ce6fD@eEYp[,8hP2p;V2b^0M6*L-^Ba;jqIqCJj0(]?-*-J1ba$F=[IA[^5_(nV2mM6t%&D[V6,)Jj^`JL!$h0RjkjBG*57mt8A6%Y%5PC?]]Zj&lWB'h`'-`i0fU6c%sI2!-uKk3*E9l/>[GQb<a$CWVV7Y=<P`4G_XfLBi90=CW%Q?/nQF(p1T%.?++9`mKN4U/+1\f%^W3u5Rit(7Ef;nfE?C6ef3]Q(jG)s>q%-\0k#`Q!5tMPkAb;Gn=j(`@`Trh!M"Y`!DXf/o<Y^EA0huVGHm2JE-l<*us/jXY9VbUk%r8/J^9^%`'$neHSN$TP0i$MS^.l)_oWhXE]+)Ap0lTmHko'tgMeQJLjCq9QqO&q`b)u<7V`K0+Q1pPVuen\1X!I=Bi(DFm&7$A.4%Y5lq:cA=Hk5.64?k5F::cVoO&imQ+p']cG^?<Bt&MuDGG_fDJWQK0\4%8;_Yrp"&Dei;EJ>FFY2p#fd\)VFC_[g0t93$]Wp6SeRn%jFg)Ug&2)4][=W<GTJSu0<@:&b'UCjN-4q1Zl#L!)F+tJ(R]MQMaM.Ad.-tN&t,dr*gKE"^.b[]Sfsen^rDc1K5S@:+Oe1^GJm4H%(199oRD<6flb,b<Un,9DjSJu;)ZXf1AP_?gg_,uXiMG<B82=8?h"$jgetPatQGD.MDWR0LP"D[5fji<)ftKVT:96rohjr1IYo_>W%m7QW/^i$Jk+l*cehHuF`.7d(?'MQq,pa4f;$m^:>V,6T-FIJ:P9]_R*m`LTNl[?+73@`)X]T*n30?PktYTC0:>;52<4$4q#i4^aR%H_B0b6DWE-_AG3:E]^rJat<C+9;sVK$E/l4`.2@ZAl5!J36aWnat:+?/!T*l9)(rf"j$6/"JFP%aYNLI6Fd7jpG3`J$D`Mq,ioeL%LF&"5LPl2Aa<HjQ!m0MkPZogVm=G?B%GWL+WA1WIO'0aWg_/6VilL4Yi18oO#9p7)_o`5Ykka([bTbgTaH?E"TZn2sKj.k#KNn4G%6R!.Ef?_^.E!p9P2p`@Bh1nmo43Uq73OaiiEgfSfU[Fu'0pGo3W6ZX3%k>%rDOan4U"k7qF,cpLJn[0?RO%!\n&l.VU"I9*S-.<p%s!kJO[B&V1r<"ko<W?>h3@W8M_W7Wcmi+W$-kOS!"Rcc7j$@5/.Bp0U!;S=1kL*]"%.7Spe`";k1d3;ccSO7^3i;`9nSSY@=_ajU%WEO]hg2Km5&AQm9#!c.ufEqJ0cYSH\!Tc'Fe%%l,Mcr'R=i)f3kF;8<rV!si0hGWjP_^UGrc#!;?KTlO@uN&1It;Qt,c4M#qWn6I%:5nVS5d&#A_!UdHMR=q2-BQ^Ig^tS2nl]TVIsEu$:@X+NI0)DSKcDOuqL>T[J,QXG13Ll,SVI.K/V\oX!rBR,,iKIeSTS-+E)AMO%&@RM;U46HoP)$o[CNa#VlOp-cYpYVC0C<OP*h8k7]MLc3_2FMSEjS;Z?J`A+["KgjY90>c5&5<a0'TNum<mO*SF?m(lMqT)JNS6b%SFB_B:Rceeh\ErW?OP8cAE;$[Xm!?YdZIj#UML3ua]d/=`guR%OgVm[#G'1Ddp3>.QWj-JmTNJ#3V7tSh6hho1u>46'n(GpG?C`S%f"J&[89ZXEC1Onkh3Md.q5u$_VOd0ZpU7!X<bPd=TpH5;]$tIpNuHga<lfKed#C5k[5@flcO8=p8+DmI.;%Odf*=;VIQ64"fQG_l%f1M'ko3E<gq6#_EHrn:Sn+n0n1sLDL+N)(\b]a6?,^Y8nf4SfDPQb[5.tE"o/)R`qM6K)!og.a)[m'@gYr$Vs\gaUVZ$b#6A:MUB%^8k_eGN!^:DA)3:\>N(945KS?o,+p,mTL1\qR$u>0jTf?&n(XiAYn?JlL*)>6b4f1ipcSQ[O^M+iUmhga1BB-gtAhkc(47UfZnY?%$ra0HJ<B5&6]Or(fbH_1PsRgC/']Q^Ular#lZf"FZE%G[&&'Z0V4%3c;-?kQOD8_<g&^5[W&'WXE1[rPm>N:q(PpiV;@Y<5[\[(9%/eA?!MrbZZ8c5Ol#O!RFDulWOM0X1aj,HkDmKK;&(>j2uk!KUc5Mn#"6nu3e/rQGJZ&I/G[2XYA>9Msg2NlSJ0EeFc0hc4e<oZ/h%I2cMeJ%tt*4ZEl@Z^f%^O@l'KH>j_^[2_Ni*j%"O'KZa6qcST,E8AamV]6;gX7a(G26G.r4h(Kb'N=Y^!qZ*qEc;'7hV"XOs$@t9%pVJ$X#=McTW57G^Dp:Dd_;Pg$-QtK0S>=+.@R#V5=>H&'*$"D2-%QZ8D."oM3:2f[/,(1Zi*McRiEd?8i;ul-8;_A;1qKQ[+rk44%oR_Et#Q'a=nnaioA0bt[38Di"[.dGN&:dcPfB8\A(#aCuPm2se*0?pG5;W.`,>s0sFt+Dp,2<QY+rm2NAYYEkfa05`ehC=RWR5!P%e3\.WC^gLVgd!AX9+rp3-u$ATdXiiD3)0XD/1Co2m#\1W7,]hVVSYl[_S$M;_S%XBD=C9.#7@Ip:Ah>2'h.)+ad4dsHEcg=7O+"m%XY2[EeX=TXTP+6r;7HVG]_UQP-sU/lpb_ZKVb:>"jo"^1G^CkFp\D"@#UK`]A15kq@/`J<#Zn5EKR7,UDZQ9KA4$q=aAUm:*A)h*%hG?\n?Q_1b^=7E6`47<G_?$./Z%aH-+O(MVbtg30HDLiOCs=V'oi;7TJDBuJ$,Qjh*St@_+C$$%;l:aC!1t'bZ3F8BG[V5<_q.O`%$aU[OEi=/SV=h)qDHVK3oYJ6OU><*9hu^1XUt"<^F0%CP/hS[+I24iQn#mPZnt.<g:3KVsPH_=*Bm?*Aj?I*8qV.Xu\V,t0>XHDs%9*f&h8r-`hF4r*Uk7XBKB@+2Ba8Ej!'7>m?PKgXk-`Z0TJ,>n'RR&^f"+5RaSP8fdTCp[-3W,,Ls-QK9+eY"J:+&0Kbs=F^&B>7G%nK=A6?e,*q7m8(kBr:Sc[s`8Uk>UsYEP66e@\t7PDVac/_@n8RkP[S:]%5.S4Jr@\G!=jk%d$^]$.!<+>iub%YtUn`$.$^Kk0>=W%dV;+B!mW31XN[?tc`tL9cqZ#P78"@EKb'7O"Jum)F/KP=;S[QuQ"<E./nR_FM]%63F<%eH$@A_A;0ZpHSf*5!Ea.fiU[[[8nlGXu%S52lt`e*T8=N-pV(<C4-'<R+X<V1/c^&<SEWW1qS2LHWf_f>3(O?'^bW;-4b;ONHH+69^J(9:A03"+Df;)PV9\c27YC*!9`F8bFh%'OiN+d/A!DZ\Ta_l-;hqH=:4[d^2M4(4c(g)7r)G-l"OD*716#UNdf&[tI6MefQ^-WnGC.DGVHo2$+Z\Qi`6^Ldfa1;Bp9al3G3N%&gsgp=hOP1g_h8YIgS&1^=t:^e[35a*WRV?eXBX"DLWDG50._:fooFB-Nt'*eL[rBC;R!>4l+Z%>pB/(Oc_GH3f/H\WC*!OJ&'W]%$AS":.6\<M#fO2LB.BA@+&D"<cFbO7[fEq&LAK8AhT.gin#RAU39qALjRrAO9/VbmUNg*To<Q\'OPY4TH#6%G\ZsZ[RR]r]YC+fI%\u0TK*d19TUdFA1me*ppOr%1R%70/P[L?)I%rNE1c8f"H]1ZMDhNR])qs3@sF["h]Dh4[no,j'2I>*:!'9W30_:M,/WZF]#4WH7,%g+bY)4M3*``<RP9nkZ1tka8t6N`i/ZVq&m-%f-U<qAZ1t;NS`7-%7C"S/o?-dI*%2oTK^aZ+\VHA*ho%AE.[G[h=D!e.#q`QhkF*%q,s.Nf5?po*]7es():5iC8/J`])pF%"2!CLJS>`f>$'b@'I9hMT1WWgm%.Ym;YYjGDYa7e.26FJrO.]I41b5`94Rg9eiTH@MoXgT%obA6nfW-%XRF\EGa?'X2DmJPI"Gth:I.kg)e=rud\lp/VXTc7R]p9&GT]q;X9^0M(n*.dqE9oWSSqFRJDkMImaL;)9CM<M69uW)M%#13@/,8-9fE:i8)EfA0:(*:CfJ#[,u-KBDjZQdp[PXVIf6XZh**PghHKL4pc%se!Z\F.BNh%8^4JE_er/1J%9=(3iP;a("7NlKt>%NRB(l(/NuP"QNHp(P7Jnj>=N^LX!YV$@JBm)1+JTUL3GnqeYN]1R]>-JUI/5V,\b%26P@LnB^9=Vj1reW7-1.lECXaP&]/`(RVeM%e6s07]eh_4YR>"*XfBDgTR#6i.iRc)>df,rk8-P^rIX,HmtIIO%`j_K0,j2-4Nf`C1tVs92.UTK52Ql]BHr<r?6G=+K=/`%p:."L%p3<3K:A7R(YQ-jA6_Q*MW>A7_3S^+7IZLJq.Bmg&F,o!=gr3cpoiInVY5N%Hb5h=,<Xq7%BT/Aqmg_=T/5.X%oQdm^N8Wm##`n+/%!]C(i2<p$3f2jXbf+gj$FZ]aLBW_GXW!u>CFh!g9^_gS35`",\jTA%7;5q/[Y^SQokbB8qNc.F3?%%gi?FR0P9b`NqG(K;ENd-4k%%l8i\ci!._`s00=Ylq*Gm%28R^q7E8Yi35_a-1UiZWQWU>[(PkX^E#+";U45IuCkRmTDWoblAtLTmH+eI$XYLh-ft>]9qX`]*FIh%.n,)#F#r#fK3^o$<(LiW9/bo:]D2(iG7b:-pc5IcDQjN8f$.i_>p.Bqp.S^BZ&c*E@E/cJ*ZreoOoWL^"0t4o6jpuP.ZYK@q--8q%CR\mG['3e%/($[oWkJTD3WFQF8s<QQWK0Jc/\(*G!Q3aoHs:FYU>c'U?;3pWnYq9P.LFq$"Vq]%jErm-eVA5Z^q3)%^NCI5c=RI!%W6..N*^sd8ZmasuaE'sZTs8;nQonZ+'kdgsTl3fl#3'2I"T+F5r[?D%>mF_YOU@.e>5[*A(.$;-VE?!X>(OmaU'3L8S:umD&OA#>%Fjt/(NC.VC#R6XV(!o#3cQD56*"jJ)i]cePON%q0nhq&K"t&4W#,)DI?'dU-R0lJSFDX87F%BGe(-kjJEPnd<+N$..As32u&744V%pkTD@26.lad`DB[i->1Tc&I0[n99c=`)\`,A0u7#%XehhA\j4`JtPU)O[90:%=guGY-SEmBJ[,?'o"p&LZDO>H1EL<13F]8'NYPb%]\t'!k>@"g4r<JE@%]Z^SftP^_3uiaA/8l1m/"Mbh"Mb%KB]\$%JFT,M]/3S[?)Fda!U+X[lesVoaG5$![<Wc+Qo^a-S\F@)Tte=%N-SA0a$K.rcaZs`St"M:E1F"_3#ft;bTR/]IYlT!g$!uBj'P#%1L,;gV&tSDou97O5Lm66C,ng<JgMfN-5'dcmBsc)^YJ`<p"1[R%+)L@7._e*+GcSPXNWOi<am1?9_gm!7k'63]R=dU63f'KU'dB+,-)q)?3]c4OQR)M>@(.1SP^n<]Ft5I.Zb6qrIK0/=?n(_RYZj]c%5b:K?5&ko4]smd/U:Yqn8Q_X8!;r<Rb:QD4J.0P?U@\%"2X#eldVg_H_,+fCct5%FN\-VJ;4eXO!?\\BT:32Q@JHq.Ve?53X601e%efVU*4=g\)$JJ4./a?SsG'[?r2KBA?X3GZtK0t@e(tBiahrZgBl@Y@]LibM]S0a=R56Xu+i86JJHkDH5ZIMTHO%q<5/t4ol@EkjH%O.B14JQ2jX5Uq3W0g6(CQ_5`8/bqA2HHA","6OkDKHEQ'_<\%889@/tn$so([1^DQMMOYhp##puBVdo<K01qQkOB2K,-2)#1HMf<%:Xhct+Hs=bk7'cgRrg+=[Y_fHA[iQ/M6lQ7cF\Au4Jh0X4Zl8u2SNlDKM/S7ZR49MC1!OZ"j>TR6;XQX(<brXpQb[bD9L^2oDf:^%4Y\?(nJY2!klG6t<u4Vu>X+<?g+<s1#N_"Ml&u#Nd\XkeH[p^4$(P,aVe7fVckn/j7'KA'DA/(;:^llCG]kUJ4g:VgJ,7qTnK5Je%FF!d2=H)`j$31U:>l\:pSCHdXGdFeb7Dg/`D:-L'MjYGsf]1OZdOI-@_9YO=PnNf\K9Z;dEqS>IA$sW5#TSVDWNlKuY@:o>PF](J%2%ODtL96Y_p^iu&h%TAUW)\K0c9G^0h$BQ\hf.BsZX)CE2P%M"Nm_$SXdl:LK5Iumbls]".4/_ESO`!aUp\*fa2H&GRW?H.`K*[Z%PZor8=LJin9IZ6/(eoY(GY/,5I[2VSQ9PH_IZB-HIFM^:/es"Xia9_bo;;16iH3"h:[R!(`p08b1II.Wf=`fM#225'@sR:OG&l+l%)\`?O)X$FN'o".cF&GT;*&T^fW!%5TJP$`tP?;i53oIC6"Snu<_uedO)D_aVR&\QsN03$2870rk]LfLu3Z.U?c<Hp9?V8P)M_B*o%$Gl7EkY>'K/8!f,qf=pSn+4d?qfi&>'BP0[YF0h]LC'c561!dl2[1^3:n]Mb-6=A+p?Sr/S2PXjS"hUa6,F=m!O4S!-GN<h*eEO0%SuE7%UX0[trS&b.n0<@XSp]G]aG?V]MFm?SX7kt",i6[nO^:-qa,_Fr^MaN<%3Sq+;e'N^V?U7BCQTS!?LZO*_)iDt(ZY:prpO^p%q,$<q*u+qfCZgC:PBaR9$0N0P%EQX^!sk6<,V%pq_'5Pu=U+I[1kXKON1Io+70!e)*:g`sD(b4`LDH-/g6gTT9?Qn7CQBf&$"W;!%[Ijc;m"PS(0O?/)*N)*A(cLMBj8>&=@rUrV=\Zr=n.8n%s,[Z^3$.7%5"_auL2H)m\YD"Pf,k1n4FHPS*iEDm`?M%8aEgCFJi=s*%Fs`:9:@AY>Z"Ea]FRa^RegsrBILMq\Gl<7>rRan7*+74),]Y9]7UT<:J4qJf?T6;oFHAbBEXNBqF4r;=1eGsZY-J3SlqmV2fRs?l%(gP0B:fl+8"`+3Enn;UZ`U,bPMT^?//L$WR8\")0.`(iJGRp<N>]0!Aqt.KiMgis;f/pteQf'*7c&l+>_,?/W"@t%LPIY^ghHgXU%f=Bp4:\Wf?XQ+UKofUMWZ)=_',1fbN(JLI#cU!GT1a\gq)&*7:'^lDSBg07FFZfbMVh=91B0oe73/:]K+no,ZSlL[bQgu-Z7W`p2%,,78X.KNgi]V%Jl#$c2](q`@RU1u+V+K%T#Mne/)<AgsMTB`?)GBHRu=qr1#$fofCOW6%BSNTsq`s_=oEq\Z-6S\&?jEM&uEkDR>%*&!DoHEq(V"RB&sNKW<*B)aIHnWGISh0r>YE1WsCMQ8,&(-UI^0hu$u%Ic+]M4kl7S/pfm/;'CHri!TL1=1<b:uB#qbP5s-S8GTZ%$M"7>=9CiqOD)<HK-2h/Y&1*?H%B8p;csq$^J0bKoQW=!_jlBXNOM6<"NA8_+c>dkBK8)b:Kqh"`-BDqePnr@"/N,e,VR0uZ0$MM%ppn:F`r"gX.fo-=jQ5=B?71eCpn02Omto6t,fg?+nU)n"NB0@eC+W(2!QFNNfo*smZ&c4\3#gTa:/IO:!ZHeQX-:<)6QD2"V=j'i%-hs@t_4;r`S7&FmNPR>EYX)@Brq/t)k4:,O:n-+AkUOgoV]q.@.Y\cf^AP5&Po3o+"]-6"X;Y/]4mZWOB(Q^pfVP[MA";Z+TR%<a%^G<h)2Sts.;Z<C--\cp2$Q8!C:CKB>N,`<oC"]_#S2e(&MR81ZiW9UVDhc:-]T3]uBY7*.%I'esV(M(q(ahkI6[gMFEIo\*G_n.M%:e\L&";p08AB-YE'8\p\<f13#j2?/Zot84&E=TJ+dYMo&1n,ftA":%CMF-bK#NTA`-AZYN1iFh^1WZPZh*FfT*9:(X5u(5dXYA!B%-eO)NY9!p/0d4Q3&dErX\Arp()81Q'Xa5h6S@G9%W^qCL3ER0Zi9F9i;N):`pp)e8@[q!GiJ_b+U)57AG+:$G.E8>(@iWk(?!(:!%S2=q40b,6j/[2^%b`5]E-2cQ2e_72FirljGg@ok,RtNQ:_(<rJmMI<`Mo/Z:3.[$fZ5$i=ME&W/Qt)Z]p1Y>J_isGt?/EaDF.d"s%@iX9kp=f03Xg"Cd^<8CD4R1qk\mq7Q;+Iq33"&HuWd&Ls-<BRFEm+Y<1![@p,KgoOOP?86;a6V)A"8PG(oLi%E<7"Zs-5<6!&eps%L_J/+8pHK@q]&dB(ub\H*FC55=_`rK0htPI%ok8"]e$S!e/0R;Bt#rAQ!5WU32!u8ic'j_m[[s$N3bpefeH7+@;Yi"(oLi'EBpj2%<5f\eM:tkYf.`-YZ3XgGRk+f,As"5H3S(@59,Qitj.AZ.!3B.kF63(PaUi)V3i01n/BaQqF!,.#?-;*l*!d&.:bL+c"%s)1HlY'c%KmAO@5u0aBm%"3%kJ2[H5WpN%!(UlG=>3M.X\mukMO1b0MsMAg*ccW&8mrmD,46E&R/.$HMjA/JBH1,AS:PJr=CYP[Z>fk"">s$g%.KK3hG7FaCdgKt5`LaF&**BL2Wgs78NLJN\&@^`IbCb[9$1,rgMQq4&CggU#3sS#E<5lkJ"*&\V=ZZk?L,bZ#<bMhrdi<c<]Xe>c%iVT:I-FN1[#ZdV)@I>,N4?6Y'_TUT_g=\Kj/>H9-#F92DGNSrCYS&6plbLYJB!r1W')K:'7<*-:b9X\$<j?[bmf6<4gap=;#2aU9%G@1m"CUJ@/AhX"YZ?]i;^%l(-5XjHjYVA'In=+moh?!PEl3-Mq#^Ugc[<EabYsU#L])nWpEPHi*0Qtd/UZ=)eh>pG4SX!:F5YMUo%]"<//VU'(dG@3!epXqXtD4RA&a<UApD+%L11`[j:8TE-RQji"]T;<-.J^T@Y?nro/0=31o#/`&9bA1E_YAb$R>W0;bUH6"#C*u'Z%&(f+TL_0JR8*,"qJ"5!R&#l8,"Q8Sn.@.8iP7\rjqG8$Bf[!UpY%0p;QsU*h+U$k@3o7+9o&\$YdT9]q"?@(REa0E9'-Z&.b5>+_%RAAQFOaf@/VbTC9RYN)@7VX`\7.oB%!^R8nQ.eEI'SNK*SnP53qRBm`Z6BE=pj&C;]L`C[[$2;66.1Xp?tC+USb;sgUD4pinb*ii%(JjBW1@8pIKA/t8or6tN[Go)]&=:IhJ'?bu,S79+#g727N0':eM][Qh+i]nhMJ5QTr>DY5J$AZLdn;J`0V69_0Trot=kR@U#_X'F%R1Y#Qok6E:1I>Ko\WJmteESgM!q-s/d*jQTF<^qE1[@$*])pr5S:48jUnIE>c].F8B04Fce@@XfY!\"g%VsNa:5YV&h!ot,%O7I*%j@8omX>[P_r'bLV`:!:Kh$ENiLUn=2/-EWHXWZ9laLD;L&AsG<QY?P,1lu1^]]@7pOJK6`&*gbtauig'i_HZkoHFDMb$HRe+p>s.%?7PFg"NQ?`B.lTu]Il('abp^c4`^4MXUr53;XtK-KV\#bo1gf&SEH_H7aq#shehfej4<+.ZgjnIGeKHQb$DI]lR$h8NEfJ%\Re3#%P,g0<A'H20p/&540R$mF1)DJr=V9Y_:="D%>-CllA?mDt<'+'[U85pV;6\gfK%N3/:/X%BI'pJ8j(W;f2FY4,2q*Tp2o$KRbfoJ/%1eiZRLn"accecE234X7EguXTVmIJ:20n@Q'jUZ=LlL$Vk4mR@u_SLTjq;tPfb8cr#O!'LkZ$bAg5*p,<XF::-A:;A\7n$\]W#2QW%JMaL\XFA+V%Fknnr;^?RIU*5Vi]Np8Q%b2F^#F83""_1LH63=UaY&&GL$mC/e)cVq#'X7C;#Z:0]To3VBd8-q6_O!?E2:L!^5g<_%5r1ZchCYT%&bk_Am[3*sk@VkOQTsauGPP`Y]DSogQTq'g8"D2\"L;QolLIICiou+Garc0_KP0s&:@ioN5N6Fhp)tu94Nc@Fd_q?O%R_/>l0c)m&gcF0X0c*'G97hKe(TuC?C!VG?]\N%]M]Y_O[N:Hp:GR.Cd[J.95c/_^/q*rsW!^K&#EW)h*uinpO,`Q'8&\R1$,dkV%O/Tqie;SAJ"=L4"M?T),RZ`mdJA`bG#LN^:^q)$6."K6,/[]])[Ll':gRtM_QZV'L;)#!&,nSiLji^m1$*7il<!ah+I.qrP42*@^%jBo*-Q^A.d@VJF?^.29$:o8nRHsGK=,V4Dccfss'*Ig)UD,Wb60,<B='F3csNNs*<"b1Q,4!dfln5`h0b(I"572qi_d))r=?t(`I%e3a]t&26)U>R=bn]:(Z*=$e$'<Q^R<5Bj0t4%52-S5]$*d6NnU?rLcGEGO1*KVN>i0hV.WPq=.s_N8'p_W1@"3\=RQ(F!)#K#s;i%4<V+"_nKr.GIib?8^"BR?PE%1NLH:C0'k,g(gcTB=+.go\m;t&Q8F>USU,!C#kIG)BB]t'3VuiCmf;7t*iYHIR<H]tK;-TK?8PN@%T;Ku#Y(Y^^Rls#<_?-Pa@JOHF&cuQ87BV;'cfW^Xond.KEJ!V+2D\S-(UV+7;HHpilqJU4Cq:72gO-2N9ZYsKdg1B]B5u4)m6(%7%>GCS1\Inr]k!i1qV''e)/=9ZKJK,joTJZcaF(p>FS,#L!Vd0W!r3je\jA)!t[J.-\+U75q*-?#eG`,Q9JL_o4Vn0k/8r/sZWQu!U%KHSZ(D$a:\(G`Z)9h_^Cpnj=9hiB*%.&]:7$2L+G3\]c*\=L$3$dWe($8%,WHg^Y%G.B2>=eoFc)3V.U\>=OrHYEr>.j^h>H`.&l%;aRS!a*k^`U'!`K.3U.#=u'Y]8=#j5<iXonC>d)GGl*c65$\K0^F0$TY(Yst[:.^jK^G-V4`"cINGVb6rRpR1q#1*h:V%0f,0AKR%M"",?_SDN`]&ZI#aOBNB(p8O/*-0E?dZlMjoHloQ-]hq@A2E`-T`Np<JF6W^HTjnS']Scj,$1ac-#B4DjY$P,.q&GF&h=WQ-ndt,%DD)F$K_V93_B0@0!B?nJ+BQFqfLo^U_DnIdFK$f]&Hq:QFGsH2EH-4alq/,9-^9cp8n;EcD"B1`5BgB,<K;s+!qqa^$-TGD=2OF8%e#nA-^W;\E@-L;Y_SVQlJ8)8c]E3Uc=BW(cjn*(VLeDF4fE=i.DZ2X'Du)+l.&6CNZ`fblq"J6do66QdHS=,aCl\K8>JU@E0HV7q%`/?5Zg%F!c0H`9,R=>`XLh.'OKbkqG_LeU?@DV"u#_Z!<X9ikR"&Fu[$#uP9%$NOl/qr#V1`e4"CNI?J/2el'5r'h+rHUlKroJ78%A<7*+O5;&E05+/AnJKHIE;?JBn#4J;!u^<6YrQ58X%@n6k(KA/#o,kWS.Nad!Qc`^^OV7)KJ*br(%LCr6GT*&-U;M]RhOd4:HA=q%pPm5)[j%)p&O9^0Oaf20,qP<OV._:JY?^t+:-s.kXI<&cJN4kpP&"1sF3S(LT1[X`59%p.%k<B+Y.\3lf3U/Q[0*u#<ed[dOC<8r%b-_>8`\0.p"$gc@VL+OQJ_V$6TNjR_a&6G6'a\DW&nsIRa,2"%jOs^2ThRPg>&V6*s(pDfn4)5#/nST-NAug'a6*rc?:gL^o*5-A%K'2#6/%#VV#DYq=!V@bIC\e+LQH$&V*nXmY&+jtNdC5DqIP)1DJ[STS?s<<J;9W'DWBCe<Ef3hB?kO0=;L9PIk$M#$O4d<YmOQI:%_!J.U9NrXp:L:VD"\GQaJu)BB$U\q?aH6-'E\p%m]T9#@*g">)WRMF9P+NndrW=>6AkTN6j%Yh=HQXjs=fOWH1jbK5p^<:K-V"'=%GiCY5V:o8nar*J4Wmr03kI5_q[+]MtQe_b0B>\F>O,gQ-(,I&Meu?I13SXG0AqQ3O;ZaJ?^.9")^hsj6/uc5`_J7[K[IuZ1-.]f(%e7u26jGtlG?]]"-E_9hE>4)6mLG,s.n[C\l,iH[A]N?%th3`fU:&);g`O;Rr)=P.C_F\5mTsfZ=#/6N"P`eSr"5Ds2Lq(8Q[OQG(%1/U;1i?UBNlZ3h:$7G*93P=/hlh=RA.I;=3:h\g`^fHIM-;a46U2X"!no7<=$R\r5_F]<c;2(28):nMJE)L)0Br>oJfP,Q/!E1sl%4;'M"_FYotEHgf[+Ik9[5@6=%!Dl:]DU]$U%G4c,cMRmi%Ge=Ge_ZN"mE*PT/p^Z;jeVCN^+=OSl(ki<QB@qa;BY^2V3:tK>5KkA%'\JS+5.-RUH#1k9mA,VA4)&3(S[9PU-O"O9ZN9G=pp'/HDs\fTT^8n]SJ6]!OY2M8NM84Hl(m:pUj\I7SLL-%HB]\G<3S.2$AKNR%OOW?[=RBahIdP]8jSXXP;BY3g&WMkPAnlG4Y)f8TFA""#o1]h)]^$\n^87#CQLek<N8Sn^cF$OId66*9PY(I:UJtf_`2HuER2Qnk%-NuE>Urf:""N23k#I_Yla9c?)AWo"teKb.(DW$4[a$e@XRKUhEfMG;Z8Nuha4L#J=d_OP98\@$:k"nbZ,R%I$?R/"Xl`HTYX@Yf7%O(s,r6T']FDFrH\:L3J[V""]NOQ$bADe$X>omXcdC/PF'3NYg#RP:u$bX>fX!/&J,S-^-.J\-%R3>><DOgm$&:Kj^^FD87)@hrN*%B.Fq4ptWE.#^+X*)1=LY2@.=t%F/WO<+QQ-CS<Pc60h'.he5\88/`-W9ZDb\VP^j'c@gc(aMhHL9GlD#HL&D8YX*\-"ub9RX<%1e%>=*5kWGfsVQ(cs?X9eu;cg/"dCbYIH+<7HhEF1>pHsf\D6=`gc_AG6;Ea$(0hL>7fgR031=)j9EA8oYZ&;]/Fd>3^mY(]s5]!rOQ%EooYa_T-l@M[1!6cJ!:c"P0B1#kKp4dj)+Zn19,A$)#D.&=Af1W7qD_[Re\sE>M0!^XAM];t7H4)ieJQ<.\r(^p#R@kEI*bX9f!p%l(6h.cK9$UCVlGVcTJ;!G'K=X+EGSm0T]_Z;HOSJ,cqA[(nNF0dk<crin&ok#')'/3K8eM+&R5)&s7?j):tA'GB>1mgq6ua2%d\X%3>:DLGA4;)R1St4asA$J=-ukYIRE9*AmL`5U7;P)Y;TX<@M>eQN;Nec[PtWkMs97\=A$>pc_d="_9u-;KcrhbP,@K+G_ADB7+#"^%$4ImgDKrBl?/#c!<WRao?'>OY2qJo8UHX37rpb^LAXgjND:a(K!]WS%XJsDn5Cl9m+PnmL#rLl9b_#f:TpcKF(OcG\0'<8.4b>J9%d_VBG$#F`1qMnN#7UW*iRQa5!JaFfr=BjJcjAFEgYb+0'd/>DB!\O%]DP\?h(U,O;N;Wm0fVVu(!eJUD9:`S`I=""FC>oE<:S;*,%#/N3<r!#eaJ\X=;,3^Ke^pWee#0Suf:M@_D?&f!]ah_WsNWLedJ*\S6J[%c6nsXhYDG!D"$n+PBjX>XFQ\)[T"hm3-I-;cYP;'Ui%?5qWZYDkR*'o3Y/k.CcCF6&Qe5h!.XaE`nfrm\>fZ"R3[?5&S*`><n27EOhtkq#ZfT6JRrV@$lp8nKMIHd0O!=jp]]Jo0t`f:5l`%hasuM2Z98Qb^>,]_`=9iO)%.S`KM2*q/l1JB>,Lb,$RlU^>Q&p'YcOpZ&LoiAr<3ZY!%jAr#0'0k.O+6N4-YdmhGn;Vh7n.]jSQl%CIR<ti,jF\o3QB(f5ejC=6RNSs-@r6NU4=0`cg4>@a'0&1/>R`RJ300&s^*GI+r3eJ@sK5lhJbPKqM_c`Kg2'aBb[Vk%t>`VnJag%B1[D\="9LhSDdPf:Y8Eh<K(Xq\66;hL.ls=Z#dlZHU0=*8`/X/?n5\5ZspTT.2k;8'ac5Xm.DcDj>-*;W[r!JmE;k<aM85;l8%`a%6!jJsZX.dC470G\SbK/:jNhCOObk`)%peYB=8Z<i)$CRZ:fp?_Gg+,U%FKK;$C80[l]P;;]GmXKS8M`RGsaZ>%*CO8-oNL_6rll7%.1AWD054>:^kb4cF@)q0Ja<:c/IH!aOcN(['F(FNK1lW'1qfTu!dZ"H.==GFW!0K6:Osu<IW"DtPY!#nl*4WDZq`MUqm@e:FH;?l%]suLd0JFd/?:V+b8=[f2iH8B"lOPa"`$!qEk?q2D?dLDJ>SSsV[ZHV?+jTFRRNFp/%/SK5L/qG^@C(_$*O9-"W0rf=Kl.8cHV,sr%E-6)GBMfUK>M<Q%UC]um*Odo_Lcc#O(d&.V>Ug[Ugsa<5peZ*`-A=F7-FZ8H>4=@+4!Ja"]+!!*2CZQ]BV(oJKV@K#<$$bT(8OIZ%$^4*>$\LrX+PIs\UTd%p6U$7q.)]Z+]])D70p%r/%ei9Ed()'-qq99f5%q.9@8Y+H)d;]E;2BRHWeUWD.*V?-QO4"\^CXN^!h9&A%7>o#!#)bejQdRgPqjhu?A<SF"69]t0Mi.i/N?#TA4rDANQ)]s8+`=:9BR.s9lMrmYEZPYhh!gj!XpMp&#Y8$9%Yqn;,%8h7#)>Nm%q^!VS8Fk[i>u[I_+YS("5G?-_I-!4>bLZ:1F?o#cf6g-5.!iDETeMSb[J,qR@:8#WVaFmF+H?jp:t?.f$q9!X.;T^HiPjb1%_u+;%")IW8jAEF\Zm`!e*!u`!U)mW&5\.dlk*COPQb[87"HjAjV,_LU$J&`a#cq)`/g.TEJb`[r:Ds_lU(GsW0d',?-q#IfBG@"XJWN;D%Yi/l2,\@t=h&YVB@o2j;ohmL7Kup&#?hNt<`$Na@rgn9Eg?W\4nu#Y*#"%n4-&Y)49mK$M'OpXg.cS=?YcZp5!0>"cD\nc4Tt[75%#NldZ[eC3H,c=YZ:Y:^,p1JSE@:MBs:bh)H!kF>S;h2Z;:RNX8aI;=Q0Vo>T#rVosZ2cf;Frs[UJbgk&*d*1RMlW_5_"-ko8g1Q&%7T]Q[iMTkJ4<UU7aLL,!L#Cp^MP$D<Lp:\M4CD'<hW@Gu,H26PE#nDC!i0+$X^G%XVW"]WO.h]*f1,PGX*ZVtW8@G-7oEc</mC34%5lD0e>pL.cVm(.&'LJg0kghbl!(E9K)hXYIk]];Pb;k7`32a!c15""<ngA8:'LI\pqd8Cu6M\M:"QgCbM*l'W;[P%%&tDmVlf4p*%VZ=gXXl@VTm'1S++V7h932a!lSVhVhiS3t#]ljc0J\.50s/Xd)N`?M)r]k($(5mZ'4UM4p'1/*;+B,<ibHTrOhB1!#Q!m$@iU@7D%)&<GA[1X5\!o7$!X-i3\O<>G4\!ZJh+[Z<6Qi.;YhiI=V%"rra=*bQ=#^iSg"Td;fD8%BY66Q!F<SeS`*\)!DUC`4hC=#%i+YKF)%bT;HAnn)CfZGD_n+b2q9/.-MtHlHQ!M6ic,43"lC8BV!1gXdi3X6]hE66L/qARu;H.]V+2IKkoNH^a^XlC_bf%!P.01tU&??"CUk%BCNO:5#?b/0T2&LK??d@RVboX:W!gl=<I]7H!BFigHb1$?TgYJ#0VB)1RTbm%/O:dCsQE)W\^hsMTG,VCR<0cGttd`guiPO_0pI\%UbFJZ-,5IT\%Y#?l%JETqtDKe=ADIHd,hnR.9Dj<Nkq^?`Z-?$44gaUk41Cf*<NA9VS$j'gS;!,I`$0:Tc#J:%<<OdW<]hJ)_[Pp%#/(;mJ)sS\i!XEEb^l0!Kk='(kl2.n$sJBhX6X81P+tSl!*acD>#LG=.=>PX.E%S-Y>jJ&FonI2+jU#2eMTP!`4WYA4rDAk?1Om`%@:6u5r&e^g(\@0gH%J&S4TW+TJXt*>@ZglBL)QPtb:SN$$==&i$Lp8bDc'UNm[rAW6_RFt*53k[(Gb+2X#p.MId_s/o#A/O^u0S3%Wrt>AVOT1E)a(QOLHV%IWF9.S-k,0FZ:tg_016;(02+[\ZaUd5n-Ob!U+7f&E=1"Z^nNNEY,WTa$9<G.T$fNDfgAsRKn1ZKEaBXK%-KCYD?IS`(4DIKO@dgQGiF%:].R1j5FXi=N`A<%\&tU'M?\g6??PoY(^?AJ3Qn&NBl5X_G']K8$A`H$l(DUkReR;=2L\!WnFdNO(%io3r(!=KBq61;/*JZfa+Yt&d$SM3m@?#\_'pI6g]4sUVm;C)1S+MkNa^@-+aOG.p>)29o^b`FjuhB>4*W!D1]G)qpWZI^_Mo3(3B%YME[p^%14ek%7'Ug;,^k3C@h96(Hrlf\YReN4jCR0tuJjHjF^GjBaph0rTSibB]K%G3oFCakKk,H^"2+bqM)%+U7E_,J]=aQAlg/%4Y^m=_F#>e&AQ':!#<'ZB8/>"pd(^n*d7J3.$qOn$JF,%G/"a2\CiM&oq@NdS*^8S#`)Nnq#A!3H0,MGbY;\c[0,Cq0cEP3if2j8%ZINh[DRG*K]t,'5C'R[`]p%5d(RMVdVhA)4LfMsM3XjkA=,;4j6Bu)_<KB29QV_BXo\.i.ah;j:/!I)Cm'VK:`H7A!,.5dBB_ff_%FUC//fP;:d-\mZhj...)0RlO)G&a,0W<r4N`<1Qr:VH!?n+CIr'eH7_8FV'_afJT>[:@7f3RsiUl9=O;*YLTVB"L<?[V@Mt&4/on%'8atWJW.3agJoLH9k(_DZ8";n"l`67)Xd*9>'&M=(YIsR+<'\-7,@+LL:]]gm?67DLC<J&pnQe#1n7$l%QGrE6kK85W`cO#qW6o@%nH)0c+cPH8d'dBqD$LJF,cb[OoC"a?I_n^p?*pNITQb/\U5b]NNbXK/<d0Bo8o,&5o9LkifO/*W&f)E3JO+m<i*iDBrsN&#mJL"g%i_en4'LHPpPTHmk2`5QH8d&76&.H<X1:*&]Hm+Xl//[IQ8Idd,MB6ejJY\ujg0bkX'e)'IY!R%q;$G1"=h1INPgjp/;4eZI,>fBC%%>%f'=:^77KB/Il":KO.]IhQ!6CZg9;K)&YU#-0t@98:oi^0!#X7QU9LSoeQ+:s3iH?t\d">+(S4B@&dQj:<.(#neQKEWJXLj=!`%CdWf,^eTe'@*9GjA_gLT)?UiiMicj>M)1=FL#=)8,L,-^aYi61A]XlGnoF(>3(VVZS`W`p$I6dG2R<Mk"-[JC3N=0a&\^fnphZL=%kuT-Yj&C0OJqK`3fn+l&dLA`bE'mMBeCTN)Ni#_PfOZPFmWh/H2q8-&O>S2;]f0kCWss)]8oe**okad3[6`U=-J<XC%:Wen6W7`P%QorG8=`"_6Y"?NgC4kDF)Ql:JL5I!E3YcP6gSp:I1'sKC9AS2i.LqS64)>4f<e]aQ:1HU)`hGisAPC/TmJ^"1$>eC17Rt]TAg1j:%<3KY9S!a[:!Qk@^Q'f#Jd/KQko(nkU4jYe<,ZkZf1B?%'q%?_^018ip"\W@7K#t#(LkQtgW=ZjT[0B*Gd@B+TQ%gUe+@@Y3S-f?a%k)?<iVb\9fcHq=(MEAS?&V.l292$f6]J->^i+>PhkQaXBKkP/7V2?l7+L]J&?@R%;PIJ`7&BL$iL's/aRkMCgXbZ<7d+IL-S,i%N%TYBLKDY^3P^CsY%6nG[_jXcPD!%M)S'tuB_/qI-VF_QGjK%JJO&6Q8p`6cQ%XYo$:Lf%;LMH"5[qY`re!rcXGcU[sun0-;Sh](P;%g2/D`+*G^@"onNP&<B83kZ.uOkE'p#i]fQG?EDON=<;Y?'c*allGR@;86T0*r\2p^He[H!Y)lUaqoYEi:FXl;Y#+;WM,(ZL?jLV\%lj@_aG0'1^,MB9Gl@S+3%ZR=YHS"@L[4b(cE,!)?Di5c,+.\*ekZ.t*8T,P/Bd!%FKMcoH5]2G@aKCUm5g=]gR(sCu:2@ojG=BY"%:+Yc>?Pr,:na0:<P$K5mM-!:&(%T!CiU]0SS<Ve9bN5R)+Y^oeE\#()YuO.TKKsLK[p(#1(qr0+W6a>ur0;/R]JWM#9Xd>rAB1KO%@EaL&aE%80eqDpfB!pYLN/36)&t+"Z/Bp;/CrZ[ibrieqPLMe/4@Jo'qc7#ETI"c"*j1us5ZnE?b6,O'@3'W=J/Hs]&En^sa;n,a%*\Tof*\WIgW5U:m<^8:IcaEk>QNnq)[^go@*6rn'3sdM[\2rANaNFZB7=?]tqE3C+nlY+jO)LmllX+>eJWFTD_oW!jr+K5pI`W6q%7Qa.8*oL=!\V6SZprsB;P)%(h:C0+PQ4fs(O\Hk([LOZ%%U]Q+p/.ZM#<7<@Eg\jHWZcDYpDTPa$Be.*08u]n5TiU*-P(U6]fkH;%JTI4,PmXd)nggP\]r6%Y=SX@?*k\Q-o(1u;)7ulH!7HJ&R4]kJ(FCMj(Bu5t+K'(Q%Wl_4QG?6C&):")?&jR0="T^.keKc4M876T%K/[nb%r/TJDl6.B6ZGFg#4Q'S,KM24OUr1B4=WT4%j4S4OBanS(g]-<h8a9tCYX6=XP7po/hJTphmt1Kh+i;,0VGD9PU7I48RGhb%]"@X8U@WU#E4:Z/3S3t-Ii?Y=5E.T.]>#.+'9@ae_umd;Tfb0F[Tgc"/ICeZh/B+AEDPF'o^esa6$'pbI<)Y8"QO^JPet6]&;X4^%Rd+8c>\JS"56P[W:nFg(-Z5_>bqfI7[0]j=J5Lf;YQVSu=8cGLZLB8E>'R\6=EkD)<b=Lbo#lbRo'cX&H3k;UCFN;:KnhX>d]0*s%#I)6,)aWWiK?JUC#^)9YAUEi/9T)U#Go_#CUQ=^fbDV=@Se`C.V^WT&lm"[HR_pF&.W*":Zh:[V4C4C+4Ri<qBl1GF6bJlKb/O*:%PTML#DpU?pMspJ?ceD[/`Z[Mc3k"eb36cnNC4REI>b)QfH*Y(h/ZuVe,L("`e11om1;2a88pOY%Q08X&7@lg)E<POj5._7<b>H0+%LMA@-9H-U?mEt+LZ-oJt.l%c6J0^!]8>Wd^bio@O8S8MW^%ejDZ0k,X6aom7M=fdQY;C!AaAAT4fG<_j"cq.hekr%kZ(dfGpj6E9%i!`A'ZaujO+\76t[gbe[T"rbIs8O5IE(X]%LGUlnF_UL--;FB_cHA&u3>=>:UDNi-&7V`gqmtb7kUfnOoG1+=]g+>`-QOMcY7g4c%>#JnC4imMsKC%P*NF&.;e0a>C8Zc:-/9J*;EX])`An*6Y"O8%C<6Tn%Sl0E%I_m)["IJe!27Ns1nreM_a`,YCH9:#'HI9i*"sU`G%]E<dW0+^^'8u!2]>?d@:@gU)>BMd>4a:<&FQ5[FiCm(Z?H3Zit?C\ip9WU'sH(M<-JOV:A^NT<;g,G*\K)3pZ`@0NZn!]0,Rn#-s%],3RZc:XiJ")Rql4R/@B[@u!k)^?eMC%MJ]f$C9."G_<[ASq8?L\:!Kg"brEHUTiLmDpVf:J;*VZ3ak$Htm<s!j1j@'\W[!FkSSi%ThY#C]8Sqq=H&(*AtmeK:!d:YF)u".#SY)cD(=PlVIBgJ!gni\(tq[5`q\aX[$`eCk*gNnfPF&0EHQJbA,a<CkRNiP;IWh7c.<Qa%Ytb%P@[m/&*Dm[/`)$"^DgFr6UF9@RDW9^eXU>PT@c3#N1VG`N5Q/skb;Iq]2;SAOF3/rdYt`S1S%QZZgB;rST4;[N9\W((K$Yiq%*SD,tD#Pi-fR!*(8Qm_H40XPT3+Xmt^]r;'>@/SYM7\.H:jm]QaXU>Bbu?>h$#IaPcbQDc);#WsJIU>,oJ/JGH_fq)$#IC*PTq=r%RsFH-Rm@GGeZ0h(RnS\$;&;k;416<GqH!u?k2f.NThS5R>L"XUD(;:<-D7%4`5,0e(u0YPXll=m%A'Ze*SoZD)qm18`p>+->OBdY%=&@uAAu5f;3=64/41`6Z)#h)-a#7F/7Q5lTQ,4Bo<5d2/`Z3gQ[l`S[GSB7c>>\Ya%5-?%#t'VBqP%aY#=di;^mVZiDrmpq]5GFb%#:Wf0:(D4Iq%>!hM;"o6Z3kPE"g%gN:t9js32%q!ZCq>iJn0Cq=:&pRV>t8U*G5U:K2nFCJ.kXj?3`-hL[V5@^ET2a$[kH'K*pcf%_AQhKm+>lc?bD>:ia#G:+Po71_C:r0)<$OF>ZHG5[da_-SB3e^$?-?<!D[1u'iHKr)>8j,eTHOMb<*HqTo2(j8$OFg#<8AZ];C%'%EC!HL#<4[:XsLs\nq'G&b97UcdPqe;\G=Xo!LP7h-jP_661AVmjkVlr5+,apBH.:!r(q4QQ@NAmp[rDDQtr0(k#!DaFZ0d5agYtt%gc,k8?<9hR2um9t?6Z=W'u4Yg$)q\_^4e2DmMZ)EQqu,3o/i8<O6da7%Y;=Sq%U#GI=0ntH6f3Pf8B'rjXb`_5k&h8H6k5*Xd[p!%J3.e;Sq.@;Sq2d(B-<2=h(f!,Y+#^H1(`*;1_a-uibmMJKZsL:QLo(O/H]uEe2AsMa_/jM"#2%]Rcoc_J6X=1M%-iBbd`J!XA4r7%0ea^CH=#8Z5Q\#:?5,GG[\&77#%@d3^NZUJ+eEfS75$pM8QVbE0`Vppk8f!#B+H+:G;A(-:/)Jc]BX%s(^L2T2]liRW/,d)2Wgk;%I+-&oN0L9,Fj#!X5b-Brl5H$F8Ahc[C=\OEd<F1Bk2uL$.&t%)G7B)@ku>=,#%DHi/f:6s+QcJ7C=b^E]CBVSppS>,pi+rd,qTH3%Q?Ir>1Ym!(_A=OD\^tJ.;-9Ku-nL`:$@ukp$\q(<68,Nd9s)9F,\6OrJ<FsrG2PABH%S1-VnUWQ;`Z>Y;(\4<rIP+&+Z.IS^Nu&N%g%(uma9ZQK7J'"]?>6p459Y8X\&*&$']QX]3-sj(5!+(>&i'SL.1Lk+$$#*&-mHeV3Rr*Oe<`J#[0-81VP7Bj`K[-r(";8?#\N5d%pR6b#5jPhaDkB.LU2"!5KKr:4=633`o(__<i;j=^lgiuU<KQi#/6J<,a%ggXK[HERCj:5C6$!UmoO/]`@53C5WIsFfocp80!5Y6<%f>GJ6lj5BR."Q8__D5<%-R@SP!&e4%o`"b<mY'I>YEs2sZuSCb<R[KM>US4laIJ@aVo<iebR$RbHF@f&WL4HgmV,E%6Ib$B[lJ``%V%J>=+ZQ(I<6L^AoMAV+_O1t:cfS%/4In,'#p]K.;EhF'^5pG)M!GUmFgj5q4OV+^:]3k0XiI).)*+DNiVP<G6:^j0N!Y>80B,p;%a/L*c(_boacKA:!-,]rqD&6VS#]AtTIMg16N0YN-q%AjH<\[G)>Y8CM/8/s#Bf-bAK'T3k%=AJuFBVin+_M7]'Ak;5,m:Q47U,+M%#l9a"Lp.W2k70NP+L=GLT$mf9BqfS7^7-bLHBcG-"u'r-rHc+NN+"csaeY]CA-+i@$,KC02I!nKUpVgV,n;]\LFdOU93?aVp6Qq"%Wphm9/MnclDg>,*;aR#$<,%4&.UZN)jGS@M0UZ"q46gg2H!Z]bC&aGfio>=K&@rK`[$NNY9Z6=f1sLJ!Lg18$:Yic+%#g`#GI_3n%]A+!icGM;BPWM,?CTko\F7niS-g16iW5nml@e$LgY*M0-RB=f?g_&$Z(8"k#W/(g&'k>3-^<+[?XEXlB'6h7p$pFS.lQ'u2lW)&_%/$VOQarP9?[_*SIl=a3[Q4t]^[0*kkhU^O/%UGtf&u]=lq%As-7mP<'KK:I/"3k(9P4)&O@mLQWlRAkT$P$,sCK*C\rH>SYA%UI"%0ipHr]8k[ci6<rHk,[U(^m6$=Q90[mos,k(H"po3\Ke9?E/,X[*AIi_;nE4b,YPh:4"BC@7W;Mbom=pENcdu[Du[[nWS]i:iO4JH%mKdX?IR?HY@+&nY3s)sQm,f;agun@.49b!j5jYOopiEoM[8cVIfWKEtN:i2gG.Tm%*H4Hnq:U2]mF;#uoo?PL-/U0&3s)t"1qDHT%fV'X<eiR?:/la?&aTr6e]aS38#j`E"IFMnpae28Mj/)sIlQ*f(<i/jXNo9<4UF`Hqs0/(<lj.2nmJ$Xa5\Wap,0-HhTaV6Y*LAiI%A).M:LXUNf,Ribt_l(M4%-<sKqjK61oUL[P-H&9&A2gbE#skq?@4@8[/f&;H*X<@e,`LjN\Y^%-9jHDmXZ+9>E9hO2nfu*)FDV9!%35og,Vo!^6+[=>:gE<eEi36NCE$^]+H3sBkV&^_6LcsC)8'!crr!qjKWY2FMi<tbg@DQJE#UYW0SRGbMP)_T/:@iWOD1`"B6qeH"%^U>8G1]ZhW,WbY!>r(i(CUMNN`jdn8TO"Ip_c0"l1*d!jfU]"gCB<Eqk>ZD_O5'!!D"*`/csjmIc<tY:dl]GYGD4J.Y^A2X$1[sf%Tu`B.kOgf55XhEn'eYVuA4]<=[NiqqOfs0RQb,?cA5Gun69H.1c*oaRlTSj9A#]rc7YZT+GuJQ&&BG$o9"1>U/Hq4ViJ-D_Lp%\r%6,ANl5B^aXD,u=77,tWn+YI76mu=pbdBmR\2aWJN:p("B3:ALJ4j40de>GnS1*a^h3E4_J9-6*Q%c&lbHm-rXcbs?`Li9k@FU\+W%S3U/Hkd#l`P,NMiQQL/,q:_T,h!i(%EXrnR?Uq*mBj$E<U_L0ob)HsbI^jS0nhF64X3i'XPRUl/7gNqTo?1!l&p1?&gf2:bG(c[O%Bqn'>]0P/(!`Qk>d\e,E[s,djhMq"<hTJ$`\.QU>E',d4_Sil%iVr1e,Q.Ohs!QV.5J+>LLl;9b2o<@t&\@$m(^U"\0=_Z!1*4h)%j[L(hq@TFZ*QVm4>!`KWf"Rmui?ofpZ">*,/3"d[Iiq,N92U->g,c#*e8nmGBKt)fO^?cMK,GiHLu_p3&I'qe<#oL=L_En]I"N;F%+P7R/).=Zdd4mC$`3nRWYSgjl<!nc2+GNEZ.^C8:36F97O-.8GS-[;T9..UF\'e$)YJ8/8Y[H]`pqjm1#_3XYOfHIWY^EaH#g;JS%M%I"'V1SKTH'oG8&.ogj0rt6#heu1VkRQ:4rrL<h*brCGjQOBM*8G1I=Nt,PKRkiKG1ha,TQ+(upV7b2(uJ6$pRZ:k<eLWL/&Hm0%a94a&>eYQo:8(7&LK9'fcZJr?"Ekn#,GiXm\R8VRQ>s/Ei<te`+f<mDjXs[Jnj/Kj-88-a+_>XUfm$]3,_T\sfOLb),U*@A_E^XJ%[2!*m#d&t!@:8['OqhCJP(]YHi=!//7JO`-7>NVFnc1%(r&uu/lpQYnSFVD$Q5e0B,@WS)&V32h/<PE=+0.IHQEX"k<=k/+gd[e&%Ptm!W!f#3;?q#mLjH/RPX9cR*QE'NLHhp-.QG$ZTb?cmEZ3Pu[lB3VYJ0k?4AD)O1]gK]J:"%HDh4nKl#[;2LP[t)CgYj8ud=GON%>[J+K#@_\6W>da4n5p1[Y5"/0HQ_pMr1$a>J^)*\(Jn]C/5"LX:BgI-meQbjZRU;e.HPna!fX>tk9:(0p<U_2Y:N],"+rXGWj2km%_SQ#\5aVZ-auFrdkq>Qgmm3<=Z\90iEU0n82Q_fA?1pMfg'fUuZ3*Cr`KfPP_!ZI_?$7@Bd/*D,(QuAr"\W.p(P^ENO<u2(kctG6%4d,?4/it2D(dFRhGo\Y]6*F!*ACbR"p;!-S[nsL@6mbj\AWN`*b'6AQqh7VK1PY[h(XG#g<S8l*;0LeH4Z7QB"nDts-&tPoG223&%;X2F]_%%mWf"l1e5))3uJZZYXpJJBY*&f8),=t'6VD2;e]l7Io(C9>1QSdB&P?aRC"\VS`(H2)9pLX04h>pk[k'E2$#BjcfF>Wt8%\jTGZ*TrD-5eSZOb?OIY3K&kgLYM9r!_N?>6B.`G,R&c20blSBOE=\=8.)HCqg'?,F\=ZI5Z3@jZs571O;&O)'Ga4H6s@8:8-6*J%9->[fHj-2-'8U4U+cu=_r2a`d2/?M8"Hn9dqnn+'8e9D+-H/Ua,QY4j('KeNfI7R;8V'^H?je4`7V)u9,R)WN/G_)P:b/;WegffV%f_tTapG8*SZU\?/HX?t9o<[$j4Y.6uI3dV!_nn;^LHYn%^k2rhT,sM!8-75[9-FV/\$jB=!kHXOORtjbG#L(F,S`iW8N_^5-m[b.%]@?kVOG""SKjh>B#j5J-Ot]e"'UM-a?kU1'8$V7)$;%FV8IA#mgU""k:e1Y^[:j$G8%,A],K8!joRf=?&6l;,,@CMUG:NG[^h>&A%I3^r4V_*;+)1Uu\>JbuDjfAfC`O?ZG$d4qrM^c5)J7T2<r7.aNgdN;6OOc9AdROB4N1u@I84TGJooWR:Vp*.Y+/rYr7fm^7W?#2Y%F%*Q%&hki@%E;buX0D5YJ=P3(^D2mm"\KjC89;<=n7,S>M`t$thX__h*]:VUP!0LJ3!8WM:[cg$2#2[i;1-.Fqbdg$beB^RXcLta%7S^r&1aELr538Yq2W@!52m!H<i3g8uA4Y>rW&(g$ik(oa=gqt9>;NIgSVn#dm6.DCg?7S4Zo&7bZjoeI9<ls+0G_bf[;A/B=GN]7%pE0?nU`Em[A4MGo>5#"UkU(b^*D2mDN\I]L=XL`GXI_fI$/LrK?$gj*G!"oPUL\?r42Mh.G.2?N_G1JW$"7hu]QR6V42MdX42MfR%i&N%_VQLbZKL!2MhPYj_B.aje5dXUWd3-_TSEEB:3VM7rUO&#W36=En#\;&C6#M@C.8.u8g^&JdOsbl$+V6Ib?Kjobb\K@."UskJ%],tpDQuc#qac-kaTco11+`>i9%g,/A:^cQOIZtcpDK371o;G.3A:/_`?3DH>STH*p'^e"4\.Jqn/PZX3_LeR&i<t8W@JM8(&b>+L%-^#KYLLI`c"hrs-"f!)LL@iknj%dkD28:,"BpMD8KXg?gTf4jr#Ve9L?<g$EA,].NVF%]poC,iO,5f1%E;>>bX@868)c3cPZ%X0V%4ZpJfWUO4XS%\n,9Ab79G&mm)AY%pWapfJAr`"%BQ:B%&<i_qV_b69qJb4%%UiAY->1:Vk[ncuWQOpJ`S-J1\XG2q41_'dV)QY\(%!4$o*$2=lMK?-r"]\l6E4;eC^PGe*JUG.UI](7f*humZ'%lY+t>J_-L1f)T`A9j<W!BoLaDTUGoW!LZiD.02h0+a#fD<$/^5#[@-%K>mNL(-T[_!J,(+;E>$_l[!1eaUKNg:nROfj;_"#15F:)ng>uZ"6-Z-+Wlt_`XC_;Cm]KWEOa]N=0)LKVR"W:"%H'p+'StX'^!N@%?=#I0Zt(2-&`j3_ec?W\Z_.,7qWio,$kHZX9N[#)M6Dp+`7N#!p^0X'<s3-LTO=JWfU8qY\n%h/q(fEA(E9U)4X7Mq#%X8u]S6L/%SKTalZ\/h6HVG<^lV[DUA/t2Io8nW+aa:l&<TuO,]qE&XN4gAX7TREf=Q[:`8n7-COS9*]L\pdU`d5?uAL_sY8>R_a`Om!d.^#gi%MO$W5Z?;%=GJ:L\dkr61]gAge9WKi/]gDM<gG%d'i41Im1ZlB*/?*C@.s0U%15F)#"_-(fk.N[Yo3NBjH*<)[mhJCBG+3c\d$h;j%\FNr,h6JFuiX:'S8dI6C't2lm*`q>/8p9pK6K0NFmW8lc?B?:&KF*s%jZ=janipPEnPq;U^>a%$<m4"p.jSo#0QuRdJiL3-=Ioo<%ShnH%`I(O+b)*=K)0mOG0[XdO:6>=0\[W^,J#9qh_YPT(#RMf?,u%o^^?RP!k%eHgo2RM=WFqP5RJI7>RZXdh]j66%,2WX$^>b),%+c4\b"Ittjo:7=tn%uO;XYb1pkoSBuDM/2IZ"#K*l+A3!_E_Xh,WES*r-s#)FqEOMQVC$@F\pfR:'giC+=)AQ2o<@pD3,]F+IDO/%#X9tqDM0YKXgIjIbq'/#iR_s1QSKf(3Si!X7mA<FHYH-'6-$C\c7dEJ"&l>%*/0DiXpsQtDklW!nCJam7Yji!I2Z^Npk@aM_"X7+%(j3I0aGqt"Q9#eJlj.V1Z?erp/1u:kn3q4s(p-FKYro&>T($Ihs7'2CS7[F/R50$i1VuDCGIT'u^CZeF^+bodigUe9bD["RP4>3h%#]U?4&A/9gP2kW;5;l`Ua,ICRMm-,WK(1F=3&#=,T?<+sgk%@-HsncTHsp.QJQOWF]!6ep)]$ST0JGToBh!o6-r\;&DuO>VhK1!\%m:8(<Ns]mZa(]M;CFVMSksgJU4;H_hN=^m^ShMCjJ@l-gFa`PL(Z>`(bmk#gi:8)QPGLU(]En?2.E"K,/!/3p89?bClGP-@6$X(%%Q8Y:8*i6hNAqZZZe%[hh`J4gfn-A6a'n?ggs!,KYrtk*UpjjZR#R!1JT%e^Uf;M#^o+SE9Gmlg0G=cr@`o"APGnAX:Frq-G%P)6W%fL'32dW^=n(^QBc0:<=TK%:`meDo'A\kS"cTA-Tl3`LDH\.8b*s'W[kJFJ7Y&qPi_@5nf&P3-OtBaN!V(G#iC\57mV6QdrLU]k17%0',i7n85oU3"#e-P#qX8JIPiNj\b'\U2];A9><^i#6UGi:3Q+KlnE@%KiT9?pZ5$I_&"Hu6%&Y&BOQob)dHZ5b6j1)3Gg#(27J(l%h:J_u2:B)h)%^8[/F>`75R>S\>Sn%G<;3q65kt;;i^/+86%DL/&d]L-gP"<.#X;`Zi7jm[M1glU6pek[8-lJX6[8bZ&uJi:CEao9%&:@9@8-m`R:H53Wi1d?bP7n7a:-$r'W8SCT,%9?mS`r7'-uh(D:Q\-Q@&:^%i6OW)BQL@>_AqtTg3J?2DCP,!49DV-m1t:96C^>f%r@*d=-a*:_dg3/\[gu6_a4aAjId2/?PBbI9\#6P<o?*5_P6d94kkl9]#bakq>k12o+V6$LS4%nWMeWYo+p;q%]TGU\J<L6X/+X"c%OMA\V&n.(54H]uDZJh#KP6dkfiIlcG#W$f=S4&0Kk+Fem!%f.dXIVc#_/^#/`q*6NJ2r9s@TpksI!`H3\aH.'E0d6gIg+Q6YQCLI%!C1i?cUAGfG>2Se`;r,ZcJ^r(LhdKJe06cOjiCHR3UL);W[h$V>TH1X1`5<#7jtdLMRi-YD3<@uMn/6j=sDSKlRr[]*T]F$a@HP(%H4L&rDUlXb-ZX75Qt;p/L`TMAM$($M/Z]2.fQm_PK.k0^ZAmO`YX#b,(bWkMHP"7pMI54m4=T_UY^465b6nXilF=34>J[rK@sW^J%Hk=36kM'Q%kbK2H,Q+).#g6*$N[%15r)m4r1"FDJCR8eMWg/:XKj-'4(]-7KR3.pP3c4=OHl+&#`WBTF_,beGe:t!G;1(NJ^[fkV%_DP<$HS7d9AhOQ.I]m\$cfat2QV&9D7eR5FB5LG\I;R_a0JGn)jf%Ch^Zu[Fqi7#8MqLt_&-6bIO_7s]]XEE+"GUES*2VV+Sir<j%_E>$\L@\Z`,ObO'2BM3.dkJA&QRDBrO3:-Jo5#q%)%ZG?r_[:!*fenUNYOnnbehC<*>o@lU6KU8%sDX$W/%'VKD',V:6\3TP/`,-%%(]70Ep$^C3'Yqr>$Hu!=**=_M!LU($A+#b6^ZkQk+BqOJT^/Ao-e@q?EtU\A3@/B&plaFjTI048K_`:%.\7$A3K]S?p,@JFHmoa%.-:2IK2A*"Y]Y5Ef:f.j?^8<C[s[?d*ql/Vf@N'bR-qI2:@6Q#2:Ck4mb,>!RaE97nCZDXbQS%catLSYYQFA:X:QU'8/#Z`!F6ao%nSu1n`od?-#Kl/$G;KlE[,jHliCdB3m]^1$0;XFkD)6_)Q:n*:+^.d5.63$FROq%/m[G/sTIFq':spMKl^$ioLn'$<DF<MJpd4%(%pqe`ZnP+c[1bL6#KrVL$j9[5nKS!!To$DED,YfHpoM/F\"a(>M&^ktZ&5DGKCqn7/7ia:3<dm<)FWm]&h/:c$dgtp72JT!P0\oh/%^:6+!6G;4\IGUGCH(qPrF:E>hm]1tL_!*F^4PV)r5VIKYeLg+He]6hOo<;41g?R8V4sRPe<Q(m7NU=tr`Rn2rCLUMaTrefb`eoW.%<X7Kqm4tr6YM3nfhVcf[<Z<<$n<P@-F+^r>ha27rQ;XK#K3'dGk!CrcOEL@pR%'WJErj@O^:9$Ulj!IS`Eh!]X+RgniYV@>"ZB>7%A7$@9hE<p`Wsb`X#@2b#JN5+"^:HRI=+emF;A&Bp2O8c6)ff:+:-m,Fm&Q&nlpBK/#8n0I`Ls=CC)"(4%O9NR,NZAF&#N1(*7_YZ%SntI.:QjJt2HFEo_:Vd)aSfkT$Y6e]aHpNf4*Uh4YqD..3"LE=:a=q:XFiOFDCGAHiotX%_0b$5?R[e5?ob8_G74A.j\.a[I%)oD%M@d,E?Yr[uaL8[A132?pD0:CmRRM%n$PB2sW[ulh.ZuS7Z!A:$R+pm-;:(6(3rGG0NUEeSD!B6OWt+]"DN@0!,*5_\4a5H8qNO3U%='ZrNQR4bRb#;L-ppjmKc]CX;D#J@P&0pOXX[@eb\luO0L"5s5X.dD%I6V/:XY.36*thp,*XLtk>VC;HpMJSSM$Kb<h@e432bS]8%_V0QO.>[j0Xu2[HDqf4&B(A]#%-je*SUmFS#klPT[7=s:K"c;!W<V(-@.I`OZ?Y:8Oa:EO-m(u$OHa2s+,HP9`/Rd3CFH,'&sul^%GmcBM&]'\GM8D76R&i=50gV7D76V9iK!?j40ME"e=&BJ:5a"i@%kKuG#JMmj#6GdFa9Mc,,gIn85l=dt%g8ljY#9g17oW*hGTa0M%YuIBWigdH%+HTOi,>o&j1msNs7T0SSlgjfmA;Q,bTB_!C/-L$E`oKl2M[+h]1TfC.Qq<GC#Ot'B@P#QHk[TrYJ>=1k]#bMW=9iuF%?EG4ba?!&A2FXBZa]rXn!b$S6[0'clZi^[_mD/9edLP@,8X*$)JXD+geXD5;5g7AR'p-W^bF>)7?FJH_\#Rm-%`BS%En&YM`7/JK%^4LMN-4eY#U`G7?[Ns?ln\B($$s0%!l/<ABL4^H22B5Ea=BA609JO-eM@2MrYgq3@&A?;C*_+YnU>,KT0$"7`]C=nW0s,QZW0-H?%8+#fhT1eVB@[Ep%4YHHG%mRue:Y65^A#.cYCrrg`X`.t75G[HE^VL^1^VPMu1L%]V2[CZT=$q9@a=Z?UKm!JK$h><?[iZ->$jV>7%HaV7?0JGD"p=lY8__-i]gAtC=-0A,;anFXfp&>&Vh&pUnGo,WFp<Yba!p^Y(Gj@u.Js8&_d8AL^4O^.hj"@r0+SY,O3=/A@5MVUo%ngu9un3dTHg!X>q8?2P$/DUM;(p]Dl3+;#/#bXbQ?Z(M+R)^Zg6Q`r,Oo`$X%)F5c&@i75,@F6;WGgs+Xij4rK.bE^DQ71taeKmk%]+^#Skl3'iVYV#lF>q;S_/0`?;6SMh)_=drh$+6dk&b'S)^KDs3_XK3,b<KFrZbPR1pudm)[,_&XT`Tpjdab9&;s8lJE9u4*$b5A%_kpV)lDuU?c=&Or5JP0X%Zc$,qLtW&B"tHk@-1`j]0TiVU[oS#;MmWQWs0"ooY,JAZ5Y(>:Pr,U)[%q-ojNlm,%VN;Q?Im6%!I7g%;R3TN?4FHZgMW,9L%go2#'oVJ"-MI`&=QRph]OUBJ+=Ps=L%Tp:4aT76=tK>%0F.<aY$(t;_GgNh4%cjD@iU;P$cXT0Q&b],dt,=%pK(L7kmH-6dl`gC8&<W<")PQlhJJqi#[ZA]N>Q!njRZZ)gWG`_CrAhY2DF4mLQQ&@2!#!N=M._4*$@Hu*<]:N+>PcCVQp9/jJWWa%ZM;0DC_n$2O)<l*7h2'K.01VPEe)MMiGWsXi6o9pb)lc.J6[Fa8fK':EdStc9UaPId#eE?4S<\REo8<C`YJV%_3!048qn<F2u<Zm%OCM3Sqe\NR^$L_lZtrY(K2PtgI![UK-'KcF%WDF8XFjL*rG4bLLh.;H*B@FC)(i=hV6o;+a&;d==`WF7\ce0_31/Ji4'4hj"ADt?%#Ki236dVW%M-"$mA_6edQ5m)B/k_3@-;0@8#,u1<T<.Ad99)9i!o;=g"1-sP;B#s]+KdmDH>b.C6IWc,mq6skFn.nl;r8(m:gRIL%0]C,</Sg"dB09;^n>l9NDhO]%KGJ.rjN6r/THXU$G!*1PX_6rskb)e[:h![q*$@*L$*i;l,\*euV'QAgd'>USUY*_&99.9)h3K$+%<\$!87h,O.UuC7QnNu<X;(t"Ni61`S*M-d*IBdlu%L8nPjPXl8aqc!Vppa\bX-af\]u>ELEWhA6K:j8+\&:,ba8rm/,?6sQ/G,:,%r6\&F8uj:!Ee*K*A:(:&k,)Cp*B@G^*'"@lNZ9\\9085>$?Z^jYi^;&NZ>j3(6U+i(TTi-NZ=Mof[Grbf^1fD[<T[$K8%oHVe>r4%pbD*^k:oR@ac?NpZhr?Ndr]QUZu!U?!sGin$X"1r7M"TQ/`/DGG[WAg^j"UT4bOs`Y'>r3i.;Hlcg01u$#Ym)^>;AV)&+k5T@rdW%8Z0an"#J$1_`n$jH*f&BZ@$r4\CM9d1p8m%V^tqbn<35g>u'rh_G5BhU<fM#3/YrE*p6fB9n@DU(UB)2FJ2oa-5GR\XYuFs%Go?3%lH;SPJk1OgKo%1,>N8Hs]_LnfGnu8+iiK#?.,888@XD)Hpu>OQX^@-WY:BRdN]M!f!?L#6W@&cRlL9E%FP7iDNT5!BG&VJaLs!a'%DBW=Or>DeK;YV4u]KeRZ'&pmTCW\t/L_nRXe+1qB.>be''&kKF$Lnm*6G+EnT%7O"lf<q6O[Al=q1?^Kl4W)&4]_.4Qs2OG7l4:C%&oC)A&E;dogbj,5Tdt*ic[<I%R<VKa)S?f*HkUnXZc5,cZr5>uKX\+q=AK60?k-c[nq%kI>o6Ts+AMr1Jesek7j5\VA1DT'%Y'M[%%W=7k'"fl6P)Iu+&Y]C]:Vh4DPi1Y[.RA_/&+Y$XI0'^]>i)\>Yr+pqd>dQ15PH%>:#Pm_+8G?l]T^[E1f$,h]`h[S]Y#uq[<m1a%h<)sfj?]VJ;Ddq@CA*O%YRTRXb1J&G'&-)Q6tU6K$$hq\.^g3=#M7U?\.Xn.bu":(`\p2A68c1hV"0f'B%YupK:@I'FAjlJ2hR)G%41Z<(K@T1_#1QleLKK[#D@q*h(#>f7BHQ<,Y8uDG*T%mmPeT2fR3KH5i$LKGdY-lD<E&[p7Q4i#lRTOa\HU>AF'.2,]NL$2eb,k.%bF!mNgO>Y=\@HgR`98O-UuQRRnlQX[d7qTuf>gXAG@&\AmAQ^H2trq;L(4W0#.5RHE"bEAh*L`$M5QWX_9M.]doh#%2eARnE)WtL%D@39!B!S@3Jt!<G4-_@?E's$9'&1Y/:b-8u]2"No9j4BYUI_]EZ&SS.-+8Z]74"iHgI/4+(#!K>O\P1P,n6E-9u.Os$sQS>A2A%N%;Bd&=7V6<i8r1>iG"@k`M__Y21UT@1<b'JdD/KYSf$NR9dAp`Gqp27O8YOB519rX!JIP<+>cQ9N@]ruFCkadlG$m,7\%23OP:E5J%UGlJ%.gN<gFiQ?c+.I6Z32cMS'%]BIQm\Q:`[oFSf.?%%G$M@sQ<&!"5r,TG4)pa09u.Oq"<o:D`\l1"J&O:gp7RF]iq0g'mYfsi%``\::et:fg/$)l_k3S1@D/6bBCR-'SE`?qC'\Fs`@$eZ@m1#9]RjBqB*S;q3j\&u[YRG?67'q,FZg@RN$YsF#BKMU)n$M\13GPSb%Tt&,?ko//A-b@lP`\m:N-qr-$q=88lk/p8DPgV#m`4,'_.KKA+UUCL4S]kg5-RkWWZZnQ8"m-u9S*hVRTZT@Xm8ee2cCQ'p*#0ao%q.^WMp?oNLXTASBCLV)p!9(WC<e6.<<FB<O'aWCZq.^WEIJBnG!ZtsqVhglF:`-D[4<EN*rNGt%*b<I#53bFjHfVTM:4ZgA*B#'C%agi?_PHe%/mRZfC;d]^>;kRUd'\M9nmM(IqG!=!<!c`;KOMY=T3%)>!YR;S@HZWWO]`Knl3).Omnk4&-5g0PKPBO.F4SRj\nesKe%Q`c(]@uKH6?@fX]](dNr\M\^;AnE^&=!6XuLQ9%L.E.Bc!&6"mdMK][8S:-r+aGCr"[4^dZVcG(542Q8"idmX*:+B<LcYbuk"Yr)%PC3HQc,n9FnEq!HZb#Nea"I0TqIA>E!)T(cmnNo-bPjQfPce57VZ=f,:;Nu0+=>*A[8S1p%nd)o'So?4mT6=%f/89sLFtTnm4qeJ%F;+jpl$PQ'^+e6V]fo)U_#gIV@):nZ#fL:CfF3@mGojLso$TT=A@l(N5t85V*t/:gUWbijg.[.;kSQFCqSZ0Up%4#(Q[XWadO<_o%]2*P?Xq(+WRmD'Aou`ND+S]3>D]3Hs0j)]X5BR=_=mE:1`$nqoR\p?l>`P#(n/3JR<UXpB.jo\p#X<O16&1Mq##(B0+;gN8D:\F]%J(OLS5'`5Fo<K5:"l/Q1faIp\m)'&ZW52WM]!-Rj4\=`j=KjQ7R[Bkb_<<W[6M[C)4^81W3g[kg9ElXr^q_-g#0C6(V@G52\3Q)N%@nsI$lF4sp*\3ZfP1IkW_da5[%S<1-1ALh4HKe:3Y2#kq+?3)Vh@+EB"Lb\/_dsD#/W3T<$j*,>?+LGrqW(>lS3/4uER;c0Ei5*6%Z5EeU1WqWl)!'=nq;ljb?<Y4;gMBp]hs+(l(i^Q_%c;/&7HV";-4di?09L^pN!@$-eRi`a^W:("(nEm&1s"R9m6+?7+>^<hPYQk@%Jpb)GM%*PCoPgR"'I2bJ?<2[qkb[Zb*gO-0VStfI;mV1Z#!m,foY,n.+Lk.K=CC@.D;t$;CCoj0WQM!K#(^cT/@.WieZ_&75DJrY%mSCDiT>L:$RerCWc#rBa?Z?%_Sb18FUA34l.6'SC!g5k360"j$"K62CD'M@GIEl/[9rcM'!7&NS<NSXQP=USlI]YJ^QN.f].>]ej%MgaoDk@(WR`oV#Z(&:[Ee0DCRfH[Z;?,Tnm2TS5:Aj=2^hT0`Z=(9SsjIM`uVok1X4CC]u&C9D@5pRmkqV"HUmSA8%-&To[fWE#h%=6s\W*6r[Uj@-aJN)[,C)#S?"TVOOA6DQR8Gm8c-9sD'Agp)m!m9%DfS2ia8\@A,IJEd;%Nmd%5d/0@k@=I-N,sRK$*Dn-6rS!=8%>.1mXkm1fK>F1J4'60i.`#._E`$30ZFMt@7`Jtu'R#e)g*U/BXCiVirL(S@`o;s5Xdp,:RX/[mbTOUS:iXBosf=;:-O:rgE7bXWK%]Os_uI`E#`kj13C]*T><Lf%>:)!-@U<0Wo(NgTrI%Wn3cmQeh4G+`>T%Whi:d7+7"ipN,mF.ab^-<4X^3p%(86O#U23PE3gck5_&%jM,9!".`96KYa'ZR6/o<@ZG9K\a@PC0S_`aoXd>#_H7Lug[W,.r+S+O%X1SnrU"8g!&@[pm"i5k]5AYUR+(r*K,oNuP&SpNT#_Cb%Chs><:5m#L3Hq@uUO$=E)XUo;T$r"U#^/lVcg5%0+IDXU*:0&%_:cYb5W"0,`/&lK8teTmF#ln`B[p-Tj%@;13K"X=#coI[VdN#Z%ml:Kd_2_=7)=3D4i)lm6lCUj'"U@oA0r3,D_*JcT%*=(JLkl\(QI]b0"/EBsZ06UI>tN^X-)eOX-u`8@U<kk+Sa"kk7XeumWl%GD%Fl]gsa:e`DV/Ps\QXp@)":%eTg%-YrT+InRDbQUP5TU4_65Be"VMiH_K6RInK5X_O?/jkG<#iiW20g(93J_"a(_S\20ac7'9VqO8%U=P*>BP@sj&8;UqQo#%FgZ+N2W0?TUSSHD8(>i6;%i(HC:KJg*B8d\)WuMDK]7+L;WJma4-lW&mS;5[90ZeWI7Eg@P?b7]%d"8Q4%k<#0>-*Z,AeS]Lk'8,pA.&c7r6ZE\!a=\.!insj6ia?)ZH@u,Qa\"p=&5V!H1B@AMb^lY&+6a6/&"8G1N!B,m=IQW28F)^jK;^PK%Q''g[>GVa)*"2t'_cSt!3/F9/Ec"']&BJoSPAlI>,0dq+PNX.X`1nD2#Ouk(lg*s/Y+cP(CC]?(g@?,lZ>?&]Y$5rYrH'P&'fJ'5%Q^(+i*5hhNBA&+V3sOu7*!AOsD+P5O&4m?QQm;oVF&b6VXIHkG@&gc?ob)7eQ/WpAnm"f_!WSCn'#ie!KL[O=5=oi+UZjX1MM(-N%iRBFj`aB)n:?Iur5$+O7'aM#9hWq(?DGqkih,UbHH@r<:;lG@SFb)OL"L<Hr6D&RVT/VUV\_pjafm9`Y>B$g$NZhj@>;U;/>B"Og%]*/F(hs]Hui8BAVrmBi)Ju@O7@%uYEi*[\Oe8<[9CI)Gp=aV[7_8'=9Lkp6TI3SkCg=`Pd(simg$_&uZ9W2bl&1L&EhI'`\8Q;%!%dS!5On:c[gm=ir'('rSEWAfVp_\KEK"p7dg88f'cK[8M$K6V8Z3GuMr]GnQnlO=%BM&V9XU=5]_+M<_[Uh;3W%7kO/(q>eMr&g@4%*.7]RP(O"*P(PEhG5gtWg/'1-@WIh[=c.iZ3Yekp]k2,Yb:I%YW5"`oKE]`dML%$1I=G`VJ8Qs5>-7g!/?^X+]uZr3^`N(+k&]=m%-,J$H!8c;mYhC4m@@D.qed%piE`W)"s.qQ>8EpU1@O!Z-hhMH<o;BcX88pq]_18t=+8d\[$;Jb"'ILus[*%=S*EF&*5uJT=<%ClA%PKG"4^UbT4lmf_gnNJg+h@pi$NkQ2FjOdPYoe(YLVUoaK6./!e<iY5"<MMAT?U1C+i!Y1W+@a@d!^m5I*N_(_^DfaP`F&Z^2a6:d%7(EW]7_F4X#P,K=TeoTO<K_f_*<ppP`'c2>6-T10nh:Um`5b4D!/V,5rX]h'"ok$Z9uXMh@*,g*@,b>p@]ft@"9Vf$;&@hFakT8r%_Z[),Wc\Y<\[CKi*CXf1*%>Y>TU[s&@Ff+PftfBg\ohDAfl>j5[L.Tb'HS(<.u8'`djJ;U8@OVY?k*<:X.u0<osZX(Xco1#1'$$R%kV"^I3iNClLPTggPK;I.[n/:MnS=qg3Jl;HWo<V7>E/Ss+Bo)UO-nnE[16N4Aib]28bF<Sghu!-nQSmW1)'i3,"_:)!>/PpTY-,4%,[0)%nuSGpr'4d0Q@oTnO+DD$&u8[nS.t_<;u)7$&-o<O;$Mqm2Tn-0MlMT_5[F\%.S@R8B0AhF%Q<bl-;%$TpMC\a:K[1h^G,/Y%F.dDfF%\[gEFcVfZ<U%dTNH?&Wnu\3[315n_!9t1Nd4Lc>4F[eUQNbY_^lS&YB`'4[4E^Sjf,([N[CLnf)uo;qLKs?q?rcu*@+OK%[7#(99Pc8Soctb;d5os3oRDctNT\Q:s2&djIU:7X+OZqBX0n6]8?E[]L]2.(*3XulUHomoi7e#JQdL5m)r6AkR0Y5QD.LbA'Gtn;%c%HePelm_g%oUj-g7JJNKB8P$83j9?_aXSnr3:)ia_>&uW/uOsjG5E'#[EjZNA9_6VE*3nK`n3@c3;K#aD_Yg^2W$ACmnn?o*%SU%j?q=MM8Gq2EBH<;+1jjVHG$*4?C6d_TrhPR_+!qtfQb^%?@u"Vpqab!"D!n;AuY+>k(R=(=<Q(`'21q^]T&!Y$1m,=E",$c5`39&%*Wf))Zo//$,,>;R&JC^$4>S*H_NR2N7"b[o7G]AMZQf5KEu^nJbS)TUUqjofQ)uZM3gpB>odP_(l+i>$G$n]E!g7=r0HgJ=l%_AN%5b<I564,!W,I"$Mn0I>NXL_(63MJjWPEQ^J(j2jl*`HoCH,,L)N(f,4YWVPBLXs!HrJu4no?\R6WSqJA4N"6jr?<R6:e4biUIr`n%eM+"7iY1j@fiSk1*LMYELkrdM8U[,cim!,ZbX/08o)qr:lRS_.-gbIW+n>4nPQ`6VFMURh\qcV,;S@pK%NFGAe\-Zp5PC?.BQa0-%VH\l^.E8nUE<_?mka6^(@@IM$7>3]qUm)Z(9U+M!(MkK*Qg>!+=[?nFMi_6@JdhiD*9kG%5oePS9GRa^<Gd,($Qba[ShL6Ys/?\:%@msY33H_;T(g,4n,69>,m9e"!4ciV[4>82mi_IbXG0j$Gh]!>XA>C/?[Bu\r@Bb;]k;mq'-1fHn@<OGA*N^Sj/VV#+R+8b_"rft@%2/O-GboqD)-AB8P,)*iL7[#ioW],[L+RVBE_V'isY"4;/`^\;GU;R0(R($\0&p!Lt(>-i3o(5I^&2V32g!U_uCsb6L)M:;&(l$$Q%&8Q/U@h@J\jdpWLBUZ=*6Y!?OVT\hjAA[G=9Yp+OGF+.8hGHsBlH?!C?sk2_&_oteP0t0UjF5<i8WCOjU+AGB1^7Gf4f0?U`o)ED%`o%5W`o(ha'q4XTI\dp^5n?J:56`b6ag#^s1O:/YlmOU0^6>R'[UQ4;PJeTXoc_Lc&qcPX?Gn!AM"uZY[3g_r:./25WA=6o^#:FT%H`NHIM$"aM52-;+bBbZL*`s&c+4mAL^k&=A^^FYn.2YcWs#`ca:CBd,TIDSAq=;mb'l.\U5;%5t.W\h*Rc4;V<'HV,E3%t'^_RT:%28a<^WWao/D5:dgN_R5fW<3-7nh<TT+L#`p32lu[]>S%dFTC4PIK6;Ki"=D6.(<Hoc*1'Zi0Fn;.7MY(:tM6DHYO\QEjk7r%tm&1%!;-q8U\"Qgj#1ED=s2B=Jj)FB%(3Il#7+"hM!JgY8b1>C^&dI#*8!!"#5Oq,`_mm$Y]7_d`;eF8<^Ji+qd>BXO9a]rhHY@L&($Kb%a795o(^][_YF4'FOp;7\2O*8'd(rWc-HQ@;rk@mP"keR>f'W1bfQMUYb\jUL]HY_i'o5HMmIgnROZj!*?<KsnWsrTkA['qV'm8b0%EiIiN!qGdlriC+,&,(=/jH_o3j["W-Y:,[.<`t^>/#Wqql[d4E2&sn*4C#_$6*pM?/A5@UT[EDb_<Vj.%V9rA7q8c)gcd17lNN.[%bBh(n"_NY>cZ@KDlg$Mn4k:E4>355#mhM'u;l>")^4P&icfK+n5tYG;$6<J]BsTU%T!,qIXV^VW"_'&f]"U).I:!rJcE@nVpFFnV%QB"(HIKe(d(b4]M5XhsZ3!b%f:B"W^^OiI<pMkJn5[S/X:jB`AQhus7Q/4/jO4ihC+3TN&T(@2np^5d4Y7m]*X$;P@DXUZjgtQ7R%moKq)BCbUuYS[`G>/=aTf&>lA*.$rlG,m4$)06++/&`S1]jJVEZB?4*i<2m$/\PNS7(;o+A)$m'@POjtgn^#U]jH>d!jK=EnU"Qu%F*PIZ,N@<_pD8(DhVPF<nfW<`dZ1-k##50o$RmiU5hggJC@EiUEek.4:rk8$L*'LtX2S=AB!@u]]lE;t#o.%<Q0'NZ(SYH2iZos/%(mo[\Or4C3GsG@+]F`3o^*"b.`6Bt"Z%2?T%q#E0kmY"_OXTH&ikZXJ`.A*IBff?E1Pe6AWDJQm$E^frP[?ZJY1(0nIuq_oqH/Lt%Af\hW8%!8!c;r?3<eZ[U+<IW,acE/,]FEBk,\;[RDPt"0qMM.g[^p>2;e7W_D/#t)(g)*'TJ@?TpE:?XrYHcD_&!<@5p4(^OZ:k2%]pi=%<#NV1[%RTnUE*#pRZn].RnUjX-o6ZC0HDuJ2pe&="OU(JI1/Hb%)+F;%)+D&bX+?qEAY6h+[*#?>;Chu%B87mk?eX;\sL5q%)c)`(pf#ep_n'lh]a!A_f?F23.5QcWY-RO>1Pj_&c$C9l-R,6M@#qI+'H2@-&/k[,A..9poCJ8X=uq9QMC*f[O7gDLb"W4p(r*$h%8S>8ePZBkLBsj/M+D*slY78gWiOBFjm(lG=bG`.InO>qBq8-5e(\aN?IK]eIqb,=&]W\%kri5h<Yn;efXLG6?A84TBC(@aHF"i\1%oP5'[$uEtXVQP:,H9b:K^e2W:_4D(!7HaB\YIHY-7%/`]7%/`5QC<FZN(MVdA/[gV&BHE2]9q.^R$J"K%L0/>Ct('HV*FO0X8YiF%QisjJ=K2ONJq;]+)GJ[I@+NrQ<oi[`<bE9*jSc&=#],?NT*5or):sh$n1k;cVs<1JPNj9.76NZ1%\aITSW'th\kM<mK]A]bVcKnn%b*7XRk\3)C8p1bEBI]$8l%3oR00j^Mo,cr=51ijFA*D5DF;u6s"VADb[K2b^DRVr!gT,9Y1q"Q,D/&6:m"3$iV#GNe%*?k4Va=3)%=Pf+&A[k4kE%3,[b1Wdq:S`^EVfJJZ$@sde<BRob4`?t0!(3qbqXQ('XaQK5A=l21<3m>EHjUE4[n[3V$LpY3"k[q\RgtD2VdRnj%q[0(TVW.OI-j7jdpFL>8'P23L_D(ZJiDKY?8*>#:.0M_d%gmD-"SKdPI^2He+@gkE;$b)QE:>9GJ3=5Y4!maie+QFNHPD(+_e3>d%'S:/=%Ks?WK)NUT"1o7:VBjfj&237'.pWKLr%P$E@<\#c$IPO]%C&];\300J.K'*Tl(m-eFF^OUe8.1M*?I9sZ@mb2T\<YkR^i%:%Mp18&aUll?$maps)2Sg@lB71GNlT8*%`O%9i7&SPUd#@@.R&#b%Yb-=7IrqG!cp&3/Fg18?Wc/,V)elm$\`[teR`;.WX])tNX0*<%>bXW"))_oE9"/>T%)bI`bu^HN/`2$1O<k,jP/iOCn;J%dJ_]hk96$%hAGKT6*c!9a5]I?+9@L-A1(qJ_]31mrm(/g<qojk9phVM)%`>l!4CQHjV"ZdJ\'-'1Dp(/.s4+7r](Sr,cpA5YiQk$I$$+p&53>`T3N<S9a#g-?R%l^9OZ\@s(NTgb8RN<$CU/Kcn+]:%A@5L^(%48&0WJ#t0nOj@R?^jKt!$1<#lRY-/o4"qWHWI*fV(rU^uR*6.,dB]9`54jEeWu[Qgi4+n1ButY54*&Ht\U/[[0_ZQLpTV=W#?rl=%gtheLO;n[&;'ne]T_L.3%jVA^@@]q^ah\b*&Wa8HE(UJWNMXPq,l7\;M`<R!)i.m4G9Nn&U_MDC7%iU+;KM>]6$!SrZ6PYni64<6%e/ZE%Ve6_4&B#;`hF=FM"u?(T0,W<sastS(\&aMs,R4EKSnCY*#1i1EAKa+U"f.oKqV)+7jPUDsjBs)Z1^_@@j7dc;:d!g@:d4T:%Ga%;*kkd3tl)ascbB4X_J&Vq_J8MV>*mO8iW76B)[RXIV3`lWu7,/nF(l5POIFpUnM%76Rg.\j@,6g\b!b'>M9@^i_)?b>/a>ab'%#t;CB:`X'WC.I:R)Ek#A4[]OM$QP8%7i<!fB5T#.d'ZX3FA0[,c3%*$Xit7h@Xg4C,tOnJc<.7k`pY06pd-5epqg-$)U'hOH,6ba%"<l$loMCASne&7B"IW$f"]8l,(*]g5!C<1bn)f9nKX>2Kkbn:7kBUNp"$4cb*0FnNHj830mh3t'`VR>f(LQM":)j69`$f9!iTsi_%g',#T<M$*Em6DXfIAk*)4e/J/9Y5"Z]^rc2kZVUK1=Iie>+j0J3t]*u2muM+-cShABG/K^6)#BqN"oK<U0Z::j*PN9ZjW\QSEB>o%F`7$=/g(BYGe/fjIi"OBlnt]Jnb1r0J:*@b)>*HbL3m?(IL;AM#D7E\S!*[%5M90f^9d1!AFBWYb&4s6cK>cD]'dkp7[@=&O2LT^%Z\uqeXp<T-JJ?.Y]/i(eTD:C2Bm(G9Rb`DqVqK%a4+"eXG2OV80aqc>@&,cGlHjklqqGh.Zcg_<7SR$=:9lsq,3RT)FNh$"0uFLF%(<(:0Yg*=?[*tW"p:Ome*Crm-@&Ij:#N#9!;f:Qb?T5UCLrXa=\)Eie#F6%'m]?/dYaf6H>IHQ6+r7H/>gD7Wb+0IhG(Da_kW$I4%30*@M@Z"G6[dTVnG9T%O'&+"]NB+rfa<f.W<h-TUPau8"R'o@ofHj*hF+t\PS#kDG'K`t"]V/$(M`t8A8>lXMndjI\_:[9+GGF-8%.%ZQqe*XBIM(l&'G*iOkh,;uqaLV$KF<oK^QO-Up8KZ#FNQTDK]5?m4e>f<h'9J&8&H;X*o'+n+qW_O!q&!U!OlhH,Z*Dna=E&U2%/IM^\5gFe_c%nTGN]OGnJ3P_!SpS['pd2n@G[TSCA0fl>HmOt\<SYaC11oK%UYO9B8^Bi%V6#u-;l/F1A5S8$[AY;q$:/K/<NLD=%&>Xk=b-/o1a?ue[RYl=&jDlH"i![`P:N:906P-^Ji\qI)+L"M7')JQEfe4hf@?FTF9K%YK?A<MI>E.N6c4(+H`[N#.*%;#A<E%B_%WKIdua>0\24nhJJ:_\MsVKu0@O%t!ULELAEbhB,WcEXtk*.k8R&Ut-jIq*)Z791[c0N)X7B<*YoX(_]F1JFbMAAL`:*7Zlt>k$qS%2/*2#LhHo%9Jh@l_"(]?(+F].eB+Es`)BCphLJ(W-ZLlGJ09qb6MpeSRdI"2.H^[D6%%iib\n[;bS.*="IUs"O4/2O1$P,4gW1Q5%H)9KrZUd)ta:3$g>&FltA%.*nCNK>KOpSB)p5uFPapl4^:N\t8+kB:lOQk@p,Oe5#@>PfD`N[ktP"[1E"hBlM=&X%!)>$kbET^o]%hiQV9PN)n?>C7G^Nc/Ci@%L[I6Y&BB)gifl)a(?hAim6b<4GTU;3foZ;X\%N<QbgQC17K>`W-PXGsH6Y'ff!!(m5h+K)R(e%Bd2_%aBMaHFZYns'UR,R'5nCNbNqN%@?MU`=(Z2BMVeZ6B]U`BlF!7M^60=5MiKdr(t_Yd5]SQ?I"&g'`EXrL7lCmb<bH+V'&chqck8lu%T+.XTi!I5$a^;ZmJ.iJs@Hn:'ZX,5;8E+J<O$O:u+;QnthB7./((ZB;boRpq6ntG<JP/sleMWE6??WZ?ADeRiLsN>n!Jl>[ph6"=%M+X!#m.+Tp_85/9\)?0Fm9.+W$4aA#9V`pF*+WW]kZfAmaI%Nj%g3,gkZ`So+<O1=8U?$)*]$qS(]W0'L7DSKjVR[*-hW>X"HGWg%PeW(:"J5LEoF'.'p>'fq:33P:2[I=4Qsa\dRdm549FH0!5aJepWAhn+NRid'^'(_16#H*Vp'fe[WXZZrW"&=STJA8)><DpQ-<k<u%(cO%G%J%V0SuE'aI(N>sUaO*\J[^IVR$/[66,p.kYD:aQ+BCKENCYsDYsAj.p8Cq0UcED#Q.-!MZ'r0FPm'D@A7od]YLZQE7?.IC%71PR5O_.=F*2q7(&n,8N7+V'K71N?FMT5pY*2m0pgjkg.CPL<fj$4J-fh80^!JJmUdc5Qqdc5R\0['U^-B."`HZ'Wp$$*8Ad^$>J%g4uRa!B@GEn89[B5sYtp-/S)ke]/paEd[<4FI8YLTcs^oYIY^2*;Bh[Fcr=AHJL-r'')=>jWcN?C9M/2B^MrSZ&$(*?71TiCfNC0%-6tTR&1G,68TLILE9J8.X@Oq4N=(gg#Ek5i022$j71?e+jC#s'%LuCt5V;@JEhjfhAgsK8X[-J1j35tG8oe<=QaS:0Hag_$96.Zl%\g0:BQm=[u(__`.WKtoA<0&M,l]gH9ln0%SL]9NEj1.uYD$'moqgiuW;eSq.Ub!cc%_c8W1#_A(9kqW=`B[,("At0q6<+L^dLDEj%`s[ML#ETY8=IP]l<_-4#IY$L4mi%U'g:QXEk:4);U)Y_DQF`bn'f.R:P[deODG^nfN+V2IkN7F1=.N;N?AN,P%SXGR\@YPod,i&a%V?Fo]EOj=[#[Iq#90(;]Qt=cR3)8k+lfc_GP4d$)"nT/-H+++&.EoVC3o(f[$Rg$6;K%:D#E#$LD2lCP^i\XG3\q*FL]%MR\H@sH%a+:'>`s\Z,C`k#mN]I2\_b$-rO;G4%68(f[Wan,5<FAO(%b,,;JU'VJFN_QP"?5&6="d\dnjci/gT@o/#LXk"H/pB:/-kLgA6M6a%",2T6Go_ef:/nK$D-=.a02/Yk\<d[j;!#Li28,Utf=Le;EXAlUZ(A)-K3-08!$MYmb&VJ#B_+JZa+@i)OIRf(rP`cBW'Ks+,Bh33%9+"u@5AE&aX\,N@>J!5NGaLP\R-_`RJtpk+iBelq72ZVId?9/!F\,U<#73&!QZSI1/=AI/Omp(=<R"=egPLP!^h"k_7qIG(!bXW(%`C!fHQ$(ID,'.RNmj@^tUX=<;A6<acNHW":#^Fa:;k1a!*=j%Qa%57:VfiRWGQFX_S(^F%9*Dmm0$1_`J/@m39+9o)i'ffo1pQ\L%b/>9<&b$iD'(?s0#^CnoRAFp_JG`Unm<-%Lp!IaZr4=MC[?*0+66JI$[@3r!$pIY\n)=MC;cjTZfmgH`&'UnEP]:%0&'X01Pci;O%rd[r5X"3)=]_45IG>T",/[55a8CXAme7seKg60>;Aa$^i*!H?r&KNFSjm/p/CMBFhQ3=iRN5:uKGRPbs0-<J97KgAO:q;?`/WL0F%:-J+8!mmGiAeXG"\6%)H!kBU$$>SD\as</c!AD%9jLX$%**lPI]Gq^5@M80>NSX0MXMaN(<$]K%c\pK"[X#=CR'o^uLMa@k&"0lN%ZKb<@2G820Vera[$qT,b.<?Yl)nSC2lR(2CWbn'Qc*Xuh=uQ\Lf$/cn\s^^/g"+DG@G#;MCjVV/iVLe#=Ya132Lj/^EAGno.]K1S%gAKa>gU'!?@aeqo$t`^%MmW_DBsU5-G+(=)b887,=o/2l*HRY#pt/[.Y]lNtW3X+d=Yah<=tf0s1i;A5P@WB@CI=t5PK71d*10Eh%8b2o![[H:P5AV:j\>O0W&\Y2)7GDE0_=;*k/2&T`D1[l!5'u!Aa$`_Xk.oER3AB,Ecc7MO<nBtZN`X@mfsV3:Q#s';gT:?^bA(0A%:m/93;YoV18j^%%gUNFCY\f]mLbru"Nf(ob3=qZ<OPeunSu0b`ag>2CM;>&RPRtuGfdKp=>;d&`3"-[`h3`u&_oni+F0nQ-G*t6E%7G?4rRG2tOAM_$?V.F]jC"XbtQ;+BcV.J[8mV1@qn/,=t;Uo#"\7PE`ER&nNFN[^GfHRe%o2qL[0P[*q]T&B#?H4m;>jZeT231)S%gT#P-McNm'JYZ<;Cp.\Z2$YJ/k#!0s=uD@rpFpBShe]UFWX2-9*KOa]KHFFdi3[6NUF0?9M_E;CS2=?f[2&+Gec^a'nS7/A'?utc%Y]/?u):s&3d]>aZX2S=OejLg,[<.>NRM3#1'DJfU<d%2P?KB9*Lm@(,Iig1i+0CtphQgp%8U];Mc^(]1>nbDFK`6##]Jc+X=K.T:%h['C9?!aONI"D!r,[?]j&63!6VhBV00!jhrJLG]N^&h46U23"nDj<"1b*EiCX((<k-O`B`DprJ`@3@%VmAFL3!/f\2R4rS(:)MWN%&dI>b1\L1q%8]T3NKUH"9\gC0%"N<TPqWdBr\(f!G"SC)fE(:+*5,t$!%RebD&Frde;ipLJLEj4qN3J9JXnK6@S@WklIJ]IJ@]lO%-Odr>n^3m]J;R^S/C@a"[pJNVJX?\oI3o@j_4R+DR4o0PpSFE7&6!/o^P'9;'rp:f(`9-r3t_b;U"RER!O](NgG!&DU^Jsl#%AW;%YClpQ1K_HedUa;[G/=7S,#6r[cIHq^%#hK_;H`$d*'SG\^aRd&GJ_.P3+63):)MW-El(*>?;YOS#m2msD)<tU+?1q=fjHR#oKfkb%F?([\s/?aThPsKYL.MO6:)Sku+b9]l%)hf&o1U$X8[db3A`2$@__Quo$'perge]I/Z?5?57/4VE%sM>PdD:g<k2:t>3J__%99(oF%W!$Qa5=l?j!7^QS?+!QZmft^9<(s/F:2-SVfc8==G4`&V4N\n\-"``"U?("*G*ehFEU6Y=%\a?2U863WCs_A=J5LA!m2fKY;idU?%7[esS#'YYU#P%"QghIWI!K#H/>(Tm<CZ'Eef/erO7V%1O&fa=(jci;uaZ`P7CI\TI*MXO#.1lcAK0[*J8T>;a^rnLOr3i&lUEg'T%,UE[+m$L"[41W,C-om+CnuecA8.M@Zq)L;;;5A(UEG5pR;3`%(bsB!!GPK5Ofd<`VRY++S;03@4g3"94#>t!5Cm@s?r:Fj>paK*X%5",]Rf$otq,1/\ac8Xca]^1oHjreE2VNck33=*jgJW0"c23a/rgtJKg1F7=$c>W<1fecZi:]7%\>6jhlg\+J^gU,-e>E,0od4QS'%0VmnT$5/sFh!$@oAE&_.#=%t4-C[!o,0`D_Q]o.f!tS%M895?mN/T-\jrhfDXhb=g6+j'*NQ;o)6#:i/7b#g[LL@Mn4,uShfPmEP%:!GuR4#(J!bsBi7>uJ&+>[u8='t'at+A032L8!ZN=tM%f68Jmk]&iC6j<0?fFki8C+Ns%$BW;kTV&b=YN4l'4o!gZ'MMG@ET-ffe%*OVj63Cs_K.b6)k5utQ,#?&J*E$EI_?\q?pOE[uOP6t@^A1#Da4OYP:4V=QYpM6B(c$FB$(W5"_?EMe=LZ/EVaB;Yi\opj>30G9:%j"tVcCd<T)T;V.%=-[%F6geX.`ce^6KUQV<3SH3kD1hELUV(13pRsRHg\eS7W`luqd>fUe/%6/l<HD+p-]l0)!&EDeZi#Y>fPtB#%>pq07b@jED>a(f0d13*kHYn9N(!-%fi=3GW:U^gY5eL7fMemMrD3t?bW0=h.PB=`Q*\(WXGXQbagL6P+F\e&b0T()Xe>t@&2X)a%%>m&`]W9s7)`\,eB&b1\JV4s_H,9H$846!NM*V%dL,9A7oOtFb27j(aH5"@`p(MS^cj:R2XO:6EQF*`7Ua<TR)Q7IJ/%s5[:7O2SX%B'tc$M)i3\'s)9OD9O/anL8*%Wk@`t?u>o'r.Z6`#j`EePR@k@;kK1,O$M-+TpS>Xdmm'L49EV\W\6H_7DJf,TcNV^+N?K^BC4oD%MLh%0[,W0X2$Fd-mKfK@B=q_:hEZ8",HtBB,mHK+PGUc)&]trOWj%P77s(n$U=lP'kDCD?JO*/5XTKVq=U&15O/UQDoiPG4J$GT]%nq]&]erI,q5G)%-%\g>j^(60V0iTU#;B/(NLHTu\*"8WH;3m)l/?Mlb$&X?`Xh;&p_C._gV,N8J37o@RrDTIbADqMU.U`k2LDR5.%W_.1@8BGMWIR9R>]J8X[!pS,sKAI`"XjUCF.M.LH[?;$QLLmNF=&X&LAZKu:88o-2eDu7Ki#i5THE\)'N)CIGU*Veo66nO8?kOGI%0oqNi+\n>73n8P/XM@[a;rs@DLcQ"_;<p8<K^VQVT!MF@\<c3jd;P<[CcRYISiKhd7K'Hs;o-`\`2V&ECPaOo-.-tF.QbV=H%2cg%Q-5D<K<.L:i;3^VC[eh`eHYhb%[r+*+<J/I;ZPsRQiY1lH$Q^dqNBZ'IL'W,0;j%+8Agm2K;`$mcFrU>A]e#JKYpX1&t>:e)oTO+%A33;@X(djKi!Y[si.4I70Tbp!5\goq2Us&H0(6B:,>#@?I(._fUN(Yge)CjAC(M%d8Y6g-3!Qj-0nImu#LXK5U;riohcZ5s+9p+T%8r*qj&;^i;R)B2KVd+^S1jRhCSn`oU^i_nmg)u0V]oHd8`RKs$h!I\#Xm3@46pOT9r^aF_FSaha9\Zq%qNU;A2:Yj+2@/Z[IVL0?%9'HfQ3l[V7K.P$K7g\'fh&.UPm5nAEPT0P56i>-h#%:cpPd'6R)e9A\\ZtT.[cI_f[9IP<oDSZrjTaU'K-`jSNsRC&cL`2S:_9jZ%b/V01Yo2lZ%q*RL?`9EQ]3S.B6n:SQJM=g\>,E.n!a9<h.:LdD0Mf/JV2dJf)jgBd`oYAhK7mkTBJl8^>[mE@&;FC!823!WBLth#%QA_)$>@oUWa6Pq_*2^R4*.`<2TdL2:$;qI.fuWXGP\7#K6*7$-aVIkl".;mUjWF)@krQBrih<+'3KUgG8fN6eUkl0k>c9n9*<kn;%ARIZmdUctQn\0O4G&ck6ZH2>m?Y2!)U3&2T7V,bng]A)&e_o,Cf3M&$i@J?IS.r'r]8;Vbb=GlnU5=)h1A#X)N^+NC+r'3T]Zb(G%nM27r(e?U;?]^JbJ?^qS#PN.ld:ET8@Ua^YLHt([70*M_"+]4-Bo%HN^bFFbB3<Uu),l77).8N*57lW\,UK[,AGj+P`)(^7`l>,]%70Jr2l>Z3g@NEf^l1[<:5>F9;4gD;IR!W1Q\&=sZ\IgL]_ePh=Y_RK:^W(6[%h.A1Wu)g-!IS#DWr8?n"(D*a?@&;i.52Cc7G!3n%4HO>n=sGs0"&FZ+`I`P]c/`GD\NK^<5-X@%,G7MSodDfdGk7b`*mhpepT)pSTKL#f/7A(/Bbj2f]Sh%H0#-hfs3HT_=cOiX+(!Ub%!A#4Q9^0EpG^dHn\+me&g(t8VpaP4EnBbIU2O#0a&g2Uoi[0^3T2g@%7rA+`8-@dm3FC;;WJ7mpN_Z.*0M(r5ogi?EMq[NKY]:Vf%%\4;gJOl0t$<kKO[p"[W5)TON97M160l76UEm)uk)hj@:n]eIX&&$(7=4(%?^,E2kEDOr9(@PJiM+kLJJ,eVaNFslPC1?*'Ymg'&%H#i'X`:TuTmk9d*SI8_J+G6)6\h:7'nsRFp'q*"*f.@d4Kdtq8r-"?bi62Gq89bb]33W9"qsq3Lp@KSk_!Ss,d<46sn@O]^`q[6r%qeZb6K_\\Y)_+P,>ec/RV"mY-_0dVA%_fDMbb269.>s+_+V2QLXVpPnep4>?+;(X":Il`%`X@D4*-W;F?hkN`I[65hBpDrm>*esI%PtO'MD_(.J=rCZs+&`H[-4s?kX.^2@.$e1lh\VK1S#A7?<JVBbn[$+,2:Ms,RcBC7H/8H,NM3KfLhK$B2;m&H3N^?CTBh]s$,HX)%'Lb82J[Mmm5>MF&8arEtX_aZLjdC(Ta<0b8hqo:=^ocX25>S+iP.jDl(e:(CVk1(';+YF_Q_6O<:>C+k9V)?>)XfTd(FH=!<e'_O%$%1CPMg_r6dCa3JA?%`Y_Ek%SaN9'uB#)H:\2)MJDM3(&\n9V&**^'QfM\+,aF]DD>?;k_-p]0aH(Il$)A=4H$Y\An@R>m9n/RY)%k;o?An320-mur`FG`h$AhsY1OW;)ro0N'e/1SR8lcFWk!4DPr2kIEEKo/:eBK)iGM)-a8%it<]5R,5!&NiF^p<Ns31U4Z6%]<D'5%b;iXq0]i`Ne+A*OD"Bu$1%NFT8KmHtM%0#K'@X?r@u(3b&>jRY5"$N!b+OP2!g,CY,S`OM;%06KY%02AZ#a6hI3hYN5qZeX?(sV?%,O/<=(r;c!Z$FikK=(J[Nn/d[pk9[$B`E29fH`^!3)"c7J;uX+P(;g5fMhVEPq(?nb]t=:lTGSb[:h-`"j_r_f@d"hcTMl1F*1Vp%dB>g4KPqI@k0I0j2iP%\?S#:9?PJN&lf"OSKkV-KjuU4qi"O+J\k*uJ5";L:*6&X^@43$"l3KQb&Q[lg7_ZYLT'8"e&@2cknQMtg%JiF\+e7$_8_.<]$9fs==*OFS19=kXC+hWd2eBpfdi&@3kfRug]G#K!'QX.<8\\VC4QJNGNeh71!9jBXjRpjG!:=R]@+1(nho'YJM%Q#ofqU[O[pYmX"sYS>J0&=HBVm=3c:lt95V@g/VIAr.ck).tnR7lQYu?@_8"?W_/NXe(HAg955F6Mg6C6/fKh%VR$b+N*0U?KA&Z%3JV'-)j-i;:[;[?c(1=q>21hJa(NscOaN)pmkpR1=e!FOF)(")2YVM[okmAchEGccdhR7P*/t=ADsj=8)R7fSR/G8I7lqbT^`--;%ds]:;(qd#smc/beKrqS1@jf$\5,2cGDZlt=?C0=(*Z=C+L[TG@@0sm.FNqH.T#_aWg=;C@4TR\AIG'rRpr6!:%P3X1=r"6ADN(I@%i$SRA'(j]'cb]<`TC7iJn?W&W&aC?STQRC"#6t,;hM:^'5@"7hBO_7BnQ(Pp"]sWH&/0I>hebLqdE4W83*XWj;aB#5W#*I1g0.2u%'MZuE)I1<cl=S/jJJ<:Qlbldo:4kXU?VoOEP74dKJA0F;TT\.4nb'aCP6D(7s4g<Q!9C8,A""[:5S=O^?qmck:0Vs>f2B[Kg,Tfs%Xt\QiQ1TZRAJ[ECO@rqERFj`c9,:/;3YrkP-!OL;`Zo$9`s%>`+FVrB^[@q![E1T5B5f!PN.3!AYL7QM[G,:&+1%:`K`;jR0-=ot%_,1Dqa%#.g"0)7X@O++#Mg?`-ZtsLlJGnDOFmAYRO<(6qos/N!5]U()/2Y>XS5mXb$Y55e)o0ENV+k0I'SIq-+Cdk&A1:A0Z$uYa%]-pGr$g_gNgpL\Q.`6E"oZF5**E"s0cMWogB<qFT46pb*8&li6+r47,,L7[*5I#u`,/,>>Ot%G"]+";)nLi"L.61eDAZO3.7iq=U%fF"dq!Ne"s],ZeIK9Iu/cW;HJ\X&TN7[fg%+i+%*f*;Wb#7t4#FRg]3%.05N4c@hZ>[EYGJ#-.k2jIgRFZm$901Mu)_lrd5j\C>E%[^t`<h1j]ga@>WGeQG=]\&QL#3glJ[j>oGY;h&nVF-oPc^*e#0KaS7uks-<#f9)aAo:anr#EK=Hq3PF*jThodo?#Tg&%?NuAsL<a%lK"D(e^*0]iu[E9ZX1;uo'fgO[YA3AY$/U5H\nilT+_p8DAON29FH*DYGdXH#J]ud*FW>ap[]=epX(:W[,YW1f%G?N3YIY3c>C-a%*Zq9&ig_ij!"4*<c$^Ah4sWn]=d(uOBA*Z"Zd^2.4;[+&/MPp6Am?0U0Sk+ga60Si$F-W?*O`Qe9qJEUbG4\@VVZ,m)IH.\:VO5f%I,B`%f-NdO&@?D7:EF)Y&5#\CH=rbKNqq[VU-*.$$)fDsa^J\2\`Ua,31##=Y.-k5b/X?5DcJ(<o*o)5eRca(e9>kAm]$g8qCsI=%7KiZ^IhaaN+r@'?gKZ6#IWSb>p!GZ4U;23Ve9@5e8"ZfpC*M+:\"DG*R@+`-V=h,);Z.6YE&XsNcBTt[;aO$Q93#3-YuuIFZa^Ph%`4_:LMj0Hp(7DMemb-u$<0iESfd6j'S`K.+8iPV1Z+*nRf;dX'X#(n^>TVZS'Q);c,.K1B;J@WGm;&5];AAjSQmF$;$ba9`WBhP$%DGp]#YjZ<^\H/egl=#mDhHb%nWTQg':cRt`8l)O0jrU?m>dkk$GEiJq$*<dClUih'-p@m2qT&";A>@aPa<cUC6Ce6?fV1WXLDgNU%LmjW0PbIg#$3S`pO5/&99REct(PVlOHf]kSQR*^fBN^:>-6JI#.7->Q:*A3A:-R=^mc9#Hp\WQ;50uXlc9_4bXK!BUO[Su6JN7NP%qef+C-6PJn47\6`Kp<GnMbLT>AhT@AJedr&_SX?Lg"`ZG?Uu&8W!//);,74]%\MU(9TgtQ/pg:amoIc26`"_n>a?#V^\1o:AWP10%J["\`Z-<!s2A.AeVKnaM.0BX^,l^9SK]h&u!U.aG?Zbd]QUIpK$?sR`gg+430A"kN!s=Bk6W3$&I8'.H&V4fhE3I.i2bCe-V3s[r%9'(gsqgg0FoS>kH:!m>cq=Y1XnsUNp!K=+!H"FWP`>ER8Y3[?s.gIh3kl):>"NLM^AL3@)SaS>.6V[c&r9]i1*Bj!.#tf]$2-%fs%33ej=&KV;?W_2)4AQ(]@Vp9?>djn`07g1S'?Q<FYJOUsi`"S_8A.RZ!<*f1;`-a-%7KW?"#HpU@s2&n5TpK$V5klAlZ\\iIl%%lO%Nma0H0j31fO00oB.->EmWofN17Nrdr+d_iMgjAp8j2W5L=^@<hHlK+#%/b[#V%F:V;F3U0gCY=-*s@*TaT*)V(-aK%hc5tG/5[6S%e-N%Y!?`VqM2P\I4B^+%M?sBI]Yk8jblaoeR62U:*-(:D9c<d^M.&:h'_AVFM26KLf#;ZU(BPtV3[q,#55laqqUL!FLe.'L("j9s%s)gsNXB:$+7b";7f@O!RZqtW!#:]n\->fH9<(<MQW>e4C*hPLYmirI#SGfrTdkN$ZVe&lX*J#rSF'8)r6>CJf0C,H&e1C_I0r&t"%FA981i>@=s+>R6"_2d9ciuBQ`2jt".OcUk9-@*KR#SU^RL+8*92_`2`Brj\[Fbt6Sj2DX&s*a[T3tZ(M>J<J<>8<-kE`'KP`O]4D%ZVho?#X;@eSaKOPGK2B5j'\fg[3Y!rI>P:&$"=Jf]\#go+\baQ,4G[*3an.`=h#bM/ONr@bj-]G`D/.EWAI_BA:oT6m\)\=WfV.+%9OCj_4[lbmiAnWNa;$j/,sG`WrPm+o`gu:9:a+CVlq^pDo!(;k8_Ost$@)`I*-6cu.dp>o][mE]n2`&%'U:*7rA!:WICp/NcaaB$%qgMutqHWL`%P6te)]Olk`'Y(YP=.M^.RM"qbD7XPCB$-3?1H4,>hBTk6dOQ[qa.494*OURmLPKc((dumpIGSKc<VRJ@Z3Bm#=3N>%)2BE5qV@;dH;*s]cqX*DLce^hop>r7i&hiI39ZACs/,NZ8#NMO*:$P.fiC9;\`?P^f9+Z2(56?c@!tJA,=EIV706t4?k;1oE,-^q%UAt0TF2<CsrJT?V(B*[?4oE@6^37<]RtM)qmXTj3JtG,4[2<7gJ`5k*me,98!t2uLg]PGgK?BJ7"2g=$=c8Sm?oSd=Pk"_g"Odnf%2upn>cTTWs/pe,AR&P5pJQM=gpX^I27In6BmXZ1\Rm)&F(OP)@"18@<(/]au#@8l=fR'9U#L5L%$8]=74'oSm1Z&0VIchI`?&[fZ%DLpbh)ljr_@(<o6_q81$GeP6$6JMX[UGqA@",>9C;4toXq=2"d4('m2+=VM"p]\&+X&A@oYi+:;iu-g8cFjZCA!JtS#OQ:3%,Uon%c5lD;W:8XEYN0HN45ct%l+I0'[gT'4mXRW14(,Mf%X<guG40s=k.GlQ9*?JdDnAtWRRg+m`gpF<6gu^P_!!3-\`OBXJa;@("bKsO%llFG?[3qu:DdQ2pg]=b*FHTN#c[<)mr*I1QT9te[M(oM9'=L:4QIjESIY4suQ&!49QX+Bf$H/>#6gUL;%mK`I-mV/0&*ADcS+1co%aShnh^G4!'7sYWg*KN9`eb/%o-GR'iN/)Z#VCHg98)m<]HR8PHAL&W-G<XndFj<@m3GYWsXEn>c'CL7j;RKO6ZUB,F#K!=g3O:*]%gWG_X0usY(:kpRqE*s]`MO@/+eBpXR6-NHLq'7t*IEp*[_0YpErNQp5r+Kj$b9G@")'$t5D#s4pS3t0-^Tehoc,@OD/<!dJ='!7%%RZ<h*4Ll3\Y3V49H^/ONpYi0Q[$m]U3)pAe0Z"26#SU14CSm.#U*NTSiS[R%SMWY"I==p9Em;@InVM\)/QW7Z^:*-8iOliS2_iVH%?+FY\pTE:CNqV1l]5$kW=7/s-ft0#F0q\3CgndN/RrB/G_#]'(j4KXU-!gK%Pp;$&l,T77),V0!m)ngqf6-H&eHEUYHKk%(r9ce7%l46lgk,s[#kk3Snj3^?!&al)JY1G!?!Z\PZ&L@=h((&/rmqk);>bCoKQ6T>6]Q[p$O485PDULl,gN$daUpoG$DcklNEXRN'TA+Bb%+oU8`UU9&uQc:76oA"pZj4,fYWRU[\5'Fg+fT`.HOenJ81<;>Uo%K<Y(fBS'.>KDp7..T7)`]k=h+F.lDKOE=;au&f[9f=X3.FO`%[pX8&SOgB8oA5]n2q>Sh2c85o4ZS76h![D:.4gpWZ3KT]VaA+G0mEZ44T1mF$H)UE`G^'e)('Nk)1F%ur:+?TikMHJ_oNlcDTj+-%V_e7p`E?7/%Ru,-Xi(!o7HBKSN;sq,gXoQpLp&LF+VO+V2g%LYn=pTN3su&TOTK1@eM\&,<EY?o<RY+>QMb#2$t\<N0,\V^:F(+D%47\$S$D`FH1=3^\+gWj'jM[^[L:^r,\Xe?pmN`>tgl7Ti]T/fpG@LYI5s7IQGA]FqE,VhmGK=A[^(*hcGK=&j?A>T^<l4A5+POhn%#i/`(8uaUp+Q;q-O2Efe;,]Z$'u/+";C:oXj>Hp%g<s*+Gp46=*fLi;<`C`d$OtC5Pgp&M`kD2M@eRSi]*j#i,qNa!G6RR8"CV%c%b7<kFqVK(Wd>jPZ0Eqe>TC88&?Mlg`!lQT6713&e@]t/!3X1^:G65YI&Eu1o[AYqc&eq*+QFaPe4r:na6n\-$@NTtkSY:gr<7gU`%`);!KQ$Cu7<Ah""5K"]&V9fGZFoW-hYs>mlZ>.PmN"[N&*H&8O8hmu&Es''k</jj8@U`(p^pQ/^=NM=s_FtMc`?-3>BRBqB;VsD:%&7<MQk1L,hOCJ\hZfZHtZ<;RhW4]\2[%>SI"mRi,K=M$/">8^RV<<IQh;i.?Nn)j6/CqG]>>l)+BLLFg*2qR$mjKDioK;sV`t*QQ%S_#%C%qH+Zq1I._O`+LA5c/Gcq\oY9aUd/KCi08BV>u>X@Eh'/_'Oc)>HqFt3c_=oP<B75nN,;g5EITQ4t'MK!a3b>M2pha[mC7=%o\C6ombO-dE?\-Y4u#_C/o);l#UCuc-.tt%aa?S'."ns:@1AAj]Z[-_)_<c.:)rhaE8m)1HFLK)#TZ!`5O/ACl!%+2hnI`q@d>Yk%$.E#59>Sna:)%U]hgt<Bng/Ic,43Di.gtr#$k9>39Rqf9nC$K)eVeF/eG9oB!WXH0\/PEb_-=8YERdr,-noOR+T133_1Pi$0\8o*%g9GS2]WaTY@?-qPK&#8!E:"0De<Se'&1>]tpaI[(3_AkC\)6[)>/XOOdqh'TH(+(;-D"[D>J?+sYCS:4@<D\'=nQ_X(l*%E**?i'%hiB_9C-(,h++@;a*hEAPKMH,`4ZWEuR(X:@kA!&1J7TP<V(&pAK$s#*O/WjCYimLbDr0L1"&a:$!5e&8I%IHBWuf?Y4-9LP;gr[^%J"FfMi1CKuJ,]#3p[`s?]FKG2IXH.Mc\K:(s8J?Lr4E!]s6JSBjhH6Dj8\r(?iTQ_Iegl'rpq63iD9L8YCHHl5Q:<,?iK#VrqO8-%o]mV!ns=k(k<Jt;TDn#o?[hs/^]*JirqRZ9qPR^#l+d8Yrsn,M&i]j.+9)7(rJ+bZ04]#^2?~>%AI9_PrivateDataEnd