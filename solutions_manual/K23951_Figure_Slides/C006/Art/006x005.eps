%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 006x005.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 260 204
%%HiResBoundingBox: 0 0 259.4155 203.6118
%%CropBox: 0 0 259.4155 203.6118
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 5880 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF52A852FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFAFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFA8FD06FF7D52FD047DFD0CA87DFD19A87DFD0BA87DFD0DA8%7DFD19A87DFD0BA87DFD0CA87DA8FD06FFA8FFA8A8A8FD33FFA8FD33FFA8%FD09FFA8FFA8A8FD09FFA8A8FD70FF7E53A8A8A8FD0AFFA8FD6EFFA8A8FF%FFFFA8FD0AFFA8A8FD6EFF527EFFFFFFA8A8FD0AFFA8FD6BFFA8A8FD06FF%A8FD0AFFA8A8FD6BFF7E52FD06FFA8A8FD0AFFA8FD69FF7EFD09FFA8FD08%FFA8A8A8FD69FFA9537DFD09FFA8FD05FFAF52A87DA8A8FD66FFA87EFD0B%FFA8FFFFA87D7DFF7D7D537D7DA8FD66FF7D53A8FD0AFFA8A8FFA859A8FD%04FFA8FFA8FD73FFA8FFFF7E7DA8FD05FFA8A8FD73FFA8A8FFA87DA8FD06%FFA8FD73FFA8FFFFA87DA8FD05FFA8A8FD73FFA8A8FFA959A8FD06FFA8FD%73FFA8FFFF7E7D7DFD05FFA8FD75FFA8FFA852A8FD06FFA8FD73FFA8FFFF%A87D7DFFFD06A8FD73FFA8A8FFA87DA8FFFF7D7D7DA8A8FD73FFA8FFFFFF%A8A8FFA8FD047DA8FD73FFA8A8FFA8A8FFFFFFA8FFA8FFA8FD73FFA8FFFF%7D7D7DFD05FFA8A8FD73FFA8A8FFFF7DA8FD06FFA8FD73FFA8FFFF7D7D7D%FD05FFA8FD75FFA8FFA852A8FD06FFA8FD73FFA8FFFFA87D7DFD05FFA8A8%FD73FFA8A8FFA852A8FD06FFA8FD73FFA8FFFF7DA87DFFFD05A8FD74FFA8%A8FFA853A8FFFF7D7D7DA8A8FD73FFA8FFFF7D7DA8FFA8FD047DA8FD73FF%A8A8FFA8527DFD06FFA8FD73FFA8FFFFA8A8A8FD05FFA8FD75FFA8FF7DA8%FD07FFA8FD73FFA8FFFF7D7DA8FD05FFA8A8FD73FFA8A8FFA852A8FD06FF%A8FD73FFA8FFFFA8A8A8FD05FFA8A8FD73FFA8A8FFFFA8FD07FFA8FD73FF%A8FFFF7D5284FFA87D7D84A8FD75FFA8FFA87EA8FFFF7DA87DA8A8FD73FF%A8FFFFA87DA8FFA87DA87D7DA8FD73FFA8A8FFA852A8FD06FFA8FD73FFA8%FFFFA852A8FD05FFA8A8FD73FFA8A8FFA852A8FD06FFA8FD73FFA8FFFFA8%7D7DFD05FFA8A8FD73FFA8A8FD0AFFA8FD73FFA8FFFF7D527DFD05FFA8A8%FD73FFA8A8FFFFA8AFFD06FFA8FD73FFA8FFFFA8FFFFFFA87EA87DA8FD75%FFA8FF7D52A8FFFFFD047DA8FD73FF7DFFFFA87DA8FFA87DA87DA8A8FD73%FFA8A8FFA852A8FD06FFA8FD73FFA8FFFFA87D7DFD05FFA8A8FD73FFA8A8%FFA852A8FD06FFA8FD73FFA8FFFF7DA87DFD05FFA8A8FD73FFA8A8FFA97D%A8FD06FFA8FD73FFA8FFFFA87DA8FD05FFA8FD75FFA8FFA852A8FD06FFA8%FD73FFA8FFFFA87D7DFFA87DA87DA8A9FD73FFA8A8FD06FF7DA87D7DA8FD%73FF7DFFFF7D7DA8FFFF7E84A884AFFD73FFA8A8FFA859A8FD06FFA8FD73%FFA8FFFFA853A8FD05FFA8A8FD73FFA8A8FFA87DA8FD06FFA8FD73FFA8FF%FF847D7DFD05FFA8FD75FFA8FFA859A8FD06FFA8FD73FFA8FFFFA87D53FD%05FFA8A8FD73FFA8A8FFA87DA8FD06FFA8FD73FFA8FFFF7D7DA8FFA87DA8%7D7DA8FD73FFA8A8FF527DFFFFFF7DA87D7EA8FD73FFA8A9FF7D7DA8FFA8%7DA8A8A8FD75FFA8FD0AFFA8FD73FFA8FFFF7D7DA8FD05FFA8FD14FFA8A8%FD5FFFA8FFA852A8FD06FFA8FD13FF527EFD5EFFA8FFFF847D7DFD05FFA8%A8FD14FFA8FD5EFFA8A8FF7D7DFD07FFA8FD73FFA8FFFF7E7D7DFD05FFA8%A8FD0EFF7EFD64FFA8A8FFA87DA8FD04FFA8FFA8FD0DFFA8537EFD63FFA8%FFFF527DFD04FF7D52A8A8FD0BFFA87EFFA8FD64FFA8A8FFA87DA9FD04FF%7DA8A8FD0BFF7D7DFD66FFA8FD08FFA8A8A8FD09FFA87EA8FD69FFA8FD0A%FFA8FD08FFA852FD69FFA8FD0AFFA8A8FD06FF7EA8FD6BFFA8A8FD0AFFA8%FD06FF537DFD6BFFA8FD0AFFA8A8FFFFFFA87DFD6EFFA8A8FD0AFFA8FFFF%FF7E53FD6EFFA8FD0AFFA8AFFF7EA8FD70FFA9A8FD08FFA8FFA8FF53A8FD%70FFA8FD08FFFD047DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8%A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8%FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8%FFA8FFA8A87DFD07FFA87DA87DFD04A8FFA8A8A8FFFD07A8FFA8A8A8FFA8%A8A8FFA8FFA8FFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFFD07A8FFA8A8A8FFA8A8A8A9A8FFA8FFA8A8A8FFA8%A8A8A9A8A8A8AFA8A8A8FFA8A8A8FFA8A9A8FFA8A8A8FFA8A8A8FFA8A87D%FD08FFA8FFA87DFD0BFFA87DFD0AFFA87DA87DFD09FFA8A8A87DFD09FFA8%7DA87DFD09FFA87D7DA8FD09FFA87DA87DFD09FFA87D7D7DFD0AFF7DA87D%FD09FFA87D7D7DFD08FFA852FD0BFFA87DFD0AFFA87E7D7DA8FD09FF7DA8%53FD09FFA87D7D7DA8FD09FF7DA87DFD0AFF7D7D7DA8FD09FF52A87DFD09%FF7D597D7DA8FD08FF7E28A87DFD08FFA87DFD0BFFA87DFD0AFFA87DA87D%FD09FFA87DA87DA8FD08FFA87DA87DFD09FF7D7DA87DA9FD08FFA87DA87D%FD09FFA8A8A87DA8FD09FF84A87DFD09FFA8A8A87DFDA0FFA8A8A8FFA8FF%FFFFA8FF7DA8A8FFFFFFA8FFFFFFA8FFA8A8A8FFFFFF7DFD09FFA8FFA8FF%FFA884FFA8A8A8FFA8A97EFFFFA9A8FFA8FFA8FFA8FFA8FFFFFFA8FD3BFF%7D527D52FD047DA8A8537D847D7D597DA8A8537D7DA8FD067DFF7D7DFF7D%7D527D7DA852FFA87D52A9A87D7DA8FD067D52A8FFFD0B7D53FD3AFF7DFF%FD067DFFFFA8AF52FD047DFF7D52FD097DFF597DA8FD047D847D7DA8A87D%7DFFA8597D7DA87D7D59FD047DFF527D597D7D7D527D597DA87D7DFD45FF%A8A8FD05FFA8FD0DFFA8FD0BFFA8FFFFFFA8FD07FFA8FFFFFFA8FFA8FD05%FFA9FD99FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T17:53:14+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T17:53:14+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T17:53:14+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q801j8rtZvNV8xXz3&#xA;lvqC639Va3juA8X1d7Vrn0iaC4SQQpcIAvEB6fFQ7sVZXpltrV3NfSXGsTosVwYIIoI7YIEjjQFj&#xA;zhkfkz8ifiIwKj/0Vff9Xm8/4Cz/AOyfFXfoq+/6vN5/wFn/ANk+KqTaVq31hOOs3P1fg/qVS058&#xA;6rwp/o9KU5V+jFVX9FX3/V5vP+As/wDsnxV36Kvv+rzef8BZ/wDZPiqlPpWrcB6Gs3PPmleaWlOH&#xA;Mep0t+vCvH3xVV/RV9/1ebz/AICz/wCyfFXfoq+/6vN5/wABZ/8AZPirv0Vff9Xm8/4Cz/7J8VUr&#xA;bStW+rxfWdZufrHBfW9NLThzp8XGtvWlelcVVf0Vff8AV5vP+As/+yfFXfoq+/6vN5/wFn/2T4qp&#xA;RaVq3Ob1dZueHMehxS0rw4LXnW368+XTtTFVX9FX3/V5vP8AgLP/ALJ8Vd+ir7/q83n/AAFn/wBk&#xA;+KqTaVq31hOOs3P1fg/qVS0586rwp/o9KU5V+jFVX9FX3/V5vP8AgLP/ALJ8Vd+ir7/q83n/AAFn&#xA;/wBk+KqU+latwHoazc8+aV5paU4cx6nS368K8ffFVX9FX3/V5vP+As/+yfFXfoq+/wCrzef8BZ/9&#xA;k+Ku/RV9/wBXm8/4Cz/7J8VUrbStW+rxfWdZufrHBfW9NLThzp8XGtvWlelcVVf0Vff9Xm8/4Cz/&#xA;AOyfFXfoq+/6vN5/wFn/ANk+KqUWlatzm9XWbnhzHocUtK8OC151t+vPl07UxVV/RV9/1ebz/gLP&#xA;/snxVKPNGpQ+WtJbVNT1q/FsrrH+6itHYs5oNvQH4nJRiSaCCjLD9JRa+Im1GW8sJbP1gk6Qqyye&#xA;ooUp6UURoV5V5VwJTzArsVS3RP8Aj/8A+Yyb+GKplirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVSe6816PbeZrPy3K7jVL6FriBQhKcE5Hd+gJEbfd8qyETV9E&#xA;Wt8s6Lq+n2Fzb61qh1maa5kmjmkjCcI2pxj41YUBBb2rQdMZEE7ClCI/6aT/AKM/+ZuRSqprGnSa&#xA;kNOimSW69KSZ0jZW4LFIIjzANRV6qNuqt4Yqw/UfzXtINR1Ows7NLmfT5fSXnciLn6cN1LcM4CSN&#xA;EI/qDqpYfESvRWBKrI/LN9DcrfGNZF5XLyfHG6CjhSByI4k+IB2xVOsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYvPrMfmvS9Z03y1qbWOqWM31WS7MTfu5EcFu&#xA;IalQwRlqOnXwywDhIJGyObILO2kitrdbqQXN5DEsct2UCF2oA7cR9nmwrQZWlEYqlKTo/ml4gH5R&#xA;2Y5EoyqayV+FiArfQcVYh5JfSl8+azBGscl+suouZwrrKEa6hLow9aRVXmVC/uk5FWcfaLOVZ3e6&#xA;Tpd+rJfWcF0j8OazxpID6TFo6hgfsMxK+BOBUPon/H//AMxk38MVTLFXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVqRRR8uCKnNiz8QBVj1Jp1OKrsVdiqW/9NJ/0&#xA;Z/8AM3FWAeU9UvpvzW1WzhupZIeF49z6ob05EiukiRVDXUhVrdiY0ZbdFZeVSxGFXqOBUt0T/j//&#xA;AOYyb+GKplirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVS3/ppP+jP/mbirH/LF9o935lna01175wl40GntE8ZRZLmN5+buB6noyFUQUHANx74VSrzF+XW&#xA;q6pqur30MFnEt8sQhhEyorzQM/p3E4Fk4Y0YckkEtegZQKMqyzyvDexR3iXEscgW4ZaRxlPjVVDm&#xA;vIihPQBRTAqd4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FUpRZx5pcu6GI2Y9JApDD95vybkQ2/sMVYj5LFzJ571O5a3eG2lS7kgkltrmAMslxCQIxPFG&#xA;EI41mANWc13A2KvRMCpbon/H/wD8xk38MVTLFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlv/AE0n/Rn/AMzcVYR5EWxHnnUmgvGvbporo3crzWMiFTcR&#xA;GCSBLZUdfVQlp9lHOnIE0OFU41j8wZNM1i70mTTTJcwiN7U+o0ccqOkshPOWKNKqkDf3Zda0UsDt&#xA;iqa+VdStL6G7khkXnJO0xhJHqKsqqy8lBqNjgVPMVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdiqUpcQP5peFJEaWKzHqxhgWWslRyHUVBxVivk9odQ8z3G&#xA;r6V5vtNVsrj6y76WizNP6bzLxLc7tlX0Cvpxstuo4sa1qDirLJfKvlmb6162lWkpvWD3heGNvVZS&#xA;WBeoNaMSfmSe+Kt6GABfgCgF5KAB9GKpnirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVS3/ppP+jP/AJm4qkfl2wjtfNd9ImupdLcfW3XSkaQlSblWkZ42&#xA;lkiQwOxQGONOXOrcjvirLsVS3RP+P/8A5jJv4YqmWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLf+mk/6M/+ZuKsN8lQ2Nv551RLcj1mW8juLhp72eS7&#xA;FvcQrEW+sDhW0R/RZubVYnidmAKrNc8l+Yb691ua3tktku5IzYiG7Cq7RiQ/WLlZYJ1ZmeShXjsg&#xA;AGKGWeWIr2NL1bmSJwtwylY0ZaOFUOalmqpPQUFPfAlO8VdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqUos480uXdDEbMekgUhh+835NyIbf2GKse0Lyx5&#xA;m07zvqGryQacdP1BpxPNG6rcsrSK1seCWUbAoilXDXDcyeVRSmKs3xVLdE/4/wD/AJjJv4YqmWKu&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLf+mk/wCj&#xA;P/mbirEPKNt5Kbz1eappqX0Wt3kN765urcwpIq3UX1njK0Ss5il9OPjzIQbU64qmmqef106+vbGX&#xA;TZZbi2ZBEIpI2VxIk0vxMSqxv6Nsz8DvQr44VTHytqVlexXklvKrGS4ab06jmqSqrIWXqKg4FTzF&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlKXED+aX&#xA;hSRGlisx6sYYFlrJUch1FQcVYV5HvLO4/MjXfqtzZ3DFbmS5a2SMT0aaIW/rMsafCI1Pp8ZH51LN&#xA;xNFwqzObyf5Xn+t+tpdu/wBfkE95yQH1ZR+2/ie3y26YFVdCVVW+VQAovJQANgAKYqmeKuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVLf+mk/6M/8Ambir&#xA;DfJSwp51voEVIEt47z0YUjRGPrXMTyo8qyOs31dwI04Ivpg8TucKvRMCpbon/H//AMxk38MVTLFX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlv/TSf9Gf&#xA;/M3FWNeXj5Vu/OF8sWktaa3Zy3he6W4jkjf98nqFVSYuDIJI5HVohQkV/ZJKteZNA127vdZSyguk&#xA;tbuOzeCaG7RC1xA0jSELKW4IweNWAAqFPtiqc+UIdSitLhL2SJpFmKyLErACVUUSEOzHkpb7Pwg4&#xA;FT/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlKLO&#xA;PNLl3QxGzHpIFIYfvN+TciG39hirCPKU0qfmbq6JYI6sbxZZormFxADcIyssRvZnpN9qeluhWTiK&#xA;HrhV6bgVLdE/4/8A/mMm/hiqZYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FUt/wCmk/6M/wDmbirB/JFkmp+c9Q1q3iLabbS3y297BezvAz3MsMoSOD61&#xA;Ig9RP3stYUUsVK1ArhVlOp+cYtPmvYH0+5mntZYIYYovSLTm4VmUx1dVUD02rzI6fLAq/wAo6tYa&#xA;lbXNxaSq4nmNwsdR6ixzKroWWtRUHFU+xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KpSlxA/ml4UkRpYrMerGGBZayVHIdRUHFWPeSIPKllrl/p+l2Mtj&#xA;fWxngkU3rXMTx27xRqwRp5CremYftRgoKLWlKlU8vPJXlq9uru6urRpZr7h9YZppqExEFCq8+KFa&#xA;bFAD95wKreX4ooYryKJAkUd3IkaKKBVUKAAB2AxVNcVdirsVdiqAi17SJdZm0WO6RtVt4hPNaCvN&#xA;Y2IAY7U/aH3jxw8Jq+i2j8CuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2Kpb/wBNJ/0Z/wDM3FWD+RTEfPWpCb0lvx+kg6QvO6EfXImdkWXiIxVlDUX42qeg3KHpWBKW6J/x&#xA;/wD/ADGTfwxVMsVdirsVQOja5pGtWZvNKuku7YO0ZljNQHTqDX/PvhMSOa2qJpWmR6jJqSWkK6jM&#xA;gilvBGomZBSis9ORHwjavYeGNqisCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2Kpb/00n/Rn/zNxVI/I3lTzDoM102qX9rqP1qjyXSxTC7aQKi/FNLLKTHVXfh0UtRaKAMV&#xA;R3njTtVv9CMOlyXUd4siyR/UpRA7FQaK7mW3Pplqc+L1p0xVV8rrfiO8N00dfrDBo0VqrIFXn+8Z&#xA;m5CvTb78VTvFUHq+s6Vo9kb3U7lLS1VlQyyGg5MaADuThAJ5KgWXzU3mqKWKW2Plc237yPf1zOSS&#xA;GUgdKU70pXauHavNCYabpOl6XbG2020hs7csXMUCLGvJupooG+Am0orArsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSlFnHmly7oYjZj0kCkMP3m/JuRDb+wxVNsVdiq&#xA;W6J/x/8A/MZN/DFVaXWdKi1SHSZbuJNSuEMsFoWAkdFrVgv+xP3HwOGjVqlOlaRq+p6RcWnne2sb&#xA;2Q3TvBFCheH0Vp6ZIkH2geX+xpXeuSJAPpQyIAAAAUA2AHSmQS7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUt/6aT/oz/5m4qmWKpX5i8w2mhWSXVxDLcGVzHFB&#xA;bhDIxWN5npzaNfhiidzVug8cVY8PMEtzo2tr5bvLT9NJdcoEu3CqBKI5AWFa/FEx49q/Tko1e/JC&#xA;dW8WiS3Flquo/UG163gETXcZU8Cy/vFiZjy4ci3Gu9CfE4LPLolMv0npv/LXD/yMX+uBVNta0lbh&#xA;IDdxepIjyL8a04oVB3r/AJYxVU/Sem/8tcP/ACMX+uKu/Sem/wDLXD/yMX+uKqc+taTAgeS7i4l0&#xA;jFHU/FI4Reh8WxVU/Sem/wDLXD/yMX+uKu/Sem/8tcP/ACMX+uKu/Sem/wDLXD/yMX+uKqdvrWk3&#xA;FvFPHdxenMiyJV1B4sKioJ2xVU/Sem/8tcP/ACMX+uKu/Sem/wDLXD/yMX+uKqcWtaTI8qLdxcoX&#xA;EclXUfEUV9t99nGKqn6T03/lrh/5GL/XFXfpPTf+WuH/AJGL/XFVNta0lbhIDdxepIjyL8a04oVB&#xA;3r/ljFVT9J6b/wAtcP8AyMX+uKu/Sem/8tcP/Ixf64qpz61pMCB5LuLiXSMUdT8UjhF6HxbFVT9J&#xA;6b/y1w/8jF/rirv0npv/AC1w/wDIxf64q79J6b/y1w/8jF/riqnb61pNxbxTx3cXpzIsiVdQeLCo&#xA;qCdsVVP0npv/AC1w/wDIxf64q79J6b/y1w/8jF/riqnFrWkyPKi3cXKFxHJV1HxFFfbffZxiqp+k&#xA;9N/5a4f+Ri/1xV36T03/AJa4f+Ri/wBcVS6K/s5fNQhhmSV2sWeiENssyg1p/rjFU6xVA6zoemaz&#xA;Z/U9RhM0AbmArvEwahWoeNkcVVipodwSOmKsZ8pWt5Nr2ufpLTY0iVwsMr2aw09OeeKOOOUxqbiP&#xA;6rFA/OpoWIr+yhVlf6M03/lkh/5Fr/TArv0Zpv8AyyQ/8i1/pirG7+KeLztp1tDZ+rpc8JE8cdrS&#xA;OJuMzGWWdrd4yCURBGs6MCa8WBxVkn6M03/lkh/5Fr/TFXfozTf+WSH/AJFr/TFWI+b5NQsdVSLS&#xA;bBrlZNMvpEgSw9aD65Eoa15TLGQrO3IcS46e+FU28p2v1nRxJf23OQTTpDNc2q200kCTMsTyQ8I+&#xA;DMgH7C160FcCpx+jNN/5ZIf+Ra/0xVJPN8KWWkrc2NswnS4hqlrZ/WndC4EilEimYLwqSwH04qhP&#xA;K0dzPrOtW9/ZmSzhkDWE8lr9XhVDLKohjWS2t3ZkRE5OHkVqihHdVk36M03/AJZIf+Ra/wBMVQmr&#xA;2mnW+lXk4teJjhkYNa2yzzghTQxRBJOb/wAq8TU9sVYR5en8zz6royXtg4tLpC9wstgIvgZrwn61&#xA;L6EYjnhWK1WgCq5ZioZSOJV6F+jNN/5ZIf8AkWv9MCu/Rmm/8skP/Itf6Yq841W711JdZlsbW7eC&#xA;zvEitIJNMKzzBVuDLHbSJZTR+g7LEscrq32SWcB0OFXo403TiATZwgnsY02+4YFd+jNN/wCWSH/k&#xA;Wv8ATFWF+dzrdnqtqnl+w+shrW6e4tvqgkgDpbTvbMH9ALzNwiAj6yOw9M8+alU78o2xutESXUbU&#xA;NN61wkctxbLbzSQJO6wSSQmOL02aIKSOA8aDpgVOf0Zpv/LJD/yLX+mKsb/MCG5s/Lc0+h2xGqqf&#xA;9Ejt7UT+o4RiEkVba7ohp4JU0HqJWuKrfKqXU+razbahZFraCQNZTSWogiVGklX0Iw0EJcxqi8nW&#xA;SRWqCreJVk36M03/AJZIf+Ra/wBMCoXVLOO3026msNLhvL6OJ2trWkcfqSAfAhd6KtT3OKsI8uTe&#xA;bJtX0mDVNMaKOSMrfCSxiSN6fWxJM8kayJE4MVuEj9TcOTv1Uq9B/Rmm/wDLJD/yLX+mBXfozTf+&#xA;WSH/AJFr/TFXmV9e+erPVdau7fSJNOjhuYDaJaWcUk13aLHcr6KXEEV78cjxQyFpUCpXgStQSVer&#xA;YFdirsVdirsVdirsVdirzOf8y/NemRXt9qOjRz6b+krqw06RHW0qtpc3URLvJJOGLR28fHksXJyQ&#xA;PhocVXSfmxq1o8lvc6NDcXUUF5O31e7CgvbfWCkAWSMN6n+jj1APsB1ahrQGlTnzN5i85WN1aQ2F&#xA;hbv/AKHLd6ktTKkfplQeEzPbsaAnj+5YseyjfFUlufzhubeG4YaOlw1vObYsl2ERCrTKTcs8QWAv&#xA;9X+BatXku4xpU41Dz/e2OgHWLjTYII5NUfTrZbi8Ma+mk7wCedxA4j5GItxUPsR8WBUni/NLWJrK&#xA;7ddMWCdYpLi2huHMc7BULrBDBxpNKnH94C6cQQd8NIVP+VvT+uIzowVGiST1HuuHAyOFPqo0IdUh&#xA;BpO4U+mystDSpaSiYvzIvrbQfLd7eWMdzca3L6c6wy+mI1+sJDzi5oRLxEgbjVWIBIFK8VVTzB+Z&#xA;s2k6xqenx6Wt5+jxGKpcFZKyC3IklQxFYoR9Z3k5n7J+HFUHcfmpfm2S4t9LQFHt/VsxP6ty6TW6&#xA;ytIiRxlTbqz09ZWavFqJXbGlRfnT8xtQ0SGZNP0+K8uP0XJqEEgmdlZxBcSgRIsdZo0+q/G3Jac0&#xA;/m2Ct+aPPuq6DMulmzhutQXTfrcsyTMG9b05z+6g9I841e3qxLrQHphVTuvzJvU1S3gjsoTA97NY&#xA;zqZ2MkHCX0lmvP3X+jK1CV+3yqu4G+NKlOkfnHqc2mW31vR0W9+oWdzczTXH1aL1biK3eRnj4TSx&#xA;RcrghHowJFDQ40qdXH5i3ljb+XUnsFurrV7GG6njjkMc3ORoY3WCD039TiZy7AuvFFJ3piqV2/5z&#xA;zSiEto0aGSNpGiF6HkNGAAjVYTy4hqycipQBtjTdpCrD+cFzILT/AHBhvrCO7Sx3YMJKor8YHeKM&#xA;zFedJAFBUg0DY0lPfL3nmbUNaudJ1G0g0+4hWH0/TuvrPqPNGJONBFHwI+IUejHjULTfArLMVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUbT6l6TfU/T9H1JeXo8ePq+o3rV47cvV5c+/Ktd&#xA;8VWXv6O/cfXvR/vk+q+vx/v9+Hp8v2+tKb4qicVdirsVUbf6l6tz9X9P1vUH1z0+PL1fTSnq035e&#xA;lw+1vxp2piqtirsVUU+pfXZeHp/XfTj9enH1fS5P6XP9rjy9TjXavKnfFVbFXYqon6l9dWvp/XvT&#xA;PH7Pq+lyHKn7XDlSvauKqVx+ifUn+s+h6voH6z6nDl9Wq1efLf068uu3XFUTF6fpp6XH0uI9PjTj&#xA;xptSm1KYquxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:093B4F983D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:093B4F983D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:093B4F983D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T17:53:14+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -203.612 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 203.612 li
259.416 203.612 li
259.416 0 li
cp
clp
[1 0 0 1 0 0 ]ct
18.334 186.488 mo
255.484 186.488 li
255.484 2.8877 li
18.334 2.8877 li
18.334 186.488 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
18.334 186.488 mo
20.0532 186.488 li
20.0532 184.768 li
18.334 184.768 li
18.334 186.488 li
cp
clp
18.334 187.676 mo
18.6489 187.676 18.9512 187.551 19.1738 187.328 cv
19.3965 187.105 19.522 186.802 19.522 186.488 cv
19.522 186.172 19.3965 185.872 19.1738 185.648 cv
18.9512 185.425 18.6489 185.299 18.334 185.299 cv
18.019 185.299 17.7168 185.425 17.4941 185.648 cv
17.2715 185.872 17.146 186.172 17.146 186.488 cv
17.146 186.802 17.2715 187.105 17.4941 187.328 cv
17.7168 187.551 18.019 187.676 18.334 187.676 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.334 187.676 mo
18.6489 187.676 18.9512 187.551 19.1738 187.328 cv
19.3965 187.105 19.522 186.802 19.522 186.488 cv
19.522 186.172 19.3965 185.872 19.1738 185.648 cv
18.9512 185.425 18.6489 185.299 18.334 185.299 cv
18.019 185.299 17.7168 185.425 17.4941 185.648 cv
17.2715 185.872 17.146 186.172 17.146 186.488 cv
17.146 186.802 17.2715 187.105 17.4941 187.328 cv
17.7168 187.551 18.019 187.676 18.334 187.676 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
21.8848 184.127 mo
25.3232 184.127 li
25.3232 180.688 li
21.8848 180.688 li
21.8848 184.127 li
cp
clp
23.604 183.596 mo
23.9189 183.596 24.2212 183.47 24.4438 183.248 cv
24.6665 183.026 24.7915 182.722 24.7915 182.408 cv
24.7915 182.092 24.6665 181.791 24.4438 181.568 cv
24.2212 181.344 23.9189 181.219 23.604 181.219 cv
23.2891 181.219 22.9863 181.344 22.7642 181.568 cv
22.5415 181.791 22.416 182.092 22.416 182.408 cv
22.416 182.722 22.5415 183.026 22.7642 183.248 cv
22.9863 183.47 23.2891 183.596 23.604 183.596 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
23.604 183.596 mo
23.9189 183.596 24.2212 183.47 24.4438 183.248 cv
24.6665 183.026 24.7915 182.722 24.7915 182.408 cv
24.7915 182.092 24.6665 181.791 24.4438 181.568 cv
24.2212 181.344 23.9189 181.219 23.604 181.219 cv
23.2891 181.219 22.9863 181.344 22.7642 181.568 cv
22.5415 181.791 22.416 182.092 22.416 182.408 cv
22.416 182.722 22.5415 183.026 22.7642 183.248 cv
22.9863 183.47 23.2891 183.596 23.604 183.596 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
27.1548 180.047 mo
30.5933 180.047 li
30.5933 176.608 li
27.1548 176.608 li
27.1548 180.047 li
cp
clp
28.874 179.516 mo
29.189 179.516 29.4912 179.391 29.7139 179.168 cv
29.9365 178.945 30.0615 178.643 30.0615 178.329 cv
30.0615 178.012 29.9365 177.711 29.7139 177.488 cv
29.4912 177.265 29.189 177.139 28.874 177.139 cv
28.5586 177.139 28.2563 177.265 28.0337 177.488 cv
27.8115 177.711 27.686 178.012 27.686 178.329 cv
27.686 178.643 27.8115 178.945 28.0337 179.168 cv
28.2563 179.391 28.5586 179.516 28.874 179.516 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
28.874 179.516 mo
29.189 179.516 29.4912 179.391 29.7139 179.168 cv
29.9365 178.945 30.0615 178.643 30.0615 178.329 cv
30.0615 178.012 29.9365 177.711 29.7139 177.488 cv
29.4912 177.265 29.189 177.139 28.874 177.139 cv
28.5586 177.139 28.2563 177.265 28.0337 177.488 cv
27.8115 177.711 27.686 178.012 27.686 178.329 cv
27.686 178.643 27.8115 178.945 28.0337 179.168 cv
28.2563 179.391 28.5586 179.516 28.874 179.516 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
32.4248 175.967 mo
35.8633 175.967 li
35.8633 172.528 li
32.4248 172.528 li
32.4248 175.967 li
cp
clp
34.144 175.436 mo
34.459 175.436 34.7612 175.311 34.9844 175.087 cv
35.2065 174.866 35.3315 174.562 35.3315 174.248 cv
35.3315 173.932 35.2065 173.631 34.9844 173.408 cv
34.7612 173.185 34.459 173.059 34.144 173.059 cv
33.8286 173.059 33.5264 173.185 33.3037 173.408 cv
33.0815 173.631 32.9561 173.932 32.9561 174.248 cv
32.9561 174.562 33.0815 174.866 33.3037 175.087 cv
33.5264 175.311 33.8286 175.436 34.144 175.436 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
34.144 175.436 mo
34.459 175.436 34.7612 175.311 34.9844 175.087 cv
35.2065 174.866 35.3315 174.562 35.3315 174.248 cv
35.3315 173.932 35.2065 173.631 34.9844 173.408 cv
34.7612 173.185 34.459 173.059 34.144 173.059 cv
33.8286 173.059 33.5264 173.185 33.3037 173.408 cv
33.0815 173.631 32.9561 173.932 32.9561 174.248 cv
32.9561 174.562 33.0815 174.866 33.3037 175.087 cv
33.5264 175.311 33.8286 175.436 34.144 175.436 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
37.6948 171.887 mo
41.1333 171.887 li
41.1333 168.448 li
37.6948 168.448 li
37.6948 171.887 li
cp
clp
39.4141 171.356 mo
39.729 171.356 40.0313 171.231 40.2539 171.008 cv
40.4766 170.786 40.6021 170.483 40.6021 170.168 cv
40.6021 169.853 40.4766 169.551 40.2539 169.328 cv
40.0313 169.105 39.729 168.979 39.4141 168.979 cv
39.0991 168.979 38.7969 169.105 38.5737 169.328 cv
38.3516 169.551 38.2261 169.853 38.2261 170.168 cv
38.2261 170.483 38.3516 170.786 38.5737 171.008 cv
38.7969 171.231 39.0991 171.356 39.4141 171.356 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
39.4141 171.356 mo
39.729 171.356 40.0313 171.231 40.2539 171.008 cv
40.4766 170.786 40.6021 170.483 40.6021 170.168 cv
40.6021 169.853 40.4766 169.551 40.2539 169.328 cv
40.0313 169.105 39.729 168.979 39.4141 168.979 cv
39.0991 168.979 38.7969 169.105 38.5737 169.328 cv
38.3516 169.551 38.2261 169.853 38.2261 170.168 cv
38.2261 170.483 38.3516 170.786 38.5737 171.008 cv
38.7969 171.231 39.0991 171.356 39.4141 171.356 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
42.9648 167.807 mo
46.4038 167.807 li
46.4038 164.369 li
42.9648 164.369 li
42.9648 167.807 li
cp
clp
44.6841 167.275 mo
44.999 167.275 45.3013 167.15 45.5239 166.928 cv
45.7466 166.705 45.8721 166.402 45.8721 166.088 cv
45.8721 165.772 45.7466 165.471 45.5239 165.248 cv
45.3013 165.025 44.999 164.899 44.6841 164.899 cv
44.3691 164.899 44.0669 165.025 43.8442 165.248 cv
43.6216 165.471 43.4961 165.772 43.4961 166.088 cv
43.4961 166.402 43.6216 166.705 43.8442 166.928 cv
44.0669 167.15 44.3691 167.275 44.6841 167.275 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
44.6841 167.275 mo
44.999 167.275 45.3013 167.15 45.5239 166.928 cv
45.7466 166.705 45.8721 166.402 45.8721 166.088 cv
45.8721 165.772 45.7466 165.471 45.5239 165.248 cv
45.3013 165.025 44.999 164.899 44.6841 164.899 cv
44.3691 164.899 44.0669 165.025 43.8442 165.248 cv
43.6216 165.471 43.4961 165.772 43.4961 166.088 cv
43.4961 166.402 43.6216 166.705 43.8442 166.928 cv
44.0669 167.15 44.3691 167.275 44.6841 167.275 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
48.2344 163.727 mo
51.6729 163.727 li
51.6729 160.289 li
48.2344 160.289 li
48.2344 163.727 li
cp
clp
49.9541 163.195 mo
50.269 163.195 50.5713 163.071 50.7939 162.848 cv
51.0166 162.625 51.1416 162.323 51.1416 162.008 cv
51.1416 161.692 51.0166 161.391 50.7939 161.168 cv
50.5713 160.945 50.269 160.82 49.9541 160.82 cv
49.6387 160.82 49.3364 160.945 49.1138 161.168 cv
48.8916 161.391 48.7661 161.692 48.7661 162.008 cv
48.7661 162.323 48.8916 162.625 49.1138 162.848 cv
49.3364 163.071 49.6387 163.195 49.9541 163.195 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
49.9541 163.195 mo
50.269 163.195 50.5713 163.071 50.7939 162.848 cv
51.0166 162.625 51.1416 162.323 51.1416 162.008 cv
51.1416 161.692 51.0166 161.391 50.7939 161.168 cv
50.5713 160.945 50.269 160.82 49.9541 160.82 cv
49.6387 160.82 49.3364 160.945 49.1138 161.168 cv
48.8916 161.391 48.7661 161.692 48.7661 162.008 cv
48.7661 162.323 48.8916 162.625 49.1138 162.848 cv
49.3364 163.071 49.6387 163.195 49.9541 163.195 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
58.7749 155.567 mo
62.2134 155.567 li
62.2134 152.128 li
58.7749 152.128 li
58.7749 155.567 li
cp
clp
60.4937 155.035 mo
60.8091 155.035 61.1113 154.911 61.334 154.688 cv
61.5562 154.465 61.6816 154.163 61.6816 153.848 cv
61.6816 153.532 61.5562 153.23 61.334 153.008 cv
61.1113 152.785 60.8091 152.66 60.4937 152.66 cv
60.1787 152.66 59.8765 152.785 59.6538 153.008 cv
59.4312 153.23 59.3062 153.532 59.3062 153.848 cv
59.3062 154.163 59.4312 154.465 59.6538 154.688 cv
59.8765 154.911 60.1787 155.035 60.4937 155.035 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
60.4937 155.035 mo
60.8091 155.035 61.1113 154.911 61.334 154.688 cv
61.5562 154.465 61.6816 154.163 61.6816 153.848 cv
61.6816 153.532 61.5562 153.23 61.334 153.008 cv
61.1113 152.785 60.8091 152.66 60.4937 152.66 cv
60.1787 152.66 59.8765 152.785 59.6538 153.008 cv
59.4312 153.23 59.3062 153.532 59.3062 153.848 cv
59.3062 154.163 59.4312 154.465 59.6538 154.688 cv
59.8765 154.911 60.1787 155.035 60.4937 155.035 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
227.415 25.0068 mo
230.854 25.0068 li
230.854 21.5684 li
227.415 21.5684 li
227.415 25.0068 li
cp
clp
229.134 24.4756 mo
229.449 24.4756 229.751 24.3506 229.974 24.1274 cv
230.197 23.9048 230.322 23.6025 230.322 23.2876 cv
230.322 22.9727 230.197 22.6704 229.974 22.4478 cv
229.751 22.2251 229.449 22.0996 229.134 22.0996 cv
228.819 22.0996 228.517 22.2251 228.293 22.4478 cv
228.072 22.6704 227.946 22.9727 227.946 23.2876 cv
227.946 23.6025 228.072 23.9048 228.293 24.1274 cv
228.517 24.3506 228.819 24.4756 229.134 24.4756 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
229.134 24.4756 mo
229.449 24.4756 229.751 24.3506 229.974 24.1274 cv
230.197 23.9048 230.322 23.6025 230.322 23.2876 cv
230.322 22.9727 230.197 22.6704 229.974 22.4478 cv
229.751 22.2251 229.449 22.0996 229.134 22.0996 cv
228.819 22.0996 228.517 22.2251 228.293 22.4478 cv
228.072 22.6704 227.946 22.9727 227.946 23.2876 cv
227.946 23.6025 228.072 23.9048 228.293 24.1274 cv
228.517 24.3506 228.819 24.4756 229.134 24.4756 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
232.685 20.9268 mo
236.124 20.9268 li
236.124 17.4883 li
232.685 17.4883 li
232.685 20.9268 li
cp
clp
234.404 20.3955 mo
234.719 20.3955 235.021 20.2705 235.244 20.0479 cv
235.467 19.8252 235.591 19.5229 235.591 19.208 cv
235.591 18.8926 235.467 18.5903 235.244 18.3677 cv
235.021 18.1445 234.719 18.02 234.404 18.02 cv
234.088 18.02 233.787 18.1445 233.564 18.3677 cv
233.341 18.5903 233.216 18.8926 233.216 19.208 cv
233.216 19.5229 233.341 19.8252 233.564 20.0479 cv
233.787 20.2705 234.088 20.3955 234.404 20.3955 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
234.404 20.3955 mo
234.719 20.3955 235.021 20.2705 235.244 20.0479 cv
235.467 19.8252 235.591 19.5229 235.591 19.208 cv
235.591 18.8926 235.467 18.5903 235.244 18.3677 cv
235.021 18.1445 234.719 18.02 234.404 18.02 cv
234.088 18.02 233.787 18.1445 233.564 18.3677 cv
233.341 18.5903 233.216 18.8926 233.216 19.208 cv
233.216 19.5229 233.341 19.8252 233.564 20.0479 cv
233.787 20.2705 234.088 20.3955 234.404 20.3955 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
237.955 16.8467 mo
241.393 16.8467 li
241.393 13.4082 li
237.955 13.4082 li
237.955 16.8467 li
cp
clp
239.673 16.3154 mo
239.989 16.3154 240.292 16.1904 240.513 15.9678 cv
240.737 15.7451 240.862 15.4429 240.862 15.1279 cv
240.862 14.8125 240.737 14.5103 240.513 14.2876 cv
240.292 14.0654 239.989 13.9399 239.673 13.9399 cv
239.359 13.9399 239.057 14.0654 238.833 14.2876 cv
238.611 14.5103 238.487 14.8125 238.487 15.1279 cv
238.487 15.4429 238.611 15.7451 238.833 15.9678 cv
239.057 16.1904 239.359 16.3154 239.673 16.3154 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
239.673 16.3154 mo
239.989 16.3154 240.292 16.1904 240.513 15.9678 cv
240.737 15.7451 240.862 15.4429 240.862 15.1279 cv
240.862 14.8125 240.737 14.5103 240.513 14.2876 cv
240.292 14.0654 239.989 13.9399 239.673 13.9399 cv
239.359 13.9399 239.057 14.0654 238.833 14.2876 cv
238.611 14.5103 238.487 14.8125 238.487 15.1279 cv
238.487 15.4429 238.611 15.7451 238.833 15.9678 cv
239.057 16.1904 239.359 16.3154 239.673 16.3154 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
243.225 12.7666 mo
246.663 12.7666 li
246.663 9.32861 li
243.225 9.32861 li
243.225 12.7666 li
cp
clp
244.944 12.2354 mo
245.259 12.2354 245.561 12.1104 245.784 11.8877 cv
246.006 11.665 246.131 11.3628 246.131 11.0479 cv
246.131 10.7324 246.006 10.4307 245.784 10.2075 cv
245.561 9.98535 245.259 9.85986 244.944 9.85986 cv
244.628 9.85986 244.327 9.98535 244.104 10.2075 cv
243.881 10.4307 243.756 10.7324 243.756 11.0479 cv
243.756 11.3628 243.881 11.665 244.104 11.8877 cv
244.327 12.1104 244.628 12.2354 244.944 12.2354 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
244.944 12.2354 mo
245.259 12.2354 245.561 12.1104 245.784 11.8877 cv
246.006 11.665 246.131 11.3628 246.131 11.0479 cv
246.131 10.7324 246.006 10.4307 245.784 10.2075 cv
245.561 9.98535 245.259 9.85986 244.944 9.85986 cv
244.628 9.85986 244.327 9.98535 244.104 10.2075 cv
243.881 10.4307 243.756 10.7324 243.756 11.0479 cv
243.756 11.3628 243.881 11.665 244.104 11.8877 cv
244.327 12.1104 244.628 12.2354 244.944 12.2354 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
248.495 8.68652 mo
251.933 8.68652 li
251.933 5.24854 li
248.495 5.24854 li
248.495 8.68652 li
cp
clp
250.214 8.15576 mo
250.529 8.15576 250.831 8.03027 251.054 7.80762 cv
251.277 7.58496 251.402 7.28271 251.402 6.96777 cv
251.402 6.65283 251.277 6.35059 251.054 6.12793 cv
250.831 5.90479 250.529 5.77979 250.214 5.77979 cv
249.899 5.77979 249.597 5.90479 249.374 6.12793 cv
249.151 6.35059 249.026 6.65283 249.026 6.96777 cv
249.026 7.28271 249.151 7.58496 249.374 7.80762 cv
249.597 8.03027 249.899 8.15576 250.214 8.15576 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
250.214 8.15576 mo
250.529 8.15576 250.831 8.03027 251.054 7.80762 cv
251.277 7.58496 251.402 7.28271 251.402 6.96777 cv
251.402 6.65283 251.277 6.35059 251.054 6.12793 cv
250.831 5.90479 250.529 5.77979 250.214 5.77979 cv
249.899 5.77979 249.597 5.90479 249.374 6.12793 cv
249.151 6.35059 249.026 6.65283 249.026 6.96777 cv
249.026 7.28271 249.151 7.58496 249.374 7.80762 cv
249.597 8.03027 249.899 8.15576 250.214 8.15576 cv
cp
0 0 0 1 cmyk
@
grestore
18.334 186.488 mo
18.334 184.362 li
18.334 186.488 li
cp
0 0 0 1 cmyk
f
.265625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.334 186.487 mo
18.334 184.362 li
@
18.334 5.0127 mo
18.334 2.8877 li
18.334 5.0127 li
cp
f
18.334 2.8877 mo
18.334 5.0127 li
@
18.7549 189.227 mo
18.4297 189.227 18.1875 189.387 18.022 189.706 cv
17.856 190.024 17.7798 190.502 17.7798 191.139 cv
17.7798 191.778 17.856 192.255 18.022 192.575 cv
18.1875 192.893 18.4297 193.052 18.7549 193.052 cv
19.0801 193.052 19.3223 192.893 19.4883 192.575 cv
19.6475 192.255 19.7305 191.778 19.7305 191.139 cv
19.7305 190.502 19.6475 190.024 19.4883 189.706 cv
19.3223 189.387 19.0801 189.227 18.7549 189.227 cv
18.7549 188.73 mo
19.2715 188.73 19.6665 188.94 19.9473 189.348 cv
20.2212 189.762 20.3613 190.362 20.3613 191.139 cv
20.3613 191.924 20.2212 192.523 19.9473 192.931 cv
19.6665 193.339 19.2715 193.543 18.7549 193.543 cv
18.2324 193.543 17.8306 193.339 17.5566 192.931 cv
17.2822 192.523 17.1484 191.924 17.1484 191.139 cv
17.1484 190.362 17.2822 189.762 17.5566 189.348 cv
17.8306 188.94 18.2324 188.73 18.7549 188.73 cv
f
44.6841 186.487 mo
44.6841 184.362 li
f
44.6841 186.487 mo
44.6841 184.362 li
@
44.6841 2.8877 mo
44.6841 5.0127 li
f
44.6841 2.8877 mo
44.6841 5.0127 li
@
43.8657 188.813 mo
46.333 188.813 li
46.333 189.342 li
44.4395 189.342 li
44.4395 190.483 li
44.5288 190.452 44.6245 190.426 44.7139 190.414 cv
44.8032 190.401 44.8984 190.387 44.9878 190.387 cv
45.5044 190.387 45.9121 190.534 46.2183 190.815 cv
46.5244 191.102 46.6772 191.484 46.6772 191.968 cv
46.6772 192.473 46.5181 192.861 46.2056 193.135 cv
45.8931 193.409 45.4531 193.543 44.8921 193.543 cv
44.6948 193.543 44.4971 193.524 44.293 193.499 cv
44.0889 193.467 43.8848 193.422 43.6685 193.352 cv
43.6685 192.721 li
43.853 192.823 44.0444 192.899 44.2485 192.95 cv
44.4458 193 44.6563 193.02 44.8794 193.02 cv
45.2363 193.02 45.5234 192.931 45.7339 192.741 cv
45.9375 192.548 46.0459 192.293 46.0459 191.968 cv
46.0459 191.649 45.9375 191.395 45.7339 191.204 cv
45.5234 191.012 45.2363 190.917 44.8794 190.917 cv
44.7139 190.917 44.5415 190.936 44.376 190.974 cv
44.21 191.012 44.0381 191.069 43.8657 191.147 cv
43.8657 188.813 li
f
71.0342 186.487 mo
71.0342 184.362 li
f
71.0342 186.487 mo
71.0342 184.362 li
@
71.0342 2.8877 mo
71.0342 5.0127 li
f
71.0342 2.8877 mo
71.0342 5.0127 li
@
68.3257 192.931 mo
69.3521 192.931 li
69.3521 189.387 li
68.2363 189.61 li
68.2363 189.036 li
69.3457 188.813 li
69.9766 188.813 li
69.9766 192.931 li
71.0029 192.931 li
71.0029 193.459 li
68.3257 193.459 li
68.3257 192.931 li
cp
f
73.6167 189.227 mo
73.2915 189.227 73.0493 189.387 72.8838 189.706 cv
72.7178 190.024 72.6416 190.502 72.6416 191.139 cv
72.6416 191.778 72.7178 192.255 72.8838 192.575 cv
73.0493 192.893 73.2915 193.052 73.6167 193.052 cv
73.9419 193.052 74.1841 192.893 74.3501 192.575 cv
74.5093 192.255 74.5923 191.778 74.5923 191.139 cv
74.5923 190.502 74.5093 190.024 74.3501 189.706 cv
74.1841 189.387 73.9419 189.227 73.6167 189.227 cv
73.6167 188.73 mo
74.1333 188.73 74.5283 188.94 74.8091 189.348 cv
75.083 189.762 75.2231 190.362 75.2231 191.139 cv
75.2231 191.924 75.083 192.523 74.8091 192.931 cv
74.5283 193.339 74.1333 193.543 73.6167 193.543 cv
73.0942 193.543 72.6924 193.339 72.4185 192.931 cv
72.144 192.523 72.0103 191.924 72.0103 191.139 cv
72.0103 190.362 72.144 189.762 72.4185 189.348 cv
72.6924 188.94 73.0942 188.73 73.6167 188.73 cv
f
97.3838 186.487 mo
97.3838 184.362 li
f
97.3838 186.487 mo
97.3838 184.362 li
@
97.3838 2.8877 mo
97.3838 5.0127 li
f
97.3838 2.8877 mo
97.3838 5.0127 li
@
94.7422 192.931 mo
95.7686 192.931 li
95.7686 189.387 li
94.6528 189.61 li
94.6528 189.036 li
95.7622 188.813 li
96.3931 188.813 li
96.3931 192.931 li
97.4194 192.931 li
97.4194 193.459 li
94.7422 193.459 li
94.7422 192.931 li
cp
f
98.6948 188.813 mo
101.162 188.813 li
101.162 189.342 li
99.2681 189.342 li
99.2681 190.483 li
99.3574 190.452 99.4531 190.426 99.5425 190.414 cv
99.6318 190.401 99.7275 190.387 99.8164 190.387 cv
100.333 190.387 100.741 190.534 101.047 190.815 cv
101.353 191.102 101.506 191.484 101.506 191.968 cv
101.506 192.473 101.347 192.861 101.034 193.135 cv
100.722 193.409 100.282 193.543 99.7212 193.543 cv
99.5234 193.543 99.3257 193.524 99.1216 193.499 cv
98.9175 193.467 98.7139 193.422 98.4971 193.352 cv
98.4971 192.721 li
98.6816 192.823 98.873 192.899 99.0771 192.95 cv
99.2749 193 99.4849 193.02 99.708 193.02 cv
100.065 193.02 100.352 192.931 100.563 192.741 cv
100.767 192.548 100.875 192.293 100.875 191.968 cv
100.875 191.649 100.767 191.395 100.563 191.204 cv
100.352 191.012 100.065 190.917 99.708 190.917 cv
99.5425 190.917 99.3701 190.936 99.2046 190.974 cv
99.0386 191.012 98.8667 191.069 98.6948 191.147 cv
98.6948 188.813 li
f
123.734 186.487 mo
123.734 184.362 li
f
123.734 186.487 mo
123.734 184.362 li
@
123.734 2.8877 mo
123.734 5.0127 li
f
123.734 2.8877 mo
123.734 5.0127 li
@
121.343 192.931 mo
123.536 192.931 li
123.536 193.459 li
120.584 193.459 li
120.584 192.931 li
120.82 192.689 121.146 192.358 121.56 191.936 cv
121.968 191.522 122.229 191.254 122.337 191.133 cv
122.542 190.911 122.682 190.719 122.758 190.559 cv
122.834 190.407 122.879 190.247 122.879 190.094 cv
122.879 189.852 122.79 189.648 122.618 189.495 cv
122.446 189.342 122.223 189.258 121.942 189.258 cv
121.745 189.258 121.534 189.297 121.317 189.361 cv
121.101 189.431 120.865 189.534 120.616 189.673 cv
120.616 189.036 li
120.871 188.934 121.107 188.858 121.324 188.806 cv
121.541 188.756 121.745 188.731 121.93 188.731 cv
122.408 188.731 122.79 188.851 123.077 189.093 cv
123.364 189.335 123.51 189.655 123.51 190.055 cv
123.51 190.247 123.472 190.432 123.402 190.598 cv
123.332 190.77 123.205 190.973 123.013 191.204 cv
122.962 191.267 122.796 191.44 122.516 191.726 cv
122.235 192.013 121.847 192.415 121.343 192.931 cv
f
126.201 189.227 mo
125.875 189.227 125.633 189.387 125.468 189.706 cv
125.302 190.024 125.226 190.502 125.226 191.139 cv
125.226 191.778 125.302 192.255 125.468 192.575 cv
125.633 192.893 125.875 193.052 126.201 193.052 cv
126.526 193.052 126.768 192.893 126.934 192.575 cv
127.093 192.255 127.176 191.778 127.176 191.139 cv
127.176 190.502 127.093 190.024 126.934 189.706 cv
126.768 189.387 126.526 189.227 126.201 189.227 cv
126.201 188.73 mo
126.717 188.73 127.112 188.94 127.393 189.348 cv
127.667 189.762 127.807 190.362 127.807 191.139 cv
127.807 191.924 127.667 192.523 127.393 192.931 cv
127.112 193.339 126.717 193.543 126.201 193.543 cv
125.678 193.543 125.276 193.339 125.002 192.931 cv
124.728 192.523 124.594 191.924 124.594 191.139 cv
124.594 190.362 124.728 189.762 125.002 189.348 cv
125.276 188.94 125.678 188.73 126.201 188.73 cv
f
150.083 186.487 mo
150.083 184.362 li
f
150.083 186.487 mo
150.083 184.362 li
@
150.083 2.8877 mo
150.083 5.0127 li
f
150.083 2.8877 mo
150.083 5.0127 li
@
147.759 192.931 mo
149.952 192.931 li
149.952 193.459 li
147 193.459 li
147 192.931 li
147.237 192.689 147.561 192.358 147.976 191.936 cv
148.384 191.522 148.645 191.254 148.753 191.133 cv
148.958 190.911 149.098 190.719 149.174 190.559 cv
149.251 190.407 149.296 190.247 149.296 190.094 cv
149.296 189.852 149.207 189.648 149.034 189.495 cv
148.862 189.342 148.639 189.258 148.358 189.258 cv
148.161 189.258 147.951 189.297 147.734 189.361 cv
147.517 189.431 147.282 189.534 147.033 189.673 cv
147.033 189.036 li
147.288 188.934 147.524 188.858 147.74 188.806 cv
147.957 188.756 148.161 188.731 148.345 188.731 cv
148.824 188.731 149.207 188.851 149.494 189.093 cv
149.781 189.335 149.926 189.655 149.926 190.055 cv
149.926 190.247 149.889 190.432 149.818 190.598 cv
149.749 190.77 149.621 190.973 149.43 191.204 cv
149.378 191.267 149.212 191.44 148.932 191.726 cv
148.652 192.013 148.263 192.415 147.759 192.931 cv
f
151.278 188.813 mo
153.746 188.813 li
153.746 189.342 li
151.852 189.342 li
151.852 190.483 li
151.941 190.452 152.038 190.426 152.126 190.414 cv
152.215 190.401 152.311 190.387 152.4 190.387 cv
152.917 190.387 153.325 190.534 153.631 190.815 cv
153.936 191.102 154.089 191.484 154.089 191.968 cv
154.089 192.473 153.93 192.861 153.618 193.135 cv
153.305 193.409 152.866 193.543 152.305 193.543 cv
152.108 193.543 151.91 193.524 151.706 193.499 cv
151.501 193.467 151.297 193.422 151.081 193.352 cv
151.081 192.721 li
151.266 192.823 151.457 192.899 151.662 192.95 cv
151.858 193 152.069 193.02 152.292 193.02 cv
152.649 193.02 152.936 192.931 153.147 192.741 cv
153.35 192.548 153.458 192.293 153.458 191.968 cv
153.458 191.649 153.35 191.395 153.147 191.204 cv
152.936 191.012 152.649 190.917 152.292 190.917 cv
152.126 190.917 151.954 190.936 151.789 190.974 cv
151.623 191.012 151.451 191.069 151.278 191.147 cv
151.278 188.813 li
f
176.434 186.487 mo
176.434 184.362 li
f
176.434 186.487 mo
176.434 184.362 li
@
176.434 2.8877 mo
176.434 5.0127 li
f
176.434 2.8877 mo
176.434 5.0127 li
@
175.419 190.956 mo
175.719 191.018 175.956 191.153 176.121 191.356 cv
176.287 191.561 176.376 191.815 176.376 192.109 cv
176.376 192.568 176.216 192.924 175.904 193.173 cv
175.585 193.422 175.139 193.543 174.559 193.543 cv
174.362 193.543 174.157 193.524 173.954 193.486 cv
173.75 193.454 173.533 193.397 173.316 193.32 cv
173.316 192.715 li
173.488 192.817 173.679 192.893 173.889 192.944 cv
174.093 192.995 174.31 193.02 174.541 193.02 cv
174.935 193.02 175.235 192.944 175.439 192.792 cv
175.643 192.637 175.75 192.409 175.75 192.109 cv
175.75 191.84 175.656 191.624 175.464 191.471 cv
175.273 191.319 175.005 191.235 174.661 191.235 cv
174.12 191.235 li
174.12 190.719 li
174.686 190.719 li
174.993 190.719 175.229 190.662 175.394 190.534 cv
175.56 190.413 175.643 190.235 175.643 189.999 cv
175.643 189.762 175.553 189.579 175.387 189.45 cv
175.215 189.323 174.973 189.259 174.661 189.259 cv
174.489 189.259 174.304 189.278 174.106 189.317 cv
173.909 189.355 173.692 189.413 173.457 189.489 cv
173.457 188.928 li
173.692 188.864 173.915 188.813 174.125 188.782 cv
174.33 188.749 174.527 188.73 174.719 188.73 cv
175.19 188.73 175.566 188.838 175.847 189.055 cv
176.127 189.272 176.268 189.565 176.268 189.935 cv
176.268 190.19 176.191 190.407 176.044 190.584 cv
175.898 190.764 175.687 190.891 175.419 190.956 cv
f
178.913 189.227 mo
178.588 189.227 178.346 189.387 178.18 189.706 cv
178.015 190.024 177.938 190.502 177.938 191.139 cv
177.938 191.778 178.015 192.255 178.18 192.575 cv
178.346 192.893 178.588 193.052 178.913 193.052 cv
179.238 193.052 179.48 192.893 179.646 192.575 cv
179.806 192.255 179.888 191.778 179.888 191.139 cv
179.888 190.502 179.806 190.024 179.646 189.706 cv
179.48 189.387 179.238 189.227 178.913 189.227 cv
178.913 188.73 mo
179.429 188.73 179.825 188.94 180.105 189.348 cv
180.379 189.762 180.52 190.362 180.52 191.139 cv
180.52 191.924 180.379 192.523 180.105 192.931 cv
179.825 193.339 179.429 193.543 178.913 193.543 cv
178.391 193.543 177.989 193.339 177.714 192.931 cv
177.441 192.523 177.307 191.924 177.307 191.139 cv
177.307 190.362 177.441 189.762 177.714 189.348 cv
177.989 188.94 178.391 188.73 178.913 188.73 cv
f
202.784 186.487 mo
202.784 184.362 li
f
202.784 186.487 mo
202.784 184.362 li
@
202.784 2.8877 mo
202.784 5.0127 li
f
202.784 2.8877 mo
202.784 5.0127 li
@
201.836 190.956 mo
202.135 191.018 202.372 191.153 202.537 191.356 cv
202.704 191.561 202.792 191.815 202.792 192.109 cv
202.792 192.568 202.633 192.924 202.321 193.173 cv
202.001 193.422 201.555 193.543 200.975 193.543 cv
200.778 193.543 200.574 193.524 200.37 193.486 cv
200.166 193.454 199.949 193.397 199.733 193.32 cv
199.733 192.715 li
199.904 192.817 200.096 192.893 200.306 192.944 cv
200.51 192.995 200.727 193.02 200.957 193.02 cv
201.352 193.02 201.651 192.944 201.855 192.792 cv
202.059 192.637 202.167 192.409 202.167 192.109 cv
202.167 191.84 202.072 191.624 201.88 191.471 cv
201.69 191.319 201.421 191.235 201.077 191.235 cv
200.536 191.235 li
200.536 190.719 li
201.103 190.719 li
201.409 190.719 201.645 190.662 201.811 190.534 cv
201.976 190.413 202.059 190.235 202.059 189.999 cv
202.059 189.762 201.97 189.579 201.804 189.45 cv
201.632 189.323 201.39 189.259 201.077 189.259 cv
200.906 189.259 200.72 189.278 200.522 189.317 cv
200.326 189.355 200.109 189.413 199.873 189.489 cv
199.873 188.928 li
200.109 188.864 200.332 188.813 200.542 188.782 cv
200.746 188.749 200.943 188.73 201.135 188.73 cv
201.606 188.73 201.982 188.838 202.263 189.055 cv
202.543 189.272 202.684 189.565 202.684 189.935 cv
202.684 190.19 202.608 190.407 202.46 190.584 cv
202.314 190.764 202.104 190.891 201.836 190.956 cv
f
203.991 188.813 mo
206.458 188.813 li
206.458 189.342 li
204.565 189.342 li
204.565 190.483 li
204.654 190.452 204.75 190.426 204.838 190.414 cv
204.928 190.401 205.024 190.387 205.113 190.387 cv
205.629 190.387 206.038 190.534 206.343 190.815 cv
206.649 191.102 206.802 191.484 206.802 191.968 cv
206.802 192.473 206.643 192.861 206.331 193.135 cv
206.018 193.409 205.579 193.543 205.017 193.543 cv
204.82 193.543 204.622 193.524 204.417 193.499 cv
204.213 193.467 204.01 193.422 203.793 193.352 cv
203.793 192.721 li
203.979 192.823 204.169 192.899 204.374 192.95 cv
204.571 193 204.782 193.02 205.004 193.02 cv
205.362 193.02 205.648 192.931 205.859 192.741 cv
206.063 192.548 206.171 192.293 206.171 191.968 cv
206.171 191.649 206.063 191.395 205.859 191.204 cv
205.648 191.012 205.362 190.917 205.004 190.917 cv
204.838 190.917 204.667 190.936 204.5 190.974 cv
204.335 191.012 204.163 191.069 203.991 191.147 cv
203.991 188.813 li
f
229.134 186.487 mo
229.134 184.362 li
f
229.134 186.487 mo
229.134 184.362 li
@
229.134 2.8877 mo
229.134 5.0127 li
f
229.134 2.8877 mo
229.134 5.0127 li
@
227.854 189.362 mo
226.266 191.84 li
227.854 191.84 li
227.854 189.362 li
227.688 188.813 mo
228.479 188.813 li
228.479 191.84 li
229.142 191.84 li
229.142 192.364 li
228.479 192.364 li
228.479 193.46 li
227.854 193.46 li
227.854 192.364 li
225.756 192.364 li
225.756 191.758 li
227.688 188.813 li
cp
f
231.526 189.227 mo
231.201 189.227 230.958 189.387 230.792 189.706 cv
230.627 190.024 230.55 190.502 230.55 191.139 cv
230.55 191.778 230.627 192.255 230.792 192.575 cv
230.958 192.893 231.201 193.052 231.526 193.052 cv
231.851 193.052 232.093 192.893 232.259 192.575 cv
232.418 192.255 232.501 191.778 232.501 191.139 cv
232.501 190.502 232.418 190.024 232.259 189.706 cv
232.093 189.387 231.851 189.227 231.526 189.227 cv
231.526 188.73 mo
232.042 188.73 232.438 188.94 232.718 189.348 cv
232.993 189.762 233.132 190.362 233.132 191.139 cv
233.132 191.924 232.993 192.523 232.718 192.931 cv
232.438 193.339 232.042 193.543 231.526 193.543 cv
231.003 193.543 230.602 193.339 230.328 192.931 cv
230.053 192.523 229.919 191.924 229.919 191.139 cv
229.919 190.362 230.053 189.762 230.328 189.348 cv
230.602 188.94 231.003 188.73 231.526 188.73 cv
f
255.484 186.487 mo
255.484 184.362 li
f
255.484 186.487 mo
255.484 184.362 li
@
255.484 2.8877 mo
255.484 5.0127 li
f
255.484 2.8877 mo
255.484 5.0127 li
@
254.27 189.362 mo
252.683 191.84 li
254.27 191.84 li
254.27 189.362 li
254.104 188.813 mo
254.895 188.813 li
254.895 191.84 li
255.558 191.84 li
255.558 192.364 li
254.895 192.364 li
254.895 193.46 li
254.27 193.46 li
254.27 192.364 li
252.173 192.364 li
252.173 191.758 li
254.104 188.813 li
cp
f
256.604 188.813 mo
259.071 188.813 li
259.071 189.342 li
257.177 189.342 li
257.177 190.483 li
257.267 190.452 257.362 190.426 257.452 190.414 cv
257.541 190.401 257.636 190.387 257.726 190.387 cv
258.242 190.387 258.65 190.534 258.956 190.815 cv
259.262 191.102 259.416 191.484 259.416 191.968 cv
259.416 192.473 259.255 192.861 258.943 193.135 cv
258.63 193.409 258.191 193.543 257.63 193.543 cv
257.432 193.543 257.235 193.524 257.031 193.499 cv
256.827 193.467 256.623 193.422 256.406 193.352 cv
256.406 192.721 li
256.591 192.823 256.782 192.899 256.986 192.95 cv
257.184 193 257.394 193.02 257.618 193.02 cv
257.974 193.02 258.261 192.931 258.471 192.741 cv
258.675 192.548 258.784 192.293 258.784 191.968 cv
258.784 191.649 258.675 191.395 258.471 191.204 cv
258.261 191.012 257.974 190.917 257.618 190.917 cv
257.452 190.917 257.279 190.936 257.114 190.974 cv
256.948 191.012 256.776 191.069 256.604 191.147 cv
256.604 188.813 li
f
66.6948 198.162 mo
66.6948 199.908 li
67.4854 199.908 li
67.7788 199.908 68.002 199.837 68.1611 199.684 cv
68.3208 199.532 68.4033 199.315 68.4033 199.036 cv
68.4033 198.754 68.3208 198.543 68.1611 198.391 cv
68.002 198.239 67.7788 198.162 67.4854 198.162 cv
66.6948 198.162 li
66.064 197.645 mo
67.4854 197.645 li
68.002 197.645 68.397 197.766 68.665 198.001 cv
68.9326 198.239 69.0664 198.583 69.0664 199.036 cv
69.0664 199.495 68.9326 199.844 68.665 200.075 cv
68.397 200.31 68.002 200.424 67.4854 200.424 cv
66.6948 200.424 li
66.6948 202.292 li
66.064 202.292 li
66.064 197.645 li
f
72.8662 200.405 mo
72.8662 200.686 li
70.2334 200.686 li
70.2588 201.081 70.3735 201.387 70.5903 201.59 cv
70.8008 201.795 71.0938 201.897 71.4766 201.897 cv
71.6934 201.897 71.9097 201.872 72.1138 201.821 cv
72.3179 201.77 72.5283 201.686 72.7324 201.572 cv
72.7324 202.114 li
72.5283 202.204 72.3179 202.274 72.1011 202.311 cv
71.8843 202.35 71.6611 202.375 71.4443 202.375 cv
70.8833 202.375 70.4438 202.215 70.1187 201.897 cv
69.7935 201.579 69.6338 201.139 69.6338 200.584 cv
69.6338 200.016 69.7871 199.564 70.0933 199.226 cv
70.3989 198.895 70.8198 198.722 71.3423 198.722 cv
71.8145 198.722 72.1841 198.875 72.458 199.174 cv
72.7261 199.481 72.8662 199.889 72.8662 200.405 cv
72.2925 200.239 mo
72.2861 199.927 72.1968 199.678 72.0313 199.487 cv
71.8589 199.302 71.6294 199.208 71.3491 199.208 cv
71.0303 199.208 70.7749 199.302 70.584 199.481 cv
70.3926 199.659 70.2778 199.915 70.2524 200.239 cv
72.2925 200.239 li
f
74.3706 197.817 mo
74.3706 198.805 li
75.5503 198.805 li
75.5503 199.251 li
74.3706 199.251 li
74.3706 201.145 li
74.3706 201.432 74.4092 201.617 74.4854 201.693 cv
74.562 201.776 74.7212 201.814 74.9634 201.814 cv
75.5503 201.814 li
75.5503 202.292 li
74.9634 202.292 li
74.5171 202.292 74.2114 202.209 74.0454 202.043 cv
73.8799 201.877 73.7969 201.579 73.7969 201.145 cv
73.7969 199.251 li
73.376 199.251 li
73.376 198.805 li
73.7969 198.805 li
73.7969 197.817 li
74.3706 197.817 li
f
79.2856 200.405 mo
79.2856 200.686 li
76.6528 200.686 li
76.6782 201.081 76.793 201.387 77.0098 201.59 cv
77.2202 201.795 77.5137 201.897 77.896 201.897 cv
78.1128 201.897 78.3296 201.872 78.5337 201.821 cv
78.7373 201.77 78.9478 201.686 79.1519 201.572 cv
79.1519 202.114 li
78.9478 202.204 78.7373 202.274 78.521 202.311 cv
78.3042 202.35 78.0811 202.375 77.8643 202.375 cv
77.3032 202.375 76.8633 202.215 76.5381 201.897 cv
76.2129 201.579 76.0537 201.139 76.0537 200.584 cv
76.0537 200.016 76.2065 199.564 76.5127 199.226 cv
76.8188 198.895 77.2393 198.722 77.7622 198.722 cv
78.2339 198.722 78.6035 198.875 78.8779 199.174 cv
79.1455 199.481 79.2856 199.889 79.2856 200.405 cv
78.7119 200.239 mo
78.7056 199.927 78.6162 199.678 78.4507 199.487 cv
78.2783 199.302 78.0488 199.208 77.7686 199.208 cv
77.4497 199.208 77.1948 199.302 77.0034 199.481 cv
76.8125 199.659 76.6978 199.915 76.6719 200.239 cv
78.7119 200.239 li
f
82.2437 199.34 mo
82.1802 199.303 82.1099 199.277 82.0332 199.258 cv
81.957 199.245 81.874 199.233 81.7847 199.233 cv
81.4595 199.233 81.2109 199.34 81.0391 199.551 cv
80.8604 199.762 80.7773 200.061 80.7773 200.457 cv
80.7773 202.292 li
80.2036 202.292 li
80.2036 198.805 li
80.7773 198.805 li
80.7773 199.347 li
80.8921 199.137 81.0518 198.977 81.2427 198.875 cv
81.4341 198.774 81.6699 198.722 81.9507 198.722 cv
81.9888 198.722 82.0332 198.729 82.0845 198.729 cv
82.1289 198.735 82.1802 198.742 82.2437 198.754 cv
82.2437 199.34 li
f
85.5269 198.162 mo
85.5269 199.908 li
86.3174 199.908 li
86.6104 199.908 86.8335 199.837 86.9932 199.684 cv
87.1523 199.532 87.2354 199.315 87.2354 199.036 cv
87.2354 198.754 87.1523 198.543 86.9932 198.391 cv
86.8335 198.239 86.6104 198.162 86.3174 198.162 cv
85.5269 198.162 li
84.8955 197.645 mo
86.3174 197.645 li
86.8335 197.645 87.229 197.766 87.4966 198.001 cv
87.7642 198.239 87.8979 198.583 87.8979 199.036 cv
87.8979 199.495 87.7642 199.844 87.4966 200.075 cv
87.229 200.31 86.8335 200.424 86.3174 200.424 cv
85.5269 200.424 li
85.5269 202.292 li
84.8955 202.292 li
84.8955 197.645 li
f
88.7139 198.805 mo
89.2876 198.805 li
89.2876 202.292 li
88.7139 202.292 li
88.7139 198.805 li
cp
88.7139 197.448 mo
89.2876 197.448 li
89.2876 198.174 li
88.7139 198.174 li
88.7139 197.448 li
cp
f
91.041 201.77 mo
91.041 203.612 li
90.4673 203.612 li
90.4673 198.805 li
91.041 198.805 li
91.041 199.334 li
91.1558 199.129 91.3091 198.977 91.4937 198.875 cv
91.6787 198.773 91.9019 198.723 92.1567 198.723 cv
92.5776 198.723 92.9219 198.895 93.1895 199.226 cv
93.4512 199.564 93.585 200.004 93.585 200.552 cv
93.585 201.1 93.4512 201.547 93.1895 201.877 cv
92.9219 202.209 92.5776 202.375 92.1567 202.375 cv
91.9019 202.375 91.6787 202.325 91.4937 202.228 cv
91.3091 202.133 91.1558 201.98 91.041 201.77 cv
92.9922 200.552 mo
92.9922 200.131 92.9028 199.806 92.7305 199.564 cv
92.5522 199.322 92.3164 199.201 92.0166 199.201 cv
91.7104 199.201 91.4746 199.322 91.3027 199.564 cv
91.124 199.806 91.041 200.131 91.041 200.552 cv
91.041 200.973 91.124 201.304 91.3027 201.547 cv
91.4746 201.789 91.7104 201.904 92.0166 201.904 cv
92.3164 201.904 92.5522 201.789 92.7305 201.547 cv
92.9028 201.304 92.9922 200.973 92.9922 200.552 cv
f
97.5181 200.405 mo
97.5181 200.686 li
94.8853 200.686 li
94.9106 201.081 95.0254 201.387 95.2422 201.59 cv
95.4526 201.795 95.7461 201.897 96.1284 201.897 cv
96.3452 201.897 96.562 201.872 96.7661 201.821 cv
96.9697 201.77 97.1802 201.686 97.3843 201.572 cv
97.3843 202.114 li
97.1802 202.204 96.9697 202.274 96.7534 202.311 cv
96.5366 202.35 96.3135 202.375 96.0967 202.375 cv
95.5356 202.375 95.0957 202.215 94.7705 201.897 cv
94.4453 201.579 94.2861 201.139 94.2861 200.584 cv
94.2861 200.016 94.439 199.564 94.7451 199.226 cv
95.0513 198.895 95.4717 198.722 95.9946 198.722 cv
96.4663 198.722 96.8359 198.875 97.1104 199.174 cv
97.3779 199.481 97.5181 199.889 97.5181 200.405 cv
96.9443 200.239 mo
96.938 199.927 96.8486 199.678 96.6831 199.487 cv
96.5107 199.302 96.2813 199.208 96.001 199.208 cv
95.6821 199.208 95.4272 199.302 95.2358 199.481 cv
95.0444 199.659 94.9302 199.915 94.9043 200.239 cv
96.9443 200.239 li
f
100.476 199.34 mo
100.413 199.303 100.342 199.277 100.266 199.258 cv
100.189 199.245 100.106 199.233 100.017 199.233 cv
99.6919 199.233 99.4434 199.34 99.271 199.551 cv
99.0928 199.762 99.0098 200.061 99.0098 200.457 cv
99.0098 202.292 li
98.436 202.292 li
98.436 198.805 li
99.0098 198.805 li
99.0098 199.347 li
99.1245 199.137 99.2842 198.977 99.4751 198.875 cv
99.6665 198.774 99.9023 198.722 100.183 198.722 cv
100.221 198.722 100.266 198.729 100.317 198.729 cv
100.361 198.735 100.413 198.742 100.476 198.754 cv
100.476 199.34 li
f
103.657 201.77 mo
103.657 203.612 li
103.083 203.612 li
103.083 198.805 li
103.657 198.805 li
103.657 199.334 li
103.772 199.129 103.925 198.977 104.11 198.875 cv
104.294 198.773 104.518 198.723 104.773 198.723 cv
105.193 198.723 105.538 198.895 105.806 199.226 cv
106.067 199.564 106.201 200.004 106.201 200.552 cv
106.201 201.1 106.067 201.547 105.806 201.877 cv
105.538 202.209 105.193 202.375 104.773 202.375 cv
104.518 202.375 104.294 202.325 104.11 202.228 cv
103.925 202.133 103.772 201.98 103.657 201.77 cv
105.608 200.552 mo
105.608 200.131 105.519 199.806 105.347 199.564 cv
105.168 199.322 104.932 199.201 104.632 199.201 cv
104.327 199.201 104.091 199.322 103.918 199.564 cv
103.74 199.806 103.657 200.131 103.657 200.552 cv
103.657 200.973 103.74 201.304 103.918 201.547 cv
104.091 201.789 104.327 201.904 104.632 201.904 cv
104.932 201.904 105.168 201.789 105.347 201.547 cv
105.519 201.304 105.608 200.973 105.608 200.552 cv
f
107.151 198.805 mo
107.725 198.805 li
107.725 202.292 li
107.151 202.292 li
107.151 198.805 li
cp
107.151 197.448 mo
107.725 197.448 li
107.725 198.174 li
107.151 198.174 li
107.151 197.448 li
cp
f
111.435 198.94 mo
111.435 199.475 li
111.269 199.385 111.109 199.322 110.944 199.278 cv
110.778 199.233 110.619 199.208 110.453 199.208 cv
110.083 199.208 109.79 199.328 109.586 199.564 cv
109.382 199.799 109.28 200.131 109.28 200.552 cv
109.28 200.979 109.382 201.311 109.586 201.546 cv
109.79 201.782 110.083 201.897 110.453 201.897 cv
110.619 201.897 110.778 201.877 110.944 201.833 cv
111.109 201.788 111.269 201.718 111.435 201.629 cv
111.435 202.159 li
111.269 202.235 111.103 202.292 110.938 202.325 cv
110.765 202.356 110.581 202.375 110.389 202.375 cv
109.867 202.375 109.446 202.215 109.14 201.884 cv
108.827 201.559 108.674 201.114 108.674 200.552 cv
108.674 199.985 108.827 199.539 109.14 199.213 cv
109.452 198.887 109.879 198.723 110.427 198.723 cv
110.606 198.723 110.778 198.742 110.944 198.78 cv
111.109 198.817 111.275 198.87 111.435 198.94 cv
f
112.41 197.448 mo
112.984 197.448 li
112.984 200.31 li
114.692 198.805 li
115.425 198.805 li
113.577 200.437 li
115.502 202.292 li
114.756 202.292 li
112.984 200.59 li
112.984 202.292 li
112.41 202.292 li
112.41 197.448 li
cp
f
119.104 200.405 mo
119.104 200.686 li
116.471 200.686 li
116.497 201.081 116.611 201.387 116.828 201.59 cv
117.039 201.795 117.332 201.897 117.714 201.897 cv
117.931 201.897 118.147 201.872 118.352 201.821 cv
118.556 201.77 118.766 201.686 118.97 201.572 cv
118.97 202.114 li
118.766 202.204 118.556 202.274 118.339 202.311 cv
118.122 202.35 117.899 202.375 117.682 202.375 cv
117.121 202.375 116.681 202.215 116.356 201.897 cv
116.031 201.579 115.872 201.139 115.872 200.584 cv
115.872 200.016 116.025 199.564 116.331 199.226 cv
116.637 198.895 117.058 198.722 117.58 198.722 cv
118.052 198.722 118.422 198.875 118.696 199.174 cv
118.963 199.481 119.104 199.889 119.104 200.405 cv
118.53 200.239 mo
118.524 199.927 118.435 199.678 118.269 199.487 cv
118.097 199.302 117.867 199.208 117.586 199.208 cv
117.268 199.208 117.013 199.302 116.822 199.481 cv
116.63 199.659 116.516 199.915 116.49 200.239 cv
118.53 200.239 li
f
122.336 199.334 mo
122.336 197.447 li
122.91 197.447 li
122.91 202.292 li
122.336 202.292 li
122.336 201.77 li
122.215 201.979 122.062 202.133 121.877 202.228 cv
121.692 202.325 121.475 202.375 121.22 202.375 cv
120.8 202.375 120.456 202.209 120.188 201.877 cv
119.92 201.547 119.792 201.1 119.792 200.552 cv
119.792 200.004 119.92 199.564 120.188 199.226 cv
120.456 198.895 120.8 198.723 121.22 198.723 cv
121.475 198.723 121.692 198.773 121.877 198.875 cv
122.062 198.977 122.215 199.129 122.336 199.334 cv
120.385 200.552 mo
120.385 200.973 120.468 201.304 120.64 201.547 cv
120.813 201.789 121.055 201.904 121.361 201.904 cv
121.66 201.904 121.896 201.789 122.075 201.547 cv
122.247 201.304 122.336 200.973 122.336 200.552 cv
122.336 200.131 122.247 199.806 122.075 199.564 cv
121.896 199.322 121.66 199.201 121.361 199.201 cv
121.055 199.201 120.813 199.322 120.64 199.564 cv
120.468 199.806 120.385 200.131 120.385 200.552 cv
f
127.704 200.54 mo
127.238 200.54 126.919 200.596 126.741 200.699 cv
126.563 200.807 126.473 200.985 126.473 201.241 cv
126.473 201.444 126.537 201.61 126.671 201.725 cv
126.805 201.846 126.99 201.903 127.219 201.903 cv
127.538 201.903 127.793 201.795 127.984 201.565 cv
128.175 201.342 128.271 201.043 128.271 200.667 cv
128.271 200.54 li
127.704 200.54 li
128.845 200.303 mo
128.845 202.292 li
128.271 202.292 li
128.271 201.763 li
128.137 201.98 127.972 202.133 127.78 202.229 cv
127.589 202.325 127.347 202.375 127.066 202.375 cv
126.709 202.375 126.422 202.28 126.212 202.083 cv
126.001 201.884 125.899 201.617 125.899 201.279 cv
125.899 200.889 126.027 200.596 126.295 200.393 cv
126.556 200.195 126.945 200.092 127.468 200.092 cv
128.271 200.092 li
128.271 200.036 li
128.271 199.774 128.182 199.571 128.01 199.423 cv
127.837 199.284 127.595 199.208 127.283 199.208 cv
127.079 199.208 126.888 199.233 126.696 199.284 cv
126.505 199.334 126.327 199.405 126.155 199.494 cv
126.155 198.964 li
126.358 198.888 126.563 198.825 126.76 198.786 cv
126.958 198.749 127.149 198.722 127.34 198.722 cv
127.844 198.722 128.22 198.856 128.469 199.118 cv
128.717 199.379 128.845 199.774 128.845 200.303 cv
f
132.606 201.77 mo
132.606 203.612 li
132.032 203.612 li
132.032 198.805 li
132.606 198.805 li
132.606 199.334 li
132.721 199.129 132.874 198.977 133.059 198.875 cv
133.244 198.773 133.467 198.723 133.722 198.723 cv
134.143 198.723 134.487 198.895 134.754 199.226 cv
135.016 199.564 135.15 200.004 135.15 200.552 cv
135.15 201.1 135.016 201.547 134.754 201.877 cv
134.487 202.209 134.143 202.375 133.722 202.375 cv
133.467 202.375 133.244 202.325 133.059 202.228 cv
132.874 202.133 132.721 201.98 132.606 201.77 cv
134.557 200.552 mo
134.557 200.131 134.468 199.806 134.295 199.564 cv
134.117 199.322 133.88 199.201 133.582 199.201 cv
133.275 199.201 133.04 199.322 132.868 199.564 cv
132.689 199.806 132.606 200.131 132.606 200.552 cv
132.606 200.973 132.689 201.304 132.868 201.547 cv
133.04 201.789 133.275 201.904 133.582 201.904 cv
133.88 201.904 134.117 201.789 134.295 201.547 cv
134.468 201.304 134.557 200.973 134.557 200.552 cv
f
139.083 200.405 mo
139.083 200.686 li
136.45 200.686 li
136.476 201.081 136.591 201.387 136.807 201.59 cv
137.017 201.795 137.311 201.897 137.693 201.897 cv
137.91 201.897 138.126 201.872 138.331 201.821 cv
138.535 201.77 138.745 201.686 138.949 201.572 cv
138.949 202.114 li
138.745 202.204 138.535 202.274 138.318 202.311 cv
138.101 202.35 137.878 202.375 137.661 202.375 cv
137.101 202.375 136.66 202.215 136.335 201.897 cv
136.01 201.579 135.851 201.139 135.851 200.584 cv
135.851 200.016 136.003 199.564 136.31 199.226 cv
136.616 198.895 137.037 198.722 137.559 198.722 cv
138.031 198.722 138.401 198.875 138.675 199.174 cv
138.942 199.481 139.083 199.889 139.083 200.405 cv
138.509 200.239 mo
138.502 199.927 138.414 199.678 138.248 199.487 cv
138.076 199.302 137.846 199.208 137.566 199.208 cv
137.247 199.208 136.992 199.302 136.8 199.481 cv
136.61 199.659 136.495 199.915 136.469 200.239 cv
138.509 200.239 li
f
142.532 198.94 mo
142.532 199.475 li
142.366 199.385 142.207 199.322 142.041 199.278 cv
141.875 199.233 141.715 199.208 141.55 199.208 cv
141.18 199.208 140.887 199.328 140.684 199.564 cv
140.479 199.799 140.377 200.131 140.377 200.552 cv
140.377 200.979 140.479 201.311 140.684 201.546 cv
140.887 201.782 141.18 201.897 141.55 201.897 cv
141.715 201.897 141.875 201.877 142.041 201.833 cv
142.207 201.788 142.366 201.718 142.532 201.629 cv
142.532 202.159 li
142.366 202.235 142.201 202.292 142.035 202.325 cv
141.863 202.356 141.678 202.375 141.486 202.375 cv
140.963 202.375 140.543 202.215 140.237 201.884 cv
139.924 201.559 139.771 201.114 139.771 200.552 cv
139.771 199.985 139.924 199.539 140.237 199.213 cv
140.55 198.887 140.976 198.723 141.525 198.723 cv
141.703 198.723 141.875 198.742 142.041 198.78 cv
142.207 198.817 142.373 198.87 142.532 198.94 cv
f
143.507 197.448 mo
144.081 197.448 li
144.081 200.31 li
145.79 198.805 li
146.523 198.805 li
144.673 200.437 li
146.599 202.292 li
145.853 202.292 li
144.081 200.59 li
144.081 202.292 li
143.507 202.292 li
143.507 197.448 li
cp
f
150.596 199.208 mo
150.291 199.208 150.048 199.329 149.87 199.571 cv
149.691 199.813 149.601 200.137 149.601 200.552 cv
149.601 200.973 149.684 201.297 149.863 201.54 cv
150.042 201.782 150.284 201.897 150.596 201.897 cv
150.902 201.897 151.144 201.782 151.323 201.54 cv
151.501 201.297 151.59 200.973 151.59 200.552 cv
151.59 200.144 151.501 199.813 151.323 199.571 cv
151.144 199.329 150.902 199.208 150.596 199.208 cv
150.596 198.723 mo
151.094 198.723 151.482 198.887 151.769 199.208 cv
152.049 199.532 152.197 199.979 152.197 200.552 cv
152.197 201.125 152.049 201.573 151.769 201.891 cv
151.482 202.215 151.094 202.375 150.596 202.375 cv
150.093 202.375 149.698 202.215 149.417 201.891 cv
149.136 201.573 148.996 201.125 148.996 200.552 cv
148.996 199.979 149.136 199.532 149.417 199.208 cv
149.698 198.887 150.093 198.723 150.596 198.723 cv
f
154.912 197.448 mo
154.912 197.925 li
154.364 197.925 li
154.16 197.925 154.013 197.969 153.936 198.053 cv
153.854 198.135 153.816 198.282 153.816 198.499 cv
153.816 198.805 li
154.759 198.805 li
154.759 199.251 li
153.816 199.251 li
153.816 202.292 li
153.242 202.292 li
153.242 199.251 li
152.694 199.251 li
152.694 198.805 li
153.242 198.805 li
153.242 198.563 li
153.242 198.18 153.331 197.893 153.509 197.715 cv
153.688 197.537 153.975 197.448 154.37 197.448 cv
154.912 197.448 li
f
157.972 201.77 mo
157.972 203.612 li
157.399 203.612 li
157.399 198.805 li
157.972 198.805 li
157.972 199.334 li
158.087 199.129 158.24 198.977 158.425 198.875 cv
158.609 198.773 158.833 198.723 159.087 198.723 cv
159.508 198.723 159.853 198.895 160.121 199.226 cv
160.381 199.564 160.515 200.004 160.515 200.552 cv
160.515 201.1 160.381 201.547 160.121 201.877 cv
159.853 202.209 159.508 202.375 159.087 202.375 cv
158.833 202.375 158.609 202.325 158.425 202.228 cv
158.24 202.133 158.087 201.98 157.972 201.77 cv
159.923 200.552 mo
159.923 200.131 159.833 199.806 159.662 199.564 cv
159.483 199.322 159.247 199.201 158.948 199.201 cv
158.641 199.201 158.405 199.322 158.233 199.564 cv
158.054 199.806 157.972 200.131 157.972 200.552 cv
157.972 200.973 158.054 201.304 158.233 201.547 cv
158.405 201.789 158.641 201.904 158.948 201.904 cv
159.247 201.904 159.483 201.789 159.662 201.547 cv
159.833 201.304 159.923 200.973 159.923 200.552 cv
f
161.465 198.805 mo
162.04 198.805 li
162.04 202.292 li
161.465 202.292 li
161.465 198.805 li
cp
161.465 197.448 mo
162.04 197.448 li
162.04 198.174 li
161.465 198.174 li
161.465 197.448 li
cp
f
165.75 198.94 mo
165.75 199.475 li
165.583 199.385 165.424 199.322 165.258 199.278 cv
165.093 199.233 164.934 199.208 164.768 199.208 cv
164.398 199.208 164.105 199.328 163.901 199.564 cv
163.697 199.799 163.594 200.131 163.594 200.552 cv
163.594 200.979 163.697 201.311 163.901 201.546 cv
164.105 201.782 164.398 201.897 164.768 201.897 cv
164.934 201.897 165.093 201.877 165.258 201.833 cv
165.424 201.788 165.583 201.718 165.75 201.629 cv
165.75 202.159 li
165.583 202.235 165.418 202.292 165.251 202.325 cv
165.081 202.356 164.895 202.375 164.704 202.375 cv
164.181 202.375 163.76 202.215 163.455 201.884 cv
163.142 201.559 162.989 201.114 162.989 200.552 cv
162.989 199.985 163.142 199.539 163.455 199.213 cv
163.767 198.887 164.194 198.723 164.743 198.723 cv
164.92 198.723 165.093 198.742 165.258 198.78 cv
165.424 198.817 165.59 198.87 165.75 198.94 cv
f
166.725 197.448 mo
167.298 197.448 li
167.298 200.31 li
169.007 198.805 li
169.741 198.805 li
167.891 200.437 li
169.817 202.292 li
169.071 202.292 li
167.298 200.59 li
167.298 202.292 li
166.725 202.292 li
166.725 197.448 li
cp
f
170.436 197.448 mo
171.008 197.448 li
171.008 202.292 li
170.436 202.292 li
170.436 197.448 li
cp
f
175.191 200.405 mo
175.191 200.686 li
172.558 200.686 li
172.583 201.081 172.699 201.387 172.916 201.59 cv
173.125 201.795 173.418 201.897 173.801 201.897 cv
174.018 201.897 174.235 201.872 174.438 201.821 cv
174.643 201.77 174.853 201.686 175.057 201.572 cv
175.057 202.114 li
174.853 202.204 174.643 202.274 174.426 202.311 cv
174.208 202.35 173.986 202.375 173.769 202.375 cv
173.208 202.375 172.768 202.215 172.443 201.897 cv
172.119 201.579 171.958 201.139 171.958 200.584 cv
171.958 200.016 172.112 199.564 172.417 199.226 cv
172.723 198.895 173.144 198.722 173.667 198.722 cv
174.139 198.722 174.509 198.875 174.783 199.174 cv
175.05 199.481 175.191 199.889 175.191 200.405 cv
174.617 200.239 mo
174.611 199.927 174.521 199.678 174.356 199.487 cv
174.183 199.302 173.954 199.208 173.674 199.208 cv
173.355 199.208 173.1 199.302 172.909 199.481 cv
172.717 199.659 172.602 199.915 172.577 200.239 cv
174.617 200.239 li
f
178.422 199.334 mo
178.422 197.447 li
178.997 197.447 li
178.997 202.292 li
178.422 202.292 li
178.422 201.77 li
178.301 201.979 178.149 202.133 177.964 202.228 cv
177.779 202.325 177.563 202.375 177.307 202.375 cv
176.886 202.375 176.542 202.209 176.275 201.877 cv
176.006 201.547 175.879 201.1 175.879 200.552 cv
175.879 200.004 176.006 199.564 176.275 199.226 cv
176.542 198.895 176.886 198.723 177.307 198.723 cv
177.563 198.723 177.779 198.773 177.964 198.875 cv
178.149 198.977 178.301 199.129 178.422 199.334 cv
176.472 200.552 mo
176.472 200.973 176.555 201.304 176.728 201.547 cv
176.9 201.789 177.142 201.904 177.448 201.904 cv
177.748 201.904 177.984 201.789 178.162 201.547 cv
178.333 201.304 178.422 200.973 178.422 200.552 cv
178.422 200.131 178.333 199.806 178.162 199.564 cv
177.984 199.322 177.748 199.201 177.448 199.201 cv
177.142 199.201 176.9 199.322 176.728 199.564 cv
176.555 199.806 176.472 200.131 176.472 200.552 cv
f
182.758 201.77 mo
182.758 203.612 li
182.184 203.612 li
182.184 198.805 li
182.758 198.805 li
182.758 199.334 li
182.873 199.129 183.026 198.977 183.211 198.875 cv
183.395 198.773 183.619 198.723 183.874 198.723 cv
184.294 198.723 184.638 198.895 184.907 199.226 cv
185.167 199.564 185.301 200.004 185.301 200.552 cv
185.301 201.1 185.167 201.547 184.907 201.877 cv
184.638 202.209 184.294 202.375 183.874 202.375 cv
183.619 202.375 183.395 202.325 183.211 202.228 cv
183.026 202.133 182.873 201.98 182.758 201.77 cv
184.708 200.552 mo
184.708 200.131 184.62 199.806 184.448 199.564 cv
184.269 199.322 184.033 199.201 183.733 199.201 cv
183.427 199.201 183.191 199.322 183.019 199.564 cv
182.84 199.806 182.758 200.131 182.758 200.552 cv
182.758 200.973 182.84 201.304 183.019 201.547 cv
183.191 201.789 183.427 201.904 183.733 201.904 cv
184.033 201.904 184.269 201.789 184.448 201.547 cv
184.62 201.304 184.708 200.973 184.708 200.552 cv
f
189.235 200.405 mo
189.235 200.686 li
186.602 200.686 li
186.627 201.081 186.743 201.387 186.959 201.59 cv
187.169 201.795 187.462 201.897 187.845 201.897 cv
188.062 201.897 188.278 201.872 188.483 201.821 cv
188.687 201.77 188.897 201.686 189.101 201.572 cv
189.101 202.114 li
188.897 202.204 188.687 202.274 188.47 202.311 cv
188.252 202.35 188.03 202.375 187.813 202.375 cv
187.252 202.375 186.812 202.215 186.488 201.897 cv
186.163 201.579 186.002 201.139 186.002 200.584 cv
186.002 200.016 186.156 199.564 186.461 199.226 cv
186.767 198.895 187.188 198.722 187.711 198.722 cv
188.183 198.722 188.553 198.875 188.827 199.174 cv
189.094 199.481 189.235 199.889 189.235 200.405 cv
188.662 200.239 mo
188.655 199.927 188.565 199.678 188.4 199.487 cv
188.228 199.302 187.999 199.208 187.718 199.208 cv
187.399 199.208 187.143 199.302 186.953 199.481 cv
186.761 199.659 186.647 199.915 186.622 200.239 cv
188.662 200.239 li
f
190.727 201.77 mo
190.727 203.612 li
190.153 203.612 li
190.153 198.805 li
190.727 198.805 li
190.727 199.334 li
190.841 199.129 190.995 198.977 191.18 198.875 cv
191.364 198.773 191.587 198.723 191.842 198.723 cv
192.263 198.723 192.607 198.895 192.875 199.226 cv
193.136 199.564 193.27 200.004 193.27 200.552 cv
193.27 201.1 193.136 201.547 192.875 201.877 cv
192.607 202.209 192.263 202.375 191.842 202.375 cv
191.587 202.375 191.364 202.325 191.18 202.228 cv
190.995 202.133 190.841 201.98 190.727 201.77 cv
192.677 200.552 mo
192.677 200.131 192.588 199.806 192.417 199.564 cv
192.238 199.322 192.001 199.201 191.702 199.201 cv
191.396 199.201 191.16 199.322 190.988 199.564 cv
190.809 199.806 190.727 200.131 190.727 200.552 cv
190.727 200.973 190.809 201.304 190.988 201.547 cv
191.16 201.789 191.396 201.904 191.702 201.904 cv
192.001 201.904 192.238 201.789 192.417 201.547 cv
192.588 201.304 192.677 200.973 192.677 200.552 cv
f
194.775 201.77 mo
194.775 203.612 li
194.201 203.612 li
194.201 198.805 li
194.775 198.805 li
194.775 199.334 li
194.889 199.129 195.042 198.977 195.227 198.875 cv
195.413 198.773 195.635 198.723 195.89 198.723 cv
196.311 198.723 196.656 198.895 196.923 199.226 cv
197.184 199.564 197.319 200.004 197.319 200.552 cv
197.319 201.1 197.184 201.547 196.923 201.877 cv
196.656 202.209 196.311 202.375 195.89 202.375 cv
195.635 202.375 195.413 202.325 195.227 202.228 cv
195.042 202.133 194.889 201.98 194.775 201.77 cv
196.725 200.552 mo
196.725 200.131 196.636 199.806 196.464 199.564 cv
196.286 199.322 196.049 199.201 195.75 199.201 cv
195.444 199.201 195.208 199.322 195.037 199.564 cv
194.858 199.806 194.775 200.131 194.775 200.552 cv
194.775 200.973 194.858 201.304 195.037 201.547 cv
195.208 201.789 195.444 201.904 195.75 201.904 cv
196.049 201.904 196.286 201.789 196.464 201.547 cv
196.636 201.304 196.725 200.973 196.725 200.552 cv
f
201.251 200.405 mo
201.251 200.686 li
198.62 200.686 li
198.645 201.081 198.759 201.387 198.976 201.59 cv
199.186 201.795 199.479 201.897 199.862 201.897 cv
200.079 201.897 200.295 201.872 200.5 201.821 cv
200.704 201.77 200.914 201.686 201.118 201.572 cv
201.118 202.114 li
200.914 202.204 200.704 202.274 200.487 202.311 cv
200.27 202.35 200.046 202.375 199.83 202.375 cv
199.269 202.375 198.829 202.215 198.503 201.897 cv
198.179 201.579 198.019 201.139 198.019 200.584 cv
198.019 200.016 198.172 199.564 198.478 199.226 cv
198.785 198.895 199.206 198.722 199.728 198.722 cv
200.2 198.722 200.57 198.875 200.843 199.174 cv
201.111 199.481 201.251 199.889 201.251 200.405 cv
200.678 200.239 mo
200.671 199.927 200.583 199.678 200.417 199.487 cv
200.245 199.302 200.015 199.208 199.735 199.208 cv
199.417 199.208 199.161 199.302 198.969 199.481 cv
198.779 199.659 198.664 199.915 198.638 200.239 cv
200.678 200.239 li
f
204.209 199.34 mo
204.146 199.303 204.076 199.277 204 199.258 cv
203.922 199.245 203.84 199.233 203.75 199.233 cv
203.425 199.233 203.177 199.34 203.004 199.551 cv
202.827 199.762 202.744 200.061 202.744 200.457 cv
202.744 202.292 li
202.169 202.292 li
202.169 198.805 li
202.744 198.805 li
202.744 199.347 li
202.858 199.137 203.017 198.977 203.208 198.875 cv
203.401 198.774 203.636 198.722 203.917 198.722 cv
203.956 198.722 204 198.729 204.05 198.729 cv
204.095 198.735 204.146 198.742 204.209 198.754 cv
204.209 199.34 li
f
207.034 198.907 mo
207.034 199.45 li
206.868 199.373 206.703 199.309 206.531 199.264 cv
206.352 199.227 206.173 199.201 205.988 199.201 cv
205.702 199.201 205.485 199.246 205.344 199.334 cv
205.205 199.424 205.134 199.551 205.134 199.723 cv
205.134 199.857 205.185 199.959 205.288 200.036 cv
205.389 200.112 205.593 200.188 205.899 200.252 cv
206.096 200.297 li
206.504 200.386 206.792 200.514 206.964 200.667 cv
207.129 200.826 207.219 201.049 207.219 201.331 cv
207.219 201.655 207.091 201.91 206.836 202.094 cv
206.581 202.286 206.224 202.375 205.778 202.375 cv
205.586 202.375 205.396 202.356 205.191 202.325 cv
204.987 202.292 204.777 202.241 204.554 202.165 cv
204.554 201.573 li
204.764 201.686 204.975 201.77 205.179 201.821 cv
205.383 201.877 205.586 201.904 205.791 201.904 cv
206.059 201.904 206.269 201.86 206.416 201.77 cv
206.556 201.68 206.632 201.547 206.632 201.375 cv
206.632 201.221 206.575 201.1 206.472 201.018 cv
206.371 200.934 206.141 200.852 205.784 200.776 cv
205.586 200.731 li
205.23 200.654 204.968 200.54 204.815 200.386 cv
204.656 200.233 204.58 200.024 204.58 199.749 cv
204.58 199.424 204.695 199.168 204.923 198.99 cv
205.154 198.811 205.485 198.722 205.917 198.722 cv
206.128 198.722 206.327 198.741 206.517 198.773 cv
206.703 198.805 206.875 198.85 207.034 198.907 cv
f
208.213 201.502 mo
208.87 201.502 li
208.87 202.292 li
208.213 202.292 li
208.213 201.502 li
cp
f
18.334 186.487 mo
20.459 186.487 li
f
18.334 186.487 mo
20.459 186.487 li
@
255.484 186.487 mo
253.359 186.487 li
f
255.484 186.487 mo
253.359 186.487 li
@
15.0239 184.014 mo
14.6987 184.014 14.4565 184.174 14.2905 184.493 cv
14.125 184.811 14.0483 185.29 14.0483 185.926 cv
14.0483 186.565 14.125 187.042 14.2905 187.362 cv
14.4565 187.68 14.6987 187.839 15.0239 187.839 cv
15.3486 187.839 15.5913 187.68 15.7568 187.362 cv
15.916 187.042 15.999 186.565 15.999 185.926 cv
15.999 185.29 15.916 184.811 15.7568 184.493 cv
15.5913 184.174 15.3486 184.014 15.0239 184.014 cv
15.0239 183.517 mo
15.54 183.517 15.9355 183.727 16.2158 184.135 cv
16.4897 184.549 16.6304 185.149 16.6304 185.926 cv
16.6304 186.711 16.4897 187.31 16.2158 187.718 cv
15.9355 188.126 15.54 188.331 15.0239 188.331 cv
14.501 188.331 14.0991 188.126 13.8252 187.718 cv
13.5513 187.31 13.417 186.711 13.417 185.926 cv
13.417 185.149 13.5513 184.549 13.8252 184.135 cv
14.0991 183.727 14.501 183.517 15.0239 183.517 cv
f
18.334 166.088 mo
20.459 166.088 li
f
18.334 166.088 mo
20.459 166.088 li
@
255.484 166.088 mo
253.359 166.088 li
f
255.484 166.088 mo
253.359 166.088 li
@
13.8843 163.2 mo
16.3511 163.2 li
16.3511 163.729 li
14.458 163.729 li
14.458 164.871 li
14.5474 164.838 14.6426 164.813 14.7319 164.8 cv
14.8213 164.787 14.917 164.775 15.0063 164.775 cv
15.5225 164.775 15.9307 164.921 16.2363 165.202 cv
16.5425 165.489 16.6958 165.871 16.6958 166.355 cv
16.6958 166.859 16.5361 167.248 16.2236 167.522 cv
15.9116 167.796 15.4717 167.93 14.9106 167.93 cv
14.7129 167.93 14.5151 167.911 14.3115 167.885 cv
14.1074 167.854 13.9033 167.81 13.6865 167.739 cv
13.6865 167.107 li
13.8716 167.21 14.0625 167.286 14.2666 167.337 cv
14.4644 167.389 14.6748 167.408 14.8979 167.408 cv
15.2549 167.408 15.5415 167.318 15.752 167.127 cv
15.9561 166.936 16.0645 166.681 16.0645 166.355 cv
16.0645 166.037 15.9561 165.781 15.752 165.591 cv
15.5415 165.399 15.2549 165.304 14.8979 165.304 cv
14.7319 165.304 14.5601 165.323 14.394 165.361 cv
14.2285 165.399 14.0562 165.457 13.8843 165.533 cv
13.8843 163.2 li
f
18.334 145.688 mo
20.459 145.688 li
f
18.334 145.688 mo
20.459 145.688 li
@
255.484 145.688 mo
253.359 145.688 li
f
255.484 145.688 mo
253.359 145.688 li
@
10.002 146.918 mo
11.0283 146.918 li
11.0283 143.374 li
9.9126 143.597 li
9.9126 143.023 li
11.022 142.8 li
11.6528 142.8 li
11.6528 146.918 li
12.6792 146.918 li
12.6792 147.447 li
10.002 147.447 li
10.002 146.918 li
cp
f
15.2935 143.214 mo
14.9683 143.214 14.7261 143.374 14.5601 143.692 cv
14.3945 144.011 14.3179 144.489 14.3179 145.127 cv
14.3179 145.765 14.3945 146.243 14.5601 146.562 cv
14.7261 146.879 14.9683 147.04 15.2935 147.04 cv
15.6182 147.04 15.8608 146.879 16.0264 146.562 cv
16.1855 146.243 16.2686 145.765 16.2686 145.127 cv
16.2686 144.489 16.1855 144.011 16.0264 143.692 cv
15.8608 143.374 15.6182 143.214 15.2935 143.214 cv
15.2935 142.717 mo
15.8096 142.717 16.2051 142.928 16.4854 143.335 cv
16.7593 143.75 16.8999 144.349 16.8999 145.127 cv
16.8999 145.911 16.7593 146.51 16.4854 146.918 cv
16.2051 147.326 15.8096 147.53 15.2935 147.53 cv
14.7705 147.53 14.3687 147.326 14.0947 146.918 cv
13.8208 146.51 13.687 145.911 13.687 145.127 cv
13.687 144.349 13.8208 143.75 14.0947 143.335 cv
14.3687 142.928 14.7705 142.717 15.2935 142.717 cv
f
18.334 125.288 mo
20.459 125.288 li
f
18.334 125.288 mo
20.459 125.288 li
@
255.484 125.288 mo
253.359 125.288 li
f
255.484 125.288 mo
253.359 125.288 li
@
10.1348 126.518 mo
11.1611 126.518 li
11.1611 122.974 li
10.0454 123.197 li
10.0454 122.624 li
11.1548 122.4 li
11.7856 122.4 li
11.7856 126.518 li
12.812 126.518 li
12.812 127.047 li
10.1348 127.047 li
10.1348 126.518 li
cp
f
14.0874 122.4 mo
16.5542 122.4 li
16.5542 122.929 li
14.6611 122.929 li
14.6611 124.07 li
14.7505 124.038 14.8457 124.013 14.9351 124 cv
15.0244 123.987 15.1201 123.975 15.2095 123.975 cv
15.7256 123.975 16.1338 124.121 16.4395 124.402 cv
16.7456 124.689 16.8984 125.071 16.8984 125.556 cv
16.8984 126.06 16.7393 126.448 16.4268 126.723 cv
16.1147 126.996 15.6748 127.13 15.1138 127.13 cv
14.916 127.13 14.7183 127.111 14.5142 127.085 cv
14.3105 127.054 14.1064 127.009 13.8896 126.939 cv
13.8896 126.308 li
14.0747 126.41 14.2656 126.486 14.4697 126.537 cv
14.6675 126.589 14.8779 126.608 15.1011 126.608 cv
15.458 126.608 15.7446 126.518 15.9551 126.327 cv
16.1592 126.136 16.2676 125.881 16.2676 125.556 cv
16.2676 125.237 16.1592 124.981 15.9551 124.791 cv
15.7446 124.6 15.458 124.504 15.1011 124.504 cv
14.9351 124.504 14.7632 124.522 14.5972 124.561 cv
14.4316 124.6 14.2593 124.657 14.0874 124.733 cv
14.0874 122.4 li
f
18.334 104.888 mo
20.459 104.888 li
f
18.334 104.888 mo
20.459 104.888 li
@
255.484 104.888 mo
253.359 104.888 li
f
255.484 104.888 mo
253.359 104.888 li
@
10.2031 106.118 mo
12.396 106.118 li
12.396 106.647 li
9.44434 106.647 li
9.44434 106.118 li
9.68018 105.876 10.0054 105.544 10.4199 105.124 cv
10.8276 104.709 11.0894 104.442 11.1978 104.32 cv
11.4014 104.098 11.542 103.906 11.6182 103.747 cv
11.6948 103.594 11.7393 103.435 11.7393 103.281 cv
11.7393 103.039 11.6504 102.835 11.478 102.682 cv
11.3062 102.529 11.083 102.446 10.8022 102.446 cv
10.6045 102.446 10.394 102.484 10.1777 102.548 cv
9.96094 102.619 9.7251 102.721 9.47607 102.861 cv
9.47607 102.223 li
9.73145 102.121 9.96729 102.045 10.1841 101.994 cv
10.4009 101.943 10.6045 101.917 10.7896 101.917 cv
11.2676 101.917 11.6504 102.038 11.937 102.281 cv
12.2241 102.522 12.3706 102.842 12.3706 103.243 cv
12.3706 103.435 12.3325 103.619 12.2622 103.785 cv
12.1919 103.957 12.0645 104.161 11.8735 104.391 cv
11.8223 104.455 11.6567 104.626 11.376 104.913 cv
11.0957 105.2 10.7065 105.602 10.2031 106.118 cv
f
15.061 102.415 mo
14.7358 102.415 14.4937 102.574 14.3276 102.892 cv
14.1621 103.211 14.0854 103.689 14.0854 104.327 cv
14.0854 104.965 14.1621 105.442 14.3276 105.762 cv
14.4937 106.08 14.7358 106.239 15.061 106.239 cv
15.3857 106.239 15.6284 106.08 15.7939 105.762 cv
15.9531 105.442 16.0361 104.965 16.0361 104.327 cv
16.0361 103.689 15.9531 103.211 15.7939 102.892 cv
15.6284 102.574 15.3857 102.415 15.061 102.415 cv
15.061 101.917 mo
15.5771 101.917 15.9727 102.128 16.2529 102.536 cv
16.5269 102.95 16.6675 103.549 16.6675 104.327 cv
16.6675 105.111 16.5269 105.71 16.2529 106.119 cv
15.9727 106.526 15.5771 106.73 15.061 106.73 cv
14.5381 106.73 14.1362 106.526 13.8623 106.119 cv
13.5884 105.71 13.4546 105.111 13.4546 104.327 cv
13.4546 103.549 13.5884 102.95 13.8623 102.536 cv
14.1362 102.128 14.5381 101.917 15.061 101.917 cv
f
18.334 84.4873 mo
20.459 84.4873 li
f
18.334 84.4873 mo
20.459 84.4873 li
@
255.484 84.4873 mo
253.359 84.4873 li
f
255.484 84.4873 mo
253.359 84.4873 li
@
10.3359 85.7183 mo
12.5288 85.7183 li
12.5288 86.2476 li
9.57715 86.2476 li
9.57715 85.7183 li
9.81299 85.4761 10.1382 85.1445 10.5527 84.7236 cv
10.9604 84.3096 11.2222 84.042 11.3306 83.9209 cv
11.5342 83.6973 11.6748 83.5063 11.751 83.3467 cv
11.8276 83.1938 11.8721 83.0347 11.8721 82.8813 cv
11.8721 82.6392 11.7832 82.4351 11.6108 82.2822 cv
11.439 82.1294 11.2158 82.0464 10.9351 82.0464 cv
10.7373 82.0464 10.5269 82.0845 10.3105 82.1484 cv
10.0938 82.2188 9.85791 82.3203 9.60889 82.4609 cv
9.60889 81.8232 li
9.86426 81.7212 10.1001 81.6445 10.3169 81.5938 cv
10.5337 81.543 10.7373 81.5171 10.9224 81.5171 cv
11.4004 81.5171 11.7832 81.6382 12.0698 81.8809 cv
12.3569 82.123 12.5034 82.4414 12.5034 82.8433 cv
12.5034 83.0347 12.4653 83.2192 12.395 83.3853 cv
12.3247 83.5571 12.1973 83.7612 12.0063 83.9907 cv
11.9551 84.0547 11.7896 84.2266 11.5088 84.5137 cv
11.2285 84.8003 10.8394 85.2021 10.3359 85.7183 cv
f
13.855 81.6001 mo
16.3218 81.6001 li
16.3218 82.1289 li
14.4287 82.1289 li
14.4287 83.27 li
14.5181 83.2383 14.6133 83.2129 14.7026 83.2002 cv
14.792 83.1875 14.8877 83.1748 14.9771 83.1748 cv
15.4932 83.1748 15.9014 83.3213 16.207 83.6016 cv
16.5132 83.8887 16.666 84.271 16.666 84.7554 cv
16.666 85.2593 16.5068 85.6479 16.1943 85.9224 cv
15.8823 86.1963 15.4424 86.3301 14.8813 86.3301 cv
14.6836 86.3301 14.4858 86.311 14.2817 86.2856 cv
14.0781 86.2539 13.874 86.209 13.6572 86.1387 cv
13.6572 85.5078 li
13.8423 85.6099 14.0332 85.6865 14.2373 85.7373 cv
14.4351 85.7881 14.6455 85.8076 14.8687 85.8076 cv
15.2256 85.8076 15.5122 85.7183 15.7227 85.5269 cv
15.9268 85.3359 16.0352 85.0806 16.0352 84.7554 cv
16.0352 84.4365 15.9268 84.1816 15.7227 83.9907 cv
15.5122 83.7993 15.2256 83.7036 14.8687 83.7036 cv
14.7026 83.7036 14.5308 83.7227 14.3647 83.7612 cv
14.1992 83.7993 14.0269 83.8564 13.855 83.9331 cv
13.855 81.6001 li
f
18.334 64.0874 mo
20.459 64.0874 li
f
18.334 64.0874 mo
20.459 64.0874 li
@
255.484 64.0874 mo
253.359 64.0874 li
f
255.484 64.0874 mo
253.359 64.0874 li
@
11.5923 63.3418 mo
11.8916 63.4058 12.1274 63.5396 12.2935 63.7437 cv
12.459 63.9478 12.5483 64.2026 12.5483 64.4961 cv
12.5483 64.9551 12.3892 65.312 12.0767 65.5605 cv
11.7578 65.8091 11.3115 65.9302 10.7314 65.9302 cv
10.5337 65.9302 10.3301 65.9111 10.126 65.873 cv
9.92188 65.8408 9.70508 65.7837 9.48828 65.707 cv
9.48828 65.1016 li
9.66064 65.2036 9.85156 65.2803 10.062 65.3311 cv
10.2661 65.3818 10.4829 65.4077 10.7124 65.4077 cv
11.1074 65.4077 11.4072 65.3311 11.6113 65.1782 cv
11.8154 65.0249 11.9238 64.7954 11.9238 64.4961 cv
11.9238 64.228 11.8281 64.0117 11.6367 63.8584 cv
11.4453 63.7056 11.1777 63.6226 10.8335 63.6226 cv
10.2915 63.6226 li
10.2915 63.1064 li
10.8589 63.1064 li
11.165 63.1064 11.4009 63.0488 11.5669 62.9214 cv
11.7324 62.8003 11.8154 62.6216 11.8154 62.3857 cv
11.8154 62.1499 11.7261 61.9648 11.5601 61.8374 cv
11.3882 61.71 11.146 61.6465 10.8335 61.6465 cv
10.6616 61.6465 10.4766 61.6655 10.2788 61.7036 cv
10.0811 61.7422 9.86475 61.7993 9.62842 61.876 cv
9.62842 61.3149 li
9.86475 61.251 10.0874 61.2002 10.2979 61.168 cv
10.502 61.1362 10.6997 61.1172 10.8911 61.1172 cv
11.3628 61.1172 11.7388 61.2256 12.019 61.4424 cv
12.2998 61.6592 12.4399 61.9521 12.4399 62.3223 cv
12.4399 62.5771 12.3638 62.7939 12.2168 62.9722 cv
12.0703 63.1509 11.8599 63.2783 11.5923 63.3418 cv
f
15.0854 61.6143 mo
14.7607 61.6143 14.5186 61.7739 14.3525 62.0928 cv
14.187 62.4111 14.1104 62.8896 14.1104 63.5269 cv
14.1104 64.1646 14.187 64.6426 14.3525 64.9614 cv
14.5186 65.2803 14.7607 65.4395 15.0854 65.4395 cv
15.4106 65.4395 15.6528 65.2803 15.8188 64.9614 cv
15.978 64.6426 16.061 64.1646 16.061 63.5269 cv
16.061 62.8896 15.978 62.4111 15.8188 62.0928 cv
15.6528 61.7739 15.4106 61.6143 15.0854 61.6143 cv
15.0854 61.1172 mo
15.6021 61.1172 15.9976 61.3276 16.2778 61.7354 cv
16.5518 62.1499 16.6924 62.749 16.6924 63.5269 cv
16.6924 64.311 16.5518 64.9102 16.2778 65.3184 cv
15.9976 65.7266 15.6021 65.9302 15.0854 65.9302 cv
14.563 65.9302 14.1611 65.7266 13.8872 65.3184 cv
13.6133 64.9102 13.479 64.311 13.479 63.5269 cv
13.479 62.749 13.6133 62.1499 13.8872 61.7354 cv
14.1611 61.3276 14.563 61.1172 15.0854 61.1172 cv
f
18.334 43.6875 mo
20.459 43.6875 li
f
18.334 43.6875 mo
20.459 43.6875 li
@
255.484 43.6875 mo
253.359 43.6875 li
f
255.484 43.6875 mo
253.359 43.6875 li
@
11.7251 42.9424 mo
12.0244 43.0059 12.2603 43.1396 12.4263 43.3438 cv
12.5918 43.5479 12.6812 43.8027 12.6812 44.0962 cv
12.6812 44.5552 12.522 44.9121 12.2095 45.1606 cv
11.8906 45.4092 11.4443 45.5303 10.8643 45.5303 cv
10.6665 45.5303 10.4629 45.5112 10.2588 45.4731 cv
10.0547 45.4414 9.83789 45.3838 9.62109 45.3071 cv
9.62109 44.7017 li
9.79346 44.8037 9.98438 44.8799 10.1948 44.9312 cv
10.3989 44.9819 10.6157 45.0078 10.8452 45.0078 cv
11.2402 45.0078 11.54 44.9312 11.7441 44.7783 cv
11.9482 44.625 12.0566 44.3955 12.0566 44.0962 cv
12.0566 43.8281 11.9609 43.6113 11.7695 43.4585 cv
11.5781 43.3057 11.3105 43.2227 10.9663 43.2227 cv
10.4243 43.2227 li
10.4243 42.7061 li
10.9917 42.7061 li
11.2979 42.7061 11.5337 42.6489 11.6997 42.5215 cv
11.8652 42.4004 11.9482 42.2217 11.9482 41.9858 cv
11.9482 41.75 11.8589 41.5649 11.6929 41.4375 cv
11.521 41.3101 11.2788 41.2466 10.9663 41.2466 cv
10.7944 41.2466 10.6094 41.2656 10.4116 41.3037 cv
10.2139 41.3418 9.99756 41.3994 9.76123 41.4761 cv
9.76123 40.915 li
9.99756 40.8511 10.2202 40.8003 10.4307 40.7681 cv
10.6348 40.7363 10.8325 40.7173 11.0239 40.7173 cv
11.4956 40.7173 11.8716 40.8257 12.1519 41.0425 cv
12.4326 41.2593 12.5728 41.5522 12.5728 41.9219 cv
12.5728 42.1772 12.4966 42.394 12.3496 42.5723 cv
12.2031 42.751 11.9927 42.8784 11.7251 42.9424 cv
f
13.8799 40.7998 mo
16.3467 40.7998 li
16.3467 41.3291 li
14.4536 41.3291 li
14.4536 42.4702 li
14.543 42.4385 14.6382 42.4131 14.7275 42.4004 cv
14.8169 42.3872 14.9126 42.3745 15.002 42.3745 cv
15.5181 42.3745 15.9263 42.5215 16.2319 42.8018 cv
16.5381 43.0889 16.6909 43.4712 16.6909 43.9556 cv
16.6909 44.4595 16.5317 44.8481 16.2192 45.1221 cv
15.9072 45.3965 15.4673 45.5303 14.9063 45.5303 cv
14.7085 45.5303 14.5107 45.5112 14.3071 45.4858 cv
14.103 45.4536 13.8989 45.4092 13.6821 45.3389 cv
13.6821 44.708 li
13.8672 44.8101 14.0581 44.8862 14.2622 44.9375 cv
14.46 44.9883 14.6704 45.0073 14.8936 45.0073 cv
15.2505 45.0073 15.5371 44.9185 15.7476 44.7271 cv
15.9517 44.5356 16.0601 44.2808 16.0601 43.9556 cv
16.0601 43.6367 15.9517 43.3818 15.7476 43.1904 cv
15.5371 42.9995 15.2505 42.9038 14.8936 42.9038 cv
14.7275 42.9038 14.5557 42.9229 14.3896 42.9609 cv
14.2241 42.9995 14.0518 43.0566 13.8799 43.1333 cv
13.8799 40.7998 li
f
18.334 23.2876 mo
20.459 23.2876 li
f
18.334 23.2876 mo
20.459 23.2876 li
@
255.484 23.2876 mo
253.359 23.2876 li
f
255.484 23.2876 mo
253.359 23.2876 li
@
11.2393 20.9482 mo
9.65186 23.4282 li
11.2393 23.4282 li
11.2393 20.9482 li
11.0737 20.3999 mo
11.8643 20.3999 li
11.8643 23.4282 li
12.5269 23.4282 li
12.5269 23.9507 li
11.8643 23.9507 li
11.8643 25.0474 li
11.2393 25.0474 li
11.2393 23.9507 li
9.14209 23.9507 li
9.14209 23.3452 li
11.0737 20.3999 li
cp
f
14.9116 20.8145 mo
14.5864 20.8145 14.3442 20.9736 14.1782 21.2925 cv
14.0127 21.6113 13.936 22.0894 13.936 22.7266 cv
13.936 23.3643 14.0127 23.8423 14.1782 24.1611 cv
14.3442 24.48 14.5864 24.6392 14.9116 24.6392 cv
15.2363 24.6392 15.479 24.48 15.6445 24.1611 cv
15.8037 23.8423 15.8867 23.3643 15.8867 22.7266 cv
15.8867 22.0894 15.8037 21.6113 15.6445 21.2925 cv
15.479 20.9736 15.2363 20.8145 14.9116 20.8145 cv
14.9116 20.3169 mo
15.4277 20.3169 15.8232 20.5273 16.1035 20.9355 cv
16.3774 21.3496 16.5181 21.9492 16.5181 22.7266 cv
16.5181 23.5107 16.3774 24.1104 16.1035 24.5181 cv
15.8232 24.9263 15.4277 25.1304 14.9116 25.1304 cv
14.3887 25.1304 13.9868 24.9263 13.7129 24.5181 cv
13.439 24.1104 13.3047 23.5107 13.3047 22.7266 cv
13.3047 21.9492 13.439 21.3496 13.7129 20.9355 cv
13.9868 20.5273 14.3887 20.3169 14.9116 20.3169 cv
f
18.334 2.8877 mo
20.459 2.8877 li
f
18.334 2.8877 mo
20.459 2.8877 li
@
255.484 2.8877 mo
253.359 2.8877 li
f
255.484 2.8877 mo
253.359 2.8877 li
@
11.3721 .54834 mo
9.78467 3.02832 li
11.3721 3.02832 li
11.3721 .54834 li
11.2065 0 mo
11.9971 0 li
11.9971 3.02832 li
12.6597 3.02832 li
12.6597 3.55078 li
11.9971 3.55078 li
11.9971 4.64746 li
11.3721 4.64746 li
11.3721 3.55078 li
9.2749 3.55078 li
9.2749 2.94531 li
11.2065 0 li
cp
f
13.7056 0 mo
16.1724 0 li
16.1724 .529297 li
14.2793 .529297 li
14.2793 1.67041 li
14.3687 1.63867 14.4639 1.61279 14.5532 1.6001 cv
14.6426 1.5874 14.7383 1.57471 14.8276 1.57471 cv
15.3438 1.57471 15.752 1.72119 16.0576 2.00195 cv
16.3638 2.28857 16.5166 2.67139 16.5166 3.15576 cv
16.5166 3.65918 16.3574 4.04834 16.0449 4.32227 cv
15.7329 4.59668 15.293 4.73047 14.7319 4.73047 cv
14.5342 4.73047 14.3364 4.71094 14.1328 4.68555 cv
13.9287 4.65381 13.7246 4.60938 13.5078 4.53906 cv
13.5078 3.9082 li
13.6929 4.00977 13.8838 4.08643 14.0879 4.1377 cv
14.2856 4.18848 14.4961 4.20752 14.7192 4.20752 cv
15.0762 4.20752 15.3628 4.11816 15.5732 3.92725 cv
15.7773 3.73584 15.8857 3.48096 15.8857 3.15576 cv
15.8857 2.83691 15.7773 2.58203 15.5732 2.39063 cv
15.3628 2.19922 15.0762 2.104 14.7192 2.104 cv
14.5532 2.104 14.3813 2.12305 14.2153 2.16113 cv
14.0498 2.19922 13.8774 2.25684 13.7056 2.3335 cv
13.7056 0 li
f
.714355 165.665 mo
2.46094 165.665 li
2.46094 164.875 li
2.46094 164.581 2.39063 164.358 2.23779 164.199 cv
2.08496 164.04 1.86816 163.957 1.5874 163.957 cv
1.30713 163.957 1.09668 164.04 .943848 164.199 cv
.790527 164.358 .714355 164.581 .714355 164.875 cv
.714355 165.665 li
.197754 166.296 mo
.197754 164.875 li
.197754 164.358 .318848 163.963 .554688 163.695 cv
.790527 163.427 1.13477 163.293 1.5874 163.293 cv
2.04639 163.293 2.39697 163.427 2.62695 163.695 cv
2.86279 163.963 2.97754 164.358 2.97754 164.875 cv
2.97754 165.665 li
4.84521 165.665 li
4.84521 166.296 li
.197754 166.296 li
f
2.9585 159.495 mo
3.23877 159.495 li
3.23877 162.127 li
3.63379 162.102 3.93994 161.986 4.14404 161.77 cv
4.34814 161.56 4.4502 161.267 4.4502 160.884 cv
4.4502 160.667 4.42432 160.451 4.37354 160.246 cv
4.32275 160.042 4.23975 159.833 4.125 159.628 cv
4.66699 159.628 li
4.75586 159.833 4.82617 160.042 4.86426 160.259 cv
4.90283 160.476 4.92822 160.699 4.92822 160.916 cv
4.92822 161.477 4.76855 161.917 4.4502 162.242 cv
4.13135 162.566 3.69141 162.727 3.13672 162.727 cv
2.56934 162.727 2.1167 162.574 1.77881 162.268 cv
1.44727 161.961 1.27539 161.541 1.27539 161.018 cv
1.27539 160.546 1.42822 160.176 1.72803 159.902 cv
2.03369 159.635 2.44189 159.495 2.9585 159.495 cv
2.79248 160.068 mo
2.47998 160.075 2.23145 160.164 2.04004 160.329 cv
1.85547 160.502 1.75977 160.73 1.75977 161.011 cv
1.75977 161.33 1.85547 161.585 2.03369 161.777 cv
2.2124 161.967 2.46729 162.082 2.79248 162.108 cv
2.79248 160.068 li
f
.370117 157.989 mo
1.35791 157.989 li
1.35791 156.81 li
1.8042 156.81 li
1.8042 157.989 li
3.69775 157.989 li
3.98438 157.989 4.16943 157.952 4.24609 157.875 cv
4.32861 157.799 4.36719 157.639 4.36719 157.397 cv
4.36719 156.81 li
4.84521 156.81 li
4.84521 157.397 li
4.84521 157.843 4.76221 158.149 4.59668 158.314 cv
4.43066 158.481 4.13135 158.563 3.69775 158.563 cv
1.8042 158.563 li
1.8042 158.984 li
1.35791 158.984 li
1.35791 158.563 li
.370117 158.563 li
.370117 157.989 li
f
2.9585 153.074 mo
3.23877 153.074 li
3.23877 155.707 li
3.63379 155.682 3.93994 155.567 4.14404 155.35 cv
4.34814 155.14 4.4502 154.847 4.4502 154.464 cv
4.4502 154.247 4.42432 154.031 4.37354 153.827 cv
4.32275 153.623 4.23975 153.413 4.125 153.208 cv
4.66699 153.208 li
4.75586 153.413 4.82617 153.623 4.86426 153.839 cv
4.90283 154.057 4.92822 154.28 4.92822 154.497 cv
4.92822 155.057 4.76855 155.497 4.4502 155.822 cv
4.13135 156.147 3.69141 156.307 3.13672 156.307 cv
2.56934 156.307 2.1167 156.154 1.77881 155.848 cv
1.44727 155.542 1.27539 155.121 1.27539 154.598 cv
1.27539 154.126 1.42822 153.756 1.72803 153.483 cv
2.03369 153.215 2.44189 153.074 2.9585 153.074 cv
2.79248 153.648 mo
2.47998 153.655 2.23145 153.744 2.04004 153.909 cv
1.85547 154.082 1.75977 154.311 1.75977 154.592 cv
1.75977 154.91 1.85547 155.166 2.03369 155.357 cv
2.2124 155.548 2.46729 155.663 2.79248 155.688 cv
2.79248 153.648 li
f
1.89355 150.117 mo
1.85498 150.18 1.82959 150.25 1.81055 150.327 cv
1.79785 150.403 1.78516 150.486 1.78516 150.575 cv
1.78516 150.901 1.89355 151.149 2.104 151.321 cv
2.31396 151.5 2.61377 151.583 3.00928 151.583 cv
4.84521 151.583 li
4.84521 152.157 li
1.35791 152.157 li
1.35791 151.583 li
1.8999 151.583 li
1.68945 151.468 1.53027 151.309 1.42822 151.118 cv
1.32617 150.926 1.2749 150.69 1.2749 150.41 cv
1.2749 150.371 1.28125 150.327 1.28125 150.276 cv
1.2876 150.231 1.29443 150.18 1.30713 150.117 cv
1.89355 150.117 li
f
.714355 146.833 mo
2.46094 146.833 li
2.46094 146.043 li
2.46094 145.75 2.39063 145.527 2.23779 145.367 cv
2.08496 145.208 1.86816 145.125 1.5874 145.125 cv
1.30713 145.125 1.09668 145.208 .943848 145.367 cv
.790527 145.527 .714355 145.75 .714355 146.043 cv
.714355 146.833 li
.197754 147.465 mo
.197754 146.043 li
.197754 145.527 .318848 145.131 .554688 144.864 cv
.790527 144.596 1.13477 144.461 1.5874 144.461 cv
2.04639 144.461 2.39697 144.596 2.62695 144.864 cv
2.86279 145.131 2.97754 145.527 2.97754 146.043 cv
2.97754 146.833 li
4.84521 146.833 li
4.84521 147.465 li
.197754 147.465 li
f
2.9585 140.663 mo
3.23877 140.663 li
3.23877 143.295 li
3.63379 143.27 3.93994 143.155 4.14404 142.938 cv
4.34814 142.728 4.4502 142.435 4.4502 142.052 cv
4.4502 141.835 4.42432 141.619 4.37354 141.415 cv
4.32275 141.211 4.23975 141 4.125 140.796 cv
4.66699 140.796 li
4.75586 141 4.82617 141.211 4.86426 141.427 cv
4.90283 141.645 4.92822 141.867 4.92822 142.084 cv
4.92822 142.645 4.76855 143.085 4.4502 143.41 cv
4.13135 143.735 3.69141 143.895 3.13672 143.895 cv
2.56934 143.895 2.1167 143.742 1.77881 143.436 cv
1.44727 143.13 1.27539 142.709 1.27539 142.186 cv
1.27539 141.714 1.42822 141.345 1.72803 141.07 cv
2.03369 140.803 2.44189 140.663 2.9585 140.663 cv
2.79248 141.236 mo
2.47998 141.243 2.23145 141.332 2.04004 141.498 cv
1.85547 141.67 1.75977 141.899 1.75977 142.179 cv
1.75977 142.499 1.85547 142.753 2.03369 142.945 cv
2.2124 143.136 2.46729 143.251 2.79248 143.276 cv
2.79248 141.236 li
f
4.32227 139.17 mo
6.16504 139.17 li
6.16504 139.744 li
1.35791 139.744 li
1.35791 139.17 li
1.88721 139.17 li
1.68311 139.056 1.53027 138.903 1.42822 138.718 cv
1.32617 138.534 1.27539 138.31 1.27539 138.055 cv
1.27539 137.634 1.44727 137.29 1.77881 137.022 cv
2.1167 136.761 2.55664 136.627 3.10498 136.627 cv
3.65332 136.627 4.09912 136.761 4.43066 137.022 cv
4.76221 137.29 4.92822 137.634 4.92822 138.055 cv
4.92822 138.31 4.87695 138.534 4.78125 138.718 cv
4.68604 138.903 4.53271 139.056 4.32227 139.17 cv
3.10498 137.22 mo
2.68408 137.22 2.35889 137.309 2.1167 137.481 cv
1.87451 137.66 1.75342 137.896 1.75342 138.195 cv
1.75342 138.501 1.87451 138.737 2.1167 138.91 cv
2.35889 139.088 2.68408 139.17 3.10498 139.17 cv
3.52539 139.17 3.85693 139.088 4.09912 138.91 cv
4.3418 138.737 4.45654 138.501 4.45654 138.195 cv
4.45654 137.896 4.3418 137.66 4.09912 137.481 cv
3.85693 137.309 3.52539 137.22 3.10498 137.22 cv
f
4.32227 135.123 mo
6.16504 135.123 li
6.16504 135.696 li
1.35791 135.696 li
1.35791 135.123 li
1.88721 135.123 li
1.68311 135.007 1.53027 134.854 1.42822 134.67 cv
1.32617 134.485 1.27539 134.262 1.27539 134.007 cv
1.27539 133.586 1.44727 133.242 1.77881 132.974 cv
2.1167 132.713 2.55664 132.579 3.10498 132.579 cv
3.65332 132.579 4.09912 132.713 4.43066 132.974 cv
4.76221 133.242 4.92822 133.586 4.92822 134.007 cv
4.92822 134.262 4.87695 134.485 4.78125 134.67 cv
4.68604 134.854 4.53271 135.007 4.32227 135.123 cv
3.10498 133.171 mo
2.68408 133.171 2.35889 133.261 2.1167 133.433 cv
1.87451 133.611 1.75342 133.848 1.75342 134.147 cv
1.75342 134.453 1.87451 134.689 2.1167 134.861 cv
2.35889 135.04 2.68408 135.123 3.10498 135.123 cv
3.52539 135.123 3.85693 135.04 4.09912 134.861 cv
4.3418 134.689 4.45654 134.453 4.45654 134.147 cv
4.45654 133.848 4.3418 133.611 4.09912 133.433 cv
3.85693 133.261 3.52539 133.171 3.10498 133.171 cv
f
2.9585 128.646 mo
3.23877 128.646 li
3.23877 131.278 li
3.63379 131.253 3.93994 131.138 4.14404 130.921 cv
4.34814 130.711 4.4502 130.418 4.4502 130.035 cv
4.4502 129.818 4.42432 129.602 4.37354 129.398 cv
4.32275 129.194 4.23975 128.983 4.125 128.779 cv
4.66699 128.779 li
4.75586 128.983 4.82617 129.194 4.86426 129.411 cv
4.90283 129.627 4.92822 129.851 4.92822 130.067 cv
4.92822 130.628 4.76855 131.068 4.4502 131.393 cv
4.13135 131.718 3.69141 131.878 3.13672 131.878 cv
2.56934 131.878 2.1167 131.725 1.77881 131.419 cv
1.44727 131.113 1.27539 130.692 1.27539 130.169 cv
1.27539 129.697 1.42822 129.328 1.72803 129.054 cv
2.03369 128.786 2.44189 128.646 2.9585 128.646 cv
2.79248 129.219 mo
2.47998 129.226 2.23145 129.315 2.04004 129.48 cv
1.85547 129.653 1.75977 129.882 1.75977 130.163 cv
1.75977 130.481 1.85547 130.736 2.03369 130.928 cv
2.2124 131.119 2.46729 131.234 2.79248 131.259 cv
2.79248 129.219 li
f
1.89355 125.688 mo
1.85498 125.751 1.82959 125.821 1.81055 125.898 cv
1.79785 125.974 1.78516 126.057 1.78516 126.146 cv
1.78516 126.472 1.89355 126.72 2.104 126.893 cv
2.31396 127.071 2.61377 127.154 3.00928 127.154 cv
4.84521 127.154 li
4.84521 127.728 li
1.35791 127.728 li
1.35791 127.154 li
1.8999 127.154 li
1.68945 127.039 1.53027 126.879 1.42822 126.689 cv
1.32617 126.497 1.2749 126.261 1.2749 125.981 cv
1.2749 125.942 1.28125 125.898 1.28125 125.847 cv
1.2876 125.802 1.29443 125.751 1.30713 125.688 cv
1.89355 125.688 li
f
4.32227 122.507 mo
6.16504 122.507 li
6.16504 123.081 li
1.35791 123.081 li
1.35791 122.507 li
1.88721 122.507 li
1.68311 122.392 1.53027 122.239 1.42822 122.054 cv
1.32617 121.869 1.27539 121.646 1.27539 121.391 cv
1.27539 120.97 1.44727 120.626 1.77881 120.358 cv
2.1167 120.097 2.55664 119.963 3.10498 119.963 cv
3.65332 119.963 4.09912 120.097 4.43066 120.358 cv
4.76221 120.626 4.92822 120.97 4.92822 121.391 cv
4.92822 121.646 4.87695 121.869 4.78125 122.054 cv
4.68604 122.239 4.53271 122.392 4.32227 122.507 cv
3.10498 120.556 mo
2.68408 120.556 2.35889 120.645 2.1167 120.817 cv
1.87451 120.995 1.75342 121.231 1.75342 121.531 cv
1.75342 121.837 1.87451 122.073 2.1167 122.245 cv
2.35889 122.424 2.68408 122.507 3.10498 122.507 cv
3.52539 122.507 3.85693 122.424 4.09912 122.245 cv
4.3418 122.073 4.45654 121.837 4.45654 121.531 cv
4.45654 121.231 4.3418 120.995 4.09912 120.817 cv
3.85693 120.645 3.52539 120.556 3.10498 120.556 cv
f
1.35791 118.439 mo
4.84473 118.439 li
4.84473 119.013 li
1.35791 119.013 li
1.35791 118.439 li
cp
0 118.439 mo
.726563 118.439 li
.726563 119.013 li
0 119.013 li
0 118.439 li
cp
f
1.4917 114.729 mo
2.02734 114.729 li
1.93799 114.895 1.87451 115.054 1.82959 115.22 cv
1.78516 115.385 1.75977 115.545 1.75977 115.711 cv
1.75977 116.081 1.88086 116.374 2.1167 116.578 cv
2.35254 116.782 2.68408 116.884 3.10498 116.884 cv
3.53174 116.884 3.86328 116.782 4.09912 116.578 cv
4.33496 116.374 4.44971 116.081 4.44971 115.711 cv
4.44971 115.545 4.43066 115.385 4.38623 115.22 cv
4.34131 115.054 4.27148 114.895 4.18213 114.729 cv
4.71143 114.729 li
4.7876 114.895 4.84521 115.061 4.87695 115.227 cv
4.90869 115.399 4.92822 115.583 4.92822 115.775 cv
4.92822 116.297 4.76855 116.718 4.43701 117.024 cv
4.11182 117.336 3.66602 117.489 3.10498 117.489 cv
2.5376 117.489 2.09131 117.336 1.76611 117.024 cv
1.44092 116.711 1.27539 116.285 1.27539 115.736 cv
1.27539 115.558 1.29443 115.385 1.33252 115.22 cv
1.37061 115.054 1.42188 114.889 1.4917 114.729 cv
f
0 113.753 mo
0 113.18 li
2.8623 113.18 li
1.35791 111.471 li
1.35791 110.738 li
2.98975 112.587 li
4.84521 110.662 li
4.84521 111.407 li
3.14307 113.18 li
4.84521 113.18 li
4.84521 113.753 li
0 113.753 li
cp
f
2.9585 107.06 mo
3.23877 107.06 li
3.23877 109.693 li
3.63379 109.667 3.93994 109.553 4.14404 109.336 cv
4.34814 109.125 4.4502 108.832 4.4502 108.45 cv
4.4502 108.233 4.42432 108.016 4.37354 107.812 cv
4.32275 107.608 4.23975 107.398 4.125 107.194 cv
4.66699 107.194 li
4.75586 107.398 4.82617 107.608 4.86426 107.825 cv
4.90283 108.042 4.92822 108.265 4.92822 108.481 cv
4.92822 109.042 4.76855 109.482 4.4502 109.808 cv
4.13135 110.133 3.69141 110.292 3.13672 110.292 cv
2.56934 110.292 2.1167 110.139 1.77881 109.833 cv
1.44727 109.527 1.27539 109.106 1.27539 108.583 cv
1.27539 108.112 1.42822 107.742 1.72803 107.468 cv
2.03369 107.2 2.44189 107.06 2.9585 107.06 cv
2.79248 107.634 mo
2.47998 107.64 2.23145 107.729 2.04004 107.895 cv
1.85547 108.067 1.75977 108.297 1.75977 108.577 cv
1.75977 108.896 1.85547 109.151 2.03369 109.342 cv
2.2124 109.533 2.46729 109.648 2.79248 109.674 cv
2.79248 107.634 li
f
1.88721 103.828 mo
0 103.828 li
0 103.254 li
4.84521 103.254 li
4.84521 103.828 li
4.32227 103.828 li
4.53271 103.949 4.68604 104.102 4.78125 104.287 cv
4.87695 104.472 4.92822 104.688 4.92822 104.943 cv
4.92822 105.364 4.76221 105.708 4.43066 105.976 cv
4.09912 106.244 3.65332 106.372 3.10498 106.372 cv
2.55664 106.372 2.1167 106.244 1.77881 105.976 cv
1.44727 105.708 1.27539 105.364 1.27539 104.943 cv
1.27539 104.688 1.32617 104.472 1.42822 104.287 cv
1.53027 104.102 1.68311 103.949 1.88721 103.828 cv
3.10498 105.778 mo
3.52539 105.778 3.85693 105.696 4.09912 105.523 cv
4.3418 105.352 4.45654 105.109 4.45654 104.803 cv
4.45654 104.503 4.3418 104.268 4.09912 104.089 cv
3.85693 103.917 3.52539 103.828 3.10498 103.828 cv
2.68408 103.828 2.35889 103.917 2.1167 104.089 cv
1.87451 104.268 1.75342 104.503 1.75342 104.803 cv
1.75342 105.109 1.87451 105.352 2.1167 105.523 cv
2.35889 105.696 2.68408 105.778 3.10498 105.778 cv
f
3.09229 98.4604 mo
3.09229 98.9258 3.14941 99.2446 3.25146 99.4229 cv
3.35986 99.6011 3.53857 99.6904 3.79346 99.6904 cv
3.99756 99.6904 4.16309 99.6265 4.27783 99.4927 cv
4.39893 99.3589 4.45654 99.1743 4.45654 98.9443 cv
4.45654 98.626 4.34814 98.3711 4.11865 98.1797 cv
3.89551 97.9883 3.5957 97.8931 3.21973 97.8931 cv
3.09229 97.8931 li
3.09229 98.4604 li
2.85645 97.3193 mo
4.84521 97.3193 li
4.84521 97.8931 li
4.31592 97.8931 li
4.53271 98.0269 4.68604 98.1924 4.78174 98.3833 cv
4.87695 98.5752 4.92822 98.8174 4.92822 99.0972 cv
4.92822 99.4551 4.83252 99.7412 4.63477 99.9521 cv
4.4375 100.162 4.16943 100.265 3.83154 100.265 cv
3.44287 100.265 3.14941 100.137 2.94531 99.8687 cv
2.74805 99.6074 2.646 99.2188 2.646 98.6958 cv
2.646 97.8931 li
2.58838 97.8931 li
2.32715 97.8931 2.12305 97.9824 1.97656 98.1543 cv
1.83643 98.3267 1.75977 98.5684 1.75977 98.8809 cv
1.75977 99.085 1.78516 99.2759 1.83643 99.4678 cv
1.88721 99.6587 1.95752 99.8374 2.04688 100.009 cv
1.51758 100.009 li
1.44092 99.8047 1.37744 99.6011 1.33887 99.4033 cv
1.30078 99.2056 1.27539 99.0151 1.27539 98.8237 cv
1.27539 98.3193 1.40918 97.9434 1.67041 97.6953 cv
1.93213 97.4468 2.32715 97.3193 2.85645 97.3193 cv
f
4.32227 93.5576 mo
6.16504 93.5576 li
6.16504 94.1313 li
1.35791 94.1313 li
1.35791 93.5576 li
1.88721 93.5576 li
1.68311 93.4429 1.53027 93.29 1.42822 93.105 cv
1.32617 92.9199 1.27539 92.6973 1.27539 92.4419 cv
1.27539 92.0215 1.44727 91.6768 1.77881 91.4092 cv
2.1167 91.1479 2.55664 91.0142 3.10498 91.0142 cv
3.65332 91.0142 4.09912 91.1479 4.43066 91.4092 cv
4.76221 91.6768 4.92822 92.0215 4.92822 92.4419 cv
4.92822 92.6973 4.87695 92.9199 4.78125 93.105 cv
4.68604 93.29 4.53271 93.4429 4.32227 93.5576 cv
3.10498 91.6069 mo
2.68408 91.6069 2.35889 91.6963 2.1167 91.8682 cv
1.87451 92.0469 1.75342 92.2827 1.75342 92.582 cv
1.75342 92.8882 1.87451 93.124 2.1167 93.2964 cv
2.35889 93.4746 2.68408 93.5576 3.10498 93.5576 cv
3.52539 93.5576 3.85693 93.4746 4.09912 93.2964 cv
4.3418 93.124 4.45654 92.8882 4.45654 92.582 cv
4.45654 92.2827 4.3418 92.0469 4.09912 91.8682 cv
3.85693 91.6963 3.52539 91.6069 3.10498 91.6069 cv
f
2.9585 87.0806 mo
3.23877 87.0806 li
3.23877 89.7139 li
3.63379 89.688 3.93994 89.5732 4.14404 89.3564 cv
4.34814 89.1465 4.4502 88.853 4.4502 88.4707 cv
4.4502 88.2539 4.42432 88.0371 4.37354 87.833 cv
4.32275 87.6289 4.23975 87.4185 4.125 87.2148 cv
4.66699 87.2148 li
4.75586 87.4185 4.82617 87.6289 4.86426 87.8457 cv
4.90283 88.0625 4.92822 88.2856 4.92822 88.5024 cv
4.92822 89.0635 4.76855 89.5034 4.4502 89.8281 cv
4.13135 90.1533 3.69141 90.313 3.13672 90.313 cv
2.56934 90.313 2.1167 90.1602 1.77881 89.854 cv
1.44727 89.5479 1.27539 89.127 1.27539 88.6045 cv
1.27539 88.1328 1.42822 87.7627 1.72803 87.4888 cv
2.03369 87.2212 2.44189 87.0806 2.9585 87.0806 cv
2.79248 87.6543 mo
2.47998 87.6611 2.23145 87.75 2.04004 87.916 cv
1.85547 88.0879 1.75977 88.3174 1.75977 88.5981 cv
1.75977 88.917 1.85547 89.1719 2.03369 89.3633 cv
2.2124 89.5542 2.46729 89.6689 2.79248 89.6943 cv
2.79248 87.6543 li
f
1.4917 83.6318 mo
2.02734 83.6318 li
1.93799 83.7974 1.87451 83.957 1.82959 84.1226 cv
1.78516 84.2886 1.75977 84.4478 1.75977 84.6133 cv
1.75977 84.9834 1.88086 85.2764 2.1167 85.4805 cv
2.35254 85.6846 2.68408 85.7866 3.10498 85.7866 cv
3.53174 85.7866 3.86328 85.6846 4.09912 85.4805 cv
4.33496 85.2764 4.44971 84.9834 4.44971 84.6133 cv
4.44971 84.4478 4.43066 84.2886 4.38623 84.1226 cv
4.34131 83.957 4.27148 83.7974 4.18213 83.6318 cv
4.71143 83.6318 li
4.7876 83.7974 4.84521 83.9634 4.87695 84.1289 cv
4.90869 84.3013 4.92822 84.4858 4.92822 84.6772 cv
4.92822 85.2002 4.76855 85.6206 4.43701 85.9268 cv
4.11182 86.2393 3.66602 86.3921 3.10498 86.3921 cv
2.5376 86.3921 2.09131 86.2393 1.76611 85.9268 cv
1.44092 85.6143 1.27539 85.1875 1.27539 84.6392 cv
1.27539 84.4604 1.29443 84.2886 1.33252 84.1226 cv
1.37061 83.957 1.42188 83.791 1.4917 83.6318 cv
f
0 82.6563 mo
0 82.0825 li
2.8623 82.0825 li
1.35791 80.374 li
1.35791 79.6411 li
2.98975 81.4897 li
4.84521 79.5645 li
4.84521 80.3105 li
3.14307 82.0825 li
4.84521 82.0825 li
4.84521 82.6563 li
0 82.6563 li
cp
f
1.75977 75.5674 mo
1.75977 75.8735 1.88086 76.1157 2.12305 76.2944 cv
2.36523 76.4727 2.69043 76.562 3.10498 76.562 cv
3.52539 76.562 3.85059 76.479 4.09277 76.3008 cv
4.33496 76.1221 4.44971 75.8799 4.44971 75.5674 cv
4.44971 75.2617 4.33496 75.0195 4.09277 74.8408 cv
3.85059 74.6621 3.52539 74.5732 3.10498 74.5732 cv
2.69678 74.5732 2.36523 74.6621 2.12305 74.8408 cv
1.88086 75.0195 1.75977 75.2617 1.75977 75.5674 cv
1.2749 75.5674 mo
1.2749 75.0703 1.44092 74.6816 1.75977 74.3945 cv
2.08496 74.1143 2.53076 73.9673 3.10498 73.9673 cv
3.67871 73.9673 4.12451 74.1143 4.44336 74.3945 cv
4.76855 74.6816 4.92822 75.0703 4.92822 75.5674 cv
4.92822 76.0713 4.76855 76.4663 4.44336 76.7471 cv
4.12451 77.0273 3.67871 77.168 3.10498 77.168 cv
2.53076 77.168 2.08496 77.0273 1.75977 76.7471 cv
1.44092 76.4663 1.2749 76.0713 1.2749 75.5674 cv
f
0 71.252 mo
.478027 71.252 li
.478027 71.7998 li
.478027 72.0039 .522949 72.1504 .605957 72.2271 cv
.688477 72.3101 .835449 72.3481 1.05176 72.3481 cv
1.35791 72.3481 li
1.35791 71.4048 li
1.8042 71.4048 li
1.8042 72.3481 li
4.84521 72.3481 li
4.84521 72.9219 li
1.8042 72.9219 li
1.8042 73.4702 li
1.35791 73.4702 li
1.35791 72.9219 li
1.11572 72.9219 li
.733398 72.9219 .446289 72.8325 .268066 72.6543 cv
.0893555 72.4756 0 72.189 0 71.7935 cv
0 71.252 li
f
4.32227 68.1919 mo
6.16504 68.1919 li
6.16504 68.7656 li
1.35791 68.7656 li
1.35791 68.1919 li
1.88721 68.1919 li
1.68311 68.0771 1.53027 67.9238 1.42822 67.7393 cv
1.32617 67.5542 1.27539 67.3311 1.27539 67.0762 cv
1.27539 66.6553 1.44727 66.311 1.77881 66.0435 cv
2.1167 65.7822 2.55664 65.6484 3.10498 65.6484 cv
3.65332 65.6484 4.09912 65.7822 4.43066 66.0435 cv
4.76221 66.311 4.92822 66.6553 4.92822 67.0762 cv
4.92822 67.3311 4.87695 67.5542 4.78125 67.7393 cv
4.68604 67.9238 4.53271 68.0771 4.32227 68.1919 cv
3.10498 66.2412 mo
2.68408 66.2412 2.35889 66.3301 2.1167 66.5024 cv
1.87451 66.6807 1.75342 66.917 1.75342 67.2163 cv
1.75342 67.5225 1.87451 67.7583 2.1167 67.9307 cv
2.35889 68.1089 2.68408 68.1919 3.10498 68.1919 cv
3.52539 68.1919 3.85693 68.1089 4.09912 67.9307 cv
4.3418 67.7583 4.45654 67.5225 4.45654 67.2163 cv
4.45654 66.917 4.3418 66.6807 4.09912 66.5024 cv
3.85693 66.3301 3.52539 66.2412 3.10498 66.2412 cv
f
1.35791 64.124 mo
4.84473 64.124 li
4.84473 64.6982 li
1.35791 64.6982 li
1.35791 64.124 li
cp
0 64.124 mo
.726563 64.124 li
.726563 64.6982 li
0 64.6982 li
0 64.124 li
cp
f
1.4917 60.4141 mo
2.02734 60.4141 li
1.93799 60.5801 1.87451 60.7393 1.82959 60.9053 cv
1.78516 61.0708 1.75977 61.2305 1.75977 61.396 cv
1.75977 61.7656 1.88086 62.0591 2.1167 62.2632 cv
2.35254 62.4668 2.68408 62.5688 3.10498 62.5688 cv
3.53174 62.5688 3.86328 62.4668 4.09912 62.2632 cv
4.33496 62.0591 4.44971 61.7656 4.44971 61.396 cv
4.44971 61.2305 4.43066 61.0708 4.38623 60.9053 cv
4.34131 60.7393 4.27148 60.5801 4.18213 60.4141 cv
4.71143 60.4141 li
4.7876 60.5801 4.84521 60.7456 4.87695 60.9116 cv
4.90869 61.0835 4.92822 61.2686 4.92822 61.46 cv
4.92822 61.9824 4.76855 62.4033 4.43701 62.709 cv
4.11182 63.0215 3.66602 63.1748 3.10498 63.1748 cv
2.5376 63.1748 2.09131 63.0215 1.76611 62.709 cv
1.44092 62.397 1.27539 61.9697 1.27539 61.4214 cv
1.27539 61.2432 1.29443 61.0708 1.33252 60.9053 cv
1.37061 60.7393 1.42188 60.5737 1.4917 60.4141 cv
f
0 59.439 mo
0 58.8652 li
2.8623 58.8652 li
1.35791 57.1567 li
1.35791 56.4233 li
2.98975 58.2725 li
4.84521 56.3472 li
4.84521 57.0928 li
3.14307 58.8652 li
4.84521 58.8652 li
4.84521 59.439 li
0 59.439 li
cp
f
0 55.1548 mo
4.84473 55.1548 li
4.84473 55.7285 li
0 55.7285 li
0 55.1548 li
cp
f
2.9585 50.9727 mo
3.23877 50.9727 li
3.23877 53.606 li
3.63379 53.5801 3.93994 53.4653 4.14404 53.249 cv
4.34814 53.0386 4.4502 52.7451 4.4502 52.3628 cv
4.4502 52.146 4.42432 51.9292 4.37354 51.7251 cv
4.32275 51.521 4.23975 51.3105 4.125 51.1069 cv
4.66699 51.1069 li
4.75586 51.3105 4.82617 51.521 4.86426 51.7378 cv
4.90283 51.9546 4.92822 52.1777 4.92822 52.3945 cv
4.92822 52.9556 4.76855 53.3955 4.4502 53.7207 cv
4.13135 54.0459 3.69141 54.2051 3.13672 54.2051 cv
2.56934 54.2051 2.1167 54.0518 1.77881 53.7461 cv
1.44727 53.4399 1.27539 53.0195 1.27539 52.4966 cv
1.27539 52.0249 1.42822 51.6553 1.72803 51.3809 cv
2.03369 51.1133 2.44189 50.9727 2.9585 50.9727 cv
2.79248 51.5469 mo
2.47998 51.5527 2.23145 51.6421 2.04004 51.8081 cv
1.85547 51.98 1.75977 52.2095 1.75977 52.4902 cv
1.75977 52.8091 1.85547 53.064 2.03369 53.2549 cv
2.2124 53.4463 2.46729 53.561 2.79248 53.5864 cv
2.79248 51.5469 li
f
1.88721 47.7407 mo
0 47.7407 li
0 47.167 li
4.84521 47.167 li
4.84521 47.7407 li
4.32227 47.7407 li
4.53271 47.8618 4.68604 48.0146 4.78125 48.1997 cv
4.87695 48.3848 4.92822 48.6016 4.92822 48.8564 cv
4.92822 49.2773 4.76221 49.6211 4.43066 49.8892 cv
4.09912 50.1567 3.65332 50.2842 3.10498 50.2842 cv
2.55664 50.2842 2.1167 50.1567 1.77881 49.8892 cv
1.44727 49.6211 1.27539 49.2773 1.27539 48.8564 cv
1.27539 48.6016 1.32617 48.3848 1.42822 48.1997 cv
1.53027 48.0146 1.68311 47.8618 1.88721 47.7407 cv
3.10498 49.6914 mo
3.52539 49.6914 3.85693 49.6084 4.09912 49.4365 cv
4.3418 49.2646 4.45654 49.022 4.45654 48.7163 cv
4.45654 48.4165 4.3418 48.1807 4.09912 48.002 cv
3.85693 47.8301 3.52539 47.7407 3.10498 47.7407 cv
2.68408 47.7407 2.35889 47.8301 2.1167 48.002 cv
1.87451 48.1807 1.75342 48.4165 1.75342 48.7163 cv
1.75342 49.022 1.87451 49.2646 2.1167 49.4365 cv
2.35889 49.6084 2.68408 49.6914 3.10498 49.6914 cv
f
1.4917 41.4487 mo
2.02734 41.4487 li
1.93799 41.6143 1.87451 41.7739 1.82959 41.9395 cv
1.78516 42.1055 1.75977 42.2646 1.75977 42.4307 cv
1.75977 42.8003 1.88086 43.0938 2.1167 43.2974 cv
2.35254 43.5015 2.68408 43.6035 3.10498 43.6035 cv
3.53174 43.6035 3.86328 43.5015 4.09912 43.2974 cv
4.33496 43.0938 4.44971 42.8003 4.44971 42.4307 cv
4.44971 42.2646 4.43066 42.1055 4.38623 41.9395 cv
4.34131 41.7739 4.27148 41.6143 4.18213 41.4487 cv
4.71143 41.4487 li
4.7876 41.6143 4.84521 41.7803 4.87695 41.9458 cv
4.90869 42.1182 4.92822 42.3027 4.92822 42.4941 cv
4.92822 43.0171 4.76855 43.4375 4.43701 43.7437 cv
4.11182 44.0562 3.66602 44.209 3.10498 44.209 cv
2.5376 44.209 2.09131 44.0562 1.76611 43.7437 cv
1.44092 43.4316 1.27539 43.0044 1.27539 42.4561 cv
1.27539 42.2773 1.29443 42.1055 1.33252 41.9395 cv
1.37061 41.7739 1.42188 41.6079 1.4917 41.4487 cv
f
3.09229 38.8667 mo
3.09229 39.332 3.14941 39.6509 3.25146 39.8291 cv
3.35986 40.0078 3.53857 40.0972 3.79346 40.0972 cv
3.99756 40.0972 4.16309 40.0332 4.27783 39.8994 cv
4.39893 39.7656 4.45654 39.5806 4.45654 39.3511 cv
4.45654 39.0322 4.34814 38.7773 4.11865 38.5859 cv
3.89551 38.395 3.5957 38.2993 3.21973 38.2993 cv
3.09229 38.2993 li
3.09229 38.8667 li
2.85645 37.7256 mo
4.84521 37.7256 li
4.84521 38.2993 li
4.31592 38.2993 li
4.53271 38.4331 4.68604 38.5991 4.78174 38.79 cv
4.87695 38.9814 4.92822 39.2236 4.92822 39.5044 cv
4.92822 39.8613 4.83252 40.1479 4.63477 40.3584 cv
4.4375 40.5688 4.16943 40.6709 3.83154 40.6709 cv
3.44287 40.6709 3.14941 40.5435 2.94531 40.2754 cv
2.74805 40.0142 2.646 39.6255 2.646 39.1025 cv
2.646 38.2993 li
2.58838 38.2993 li
2.32715 38.2993 2.12305 38.3887 1.97656 38.5605 cv
1.83643 38.7329 1.75977 38.9751 1.75977 39.2876 cv
1.75977 39.4912 1.78516 39.6826 1.83643 39.874 cv
1.88721 40.0654 1.95752 40.2437 2.04688 40.416 cv
1.51758 40.416 li
1.44092 40.2119 1.37744 40.0078 1.33887 39.8101 cv
1.30078 39.6123 1.27539 39.4214 1.27539 39.23 cv
1.27539 38.7266 1.40918 38.3506 1.67041 38.1016 cv
1.93213 37.853 2.32715 37.7256 2.85645 37.7256 cv
f
4.32227 35.9917 mo
6.16504 35.9917 li
6.16504 36.5654 li
1.35791 36.5654 li
1.35791 35.9917 li
1.88721 35.9917 li
1.68311 35.877 1.53027 35.7236 1.42822 35.5391 cv
1.32617 35.354 1.27539 35.1309 1.27539 34.876 cv
1.27539 34.4551 1.44727 34.1108 1.77881 33.8433 cv
2.1167 33.582 2.55664 33.4478 3.10498 33.4478 cv
3.65332 33.4478 4.09912 33.582 4.43066 33.8433 cv
4.76221 34.1108 4.92822 34.4551 4.92822 34.876 cv
4.92822 35.1309 4.87695 35.354 4.78125 35.5391 cv
4.68604 35.7236 4.53271 35.877 4.32227 35.9917 cv
3.10498 34.041 mo
2.68408 34.041 2.35889 34.1299 2.1167 34.3022 cv
1.87451 34.4805 1.75342 34.7168 1.75342 35.0161 cv
1.75342 35.3223 1.87451 35.5581 2.1167 35.73 cv
2.35889 35.9087 2.68408 35.9917 3.10498 35.9917 cv
3.52539 35.9917 3.85693 35.9087 4.09912 35.73 cv
4.3418 35.5581 4.45654 35.3223 4.45654 35.0161 cv
4.45654 34.7168 4.3418 34.4805 4.09912 34.3022 cv
3.85693 34.1299 3.52539 34.041 3.10498 34.041 cv
f
2.9585 29.5146 mo
3.23877 29.5146 li
3.23877 32.1475 li
3.63379 32.1221 3.93994 32.0073 4.14404 31.7905 cv
4.34814 31.5801 4.4502 31.2866 4.4502 30.9043 cv
4.4502 30.6875 4.42432 30.4707 4.37354 30.2666 cv
4.32275 30.063 4.23975 29.8525 4.125 29.6484 cv
4.66699 29.6484 li
4.75586 29.8525 4.82617 30.063 4.86426 30.2793 cv
4.90283 30.4961 4.92822 30.7192 4.92822 30.936 cv
4.92822 31.4971 4.76855 31.937 4.4502 32.2622 cv
4.13135 32.5874 3.69141 32.7466 3.13672 32.7466 cv
2.56934 32.7466 2.1167 32.5938 1.77881 32.2876 cv
1.44727 31.9814 1.27539 31.561 1.27539 31.0381 cv
1.27539 30.5664 1.42822 30.1968 1.72803 29.9224 cv
2.03369 29.6548 2.44189 29.5146 2.9585 29.5146 cv
2.79248 30.0884 mo
2.47998 30.0947 2.23145 30.1841 2.04004 30.3496 cv
1.85547 30.522 1.75977 30.7515 1.75977 31.0317 cv
1.75977 31.3506 1.85547 31.6055 2.03369 31.7969 cv
2.2124 31.9883 2.46729 32.1025 2.79248 32.1284 cv
2.79248 30.0884 li
f
1.89355 26.5566 mo
1.85498 26.6201 1.82959 26.6904 1.81055 26.7671 cv
1.79785 26.8438 1.78516 26.9263 1.78516 27.0156 cv
1.78516 27.3408 1.89355 27.5894 2.104 27.7617 cv
2.31396 27.9399 2.61377 28.0229 3.00928 28.0229 cv
4.84521 28.0229 li
4.84521 28.5967 li
1.35791 28.5967 li
1.35791 28.0229 li
1.8999 28.0229 li
1.68945 27.9082 1.53027 27.749 1.42822 27.5576 cv
1.32617 27.3662 1.2749 27.1304 1.2749 26.8496 cv
1.2749 26.8115 1.28125 26.7671 1.28125 26.7158 cv
1.2876 26.6714 1.29443 26.6201 1.30713 26.5566 cv
1.89355 26.5566 li
f
1.45996 23.7324 mo
2.00195 23.7324 li
1.92529 23.8984 1.86182 24.064 1.81689 24.2363 cv
1.77881 24.4146 1.75342 24.5933 1.75342 24.7783 cv
1.75342 25.0649 1.79785 25.2817 1.88721 25.4219 cv
1.97656 25.562 2.104 25.6323 2.27588 25.6323 cv
2.40967 25.6323 2.51172 25.5811 2.58838 25.4795 cv
2.66504 25.3774 2.74121 25.1733 2.80518 24.8672 cv
2.84961 24.6699 li
2.93896 24.2617 3.06641 23.9746 3.21924 23.8027 cv
3.37891 23.6367 3.60205 23.5479 3.88232 23.5479 cv
4.20752 23.5479 4.4624 23.6753 4.64746 23.9302 cv
4.83887 24.1851 4.92822 24.542 4.92822 24.9883 cv
4.92822 25.1797 4.90869 25.3711 4.87695 25.5752 cv
4.84521 25.7788 4.79395 25.9893 4.71777 26.2124 cv
4.12451 26.2124 li
4.23926 26.002 4.32227 25.7915 4.37354 25.5879 cv
4.43066 25.3838 4.45605 25.1797 4.45605 24.9756 cv
4.45605 24.708 4.41162 24.4976 4.32227 24.3511 cv
4.23291 24.2109 4.09912 24.1343 3.92725 24.1343 cv
3.77393 24.1343 3.65283 24.1914 3.57031 24.2935 cv
3.4873 24.3955 3.4043 24.625 3.32764 24.9819 cv
3.2832 25.1797 li
3.20654 25.5366 3.0918 25.7979 2.93896 25.9512 cv
2.78613 26.1104 2.57568 26.187 2.30127 26.187 cv
1.97656 26.187 1.72119 26.0723 1.54297 25.8428 cv
1.36426 25.6133 1.2749 25.2817 1.2749 24.8481 cv
1.2749 24.6377 1.29443 24.4404 1.32617 24.249 cv
1.35791 24.064 1.40283 23.8921 1.45996 23.7324 cv
f
4.05518 21.8965 mo
4.8457 21.8965 li
4.8457 22.5527 li
4.05518 22.5527 li
4.05518 21.8965 li
cp
f
.53125 lw
18.334 186.487 mo
18.334 2.8877 li
@
255.484 186.487 mo
255.484 2.8877 li
@
18.334 2.8877 mo
255.484 2.8877 li
@
18.334 186.487 mo
255.484 186.487 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (006x005.eps)%%CreationDate: 26/05/15 5:53 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6l$=hic7&VH!;?Iba;h.(a@m^eT'&*ZY`c(!+@(8AIXdl's")JreAT`&l-iG3I[Yf0--MH&bHb\lZQ%/]7eNPH[aG$A@Tp0u%Zu.=,6Sm2gAYucdm>o_"a'U1Vg6N'LF1.q"W3h]9?.D9FTJ*_[n!0?F5@:ffpUK%,X`Z\DB"cmc/>e>T<Z:4Tar>Y)8T3*/YFhe1%@E3aFJ(/8qB)AXW9ri#(!MHGUD>\e2X+roH0=CL_>'F6PlVAAL70au%pu"47mkeA:5LnIB6<^GXI%eS$G[Nbpmq9%G(UX7*TH`ZY%#<-ubAI(p.S%^td]mY"6m7R,Jfm&mX<OSC!Y=e[*]rn%./6,?tY"#"Rf=kG]9"0PCUFTs%7&8g<nXYt6NPqYM$U"K=3DdS)%21k)%rUEb^cXM44<iO[(KL:H:p[$pi:m4ns:_`IlSt,f0C[I&"7i,%#"3;c>3bVQ0F]96.^KdtTd2!i-ifb'9YI*2%>pSfLr<M&jR!)R@%8-JgT5AP,Q4fI;;<GS*`0/8_"\sma\a%fj)S$QD>9PZXe=7*B[.S^o]f.=eI[&P(XH<#?U=o]pXA6%;R:rc+K8*uAHO2doX?I2@i%dB3+4<=%+*dLQ)gXiWTOs"=2@OGu6HmFE2_)+_Z&#6Ks\j:9I+"m>>Fko,ft`'.0gGS.h67*Pp6NCKnqXXk[D3=:qqJ(#?dG!XLi%oM=)te$@o\FlBZ/A5HQe^UanNFWI(=3dFm]_qX6(bCWWX"htU-?20(NQ;oOnS?<62>SkPm0'EfCKi5&]V;N;?6E+E+8em9RB!DV;%MFApl0#Q.Yfs9Q'EZ(I8bN'[10qjr\6Y[lBiD'#N8(n0>:^YnZT25mK`*,d)6&XY7b!:mC'AC\j6/I;R_'f/4(;VA+,((T%TgeGW%m=r@UKf25fKU\cd-jB!i:FK-o",t>,-mq,(>U3R+:\#iH3ME%k:1tl["6E3GX9A>(V4`8+$(-MO8ZTrh+u/j#V4`61_LsH#?"b=-%_CoRCO["4+aoMR9:^Yn]T1"Q)9*elrrD4`f!MGtI&!Im)O)Q+3&\^!6OHpRFJT='nWL%")nffC45:?W9A"!_+K==FQa\ujpHpT9V%hp=R('Cmc'65aHB.a'Z<oc:n0;?P<aVSc)/R'm%W6rSmoY^XE!9))/[,?uVh'#"D.9HpQTKQ\c_C+%ZUqrBd57jo`JP@ub73T1F`%:r`NkrefQ-hFV9]D\YEnnO_q.d;GiU6N>t\TgPoZ$Rmka$TS2UN0Eb>i!,sAdECf$GfcGTWo/BrQWQ\ArmN^p7/SA2?m()Oi\1+o%b*jZ.Lqi#CD3Nl:0DUAs1B-GrXDWgm.hp&<nX'1.fH@rJ?h,k8/X6T0r$DA$2p$".Qi'eW5@Vr)G48)a8q+*Rj=b8?AeY]\>Z/dd%g!g@hWKAP3-iPbi7Y6kg^Id]c>-d=0\YnjZs*F!#s-FFq6$<RB^8)Th$%3Qs%fB=4nlOM;InKr%$3rc2D_PE!0Dnm(JW>W&M"6_g%MA#7lI'\r?lqLDkD^kq]VR8ugLj%6[m&?u;S#f&M2`E_7U@"9(gq`SsN+UD*/j/1$Q5$!^[gAWA>Z8ZpB-g65%;6@C!LLZ*0pW:>%2PJJMU%c_!#oEs"/0Y,N6Qu:_?%=&G2MAGRS`-k5.F1`66X@@Jj?`*thW)q6hK)8Z<0!npDgf.?-H0XRWhA2-*Us@'S?s*(##\PM%]O4tXmuk/jNZ*R_q0ekVpXDq,#.G7\%AoQ+Kf(`-4)$3j:%5SbC"Rbt"6GQ"T,=Ajd'rWqr_VG8iJuh7l5-:)C8nZ=g1Qac&%.%7%'!>rCFek(Pe`<%sINm=]//-Y[a'`.p%'L*+9pp2,.smcM(&?$$O-9dS/bE1>48l9,\eb&^[ja'kWFQ(<"og.Zf>I5$GX1"p1>;k4%BaKha@/]BL$DWd;[=5Je:eTZ*dI%Q-"+;`5^**CHeg.aPgJt5$Y"&g7UPIbSG)c!God$b\TP`omZ;:%oQVuM.;l^pQK=rji[iH^C%QFc$[0m,SsoMLrk-gVJp<:@G$)p:QW\;.?PY)ED<App+G*2qb$q5K+qF-G?oYL]X5*QLh8-H"m*&^_AGMj5K4O3@1LXNfV2Pta$:%>=K.\U_-WV&\6naP'*G2emNn8Qe`e_OhBqrl]T\TCSWe\b+e9(,[ZE'&qp,to.(/ar)P5tjC]P$-LV85VndTb4=/hkGq/\.9X?!/%Mb19L1_kBnp6<<pB(^`,<cA4jjF>T*:qIH.41@iDAH/u"7_'1/JrH7/Dhl"@ofmdne=EBfIn_][68uG41uu.(WP<=852ksd^P*6/%jJPJsJcBeDg<H4Bf&;A27"$DBPKXR4[t9A?/pg[t,/$DBk#TFfI?T#$"_P*Zb^r(>rM>:,9c5mpMP0##qsmZ_PPg+/qX>O"P*5)#%VdPcJ2:f>UDTJ&`CZP9F9Q3q"iWQqh\B1\%ENGMU"i[OG@O=Yu'_eMZ?S13aI##HGUSV$VaBVEi0(D0tqXb5+'u?WMGpcu".n-O'%E0ET?aN!@:nB'OAB/"8EUSCk/-,$Rn7t`it`_O34`dD51R:cZo2F7M<#J9Jrcp406WgK@k>JMLZk[bTMRp;[<loXg3%$USOHupX/%%FYg',<DR@1E?#sjuKH"`T4=oN@I?7agYaN$PkEW/675TDUt:qj;IuXT:FHC5:mNBa1n5VS#GsL"(Lf"6i=lJ3j/LU7pGBC:MZlu%X-oD/<1>PKoQe(>MMe6k?@LL4]//\c$4u+?IQk?N>ih_<'8`YmYI&(ZndrKnJ$QiZDjP4RRdDcu3e;0,ri"A:/I="a<#X<Z<MeN/%7t"XG1b.lLL3(T9++Kq2'uV>J>JLjoXgL5B`%_)r0&ioSU4Dka5t.(,H[;GnCK*A82u2\aSA=.SS\;n?9fp&9roq(nc^W0?8*bTA%Yu<?26M\Ad*QRr/`_h@BW4+*W^gC$6h>Q*YJkCgMJ0+]\Ynnq`qSugPdX(q<%B:Q/3Nn9%lUS5Zr-E).5<<.<T-VKtV;;)pXk1kt%lu[#M;:pC<^HNQ9Ukm[7$#5r:/QeW@T=n<022nm=?H+;;3(!3C=^]q&/hBC0?^Em+<TieBoi``.heP(Ke%e2rMlGr&AGmuBp$T^k%3e(9-WhnlWq6Q-c(2=1.U83iJ$=3&t7,La<Cuojo`Km-]o_"j?a"I5Z)hJ!P<gE;CqX-X@<tY6(1^+9*f@<ilR(]=q3fiPpIkcYU%8V4\/7NPXr25L#7MW:%&fRc?7e4K=L"#ta(*H1F>(p8<i\<#"YI-YJK/hi*_</!FYM?R\m570l9I)$<SPZG3pJW/egH1i26'7PAB%!]MUr5Oi[B9]o2eQ+CUMJ>N(>@]`ri,+V,3o/nM$KU"(>S'CZSY@!h=/Xa@;fKX1QCDd*DGa2<jFR6*`L*;'C^L-X<.^/mp%A\4/%^#8('<9c]TJ=FjQTOrEiGQ2L,VtiZk>p53u;Xd]P<iUrl_\8[Q7_g+2p.+5@%bk&GIg71sYLE!Uab;$<k4S\J?>\:4[#D198-RDn%gAZ?mklRRMpee5$s0:4UJ>Ip*p:i02`(ff#%.A9Rs+htCHEtqD6DE`rKbTecf)Bm4+PP0m&H!qZj'I3rh<*>H[<\?NiT`Cq(=\hW%T=&DrT,PsDmI/(<7X[OOXL(h`4N%\bCYR#;h?g1\rRrX.iigj`5!$mEfb,Q@P.0hL?iTr:2?J'e+0Y^#i=@m.XSL=oXl58YJ'0`q%8Udjk]Y2?I5FS>0/61/e^\]t;G=I"a./rg8mCpV"bB.f[C79XYAl7Q7>P2WFMs/`7m;LRM56II?f[fO4q1#U!r&:Q30?l-?TD!'8%\n##hI,iZNNFqeNe#M7/r(RB"1cG:s51Ya3^_maS;?2=@1YpG-rsCh=2H$V5rhso]2hOU^BF.[5o)K,(mmunK)K.j*[p&X<fn-`F%8&=^'a6d'.f)DG15-OpoS)15qF=T!dooJO5?K@30;J=Z3"WU5#oc/A(A?V7^3j!_ic\"jedoZ??VpOkG1b7rC%8[@$;Lr'h@U"k^%+-#]&Xa]+h-/&l^oCR%/o)Z8XV^cu6FrW#LgTE!=L^W6Z'tNWq16%G6]galN;4@bcr1``OMF>Nbs%kTp2"FU*p#u]KJ=4t=#poP.%jGMI@kn]ISo8d(e"`Z>u,'mp5$R/tF,r@Ebi-)I*nNY:<[PUBfQDPR"@/f.nGIH3_VU".F8SG5+H0)'$CURf0TZ*a'g$C,qj9@Oj%L?[?![,Rf8Ytc^Td&bLlG'QlA.!c5ZP05<ueO)e?PH4!#6@[t#f1MSlagR<u3iX.r%M4%kBmb$ZOk/K#"9Efb+Y\jC#[jJ>\\Tts%pef[]+"5F(/a<3fT((a++.WpO=3eCBDCt]:/BIftPC!(#UK[P5q4lc&U!Nb]=m`WMTN[1g$"Bs<>)@M+SP[lOa0Ln#(@0ULU;[t(%Pc_a['lIJ)5Xrt8ddA%1Y9<EH2&;/_h+H^mGOMIO>HYWi$B;N@Cgl*3?g1B%i2mJg2TO1.Bn=([<s'b^?n+e8q__pad1<>V6+RVF%HZ@RWgM<4SDFQLNgYPK0#eM$eU2a&PmR$"Ip4-4]3j,5I'GRs12]_e7Em(@\1T0:JaYE`Fm$*"bFljQI+q."6dF7;FppL+K9#!8-%DZ8O8]Cq!9l$-K;5:u'RXd.RHfQ#@Tjug:CSh(d#h?:;1f98:81'-c7Vd!pir./TJn%;WbU73Q_AiJPGZr$#4a4F*-G<a6*]7X;[%j6%pE&o8Y94dR:`Z-4Z4^0rrPg`'PXJq0;NI_)YRDYb%\qXHe[G,[YT43c-BE*d3509d#N1k3+0O%(_Wl*d(Rb[6B!r$'!8VMFSl%>3A&'C;3-ZUks%h]s3tD<*LG)+8M2u8&qN5SQ<)_/+lp,I'W5A,Hk+H<r$j1Y`g^;FISfM?Kh]8WJ`n7KIgk2AjDe!Y\?Z)ZdF1!%7!OiURV_s7X5"\o-C*l).ud<)JgNsjIj/\N<MZo",J<.MCluYa+H[g/NT=?^1%L"Y$+3k:Y.lmLeQT@^kir"RZeNf9er%,-f]@TA%?ZOeMYLMls&?6Vs]tMhn-@5j"m`d\Jq2;[sBWBFY!B'9.P)'Qi5.ZHqh"gk]]c_t!)-r1YNKb&&\#147JkD#)ic@oJA?jm:JK6+P%i,1gClXf^1Z&'Aq9p^pL:(+Y&^7X7B4%cQBA_7CEU8B?YrCf%h?b[0:c!MRJ"kS@9p"HS2ctj#KNY$pgY[G/8j&<?%3+O5E/FkMm%kq8?V:3=T2e,Wg,=GS"*&ZU/RQ$\S-KSjo7A&GlKO>rq-kOl7ApR$<N[-Fi2ri1WLeUdNjN\5ca6)@b'?_9?+`^TLNY8iC>,qe$i%Ze#>V]?OC9Z?>5)6uX+^7L#bkohumPe1XCF_;,4dmS8cnnqJs7e]B[`D\Wk1#q>N;!I]]_.D\I<aACC(Oo/s9F.Jqi-nTrneU":p%X3'B76#A!g7.Z&Rr3qpn2_2H>m4<MG&#W$a'Z2"6p4Gs]Qbto?LQlS_W]r3A3mfcA>Hc;-%L%$3`-Rm.pKBYK&QnM;N.)mJ),on0%h2Ga@csTII:,>6p]it::/qp\'&N6`'I!!+Q/O*T*g\.?M1)cBlf]INiBbA9Np\X4)ORKa]59oN.X4?ocYaC!Ne#h*YX]@<L&h$d,%D<'^j?q+_$9@Te?H@hJk>cG+MOfXZO,3<NA-W%C1.3EM(OYDf8"bgN0$n\QZ]_#jJ_2<r(8I?1\AlOGl-.9</cL^o*kGQqnoG%LX%oE;5m.U9)u52I2t@m/1nS_9r])7-%dD);YSp7Gm7AB#r5RG*(SjuSTsXCm%l0gOZ2^JroaSJ')QV(Jn!">e,Z[f)N22M2B`k/h@G%F#l=K1Grp<./Gtb,a=m@@58P^4H0ajZC'27bFe#s)\(Hekl)$pMiR0Q_'JVI.!lr2D+>D.PT\OWH]MndG(eb?3u;%SiX(bX'PYt&%Q"VNY%6CWcB)@&j=\,VdW;h$*](KSlPpe)inR;t>Whg`g.igDkeJbYnZl6t,lDjm3:Pd#ghh_RJY\4J[9eC)af--o5Jtg\h.EL$0%E\DO09`dYd#@(t"Rb`cpM[Qdd8#IS7MnfhZH&%%=C=+'7Y!RB:&nT<Ki)Fmip;4m+?SE+8,5%D3i2?)`;oGG'hO/D8'p[q(EbrZ.%TtKEHs46JU[J$fXX'dG,fFtZ28<OK4o%s;jp.)MLrcD3:UNV/Wl&SlY<q+*f4>AeEK[&P`oN&S%L&!RN9I!EE0XK'^+i1A[,mf3A%aQD:lN`<E.@4/`!!AI'sJK"$@[_E#"?218qaMP,K:aJa;QT_'_\T9J[#qL$C#<7'&'d4i.U`nu$3@#VS8u+-o7M$0cNQ4<&&V3:A%n`\''HEG=elUFgSDPo];378:H6_J*aeHodP<usR4hFJhC&Le]<R8E.0@c?<Ll4%3ZPTk#U$t(<j0gH=tQHB;7L-T.JE)tcIEQh;i%9IjMA>;`&?\[BVI]TSmKR%IT0n*9C:1R:fPFoL<PJ&;e_oX4;Y7d68Oosm57\l(!U;JoP2;f-F6e9]Hbkh@VUL&BG7.[ui1rERXl%*8\8pq=bElkkS:41\\5#QC0tI/nGf_"&6n@ge?bnbtN->`9:m*"%6DYdo\\X?I^tSh6Ck"YM8/mkAo%cdZphWWbaoMMQ(F(]t3c4%Qu=#5Y4&ol<G-[S.T^NE)OHr\qcfn=>J<*NY7t#De_,Q1TXEtsrA>%(N&7]n2DXljO#ra5B>M^6^#mV5<=Zf&1\4CB1GeXm=jP<6%2a3mK1NLs'q,8SXS=T5>8],7HT!S)h(.u$61feK&_Ua]YkE((d0CF#q)'r7uor%11!bAb..sFHXhfjP3<jsiJJuQ;.a4X'r[@`rO%(BiBj/(Mb2P)OR`F5;;4.3/D^*qBlCdCXJ/`gF1oMdB=:/!$Ju+"jXXW&0e4<GS2iTC&jTTA'n6h2@@eM_EXqAO-^('M6(">cD.K%h)=&)iA8!ljfuqQe3pVX<,)6m3B&\k13%W$.j]4uW`@3ag2]`\f(ap)oZI]He@<%jb3']k6'\=QS[!3N0miP4E#R5,AS\rh+'RpY%m_3ZP`nlXIrN!@7Q-LLHmU>V;Q(BkF;s6ZFfd#%dM,daDn^Ne!VT-0[<QCB!cLnIl.YV3>e9P^l>eXU:TBWJ"n]AGB^?#GII9\`r%%'A%)s#QXdQ):k$C6;Im([Wd!Fb2,,[NCLpp\jo\8iotP2el0cW@Y(#I%Qh\W,2^G'r6/NP[3B)YgTfIRltcfV&]_>Wg"SHb.(?R%ao8_Pj4Vbu5r#IhMR#,>Hl62RQ;X*M:"qV@8uWhHGK8muBNoBjVL>"ImEetG-^AT+J!N6_hC^>Up4<X:cLt5K?#/GkR`_@>m?YMh%qffN7O@lWpqm0IT%'-b2*6^UV^.M6SUtVC.`V&-U_pcCnc^(I#cq=%IB=\^Rl.pr3p,"R[C'e_BhKJ;UmWN2'YgU^o``m,QBC@4t%qMIn=(0^*kEk0e*%^'n\cX)jfQWJbhD=*@;<dOSK2:fb,IUHB@PcM4*;K/H;X.)nG-P$`=Ps-19meA9N[ErZ<hjDr78>Z'@o$F?h%"BTpE]Cg=-3dP21:HJs*-AT%;SNWIcKN*8=Tko1*m06VV*%m1]efPYc;5K3.\5G/@$*3^iA3\I6?h>4CVjY*OYKYuu[Ah^@D/W)A%Q06i>!`V5<1X\Dar_@#Pe_R-E<:*<4D[JSNaV@unGAYXWdL7&XB1Sj<2sQFT&C.aH(TSFP1l!SMD3:sKc2qcsZ0SH4DJ=IA,*f=1%HOHE;c1h%"EVPJCeL),jHeq@B_"(Q5)GmQqDels]CGPkEc1p\0q0R+6<k<O=o<EM@=aN=[_cs86AGNkGF8KG;Z+29SqjuZ7W*bm"%:Z'"_q?_I?/O)#(V9+h.OUNT"MHTfJGKohE[2ejrdG=V?r(e:#A(R\rk]?WGBCS1XWM@_05)2@NY<5R:V`p,Dirs;jp,2L0rOKq:%(B3sfkgr_Z;p6t3r+PHiANSsiB7"ZGq4^6JrgN\,ICLrm5*gZHVs;p/s67_p=bC]Fi;$quNd7#n:Tq&Wq+US4qpOJ]GhU'?kNns,%&c24imW!#(o]bP8[W)rPP]H-VZb6,Op,6[Rac[P<FB:8!Y="qr2I=]&_`9WCRG>?F%=Pfj3-_EV52Fc?`mesf'f+L]b[SZJk-hS+%1<\Ca35+C"3d6&$=eecN\Rg8ogcg5EROnY*a*i,S@Z@q95u6*Mf8o!jBPJm=%#YM"7IX`_mYYIo-;Vn/:M.Pp9^>HhbdWsBfQD,Z%bkLilI,k9.cHMVMMst_?9V"6GhDh&7&dq(mX.4&]]@e7SVH/]nk\-W$jUksE>_arGqaDhnBPJmeVYl"oQpT9ClQ<@QBY&h2r3ac7%)pa#8]Z_MQ2RWq@SHY(ZQ7JM1f%s.g.^d::03\$1H/'4d_Jji@=t(AAI]K0-.ck#mB0hg2rW32aCJ\6/d]-QOEAet?l5X]38X3=(%-c\ZPSalI.WAO&/4pJ3>:OM!'9"4)W8nW$..n/f1d=NjEhDh)gn@%UG#/f6T0r36eL[^UiPrj_5h"S5lcQ,>&Kt5*JE2CaG>Yq8A%/r$F_T*f-`p..M#"b5Ug,L`+)WlO"qoT?I[]WHWOQR(Z6J%ci+jfJ"@a3EopftrE,1uG:h;1#R!g3d7pP9No!j$$7gH)!ODr0Moe%fXN'4S?5_Z/7-PMN%`J7O4Dg'opeeMEP)W5FgX*5glgYeJ7-p`T(n:Z=EV+@9#tgK2PF`Rc1iOc<]@AWA,`,m/&2WOX$BL6R^UWg%76H\fD"KXVn$Q&ZJ"1gt(,Y)p`/BtTQ7]YXcb!tOjGRO?EtTg@5I6;1`96jul;$ggGuA+FO7UMsREa_%:s#atP!7]m+HfW*9%;>9%'N3b>H#7:jfb"f8?_A#f?$lA"fFpphAiY68dZ#T1.J[0R0n;rLp>M'7q4454CV0ejH2D2@gBWc-7B$,l-D!n_+MXdL6XuNQ;1Wr=%MbK\tpg&nIQ:0Dm(APC(Zt=12In0)nQ(7He27ag4kBQkf@[=HBlg>8(/?e<+&Z1>DqhUia9s87'6)Ci3^XJJdM"%[;\4:ZhZ1/.Z%h;]hpD[85lS+G]nnr?.bHaWQZ_:pJOZQ7gOE@`cIBfEb4aedB\e+C&ko7L^GK3YkY-@tU6&5l,A8Qo+Uc:q4$pF,ncY2urLFG!sN%GV.=Y4/(9C4O6\FnubV/@[_57Q&2L-3"6:)$e.K\UP(BLs5'8M@Cj?6)$bhHH*$j=nMj2tADVbogH4Itb!E]N7hkjfGEoH!T1DP6%X7I.m4FGr3[a<QZ*lUC1EI)[Z<1lpTn:AM,K%RcJ;1WM@Hra'5G'(TXOsi\7l#$[Q[CZ%Z$#1a6AFt7TWHBlb4^M6D8EP4e;V_[#%j&4Q,itJNCT2$c`+UI`Xq,lmD0Ci`C\rd)Y?bTssh#`UQHTbKg^m*JuWc!+L[!u1M&_.TuDZiqn[G;CWN_V#\+XG17$URh&9?0Jf%8:Ku[cfab:/>@QAO8KpD%NUZRRYrJSi7@GM0ZkMtaFNWY0e1H=$n&uR%>!jmH4n[Ka("tXr]'W$*Z<"/M`(RU>+U]ZG.VDHg0O@j%+aFdfa#i/GB.A-E@`LC0h_RhO2Sm)4]/DRQ?Fb(S4cs-H9RQig3GC?0J3.Q3hL8Aj"AtB*C)]*AP='A'[DRd]:n'"`MI>%T45MC(%&-B6^;NaiG_?l('!i^!6Sp5\,rWj\(`HHX<pWX-06:T5/D$XG)q,Bf,`Id6,A5Q8.\PEAum@j-7PJZ#:gC@opAn6S5?NJhpd).s+%#posn8B(bC#MlB=Q/rL!4SkEULQaP92r@DI!$8`)QoL#"A'kKgV]Q$!DkC[VO'4Nn5LY6fmdUtm`ttB!LACDTG@3`+.REr0fiSQH%]'AEFB.J6iUN]I.B7*8Iht<*dX/CRT`\%lY/"hfU.Ke74&$roS>b>t"oA2+6lgNhaP;H'W.3q63[!$9<=Mh3Habhq`00P.>'jnRZ%s#i2*iX*b^2/R)qV@h"d$bI;e@ctX+iJf^;pW#?Hle\m%2Sal87XFR+%G2dpPBV@CeH+Yn?b<NrI,e^0^aKuAR(-7jcP3&JI'@Mq%gp%K27kt7>8;#NZ?N22Ga(/g$ks:J?@_=5)-X>o?rfVeUM^R1kC;_gIig+!TTtY\Y:W7*;bV2TabFX2+*2mR-ThS0k'3_6GSr%J0%H7h%b[HAY-#&6uS462+8qB?Bag-sTZhZ.nE5uYccq8;h,q6Gf8I%ZDIjCGtU/65Ke]/QB_#WC_4nI=4@MMR^+P))&dnHHDuqTQ\W%3S8##]lA^A<:O!Se_Bcn[E6d0&hHrU1tB3"S]NI*cqCD/(lObNZJ?N'iX+h"6!/pJ)hDXXPmW'Gc1h)Vq*L3hf*=[VMaT'1OA7Jo%mI`DrG`-?Nc_7D6$0,>\]QLX^i?iMM$-9JYT5/hJXSc@nKfDa31IIJ=,;!*^F/I!PF["td0k5E*MhW(TrZ*5MG]3$H@Mk$cMngQJ%,I;&"_P.M-.7%3"WC;a3qabTLY\7/8hU'oJGbQcn.QO*Zf3U2'M"RG:NG6+eP7R"??@hoad!-R6=qm-c%YMG/]$ZH'6:<W$T%H$<%]F1qGn%"$=n3f_O4>ZKHK3d%PlK:[bQ8,Y,767l&J!h2.X(QP1N.nIK-Cco!?Of&^p<!R"k1eHDLf".'*lhTI./&EDEXRO29@uuS%N2Lkl4U<p'e$kGi]TFhW+'DPc.qnrbe7aZl2s27l&SrW%kG49%L6]$m^b#V9c1nHF7cWA><8Ol6<6(/\L0$sEeu<JMMVN^Un)*ll%4!_45G50Grn3i=ka[S"D-_Z#322Yg)6i6V.-"njjoDSYX_u&o$DV-`\P/pYaB_^)h;@KdY2?AD76:\r4l%Jr<`&<S4f&L%N:[JFM%aK,g?"lqjh*RqR3F6)DqqmnFVQcLJ[G@)`_h6CR]E\('(O.TZ$8`kVNH.XaW&AJG>o.lq3,N9r]R&GZV&_sq0_\2<6/*7Un#,Yi^%SE.C2C"gRLod>.UBTep%?Fn!T!FWq!8,'k^:e%qK(6HM=hBZ79!E?&"5-_K(56<,`k3PM+jKQ#mY:Q</GkqPCkT'CFEq?D',8--7%q:<L]h"XK&Xr,Jcc%ALDb_#S;S1iK>b:GJFT#`')$O-J@1?UQZk0S*f#%l6@;Z]FM6Pl:ZQcb=8LT[OQ:BhiEQG_n47;'t5[brQS%kX]%gbFkUdMkP4UU,2"H[c#LmFFf_J%(`*J_*N,*U,2#cfc@umcp_ToM;5T!Ep05RkeN4<,)=H^U:gAsK@_XNc_9YFb2hs23'n7D%$$8:0Ngi>XF11R#+K-T4Z\sU;#a1qU:Sk"*QmcIEgkjhY'HU`SY9]G3rbj?[_S"d<Or3N<?A/FUj9m^8DJpn-9#[^e/^8SU2IN01%b0+mK.MuLPK/C6u[EHt];p[]Zs841:*\8o8eNR^GV)R)P)n?;cH9=cEhoa"_9W'/T7BWA@$;Ht!.,n1fY`?[Qm&#8>Fl-%\4;4@U%-J](C]bMeLB^CfP-3tQ/p:h=f+BS2I@=79L[t($2K-e/&ZP=`B-ZQjX9W3j3Vr].Nr]V/4^(j&)L85I+NAa-[ZkCYu>2ENfcYDp;%c&;99Vru0<Ei%RkZo;*W07)O\8et:j/'5.RG2U\-N"2@dl%dON&[N\4Z4dAd=P/^paK(q.b82KkDdSGO*JU)[(Zon[jam65^d=Tp%!V6#7i^T_-o(ZOco3]L#6*'M)['>EMn-P,Mn<!9+*_+ShP[ft,TdaRaHlos+Wa"<cAq2t1=FP*!_$ougq`koUa4S>noHlp@QQd)3%QZlFDOMspNOuH9l=%C'2kVU[N3>QfQ64Cn^feXT!2[eKE:>;Jq1J*!tQC@kOhh7O`E/]k'QK'>i`1ZlFMkT*4HW8ta3N-jhqo6*8%2VEH3p',\mcFVtu]hfD_k+N$2cbd>37j!a89=g0P3If=F]S)l@UbeUH^(2Z18V7F[r!]%2L!;-cfb'Ph)mgq*i:E]J`V+@K1a$6X%rusX*psbX?<U096bm_qjnaSb7P@N%%U=8-b<em;-*0eq'l%Y5]IJIA7d$>::ptn0I*ZsI(-0%q@n;biBmb+3@R:H'?W.:6Lo%`M@%6j8[J,p5e53?4<8elP6d1;hBS&YEP(?DE>I7V$PQ&XfiYd"kAONeKl3FpEuIGV+lc2_gbWN'=M6RnOI,8.^p:*Q8L4KOT61.>(jF%?ULH`KOc,GO\$ij6Q8'1"09u?[kS606mUsfjLe!"G(Co%DjO,,V1aiL^-'oQo<.(qQM9D0:nsOlq'6;qm:'s\87cK%"bh'24&lp=%>0nCU.!:c0F<X1be?m3ZTppem?)d9'TV7H2(*6`o%8+V&eI?qE=DJFjh=Rsh2G?f4khUQAFq4XaL.NDNB1[H46."9F3r_[_@qcsK%CGJ08(EWk*L[4uQ^-V>K6J%AiRL]Y2%%E1oT+@8BcXOtC31adAabUlqHR'jYY0W'V!V>9%ZNWji%i9.98!+>&]tV<]2%nuf,sI)p%W-l)T\brVTN]J9-HU9g;*?'6,LZYiNT32]B>LLJ6Z!&.`Z34^UmYMXDs0A&+:Lm_MQQF*4hA*(>2k\g86"6L'FGsj]=LYj)gWg@m%-Q\=],ahoAQQ^J-gt,])i/^0E?$JW9h]:&$H-Q1H+n<T^"Hfo-?A?au]dHXqjt[CU7N2n9"D":]RXET$ST$Q,*4VPM[M\%a(IrKa%0Zb(]`?\n=kroAGGkXdWG"5ErDs3f3ab)07*sp`Sc>VU&^qjXop2S$pb^==;$W>;5'C(*qZ"/3\+T@^pJPgTln"YT31/]W4:P!5U%"(\3.`a/]K#5r,/?B$9Vp&9:P)6&-t'H*m30/e]H<5:;;7Ohg9B;C8&"!+#KFk&:_p2!h2CDjb/aP..?!kR?5FBg?lDVJStiIXP(%dAOj8b%7BJE8hl4,STo<;rN<g2X48OK_*>0;rLW2M&I]UY%L8CJ>mM8NhM\AI1s#udbfoN7Ge:Us2mn4H$+\e,2\8P.[shj#*:,l%W@Md\T]_POKP[UVUs(R>&]<RC8b%]H3/&s+q.er3]eX,CGj.UJi?TKbaD"g:4_K3;]*D>r!54RXj5u!gOAHhQ$SkeEhRDd:Q)E&T%ok1Vt:96[GcW?/dfCRgt@ekDr^;8EhQYnb:l\03AI(-VJHS$!lnp><^_-)[*7bP@;#"rH$hJB9L]X-_D?22Z]cH5(N2koM1G$B8U%3fq8*;PiOQCj%hf$qkcUNl\HjN0UGh\V'[?h9Isr1[O$tm7LKWc]K)g>77T5WW,/g`OQJ^e=Z(3=&&9j%HR^HEZa1\<3i!^$a"Mg%H0Hh1_p0/Bs0dCE6Sn(Hm\99t^7mCLRcij"Q*U;^p1s-IYRJ-I<%d.OFa0aPLNctN>g1OPM2&b:'NXHiO"-jk8up"iW1GXH83aWF%;Bh(>rI/iKW.j@q*g;b/khNWK>Z''lb<L.LE#Nkbg:FZG2W:q@F,cc.o#Hs=kWKla`-F1r%WRi0-;jM>I7Fs9QmD-?m]h,AqS#NR%aSR8njX>&1$Q9Su3c`H<lUgmd\j`p>r@k&N2i`,&bfG.g#/!>V#SgB7Nt4%F*lMAC!^9:r$Nl6C\SE=F,\c$eot-VIJg=^aG_l@)%<K"DB88NI71E]/N9c$3kIl1[0Cq?9E\t1u^L<cY($@&hf3(K<0(R.RZkiBk"ZK]6X.n?"%(M56hRnYh@e2hS-?-qXW5a-uIVXlbR%1mcMBpIC??(R.Q/A7:59V@/hOVad7P(R.S5f3Ut59h-3k:G*[BD*,=F\tE:h&Vh6(2I2DdER]<1flY'2U8-#2$R.#Gd5.5-\fgeP%SnpMg2I0-3?*pLd82a`bW`5V3ij7k^Y4)ph:$5"M)F#^37JhadE\'L7?#kr7P>)jX91N%?7[ZsePY2g?;r04]F?p1YF%1o/VN]ZL%=%gDN7L%29$hBierWC8scDCulV2MlcFF\2=+:1K,d61kqS_RJ99:'I$)9Rtmkr7QOmt56$"Z=ANVL;h)FC(+S-@c[GWSRqh^l%IH%SYSb7`QXKgii]7SQA^GVp<`Vqlg-D(j6irUp+Ag_?X;Z<'4UF29:E3<SX]3<K,p1PV/EYMd<hT_`)U^3"GM:r@Qo:)X6PkFGP5?/%)kJJu_l$TI^j!q("B",^.Jb7qqFbr.1WX*QB1-P#DT<PCf-f@>Dqsg;J!;2ef$?3tiAPt*A-[a:mJ8h$n:&<sC[MhU/r$t"Nq\m=%Ms_4U.>;&KfAHSg6*IijSIuK]d9V61[t&8^ibt7kfr!-J20Wl<N4eB"^N^HBc!Ab=iECRq8*9HO$T75j?O#A;\<e>E.$`0DDX@n>%&"dSlC>?tUd"uk<3tM5@CQ0"l#"pH:AT;=;c@F^Yg;;6e<Z9af[lAdTf5WsCaMR@97GLJ!"HtC/#j^.<PWtoK%S_r>BU`\KBC#?9%5CXP)5qHV,GTXPk&@+]NOV@,:6HG>Vk`4M,N\0-Z1*?D,A!6/F+4&:o[298lo"qM?69O4rW;=(QE>03`Z?m3SRTOq!h_]oQ9fQpI%l;U#6(#[sQjB!\M3'l%@0kT:3-:2qESL7sE4HU%k+[kC+B!unQ&%Qq;T+0`)IMtLaMZ;JlJ9)G<V_TB*qpAOYIGA4d*ZZV1,`]LQ%O8JC`ANhG8A;Is0#k/7LCG'!4`@1iK3k6Xd?L1FJa5cQArEMtHHV\*].RW*M%!,DEhJRQuRVq?$iGS/_b'n6<UU>c!_i`_n8(K6.%n$q\])i!6hf4X7+JGDS62rtM+%=<!&)rda-53C:U2s#a;_`i"K,Id]+T+i?!bb%$1El22<Y+(*$[9(c1S!)L1qsRtKS=\NFOX8T8%J,=-b)"@7,`4)O4B0IAq+>4aDaUQ#J$KHu26`#t*)/B#dXC]`?RXt(ba`Vl+HPHA'DdT$+n*,Rbe,ISPJ:2j&]&@d=8PF\43,_:=%A#M2O3/NLL@(80:IQ^e?b>!N0+3j'/=ONth!EkRl)'69ZEibD]kdX%Pb3Pj;9MnAT:[QMK(>$uANpCif8PD+Q3nuS$3%bf@9(hEc%L>BmObRM>5Nj05bI2cIPlV6T#%JRo+kIBC@Il(1#3EJ/7\aGU9PW,<Vf4$?S\q$!ep)jadEUDG6&ZQF+,k[`p"@S7-\jmY>!\s&r%d$>e$0\6gjhR6M29:os=,JSS*)R&P"Q.G*Cc<$I\Eu+V\F\HiQY4'P6D/+3p6j=\PfTeJ:^3e;t%bFJ;8j2uhSajmm@l[NM]n^I0%G^&2kLQh:l_UJ#.5L57&BVe=(R17@;Zc4BZe!UGdp?GB)\dqRr*%SMjn4L10D_HL'@a!*c@G?(L]nP:[2A;4AG&2or_f_jCagSS.%>5)Sgc:kFteO*6`Ag2/`X8"LNn.&IDi4\74O@lYFXDq?g%a0WSMPtW4_Xd=8s$_,Zj0p1s3np7U8q3\8^.QM]$a.6kQf43IDI/R@%;Or?9oDBP%_>K^,ans3mNqJ^fMb4&0b4Ft/+[J-,Z,L=!;[ekgeMi54f)f<^#oG^]&^r,lA?^_+-P9;%)=M<:.I":_"Ljc#7&Ms9%6q@BbIu)EXl>p`@3(_*)I;RES/P/m13rSLn&,'FX!kQL^<X!),_76(U-Y*XXc=/])--o1VYdGrp<a*]gbp</(:ru@:0me6,ZL/@n%dUG"j#blY=C%Y77cJk@1p9d[HMPT/YnGrNa)6lhm;A4#uK[3n?hQP4Nc.1t'0kNIn7C[OS//ZCfQ%`E)^@-N^=bt`<'/]XsYqRC.%00a=]5C_Vd=C2<QKu_4l8$QV'\;;HRO_54Ob1LMV3.s2TJ2)]%>(STAP]0NjACH?aJX,)#2j.[Db9NN%=3CIHK>Z^HODl#pBCuuF%W0DYhr;E3LjGg,Uh`[kiHogZigIi2-P$LSKEYa-oKI7Kgc>O)TDU;.Dl;h_MHdYS72^>U3PFQ\*T%t0)126l/gd>'9B)MjhJ9#`G%EV+<]7&c^52+>1#1N4gOr2!HtQ#t2C'XHqLNFV2c)6&.fpL`GO)qhQ(3>Ad/>b6C((:/&7+3.hk0)KDE^2Y7;Z(?'rd)g*22sNup%b5b[q8TOkp]s@)X^g7q2Er\A[Gi)YS&M)2LilR%_!0cOF`nnKPL8(jjo`B>)--cQcRKFCS:2eQ3^ngl:)Cq"a!@H%l9JAtsa9#&(%!uSB@(7bW=:8mDoQ2a`GZ:E<+GjlMSaqq,#0j.`&0'/!QM./<.ndu89o+tcVkIWD30=mB$jF6/%?cptr'Q3D5q>=m)rABr4Gt,'R%lr(P_:FR`bX9d]$;\OX=<.FZ=oli=DT_J<)-E?f@^Oa^co%iUJ]m2=ZlT+LKIZ[?o*e'a0mV'n#8p%7Dm+G2[\^rM2<kgih.u23"%#foRWk[)"HLL&^#kI\]L"Ik-uDY4qoPH4`>MW't.rS?cUIB28PpK,dirJ$57-GA"a3pR:-14jlOUA*t$gS#O8Y@#`Ub2Md]oCRg0%N0uq**oL?hOgl2acpdb?rS6]T/]k5uZk9.Hdp)b``;()&lPD_<-/A_FGHYBEqtPokGn7U=DkR"&qB#3Zn)G@a#7<$!G"8];ol70B%]X8`u]meAn.3nsZr4RR,RgS5GN0GLRp$6%_k>o>g\O\5.EVK;uhs)#J1"?6:IaRRk>ZTQldQ?\q3O6;Qi*60Vme\1%qF/!sJbS[D%E3EUKQMEN)pOBAR1mXO+p_)KM(O`>k`#<!4Gn7<]>Q(cH)o94:dC8tKZMem_n9b-1bXrgWQF2+@?W&s$GH]nChK[IqrK>sV2uL@<%dC8uFG9>_8h8b!ehk9`?H*R.*q$YJAl2P))TO:r1-gDtgf.VG:NR,!R_7b<F\,+(f?BZbS8)EMYh-<(l]mbC#g,/<4I_Knlhg3l3%p[Rnic&0/pDtmjfHE5r-H`l#7INdZd\tOlH<#PO=^EdHi%tCciFBm"9-eI;Nq?<^VM7H[&-oTGcIaQVfZ?(9cHi9\:mJ^EPke2F2%*)!dTZB'A2'$`"_][ngam_PUcp$6T+4h(:X>)']ANsdl8<^5iUq4[6LMb](&`D(LhhWkuk@O#l/W-eKUFSUQQ"8addHi9ZT(Lg,E%8pmgLoW<T'gn*Knoj]6N-cD0*nc$j,aTi4a\"SEVal0p(EeruFepG`"MAR,CL<2@1pYM)NOLXN'-c-N/_cg>[8N)pHCp^3VmjRn"%CC8'0q4jCtKm`*PMsbfCD6<E$6,Ui_B(#)+6HNSag8##8;e79c<d/T,F<d!!]k\L3qgGr43*(NJ:G-7W(VXLY2SM,7mC1!Mq"N*h%Q+=(tFnG'HIDT.`fpk/aqE?dO5B#t+1M=?]#Nb:,?EThRpU?+ENRQ43[HcFrFnL2i4#F]*Vea$oXpQsSl1`j+l!>k:\QE4QDV!C9%)rFHbGIG3AYRWHjLMKg%qXg)=rH5TU1\:3%IV1M+CPu<%34!]!ir&-uPFHo(cY.7SQZL@He@JQ7f\96F^Ku,L/Sjpah0sOFgE#Ga%op<u!U\3%i?g`r".cC-X8q,_KVsh6-/FDhK^>6><_I[fVGjq`:-bFKbG5oZ9]UlLG9V/Z%>i7ffT4^#C>?Ke?%:U)b#AS.#ZJF(Z%16F/:T<:l<NlNekcW;J4m6$QTUh7:<N7Y+u.ccc\ZK0BVc[<nqK`,Wj%@iWL.?r0)ZcY\<MI=J!YJ]5fFW],?j._@2dWdMb/#E+p%O]`(O`2](Srfh<D[;1/<B(9<qo\)>W<l`e_h<!JcI&FPTG/lh.2m:g*8&VjUl;mlSqEC/rCg3;DK]hoqTd:Lg:9/H.2C(*84K^@)%BA0jqKs0WfVm(Afoea.'H+a[E:ih]`3Cqkp-^4C,o;7L[:.i5^%=8\Y\nmCs2fhpaRlZO=a+u*d"9#T>ES`?(3'/_aF(HEm7&/C?%)uV>MfPBSrGuHeD&DCu4Xu)dL.8OmNm&9MSmn]o6,BRinIcPZ&r5"p$@"7U05?O!h4PD[l+>5rm(#Pfj<9_f]`])rp*6u^2Ms2$Y%pi'Pgn7GYqK,hV_:u.^F=("Rd:q%7`3Ze#+<AI"aDd@%l%`G)6f.DGNnu@jC\cPHao9=gH3t"aVIqGZ?3o83A,'Y=pqK])S&"OLO%I8o1g[73p=SCQ6:OhO0<g<;s&L'mB]#Km+t;H/urV)Ln)>`6>Tkg!)nETU?mh'sL`e=CSLRVf,I:OZ_JM+/2-K=Yu-NR49Zqa]C^%P>O!e$Up_r/liaGKo='LkMj+ef.*:,)HSU2\D"sYlsoj*k&*taH+j2bE]Ma*MBb?r[=MH\j8R7$4RWLiUr9es"?Ro8!!4<"jBH3^%EWLYWlp$sch_oBFD&@/.["k:8*W/X(E5/si_4(a"(3';+>!=U$o/a=V+pg;/p^tAKQmU]?'?(\9P0]$*WHgcE>cb18D[,MW[jH%:%MnX@3LAcAC%d9:&]26XOQ7!L+)H.I6j\=cZ:X\[^oa.20P)i2\npn0`/8Jhk/e8YJhA("!F#XN94%GqVh;("1_iWV1[u'>]e6'1e%g\'!uD!-1oH0s<6ls2.%5'Oj/+&)O4,r]Fa=Ne[=UZV42e],Gn`_=&T7h]"Z)k0If4NL_&Y8a&W?'iZJL<b(+dAM`bqK%\hY`7s=%eG2;KEqtd$j%1GCANJGrI/WtdZ%[k#-E_8&E0M(<N#A/@N4?A-58WLEWVF.6#&p/,ocCedW;nK)I6#r!PJ[H#[iTT%?eE[$(<fZ=%P-g4XXqZ.PBTbO2Rta)0hs.l&GihI+=h0g[V`J2/[OB7ule#%LD!D]PX4<cR@_V10\+eh1-BIt%9"W8@"Vj'r\^iqWiK-78[5,qZ%G;tB>$SpUiAjA'0E.M!'eQN+Mo+6?&QeSKUnbKLfUP<XO<5OXE4nI]V#E*VE+3@=Li/f(I69R<<\QJ0$R@1rs2`(2s>DJ9!be-t?%,X5q-%i7%nQ]F4rL&BG7B's2G&tY\+((0mfHrMon#M7^uR<Ep@1S8ra!k#NP8keD$aH!CH_8&^i$eW*FIrfgR$2,:>DcWGg5M$k3%q<.FoWRI?Rq9n`rda"Dk><)MJ*^cKqSE%ck/R5a^HaYs'?VMZn-E+<H;4_U!qQ@TbS(m>"o$dO1Gi@k'H,"<)1+#W.:-,<*oBKj-%VFjH<gF**C<c5s_l_'MLO4Lt-S>8$7P^Z?8`Y\;WklisBouYfj1a5FH\C!b_cOBi4&$uV.K;ZeY#4u#QK*LtU"[\n<1Z9`SVps?Y%3aR;,A]lCKI-uX;\E8.IYF:kaE8B76e*QqZrVKMBGP^)Ir`X$K,[e2k\R&r^8jP$..s5\$ib<SB-ZVWcF[?!M*3d!N71[Nh5=nqc%P>QXREW:-/EO5ADnMra\ZFPD]Trrk]nqGN;f12`DWiI(\2J&+:OPr@iP$U/61U[Zu6V0>%gW8r@o6Y?EKM5iUIjQtcWHV\Y8"/4/%dle.9Y%[SgPN5G6ddXZ@eOb%&Y'_npAu<XJi@$KC4#OaBRK%0lK,NL#.J"U,Yg<U7H'Xkj=\"d$G%3_Bi%.!fZC.,A3\mjtPC%OY%J`:H1e:_I(he-TrF`eu.7%J`C1NQ\dd_FRAfdT..cSM':f$Sj(c9AId$#B%W[Z-j4'A;<>blpOggZ"bG&hBAulXYA:>mr7EJ2SW^%Fu_i`!["q]-1,J=a+cJ;$&gq9PklH?q]E_\cTc`RAWTc*R-%jIqsSo+bj'YGM`b+CC*#guQl<3kco1WW@Y$[X80((XI^Hl@O'Nom%3>"4aP<$30JmU'Hj:i%th/3]1o.=Oen9T+W0!3Bd]7p(CiY7jEFW\uKmJ1`"f6M.GZi0B6ACb*/-V?Ugj.l9p]0!:fI&NU$h/RMD%lqX'OM\!G[gIjbLX7N=W7a>[SC/\oS>JBkL43T49O2]9#kQEud%Sp]W4.C:5\*o%BbH(>7c#%s)en<k,n*SU&bt;Os[s;0uH`*cU%8M\@F+,\u"BP;"ZmW_p+[-!2Oj@=UTK*2bWMi[VbR6]e*S3,+YUh>u&;!F6Gb2nqmOIuI#I8JO^G!Acdq(T<VY7hN64f,GO4,sX6%3SpfuB^?dNj<ia4Y@[1JiI:TnPhVrR`VT.i[X2lGE7L_lN5U4%XuVd7J"G$%IJk[/ii%2#R#[G"&Dn..qa1]SK'u"c$RL=)IlDHX%+I.p.<U_0(]<%d0SGEIJ#Qs%\&:=[PX<59kEp_+XHoO</dGSH8UQ=LG1f0,Qih+E;$f,ANJo'hLJ`gj!4l9Q".r:[k3AfMrStVcK%H#^,m=tGY7/`eW'?]l?.BM3ll*Ho$Z1UfrrQf2[SAZbK'Z+0<ae[R9om&<bPd-;QPs*)MM\<2d;K8jGb+3d4iVD[<?`q8=<NBS23%N-Ztccrb8P&WqWnX'aSM.,C5u[T5SS<RJR$_t!Mb8CGDc:j?QIcgeDm'i/C2(^:AMRJP%IANirR8nInb?3<)E`/Y;#@mSA!d'983%22!"9UO*I&\KZ,HW-]!+\]FcT)gVINGP`h<EP?Op5tLGu1NtpoSscVujimX$FVfL%A`hm"5<oA?&CsRA+LlW[R<een^k0]UPXDih%(3\LQ&c<SZk`:(5B_FLHBR>h^PKJnH:,-F8,\D$B3mNfZ!7iY*SZ*)Y7ik6l,,jHkqN8%ud7e"Wr\@:uZENP'A$?&jrFLJ)i:pD]%)@nXo0OK9NbD@CKfBB3P?PnD)Qp0mB`Q(fARbf):51XDTbNEZ\24ftqh6A%`FKQ65;^)$Gj88Z%FR^Ss2j8?F&UOTBQ9VH$ik`L2%A<lQ_F&mF`eh+Vj&%-**7^G+BS\ogLbce(Zo>rf@kH[XfNV;aKXI[Yn(X=[_5:2mHiG[hU%/RCh:Z?@l&2]f`Oo>2[h[8JCch_Ig%:p9dld(Ag,KP.ICafIV/SQ(mC>`a4I2]DT_K#_?@qdKIr_+PB'^JOE%lnH0OV1Q`sLV%C%;Sf\>T"e=q=R6-lnb",OdJ*Z5_.0af%*g49;n6##gJKL<<WFOgkS+H$>&prQY%P#2:+80MDf5aD6R.7,<g6,h?FD&;!oZc7A)Z;`2g!4:o`m(WUD-!'7r&Q9.Kh'SQ]dkh#%C;oc\6b^MJ6cZsDT*'i-3U93*o5aa\q4Nq\g9/p,%*Pa-I.>nSL$)2Q3d\Q&_nhOKZg:2Un(\3`B*8B46pa#PS);;Iht#6\2Y4=b%6e]A`](PiqJ0(@i8YMF<=UP*IRtH^8@M<F_B7^8'`jZoW971@'Y@]:e/^OU4p[5O?DYH_J1F2+\C"HYe3q_;#_ts"'rSe@o*J4SU%hTLqVKj:c:c28pA:>ap<\W_@$qt/(Ml+L7<1U^\(^XjssRZ(`@)5oAZ=D;mF-<\+#f/gJ&Jf;ILI#jQDA5$+W,pm/h1XD!d7U@bL%W;2ZQm)<&e&/LKkB:K/"Jd&*=V4Y@Ec33#^;tH\V&1l2[:St$=$S#p^*Yp;MphhK`D+5:4//-s7[gpseNL;rTK'e?Kf^B3?*g$B\%^#t6CJju!W55M'Kd!eqs%pk;,_Xq5nfN1DIp3%Y9an:`4KqsV4703U:?7DWl<sePP_N+\(mc!OD6nV&X"Je>"c1Okb[$ENpX5lOj%+K&$@FDK+*7*P_4P8fSf@elqo$265?N)E)[-/r#XMJ63H6[Erehk%jRaBUA'66U.+?l!?Xek6lL;N7'`>0/`>N^BVZO$[Mk\2`(U%58t_nJmpY(7j7-Y+Gr<6ZkBcX0GHi(,P]'##3l"J.(ES5gSM4mIVW3+>AcnYT2Il1i3_?'prXo4Z%uH*,d;ZhA!&0+F=aD_ccA.*%=HB(GCAEOCoqIOiCnPC]3]:A%_K7>j#,5UV.M@]]RAnX5$)KrR4F.U`qCJ6q+t)KjXO,+c2#'T%f`\`:RKcnFR77=<a:Zjf'dIb+%iUWBgBgeO5F@=,IY1i>JSkdQ*7>kt?4@aF;-KIk6o$\7Fff<rU4Ku/X3reo^MC4`Ib7>5Ji*Dq1PfH#Id$ADBm<9!p)n4e_"C0uj%WGe0oDU6_&MppT!DD0A/qZ]LZlXI-BZC5qNSs&[fkDQIr1ZAG4+/5OkdE8!O8BMoV/M;haElQl!:0p'0-^NTrm"$hELr:mS<b;M7%k1s'X?@!aE]X<q*Fe2%ai>uX=5sPDJK2[fg5aXQSHgMNE%jrV3'[=R9imZ***(1fBk/mPgFi%I\&tD1"P5M3/Kb]u&S`Fc97=AIr%!J-f?oSo%BN#(h'>oq%#R;``h&Ne53((?;@\Wk(5c)e$#nY!\^7QpK(><%*1[9qYBade3837>c/$"2adTFGaM]=]]6PQo0LZG48U%feC%Y'=Frt>N`,-p+u6DH!<Fdm'UmLknqaXe/j&[f3.+tUX#,!glNFW>-iJamhO58X`RHoRG(Z4jWe+Ugb00on4i$-OI0*/af>a*%FT0N--oRF+/G/P"@XNJR"8d$./?SAAiSUFV@(<=lkE"KbEpfFj>l't`S`01LaV-H^Gr_aNQJJ'TB-,ZkPfnnDBfjc71d1,i1e<"U%[YSGC<m?DiW)TCZ3<HWQTT>QmQtAR]r0o%"4*WO]ActqO;LZ?m.AjDI3G53ohE8;iKN+(>X_l.Q0uB.10:MN8I[VF7WA:o?*LSog%"PFmHO`JeWT]Wrj:\0bAmh*?Qj#h=ErWnjpHLf##$u0AiVn\Xf=^SsA0ebr'W,l7m7.f3<:!G)l8U'#Q\G;hA^E2"qr="DcOBW4k%jA.61)n7iI$%APHlc;-GCe3&+OUprl;'0S<]c#o=c<5gZ`MuH[7Q+ds#/kq?O/P>!EE'feXc$luopiLd3LiN5dN@?T0IV]:C6Kff%4ASm+[uM/=RUcLk'$0$VJbRIi=\[S0A#13pZ.&NtT6dVfeGa^iBVafi9<!;I7o_2\eRl?tX.@lAgFY9iJ%fZWDL+%.0:Wc$Fr[hf%HYlf!Bm_(kq.r\Y$o1)qJ=V'QLM&gOYlU\.magRpputDIoLl_tp$WZ`dC31r*[Pj"k#O^58\WRLqo:d7$cloAIMU6P,H-i0:_#<!%'a)chP+o7kf%9<[_K38%?g10_mU((Jhs/?W@D6lo]>!HO<h8X>X'E2\CKtbcmr+K>D>E>,]M_jW`Sn;E)5Z>[&,CHp:Faj>,`Wei%ek9[j.5OhAng)Nf_006O`$*eOJKCmaH).e(j)'VD3WHYmIm8,WG<nb`<q=;s"EQ&NO3XDTh8a)s2E`RL.+g-W]"`l6aUo0QnPPkt%i375"4b8&gW8tSqEb)uUSXr&*qh1*rHqlX*GTmE+'&;g]`]US2j>?bdUjmhE=\mJ\S&uon)oWCuoW0+YloHMsZ\9Btor6YjBrAP*%@>?mKX5"B8A9XsN1euTeVIE($1e?p)E^WZ5TFpg_M`a(o,6)\cW%\$01[*Sa8r'U:7r?f4d?(G9.Q[H-2)#@eg<\4OEbkgt*JT#L%kNTUNG7+6@W(PKfdAGLg=4n/p<F%YtiA%)lO`MqB&&,Bo=no98*K<qqWRGDr2WV+REf?;D'r-,Hj-@>V<Tu[slB]"FNP8Clp8oeS%Q?]7:rS??84j$Epa6[,uB4k83m)t*fKC\V"es0%<$9_gSY4c\9'-Q39.CQ%i%h,5F+Joo%S!pU-[IJ[UT'ssjk$6A;Ak1U_f'opR%31U:;=BQ:V(\!^sVHL`Q8nn>rV11E-Y"nB9;<ct4_'<umN_9=h$<d5kcV`rY9b@V.#+^o&Hb;KhBDS02cOjFJ^?%<"nhPr['anN!%!UeCFL'Oq#)9)NoV@ULJEFNc`>&'RNDfg98$q&(T<nFe4;Iae!\('%J/!n4eP\m6TB'+LIY-3lo*5TZPhhF_J5M<&Hd1W<phCgJE%P=p*L&q"C7:=:7t*b#s+*0MPNLX)*D<LhaoVlkgD1_MWYcub.(Lor>X;mTL]Z,-Yp8e60#$i+9qbC"Aj@@$`IMX-"8Ko7S]#-DkK%X`2D*149;"U`e$S`.Yb2rkb%Q='caXMRV,+[aL#2O]_[m-A2Q@NWBf*-R:%?'u-7/1>d2Qh>_N!]Mq)]MG-4M8nTUm[G3i"/TDB+%cj$FH,_DFEZ/oU`'XLAF^n+FHMRgHI6i[:nBT+o/=>L`h@V&B>SB25pN4b2U]WnEMAgdtMb(md!Fuc>kO2?NWIO;"3@u_l&h=IrT%RKp)8B7<qj1Hut5?q!`"*FjOA'L`9:1'2hOh0^i+1ns\2bkm[J7g&/UOj-`!l5Ka0<,#!>"=GDi`k9;&=Q?,sFiLl`ME['^B19q!%L;%b'9:!=L&&ru0"USq/d'<NHOGq;:.EJ55lWBC?k*%2a-k1i>0e*gn$mh@-Cn"*t1PW:uGqE"9P4n[`*`'[3P5`TiEK6]*YF<$-%Kf6$_dH78;3Lkst)T%c^7tVY@rD_j4e-JchDGo/=%%#P;eWE@44O$>/ZLn]acHd9o$hCZKlY;k^$cM[Vo5Sc<:;2a'%6?Sar`mgA%[]B#p*%/25o[%m(o0kEue(64ln;3K1/=nX]L$tDF#8WK500cZPs.g502"N"X+$)9"`iD;.]_m`K*\^*5>^tci:mk/;)2-Fj@[8+A%\gJT*3e*jo6WWrW<=u`9iGI\C1sZp*/55ECo7L1YkS/2iN1V2=.%_T>-;AmTktjQ.G,r$LO98b`K$g8Yf(HJRI1YE^M:S[[O'.M?%A<%@LBrRcI-O\^>SfmhL#aV6dK2rSgS3S[ad&XA)7i4M=^>@_GlkJ(B*"N[F3Oq%X/TSk$k7T=2@;G+5K'EY9nEK^nIZPj-\gSAR%;3?'GkJo[-Eu.JdC\>P(/D(K`BtD*)H^8+1^H3%<H5>eBc2:O*`UUWCoC=s%p'UHjWuPD3]\O_s%63n!Uu1GR)ZBANpIJ$jfUSp'%d;Ra.#ma4NE/=40]+,ZrF*Mc*p/Kosa89UI5Go4io?9)D[TbbXq7K]*bo[eNfr^u#cW?O/PiNF]0$A.ro,[=gorZU+fq09+r-?AI%?9Y>o(j%V9U'2nB<iYY#c3Ko+]_j8SWAuH"5Enh6Z.HkWq>Jh*bJO)jPNbBNGCD#KZP^XfWhJUR_Ami3-`DckT.5k%*Pi&^U$&>N%Z6MIt2>$fG=SCo*W&F\%C2+(*];)B%RuOG\4IF9'&`g%ErFnOuo4aunp<hNrr)mg5e26ts63"d!mA<n.8Sb2[I[C,kIn<ApZ>"G.%]oO/2VgP2o/Ub9T5FRR(qp4mYJ?BFV06TtP`AB%@KZYpDV\(f/'.St_c+oe/';FtFV5+L_s6K]\IaF^^P`dBnIAR]N#^Z7nqQYsm%r'm@ZUfA^hOM6'<dT(P^1o36Z:0//fXkS$EEGR`8Pqk0BB355@cQK*]jp]:R&;7g=@J'V*ql*r%n!&EQ(hk:/>:q3t.V[uqf@<^"%!4+L\J,nMB[Y>rcAcTcjWJ9`u$5<S^pb`4/h:;kBR]VsePi4Y?@+r3S!FW4S>6O$J1dtKp&fN-1._7-3k2^@'2XtRQ,U_cD$6bR/%mH,,;+op=R$A$g9SElWD>Y7ACe6ElRQ8<>Go2_dN1rK"uV<(ZN;e<g+6u&7qUFb>j31"l<&hc7FSE$,[8Le&o'iS\>9;bbdeFXgI%$GV_59jL2Hq9QgmrauPLPG5K2cuu@JR8YqDQYh6UF*!XV)m]G#Y[I@uT"7NO;C<nP4[#"C^&i'OL+^99+Jq0gY(OMJWpC,2*7klI%eT#Z1C[2hs.OK]`.`gFC&Jlm+&4He:#D22pCZ/1"AJ9l2lFIek>0-W(pF$I?hnap&Qo%4%.9EG/*2FSH2+j+)6UD"<N,CeVRMGqN%`_jf-DOb=,Wa*\9UhGLAaNiHCLg@.nBo-TJ1tanF"oT$DF,8=*#tA(5&TK`!l6Kt^U,^=ViERp_fu9GFJ#3*>P.#1*O>4$T#=$`I%#6a@eDm$-^d(ToT(>2"IF'jB[_WnheqCj>#So[S!VLcIk#,VN_&sat3!&,rT9dAg^#(]kdQFVig2E&nfjJl<8bab@OR-GlJW7qH,%/@H]h/7bD*bY/nO>9F'"$(5;H;!$sn4s1-*m$t(*KIB/G)@ppd*mlqSH,U4NFi3p=dW@$7NX4m<!^iqlSX-T&gHuYn=Y-X;S8\eO%S&\s-#ojUk'X(;OP7to<c3`ZCn]NQ9T_p>-J!@;dK7^+#FiD<qFj3dgABgWY\[m=Yb:oD&p3laB$EFEilc5kFj0)l`OX$eLU]6$V%L2KU;JCloK-upF^K0W[70ec"::n=d=9i5rP@C%Z3"Khbn=)7qX<8Ec]aBhaXm=?.0DPRF_"L/Ce;H=lkYT\QrjW\d7@eF,n,D`L+%"@Ch_+RgEjh@u'<-jBT%aAcP6K7j\cQg8^5MJ7F96A(1+.`<b05hHXd@>kQq'B>=U:[h:Z-+M5KQR1[W?bB\?=5s6:M9E?Hc5?tt%"V1Cg^s!R=lfbJp@/CQF[GN^[Ukle/@.aMIa_cs5+EQUQ8K]O`@SHqARf5l49gPP5Jn9i;8AcP]NVq?Z>Jp;hm'2DT".<<tlP[!f%[R9OD/p\d/$u2e*+B-_pC5U(T1JD,C$+!H\^-r>`a]qgig-dNudSe6oi"\1EYt[qBUEa+Y-F3a_+s,),jiUCE2;:J0)IF3'6aQu)%/`Ru1I#a#hLfYrYOqYg&c0=?lnV]!EV#2b,IuL%S,ses$//qdq/S@&'NeM60<!?J8$JUnU-4*H7bO8>24TJhRQ3>HB/XY06F/1:C%MJ5B:K8jG2@@E'c<&U$iEZd6'5YV+)0X*hJJ?<NDL1+fsiYW.kK4_s"$pbZ__37n1bYn)?KEt^h"jQ(0?!s4[`!&/=:,`n!*@D_a%>.19)V1qjg.rL_lR$tLK@X&HX;#uO+;]UIXXt<S*+9j#f&1mudb63d3?Q`f?'%I:`EgdiK"kcQj4]71s,lc$_T-7k#NhH4Wh!ZgO%ST,d$U8c3CZX!mG04;lW5\A]d0_R,SeH>=6@7O9RA^_6fL4['%8&=&EMQF7;)TH1c0u7T,6jMl_+G`nagXN0R+iB$c)i!#m(k!.P%5o#a7OK5;4?3mj[fUg8?bJ@r70ki>6F@C%SqJdWaU.C&r.A;l%NJtVd6>aAP'_7.9CT3'U/VQ9UKF*VG0T:8A6\CA0HY>b+M4nW=%h%GCM:4c=aE(lct]KV1AS1;g(:-"Yu?Zr^*jBlX$USKKp'NC+tnK>%DQJo>UZ538Y@J_egaKPr/^Ir#.!.94I'Ff>VQ4('P@8sJ'%KOD5uC'(8H(9.ed'H)6*X>Y[gV'UZMi%X.!Jsj2>hK)[6!>*1)JYOpAW5t\(5S-G.qAtDPL/."YR#kHN_>WEEJXrW4+t!`69G`o7%#Y,G124_*f*eV,bk,B\BK2`3;>Tcpq$&MU`F"Z'WTK/f"'8??h#?/b/Q6<h_&rcC3+VK03e]HTW6j]G@_M)7mdYkL_s2t3\-?%#/%BZQoV1CI%ra24Q>4q0&tES.u.;t70%MIH-W#-.E,95[^:!f-s8VXC0mT*ki5?j<\LE>Ut1;S?cepII(G">Ap?"NnHU?j`dJ9FsID%Xk70UlIl@bB!)92Jqgf-4UsgpT$1dq-C%;hH$(U\o5+=G-V?bM`rS:l3.deNKM9fV#(cL[[p6h99;+YpeMS3XZI>+THL'&%rW.j*%1lQ.KLN3^<gW*`[Qmu$.S5['a_+m`>k;ablQA\gjECT%sH2l@S/W:$9XLlPc_,DB-.P+d[kNK-ONPY<7R"6's<=EC+10?[>?U&_Q%-'Kn/d#kAa.7*[V20B+Shl^_s'rXueM-V=D2B)a;i9<*&0HBupQt[`p$4t[l$%s4*%RFi?@12IR)3.1V22[5$TtEPs_K/*NS1#nc%l""6tWCFcFno`DZb:&%VL83s1.0ji[ZR&"Q&o;gYEmVU99,%CpFZ#"j%tqAcJl*"KQme;GD4He&6%n&,c!2<q`8WAj^CpNq?,Eo7%Y]H,,Wq_uj@+t]<,/n[V!S`rLG[4Rl[Y)=f@J'VJa__:,QRp%.`]9su3&h-sf>=DV_@-^V_n%Zi<6$6q1o8VT"F4uF<YNDs'b;lk%cI27,$`osp+NWDC1;kK.#K_<4#()@U7*,"(=M%[XVS[/a+:>r`'@$kR&-HWA=u;:+??,RYh=MI\F;PGi+uJC]>g$=l7-6'3;2F%o%-IXOIGiLcBZ[a:[Cgtr:b[a*JQ;bAK<;a%[ZQoKBqk#0O@8h-0#<'&YL5i'83$;ubYYiD?"`.OtR<V#&a"[3>K@L(noj^p.4pSOB%6nY)tZj^Pp3Z(]u_fJ0c"pY:I>PA,L>Xercn6Z,rr1<4fj?4GPF(!].)gP-k(:Z3U$XlDn%'pA5@&KBR75jYRQe)I(R94Tr.(Y?a%&WT<_e[3b&o-iZ72q_*Er6(pY"\&cX$%hTL+]56L-BY/WdtAiggQJ46L@Bb!Je9%09T2cA3l+NV']Z_HSB7TtHLY%t?[;[Xj=T+$%8-r,/>,pdT*0^V5>In;PfY.bMa^2W.q-=?.#N4pcY,E]#eRP$`nMS'8$r&3W!<\.Q=;HYL2(_0a?D=Ud(kVZfCu5gu1H"`pm=N67%+M&$BP%c/M967`WAuK8X?:0r23Fj`ke`ZFQ5u?[)BrOK\/D6Eo6JG!Rn/h-m@3.$.)'o)G6=c1Kd[o_4=B^r'63@Y?nHISI^tU2$%PQ;1#k7OmiiZon-o:+,YM8UpS=Hi<ZW;elPQE5qCPD4TVYc':]E\8PeKD&jf?6I92rZVBnHZA]s&s95nHBSB+1a3-FOR&h0G%c21%OL??kCACfSi"[UVomZ2M7oE-;'/WLo1e3!Z..`Rf926Bqo+d)D/G53qrJ@0XFr0@#@^TY(h5-.JP.rCR+=&VZ2MnID&6I>'$rP),%!$l9@`"X/V#B@nAM*,'#PQ:nC8qQ8S,Ir>uiQY?0["M!s1O#f^e5jI0mr>ASCg+;=<Z\(W[S)eM1X\>TS##+ZMIT7I1t&9J//kV7%f\X3d-u1jbMBHWY0P.7E6u!ZrE=Qq]S4gLYM3j_^c>cT=Q\nR\@!^@FaWja7E"&`_BV+;k(dM%n[kJgTm-c.?HO_4CE`n,=0F:"U%WEQfjD*m_.[F)7%00j8/KkY)@MSQ!Lc*3op`(ia@W+7;BT["H!OV4c?J&rp2$6WNFTH56m6<`;F=]%SKiF!MZl<m%Q2eAFc2kag*%A93RV3!i&6^_(Q5n`hApEhYP*3T6,l4E:OTc<d0X>*?<t#s0D?_@?_[^>*<G72':YGZi/N#ahhV8]ccS'2Ac&OU[SS1WE!F.4MDL%@/F7ISqZXnHI,c+L;<#]brUU<TcIO^p,HUCPbM7_@^m>-i,flf=K5#<@,[n<%'pDK^W`s^@DK1h43fD5'bIZ(c#=B-'Wel,N^ft!%k!FDof-%Rt9-N%U<(&*^%p9DFQbk1qTZE.O1suKB/$n;"$<,?FXQd6Zi>SM=RArR0;]V.q8I\SjkajlZ,t?Fm/@*7?cs2Rb<8:m)%&HKZ_ZCOrE@rU02h$,!j78&^_.gcd"&s*L5fs0IT3Z^O[\h22_0QWBTeo^+5*ggLW3Yj)ZQ?-d#nEq+.Xsp.\)DroHRR'Z0B!Mkg%#-:1#qdQ$_k.4%WL1AlG\N#u$+EWsDWYn\`i0*Dp@T^I9'a[0lDQnPNY"EQ(UY.,_J>*Y!M&@H7Q3>;p[Katf=C?cC@Z$V9M7&2+%$>O[GF!X\Bbc^3Qbp!-;7AfOT$q]^eJF4%^kb^g!6ZZ"T^8<rW<#;cF22Gl1MFG!LOrfUi=E@.c7W0pb_h.5/H<4PNiP^Ch=E7'%%&5B)0@V'*a`aQt@@6ug0A,l^37q`XM:\2^gCgVqEnRirY9-oV<1dmHB#%!_`n9;Qd!17P"Q`q8QeSF;TPr]HZC<A$&N?Fm?5eFfR%7W'b4`+X,@*8+iPFI2E0B/"iYj)#)%#p<dK89e8UX:^r).XWt$W330-InbN6+$bEThbV*WrBmPJmR9`I;.!7rS=2mo4Dm1l8?oFs%Z8/X6jHq\@aL4!#De1h$4;&p5fp?45'%m=1)CJpO"Tf?IPGh82;c(G9c3`ZCnI(ERXI^fhBa#>[(uR*,;)8ZT`DEUF@Z/0Q/PM#%%42N5[&D5XWS2Ln.2k7das!Jta5,)!spEV&ZW4sbn:46$>H/*HER&`8g+f#Ob3TGpW!RRcdbH!u4P%,Cc;6Xlq(c(%i+uN/J&KYmZ%S5$XWM4'k^c>lC`,SdNLAB36K&9<(&$a[/ZQJ>^m6ka;_=]sG'E`d@'SIeLD)5r@n3mp,+hT*`q?F)(g_H`j[&U)c9Xp%LdCNrp)%FH:.E<3eIt%$Tt1bpoS.!ojJh1kQb6SsFrDeh!B&IDSjjX;hk=mA37'0rNfYft=#5^kAJ#_0VPF*G=`;>6].>RA4Xc0V>p!bY^ka%9<kH0NZE6Mk&rd;KlnCYXsQ0jn=I`K'tb6^F'?M-+c\Tu&+[gJDW[lBR'+j2LnftQL80og13(fT#kRKfN&g/?'=B1*;7F%o,91ho%Q0$_A<5jkYJnV#5"rGJb&np7!%IfB;L8#(uS;F#$+:?C^&Y?Q;im:9XKm;l*H/^;/:YjHea"KPt)9+d]Ggj#kr.TC\JDFV%MEQ))%_:5H`Un0X2L.R""i2B"9/;8E<fEI&m3cotk*-DWi0N>TEl1:JH@d4HfTZg=>OW-,J6p,Sp60qItgf9[A>a?"]39pVXF4Nd&_HdsG%0c-;-9g*LD2X[]j9$bZDL.1qBn^\:?FVHS@12e1XWuA:UNqojjr?gsDkh![Wn*0/j?$@8Doak`)6B^+&"=QSG/h&6=CC3XNo+Rc&%Y9(,p4'qY$Niu;;aYV_=@GJj`-F"PA+So[j_edpKhM:2p8>`=\<E%$3:P$V*5YTuZ&1mQW9UTZmho7Aoo,l9J^`,*rn'J-K6ZeSs%<Xhqsi&t;5n_md.#X\D=FBmmC!!Lt6l=uENIXjF.$ZA9O(l".J-*0q96-KEsg9.dV(sE,`J[&DpEC]P"<_S]m&0Jl2'UQO(kO!B`%!/To$A;jAc>JkhSSr>*@KJ0d2pe$r(F^l.W>6]oGlI>cdY!UuDCs+.M2DuLF16/%>2jB7.+?rpPY-e^Q_Sq`BUE_a\WFORkY(B,)%"4sKU+e=Hh,8!n$l3JO6fk255='\-@D[_Y^i$Pcq0SU->+b.=j95t^lltF1/K7[!RCQdNQY?5Kn`L%+1N59*9\69D2LK$_5(5Gbl%40Z8T%G*YWKGWhP@bWef:KOJ$7%M-3V'P)t&]Jf3)LGtk'4AC='Mh^KW^+!^!kg4XWIV:a1kpUkifNn2-Ql_QlK1.iS\p1f(Ij_I%mYsA:1eWO4.W!9i91:N[.!_-D_FWY,ZW,R.bks:UZ%@UH$sfHRiIc&jH'Tp&_Vl:b2Vf%6fT]4^-ROk*.Q4sSPZ+2>1lqMCY!N>3%;+?*_<>gbuH+&`WQ3rD?Z140B"=J)K=X,.q5XaW8N3PWU@Vc\M8^-6pEL([_\QJdHj0M_\$(Id&e1D=)+i$Vqok_c=:*9#-X^Fb;%>FqYm"<$P_T:s@,/l`BkP<FJQ9aF11@bN5d@ZsGN31GGUk)!6@$fP[A>KA_$`$cfEZ@'<k<)=cd(m6!KZ33!i-CdFc9$:Xr#94=g%'<b/?-7=\WSC,TXig62m9@[#Ui]$5F>-dCb_\.;G8^W4%$bWS%C^=-PO!Q6DE&*O:cribhGV(seG\X[o._7:NR#@]>83"%h"bX>:%!]An81%)FL"Rjt%?40#'&kV4l$h?aunVSL&(4]MU.X<TGYr1.n[/eG$FieD"g(g*3TX!)M&<b$W]G?$3i*pZ/"[gAh6&.*(KR,3k%)"q,eG'ma3o3*gO$=.VI?45,:\'T0!"h.:(ED,YZ?lm['KK:[b;K^0K$UOUteTU;d@%jU+b5r6F/&PX.//H^#>S_j_*pq$$MZi&m%$\$RQD;hd.JI70d<,[(&(/1O,8IgZV+_1la>-"WK>&m`LKUMF!96'AtLBSe[F&6mZ!+q]9G?D*K.[oG&GTbLEn\DZQn]kS2Y[G\X%mVu>_9V_2-m'$HmF[=,X_,MnMa'eucl?nc46<`PC%L^j#`UPo=UaOftE**+7l)lWYQJS2B7Sq.;T6*kn#.ZUIHIW\*n\Ag+#2XLD%bVTUFUGMslktm+e1qIE8F3&tj!'te!FZ.ANE8"=?.<1FR+NQL*_Cko:D(03e?GdLNKtr+9U_jP+n@?A5N!<[mW_"o`?%k.,)K*MK%)@qMHlQmC-d9oX9Z8>#Q&C[JN16'Z]%%@YHUVW06Wc5(2HW<'qK3@@S;A$te0kilW&*]0I:DRhNL^$,!D:A;+ef>=6:#.iMU&g'Z%ZHY'K7,rjG&.O*;TMnr4U;>K)[e>?U4cl>C!J?&=0VLO5'ZDC1%[/fH&.NM/&"V1N+Ts$FAkRiVPc,?"+'#m!9-Z8qi&l/m&K61m%c:TJ(QiRhM92^B##`XLn7VG2,;Q$pVio$JdTUH!jUmA7cNCVr!):V57QPp,Hnc3-'e;2HO%DYY=?;JPqf.8@9,B[]AT]tk+i(<-o%KrKC-KEt\#f-_`1:nNB*Q$jDX9CDX%6k`=M_LgT)3I:K/_f0K4jt:Jp#)K=\(?I145@goPduFt%HH#Pl((KXkOAHH!h4ui&'$67Z%8D>]l*egTS(hS<V<&UiI0IHo/*1JQKi=j7<0qG8rVUV5HToqAGe5F(+O=gR\>Hm=dgTIH5Wj=!BCe\<VLSuNc8AXJh!UTiim+lh:%gQcTK03J790."HP=mE_DgQ+$K84ZY\$'*pQD(W1'Us(;f<<D^bo[`$e0h8C3q^HTpiU0@k%S)2i&W_I;JfY@Q\-<SNi)75rpL%3K%i.V.Y+2;BChEKg'F`E-:1Ki/_4\###!hq(1K7NO@ERbI=H9lu]nu1WkR*5#cqd_&`DXf$>_Xl`\Q=ADTU_fGMZ+:QL7$Iq>lP2NU%Y$/=(mQf32-;6skRT^;OD(<oE$FTc*?Hb%$o9"!!oQoaf=Sa>bh/paNq%0"]Og*.FUSKE-"Of6p]?l6UY"Q^sKNSFj_%^=)bcAZ2%WlqR$H6D7)<2*CE^1O1_H'BK;l`@%bW]0[Sc&oh.6IdlFQg[B(?\Ygoa!j8MqRpYkN?U.F,5LD"FdZ[!(E+FH;BGq@6s8\gl"B!.%K[k@+6nH6p!cBLAYBAS\mj?c^5+=1s>G]YC+:Fn2I3g6Jm_)8Q#o".sK3goV@NFp4g'Sq"I=gJo%],!0ac(dV=8D&8375+K6`Sl4%9\9NH\^[u8rrEoleQON6)<&G4?>!AC6V8)!S[,?4,-+mtk;J@.<!'[)OX4u(9lD`tXnaJ7<YJ^':!T/;@V["DFJ]/%-"<M#HWkp]%EL"G[#-=5T=kDY3I&iB4`7.'->*6%(I+`:5HWFn-X^7u.C)]f/="YK1F&(OK?=];"nkLr?K9R?W59"tG<bCc^#4>:#FsN'l0rKP%%j@&Ri&h1Li:2o[1:Wi"QR=Xc#71F(K`i[N5`)pNOadEnMP8Y^9&::]Unm3Y@m.P\4'1h.a9^PfY,.2!Yk1ns]3b=(IFBiZqBm=N'%_p$`,a.JZDf#"piXpI;3.e%b2&!L8kkS;UqhK$p_8`NI2&A]l;3dGe'RbfKk\T^0\b;jq&`-+q%UR)-Pa*q=>r5EE".c=I_/0I"I%lZ2,@<qGp#4IT*GVjr#WCjsKHk(C$YDG$-LDd:'-;pN#f&9;DD'0Wmm$6>?e1Ld(M?m]N\-8uR$1H\4i;4Q^kVsi@t8]mG[/f9e4%g@"M/;@Y]#(Ytg66lCi6lZ+=i\beAJbSs3SA3'79/C:_n8\Y`!UWJo11-+so+YntGM*(?TCtW$P79RpKLL"#MS;EqE/PD0BYGo8`%B@9F_*MmX6^g51&.VO,dW1<Ypr+[_GMO]N7d9Dnm"$%^W0p+81c.(fp-<_A_.;,AJ[jX!UB;4!^/Y4/u_7*t);pN$MKLp2r`_=[r%[r\0^-<^t;b2c7EV.;UX6)GNF9[:S^1XBMB]Rj02B4aQnbRDUuKo5_tj\.RVST6&<Ffd3-U>u!=jieiAaI.#;==).YFMt_rS;AP'%(T/`qd]9<W3>8H7M+jY]Ki*#aEb8]&BDRBA+fp$&3V,/8Cm$TZWm/,qAVro^<gGQ#VH(bfB4C>5H5>4HkbXdU*[54;O>G#!G*Xr#%Hd'l6jNNRMS=)*o1Js@I22[q"!7++oj@jU!D]r_%9rok'R:#_D%AW[G*L@20gq<UTHp05?K&2QQIX81$'P>a>945E:M`uqHen,`3%\$G[;(O[uTiNS6clW[IQ-fSF5j+.Lj0geI1&gg^<3[3P"4s$)QL">n1KUcbZoY0BOb`EU-R7'o7WR,)e7<A1tc:jtjlLG;$9VTj_%`onQQF7=3i&Z<f>[6=4\B"4%nS1`-eCd)TK'>:kC"q6tLAmC_:T5=i>[#YG=#A,kkHoXZB@)CX03E+?QMD"OL4>;mdEQ8.p%Ri!Y%r7oq>GYG$Ydm#_E==MI49qoCa69D/9;(;q8VdB&h8a0.^:nmh6+O-`mDY)54bUDbYKi-?HA9Q,ZZl2&:A8W++X51q^4&7YihHT64%N1qG3.Hs,+akrDcDHUPUS\llPAW,"cC*DTBPj-i($`h$Ebtk0(O&VIA9ZMTf=T-3Rro]og'5l%.e<:")%uI\A.m>q$?n-nYC/]F]%oa\TQ8A0EJ'uPIjcldZD]_<16?X=@Jj(I"M1re,4aPaR%AMe-B1/f$2Z($e2QIPb4CrBe.<$>-VFl2VY@)e+a$aGsK2Mg[*ZtlC/%,9YY,a1H+VLqiV?<WjC14ql>_<;/XE&Icn-!)\rJ$DP5<-Ub/^l4?*[k3Jd`rk/'jB;?`;"!hW4Pg\^IQ7)\(*d&_i*4a[]Up2rB%'_%Q]9&<mKV>&+]mN)%)H'p]P?DJ[eG4@hqdg>>Ufs;cVWaVT<5M1DG8&agt^#Sq.!Vil>1CHHIA6+:q/o1jA.8tnoj(=SGd=pgo%hf4HcTc#b6X_:>VSYJ2p53/9'Fuee-G9dVN@7rCKBLPZCD_;WCL's-,gcOrQnhPF2EcGWr?9,dn0-:>3;T6rlJ_/E)rp?m2!5DFN%T.p:O[Y`2Qr..!<g;,Z\k)9i\NRmDk0kJVM[pLlMoRL\kIfcH"TagJi;bWVZf9$sB:UN7T7h,4Fk?)cj?a5gjbA&Mq]eg>-FpXq.%M4$(u+J+5KpG+;d`YZk,$=L9B4dT=U&=:&.<<29+RXq%3)_erX;lp,BD0Ogk4$`!8PZ3QInS30K>RJb);@tbo!.JLZRK\FJje\-?%(-pSShfYq7#GU3k_Gmq)RYl&%WYTDHPZLp<fW"1;LBe*55ie(p:*gD%9$#+C3aLu)4,I2..JkM[,c3X0blY5aY,\XEpmgriooPt]%!Mh<t\l?!q0\%`LjZRa*cn'^WMEj`M#U_?@(0haNSe.=o(W!bI7>_ar4t3L7!8Gf`V%d&$9Mtj%=rWWB60\rN"*3#=M!A2^3e[bE%nB"?@Fc04]l5$?Z="[CK<8^Om(X4+_cErL>eQ\G&oVRo-"_VmnrCXF)P.,1#g/nr^ROK%e?b:@KFg$:pIs<Jc5_Iml?1NaGl.B8S%p73$BE#HSqd8LKdYgWYuA66%O2G#mXkSbf1.f.TP?1uh!l@[.l#=&O.5CQ7mH6];E\la/TCL*I0UcI[;(D!J.F;#=,)OVck*5B-$%1@-f,Q0qA=6)H;c''.N6&,WiF>Y=q8(_b]I;g.Vf@RB1u'jt,P!<^ApNs<']>[d0=>VS9tAXk),4?Ff;[TJZqgZM3A-Zm4=oh74P%IGjM;%EVcMa0?D%<k[6KjC8K.q058ocpR;i\Pa'Y.koKK6a8*cjeE6urgmkRjC:IuP),/lAaoe/]1)Up8\N6pEj7O=J<.a+%Hd.W%*KZ=7qT*rM_%[<W(;>$V't:V6=*ZL>;5]E24qks`Hh'\&lI>lip@2b)+ufIEr+1!jE`e<W4SIgRDV0ajE^@BPJ5GUE@'.UEY)"m[%rmAf.=*lZ];;AI=)&,>*1$:-hSNMMR\A<A1UuPb`Lh&q26tl;8[J_X&hLDKgi^0$T_19=A-El/S4]LmMcY":eU(ICABRic[Nc0TC%C.:)$l6A3,biqd+j.gcY0X)(Of&%tIZZVDc[\54>"e>e$-tLF^U*5"e$8EF)r&2JEb6Dpa!I7f*4GhP;/dF^Q9*';RKME'-L]\7\%E.X`POKYCQ-JMqEXMj8"7.<N8Sd8c%V^uhBmbsti$AlGZ(b("hKR+b-#"ITFV5Bj6YflXahR`%U`mjoRkFncDOB-%]$`^Dr=LAu0%m-hER$,$-2Og-'*Bg*Ee6M/<j@#,6^H%,Sn!hK#ZEieQ</g(O.%[`l>7tC6S.CKL4T@2+YD9:3D#a8TZh_O:T]!qdo9kTp98+*?c%T-nerfTYqV+R,kM_CNR'#AXfTDUO/mq>rL7hlqiQ:?;)$8";8*?[Rk^;*KG%=O:r"aIN!d9go!O/#F!Wq.?p4khnb[_7A.5nd1RC%Z$\M`CgC2\ne$AC%]5*E5M3;tHfETe+uqT@TD,?o%"dZ[M$3B`/lSY(WbOC[9eM:e,C@L0jt09Aj()pU0mt1Wn4ZOUFhH#kiOs2s%H1:`j):(gLFS\cq^T2/l4<NBXAhGVV@p!4]/0?+u4eT-/&7b+G_gngkbJD^o<aOoVWMV:VcLN]$f*fdj]M7dMj`eIM17$h0AAQPB%5@__(o9[>bF7$j8Yt4QrbJtgcc)S*tN+PU0)/be5PsUb@dr&:mP4RC1I]%3f:Z<Kb=l+7B1YXF"r/<&E&'-^ol`#*fpi%0YCE4B:%o=T4"$d2&,b@la#A'rK=IB\*\U#[uTFNo4Q_h[9rkQelc,j;BFINPW>q#-O:D#D"C$.6mY"f'!H@cF_)?4T;mP?iAR<)Y!-*HM!!%]&.`nV;/%iT>?TH;?Sp75j!L>5ib#3T]T-`V+q'$b0VpR8XAlaADgZ;FH+C1`t:TUo9'9O9)ckL$$/Rs>Tcshf,#hUE;nsGm&G(s%TP'3uLKSBIjG<@]AVE7pI4%pNY*i]t.!i2VZ:g;?nBPh.eu)\s^"hmA(T#R04PpZ8DA+7Fr#q9jcm:L5Zi90jleA[&W.03-=YHYM%G$<hB$,e[N;=sO.dSr`!bQjiA+tbm(LL!tMo^Z^F'V_WP`-K,9O[?FD;8jd0<7UWM.8UMBU)LG,U)Ha[U)G%-9f4tKWbMqo<7Puf%[r##C"*;^D..mdj<EJ5X:fd`,FZ'"/lKWmoiD(k=)MdRX"4j,nlDk0l?^K3#qC3o1([eH0AgEMn1!s't-Il1m\^4FLMU8?qNgmnS%=->#6?V#6ESCM%fA`./u)=.)Y<qPpU@@no:T)*_]9C2PFqA?[i:ur!R/&<S7o3%,M"oA4q2?pMb0.rIuhReV,6'(@S):O[;5h92G%5kopDLr?$q1[>R#2l`H5f>,<!!SpGO4_5gHa1*FrXX!W/eq^cG<$094[3e!Q;eaD/]-W;Ul4pi*/@jr(kkO4#a!>mseFZ9;ZaALo%Pm<$6SbB'UqN]QOm.rL/p_4=O-l'CZ;p&lrHD^D+lJAQu>MA]#q>2ip1Ie>ffT1t7#==X)3[F%BHRu9Xs7SU1!!qIn;Y\057honc%8BRd[(HJK\aP2_A>62Xe*'?jrZ5A=KViZp<h?Fjl.rORbn5=&J/1$;KLi=sTLb+84pN:'g)tEH:2(q^F)?\F!$)gU>EN_hZ/N"lD%REjf`Aj3`>V,#W).U/?&m.r;2"^.%mPmLO2.n2^"nlG8k85l2?e%Vu=&*Ici!]Or>QS<+%c%,>eh0$%C`q;O1Kl2&M]p24$)/o@N%V@]Th6(W'C>MBVU=^<qcS)"@(Z0G3KOj716##D)F$eKL,q_F4$e'5n`a02Y84ih\HVnmeo)6bW(S@C2XCs#o#9K>JBG=b7b#t.;H%aAC1/^Ir]n%G6D4kgh][$tHE_(^m],m)<.l\q(ohX,h1%!C7Pc5#BS%_L=f<ln4HI4)8IGI9-kTZnne]U&(HrB376-0Ji)IA#>gY%01@tG[>T3_5#a=bW-3oe(1i`)SRIp;0jaF37oSo*n^'Z%8S'&-lqeXoG(p9QrB@?KK@,n5nk&LjCbmc7HBo.CcN5lpCi"BY(VBfe%P,03>KaUc0\F:M4C7eXhk-Da6+M(d'mC?2I4/h_ib*2`eoeT'cm'.)LqD@m3b:5FC%,E`*Ni?[LbKI7;Wb4T@F=?Dl\[acnRX2uU%C7LRS);TdX<kR?F^KV.8U:f=V3XbUi[hi#iG^dt;4eqMJ,(QV)(n=\h9K`b/e?cqq(W5cGeC=!lMW6;&I#j\A"t%4Nm&lqRs7b'l%R>3L,T3%ijI1'=Dj"#\'X9E.2<pA1:N+Js/V0m/K56I&`2@\]u<1OX"/5NnAB6eKaIeI?hA<S(i@or\rKh$nl!h0Jih,Qn:PQk2_%#.$q-gk-=tkY^95Qa%P:'FNfXGq"#4FM'IIePYVCogVSi>-^kCF7>nU\oOTF2_sX*/G',Z,!a.9!/m:>8;m1.P`&k9^_]-mTeOJ&%U17$98i`THU7c*T(GrTrV4!Kq^J:?CNA8A5)ZpHcnQm,=kUi)YN.:^G;n3K^lre.XGO20G=kuD+N(-16o8H%R%MTk#>19fC#aa\F%j@EQl[p=Ur,=^),KR5r)>fQ5sa2:uQ[r`0TMsKG%@j&$g1+%%:=(GcM[,th-F@jHkk]KUpW_*L:[JZgg0rZnk(/eX=f;(m.!#$9c%/;+QQ/%t,/f)(*H]WP0HcBr=_ku1N6?YcDXlsQd.;-b`L^g%?B03ns7X\4r;3b]e%oh(/$O,P7Wc6_?mk_L-rp4gL?&J]:rL,Fa^%]TY-M@ae)!GihL:+2)c%=--MBm901'2pJ6\];.2f@j5s*bY<`s>VZP<]V8I=@q$`,-kqm(">=pD/^K*XNRK+eC*KfLF&atuaCj3S%olNd]2JG"f(1LDX+I,hKl"sHtnu5f%o`_nBp.,4VP):*L1*nu$0Zr36]eWVSb@<<.4PaK6F,)^t4_T'++e?e_oV)iaLH#un\5rDq%]1!0-njqP>SHoN-l2iK-&=$ZC?Gno"X'L#ba<4lUYLG15dZh3O`$`p:0'V4k9cY#:S_M&FW]#K*&$%HK%_HMldpS+ZZnQ-bj*/u%%]TB=;&L?pRcqJQ%NoAe:-Xmd<&pB95mH]3(bBZ(a,H0gq2s3*'H^q`<&N-fpfpW[!Z&<a]A(AC^QG&`$'!G6W9p6Hs[b8f3GdSlf%BQ=F$7C;O"N*_:7q'@Fd/R50PqJ)HYY]$4i,<(lB-rImETW>,LASV!TVEgRKN(d?e,rH[q^[+O`Z6#eIlTMMEL!.DW<.fOrH)fi(%W:-I]i<os?m)DQtQ9NB\8+uIb['#-.7FetE2*>BGL8.e\k9Vu*fW83b?a0Q*@3;4u0A)*R50qaJ<AjW[X5OR5Y8<a4/W2]P=;irP%?$Bmp81;Kr>crf7c+BFpE/_NqWNT`A>:Ag3L9IHb7["a^0iQ!]Q_K5tg-lH`L;'f@=Oh@APH>#k;8]Y4`;Mqj.sp(Y[*<.dF$A+K%,u!\l>-"QXika,QbI$bOB.Z:uG:bp%WeC[g=u\#^ET45\H!1pq)Z!ETd>K!"/iORP)4D9RE1]0+W)3*!.;<@:7%&dV(AZG/E(iXB%^&i#"RNDH>)8@$FOFY]Z8>\[a9OeG@I9,Ojr'Jn"5ESCu7lYDV;_Za00p/EFFlE6`eDPN=5lP0Xk.BIB/ENH'>18^Wn7Z`D?i]X1%Jp,c$nGqp_El_dSW5_fABIosKk`X%ld;;h\@W8"`"pqr,PK@T\@]&jhjPDDZ(@V(bjLGc^K,""@7mb#_(Cr'M(Dl8FGF5!FroH4p%CubD2&n"t`GnK%$7'd#RJ.E9m"-dL#T])FNbj./;Km[9',IY>K:tmhje+CqJl3S)9hCX,<rZJsVH_.5t873i`OJW=q`)hb)VH%n1%^A#=G[.h7(^A#=Y-E4q>6C`lUVc%-!'!9S2Vg<"&el:+k^T"Ci9-EIo)ai0;9lo'MN4D5h2`$#uL%mLa40_[_9,#!U_rXU((R]Q%%j)uBDg4M9nIle&upB\iG9k6]ZA+@[L:s?C2H'^5/*&Ts7FN4C%H<F:X`JTsH*@B]"k4@*'&TPSoUe(\Nq9C^'Tc8qt0>X(4&4k@;%4!nI(rf*dU>6\\PW91,JelAGr<t.l@a@E,+@\5#[@IZ-#`]DIpkR$oQ&e\-sXc\PX+]MdeS<K)HLif788R\)k=i2aa^3]Kq\dWig%o?\\N9JI]sp8D)Ld$J%<G6skD2Pr+)%k"BV@lctGI/K9a34]l/A+4'qk$L/,W-)%I3FofG8r.A^Z*nd`S,4T83A@CTc2OSBA`Z+h%;F..*jl70,[>i=:%7#4u"4<La>1;F!<6H.354'qoVfT=97.mRbCVY9<+bTY'C1?X_On;ioUbBLGPZ3cdhTONCnhI#QiabRcKr/$V%7Z->K$*;8g-.Z$p$Y67`::2RqeFVb-\WgARDB0%5%m0'9np@`/FOQ!]S!H*@_6JmrhPWp@+Kfj87Ni'i@R%6W^Ar5P4SG)ho(*=8%e!km$2&UCsK`\SJpHa0CbJCi"n1(>aG9cUM)&RY?n"gV0>S,OaqrW<_$P2ALWL(3=aPt(.il#lELY*^oGA=.@m/8gb%_;e"\E(&b%5S["IfG,D^i@I$,!aH-c`4R4CQZ=9q9hrj\SeKn+PpT*br]50S$2GFUR-[Z%NU]].8OhQGTrIpeD]uM6oATJ8:!"NQGn%oA%3i6P%4:jbFG>7+k^QBG1B'J8?,caq.*hJK1o.8BhE%A-F"(?-<_913K7N@PZABo@(&#W*!:B8+<1*lEh<+@[a2!/g\oLNQ$k]G(EW_*O;%[f!"%E?W.)(K+e*f*)YV!Z+I8f"n<j[B"".^bC*HZPZo0Uuan2$%h0$J)S55hL)?b"5#J'10H_P+L7o`R1"Q8./h3jU0<?f!CNDJ%/VkltVgDKm#/c%]=JpT!jc\59J-"op0RS6gY8KOXe]j!:L5uF8_ZstZHLIYa%q9Q\VhP`Un'9eK*6#5T71:7XX1^f\7tVr)aqs>.%*hbQ=Jd]t2>L?>C_b-EWK6)4lLZ&?f-s;0'U0$Vpp])M3f#$or?u#Hr^80`JW*LU9?6k:5XLHJ[994an6PH4,'=3YK*XBeP-,\._%lbN1)Grg!iFAY%iF(m<MZ[2[TohK[k"4:dZ!NFn-(&<aj@2/3p(l.\"H/9hb51jGYo8mM;QUb\0abs-.nmsT>CDp^$?]WENfKD2%%AL4rY>+]R(ppu?*^UFU>[rbj=ND%.d`W]IS==Ce$!MWokH4U1hMHYQ&`oU?<&^ZT%1(a;U`m2<IX!6BuGIT+q))tmu"XWM#(C7B\%54sIuKG_=A!RaHC&Hn2_GX,6Y;`/mYOrEp"Qdd=.=rb6Lm<?U7,@?9kr_uL(,Y(6HUg:JUC?pRHRM!5P8b;'\/dJ6i0#s:k.hB$`%1H^aLTa+X[BQP_nEZADqE%(;PV=K[r(V9bQH0f5[kr80]$\2tF7eFCuCQtm%fmO6ifr(FFI,0krT0LBg^*V=*pFW@-^MdPYl7g&)%UE1=Sd"DX!i0=;5^R6C,@u^)ojk'lchfA'"M)i\'0GP)l/RN]H6dK%/PLdZV>45Z6d\^617_Q0"R,>G2UjKksi;nH[4T0@f`i%$$%P-/%dCs8"n?)Wb+5=*\qhmt'aMYS+UhW=(-o\KcIM8lX=.eH)+:Wt=t9QVshRQ]_%kTbF/19!Z!f;u-S7f3S!m.N\R8S+tq)6KfO%/;Io?9%ZC#`o);h>ij@Ir8FE6-N"HiAQBUq^uh8`HhQ=JlGo`0D7LJ@k5+@urCh_<=<-oEHTb+=D_4NC?#oe=B<O?"Y7p$fO7Fs&%:pNhN5cO?se5so8LuD'i9SYo@c%`"l\BPptV>"JgM274n!_K.^R-3(`E08Y>Qj0Mp6_j4Qdo,O=Lg1u!*r.C2Sk8,1%q^j=<pJ7d%7Ssg324>&f[:cI@U0"h;&GMbD`5h&.Kfb-[S5S3M,,b1XM*Ae_gZIUb]-B<S4DO'<BQ@K$5rUua8No\_^(W#6UiK.f_]4Y$Gjjif%G9jAs,k+qT57JY`?,)k5N;&Z8ec:_a#u1PA[^S-Qd8)HADk"Lh7=l%&%<D%MMXRF\Sb`ZRI7R_Z_\e@)HcBs2,VbFD*Wcs`$RojZ%BYJ&c$iM?Nh/*BVW'("O"&k!Nl6FR>a.'V7Sqa@6f%c%]@DY^l!ohOga?(G2;?8)KX`f]lBS%KrpseY!fW)\HFk[H]`bmh0GuSCX%W?FsQfc"[==3H#DJNb$.&e[8YA$Rb_-FLc[F)J-PI8Zh8lF.[\dcfIKP\B!ON(dQ?dkWf4iusoc.F"+NqfV>N3g@YJk+RI=/Z:CM%d!-)?,*">6@q$N()/lq)9<9\aO;d@<-'3'Z;6l4I4:M=mCY<2i*N%G(_Ad0uH9Y'%87S)l*La_jl#UuL(j=C)l4CchlpH?"7?]E/%Lf-r.BrO8%&>`-YKdcW+k(-MYKoWfp$bE:lSg`b+U-r?G&>_B`"4>_s&/M!@Db]Sb:4YIN$lT1]`mii6pf@>&^X`W]0VRoSQtf;f%C5)aiR;mW>dcQnMeE='D97ncC%61T=J/^fc.k_PF\A<CR8j8"qC,:uA2;e^4d6\sdeZDtImDQ,2;jN15og%X[DFGgnLb$8`rOuSU%l,"`GE]F7H\T*803KdEW_F-eNRS3nYk!B015+.)a]f%#^7M_^r%,XY\M,XKc3k>A4`&7cY-H$VVR'ohA1M-u5r_aCX>oGlS'O^R+%cEr^U-=*aI!aI<,+_eXW/u@heMu)IqH?qM_!e*R=T^2),"=B7M>m%7Y*e0X`S.VAXa%QSqRS3gDp-JjNYBih_L[;Ci-d!O')74&C%c:'\[rtB$.(:gBZGq56hS2ZD(pUX%W2&5o0G,,K#b4"rE&dpTH,"2'UCEtH1?j&,ekMs\8bWME#LZhE,PB>a&A=f3s1lK>?+E')9%i4u(SO2774QXQ$H0u/nY_*1tL:43Q%1%Rq,T3=LLYI,\N7coccqXh\lr4nUf1D;i7A)c-X472si'W9,Ic2<B]@rGkq5ju8CN/99W%gN?Wp&Da4KEg4,sI8i![m8gOa[i%-L16Di17K(?qr'6"n<LTKYbBVjgcQ$*QF/ijO"IYMsFY[39ZLY=B'tM9*O5?;n^0(1cL92dd%ZgtT%k&@g#K,?\b.:d2,3DWWgADNZO14*.Y)3\*MbZN7JB&uPDUpAIE;]m])Lm@uXZK)p!<rS&GPs9aI<rQ@9$k%Kn<)#8$5D(Da%9;blk0H)_dEk#ja0a_W/P0f7&@A/L:<F2gn&8TMFfu;7oD@L:GG5dH!SNe7'o.t@>9WA1+8K*]O6E\4C*)okR\UlCKI'!2$;O@uk%6clcd;Tmn$q<'Rf'JoAk,&4j]MA9lLrmt0JEik*V2MYW1j2>KB&6l&tXOeTGc)%d+9`m+qbYUWLJXAnQ^Pu]gYZJLB+`XOXV-0dG%eAIB'Vcptd7u(7MAEOb.#@]&j?mbnA9r@nYHQbs`T1lJI?CS)8@ge8Q.,^q\87%EW1,\4dp+H02Gdh$mc?6Q4U,b.Za?:DlmHK[X%?84[?imYAuqDSJV`g9)&";UU(;,dmaY[=<fd61=&W@&^Q?s=p*cSHs'+2keA@S.i0'b66t1M@!FD<W1PUi%s<$:tDV3X^f@Pn@@K%NgV@52;.-deme)<O)48TLJ9CY&V]ik6VaJB/>gYrnPnCgnsW#f1LODXlU#jPq[\<c4^FWVaI'0;/^dg+Mq]"n>-ZhRm.e0KRKu*C%rqbG[\bZ5,nTr.^'ihZLSk#%$j(3^6Q%l&0cWSWkZ)o$<o9q@E&RL[-&T9<W)s``0,k&56//qi'Ceb!ajAb]-Ftc=&bpi(/8i*=B%I\"+'rBA6*fE;uPRI4K0hdIZ2a1(Ll[Fp(lG'0X^Do""^0@49M'5\%/h-I;.=$44GSa^<\I4$P*/iJ2Z3fG&T\%M<?X/tHF.Jn0k%RKh"qnUp%sZ&Keq/=VS)dtjH_Z$:W3ICrLuT]4pC*`uEGfW2W&M(m3i=,K"P][I/Q%+aUWCc5W9_[?i;n0'mX9\Lk;ASM017aJsN%J.'6aRL)g(e7'S!qP]j1aoqN;2.&l[q]fp1<htt.e5G@Hb-M"s?`VJ@aSH!i(^1IJ+7Z0#4@T3%K6:$5Od_.rS5rcW@j^Q;<`(;4%fLODWL'86!+5J_cCD$7pLh<7/.dUZD>qlrb&X]Z%/F4UMfb$D9#joqBZrF@;a!U/6(5?7_oeC\<cZNB?BV#VKog]OJ)\_m#AtjbN%:aH!E[n-AZJ3AE<8UiQ)]53WoL2uO*"cRT,m?0XWMeQn!kZV-;+%>dQB?Cq5l/\$,n0F)Bl"<C1rK/j(MPSRU8ikn_S1dk%-7.D=%/t&k_Rr:/qGV",MGp_d:p(B-4qob^"kepTE"I&I<%r/Nd8O(e(M>CR[n`seZg0Qi/"1*%^_2n#U4Cs*-?#Z=LLmV1G^/u8=psY:E%6q<\%?/"3uK_Mfl[T6!R!PPB#Lt_7/UDZEW:?n,+fo2LaP#uqFjQ)8glu\6\iXCiRfh!2I\'mIZ(MA1n_+Qeb]VZQ*q;.]Ah0YE!%97-Y!It$P#.-&M^/C+!@CId[1n$"e/j4j<qT(rIiO_U)G1EWF"!'5/aO6!f.C^%mKYT<QB2qRk/#0;\;fQ-0d9,&8?i3A`sHj'!I%f.u0Y/%IRZ?=)@=3:e.^$R]A/k-*i^_)"=0o/#;$Udon+]&mF$V8TTBRm\#Rnjd^AZQh]uCM/+?JXuUD(;gM!\D>(?C`kFd9R"n>%0#$9]#jFr2cl`0\K?W'379HL'pZH#V\hl!H@KQnLAC&T8PZi7CVT\l^',u1lXHqss7!]aV'/1P'AO*hhX;9Q+d8]JRk`G2dkd9aE%(g:m/+Fof!,'cmXb1*!rgj>;59'p5o;\pFh`g@Tn6#!N@oBL[XV7jT+e\W9HG!FueWPqK=b,))oI.nkORPPSQC4nDV5NL#YY1gU=%OEKHYMTjFW1TSTi=$%C:&XR9Ke/6s>/hm(oa3NA,dDLZS7:OMP9X]H#AD9?&oBdWjdet9dY'FDTBqZc<hioh's+>L"s+A2&s*YZ1%s1^+=fBkfH75I>\@!uWWI_Uq`R@eP(:SAjd?S)WK<:g.H(3rUVn'#6E^Bjf4Mf5$X,ZTI%oHT2SpoHn6(;6`!5d-J8&c7-D4LgG2%"*Upk(X?#dX\A*-R#1cd11gm(M>d3&do*g1O8_"B.3eJ\g7]^CM>cYVm4Ys9.Jba1PmO1cbu;+u>KfrI8:5ak,[ru]_R,(g.edHF%(?aCmXt4qm.tYN_9dRV?@j_!608i!%pY,<*@`21\PPg&!e2SGNWfL6#)/].+.9ZJN/^qX8/T!^73n`O=%Rb&)*O4uh`E&jCm@Mi?%bPYV_Zm:f!.dAOTEGTOF9tW3G((nfVp#&]J3W,=.4g1pp#T_&-/!iSkHOlK4!Z.,A9_-4lf]ASl/b:9'P5gl&CsMt&@B>Zq_$#Tp%H`/T8I65-_@2^m(T:5J*6%TD$7SU5QDIO_jAiqk>#)&rGZX/4i!cq-X03)i`Q_gJ77S&Lc#]/2K=O#)ST8g#qrer1k&<A0*0Y[b(%BB\&VTK(ukbP.An'4fG]qH3Yid=$qHW!D2eEFpU6m+'*-)eI]Jmu(UGNkT#F/Bs-?9DR'kF<IL-SkE`N6"9PDRDB#eBpT5']Jqa8%i7A.MN5nK:G,`^B&`N7M`ZCG,G>@%`$<ge(%XetM'QE1RJ+6heH0R!i/rAWWO5D3Okd!pkUm0qMF9.M<q-"CKs,\5KLP?+':BIIP%baj2S??q`>j>/tcB@lDA#c*i(>Pee;6:f+Njg6VK-9^Z`!0-g1/P%pLE3&CV59b3>aOFM?H;"gIN.c)tbkj>!!2gpCcr^$;;a4D1%;SVVp"%-?:m:"TH<3Spn_5SoN??(q,l1FW40r!NTd:VJ)h7p9$b*2!N-N,iP*kl6X7GLac:+W$_&`3Lk8l`9!Ei^$O9Za%qNoW.N%ZGiSN?>b*K[i<7j]MjK3abk!)-X2qF4dr5`Ti"5/[U\ALh^(.-=/eq*_elQ\G$q$LG.Q>2MLLR2qrL\RfT0It0?O=e)39.iapaMX%,s\@cC^0J>?jDpjc,'s19!GQO(8Zh^JM[SjOj>!s6W5iQOY0A2S`q2XIYbQW/Rak<aC.:KFbL](7k(dCM,Tdtkp&tMOo]_59%X`B%.alYe:8+lqbG!NLB>NH!Xke)ZDmR:EWUW[>)#!O']HDEhqO']3NSBWOiCoO!>to!JfQ7J0!5#*K-8Q9C]\&tUjjnm,b\&S/,2Oc4%?]r3J3)J_aM(uFeNcrWTXb#",AY^tQQ[V_$Ek,0IJJIn!Dj!RiD,l*M:Il#/r1Q.Q^"11#[Z!Mk[$7/C\1hsH8D%9](&l`urZ\Ue%:5TJ;Fsa9heNWn/*Ij7+pc0RdK6[pgl[Jh$!o+D*OBo('TE!];aKm!I,i]-Wbd)qBe]99",P,lbimHC"UdAB[aHCc]nss5gr:Nu_%;k2O8]m5OZiuc$)Y8BcLIuB=3_I"*)rcl/%]$Y6RpAu$!"&kS%*DaEkD5A6^+Y4^&C3t.Or0:GW>n/+a(75OqC,-EIH\mj@.4;TK%4AAEF@?6HXA1XZ$X@Kq.$tDH&b!].s"sT+lVI&U\qp1FkIZmF/7sqQu21fU1dWce%'!W\31k/!uf@8T?XO'!YlkDu#VB6h.OR_tu%-^&u#e2J]S8-LP/YZ:6:O,go7VEhCl;h)$+VJT=V3KUU7*OF]p77O"b/dU^4EcQNII7j(#V$BN,=:k</Xu)QO)"nL0Va%BIYP;%D%mC_PIqs[7$r2^"U+:&)@kZ6%[\ZcZcO3*Xrqom^3gescUYkhS&+]-8QD#!J;jJZ_\OBH,m0e<J>$j+M'3!!Cs>O?K-rG:^N?/4lf%!OT&"Lq(nN,)bHCUdchfji+H`LlX:%YfU)@]/"X9!u#)_nPbP)JW,fT#t.q,aR9c$9NdK,bYdYVN:e<i:1LHRrO.@qdu?\tpBP/j%2KkS+]JeU[4Ns52AWd?eKIDf(O:0/l&0PrB-4?J^(m#aXO/[3J*)]INg6j*$a?>24hb9r^2;[31D[Bo[gVW2[)R0n76WO3<cBq.l%3FQKr*plJ?n<R51&/C)#rf+Q6*"6<e!'pl#%XIaJKMn(VDIn&"9l1>2rl?#914`2D>&lUa%K']\c0:On]/k$TL+EA!!_JU?aJ7JS%aXm,3YG.o6f'd[&j*KE(kg[a,X"I?uY_[iZT^,gK]U'eF,r2J?*g0/:#Qg=7BD(Q#0p8.:DFqJFhpYiQSU05GIEk5h`kK5C6m6dB%A^IXP^d"s^00!?eCWu+2g])sGIa7mQ1LBhH/<bkZn5Mopki\1Qln`(81$T%Dq&6B]a]9%/XS,XX*P_&5qIZ2i3MtBIFJ!KVgaXpk%T:("ddG**\,(i_Uqq#hUCH`NrblmYElDii#@a^<!0JY2T-36H1,SFTa!d*6K1fIo^cTDW%!T*oC4-B\Wa1aBDJQk\`WTNFo0-Hu<%l+;BjrP<RN7g]#-I=B36BIL/>ARpPZ(.5Nt."r]7N%!4E@IRI2\[fZT)grnPCaJa9O;OKt:'%Q?M<)oA+h^NDD!uO@aQp2ZOYhN\%#ta2U.`RJTYGjtBD]-B-fX'+e[63eFB(/ZF<LcJ"m9]E93Y3CBA$AC.lW_m2+O#-Hm=D.23s2PcorX`X3aNpmWZ7tDWedrbYi;Dl%h]bK`$mJr'DJkRR\PJ:g\oA5R4-3so3p(I6eDt`Bjq9Pb;bhE&\Bi?bfm>*?G3"@sMh0)R%JpC?o:K+U=8Y(mG4tdUIJBX"Ia4]s%i5M"u>8LD-KLlu5D0"u!@;oqqb#[rRPhNpq>k8]"U\^mL,gr(rHJFBP>Ze\YEjJ]7b'o(.9C:;BI2Ko:^DRqa-f>SUkjXm,,cB$E%pEjCr$=,-3hbJhXfS,R8<J>JMYRn_$8r>%iO[Fr[\n<t=KG'\"='aE8"FAQO0&^U';E<Xm!MSo<&c(i,A7dFtPLnYZR,XTo^C46Y%Ha[C]9I7Na,[ciMUe@\A/%pVo*bd8lB,#,mM#92o6Q)]^CGiPE<?_@ZjmBZqgE]'K7aENZ!i^U(UeY^4,JqX&Y=9rP*F>a6TH/lf%I`\%\AhRT^2-CQ,5[[nM,.AFDmNG45Y/2O.&R$l`S!$4H2MZLWP0[Z9>[("eU]XF3Ld8UQK`]d+S*QAXijfU$>R>A^0TJ,e8etFA%>`,t<?cjQSj4$OWq_BIu1sWsi6do##gLN!3ATT&/4r$GdO!S7ef!OtU/N:07;I*@poP$sKkgXOqS!umFL_)uj^6`;(Lb5_\V=&kl%!J/\d*:-I,WB&0'V44?C?"7e_5sK1XoD,uT:XL.rl..u9C;^#OpAa=+r"]*iYFTh9EZ]b0N^%+TLm$3F8iNVLhPOQH3;/cF8I\As%j,W2]D^#'WK]O-oEkqP.OH(CP).E]0eL3`B7TROE&?LAcA+XdAG&uj%@_MuL>8*eTekq4?btt)J%\V/I!;>oU`DWJh[")fAc(00]%U]B;DW]Tm>$OC.a+iVod/.MCZqmA3]51Zi!a.?'!Dk_#0]G/HNZm4GeSH+>h?femiRAe&)^SP"jp",U2PPmo-p!j*UZA\t?0:/CO%bF5k;oBF[9"BM?`6tHBViLDf>*pDU[`_MLG#fBuSj3WQGIS1OK;c]C7H-JWKc5'B>4L[RZUZlHJ,7'F..f&#a3ZqU"do\(DE"*[>%_O`c^PTk1+;GQ1cVsB=16de]C,Q36FQFE9X!h%2qq_F0BaXdq_&R(ZQVO10VK-3tqQNgJGX):Rr`n8nkn)3WP<@2=0.HV,C`6r3C%nhCGPn5?%\Z[Og4!`jH/h%67VOQ9qWd[Ys+!491^B\)Bh%&Bk;4@aY0\Z+_-rS,r+rLndm^m&7VFGf@ka_3P/)'$CETmQ0*O,gf*%TZp7Bk5#;5lO[K1NkG6]pF(clP=dOk$.X)gC)YIj<9((fe8^tg9)8[ghQDSrkr8OCeWMM:;a=(fL?nOg0^Rg$5H;PnO#&jVL?f<`%Nuh")`Xoh,,`OBcISD"D3L.7j6qd!6'AP[@-fpl0XK(P=Lq%eK<E1DErAqqc'Ub$8m\M[9]9G**Y+PCj@K?.V>S,j*/[Ca4;TsrX%gb@l:<>2[f1uKS,8nnl9I=AMtS\5*t[iXqbF80gc]B4B=6n_GUmXeF'^3%Yr-:fRuCKNuIk<;0aKi'l,mDuhM*E-\*C2u@LCPeA6%,H&'Gg1TNjgq?]eBsD";&2=Uj#:,R!YNE#6Q2'(0N*l"j0@fT*OpV@hfR\"L.=qnF%NP@.Yu9acYsatt:G@6u-Q?AN!MfC?W0#@^%-u6uYqC".X^l@9NEj4qco*Fq9ep`9u_m7<f@t8+LM"q7.[j8i/7tHDO2):N>!29t>]Q*Ba1']IeYkl_NHmbYN=RL&i=dG:erE:Sc%'ZU!?@16qhg'7cLV>a$P'-%lOP>oZ[%F`E.6M(hSi>!fkl5$[]9Q,`KAKlBb;+c'qC/R;r1]Sl%0OEib<X,[8SXt5qd\+F\;[6a7%6Vn@#hETP&F*3YTMJk5M7Z\6*;eNFS.7'Y'"ft@d?`g>)@cNR9CWNAl+EYO)c[4_N:>@<P+[mXn14EtJ.W7-m<(H=,7+YS%Y*&N,%KFUKBR:A;<;nRXj.SNO0mlXY"[_"!p1XK[;_TJ&8GY,qU=LtR@hYV<cY&8#MoKV15lO";.%2Of7AC^FnXiI7*p)PecqUE,I'!FQ\%T6`ToAS:U.S#REhHLQIu1JL:r0ulIRXMV-@pS8>OrWuWDcVDu9mL<X0iUFe)*?1-QWhf`n/L#8g3B(m48>^SdYmc/?1oaMq7k9.h%=q:c^8mr@2X^H@6Y);sg11uXb\'6dAD4.*C]02$I<D(ZH.1l-\?H%UL`Ca!)m%K7i`sH*`[Psnb6#%:^r"HSlaY"`&ZKDd6JNV2V%4UZE=8(?7DE8*l3#+$ZGU)2;(&6UX\E:C`9Mi)$)&k6-o>=:,Vd03De_j__"]'$Hte"V9Rnmq.>Q;[HTZN9eV^L)/N_43[(R,X3[%6!oG`%)a=\._u\05GdJd96#tmMq(K-?nWtHQes9FcoT24`GH4mGJTTC$3u`ke1k286q(2aGR>#,V;:I.K"*pC:m-k1lm[4)L?OTA%ohp[-_*j%31!+s9J#E@(]b9^P(93m@USt4k;s)SVm:LZ+pAA@!);!>MfR8tEin1FB5^uYU?O/p]CD1$']aqkWa3Op^>B1oN)afcC%MPZmp+5_!mct)=+ek!PMC9+iK!CC^!4[*]?Sb?7.9lPR`_B@QmoY&556,%E!Q6%(q\A\P:3u^sU"Rt]d+"s>M2I'_MVZ0[Q#otHU%1SkL?#/mZP83W#SWCN&MK#hN^5dH=mF^M-jiu,kdp5isAAglMVdat.j^#S6WQ6`t?HcN8KX'i\W^qu#*:3RJV?21%umn!DPLDi<1%M"KQ3msP(fqY-l#@IV6#!V+6]d_80nWnP@[,aE[DMZl:WQ&CkbV4.W!^W_i@1$ug2\5Xs5\-/IccW*`YVc5BG4PlE]I/38A+:Z@0%j\d?,"Z"4WBsJs>*1%Cl%oOs3h$F?M]u>f:mm''i/?ihMp6dYJ_DGqG)%6"@Y)sbPm?$&upiidJR-YsY%46%6R<Mt1l;@@EklcY\%mK^%iAWs)RR*fLO20kl&7$Uu!h]#5qZE-2q=q2m*)+%%]kl<J7U'Ml7jd)T.R6IX:;*brCl<*Fq[=]M]`5Fm&'(:tn$/=jAIBq<U%^<.?q$pd4`&[LsO<b`GMQeRqLe=FW3!Mj&NXL,K:-e,R=\m^XDJk+B30&eZJU/XHMlVn47e?0hU\siE^$XK[!Xu8G1re2mQj5NW8%a&h"%>bej2>\%j%eg<0H?Ett[&Y;uD<F2!:e]\[$8?TgJC[J^,g5o4Vi;8ceB,fT27Z:/\Cj70;US_g=]4EJgPXD'O69(t#&,h9U%Y-\rfg"j6>BaRSU'gbC,7/F3XaM)RMf<IL0Q8),5A$<rj.G7qOK+6T1%VEC#6<7RH>;(uL-AlQXbHsFT>e?n?;&IjD8`dsFf_>M(%.TfDZf4oZ#T%9s8](PugR</?;6ee`5@6RrD$uHPJ*E1KTefgZK;,5!I2#F_]3=cr$[#jn#@>6:)?$(Lo&#(7^j9aka)6^"qEEV,F%*iW>SHO6EJl/:!]o<`6+3O.=e/_[f!;+B??]GbH6&6a-b=@Tssn1I"QD6p$UB-]'5`Jaq#;io,TbJ^bo"j*n,0eH`Zn"$:ld*Ld_%b;8?(&2X?fP.qVbrEGU!J$o5^W8Z&*9O8#7pe$+tMM[<F$,G7h;u)Ze\j1!LC3`)*"!CYqG5FUS#gH7J'&Pb:\dE%If88"fNTgcS%IiuB0AF8=*"jE[>_#bYh5^9Q.64EFE%-0she[.aG'o716%C$-uU'E@./KLZKpb./%NCL<u62";Q/7gkY@Uc+soRnEmMo_AtlThV"%FYco5`[i]VF/3na?m&=WPc7#1i]Zol%@<8HHFGNBCBP3dRo34?>YF.L,&T.iPp:%)_82O3h;VW*Q&EoWP&@S?CB(8=^74.\0d"Le%JaA[$5%i?LdI!g6#r(hNiYYo]JF$`n*3]Ze4l(IaZ>e\hMJ/R@pC47P&WnX/rSlJmM*4aO2lBLYerGT+.Dh'Qlig?!+LC>B[)b/5%d##Y6W^W4;+'A`?C)(IX5aZaMPOlW?Fn$5m[oRj(E_E8p+M6;VB0bXr\Gnq(.*@7O8V!I%(e)pe41U2HWIZ3(\[EUi54bk&qMf>p%>ACq6`jDe^Jkh/PF;Nsa3t@ajXE2?!hWK%URH9c0<(PTSD^jeF_2bDr5jiEV(.I[X@SJMgR5fc=&@6Z[Tk)$Hc!3NHlIf.ge]O?]%+O0#]7g,,E@P.`rlYFVp&9Hnt*XTk<\;nu%0?.-Iq]_UAPW7t?A6ggRd^mFE-SdWnn<Y[[:@qVRm'b;])r[YY.]Fr&cP*'!X(G02%pO8/dh0jrgHWF$T4,E1%@1in%<@!iT[6'\g)Fh1O>"\u`qJ:dBf;26@F8=^.Rt;7'Mhjs*q)5",H3mTkD!&(JRo(4nbMMC;_H?N.%?D@]Y+HQoJb-?i[3DX(OI+]j-8VXI[7kV4h]ERtt]\Q8/E-Fj.#%(*<*%`*,o-d'!D)tn0`0ho\X8tN/O@@Q%2,bAq]q9.7ehtd>%G+76TA'Z9Q5:1)"RW5Aop-KmD1Admhg@Sr!'%aCU=<%oGXl9al+G[tb!CIcE6uAXUP>R4G^8A#lWGZNU2;\VlFmP>qiDmAnJ@ETm%o]A,p1ms@eB;pcFX9iZmX4H%CM6M`:2sD#%)YL4rIUeG`1=PFqdA:^'h+N`.AD9p`VoX;P0(8U)ad&=4'N@5DRbSt:FtR5XqY7Y>%:IAeK?[RhRqZeCr5Hj4QACUD.7Ef-,__9R1B9.N;";ZbK@pt9/0:=r`42X6<#1!m*A`GB'c`iGb\1c`g_:k2_(nW9UNLsVSgFcpS%hd]*<;LO$N2S(J-6&AbaXL=jLnl>Y3BN"/'1&X".``)]$RPnu(jIBMb)D%JrY/!Hog/8=IP.;%l`/aLKhjSD$1)iOdM4Q(gT(1G$%QB<Ag!PR\0%+jCJn[0^HT%mZ$)^sCfdOR`Gmri-YSi7,@*9/hCp1?ZJWRR*('iC1O)Wg*hG::!t\<C)UTtK96`977Y)L+\?->P0[%dX1$hpKm`uI$m&T<l?X%,J!4?$?r10@OTTO6dL3"'50p*a5!ZY3RO\p._'9>^VO=BGKIo\BZG@=Q"mngL0&G;oT\rk4&n5ngA86J%qVAT*0;L$CU5'<:Sjk.i>_'5-9f*PhpX(%c>BfKM>qkP94jSp;=iZI.;3Oj,g2h:\Vjuo+nMDi<e@i7hd*_'!4*Ks43!oSsR_Lli%ibR`:^YFTOWoGa-!p8YdN"e8<OWg>V3;/ap3)$icd#Ih*mkGY3qE2N@K>C9gg>UD_6f13*bKcU\D]q[I=1-eC@pJgDcoRZ+p\mu>%_Y#Ys0D>t*Da2^N,53N6.3T6i:s5XCXGQDOkR`dnq_RTl$.gT*=7A?oZ)6uSam4a*5R_itgiA4pn1DGNG%++ti5Fau$l#N+ioh3?%LtXKOarsA/H"%1I]RlH<mX[K(X$'+>)Zn#f\a9O#6=Ilm4-3Y>oFn=KlB)G]f#6ZtaV004=(VBuL4Tq\[OdrJU+EIW!1;LDhDO$E%C2A[s=>&#5j,&:LM0UpjX_#Ik!]Ls!UIC3C$"jqr\+9('RXDU&dk1^$@.^0pci0aVMYe$s=2`ZA86ssi8%Sb<RX2ePKnI3GA\Oeu%=Tu%-ldWcc&.7sX[[3\#SMj73Ad\6[b?#+<UkFF?#OH?n0ML@LDSN:p_ht789\=#*q++5i7;='V=59?.HA1:8HMhHsX$hP5UJjQn%e!@Y5@\>(m6P]$@%.lsIR&&dSm;WKChO)i*IS8Gl=j,VG%id[eEl9_$>E]<e'XN7!%)*g(?YC:.;d?gD#"#d6+MC#Z6B!0,8K#<Q%M>Psh,hs.hk,BoQMT\M9\3X&D!LF82=&T/t7N$HZ[9UmCI/gOP.;<j%LF.DSmbDMFHtXV:-#=_Q.P2q?ee%jG_+:TP2rsim5n%1u%[K[1K%6rJX*]>"')O*c5d+kjph0cjncXAMRH)L+cC`(OcQKTL_N#-2]41qXcO0pd?'u=Ol=<ro)(Dpba$-o.>V7AFf^*%O9hXQ7Y%[9r/2C'fXae;cS^<I.7/(JnU\>[8<e3I&,p>_oIgKKrVd1:2&C\5pMTf#>9-KB&E1^&UJ(RK;:(b@cil93YAK.&PE04]HC`^?#P,%@4UTnJQlhmYV[3uWT5*T3.u1?7@2jk?jhS07>XEFpgl&Im_>)nIlR.iYprPN^D"6T().U%gd#9I!mp^cO^TWrDo\n7)$:"\/se'e%RR!g[J/17K%]$/q5%BfJZc)tV?pj<meU.UC+c`:AU"ik8Soa,fQj-HC+?ZQ?%EATZG,6#t==3ArYt$M&a+k1$W+XrG)N5^[E1up^%OZ'\M&3>:c"<L6n>TmX\)<kWArD#'a^m-I7DqZjk[LknnkX.'`F#[)bL-2eD3%_Mm!Kl.-S'gS(+L8K]<amP4jEXpD?+<5<Z5m5J%r+X)m2E`><.pUJBY7Fp]X6CBrKOG(U,8dj=N_lU$mn,`rhI1b4QYG[[\2ZANV?Yn[2\Z51HMtFT<Q>,ABFlBb"kTZAL(:#Fk71DR%1I4s`Rf^jRR=0je:RBkP3@5\V9+VoY3(Jch$\TCj\129ZSddD^htg<@d"EJR(O2,J71%3Eo9dVQ<@i8m&!cmVIf')^kRoMKIL/n&%`&L.f'ZPRm.+$4an`Uf>r5:)7N:i#_ML8qA.e\-s%#()sj=TG"qWtr6I#^=)IIP3rM;*&7#`:f5Ne="Oc`s=!TKm2(gMmce(uo?6%O"]X3&mYG[lB3*AN/<`jS-1P9mZGhI/J6p%ZXE#dGanpso'4M5!T^P3*!J7]Y=ClE&5.kFkA9%[j![au`oAILG_s#[;6]+Z/KG"!%_LN_@J\JWh$k7gSC+$m6LA<AKLtoOe3Xd(*5oPTtTNlMsQ4JUWNeDiuPY95/E>k(Yd'NO%:ahq>q)^SFEntaQTEi_#MAuia-]RcD%k-7MiB0J&!/USNB4201]!4OrRT\YbY8B5/C,bn6u%,a1]<^$p+3=Z-EjbEkO.Pi.N)Sbf%%,c0^%bADf<Gt@h']%"gm%1p]3Xi7Y%atDp4.$oV0cA)Fuk.9S,YSI%X?2J&LbAGIEBYbF!l!Y^+ihahP*>-5f-W5(#o5.@hre(g7A1SauckL>LIR$/C"*Ys@jkgs,OY/5.%WbHQK$un!s=-MeU12Q`u(IW-]_B9&8>8.@(<KPIU&;GQXk&/i7M:EdNZ&H*)L]#>"K0h$ZSIg3JJaI6QdWKQ-_R&1WH!ZuQfFTep%ffP!LX9X4q1?KPMCDke!88C]WiUV[+p!%+27(1m'!^drF:8iRF08<u^79Qm\naU5!]W/CKj9>S>*uT^UZ(@t4dH;FAg+mPC01iRj%`G/8df/+UpaM7cqW\*\/<T4XNbE/g\7Ocl*UE\6+F).Z/7\<AdNIE7.UJ';m68r>8*_Yf.UpTuG6bb:cX]5q4D6D<K7-T6?#KAXU%49X&JMl,`4RVg_e$$+"NGP3[hY&_u).j`>o<pR/\;O^n].8<H$L[':_L_KT<+RaDU317RQ-&XOsC=[+`V4m1KLb`p<R4anc!)dN<%]p%@UpCt4%A;&et=d4Ji`LKM_TdNGa8Woe)aYaT#L5pbq,tS<mlh"SAiP@m-T3A?+q5Yq8r'Et'M_^#u;$OF[a(A2Gl?b]2A^ERP%#YgQB+Qaih@&/2:i2:QH)Xeg\]Nb(#fs-\$(m(?Z1gH&lB@M@#8hEM-PH;q^E''L8Ii"OM1&%Zs)O:PpoV'>\\SdO>d"B&-V7,ZI%<u4[eODD6;WOnZ]/UZIJ1Qc-3gjL2b]-JY"Q=Acf$>8[d@W9Su8ePSIa>/^@0bFW?[$LAf1o;(a0#GtP6<Co--hQB0ZVZ;)^JnQ9%fSr.;ER`C\m93)7!O]+.%hXQ&U:ZX6N31U5lhSciKY_#RP<G&0@-Qgg)(ENYE^=ZJ3[GY6U;q+rQFLK2UBr[UNV9n<g>+>VK+FcF%<Re8s0t^CY6_6ZBp4bsjQdJI(L-43_rC4a)+]GG:;reILG[+gMV>-?*.aiS#7r+3XnU)k`Ug^]1^E#n@9:4/CCN;I]H\n3B.4;\#%gLoVjmQR/!EL4-O,OXTL]N'"=1Lj__dj2-1KAoPH1bH,.1)ppk!oj_kaD`7Ig^hlN7cK%\%iGk1ltS*"%<61YJrK3(pT\SnYZjM-%e-u]*=)F_D9rGL<kdHVm2"c,Sp,edrJ]t:.Nmi/d?q>5HfEP8'T/a$rbSdrSZ\(ZLS=+ZK'B8%FQr65%OX3?1om+95':3RDA>6uO%]iL_lf*1_$[a9o-B?k>00].Ej8NuuEgU(8Gnse<!1]M4In.3CF56k*P3k5<d&CmA_!^d'%VP$4h1/lj#[qDSBp!P=e<fr"`Uf+Mu%]HX!6e=(;el]U^[n$O<QBF3,W><P7sCFrI_]+j>7?H8#;cJ';(THcR$JmnsXJC/3U7a6-RHl4J$Z%F?i"(nb?Qt]1T#[9^:K-S/t%k/rG;L0R?QSOgBE4?*E+BWACX";%^"GJXr\7LdT^TbWE6*ZUm4DY<EFBo-A\&>ad2]I)YE\NSsYd4<u;dIW%dp_'H'0TP(EEfQ7&%ko@NQmL6q0j`Pj]1'Ef.gQ55Q=\39o+%Wu+d"]3n$mhV+q6S6N'^ZuU<]q-bqL9'R]K$Q"+CuReiAMt=HStE4GCc\M$*B_?KEeKn%STTU?LRmO%3^Qb0qi<Z\ri.2*^Wb0Z.7i##Sf7DW1[>9ZV/gFOIXnRU*/j+fXnd<P<tI&Z'<=RKD+G@dW!j3M>/*c'F_iaL^8hO4%49Mn"MU8rqT?\nf#0p=7Xs,^bngm@&BR&O3">_(7YcK)101AIR[>U2u52=srUaQQ5C!X4_%#0UM1@duWjkLqPmbU9'BFpYm#XXh,%0kIYVd&KRVE%RdBQ1DSORUA\;';C_4Ot(I8'#/_G)n0Ybj\!k;hpni0\s<q)3[%cA@3,9JCNq2hT%J%139lA&87%5/-Y-QmZ1b`&%+:Imc8Un!d2@oHKAkkVAV"IBUe+/W#fJsQ'eQ.sg3Lcmg$k"CLp9#4-<`>t3H?sfbs40AJAGe-&,%Bu?`mLj*n<KBWDWX><hHGS6%Cl<X5,b$e'bD)p<6U0K(oQph>0@e9\:c<Bh@uS[sk@(\njtW]2K"C%G&]&YRE`4qh<CHBdT^<f$74?HSEc0@5GrZFBRUdorYc6D[%ba`t(`H\3ej5]H/3H!%,m"ED5"OJ\p)Wn>07m^HB4Lgg;D`X2@"sO47=Bej&_IIM%PuXK7)(pi2>lu=IMQ5#]22<]%[?k!f$IZf9%,YpVF_QfU8Vb!+$F"%H7;3=EW\M]QQUJE3e7_]VrUN=XMi"\8;]X^F'l]W";]Bs\13ceX38fM4T-k6&91"r_XApFp?QS))QQ3Bn-%EOEH18B3gXR%U0n5hePsj)o#1Yub'H#@cP2J\`j?N>f[G5rH8m&e5FZG7?tRC['g7;fBK?U?p^+^RV`iA;N'6q8@PQ-;iq!9VRJP%fi].TG9i/$@7g]g."b>C;.aj;6lABOOYS9GFb(g#&m5uY%.9[;$MECg?<kALI@a9IWsDbj94HenejdDb?Vo,Ohf#]nK`lZ/nY%m\%f#?]"E]eNXg?i0QU]&Q7Q=UepcZtKON-SM=o@ZIZ3(<_1XJ,IZlV!u6KacbAFg([1-llnk\Kg0K2r,?+'H]_`;oAa.8@rGgVSm+l%YT\5\cL%L)SP"f@&`\%USY]BI1A7/a)5m2DV+U.iA@&W&$1Zt#9Sq[h_?mV]nd]]'.J?I-/R`MF`1T*,AD6[T@#NWsa-=Fs\]s_=%OV:Q<l,d+]/p+je?O22%Nm9_eH%"BECI0Sm=iMLThat'>;_1-Y![CJ7.="\M4$HpP-:-J'?l4HuhoK\Ubbu^8fG4tC923OdRqdQB%Wn+L>`9!N;WV^Yu6HAi.:4ug*_.=4NCZ_,:]_!N4osm@613VMDND[-q^23bZ8bj"@=iRu4Id'ABpuHV_*MGr2:7-'S;.WW\e0OX?%I*(\dHoWL5>-*k6,_5'/iKe)Dp/p7_E4"olhI/I&mr([-WLs_YIaIRD%lJgkP+!iLpi6<d$E%V.j-J5eebF-BrY96^gpT`o)%u*\%1T)te;F#"9)V)q%Q%>kLc'G0hnY8a;Zd@`&Q\`"_G[8aYI(U?f=$;"+j:(:.-?!#;j[YYfk#n$`9?CrU]rQ9%<M!^QV["_ARaq,p%n'Tkt_X-JhOWV'.1_)qqZl_@[nj@>aZQbHmhl?R2,!TsBpHt&b;q1?=a;^E[q>@';o!rp@jO&bA7L2lPL[:,\A4'W7&jd,EKAA\P%RE(!8J\8U+2?#lmoVJVY&&r^ETuK;&6eI)2Db*phUQh=0W2\V+Cl%e24k4d0ad(O"-MZFF0OL4':dll;<pVb(;Gr>V\Z]_6h7>&4%L-II?hU^uD(&]qpr`Be&j[W3K%!/gad+k*j'kG@8!AUW)"&=,Y-cLb4kjNO9@og'2)7HCpAuQ+*BWemEH[N/@gU/%`KpOW+AR4D0%+IAW/1.2%3>%X!sN@l]d\^%=FHkq,c"Z#qF&0G2pPQk/ed)jm?U8E)`88eCOZZ=>sBO[hdfbj<`Aloh>&KAHMq`$mu@d.)1jp_uq%+<j$@=]JH5[=G5OFM!J%J>Zsog$Y_BK_uHa4#d3dXV9p#T!gcnZBX]_b\RP@M1Gae&8*<'G)NlgRYisFG.)g^QAG)7WbYH]c(!;F%4<_,q4Ma)?gYMat&0G2pKES0V#*k-?A5\le)[&)'3@<j1H$gUG5E%#I0t<o`m6:K+*D6G85jc92C-]gsi1nRZYD?DW8F)-u)'mA+%26Vg_Ljro.2Vd$+.OS-WC<)LQb-#L@=HXL)\(>pLb@!Iu3&/R.8s</3]?HIk?M/NO;[M=$o+"05&0E#8V+T;,C/[!>,6fS.L*`.n%1b5p"FG\Gjm9N;LTb6BB65C]<MdhP.dh6jMZGXi<dT":kh=>.3CAZbA#Qf\18EFlg8mPM*.g^$^M-3Tl!lS_F?#ND8I1U]tVRh,E%@(m78St\i(9UnLc2=n2;PV-5SU5<Th9<',R^5&S:&#\\-]PqNF;jCZ=@dLt5IeZYd_B:s.`;7c3^]/`T',dR8^'5_1\5aW57=331%k18k-Pe"]BARA*-k$];dd5kFZC3n]h*\62U&u^e:V$oMi*E%Yo?\:_/)H'tF;e\JOYf*G[M*+FO.WMXCFbF2]2b2pjM7a_&[eS(O%-Im/`@-??/;`bK^.=HM!LO:n<205%/,/'8jO9sBsRB].j^2NVnh%G<p/7f@HREXF*otL(.AF-n7-^GHjj<ISZmB@D$B3.Yd-tX3j%,29@3o>>rV\Lrr,A&>,*md;88bUQ)KO<%quiX+!;^0/=?N()*VKJACddF;Kb^eID;Qj?0X0:fK-8@ri^:PNCIFtQ3L/1Rq=2Rd9R%?1c6N2YrsU+.Zn:"0]i2jR"7.>,RnOhJ]$Of=CcnagNp99=A9$-Un@(V"h][lq:u=L1O$OABJmp!-4HZOQO5%7m>!RYOa4LKH,c2%i@Jt!kQq!"k$T=-<F1YuHf\lXZV"?'Cri2BQqBn='9?$kU/KDhOq$)Ab3.#b13kI\B0onrb"d6N\-$Ge#u_b@9G(ej;)As8`02=S%M(gY9YKPs=Xq;(?=\f!2#pPpW.SLR9Z>0T,n\+]e==j;.CRL.M0XEHfi]N2MN7,DF;$Fd&YEk.t#SgP.BiJO=pl^Udbc,f!#AT/u%s7'^F?]?N@b)3g%CfE,?)c]`#>u%.%>FNZb)Vqas0X7Ws&8jr!$%\5iln-K+8;E`>Td[*n>#cCK]k"1$_ue7c'o$_3VcAFZ6LX7^%JH.7t$qlO/beSFn7MWhH;'gW=2O.OVfMp4M\khJpoWr(BR=Y3Yeu0.JEh:.Rk-bSc$A^cZ[](B!CnIV@"9QHiRU%-ZjLT-8W>Le8%.T+>K8XHqoM;Q+JURX4Wb@ltSf8p6u#;YJA5;>+WiG!%p!lClkDb9;dN@L<]d?@GHf':j%S\-2cZA_$g^!5U6a09si@kl0eaL3WX%EW(MD/*"VC!<G:5S_o,FAn@P)7-<klY%-a=A(NpNcEVS:BP1X+Rk_JP5q%bAM?jJs^((`@OaR%i9?HQseE"8,Ra]HPk`T6;7(3ih%K1hSp^eU"7P?n/u@bTp>OPDI<@Tr-ha!NHHro=BnbFe^/kf9d\r1#V"%.cXDb9(hJp?_IqaBFAN+%*?8HLBR*L-OS,96O/%b9'-k%M3euuq(jT=TjRfCBpZ1jTo.pST."9;5>dVMroEcP-"EOA_pEspYB9m^*\Cm6kjIT`:L<a8olG!\\baEP8?RCq.ndQTc4,)+r@gUK%^3=UV_(^n=T*2-(\%:?rT$V;e*u@.4]='!QD6+6NjY!a`Fo.j\pHGQN0D5Uu!ITAQ.(f/_eHopZ20Db4/qLID,k6^qgR_dl#?_>.%m1'T(Ij5AdqG0]:V0uK7&R.n_W#1=i^8VeV'_&i8$#>kFcD!1#i6`k*"OV!TFD,s#4BT4A533P"aS+$:oN]SrWAPt?=`f%ji"j3d%7(8'7T(5cOVl7[NR@5p`H_4c5[+d7_(+''cm[-hkL>J1&^L,&&]Bp($Q3oVZAb_h^BM-8s@JJ%`palEm?3X+Ll\)guWj`E#@:T-h%!a]8NDt]SZ5!.<cjo/F%<^%aB:)-.A\7Rdq/n"WM)r$NZ8Mrj!d[$rbeEq+iU^p34]eGht$Ke1T9O<nr1UZBk[n`b_UtpKj\f<r^%2t2QCE#\'T,?_Seqoi0-35"-EX>,,dNHL^UQ,f_?r2^$Y7QH3snRgpCWhJ0UoIEVB;%X@A,d^4MZRGAV/C1!8"5<?%k:MP0nIs,2%2.lOt.h^;.q">_O8X/`"PrI([jb:n]NX6FJ@V.Sh.cM$F&<REWB__Y*),Z/9J_ro%<i)e6'0ko>KO>]^hTY^uJ'!]A[^X0"A=/j.%[cKDhTl*YmqG#CcTR6EL<8'--77YMQVn_<,,uo4i"EAa"X4DpqhN'U@)crMQIZq6Ts3Gj*6S_0RV'NgC=(DqSDTuubd3l7BH++eb%@nW0o6dgj^9&<g7d^nN#p0RWT][#85)j?78gR&Dm2PrW*(XD@@%2<0\NQJD@@fdOWL,BM]'?E.*err?ec!p&u-BPKuln,cG-@F!-%h><Gup69qFU!E%j,2#fWgO,Q@fU/$3YN6"7H^SY>,43mm]P_5:;Eer(PA(9$3AWBYT1j'WIOE'(QS>7e$Mct7ZS?$#RZ/aeDDnAZ%QIk6g``J<PMFJK:=jjSA/\."d7@fO1b:*)_9mt]#nn:F^,EG=<@59cNM_VX0;VS7m,][#S]C`0[4-iiX?uoP647F=7\#CKLR=XuJ%Di#W9!`R-h4`i!.gW0@)-9&Os`\$>n3KR;4P@l#7<&9PL!\L4I=R"[k0_!bdpmiX$ANi^`APP,I;EieJ_'a@tAY[cFK_Y$V1E,JS%87YV`q&lQ7b_bD\18eh`Q.[N<WQ`D9Wlf^:.B.hoHemX6aY)B9n<[\2Z^pe9LN;34,8L(8&M/Hcg,W=:kr[.r^1a5s$GB#@B)Y82%nPkmDE0'gWo5n.OAQ+sp.92b1,1W$@ejKn-/nMX1;[8bt\KfkcK/ps(*%a#0A(=LfIb>[iR#`7UN>[OBkr\Y&TeVV/93V-5)&j4]%2lY"+At38C7K`e"7kIkVIWkMTp7\[NKf&BSfT[@k8S:4*olBLT*Q7\2!u"`!ka&Fn#;9'C1LjN51\4h'^;$Z7SNl7%4Jo]MGbTfO%fIK4!1C^-nR;pOtSg^h_W:J6b*^hVh*@NU9**3B\,S+clKQJ>[Tub/NLm:uD,Dt8A*4*4T6r>)-jObtJjuR"UplN6q*=Tl,Jj,X+%%NPAifHp:Bl0<fOeuak2"*UkQl0:M<i>\A4#97Kje)^Ul]3RQE(&'%F85WdFSkVaVY6T=iN<NG>1=1B<iE&#6d8N`d_(\qRKolI8%jeC1A%ie6O#KN01=c_8o_-E7IY3Ge54fqdtTi`[hY)JTUP&Z9aDh=m=`%)Md'&-!h4oj063M>8.ed_5`qt5Lbl1uNfZLaD?[<,]r%p?Lmk`BL\lR4>'n?^GdHb]Q&>iSGGRMSR(lB;-r\%tJKfK^k&<LRbp^8m8E*=7o@:1.T0WQ\J[?c,)264oi+!Xb[4Y1[TKdLRs'M%CFqCa+EWW(OS_Hg!k'u1KN83dMl[BhZ%2K'V-BfHobt\c:TqeYq'5Oa<(`Cp<09t!C<bhSk``$FdHq(l07%H/J61f2o&bOgeg2]Q%pH$R?3H&:&0n"`N\25`Y('XVa*C9ATA*I2t(`Z3*G9g^5,1TQ`+<g2("UlOlVu)fZmK+F'2=p5Xnn@b_7bK.RJBO9cJkX;@eZgh\%-5G"!FhG^J):fUA/K.'@gNP@$??R`96ofiEGP"dIhQ#Bb-q?hq3CiRFq.BAm-cCb++JjW=`JI@8,8)_2_+l7W,s4oFlN2@F;.M;s%LX.(-O^VBUW\pq_A5u^S2!aE=!jB-BLhK;7X-IfP`1ea5ap:=polUNGeaf!;El:q$,mAa+Ia%%8#,3(\hs*n/=I:-]]/1Ig25=,?%'I0g#ek^0UoqLZ2Bfsf+K^>:8!7(,hJi*n'>*OhV>#A,M[%`osdu%teZ<!4QdBoYGV<i=-6e`j`=P/8;r<0$!KO0\,491bRE7TDg%,GO$ELB3$QhM+'Na:Z]GAh.Ra%!:Wm4[gm$bZrSZ>#^X\iZ@8^(=R1q/W*H'(.Crp(Zk?i01):Wb?>Gjes18"]B&/C6K$MIP%<(o%]4aXRQ4Tl@mi,,]3%+!AE:-?AW,@WbUVcVDn*E4)f]S)sdlj]]1MnV+q01ABWPQ>"R*b7"oMT;&Oo=MF[2^G55QNr>#[BO8.F1-o%iu*^K8FlCld*bUca%Ko':EpIEg+Lm#)TX-HWAW_a'W=E1B@D/&-q20Vf$lN%"+7#o>gZfHjuX#GrQ*J=)Mm7[l/1t=B8F0Q-&Sbd%oKdM?`c]MoFuTg%J<3O55Z[DfiUh!lG5%G*X/bE4%tsiCi2(CXeZ]M*P92Mg=#E-4h-K*@5E\P<.MN>J7,KrOWYH7Yi;Wq#DYTF;%>tp[H`eo1?gT)P`]<6D@B-E,^X+[(nm(to5Hd,d!LM>;O$+h$%&i*uh*8>L9EWGd&-IF-*MgA,#@6OtmNh4_8e;GhOensr3c40Qf%F.3!e=t@3[F$dH$#*TdX(PK@H\b%oQmSTS>3h>K0Y1)/TEsY@$SCrY<GFDmk9<%56CQ^W8l8oH.iDK9$d4U)HNrhAR\bgpdOO2X1%@uTChg+A+g+rYm-a\Xh+X8,N6MRP8Nn=<=d6@GaPq8hVjHgI$aDk*^1!a6bV6b:cfbU%1\99TpU-<`6Nbqsp[+OU`5kU"UuJ_5_Q%Z5US-P$&ZI0]oo<(&>aWQXk'T%JPh@r`G!0T:X"(GpM7JknoS$[>n-aRA(lAAl<EAI79cUB"d(.n^/XVC#CidRB3qm9C5Xhgq"MI%niCi!Y-iY5kuu98c]#\Oi6$MsDkZq]31j[E>)RLXC,m$.)g%;hcX_)nZ$F>0Ol/OG>-`.@11p3-+qI1h@:@pI)4=A'WnmNBW#c60%fBR@Z"`.A"*Dp;"A_q3Z[RAQW<[s@]:2;UV27I3*=S0`Hq&M,a*:`PF9W;DDKbMW$`_9-o:7UN#_>(s]/s)\b:Cfk(>-f1Q:guGY%&eHB0$NoUF0\ohhJ0I7Kl2#GU,-"]2-dX]ZFN45<dYa.Rmorn>)LO0_,T=Jj`JL!I>89.D%1]@uc@eeRi329=KZ\r0R*D7XAb.9a%Xm<3?!ZEXn5LDP#n0cd_N+&9s:CP_?AAj');QQBa$-4oS,P![jl2bU,qa<QX/*BjjKO#Yr6>W8"fN)aqI57a*:8'D253^D%:W'L*%1Ogj^cWn(/7Y\apmpa90M'Xnf@2X\83MR4Bgg5.pX-#/)1ads*CH8.&&-cdkk0Knj+N"&5!0K-O<,s7R5GOJ7'%E/0BV<$a?RfE_%WXB[06H;_oW5L:7k,CCm/D!W_a>eb"%TJl]&YsE:$'f%9;F2[:Y?tB(CM^P4OCmS_/dH2&]Cr'9K>Gnk9Kn*P&\6\hN]%e`9Rn0n%28ZBd>u.8UI<\ir]37/B%"#s*e5L[5j1rd4R15>tRITi$-d_qB7S]]:a@B,1%Ekap!q4D*IdA)>^6Ii%%]/B0m+=Ib]*CE)mu]!k%N^mE!/iM!f"Hrp1=f;ufK&&J0V]6U=0de`bLM3O+"&jU?XJP)OB66.@)BWm`$ZeI=1elCFP=N\4_A.emC+_lp6)HZ7qPnZq9i8&p%>W3-n![XShkQ]dtT:[^Z8EIK8=c4GNQ(Q#hA7%"`4BC#\jDQniLfi,lAA:s#LPf\Jk#^e_Do%!-%[fpL5QR-F(Ulpb`&,G$/4$&p%^8QA4!HqBe6P%[8FI"BOXm;f4(Zm3!0J^D5?`O[]E/jXuU.'"F5-CK;E07/PoLkgP1-l82=jLjR0m4)#g!gR,GBtSfY8VM(_,06L%o$jM"Y,/S2@+KGa?/JpF8UKnIre]o%]=AGT#^Np3$_JY+eIUNO70s=u)lE4!N^+lY'p2:&B>YHU_\5_3-;W_mhe"!l->nSZ*K_A+%_iF1spuQ<pW^>P;Tb;!c3Ls,9_uuQ0'JG`4OZ:e_[WC.W*`];tZC3Su7s*[_A^We_Rn3+=n0p[SP+$S($cX<\NlW];j"/(]O7h."%$WV1)k&0;ZDN[q(_\=lM+]mc%*O[]o1.To5eQ<pMQ"Eo^-V8'4WGD4I"T`1*go3SF\\8Y6ZZ`s?i/8:W%ptUH_T1Z+\YXjGlC9Gf%QT_LJ*mVF+'[7S-g-sb7eO/DU/@2/.i4b&C(m%X1))Ri&=]\Y9EB>Y/:for\>pJ!8lR-Ue;l?Eqd)CY+MOV]9'td%(RX#9._G.6S%qTMbJpP.#lV./>secrU?GBqpJV7i*S^<MF%/I=uD-(R.R[qgTi<:2X*4%d1Z7K9:I^=MHQb5I[ap:((e^]*rArNGI8TE":ss7G4H%&*&0>ci<QcI/`O5qtn/,VuQDD5Q0(2oXB>Lqu?5*J,@!ps8Ci(qr`J/g]-m>Dh%YNJ,.^rptL;rrVq=qq=`/7p@j(:O+7,;^OQ.T%s79Ut?QdZB<rAThks,3/s8?m95>DXT@/~>%AI9_PrivateDataEnd