%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 006x003.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 317 240
%%HiResBoundingBox: 0 0 316.8257 239.0713
%%CropBox: 0 0 316.8257 239.0713
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 7522 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04FFA87DFFFD047DFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF%FFA8FFFFFFA8FD07FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD08FF7D%7DA8847DA8A8A87DFD23A87DFD11A87DFD11A87DFD11A87DFD11A87DA8A8%847DFD08FFA8FFA8A8A8FFA8FD11FFA8FD23FFA8FD37FFA8FFFFA8FD0EFF%A8A8FD25FF7DA8A8A87EA8A8A87EA8A8A87EFD0BA87EA8A8A87EFD05A87D%A8FD26FFA8FD0EFFA8FD26FFA9FD15FFA8A8FD09FFA8FFA8FD26FFA8FD0E%FFA8A8FD25FFA8FFFFA9A8AFA8A9A8FFFFFFA8A87EA87DA87DA8527D7DA8%7DA8A8A87E7D7D7D527DA8A8FD26FFA8FD0EFFA8FD26FFA8A8FFA8A97EA9%7EFD04FF7D27537D7D52A87D7D52AFA87D59FD067DFF53A8A8FD25FFA8A8%FD0EFFA8A8FD25FFA8FD0BFFFD04A87DA8A8A87DA87DA87DA87D7DA8A9A8%A87D7DA8A8FD26FFA8FD0EFFA8FD26FFA8A8FD21FFA8FD25FFA8A9FD0EFF%A8A8FD25FFA8FD15FFA8FD09FFA8FFA8A8FD26FFA8FD0EFFA8FD26FFA8FD%0CFFA8FFA8A8A9A8A87D7D7DA8AFA8FFA8FFA8A87DA853FFA8FD25FFA8A8%FD0EFFA8A8FD25FFA8FFFFC9A0C9A1C3A7FFFFFF7D52527D527D7D7D5253%A8FF527D7DA8527D527DA853A8A8FD24FF7E7EA8FD08FFA8FFA8FFA8FFA8%FD26FFA9FD0BFFA87D7E7D7D7DFF7D7D7EFD047DA87DA8A8A87DA87DAFA8%FD23FF7EA9FFA8FD07FF7D7DA87D53527DA8A8FD25FFA8FD0FFFA8FFFFFF%A8FFA8FFA8FD07FFA8FFA9A8FD21FFA97EA9FFA8A8FD07FFA87DA87D7E7D%7D84FD26FFA8A8FD21FFA8FD1FFFA97E7EFFFFFFA8A8FD07FFA8FFA8FFA8%FFA8A8A8FD25FFA8FD0DFFA8FFA8FFA8FF7DA87DA8FFFFA8FFA8FFA8A87D%A8A8A8FD1EFF7E7EA8FD05FFA8FD0EFFA8FD26FFA8FFFFFD05A8FD04FFA8%53FD077D52FFA87D7DA8A8A87D7D7DA97DFFA8FD1DFF7EA9FD06FFA8A9FD%0EFFA8A8FD25FFA8FFFFFD06A8FFFFFF7D52527D537DA87D527D7DA852FD%047DA852A8A87DA8A8FD1BFFA97EA9FD08FFA8FD0EFFA8FD26FFA8FD0CFF%A8FFA8A8FFFFA8A8FFA8A8AFA8FFA8FFFFFFA8FFA8FFA8FD1AFFA87EFD0A%FFA8FD0EFFA8A8FD25FF7DFFAFFFA8FFA8FFA8FFA8FFA8FD05FFA8FD09FF%A8FFFFFFA8FFA8A8FD18FFA87E7EFD0BFFA8FD0EFFA8FD27FFA8A8A8A9A8%A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8%FD17FFA87EA9FD0CFFA8FD0EFFA8A8FD5FFF7E7EFD0EFFA8FD0EFFA8FD5E%FFA97EA9FD0EFFA8A8FD0EFFA8A8FD5CFFA87EFD11FFA8FD0EFFA8FD5BFF%A97EA8FD11FFA8A9FD07FFA8A8FFA87DFD04A8FD59FF847EA8FD13FFA8FD%07FFA852FF7D7D7DA8A8A8FD57FFA97EA9FD13FFCAA1A8FD07FFA87DA8A8%7DA87DA8A8FD56FFA87EA9FD13FFC3A1CAA8FD0EFFA8FD56FFA97EFD13FF%C9C3C9FFFFA8FD0EFFA8A8FD53FFA87E7EFD12FFC9A0CACAFFFFFFA8FD0E%FFA8FD53FFA87EA9FD11FFCAC3C9FD05FFA8A8FD0EFFA8A8FD50FFA97E7E%A8FD10FFCAA0C3CAFD07FFA8FD0EFFA8FD50FFA97EFD11FFCFC9C3FD09FF%A8A9FD0EFFA8A8FD4EFF7E7EFD11FFC9C3C9FD0BFFA8FD0EFFA8FD4DFFA8%7EA8FD10FFCAC2CAFD0DFFA8FD0EFFA8A8FD4BFF7E7EA8FD0FFFA8C3A1FD%0FFFA8FD0EFFA8FD4BFF7EA9FD0FFFCFC3C9CAFD10FFA8FD0EFFA8A8FD48%FFA87EFD10FFC9C2CAFD12FFA8FD07FFA87DFF7DFD04A8FD48FFA87EFD0F%FFCAC3C9FD13FFA8A8FFFFFFA87DA8FF7D7DA87D52527DA8A8FD45FF7E7E%84FD0DFFCAC3A0C3CAFD14FFA87DFFFFFFA852A8FFFFA8FFFD05A8FD45FF%7EA8FD0EFFC3C3CAFD17FFA8A9FFFFFF527D7DFD08FFA8A8FD42FFA97EA9%FD0EFFA0C9CAFD19FFA8FFFFFFA852A8FD08FFA8FD42FFA97EFD0EFFCAC3%CAFD1BFFA8FFFFFF7D7DA8FD08FFA8A8FD3FFFA87E7EFD0DFFC3C3A1FD1D%FFA8FFFFFFA853FD09FFA8FD3FFF7E84A8FD0DFFC2CACAFD1EFFA8FFFFFF%7D7D7DFD08FFA8A8FD3DFF7E7EFD0DFFC9A0CFFD20FFA8FFFFFFA87DA8FD%08FFA8FD3DFF7EA9FD0CFFC9C3C9FD21FFA8A8FFFFFF7DA8A8FD08FFA8A8%FD3AFFA859A9FD0BFFCAA0C9CAFD23FFA8FFFFFFA952FD09FFA8FD3AFFA9%7EFD0BFFCAC9C3FD25FFA8A9FFFFFF7D52A8FD08FFA8A8FD37FFA87E7EFD%0BFFC3C3CAFD27FFA8FFFFFFA852FFFFFFA8FFA8FFA8FFA8FD37FF7E7EA8%FD0AFFCAC2CAFD29FFA8FFFFFF527D7DFF7D7DA8A87D7E52A8A8FD35FF7E%A8FD0AFFA8C3C3FD2BFFA8FD07FFA859FFFD047DA8A9FD33FFA97EFD0BFF%C3C9CAFD2BFFA8A8FD07FFA8A8A8FFFD05A8FD31FFA87E7EFD09FFCAC9C2%CAFD2EFFA8FD0EFFA8FD31FF7EA8A8FD09FFC9C3C9FD2FFFA8A8FD0EFFA8%A8FD2EFFA959A9FD08FFCAC9A0CAFD32FFA8FD0EFFA8FD2EFFA97EFD09FF%C9C9C9FD33FFA8A9FD0EFFA8A8FD2CFFA87EFD08FFCAA0C9FD36FFA8FD0E%FFA8FD2BFF7EA87EFD07FFCAC9C3FD38FFA8FD0EFFA8A8FD29FF7EA8A9FD%07FFC3C3A7FD39FFA8FD0EFFA8FD29FF7EA9FD06FFCFC9C3CAFD3BFFA8FD%0EFFA8A8FD27FF7EA9FD06FFC3C3C9FD3DFFA8FD0EFFA8FD26FFA87EFD06%FFCAC2C9FD3EFFA8A8FD07FFA8A8FFA87DFD04A8FD23FFA87E84FD05FFCA%C3A0FD41FFA8FD07FFA852FF7D7DA87DA8FD23FF7E7EA9FD05FFC9C3CAFD%41FFA8A8FD07FF7D7DA8847D7D7DA8A8FD20FFA97EA8FD05FFCAC2CAFD43%FFA87DFD0EFFA8FD20FFA97EFD05FFCAC9C3FD46FFA8FD0EFFA8A8FD1DFF%A87E7EFD05FFA1C3CAFD47FFA8FD0EFFA8FD1DFF7E7EA9FD04FFCAC2CAFD%49FFA8FD0EFFA8A8FD1BFF7E7EFD04FFCAC3C3FD4BFFA8FD0EFFA8FD1AFF%A97EFD05FFC9C3CAFD4BFFA8A8FD0EFFA8A8FD18FFA87EFD04FFCAA0C9CF%FD4DFFA8FD0EFFA8FD18FF7E7EFD04FFC9C3FD4FFFA8A9FD0EFFA8A8FD15%FFA87EA8FFFFFFA1C3C9FD51FFA8FD0EFFA8FD15FF7E84FFFFFFCAC3CAFD%53FFA8FD0EFFA8A8FD12FFA97EA9FFFFC9C3A1FD55FFA8FD07FFA87DFFA8%A87DA8A8FD12FFA97EFFFFCFC3C9CAFD56FFA8FD07FF7D7DA8A8527D7DA8%A8FD0FFFA87E7EFFCAC3A0CFFD57FFA884FD07FFA97DFF7DFD04A8FD0FFF%A87EA9FFC3C9CAFD59FFA8A8FD0EFFA8A8FD0DFF7E7EFFCAA0CAFD5CFFA8%FD0EFFA8FD0DFF7EAFCAC9C3FD5DFFA8A9FD0EFFA8A8FD0AFF847EFFC9C3%CAFD5FFFA8FD0EFFA8FD09FFA984A8CAC2CAFD61FFA8FD0EFFA8A8FD07FF%7E7EA1C3C3FD63FFA8FD0EFFA8FD07FF7EA2C3C9CAFD64FFA8FD0EFFA8A8%FD04FFA977A1C2CAFD66FFA8FD0EFFA8FD04FFA977C3C9FD5FFFA8FFA8AF%FD04A87DA8FD0EFFA8A8FFA97D76C9FD3EFFA8FFA8FFFD04A87DA8A8A87E%A87DA87DA87DA87DA87DA87DA87D7D7DA87D7E7DA87DA87DA87DA87DA8A8%A87DFD0EFFA8FFA8A1A1FD1FFFAFFFFFFFA8FFFD08A87DFD05A87DA87EA8%7DA87DA87DA87DA87DA8A8A87DFD0CA8FFA8FFA8FFFFFFA8FD14FFAFFD07%FF7D7DFFA87D7D7DA87DA1A7FFA8FFFD0CA87DA87DA87DA87DA87D7E7DA8%7D847DA87D847DA87DA87DFD07A884FFFD04A87DFFA8FD0FFFA8FD11FFA8%FD11FFA8FFFFFFA8FD07FF8452A97D7D7DA8A87D7DA87DA87D7EFD0B7DA8%7DA87DA8A8A87DFD08A8AFA8A8A8FFA8AFA8FFA8A8A8FFA8A8A8AFA8A9FD%05A8A9FD0FA8A9FD22A87EFF7DA8FD07FFFD09A8FD0BFFFD0AA87DA8FFFF%A8FD04FFFD0BA8FD04FFA8FFFFFD0CA8FFA8FD04FFA87EFD0AA8FFFFFFA8%FFFD0CA884A8FD04FFA8A8A884FD0AA8FD0BFF7DA8FD0CFF7DA8FD097DFD%07FF52FD0A7DFD07FF52FD0A7DA8FD06FF7D53FD047D53FD047DA8FD06FF%7EA8FD0B7DFD05FF7DFF7D7EFD087D59FD0AFFA87D7DFD0BFFFD0B7DA8FD%06FFA8FD0B7DFD06FFA8FD0B7DA8FD06FF7D59FD0A7DFD05FFA8FD0D7DFD%05FFFD0D7DFDC0FFA8FD05FFA8FD05FFA8FD6DFFA87DFFA8A8A8FF7D7E7D%A87E7E7D7D7DA87DA87DFD6CFF7D7DA8A852A8A87D52FD057D527D527D7D%7EFD73FFA8FFA8FFA8A8A8FFA8FFA8A8A8FDB1FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T17:51:27+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T17:51:27+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T17:51:27+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwdPImqxx+Yoo7m3C&#xA;656ql+L8mEkl1MHmpTk/+kxwmh/u0+QUqhx5Jm0Wyl1mL6rDqWmabqP1KSCJR6U1zI8yKrFN4raO&#xA;kUSkU41qMVZauk34UA61esR1YpZ1P3W4GBV36Kvv+rzef8BZ/wDZPirv0Vff9Xm8/wCAs/8AsnxV&#xA;36Kvv+rzef8AAWf/AGT4qpLpWrfWH5azc/V+CenRLTnzq3Ov+j0pTjT6cVVf0Vff9Xm8/wCAs/8A&#xA;snxV36Kvv+rzef8AAWf/AGT4q79FX3/V5vP+As/+yfFXfoq+/wCrzef8BZ/9k+KoGaO8sbW1Oo61&#xA;em4m4xFbeCCYNN6Zdgipau/GiMdx0xVT+tf9rTWP+4f/ANmWFXfWv+1prH/cP/7MsVd9a/7Wmsf9&#xA;w/8A7MsVU2urj6wnHVNV+r8H9SunnnzqvCn+hUpTlX6MVVPrX/a01j/uH/8AZlirvrX/AGtNY/7h&#xA;/wD2ZYq761/2tNY/7h//AGZYq761/wBrTWP+4f8A9mWKqulRXt7DK36avOcUzxupggiKivOMMstq&#xA;jV9J0J2pXpgVG/oq+/6vN5/wFn/2T4q79FX3/V5vP+As/wDsnxV36Kvv+rzef8BZ/wDZPiqlLpWr&#xA;c4fS1m54cz6/JLSvDg1OFLfrz49e1cVVf0Vff9Xm8/4Cz/7J8Vd+ir7/AKvN5/wFn/2T4q79FX3/&#xA;AFebz/gLP/snxV36Kvv+rzef8BZ/9k+KqK6Rq7GcSa3dKpcfV2jSz5BOC15crYjlz5fRTFUToVxP&#xA;c6Jp9xO/qTzW0MkshAHJ2jBY0UACpPYYqjsVdiqXeZf+Uc1X/mDuP+TTYqmOKuxV2KuxV2KuxV2K&#xA;uxV2Kpdqv+92jf8AMY//AFB3GKrb1vMwuXFlHZNbbemZpJVk6CtQqMOte+WR4K3u0br9PbzAZm/S&#xA;MdosHE8TbvIz86ilQ6qKUrjLgra1Fpb54v8AzZZabbP5YtUu76a4Fu6SKWWNZo3RJ2oy/BFKUZ/8&#xA;muVpYtF5r/M+RrSWTSTbvcwNOLA2kr8Q8lx8MtwrcI5YY0g+A/bLNSv7JVB69e/mudQsrO0eWS7t&#xA;47idGgs5YrWV30q6MZmmLGKiXkkcawsakqrnxxVMJda8x2Udonl6DVLmKVnNy2q2l1LK10pgVYKy&#xA;en6EUivKxlFYwV+E02KqIh8wefr+trBaPZXETJHc3U1nL6YcC9aT0uZQSLSC3AZSVq/U9AqkN/d+&#xA;fp9OnuLuXUItQS5ju7TSbazvgkwksVYWhurYqIlMxZS7txRl+P7VMVel6QSb3VyRxJu0qPD/AEO3&#xA;wKmWKuxV2KuxV2KuxV2KuxV2Kpd5a/5RzSv+YO3/AOTS4qmOKuxVLvMv/KOar/zB3H/JpsVTHFXY&#xA;q7FXYq7FXYq7FXYq7FUu1X/e7Rv+Yx/+oO4xVfc6zZ207QyR3TOlKmK0uZU3FdnjjZT17HK5ZADW&#xA;/wAj+pvhppSFgx+Moj7CbXWeq2t3KY4kuFYLyJmtriBaAgfaljRa79K1wxyA9/yKMmCUBZMfhKJ+&#xA;4lLvOHnHTPKmnR3+oxTywyu8US2yK7tKsLzLGFLJ8UnpFE8WIHfJtKUR/mx5clUTQwXctmef+mqk&#xA;XpbSTxRdZA59ZrST0yFpShPEMKtKgdX/ADehsPq0n6GvY4f373zT+gPTWHTrjUEQelLKfUkjgRhU&#xA;UCt8RDAqFU3uvOt1o/pJ5gsVSW4V7lf0dL9ZjitImiSSaZpVtjRHuFHwKxI3A60Vaf8AMfSjDE9v&#xA;Y3t1LOI2jt4lh9QiT61QnnKiig0+QmreHvRVK7n80b59A1jXNP0OWSy0iVeLzPUXULW63HKMW6zv&#xA;EaOvIzKqKCCW+0FVZbozq93qzqaq12jAgg7Gztz1FRiqZ4q7FXYq7FXYq7FXYq7FUu1bXbPTTFCy&#xA;vcX9xUWlhAA00pHWgJAVR+07EKO5yyGMy93egmmvLX/KOaV/zB2//JpcrSmWKsDTRPPUcWvxLM7N&#xA;flhZym7eqsJriT1Y6msIkgeCFVSnArX3JVLB5d872S3lzf3LS6culXUaRy3Ek3oKUlMcZXkPVlHJ&#xA;AztXkF61pih6bEJRGolZXlA+NkUqpPspLU+/AldirsVdirsVdirsVdirsVS7Vf8Ae7Rv+Yx/+oO4&#xA;xVMcVdiqD1ODSZo4v0ksLRwSLcw+vxoklv8AvFkXl0MfHlXtiqWL5a8jI9sFsLBXs4XtrVQkQ9OG&#xA;LkHRR2WP1G/1eR6VOKobUV/LuLU7G/vVsDfziWCzuCquSsVtOZasoYBVt4ZlLNtQFa9sVUtI0n8t&#xA;76CI2Wn2vpQTg24lt2iIlZVZfTEyoWUqqlQvw7CnQYVR8OkeSrGWa9igsbeS4cSzTgxryYiZQeVf&#xA;CWb7398CpTe2/wCVhdra4hsnP1q306aFELr9YZVgt4ZlQEUKlYxz+HoMKsi0kAX2sAbAXif9Qdvg&#xA;VMsVdirsVdirsVdiriQBU7AYqkD65e6rM1v5eEbQIStxrEys1upBoVgUFfXfxIYIvck/Dl/hiO8/&#xA;l+vuY3fJGafoaafHPJBKZtTud7jUboepJIR0DBTGAi1+FE4qO2QnkMvd3JApvyzX/Dek1NT9Tt6k&#xA;bCvpLlaUyxV2Kpd5l/5RzVf+YO4/5NNiqY4q7FXYq7FXYq7FXYq7FXYqletTRQ3mjvK6xp9cYcmI&#xA;Uf7yXHc4qhr3TPKt7cvc3EytNJTkVu5EHwgKPhSRVGw8MVX6dZ+WdOnae0nRZGUoS908g4kg9JJG&#xA;HbFUB500HQPNen21jd6gkMMFyk8nB0Jki4tFNA2/2ZopGRvnirGbf8r9FiW2U69FM8cAS6uZI4jc&#xA;STB7mQypLzHpiR71zIgBDUFKb1Kqmp/lf5XvrxP9yVrb6aIpIpLaKKJZv3uny6ewjn5/BGUnMhTg&#xA;avucVRmseUm1t7SXV/MdpcT2qyw80tkQejK8MnKMGd/TuA1sKSjpVqKNqKrbbyJpAlpfaxbXlnGy&#xA;fVbRo4wqpEL3gHLSPzcNqHLlQD4B8PU4q6HyXbWujvplnrtoiveabf8ArywiSQy6b6D0YrPHyWSS&#xA;0RvYFhuSGVVlmiSpLdau6SLKDdp8aGqkizt60oT+vAqa4q7FXYq7FXYqgtU1rTdLjR7yYI8p428C&#xA;gvNK38kUS1d236KMnDGZckE0lY0vUtdIk1tRb6ZUtHoqmpkH7JvHBo/j6S/D/MXyzjEPp59/6v1o&#xA;q+bIERI0WONQiIAqIooABsAAMoJZN4ql3lr/AJRzSv8AmDt/+TS4qmOKuxVLvMv/ACjmq/8AMHcf&#xA;8mmxVMcVdirsVdirsVdirsVdirsVWTQQTKFmjWVQahXAYV8aHFVH9Gab/wAskP8AyLX+mKu/Rmm/&#xA;8skP/Itf6Yq79Gab/wAskP8AyLX+mKu/Rmm/8skP/Itf6Yq79Gab/wAskP8AyLX+mKu/Rmm/8skP&#xA;/Itf6Yq79Gab/wAskP8AyLX+mKu/Rmm/8skP/Itf6YqrRQQwrwhjWNK14oAor8hiq/FXYq7FXYqk&#xA;l1r81xdvp+hRR3t3FUXVy7EWtsw/ZkdQxaTf+7Xf+Yr1y4YqFy2H2n8d7G+5X0nQxZzy313Ob7VZ&#xA;1CTXjqECxg1EUKCojjB3pUkndiTkZ5LFDaKQE0ytLsVdiqXeWv8AlHNK/wCYO3/5NLiqY4qwZLzz&#xA;4ieYwYrh5SJl0escBCSiS6aMw0oGQ2yW9DLUeoaH9oAqlvredfSvvr/1qaxfTb9DHcxpCI1T1TbS&#xA;ySIOLyyxemroqji1T7YoekxGUxqZVVJSPjVGLKD7MQtfuwJXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FUNqepWmm2Mt7dtxhhFTQVZiTRURRuzMxCqB1OShAyNBBNJQ0Gv63SO8&#xA;jbR9Mp+9gjlDXc1R9hpI/hhTx4MWPive24w5eo/Z+1G5Tuzs7Wzto7W0hSC2iHGKGMBVUewGUykS&#xA;bLIBVwK7FXYqk82t3NxLNb6JbpeyQ/BJdSSenapIf2C6h2dl/aCLt0JGU+KSaiL8+n7XL/LCERLI&#xA;eG+Uf4iP0eV/JW8scv8ADek8qBvqdvUDcV9JcucRMsVdiqXeZf8AlHNV/wCYO4/5NNiqY4q7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUnvfMaLcyWGm20mpajGwSSKMFIYmYcv39w&#xA;QY0ou5Xd6dFNRlscW1k0Px0YmS2w8vs1ympazKL7UlbnCo5C2tj0At4iaAgdZG+M79B8IMsu1R2H&#xA;2n3qB3p1lLJ2KuxVK59eiM8ltp8Emo3UR4ypBxEcbeEkrlUB8VBLf5OUnMLqI4j+Orlw0hoSmRCJ&#xA;7+Z9wG/x2HmpLoM183q65MLklOK2UJeO2Su7VXlWUnpyft0VanB4Jl9e/l0/azOrGPbEOH+kaMj+&#xA;r3D5lNoYYYIkhhjWKKMBUjQBVUDoABsMuAAFBw5SMjZNlA+Wv+Uc0r/mDt/+TS4WKY4q7FUu8y/8&#xA;o5qv/MHcf8mmxVMcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqnc3Vta28lzcypBbx&#xA;KWlmkYKiqOpZjsMIBJoKkTXGr6+nCzEml6O+z3zgpdzpX/j3Q0MKsP8Adj/F/Ko2bLqjDnvLu6fH&#xA;vY7lOdP06x061S0soVt7dK8Y0FBU7knuSTuSdzlUpGRspApEZFLsVQWoaxY2JSORjJdSmkFpEOc0&#xA;h/yU8B3Y7DucrnlEff3dW/Dpp5NxtEcyeQ+P4KD+o6xqak6hMbG0Y1FhbGkpX+Wa4Unr3EXGnTkc&#xA;hwSn9Ww7h+k/qbvFxYvoHHL+ceXwj/xV+4JrbWtva26W9tEsMEQ4xxIAqqPYDLoxAFBxJzlMmUjZ&#xA;KphYuxVLvLX/ACjmlf8AMHb/APJpcVQelectJ1PW7rR7ZZfrVp64lZ1ATlbSrFIgIYnkPURtxurA&#xA;/JVj6edPMgg15ZbYLdWpZdOH1aagkE1wrxsOVZvSt4I5iyU5h/h7YVQZ83eZ7+O5s77TnisJNF1C&#xA;X60tvIgnnjK+nIjOxWONoW2Vt+R7ACqr0eJ2eNXaNomYVMb8Sy+x4ll+44FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FUs1TXoLKdLKGKS+1OVS8VjBxL8Bt6kjMVSOOu3JyPAVO2WQxki+Q7&#xA;0Eoa20G4u7iO/wBfkS5uI2521hHU2luR0KhgDLIP9+OP9VVyRyACo7efUorvTzKWTsVQGoa1a2bL&#xA;EoN1ePIsSWcBQylnUv0dkCgIparEbDK55QNuZ7nIw6aU9/pjV2bru+/bZCt+ntScpxfR7IbOSYpL&#xA;uTbfgUaWKJe1fibw47HIHjl/RH2/sbR4OIX/AHkviIj5gE/YPfyR2naRpunR8LK2jgr9t1A5uf5n&#xA;f7Tse5Y1OWQxxjyDRm1GTIbmSf0e4dEXk2l2KuxVZNI0cTOkbTMoqI04hm9hzKr95xVAeWST5b0k&#xA;kUJs7fY9R+6XwxVhf5faVaWnm3WPqzNHDbtdQRW8kjmXj9arV1ZmUqOIELClE+1Uk4UPRsCUu8y/&#xA;8o5qv/MHcf8AJpsVTHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVk88MEMk8zrFDEpeWRyFVV&#xA;UVZiT0AGEC9gqQ/pbVdb4RaPFLYWbgNNqt1EUfgwqotoZB8TMD9txxXwY7C7gjD6tz3frY3fJNNK&#xA;0aw0yJ1tUJklIa4uZCXmmcftSyN8TH9XQUGVzyGXNIFI3IJUb29trK1kurl+EMQqzUJPgAANySdg&#xA;B1ORnIRFlsxYpTkIx5lLTf6zfsy6bbizgUUa7vo3DFqdI7esbEDuzMo8K9cq45y+kUO8/qcnwsWP&#xA;6zxHuiR9st/kAfOkRpuhWNkwnKLPqDF2mv5EX13aQgv8QAoDxA4jYAAdslDEI78z3tebVTntyh/N&#xA;6bcv7femGWuM7FXYq7FXYq7FUu8tf8o5pX/MHb/8mlxViPk5LRfPWs+jz+tBrwX3J4DxZrpXhBZF&#xA;Es1YmDLzb9ypCd8Ks/wKl3mX/lHNV/5g7j/k02KpjirsVdirsVdirsVdirsVdirsVdirsVdirsVQ&#xA;WravaaZbevcEszsI7e3jo0s0jfZjiUkcmP8AaaDfJwgZGggmktGlajrMiza2Pq9hHIHh0ZGVg5Q1&#xA;V7uRa8zy3Eanh48u1nGIfTz7/wBSKvmn+UMnEgAkmgHU4qk5197tmj0SD68RUG7ZvTtFbpT1aN6n&#xA;/PMN70yjxuL6Bfn0/Huc0aQQ3yng8ucvl0/zqX22hcrhLzVJv0heRkNDyXhBCR3hhqwU1/aYs3vT&#xA;DHDvcjZ+5jPVenhxjgj17z7z+gUPJNcucR2KuxV2KuxV2KuxV2Kpd5a/5RzSv+YO3/5NLirEfI2g&#xA;63beY7vV9S0tLBtQhkMqLI7+ncEwNOyD15owtzP6jgKtQqLU/FQFURF+Y5aDzFI9vbh9H9Q2sf1j&#xA;+8KTXUPCeqViYfUWlegbihr23CoG88+3N7aSWEtvB6V7p2pcpreUy0ls/UjYoAKtHKI+cZoPhI+R&#xA;KHocUiyxrIoYK4qA6sjb+KsAw+kYErsVdirsVdirsVdirsVdirsVdirsVdiqR3evXF1cvp2gKl1e&#xA;RkpdXj1NrakdRIy09ST/AIqU1/mKjfLo4wBcth9p/HexJ7kRpvl+2tLg31xI9/qjrxe/uOJcL/JE&#xA;qhUiT/JQCvep3yM8pIobDuSAmmVpS2+12CCZrS1ja+1EAf6JD+zy6GV/sRL3+LenQHKp5gDQ3l3f&#xA;r7nKxaUyHFI8MO8/oHM/D40ofoS6vzz1ucTR9tNg5Laj/jJWjz/7Ki/5GR8Iy+s/Dp+1n+Zjj2xC&#xA;j/OP1fDpH4b/ANJOFVVUKoCqooqjYADsMvAcMm28UOxV2KuxV2KuxV2KuxVZNKsMTSOGKqKkIrO3&#xA;0KgZj9AxVAeWSD5b0kjobO3O4of7pexxVMsVWfV4KsfTSrnk54ipbjxqfE8dvliqV+YLOzi0HVJY&#xA;oI45BYTRB1RQ3prE3FKgfZHYYqm+KuxV2KuxV2KuxV2KuxV2KuxV2KoLVdXtdNijaYPJLO/p21tC&#xA;vOWWShbii/JSSTQAbkgZOEDJBNJbHpGq6t++1ueS2t3rw0i0laNVU1FJ54yryNTqFYJ2+LrlhnGP&#xA;0/M/oCKJ5p1a2lraW8dtawpBbxDjFDGoRFHgFFAMpMiTZZAIW91uztZ/qqK91fFeQs7decvHsWqV&#xA;SMHszso98qllANcz3ByMWllIcRqMO88v1n4AoYWOs6jxOpTCztepsbR2Eje0twOLUHhGF/1iMhwT&#xA;l9Ww7h+v9Tb4uLH9A4pfzpcvhH9d+4FMbKxs7KD0LSJYYqliqjqx6sx6lj3J3y2EBEUHGy5ZTNyN&#xA;lXyTW7FXYq7FXYq7FXYq7FXYq7FXYql3lr/lHNK/5g7f/k0uKpjirsVS7zL/AMo5qv8AzB3H/Jps&#xA;VTHFXYq7FXYq7FXYq7FXYq7FXYqkWq6vc3V4NG0SX/Tg6m/u1QSR2kQ+I86/AZX+yidd+RFBl0IA&#xA;Dily6ebEnoERp2gi3vG1G9uXv9SZPTW4kVVWKMmpSGNRRFJ+11Y9yaCgnksUBQSAib/V7GxeOOdn&#xA;aeUMYoIY5JpWC05MEiV24ioqaUzHnkEebkYtPPICRyHUkAfMoEpruqA82Ok2LGgRaNeOniXBKQ8v&#xA;ABmp3U9K6nP+iPt/Y33ixf7ZP/Yj4c5fYPIhMrDTrGwg9CzgSCKvJggoWY9WY9WY92O5y2EBEUA4&#xA;2XNPIbkbKIyTU7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql3lr/AJRzSv8AmDt/+TS4qmOKsXj8/wCn&#xA;tFrkptJwmiRzS1HpkzrBNPbOI/i+FvXtJFAem1DXrRVL9Q87x32m3dk1k8BuLHUubmSN/SksDJb3&#xA;AdVNQiyJxEnQnCrNopYpo1lidZInFUdCGUg9wR1wKuxV2KuxV2KuxV2KuxVQvr+ysLV7q9mS3t4x&#xA;V5ZCABTf7/bJRiZGgpKSq+ta8zlHm0fR6BUbgI76eo3Yc6+gm9BVfUP+RtW30w/pS+wfr+5juUyR&#xA;dF0HTlQGKxsounJgoLHcksxqzsepNSTlGXL/ABSLbiwymeGAs+SE+s6xqu1mr6ZYHrdzIBcyD/iq&#xA;FwfTH+VKK/5HfKOKU+XpH2/D9vycvgxYvqqc+4fSPeRz90f9MjdO0ew0/m1uhM0tPWuZWaSaQj+e&#xA;RyWPsOg7ZOGKMeTRm1E8nPkOQGwHuCNyxodirsVdirsVdirsVdirsVdirsVdirsVdiqyaaGCJpZp&#xA;FiiQVeRyFUD3J2xVAeWSG8t6SQag2duQR0I9JcVTLFUsfyx5deS4kbTbZnu2L3RMSfvSySRtz2+K&#xA;qTyA1/mbxOKpZrHlby5Y6TqV7Z6dBb3aWE8SzxoFbgI5DxqOu7sfmSe+KsmxV2KuxV2KuxV2KuxV&#xA;J9S8wFLltN0qL69qwZFeOjiCAP8AFzuJgpVKJ8QX7TbUG9cthi2uW0fxyYkrLHy9DHcPqustFfap&#xA;Xktw6ARW6IaqlurlvTC9S1eTHcnoAzzbVHaP45pjGz3ledcuL4mPQ4RcDodQm5LaD3Rh8U3+w+H/&#xA;AChmH4pl9Avz6ftc78qMe+U1/RH1fH+b8d/Iq1lokUVwL28la+1EDiLmUABB1Kwxj4Yx8viP7ROS&#xA;jio2d5fjkwy6omPBEcEO4dfeev3dwCZZa4rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqX&#xA;eWv+Uc0r/mDt/wDk0uKpjirsVS7zL/yjmq/8wdx/yabFUxxV2KuxV2KuxVZcXEFvBJPPIsUESl5Z&#xA;XIVVVRUsxOwAGEAk0FSAXWp+YSyWZk0/Q2AD3bxyRXVyG3YQBjG0KcdvUI5GvwgbNl1DHz3l9g9/&#xA;f7mPNFC50bREGm6fbF7g1kWwtFDSEt1kkJIVeR/blYVPeuYuXUb7+qX4+TlYdLKQ4tow7zy/WfcL&#xA;LQ0m91J1k1sp9WU8o9Ki+KKo6Gd2AMpH8tAns1Acr8Mz+vl3fr7/ALm38xDFtivi/nHn/mj+H7/d&#xA;yTkAAAAUA6DL3CdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS7y1/yjmlf8wdv/ya&#xA;XFUxxVI0856Cy6q5kkRNHDvds0TiqxvJEzRClZKSwSJ8P7S+4qql9/5u0nVNK1GythMJ5NNvZ/3k&#xA;ZQD6uzW08ZJ/bjl+FhhVlmBXYq7FXYqlmr69a6c0duqNd6ncD/RNOhoZZO3LfZEH7TtRR+GWQxmW&#xA;/Id6CaSi8tbcSwXHmi4F9eN+8s9Ftkd4VZabpCOTzsrEfvJBxHUBMGTUxx7R/wCPH9X43bsOlnk3&#xA;HIcydoj4n8dyZGHXNTqLhjpVkafuYmDXbjvylWqReFE5HwYZi1OfP0j7f2ORxYsXL95Lz+kfDnL4&#xA;0P6JR9hpthYRGKzgWFWPJyo+J2PVnY/Eze5NcshjjEUA4+XNPIbkb/HTuROTanYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql3lr/lHNK/5g7f/AJNLiqY4qkR8k+Xj9fHoyBdTL/XE&#xA;E8wVhIZmZQOXwAyXMknw0+M8uoFFUBrHk/RbLSr28gEwlt9NvrcBppHV1uec0xkViebSSnkzNvXC&#xA;rKooooY1iiRY4kFERAFUAdgB0wKuxVpmVFLuQqqKsx2AA6knFWNX3mSe8gmfSporTTI/hm1+4/uq&#xA;14kWqEUnYdORPCvTnuMtkI4xeT5fr7vvTjhLJLhgLK3SdNueDLpUD6bDOC11q14okv7lv2X4uSw6&#xA;k/vR8PQIB0xp5smXl6Y/jkOnxcwYsWH6vXPuB2+Muv8Am7f0k803R9O05W+qwqkjhRNOfilk49DI&#xA;5+Jj88ceKMOTTm1M8n1Hbu6D3BGZY0OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KrJoYZ4mimjWWJxR43AZSPcHbFUB5ZAXy3pIAoBZ24AHQD0lxVMsVdiqXeZf+Uc1X/mDuP+TT&#xA;YqmOKpfrWu2OkW6yXBLzSnjbWsdDNM4/ZRSR06sSQFG5IGThAy9w5nuQxflrXmZlaSGOWwqGS1qf&#xA;0eCOhnkID3jA78IwIqjdiQDkPzNbYhf9I/o/HxDmflBDfMa/oj6vj0j8d/6JZJY6BbwypdXbm9vk&#xA;/u5pAAkQ6cYIh8EQHTb4j+0xyqOLe5eqX45IyaokcMBwQ7h1/rHmfu7gE0y1xXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql3lr/AJRzSv8AmDt/+TS4qmOKpanmXQXS&#xA;/kW+iKaWWF+3KgiKFlblXwaNl27gjqDiqWaz5o8vXui6lbWt/DLcSadcTrGrb+mI2BJr0Ioag7jC&#xA;rWp+bLqe6k0vyzbDUtQjPC4uiaWds3cSyD7Tiv8Adqa9e+2R4wPM9w/Sen3+Tkw0xrimeCPeeZ9w&#xA;5n7B5rNJ8jRLO2oa9cHVtTl/vWk/uQK1CBO6qegPw9woNTkZAz+vl/NH0/tPmWf5kY9sQ4f6X8R+&#xA;P8Puj8SWUgAAACgHQZNw3Yqoy31lDJ6U1xFHLQNwd1VuJJANCeh4nFUPLr2hwsFm1G1jYioV5o1N&#xA;PHc4qh5vN3lSGgm1qwjLdOdzCtfvbFVIeePJRNB5g02tK/72QdP+DxV3+NvKJ+xq9rKB1aKRZVr4&#xA;ck5CuKtDzt5XYAxXwmqKj0UklNPH92rbY0q7/GGjndY791PRk03UGU/JlgIP0Yq7/F2lVp6Gpf8A&#xA;cL1H/snxVb/i2AueGmam8PRZ/qUygt1I4OFlFPFkA8Dirj5sh5rGmmai8zAlY/qzISFpyNZCi0FR&#xA;3xVs+ZL4ken5f1KQdCaWiUJ/4yXCYq2df1X/AKlvUv8AkZp3/ZZirjr2rnZfLeocj0Ly6eF+ki6Y&#xA;0+QOKtHWPMRFF8vycu3K5twK+5DMafRiq1NV81OpK6NbNuQCt9Vag0IJ9HqDs22x8cVXm786dtK0&#xA;3/uIz/8AZDirjdedDSmmaaKdR9fnNR4f7xinz3xVot52IoI9NjJ/a9S4cD/Y8Er9+KtH/GQKh59M&#xA;RnNFUxzmpoWoD6grsD2xVd9U86Ef8dTTQfD9Hzmn/T6MVcbPzkRQ6rp4B2qunzBh8q3rCvzGKtHS&#xA;/NLUrrqLQ1+CzQV9jykbb5UPvirho/mI7tr8gY9QltbhfoDK5+84q0miao5Yf4mvy6mkipHp4CsQ&#xA;GpQ2rEbEdTiqK8tf8o5pXf8A0O33/wCeS4qmWKsTH5d2CrqUaX90sWp1WVP3J9OP1Z7iNI/3e3pz&#xA;3bupap6KagYqlOv+TtI0HSbjUWuJLiOQiC5ju5FjtzJqUotZ7uZ4kjkXjHcsW4uqgeHXCqY+WvKn&#xA;lvUPL+nah9UuLc3tvFcNCL28YKZUDkAmXcVbrgApMpEmzujpPy88oyNyks5JG/me5uWP3mQ42hRk&#xA;/K7yHI3KXSUkbpyeSZjT5lzjavM9U/wJZy6sLXRdLvYbC7a3SVJ5lLSRwTzNa8S5Jnb6usSNsrOW&#xA;AqUIJQuF15Ttpp0t9As42W49Ki3NwpPB5FFmQHp9cIj5Ba9GxVE6fr2kGWCGDSYohNdLHIFvLpal&#xA;mhT6mtJN7xfrHIr0op6dlXqkPlbSIK+gLmLlTlwu7pa06VpLgSknnqWLy55Zu9Vtbe/v7mFSYoUu&#xA;9QdQQpYvKYndljVVJLU9tq4qxLVfPaWkt+IonEVtK6K8+o38RgESXLhbtWkDRvcfVQIRT/di7HoS&#xA;hbc+dPqMV7HFaOkdhK0UNudRvQyLCLwLbOBLtcTfUF9JRt+8XrQc1WU+ULyHXbrVIJvWT6jJxX0d&#xA;QvXKVllj9GasnwzKIQ7AdnGKWTfoCx/37ef9Jt5/1VwK8/1zzXHYeYtU0lY54Y7E28aXdzf3QirO&#xA;9oHuJWFyHSGNb2m6UZlNH2NCqW/43EjLcPatayNbwshn1G+5WYnS2kY3f7wFUmM9IqUrw39lDcvn&#xA;4rFM7QNbEBW4XGp3wNt8DOFu6SfC0xTjD0rUYq9MtdGsp7WGctexmVFcxte3dV5AHif3vUYEpd5r&#xA;htdE8uahqsRupZLOFpVR768CkjxIl6fMgeJA3xVglv5/9WOMvE0TPChYSalej0yzojXcnGZx9VT1&#xA;DyYHtsxG+FDrXzpVHjS3+qApC/OTUr300a5ezL3klJV/0Vm1BqNsSYz4kqqnfk7zAmv6yLCaC4tw&#xA;1mt08aajetLC3o2koEoMq0WX66fS23Ebd9lUs2/QFj/v28/6Tbz/AKq4FYD5i81WuktqkSTrLNYX&#xA;YhJbU7xUjj+pyXS+vSYlWd4fRXb7bDY9CUJbqHnT0nvHa0ethcOIEk1G+9RDGt8voP8AvNrmcWX7&#xA;sDako67c1VSfzw0U88Rhasdy0a/7kr79l5U+pt+9/wB62EHIL0ow691WTeSb238wx3zS+vGbWRV/&#xA;c6hePx5ry9GWsu0sf7Y9xilH+bYbPRPLWoauk8qNYwmYfWb+8SNuO/At6w+J/sr/AJRGBWJ6t5ws&#xA;bXUNTtrS+huobQ24Fz+k71Y4DOagTn1zzqhXdKAFlBO+FCWT+eFSO8ZbVrWRyHl9bU76M25WJyBd&#xA;lJaq0wgVIafzDr3VTST80LvTLOe3ttPgig05jBDDNLJzjjt1vAsEx+NvWmGnr6XWvqDrtzUvU8Cu&#xA;xVxAIIIqDsQcVdirsVdiriAdiKjrv7b4q1wXrQVrXp36VxV3BetBWtenfpXFW8VdirXBd9huQTt3&#xA;HQ/hiruC77DcgnbuOh/DFWwAKkChO59+2KpT5l8xw6DZxXMtrPeGWRo0htvT5/BDJO7fvXiWixws&#xA;ftYqhdT846PYalaWM0M0kuoRxNHIiIUKSsVUNyZW617YaVLdW/MnStK1y50m8sbqaWKUxiW2i9VB&#xA;EtvDPzlJK8fjuOI6+Jpiqmv5kQS3ARNKmQI8Ed5FO8KTRtcTGOIgK8iOAqF/hc9VHfGlQX/K6dDk&#xA;01LuDTb4TXEd1JY29wsUBl+q263JNWkqFaORaMFO9QKnbArLdD1warLqMRh9P6lOkQ+JXDJLbxXC&#xA;klCyVpNQhWPSvfFU09OOlOIpTjSnbw+WKtlFNagHkKNUdR4H78VboK1pudiflirsVcQDsRUdd/bf&#xA;FWuK77Dc1PzxV3BetBWtenfpXFWwAK0FK7nFXYq4gEUIqPA4q0UU1qBvQnbw6Yq7gu+w3IJ27jof&#xA;wxVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpXP1Tiv1n0+NTw9TjSvBuVOX+Ryr7VxVUTjxHC&#xA;nGg406U7UxVAXn+H/WX679U9bmeHreny9Tgtact+XDj9FMVUp/8ADH1oev8AU/rHA/b9OvDnHWtf&#xA;8v0/ppircH+F6yeh9Rr6g9bh6P8AectuVP2uXj3xVV0f9B+lN+iPQ9L1P3/1bjx9T00pXjtX0uFP&#xA;8mnbFUfirsVdirsVdirsVdirsVdirsVdirsVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:073B4F983D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:073B4F983D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:073B4F983D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T17:51:27+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -239.071 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 239.071 li
316.826 239.071 li
316.826 0 li
cp
clp
[1 0 0 1 0 0 ]ct
28.6787 219.494 mo
307.678 219.494 li
307.678 3.49463 li
28.6787 3.49463 li
28.6787 219.494 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
28.6787 219.494 mo
307.678 219.494 li
307.678 3.49463 li
28.6787 3.49463 li
28.6787 219.494 li
cp
clp
.9375 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
30.9395 217.914 mo
33.2007 216.326 li
35.4614 214.654 li
37.7227 213.207 li
39.9829 211.66 li
42.2437 210.024 li
44.5049 208.439 li
46.7656 206.813 li
49.0264 204.776 li
51.2876 203.533 li
53.5483 202.026 li
55.8096 200.746 li
58.0698 198.651 li
60.3311 197.546 li
62.5918 195.846 li
64.853 193.988 li
67.1138 192.937 li
69.375 191.017 li
71.6357 189.323 li
73.8965 188.144 li
76.1577 186.561 li
78.418 184.803 li
80.6787 182.796 li
82.9399 181.636 li
85.2007 180.025 li
87.4619 178.829 li
89.7227 176.545 li
91.9839 175.807 li
94.2446 173.246 li
96.5059 172.24 li
98.7661 169.886 li
101.027 169.148 li
103.288 166.927 li
105.549 166.285 li
107.81 163.52 li
110.071 163.153 li
112.332 160.73 li
114.592 158.792 li
116.853 158.617 li
119.114 156.509 li
121.375 155.575 li
123.636 153.232 li
125.897 151.998 li
128.158 150.928 li
130.419 149.017 li
132.679 147.394 li
134.94 145.826 li
137.201 141.963 li
139.462 142.584 li
141.723 141.538 li
143.984 139.55 li
146.245 136.674 li
148.506 135.588 li
150.767 133.682 li
153.027 132.259 li
155.288 131.018 li
157.549 130.323 li
159.81 128.852 li
162.071 127.396 li
164.333 125.708 li
166.593 124.035 li
168.854 122.294 li
171.114 121.218 li
173.375 119.529 li
175.637 118.188 li
177.898 115.771 li
180.158 115.046 li
182.419 112.915 li
184.68 111.659 li
186.941 109.393 li
189.202 106.631 li
191.463 106.762 li
193.724 104.931 li
195.984 103.132 li
198.245 101.654 li
200.506 100.17 li
202.767 98.5503 li
205.028 96.6377 li
207.289 95.4927 li
209.549 93.9121 li
211.811 92.2832 li
214.072 90.6382 li
216.333 89.1489 li
218.593 87.5371 li
220.854 85.8306 li
223.115 84.6465 li
225.376 82.9771 li
227.637 80.8506 li
229.898 79.5918 li
232.159 77.3638 li
234.419 76.8052 li
236.681 75.1694 li
238.942 73.9136 li
241.203 71.8496 li
243.463 70.6489 li
245.724 69.02 li
247.985 65.9126 li
250.247 65.6758 li
252.507 64.4307 li
254.767 62.5361 li
257.029 60.938 li
259.29 59.3213 li
261.55 57.8926 li
263.811 55.8438 li
266.073 54.7246 li
268.333 53.3813 li
270.593 51.9526 li
272.854 49.4131 li
275.116 48.4043 li
277.376 46.979 li
279.637 44.8862 li
281.898 43.708 li
284.159 41.9517 li
286.42 40.2705 li
288.681 38.8945 li
290.942 37.4219 li
293.203 35.5552 li
295.463 34.1118 li
297.724 32.9883 li
299.986 31.2412 li
302.247 29.3687 li
304.507 27.8682 li
306.768 26.2026 li
.884 .769 0 0 cmyk
@
30.9395 218.218 mo
33.2007 216.914 li
35.4614 215.664 li
37.7227 214.402 li
39.9829 213.17 li
42.2437 211.879 li
44.5049 210.582 li
46.7656 209.271 li
49.0264 208.035 li
51.2876 206.676 li
53.5483 205.468 li
55.8096 204.291 li
58.0698 203.03 li
60.3311 201.82 li
62.5918 200.432 li
64.853 199.039 li
67.1138 197.957 li
69.375 196.538 li
71.6357 194.969 li
73.8965 194.275 li
76.1577 192.248 li
78.418 191.634 li
80.6787 189.218 li
82.9399 188.971 li
85.2007 187.212 li
87.4619 186.378 li
89.7227 184.888 li
91.9839 184.056 li
94.2446 182.651 li
96.5059 181.529 li
98.7661 180.08 li
101.027 179.093 li
103.288 177.862 li
105.549 176.354 li
107.81 175.366 li
110.071 173.986 li
112.332 172.696 li
114.592 171.379 li
116.853 169.364 li
119.114 167.957 li
121.375 166.742 li
123.636 165.584 li
125.897 164.245 li
128.158 163.032 li
130.419 161.666 li
132.679 160.557 li
134.94 158.666 li
137.201 157.848 li
139.462 156.452 li
141.723 155.345 li
143.984 153.797 li
146.245 152.43 li
148.506 151.162 li
150.767 150.032 li
153.027 148.792 li
155.288 146.798 li
157.549 146.613 li
159.81 145.617 li
162.071 143.803 li
164.333 142.87 li
166.593 141.822 li
168.854 139.933 li
171.114 138.979 li
173.375 137.604 li
175.637 136.387 li
177.898 135.511 li
180.158 133.869 li
182.419 133.357 li
184.68 131.885 li
186.941 130.389 li
189.202 129.925 li
191.463 128.386 li
193.724 127.056 li
195.984 125.998 li
198.245 124.218 li
200.506 123.322 li
202.767 121.795 li
205.028 120.776 li
207.289 119.31 li
209.549 117.997 li
211.811 116.904 li
214.072 115.415 li
216.333 114.753 li
218.593 113.093 li
220.854 112.226 li
223.115 110.412 li
225.376 109.504 li
227.637 106.456 li
229.898 107.03 li
232.159 105.234 li
234.419 103.814 li
236.681 103.527 li
238.942 101.95 li
241.203 98.5103 li
243.463 99.8311 li
245.724 95.5908 li
247.985 95.9644 li
250.247 95.9395 li
252.507 94.0171 li
254.767 92.8667 li
257.029 91.5269 li
259.29 89.6235 li
261.55 89.3579 li
263.811 88.4048 li
266.073 86.6572 li
268.333 85.6123 li
270.593 83.6958 li
272.854 83.0444 li
275.116 81.77 li
277.376 80.3228 li
279.637 78.7124 li
281.898 77.416 li
284.159 76.2441 li
286.42 75.5952 li
288.681 73.7563 li
290.942 72.9946 li
293.203 70.7759 li
295.463 70.7261 li
297.724 69.5874 li
299.986 68.314 li
302.247 65.832 li
304.507 65.5327 li
306.768 64.1421 li
0 .994 1 0 cmyk
@
30.9395 219.402 mo
33.2007 219.344 li
35.4614 219.276 li
37.7227 219.207 li
39.9829 219.139 li
42.2437 219.07 li
44.5049 219 li
46.7656 218.93 li
49.0264 218.862 li
51.2876 218.795 li
53.5483 218.727 li
55.8096 218.652 li
58.0698 218.584 li
60.3311 218.516 li
62.5918 218.449 li
64.853 218.381 li
67.1138 218.313 li
69.375 218.248 li
71.6357 218.172 li
73.8965 218.107 li
76.1577 218.039 li
78.418 217.967 li
80.6787 217.893 li
82.9399 217.831 li
85.2007 217.696 li
87.4619 217.696 li
89.7227 217.621 li
91.9839 217.563 li
94.2446 217.492 li
96.5059 217.428 li
98.7661 217.295 li
101.027 217.07 li
103.288 217.224 li
105.549 217.162 li
107.81 217.088 li
110.071 216.918 li
112.332 216.891 li
114.592 216.73 li
116.853 216.631 li
119.114 216.709 li
121.375 216.668 li
123.636 216.601 li
125.897 216.542 li
128.158 216.467 li
130.419 216.258 li
132.679 216.193 li
134.94 216.27 li
137.201 216.189 li
139.462 216.122 li
141.723 215.998 li
143.984 215.975 li
146.245 215.919 li
148.506 215.789 li
150.767 215.789 li
153.027 214.974 li
155.288 215.656 li
157.549 215.588 li
159.81 215.523 li
162.071 215.439 li
164.333 215.378 li
166.593 215.32 li
168.854 215.242 li
171.114 215.185 li
173.375 214.989 li
175.637 215.041 li
177.898 214.793 li
180.158 214.909 li
182.419 214.842 li
184.68 214.777 li
186.941 214.653 li
189.202 214.631 li
191.463 214.566 li
193.724 214.502 li
195.984 214.432 li
198.245 214.369 li
200.506 214.289 li
202.767 214.221 li
205.028 214.163 li
207.289 214.086 li
209.549 213.762 li
211.811 213.83 li
214.072 213.891 li
216.333 213.826 li
218.593 213.75 li
220.854 213.658 li
223.115 213.625 li
225.376 213.558 li
227.637 213.406 li
229.898 213.422 li
232.159 213.344 li
234.419 213.145 li
236.681 213.213 li
238.942 213.141 li
241.203 213.08 li
243.463 213.012 li
245.724 212.854 li
247.985 212.87 li
250.247 212.811 li
252.507 212.737 li
254.767 212.662 li
257.029 212.607 li
259.29 212.472 li
261.55 212.466 li
263.811 212.4 li
266.073 212.278 li
268.333 212.206 li
270.593 212.188 li
272.854 212.045 li
275.116 212.052 li
277.376 211.797 li
279.637 211.916 li
281.898 211.842 li
284.159 211.574 li
286.42 211.648 li
288.681 211.651 li
290.942 211.426 li
293.203 211.447 li
295.463 211.438 li
297.724 211.361 li
299.986 211.209 li
302.247 211.229 li
304.507 211.16 li
306.768 211.098 li
0 0 0 1 cmyk
@
grestore
28.6787 219.494 mo
28.6787 216.994 li
28.6787 219.494 li
cp
0 0 0 1 cmyk
f
.3125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
28.6787 219.494 mo
28.6787 216.994 li
@
28.6787 5.99512 mo
28.6787 3.49512 li
28.6787 5.99512 li
cp
f
28.6787 3.49463 mo
28.6787 5.99463 li
@
29.1738 222.718 mo
28.7915 222.718 28.5063 222.905 28.3115 223.28 cv
28.1167 223.655 28.0264 224.218 28.0264 224.968 cv
28.0264 225.718 28.1167 226.28 28.3115 226.655 cv
28.5063 227.03 28.7915 227.218 29.1738 227.218 cv
29.5566 227.218 29.8413 227.03 30.0366 226.655 cv
30.2241 226.28 30.3213 225.718 30.3213 224.968 cv
30.3213 224.218 30.2241 223.655 30.0366 223.28 cv
29.8413 222.905 29.5566 222.718 29.1738 222.718 cv
29.1738 222.133 mo
29.7813 222.133 30.2466 222.381 30.5767 222.86 cv
30.8989 223.348 31.064 224.053 31.064 224.968 cv
31.064 225.891 30.8989 226.596 30.5767 227.075 cv
30.2466 227.555 29.7813 227.795 29.1738 227.795 cv
28.5591 227.795 28.0864 227.555 27.7642 227.075 cv
27.4414 226.596 27.2842 225.891 27.2842 224.968 cv
27.2842 224.053 27.4414 223.348 27.7642 222.86 cv
28.0864 222.381 28.5591 222.133 29.1738 222.133 cv
f
73.8965 219.494 mo
73.8965 216.994 li
f
73.8965 219.494 mo
73.8965 216.994 li
@
73.8965 3.49463 mo
73.8965 5.99463 li
f
73.8965 3.49463 mo
73.8965 5.99463 li
@
61.5327 227.075 mo
64.1128 227.075 li
64.1128 227.697 li
60.6401 227.697 li
60.6401 227.075 li
60.9175 226.79 61.3003 226.4 61.7876 225.905 cv
62.2676 225.418 62.5752 225.104 62.7026 224.961 cv
62.9429 224.697 63.1074 224.473 63.1978 224.285 cv
63.2876 224.105 63.3403 223.918 63.3403 223.738 cv
63.3403 223.453 63.2354 223.213 63.0327 223.033 cv
62.8301 222.853 62.5679 222.756 62.2378 222.756 cv
62.0054 222.756 61.7578 222.801 61.5024 222.875 cv
61.2476 222.957 60.9702 223.078 60.6777 223.242 cv
60.6777 222.492 li
60.9775 222.373 61.2554 222.283 61.5103 222.223 cv
61.7651 222.164 62.0054 222.133 62.2227 222.133 cv
62.7852 222.133 63.2354 222.275 63.5728 222.561 cv
63.9102 222.846 64.0825 223.221 64.0825 223.693 cv
64.0825 223.918 64.0376 224.135 63.9551 224.33 cv
63.8726 224.533 63.7227 224.773 63.4976 225.043 cv
63.4375 225.117 63.2427 225.32 62.9126 225.658 cv
62.5825 225.995 62.125 226.468 61.5327 227.075 cv
f
67.2476 222.718 mo
66.8652 222.718 66.5801 222.905 66.3853 223.28 cv
66.1899 223.655 66.1001 224.218 66.1001 224.968 cv
66.1001 225.718 66.1899 226.28 66.3853 226.655 cv
66.5801 227.03 66.8652 227.218 67.2476 227.218 cv
67.6304 227.218 67.915 227.03 68.1104 226.655 cv
68.2979 226.28 68.395 225.718 68.395 224.968 cv
68.395 224.218 68.2979 223.655 68.1104 223.28 cv
67.915 222.905 67.6304 222.718 67.2476 222.718 cv
67.2476 222.133 mo
67.855 222.133 68.3203 222.381 68.6499 222.86 cv
68.9727 223.348 69.1377 224.053 69.1377 224.968 cv
69.1377 225.891 68.9727 226.596 68.6499 227.075 cv
68.3203 227.555 67.855 227.795 67.2476 227.795 cv
66.6328 227.795 66.1602 227.555 65.8374 227.075 cv
65.5151 226.596 65.3574 225.891 65.3574 224.968 cv
65.3574 224.053 65.5151 223.348 65.8374 222.86 cv
66.1602 222.381 66.6328 222.133 67.2476 222.133 cv
f
72.0181 222.718 mo
71.6353 222.718 71.3506 222.905 71.1553 223.28 cv
70.9604 223.655 70.8706 224.218 70.8706 224.968 cv
70.8706 225.718 70.9604 226.28 71.1553 226.655 cv
71.3506 227.03 71.6353 227.218 72.0181 227.218 cv
72.4004 227.218 72.6855 227.03 72.8804 226.655 cv
73.0679 226.28 73.1655 225.718 73.1655 224.968 cv
73.1655 224.218 73.0679 223.655 72.8804 223.28 cv
72.6855 222.905 72.4004 222.718 72.0181 222.718 cv
72.0181 222.133 mo
72.6255 222.133 73.0903 222.381 73.4204 222.86 cv
73.7427 223.348 73.9077 224.053 73.9077 224.968 cv
73.9077 225.891 73.7427 226.596 73.4204 227.075 cv
73.0903 227.555 72.6255 227.795 72.0181 227.795 cv
71.4028 227.795 70.9302 227.555 70.6079 227.075 cv
70.2856 226.596 70.1279 225.891 70.1279 224.968 cv
70.1279 224.053 70.2856 223.348 70.6079 222.86 cv
70.9302 222.381 71.4028 222.133 72.0181 222.133 cv
f
76.7876 222.718 mo
76.4053 222.718 76.1201 222.905 75.9253 223.28 cv
75.7305 223.655 75.6401 224.218 75.6401 224.968 cv
75.6401 225.718 75.7305 226.28 75.9253 226.655 cv
76.1201 227.03 76.4053 227.218 76.7876 227.218 cv
77.1704 227.218 77.4551 227.03 77.6504 226.655 cv
77.8379 226.28 77.9351 225.718 77.9351 224.968 cv
77.9351 224.218 77.8379 223.655 77.6504 223.28 cv
77.4551 222.905 77.1704 222.718 76.7876 222.718 cv
76.7876 222.133 mo
77.395 222.133 77.8604 222.381 78.1904 222.86 cv
78.5127 223.348 78.6777 224.053 78.6777 224.968 cv
78.6777 225.891 78.5127 226.596 78.1904 227.075 cv
77.8604 227.555 77.395 227.795 76.7876 227.795 cv
76.1729 227.795 75.7002 227.555 75.3779 227.075 cv
75.0552 226.596 74.8979 225.891 74.8979 224.968 cv
74.8979 224.053 75.0552 223.348 75.3779 222.86 cv
75.7002 222.381 76.1729 222.133 76.7876 222.133 cv
f
81.5576 222.718 mo
81.1753 222.718 80.8901 222.905 80.6953 223.28 cv
80.5 223.655 80.4102 224.218 80.4102 224.968 cv
80.4102 225.718 80.5 226.28 80.6953 226.655 cv
80.8901 227.03 81.1753 227.218 81.5576 227.218 cv
81.9399 227.218 82.2251 227.03 82.4199 226.655 cv
82.6074 226.28 82.7051 225.718 82.7051 224.968 cv
82.7051 224.218 82.6074 223.655 82.4199 223.28 cv
82.2251 222.905 81.9399 222.718 81.5576 222.718 cv
81.5576 222.133 mo
82.165 222.133 82.6304 222.381 82.96 222.86 cv
83.2827 223.348 83.4478 224.053 83.4478 224.968 cv
83.4478 225.891 83.2827 226.596 82.96 227.075 cv
82.6304 227.555 82.165 227.795 81.5576 227.795 cv
80.9429 227.795 80.4702 227.555 80.1475 227.075 cv
79.8252 226.596 79.6675 225.891 79.6675 224.968 cv
79.6675 224.053 79.8252 223.348 80.1475 222.86 cv
80.4702 222.381 80.9429 222.133 81.5576 222.133 cv
f
86.3281 222.718 mo
85.9453 222.718 85.6606 222.905 85.4653 223.28 cv
85.2705 223.655 85.1802 224.218 85.1802 224.968 cv
85.1802 225.718 85.2705 226.28 85.4653 226.655 cv
85.6606 227.03 85.9453 227.218 86.3281 227.218 cv
86.7104 227.218 86.9956 227.03 87.1904 226.655 cv
87.3779 226.28 87.4756 225.718 87.4756 224.968 cv
87.4756 224.218 87.3779 223.655 87.1904 223.28 cv
86.9956 222.905 86.7104 222.718 86.3281 222.718 cv
86.3281 222.133 mo
86.9355 222.133 87.4004 222.381 87.7305 222.86 cv
88.0527 223.348 88.2178 224.053 88.2178 224.968 cv
88.2178 225.891 88.0527 226.596 87.7305 227.075 cv
87.4004 227.555 86.9355 227.795 86.3281 227.795 cv
85.7129 227.795 85.2402 227.555 84.918 227.075 cv
84.5952 226.596 84.438 225.891 84.438 224.968 cv
84.438 224.053 84.5952 223.348 84.918 222.86 cv
85.2402 222.381 85.7129 222.133 86.3281 222.133 cv
f
119.114 219.494 mo
119.114 216.994 li
f
119.114 219.494 mo
119.114 216.994 li
@
119.114 3.49463 mo
119.114 5.99463 li
f
119.114 3.49463 mo
119.114 5.99463 li
@
108.058 222.875 mo
106.19 225.793 li
108.058 225.793 li
108.058 222.875 li
107.863 222.23 mo
108.792 222.23 li
108.792 225.793 li
109.573 225.793 li
109.573 226.408 li
108.792 226.408 li
108.792 227.697 li
108.058 227.697 li
108.058 226.408 li
105.59 226.408 li
105.59 225.695 li
107.863 222.23 li
cp
f
112.378 222.718 mo
111.995 222.718 111.71 222.905 111.515 223.28 cv
111.32 223.655 111.23 224.218 111.23 224.968 cv
111.23 225.718 111.32 226.28 111.515 226.655 cv
111.71 227.03 111.995 227.218 112.378 227.218 cv
112.76 227.218 113.045 227.03 113.24 226.655 cv
113.428 226.28 113.525 225.718 113.525 224.968 cv
113.525 224.218 113.428 223.655 113.24 223.28 cv
113.045 222.905 112.76 222.718 112.378 222.718 cv
112.378 222.133 mo
112.985 222.133 113.45 222.381 113.78 222.86 cv
114.103 223.348 114.268 224.053 114.268 224.968 cv
114.268 225.891 114.103 226.596 113.78 227.075 cv
113.45 227.555 112.985 227.795 112.378 227.795 cv
111.763 227.795 111.29 227.555 110.968 227.075 cv
110.645 226.596 110.488 225.891 110.488 224.968 cv
110.488 224.053 110.645 223.348 110.968 222.86 cv
111.29 222.381 111.763 222.133 112.378 222.133 cv
f
117.147 222.718 mo
116.765 222.718 116.48 222.905 116.285 223.28 cv
116.09 223.655 116 224.218 116 224.968 cv
116 225.718 116.09 226.28 116.285 226.655 cv
116.48 227.03 116.765 227.218 117.147 227.218 cv
117.53 227.218 117.815 227.03 118.01 226.655 cv
118.198 226.28 118.295 225.718 118.295 224.968 cv
118.295 224.218 118.198 223.655 118.01 223.28 cv
117.815 222.905 117.53 222.718 117.147 222.718 cv
117.147 222.133 mo
117.755 222.133 118.22 222.381 118.55 222.86 cv
118.873 223.348 119.038 224.053 119.038 224.968 cv
119.038 225.891 118.873 226.596 118.55 227.075 cv
118.22 227.555 117.755 227.795 117.147 227.795 cv
116.533 227.795 116.06 227.555 115.738 227.075 cv
115.415 226.596 115.258 225.891 115.258 224.968 cv
115.258 224.053 115.415 223.348 115.738 222.86 cv
116.06 222.381 116.533 222.133 117.147 222.133 cv
f
121.918 222.718 mo
121.535 222.718 121.25 222.905 121.055 223.28 cv
120.86 223.655 120.77 224.218 120.77 224.968 cv
120.77 225.718 120.86 226.28 121.055 226.655 cv
121.25 227.03 121.535 227.218 121.918 227.218 cv
122.3 227.218 122.585 227.03 122.78 226.655 cv
122.968 226.28 123.065 225.718 123.065 224.968 cv
123.065 224.218 122.968 223.655 122.78 223.28 cv
122.585 222.905 122.3 222.718 121.918 222.718 cv
121.918 222.133 mo
122.525 222.133 122.99 222.381 123.32 222.86 cv
123.643 223.348 123.808 224.053 123.808 224.968 cv
123.808 225.891 123.643 226.596 123.32 227.075 cv
122.99 227.555 122.525 227.795 121.918 227.795 cv
121.303 227.795 120.83 227.555 120.508 227.075 cv
120.185 226.596 120.028 225.891 120.028 224.968 cv
120.028 224.053 120.185 223.348 120.508 222.86 cv
120.83 222.381 121.303 222.133 121.918 222.133 cv
f
126.688 222.718 mo
126.305 222.718 126.02 222.905 125.825 223.28 cv
125.63 223.655 125.54 224.218 125.54 224.968 cv
125.54 225.718 125.63 226.28 125.825 226.655 cv
126.02 227.03 126.305 227.218 126.688 227.218 cv
127.07 227.218 127.355 227.03 127.55 226.655 cv
127.738 226.28 127.835 225.718 127.835 224.968 cv
127.835 224.218 127.738 223.655 127.55 223.28 cv
127.355 222.905 127.07 222.718 126.688 222.718 cv
126.688 222.133 mo
127.295 222.133 127.76 222.381 128.09 222.86 cv
128.413 223.348 128.578 224.053 128.578 224.968 cv
128.578 225.891 128.413 226.596 128.09 227.075 cv
127.76 227.555 127.295 227.795 126.688 227.795 cv
126.073 227.795 125.6 227.555 125.278 227.075 cv
124.955 226.596 124.798 225.891 124.798 224.968 cv
124.798 224.053 124.955 223.348 125.278 222.86 cv
125.6 222.381 126.073 222.133 126.688 222.133 cv
f
131.458 222.718 mo
131.075 222.718 130.79 222.905 130.595 223.28 cv
130.4 223.655 130.31 224.218 130.31 224.968 cv
130.31 225.718 130.4 226.28 130.595 226.655 cv
130.79 227.03 131.075 227.218 131.458 227.218 cv
131.84 227.218 132.125 227.03 132.32 226.655 cv
132.507 226.28 132.605 225.718 132.605 224.968 cv
132.605 224.218 132.507 223.655 132.32 223.28 cv
132.125 222.905 131.84 222.718 131.458 222.718 cv
131.458 222.133 mo
132.065 222.133 132.53 222.381 132.86 222.86 cv
133.183 223.348 133.348 224.053 133.348 224.968 cv
133.348 225.891 133.183 226.596 132.86 227.075 cv
132.53 227.555 132.065 227.795 131.458 227.795 cv
130.843 227.795 130.37 227.555 130.047 227.075 cv
129.725 226.596 129.567 225.891 129.567 224.968 cv
129.567 224.053 129.725 223.348 130.047 222.86 cv
130.37 222.381 130.843 222.133 131.458 222.133 cv
f
164.333 219.494 mo
164.333 216.994 li
f
164.333 219.494 mo
164.333 216.994 li
@
164.333 3.49463 mo
164.333 5.99463 li
f
164.333 3.49463 mo
164.333 5.99463 li
@
152.994 224.668 mo
152.664 224.668 152.401 224.787 152.206 225.014 cv
152.011 225.238 151.914 225.553 151.914 225.943 cv
151.914 226.34 152.011 226.655 152.206 226.881 cv
152.401 227.105 152.664 227.218 152.994 227.218 cv
153.324 227.218 153.586 227.105 153.781 226.881 cv
153.976 226.655 154.074 226.34 154.074 225.943 cv
154.074 225.553 153.976 225.238 153.781 225.014 cv
153.586 224.787 153.324 224.668 152.994 224.668 cv
154.463 222.351 mo
154.463 223.025 li
154.276 222.936 154.088 222.868 153.901 222.822 cv
153.706 222.777 153.519 222.755 153.338 222.755 cv
152.843 222.755 152.468 222.92 152.213 223.25 cv
151.958 223.58 151.809 224.082 151.778 224.743 cv
151.921 224.533 152.101 224.368 152.318 224.256 cv
152.536 224.143 152.776 224.082 153.039 224.082 cv
153.586 224.082 154.021 224.256 154.336 224.586 cv
154.651 224.916 154.816 225.373 154.816 225.943 cv
154.816 226.505 154.644 226.955 154.313 227.293 cv
153.983 227.631 153.541 227.795 152.994 227.795 cv
152.364 227.795 151.876 227.556 151.546 227.076 cv
151.208 226.596 151.043 225.891 151.043 224.967 cv
151.043 224.105 151.246 223.416 151.659 222.905 cv
152.063 222.396 152.619 222.133 153.309 222.133 cv
153.489 222.133 153.676 222.154 153.871 222.186 cv
154.059 222.223 154.253 222.275 154.463 222.351 cv
f
157.674 222.718 mo
157.291 222.718 157.006 222.905 156.811 223.28 cv
156.616 223.655 156.526 224.218 156.526 224.968 cv
156.526 225.718 156.616 226.28 156.811 226.655 cv
157.006 227.03 157.291 227.218 157.674 227.218 cv
158.056 227.218 158.341 227.03 158.536 226.655 cv
158.724 226.28 158.821 225.718 158.821 224.968 cv
158.821 224.218 158.724 223.655 158.536 223.28 cv
158.341 222.905 158.056 222.718 157.674 222.718 cv
157.674 222.133 mo
158.281 222.133 158.746 222.381 159.076 222.86 cv
159.399 223.348 159.563 224.053 159.563 224.968 cv
159.563 225.891 159.399 226.596 159.076 227.075 cv
158.746 227.555 158.281 227.795 157.674 227.795 cv
157.059 227.795 156.586 227.555 156.264 227.075 cv
155.941 226.596 155.784 225.891 155.784 224.968 cv
155.784 224.053 155.941 223.348 156.264 222.86 cv
156.586 222.381 157.059 222.133 157.674 222.133 cv
f
162.444 222.718 mo
162.061 222.718 161.776 222.905 161.581 223.28 cv
161.386 223.655 161.296 224.218 161.296 224.968 cv
161.296 225.718 161.386 226.28 161.581 226.655 cv
161.776 227.03 162.061 227.218 162.444 227.218 cv
162.826 227.218 163.111 227.03 163.306 226.655 cv
163.494 226.28 163.591 225.718 163.591 224.968 cv
163.591 224.218 163.494 223.655 163.306 223.28 cv
163.111 222.905 162.826 222.718 162.444 222.718 cv
162.444 222.133 mo
163.051 222.133 163.516 222.381 163.846 222.86 cv
164.168 223.348 164.333 224.053 164.333 224.968 cv
164.333 225.891 164.168 226.596 163.846 227.075 cv
163.516 227.555 163.051 227.795 162.444 227.795 cv
161.829 227.795 161.356 227.555 161.034 227.075 cv
160.711 226.596 160.554 225.891 160.554 224.968 cv
160.554 224.053 160.711 223.348 161.034 222.86 cv
161.356 222.381 161.829 222.133 162.444 222.133 cv
f
167.214 222.718 mo
166.832 222.718 166.546 222.905 166.352 223.28 cv
166.156 223.655 166.066 224.218 166.066 224.968 cv
166.066 225.718 166.156 226.28 166.352 226.655 cv
166.546 227.03 166.832 227.218 167.214 227.218 cv
167.596 227.218 167.881 227.03 168.076 226.655 cv
168.264 226.28 168.361 225.718 168.361 224.968 cv
168.361 224.218 168.264 223.655 168.076 223.28 cv
167.881 222.905 167.596 222.718 167.214 222.718 cv
167.214 222.133 mo
167.821 222.133 168.286 222.381 168.616 222.86 cv
168.939 223.348 169.103 224.053 169.103 224.968 cv
169.103 225.891 168.939 226.596 168.616 227.075 cv
168.286 227.555 167.821 227.795 167.214 227.795 cv
166.599 227.795 166.126 227.555 165.804 227.075 cv
165.481 226.596 165.324 225.891 165.324 224.968 cv
165.324 224.053 165.481 223.348 165.804 222.86 cv
166.126 222.381 166.599 222.133 167.214 222.133 cv
f
171.984 222.718 mo
171.601 222.718 171.316 222.905 171.121 223.28 cv
170.926 223.655 170.836 224.218 170.836 224.968 cv
170.836 225.718 170.926 226.28 171.121 226.655 cv
171.316 227.03 171.601 227.218 171.984 227.218 cv
172.367 227.218 172.651 227.03 172.846 226.655 cv
173.034 226.28 173.131 225.718 173.131 224.968 cv
173.131 224.218 173.034 223.655 172.846 223.28 cv
172.651 222.905 172.367 222.718 171.984 222.718 cv
171.984 222.133 mo
172.591 222.133 173.056 222.381 173.386 222.86 cv
173.708 223.348 173.874 224.053 173.874 224.968 cv
173.874 225.891 173.708 226.596 173.386 227.075 cv
173.056 227.555 172.591 227.795 171.984 227.795 cv
171.369 227.795 170.896 227.555 170.574 227.075 cv
170.251 226.596 170.094 225.891 170.094 224.968 cv
170.094 224.053 170.251 223.348 170.574 222.86 cv
170.896 222.381 171.369 222.133 171.984 222.133 cv
f
176.753 222.718 mo
176.371 222.718 176.086 222.905 175.891 223.28 cv
175.697 223.655 175.606 224.218 175.606 224.968 cv
175.606 225.718 175.697 226.28 175.891 226.655 cv
176.086 227.03 176.371 227.218 176.753 227.218 cv
177.136 227.218 177.421 227.03 177.616 226.655 cv
177.803 226.28 177.901 225.718 177.901 224.968 cv
177.901 224.218 177.803 223.655 177.616 223.28 cv
177.421 222.905 177.136 222.718 176.753 222.718 cv
176.753 222.133 mo
177.361 222.133 177.826 222.381 178.156 222.86 cv
178.479 223.348 178.644 224.053 178.644 224.968 cv
178.644 225.891 178.479 226.596 178.156 227.075 cv
177.826 227.555 177.361 227.795 176.753 227.795 cv
176.138 227.795 175.667 227.555 175.343 227.075 cv
175.022 226.596 174.864 225.891 174.864 224.968 cv
174.864 224.053 175.022 223.348 175.343 222.86 cv
175.667 222.381 176.138 222.133 176.753 222.133 cv
f
209.549 219.494 mo
209.549 216.994 li
f
209.549 219.494 mo
209.549 216.994 li
@
209.549 3.49463 mo
209.549 5.99463 li
f
209.549 3.49463 mo
209.549 5.99463 li
@
198.112 225.104 mo
197.759 225.104 197.482 225.2 197.279 225.388 cv
197.077 225.576 196.979 225.83 196.979 226.16 cv
196.979 226.49 197.077 226.753 197.279 226.939 cv
197.482 227.127 197.759 227.219 198.112 227.219 cv
198.457 227.219 198.734 227.127 198.937 226.934 cv
199.139 226.746 199.244 226.49 199.244 226.16 cv
199.244 225.83 199.139 225.576 198.944 225.388 cv
198.742 225.2 198.464 225.104 198.112 225.104 cv
197.369 224.787 mo
197.054 224.713 196.806 224.563 196.626 224.346 cv
196.447 224.127 196.364 223.865 196.364 223.551 cv
196.364 223.115 196.514 222.771 196.83 222.516 cv
197.136 222.26 197.564 222.133 198.112 222.133 cv
198.652 222.133 199.08 222.26 199.394 222.516 cv
199.702 222.771 199.859 223.115 199.859 223.551 cv
199.859 223.865 199.769 224.127 199.589 224.346 cv
199.409 224.563 199.169 224.713 198.854 224.787 cv
199.207 224.871 199.484 225.035 199.687 225.275 cv
199.881 225.516 199.987 225.815 199.987 226.16 cv
199.987 226.693 199.822 227.098 199.5 227.375 cv
199.169 227.66 198.711 227.795 198.112 227.795 cv
197.504 227.795 197.04 227.66 196.716 227.375 cv
196.394 227.098 196.237 226.693 196.237 226.16 cv
196.237 225.815 196.334 225.516 196.537 225.275 cv
196.732 225.035 197.009 224.871 197.369 224.787 cv
197.099 223.618 mo
197.099 223.902 197.181 224.127 197.362 224.285 cv
197.542 224.442 197.79 224.518 198.112 224.518 cv
198.426 224.518 198.674 224.442 198.854 224.285 cv
199.034 224.127 199.125 223.902 199.125 223.618 cv
199.125 223.333 199.034 223.115 198.854 222.957 cv
198.674 222.8 198.426 222.719 198.112 222.719 cv
197.79 222.719 197.542 222.8 197.362 222.957 cv
197.181 223.115 197.099 223.333 197.099 223.618 cv
f
202.881 222.718 mo
202.5 222.718 202.214 222.905 202.019 223.28 cv
201.825 223.655 201.734 224.218 201.734 224.968 cv
201.734 225.718 201.825 226.28 202.019 226.655 cv
202.214 227.03 202.5 227.218 202.881 227.218 cv
203.264 227.218 203.549 227.03 203.744 226.655 cv
203.932 226.28 204.029 225.718 204.029 224.968 cv
204.029 224.218 203.932 223.655 203.744 223.28 cv
203.549 222.905 203.264 222.718 202.881 222.718 cv
202.881 222.133 mo
203.49 222.133 203.954 222.381 204.284 222.86 cv
204.607 223.348 204.772 224.053 204.772 224.968 cv
204.772 225.891 204.607 226.596 204.284 227.075 cv
203.954 227.555 203.49 227.795 202.881 227.795 cv
202.267 227.795 201.794 227.555 201.471 227.075 cv
201.15 226.596 200.992 225.891 200.992 224.968 cv
200.992 224.053 201.15 223.348 201.471 222.86 cv
201.794 222.381 202.267 222.133 202.881 222.133 cv
f
207.652 222.718 mo
207.269 222.718 206.985 222.905 206.789 223.28 cv
206.594 223.655 206.503 224.218 206.503 224.968 cv
206.503 225.718 206.594 226.28 206.789 226.655 cv
206.985 227.03 207.269 227.218 207.652 227.218 cv
208.034 227.218 208.319 227.03 208.514 226.655 cv
208.702 226.28 208.799 225.718 208.799 224.968 cv
208.799 224.218 208.702 223.655 208.514 223.28 cv
208.319 222.905 208.034 222.718 207.652 222.718 cv
207.652 222.133 mo
208.259 222.133 208.724 222.381 209.054 222.86 cv
209.377 223.348 209.542 224.053 209.542 224.968 cv
209.542 225.891 209.377 226.596 209.054 227.075 cv
208.724 227.555 208.259 227.795 207.652 227.795 cv
207.037 227.795 206.565 227.555 206.242 227.075 cv
205.919 226.596 205.762 225.891 205.762 224.968 cv
205.762 224.053 205.919 223.348 206.242 222.86 cv
206.565 222.381 207.037 222.133 207.652 222.133 cv
f
212.422 222.718 mo
212.04 222.718 211.754 222.905 211.559 223.28 cv
211.365 223.655 211.275 224.218 211.275 224.968 cv
211.275 225.718 211.365 226.28 211.559 226.655 cv
211.754 227.03 212.04 227.218 212.422 227.218 cv
212.804 227.218 213.088 227.03 213.285 226.655 cv
213.472 226.28 213.57 225.718 213.57 224.968 cv
213.57 224.218 213.472 223.655 213.285 223.28 cv
213.088 222.905 212.804 222.718 212.422 222.718 cv
212.422 222.133 mo
213.03 222.133 213.495 222.381 213.824 222.86 cv
214.147 223.348 214.311 224.053 214.311 224.968 cv
214.311 225.891 214.147 226.596 213.824 227.075 cv
213.495 227.555 213.03 227.795 212.422 227.795 cv
211.807 227.795 211.334 227.555 211.011 227.075 cv
210.689 226.596 210.532 225.891 210.532 224.968 cv
210.532 224.053 210.689 223.348 211.011 222.86 cv
211.334 222.381 211.807 222.133 212.422 222.133 cv
f
217.192 222.718 mo
216.809 222.718 216.524 222.905 216.33 223.28 cv
216.134 223.655 216.044 224.218 216.044 224.968 cv
216.044 225.718 216.134 226.28 216.33 226.655 cv
216.524 227.03 216.809 227.218 217.192 227.218 cv
217.574 227.218 217.859 227.03 218.054 226.655 cv
218.242 226.28 218.339 225.718 218.339 224.968 cv
218.339 224.218 218.242 223.655 218.054 223.28 cv
217.859 222.905 217.574 222.718 217.192 222.718 cv
217.192 222.133 mo
217.799 222.133 218.264 222.381 218.594 222.86 cv
218.917 223.348 219.082 224.053 219.082 224.968 cv
219.082 225.891 218.917 226.596 218.594 227.075 cv
218.264 227.555 217.799 227.795 217.192 227.795 cv
216.577 227.795 216.104 227.555 215.782 227.075 cv
215.459 226.596 215.302 225.891 215.302 224.968 cv
215.302 224.053 215.459 223.348 215.782 222.86 cv
216.104 222.381 216.577 222.133 217.192 222.133 cv
f
221.961 222.718 mo
221.58 222.718 221.294 222.905 221.099 223.28 cv
220.904 223.655 220.814 224.218 220.814 224.968 cv
220.814 225.718 220.904 226.28 221.099 226.655 cv
221.294 227.03 221.58 227.218 221.961 227.218 cv
222.344 227.218 222.629 227.03 222.824 226.655 cv
223.011 226.28 223.109 225.718 223.109 224.968 cv
223.109 224.218 223.011 223.655 222.824 223.28 cv
222.629 222.905 222.344 222.718 221.961 222.718 cv
221.961 222.133 mo
222.569 222.133 223.035 222.381 223.364 222.86 cv
223.687 223.348 223.852 224.053 223.852 224.968 cv
223.852 225.891 223.687 226.596 223.364 227.075 cv
223.035 227.555 222.569 227.795 221.961 227.795 cv
221.347 227.795 220.875 227.555 220.551 227.075 cv
220.229 226.596 220.072 225.891 220.072 224.968 cv
220.072 224.053 220.229 223.348 220.551 222.86 cv
220.875 222.381 221.347 222.133 221.961 222.133 cv
f
254.767 219.494 mo
254.767 216.994 li
f
254.767 219.494 mo
254.767 216.994 li
@
254.767 3.49463 mo
254.767 5.99463 li
f
254.767 3.49463 mo
254.767 5.99463 li
@
239.643 227.075 mo
240.85 227.075 li
240.85 222.905 li
239.538 223.168 li
239.538 222.492 li
240.843 222.23 li
241.585 222.23 li
241.585 227.075 li
242.793 227.075 li
242.793 227.697 li
239.643 227.697 li
239.643 227.075 li
cp
f
245.868 222.718 mo
245.486 222.718 245.201 222.905 245.005 223.28 cv
244.81 223.655 244.72 224.218 244.72 224.968 cv
244.72 225.718 244.81 226.28 245.005 226.655 cv
245.201 227.03 245.486 227.218 245.868 227.218 cv
246.25 227.218 246.536 227.03 246.73 226.655 cv
246.917 226.28 247.015 225.718 247.015 224.968 cv
247.015 224.218 246.917 223.655 246.73 223.28 cv
246.536 222.905 246.25 222.718 245.868 222.718 cv
245.868 222.133 mo
246.475 222.133 246.941 222.381 247.27 222.86 cv
247.593 223.348 247.758 224.053 247.758 224.968 cv
247.758 225.891 247.593 226.596 247.27 227.075 cv
246.941 227.555 246.475 227.795 245.868 227.795 cv
245.253 227.795 244.781 227.555 244.458 227.075 cv
244.136 226.596 243.978 225.891 243.978 224.968 cv
243.978 224.053 244.136 223.348 244.458 222.86 cv
244.781 222.381 245.253 222.133 245.868 222.133 cv
f
250.638 222.718 mo
250.256 222.718 249.971 222.905 249.775 223.28 cv
249.581 223.655 249.491 224.218 249.491 224.968 cv
249.491 225.718 249.581 226.28 249.775 226.655 cv
249.971 227.03 250.256 227.218 250.638 227.218 cv
251.02 227.218 251.305 227.03 251.5 226.655 cv
251.689 226.28 251.786 225.718 251.786 224.968 cv
251.786 224.218 251.689 223.655 251.5 223.28 cv
251.305 222.905 251.02 222.718 250.638 222.718 cv
250.638 222.133 mo
251.246 222.133 251.71 222.381 252.041 222.86 cv
252.363 223.348 252.528 224.053 252.528 224.968 cv
252.528 225.891 252.363 226.596 252.041 227.075 cv
251.71 227.555 251.246 227.795 250.638 227.795 cv
250.024 227.795 249.55 227.555 249.228 227.075 cv
248.906 226.596 248.749 225.891 248.749 224.968 cv
248.749 224.053 248.906 223.348 249.228 222.86 cv
249.55 222.381 250.024 222.133 250.638 222.133 cv
f
255.408 222.718 mo
255.026 222.718 254.741 222.905 254.545 223.28 cv
254.351 223.655 254.26 224.218 254.26 224.968 cv
254.26 225.718 254.351 226.28 254.545 226.655 cv
254.741 227.03 255.026 227.218 255.408 227.218 cv
255.791 227.218 256.076 227.03 256.271 226.655 cv
256.458 226.28 256.556 225.718 256.556 224.968 cv
256.556 224.218 256.458 223.655 256.271 223.28 cv
256.076 222.905 255.791 222.718 255.408 222.718 cv
255.408 222.133 mo
256.016 222.133 256.481 222.381 256.81 222.86 cv
257.133 223.348 257.297 224.053 257.297 224.968 cv
257.297 225.891 257.133 226.596 256.81 227.075 cv
256.481 227.555 256.016 227.795 255.408 227.795 cv
254.793 227.795 254.321 227.555 253.998 227.075 cv
253.676 226.596 253.518 225.891 253.518 224.968 cv
253.518 224.053 253.676 223.348 253.998 222.86 cv
254.321 222.381 254.793 222.133 255.408 222.133 cv
f
260.178 222.718 mo
259.795 222.718 259.511 222.905 259.316 223.28 cv
259.121 223.655 259.031 224.218 259.031 224.968 cv
259.031 225.718 259.121 226.28 259.316 226.655 cv
259.511 227.03 259.795 227.218 260.178 227.218 cv
260.56 227.218 260.845 227.03 261.041 226.655 cv
261.228 226.28 261.326 225.718 261.326 224.968 cv
261.326 224.218 261.228 223.655 261.041 223.28 cv
260.845 222.905 260.56 222.718 260.178 222.718 cv
260.178 222.133 mo
260.786 222.133 261.25 222.381 261.581 222.86 cv
261.903 223.348 262.068 224.053 262.068 224.968 cv
262.068 225.891 261.903 226.596 261.581 227.075 cv
261.25 227.555 260.786 227.795 260.178 227.795 cv
259.563 227.795 259.09 227.555 258.768 227.075 cv
258.446 226.596 258.289 225.891 258.289 224.968 cv
258.289 224.053 258.446 223.348 258.768 222.86 cv
259.09 222.381 259.563 222.133 260.178 222.133 cv
f
264.948 222.718 mo
264.566 222.718 264.281 222.905 264.085 223.28 cv
263.891 223.655 263.8 224.218 263.8 224.968 cv
263.8 225.718 263.891 226.28 264.085 226.655 cv
264.281 227.03 264.566 227.218 264.948 227.218 cv
265.331 227.218 265.615 227.03 265.811 226.655 cv
265.999 226.28 266.095 225.718 266.095 224.968 cv
266.095 224.218 265.999 223.655 265.811 223.28 cv
265.615 222.905 265.331 222.718 264.948 222.718 cv
264.948 222.133 mo
265.556 222.133 266.021 222.381 266.351 222.86 cv
266.673 223.348 266.837 224.053 266.837 224.968 cv
266.837 225.891 266.673 226.596 266.351 227.075 cv
266.021 227.555 265.556 227.795 264.948 227.795 cv
264.333 227.795 263.861 227.555 263.539 227.075 cv
263.215 226.596 263.058 225.891 263.058 224.968 cv
263.058 224.053 263.215 223.348 263.539 222.86 cv
263.861 222.381 264.333 222.133 264.948 222.133 cv
f
269.718 222.718 mo
269.335 222.718 269.05 222.905 268.856 223.28 cv
268.661 223.655 268.571 224.218 268.571 224.968 cv
268.571 225.718 268.661 226.28 268.856 226.655 cv
269.05 227.03 269.335 227.218 269.718 227.218 cv
270.101 227.218 270.385 227.03 270.581 226.655 cv
270.768 226.28 270.866 225.718 270.866 224.968 cv
270.866 224.218 270.768 223.655 270.581 223.28 cv
270.385 222.905 270.101 222.718 269.718 222.718 cv
269.718 222.133 mo
270.326 222.133 270.791 222.381 271.121 222.86 cv
271.443 223.348 271.608 224.053 271.608 224.968 cv
271.608 225.891 271.443 226.596 271.121 227.075 cv
270.791 227.555 270.326 227.795 269.718 227.795 cv
269.103 227.795 268.63 227.555 268.308 227.075 cv
267.986 226.596 267.828 225.891 267.828 224.968 cv
267.828 224.053 267.986 223.348 268.308 222.86 cv
268.63 222.381 269.103 222.133 269.718 222.133 cv
f
299.986 219.494 mo
299.986 216.994 li
f
299.986 219.494 mo
299.986 216.994 li
@
299.986 3.49463 mo
299.986 5.99463 li
f
299.986 3.49463 mo
299.986 5.99463 li
@
284.861 227.075 mo
286.069 227.075 li
286.069 222.905 li
284.756 223.168 li
284.756 222.492 li
286.061 222.23 li
286.803 222.23 li
286.803 227.075 li
288.011 227.075 li
288.011 227.697 li
284.861 227.697 li
284.861 227.075 li
cp
f
290.141 227.075 mo
292.721 227.075 li
292.721 227.697 li
289.248 227.697 li
289.248 227.075 li
289.526 226.79 289.909 226.4 290.395 225.905 cv
290.876 225.418 291.183 225.104 291.311 224.961 cv
291.551 224.697 291.716 224.473 291.806 224.285 cv
291.896 224.105 291.949 223.918 291.949 223.738 cv
291.949 223.453 291.843 223.213 291.64 223.033 cv
291.439 222.853 291.175 222.756 290.846 222.756 cv
290.614 222.756 290.366 222.801 290.111 222.875 cv
289.856 222.957 289.579 223.078 289.286 223.242 cv
289.286 222.492 li
289.585 222.373 289.864 222.283 290.119 222.223 cv
290.374 222.164 290.614 222.133 290.831 222.133 cv
291.393 222.133 291.843 222.275 292.181 222.561 cv
292.518 222.846 292.691 223.221 292.691 223.693 cv
292.691 223.918 292.646 224.135 292.564 224.33 cv
292.481 224.533 292.331 224.773 292.106 225.043 cv
292.046 225.117 291.85 225.32 291.521 225.658 cv
291.191 225.995 290.733 226.468 290.141 227.075 cv
f
295.856 222.718 mo
295.473 222.718 295.189 222.905 294.994 223.28 cv
294.799 223.655 294.708 224.218 294.708 224.968 cv
294.708 225.718 294.799 226.28 294.994 226.655 cv
295.189 227.03 295.473 227.218 295.856 227.218 cv
296.238 227.218 296.523 227.03 296.718 226.655 cv
296.906 226.28 297.003 225.718 297.003 224.968 cv
297.003 224.218 296.906 223.655 296.718 223.28 cv
296.523 222.905 296.238 222.718 295.856 222.718 cv
295.856 222.133 mo
296.463 222.133 296.928 222.381 297.258 222.86 cv
297.581 223.348 297.746 224.053 297.746 224.968 cv
297.746 225.891 297.581 226.596 297.258 227.075 cv
296.928 227.555 296.463 227.795 295.856 227.795 cv
295.242 227.795 294.768 227.555 294.446 227.075 cv
294.124 226.596 293.966 225.891 293.966 224.968 cv
293.966 224.053 294.124 223.348 294.446 222.86 cv
294.768 222.381 295.242 222.133 295.856 222.133 cv
f
300.625 222.718 mo
300.244 222.718 299.958 222.905 299.763 223.28 cv
299.569 223.655 299.478 224.218 299.478 224.968 cv
299.478 225.718 299.569 226.28 299.763 226.655 cv
299.958 227.03 300.244 227.218 300.625 227.218 cv
301.008 227.218 301.293 227.03 301.488 226.655 cv
301.676 226.28 301.773 225.718 301.773 224.968 cv
301.773 224.218 301.676 223.655 301.488 223.28 cv
301.293 222.905 301.008 222.718 300.625 222.718 cv
300.625 222.133 mo
301.234 222.133 301.699 222.381 302.028 222.86 cv
302.351 223.348 302.516 224.053 302.516 224.968 cv
302.516 225.891 302.351 226.596 302.028 227.075 cv
301.699 227.555 301.234 227.795 300.625 227.795 cv
300.011 227.795 299.539 227.555 299.215 227.075 cv
298.894 226.596 298.736 225.891 298.736 224.968 cv
298.736 224.053 298.894 223.348 299.215 222.86 cv
299.539 222.381 300.011 222.133 300.625 222.133 cv
f
305.396 222.718 mo
305.013 222.718 304.729 222.905 304.533 223.28 cv
304.338 223.655 304.248 224.218 304.248 224.968 cv
304.248 225.718 304.338 226.28 304.533 226.655 cv
304.729 227.03 305.013 227.218 305.396 227.218 cv
305.778 227.218 306.063 227.03 306.258 226.655 cv
306.446 226.28 306.543 225.718 306.543 224.968 cv
306.543 224.218 306.446 223.655 306.258 223.28 cv
306.063 222.905 305.778 222.718 305.396 222.718 cv
305.396 222.133 mo
306.003 222.133 306.468 222.381 306.798 222.86 cv
307.121 223.348 307.286 224.053 307.286 224.968 cv
307.286 225.891 307.121 226.596 306.798 227.075 cv
306.468 227.555 306.003 227.795 305.396 227.795 cv
304.781 227.795 304.308 227.555 303.986 227.075 cv
303.664 226.596 303.506 225.891 303.506 224.968 cv
303.506 224.053 303.664 223.348 303.986 222.86 cv
304.308 222.381 304.781 222.133 305.396 222.133 cv
f
310.167 222.718 mo
309.784 222.718 309.499 222.905 309.303 223.28 cv
309.109 223.655 309.019 224.218 309.019 224.968 cv
309.019 225.718 309.109 226.28 309.303 226.655 cv
309.499 227.03 309.784 227.218 310.167 227.218 cv
310.548 227.218 310.833 227.03 311.029 226.655 cv
311.216 226.28 311.314 225.718 311.314 224.968 cv
311.314 224.218 311.216 223.655 311.029 223.28 cv
310.833 222.905 310.548 222.718 310.167 222.718 cv
310.167 222.133 mo
310.774 222.133 311.239 222.381 311.569 222.86 cv
311.891 223.348 312.055 224.053 312.055 224.968 cv
312.055 225.891 311.891 226.596 311.569 227.075 cv
311.239 227.555 310.774 227.795 310.167 227.795 cv
309.551 227.795 309.079 227.555 308.756 227.075 cv
308.433 226.596 308.276 225.891 308.276 224.968 cv
308.276 224.053 308.433 223.348 308.756 222.86 cv
309.079 222.381 309.551 222.133 310.167 222.133 cv
f
314.936 222.718 mo
314.553 222.718 314.268 222.905 314.074 223.28 cv
313.878 223.655 313.789 224.218 313.789 224.968 cv
313.789 225.718 313.878 226.28 314.074 226.655 cv
314.268 227.03 314.553 227.218 314.936 227.218 cv
315.319 227.218 315.603 227.03 315.798 226.655 cv
315.986 226.28 316.083 225.718 316.083 224.968 cv
316.083 224.218 315.986 223.655 315.798 223.28 cv
315.603 222.905 315.319 222.718 314.936 222.718 cv
314.936 222.133 mo
315.543 222.133 316.008 222.381 316.338 222.86 cv
316.661 223.348 316.826 224.053 316.826 224.968 cv
316.826 225.891 316.661 226.596 316.338 227.075 cv
316.008 227.555 315.543 227.795 314.936 227.795 cv
314.321 227.795 313.848 227.555 313.526 227.075 cv
313.204 226.596 313.046 225.891 313.046 224.968 cv
313.046 224.053 313.204 223.348 313.526 222.86 cv
313.848 222.381 314.321 222.133 314.936 222.133 cv
f
148.664 235.613 mo
148.664 238.088 li
147.988 238.088 li
147.988 235.636 li
147.988 235.246 147.906 234.961 147.756 234.767 cv
147.606 234.57 147.381 234.473 147.081 234.473 cv
146.713 234.473 146.428 234.594 146.218 234.826 cv
146.008 235.059 145.903 235.373 145.903 235.771 cv
145.903 238.088 li
145.229 238.088 li
145.229 233.986 li
145.903 233.986 li
145.903 234.623 li
146.061 234.383 146.249 234.195 146.473 234.076 cv
146.691 233.957 146.946 233.889 147.231 233.889 cv
147.696 233.889 148.056 234.039 148.296 234.331 cv
148.536 234.623 148.664 235.051 148.664 235.613 cv
f
152.48 234.684 mo
157.175 234.684 li
157.175 235.299 li
152.48 235.299 li
152.48 234.684 li
cp
152.48 236.176 mo
157.175 236.176 li
157.175 236.799 li
152.48 236.799 li
152.48 236.176 li
cp
f
161.061 232.389 mo
161.736 232.389 li
161.736 238.088 li
161.061 238.088 li
161.061 232.389 li
cp
f
166.656 235.869 mo
166.656 236.199 li
163.558 236.199 li
163.588 236.663 163.724 237.023 163.979 237.264 cv
164.225 237.504 164.571 237.623 165.021 237.623 cv
165.276 237.623 165.53 237.594 165.771 237.533 cv
166.011 237.474 166.258 237.376 166.499 237.241 cv
166.499 237.879 li
166.258 237.983 166.011 238.066 165.756 238.111 cv
165.5 238.156 165.238 238.186 164.983 238.186 cv
164.323 238.186 163.805 237.998 163.423 237.623 cv
163.041 237.248 162.854 236.73 162.854 236.078 cv
162.854 235.411 163.034 234.879 163.394 234.48 cv
163.753 234.091 164.248 233.889 164.863 233.889 cv
165.418 233.889 165.854 234.068 166.175 234.421 cv
166.49 234.781 166.656 235.262 166.656 235.869 cv
165.981 235.673 mo
165.973 235.307 165.868 235.014 165.673 234.788 cv
165.471 234.57 165.201 234.459 164.871 234.459 cv
164.496 234.459 164.195 234.57 163.971 234.781 cv
163.746 234.991 163.611 235.291 163.581 235.673 cv
165.981 235.673 li
f
171.171 235.613 mo
171.171 238.088 li
170.496 238.088 li
170.496 235.636 li
170.496 235.246 170.413 234.961 170.263 234.767 cv
170.113 234.57 169.888 234.473 169.588 234.473 cv
169.221 234.473 168.936 234.594 168.726 234.826 cv
168.516 235.059 168.411 235.373 168.411 235.771 cv
168.411 238.088 li
167.736 238.088 li
167.736 233.986 li
168.411 233.986 li
168.411 234.623 li
168.568 234.383 168.756 234.195 168.981 234.076 cv
169.198 233.957 169.453 233.889 169.738 233.889 cv
170.203 233.889 170.563 234.039 170.803 234.331 cv
171.043 234.623 171.171 235.051 171.171 235.613 cv
f
174.133 232.396 mo
173.803 232.966 173.563 233.521 173.406 234.068 cv
173.241 234.616 173.166 235.17 173.166 235.734 cv
173.166 236.304 173.241 236.859 173.406 237.406 cv
173.563 237.961 173.803 238.508 174.133 239.071 cv
173.547 239.071 li
173.181 238.494 172.904 237.938 172.723 237.383 cv
172.543 236.828 172.454 236.281 172.454 235.734 cv
172.454 235.193 172.543 234.646 172.723 234.092 cv
172.904 233.535 173.173 232.974 173.547 232.396 cv
174.133 232.396 li
f
176.106 232.824 mo
176.106 233.986 li
177.494 233.986 li
177.494 234.512 li
176.106 234.512 li
176.106 236.738 li
176.106 237.076 176.15 237.293 176.241 237.383 cv
176.331 237.48 176.518 237.525 176.803 237.525 cv
177.494 237.525 li
177.494 238.088 li
176.803 238.088 li
176.278 238.088 175.917 237.991 175.723 237.796 cv
175.528 237.602 175.431 237.248 175.431 236.738 cv
175.431 234.512 li
174.936 234.512 li
174.936 233.986 li
175.431 233.986 li
175.431 232.824 li
176.106 232.824 li
f
181.888 235.869 mo
181.888 236.199 li
178.791 236.199 li
178.821 236.663 178.956 237.023 179.21 237.264 cv
179.458 237.504 179.803 237.623 180.253 237.623 cv
180.508 237.623 180.763 237.594 181.003 237.533 cv
181.244 237.474 181.491 237.376 181.731 237.241 cv
181.731 237.879 li
181.491 237.983 181.244 238.066 180.989 238.111 cv
180.733 238.156 180.47 238.186 180.215 238.186 cv
179.556 238.186 179.038 237.998 178.656 237.623 cv
178.273 237.248 178.086 236.73 178.086 236.078 cv
178.086 235.411 178.266 234.879 178.625 234.48 cv
178.986 234.091 179.48 233.889 180.096 233.889 cv
180.651 233.889 181.085 234.068 181.408 234.421 cv
181.723 234.781 181.888 235.262 181.888 235.869 cv
181.213 235.673 mo
181.206 235.307 181.1 235.014 180.906 234.788 cv
180.704 234.57 180.433 234.459 180.103 234.459 cv
179.728 234.459 179.428 234.57 179.204 234.781 cv
178.978 234.991 178.843 235.291 178.814 235.673 cv
181.213 235.673 li
f
186.403 233.986 mo
184.918 235.98 li
186.478 238.088 li
185.683 238.088 li
184.491 236.476 li
183.298 238.088 li
182.503 238.088 li
184.093 235.943 li
182.639 233.986 li
183.433 233.986 li
184.521 235.449 li
185.609 233.986 li
186.403 233.986 li
cp
f
188.098 232.824 mo
188.098 233.986 li
189.486 233.986 li
189.486 234.512 li
188.098 234.512 li
188.098 236.738 li
188.098 237.076 188.143 237.293 188.233 237.383 cv
188.323 237.48 188.51 237.525 188.795 237.525 cv
189.486 237.525 li
189.486 238.088 li
188.795 238.088 li
188.271 238.088 187.911 237.991 187.715 237.796 cv
187.521 237.602 187.423 237.248 187.423 236.738 cv
187.423 234.512 li
186.928 234.512 li
186.928 233.986 li
187.423 233.986 li
187.423 232.824 li
188.098 232.824 li
f
190.265 232.396 mo
190.851 232.396 li
191.211 232.974 191.488 233.535 191.668 234.092 cv
191.848 234.646 191.946 235.193 191.946 235.734 cv
191.946 236.281 191.848 236.828 191.668 237.383 cv
191.488 237.938 191.211 238.494 190.851 239.071 cv
190.265 239.071 li
190.588 238.508 190.828 237.961 190.993 237.406 cv
191.151 236.859 191.234 236.304 191.234 235.734 cv
191.234 235.17 191.151 234.616 190.993 234.068 cv
190.828 233.521 190.588 232.966 190.265 232.396 cv
f
28.6787 219.494 mo
31.1787 219.494 li
f
28.6787 219.494 mo
31.1787 219.494 li
@
307.679 219.494 mo
305.179 219.494 li
f
307.679 219.494 mo
305.179 219.494 li
@
12.8506 216.585 mo
12.4683 216.585 12.1831 216.772 11.9883 217.147 cv
11.7935 217.522 11.7031 218.085 11.7031 218.835 cv
11.7031 219.585 11.7935 220.147 11.9883 220.522 cv
12.1831 220.897 12.4683 221.085 12.8506 221.085 cv
13.2334 221.085 13.5181 220.897 13.7134 220.522 cv
13.9009 220.147 13.998 219.585 13.998 218.835 cv
13.998 218.085 13.9009 217.522 13.7134 217.147 cv
13.5181 216.772 13.2334 216.585 12.8506 216.585 cv
12.8506 216 mo
13.458 216 13.9233 216.248 14.2534 216.728 cv
14.5757 217.215 14.7407 217.92 14.7407 218.835 cv
14.7407 219.758 14.5757 220.463 14.2534 220.942 cv
13.9233 221.422 13.458 221.662 12.8506 221.662 cv
12.2358 221.662 11.7632 221.422 11.4409 220.942 cv
11.1182 220.463 10.9609 219.758 10.9609 218.835 cv
10.9609 217.92 11.1182 217.215 11.4409 216.728 cv
11.7632 216.248 12.2358 216 12.8506 216 cv
f
16.0381 220.635 mo
16.8105 220.635 li
16.8105 221.564 li
16.0381 221.564 li
16.0381 220.635 li
cp
f
20.0059 216.585 mo
19.6235 216.585 19.3384 216.772 19.1436 217.147 cv
18.9482 217.522 18.8584 218.085 18.8584 218.835 cv
18.8584 219.585 18.9482 220.147 19.1436 220.522 cv
19.3384 220.897 19.6235 221.085 20.0059 221.085 cv
20.3882 221.085 20.6733 220.897 20.8682 220.522 cv
21.0557 220.147 21.1533 219.585 21.1533 218.835 cv
21.1533 218.085 21.0557 217.522 20.8682 217.147 cv
20.6733 216.772 20.3882 216.585 20.0059 216.585 cv
20.0059 216 mo
20.6133 216 21.0781 216.248 21.4082 216.728 cv
21.731 217.215 21.896 217.92 21.896 218.835 cv
21.896 219.758 21.731 220.463 21.4082 220.942 cv
21.0781 221.422 20.6133 221.662 20.0059 221.662 cv
19.3906 221.662 18.9185 221.422 18.5957 220.942 cv
18.2734 220.463 18.1157 219.758 18.1157 218.835 cv
18.1157 217.92 18.2734 217.215 18.5957 216.728 cv
18.9185 216.248 19.3906 216 20.0059 216 cv
f
24.7759 216.585 mo
24.3931 216.585 24.1084 216.772 23.9131 217.147 cv
23.7183 217.522 23.6284 218.085 23.6284 218.835 cv
23.6284 219.585 23.7183 220.147 23.9131 220.522 cv
24.1084 220.897 24.3931 221.085 24.7759 221.085 cv
25.1582 221.085 25.4434 220.897 25.6382 220.522 cv
25.8257 220.147 25.9233 219.585 25.9233 218.835 cv
25.9233 218.085 25.8257 217.522 25.6382 217.147 cv
25.4434 216.772 25.1582 216.585 24.7759 216.585 cv
24.7759 216 mo
25.3833 216 25.8481 216.248 26.1782 216.728 cv
26.501 217.215 26.6655 217.92 26.6655 218.835 cv
26.6655 219.758 26.501 220.463 26.1782 220.942 cv
25.8481 221.422 25.3833 221.662 24.7759 221.662 cv
24.1606 221.662 23.6885 221.422 23.3657 220.942 cv
23.0435 220.463 22.8857 219.758 22.8857 218.835 cv
22.8857 217.92 23.0435 217.215 23.3657 216.728 cv
23.6885 216.248 24.1606 216 24.7759 216 cv
f
28.6787 188.638 mo
31.1787 188.638 li
f
28.6787 188.638 mo
31.1787 188.638 li
@
307.679 188.638 mo
305.179 188.638 li
f
307.679 188.638 mo
305.179 188.638 li
@
13.0459 185.728 mo
12.6636 185.728 12.3784 185.916 12.1836 186.29 cv
11.9888 186.666 11.8984 187.228 11.8984 187.978 cv
11.8984 188.728 11.9888 189.29 12.1836 189.666 cv
12.3784 190.04 12.6636 190.228 13.0459 190.228 cv
13.4287 190.228 13.7134 190.04 13.9087 189.666 cv
14.0962 189.29 14.1934 188.728 14.1934 187.978 cv
14.1934 187.228 14.0962 186.666 13.9087 186.29 cv
13.7134 185.916 13.4287 185.728 13.0459 185.728 cv
13.0459 185.143 mo
13.6533 185.143 14.1187 185.391 14.4487 185.871 cv
14.771 186.358 14.936 187.063 14.936 187.978 cv
14.936 188.9 14.771 189.605 14.4487 190.085 cv
14.1187 190.565 13.6533 190.806 13.0459 190.806 cv
12.4312 190.806 11.9585 190.565 11.6362 190.085 cv
11.3135 189.605 11.1563 188.9 11.1563 187.978 cv
11.1563 187.063 11.3135 186.358 11.6362 185.871 cv
11.9585 185.391 12.4312 185.143 13.0459 185.143 cv
f
16.2339 189.778 mo
17.0063 189.778 li
17.0063 190.708 li
16.2339 190.708 li
16.2339 189.778 li
cp
f
20.2012 185.728 mo
19.8188 185.728 19.5337 185.916 19.3389 186.29 cv
19.1436 186.666 19.0537 187.228 19.0537 187.978 cv
19.0537 188.728 19.1436 189.29 19.3389 189.666 cv
19.5337 190.04 19.8188 190.228 20.2012 190.228 cv
20.5835 190.228 20.8687 190.04 21.0635 189.666 cv
21.251 189.29 21.3486 188.728 21.3486 187.978 cv
21.3486 187.228 21.251 186.666 21.0635 186.29 cv
20.8687 185.916 20.5835 185.728 20.2012 185.728 cv
20.2012 185.143 mo
20.8086 185.143 21.2734 185.391 21.6035 185.871 cv
21.9263 186.358 22.0913 187.063 22.0913 187.978 cv
22.0913 188.9 21.9263 189.605 21.6035 190.085 cv
21.2734 190.565 20.8086 190.806 20.2012 190.806 cv
19.5859 190.806 19.1138 190.565 18.791 190.085 cv
18.4688 189.605 18.311 188.9 18.311 187.978 cv
18.311 187.063 18.4688 186.358 18.791 185.871 cv
19.1138 185.391 19.5859 185.143 20.2012 185.143 cv
f
23.5161 190.085 mo
24.7236 190.085 li
24.7236 185.916 li
23.4111 186.178 li
23.4111 185.503 li
24.7158 185.24 li
25.4585 185.24 li
25.4585 190.085 li
26.666 190.085 li
26.666 190.708 li
23.5161 190.708 li
23.5161 190.085 li
cp
f
28.6787 157.781 mo
31.1787 157.781 li
f
28.6787 157.781 mo
31.1787 157.781 li
@
307.679 157.781 mo
305.179 157.781 li
f
307.679 157.781 mo
305.179 157.781 li
@
13.1045 154.871 mo
12.7222 154.871 12.437 155.058 12.2422 155.433 cv
12.0469 155.808 11.957 156.371 11.957 157.121 cv
11.957 157.871 12.0469 158.433 12.2422 158.808 cv
12.437 159.183 12.7222 159.371 13.1045 159.371 cv
13.4873 159.371 13.772 159.183 13.9673 158.808 cv
14.1548 158.433 14.252 157.871 14.252 157.121 cv
14.252 156.371 14.1548 155.808 13.9673 155.433 cv
13.772 155.058 13.4873 154.871 13.1045 154.871 cv
13.1045 154.286 mo
13.7119 154.286 14.1772 154.533 14.5073 155.014 cv
14.8296 155.5 14.9946 156.206 14.9946 157.121 cv
14.9946 158.043 14.8296 158.748 14.5073 159.229 cv
14.1772 159.708 13.7119 159.948 13.1045 159.948 cv
12.4897 159.948 12.0171 159.708 11.6948 159.229 cv
11.3721 158.748 11.2144 158.043 11.2144 157.121 cv
11.2144 156.206 11.3721 155.5 11.6948 155.014 cv
12.0171 154.533 12.4897 154.286 13.1045 154.286 cv
f
16.2925 158.921 mo
17.0649 158.921 li
17.0649 159.851 li
16.2925 159.851 li
16.2925 158.921 li
cp
f
20.2598 154.871 mo
19.8774 154.871 19.5923 155.058 19.3975 155.433 cv
19.2021 155.808 19.1123 156.371 19.1123 157.121 cv
19.1123 157.871 19.2021 158.433 19.3975 158.808 cv
19.5923 159.183 19.8774 159.371 20.2598 159.371 cv
20.6421 159.371 20.9272 159.183 21.1221 158.808 cv
21.3096 158.433 21.4072 157.871 21.4072 157.121 cv
21.4072 156.371 21.3096 155.808 21.1221 155.433 cv
20.9272 155.058 20.6421 154.871 20.2598 154.871 cv
20.2598 154.286 mo
20.8672 154.286 21.3325 154.533 21.6621 155.014 cv
21.9849 155.5 22.1499 156.206 22.1499 157.121 cv
22.1499 158.043 21.9849 158.748 21.6621 159.229 cv
21.3325 159.708 20.8672 159.948 20.2598 159.948 cv
19.645 159.948 19.1724 159.708 18.8496 159.229 cv
18.5273 158.748 18.3696 158.043 18.3696 157.121 cv
18.3696 156.206 18.5273 155.5 18.8496 155.014 cv
19.1724 154.533 19.645 154.286 20.2598 154.286 cv
f
24.0845 159.229 mo
26.6646 159.229 li
26.6646 159.851 li
23.1919 159.851 li
23.1919 159.229 li
23.4697 158.943 23.8521 158.554 24.3394 158.059 cv
24.8193 157.571 25.127 157.256 25.2544 157.113 cv
25.4946 156.85 25.6597 156.626 25.7495 156.438 cv
25.8394 156.258 25.8921 156.07 25.8921 155.89 cv
25.8921 155.606 25.7871 155.365 25.5845 155.186 cv
25.3818 155.005 25.1196 154.909 24.7896 154.909 cv
24.5571 154.909 24.3096 154.953 24.0547 155.028 cv
23.7993 155.11 23.522 155.231 23.2295 155.396 cv
23.2295 154.646 li
23.5293 154.526 23.8071 154.436 24.062 154.375 cv
24.3169 154.316 24.5571 154.286 24.7744 154.286 cv
25.3369 154.286 25.7871 154.428 26.1245 154.713 cv
26.4619 154.998 26.6343 155.374 26.6343 155.846 cv
26.6343 156.07 26.5894 156.289 26.5068 156.483 cv
26.4243 156.686 26.2744 156.925 26.0493 157.196 cv
25.9897 157.271 25.7944 157.473 25.4644 157.811 cv
25.1343 158.148 24.6772 158.621 24.0845 159.229 cv
f
28.6787 126.923 mo
31.1787 126.923 li
f
28.6787 126.923 mo
31.1787 126.923 li
@
307.679 126.923 mo
305.179 126.923 li
f
307.679 126.923 mo
305.179 126.923 li
@
12.958 124.014 mo
12.5757 124.014 12.2905 124.201 12.0957 124.576 cv
11.9009 124.951 11.8105 125.514 11.8105 126.264 cv
11.8105 127.014 11.9009 127.576 12.0957 127.951 cv
12.2905 128.326 12.5757 128.514 12.958 128.514 cv
13.3408 128.514 13.6255 128.326 13.8208 127.951 cv
14.0083 127.576 14.1055 127.014 14.1055 126.264 cv
14.1055 125.514 14.0083 124.951 13.8208 124.576 cv
13.6255 124.201 13.3408 124.014 12.958 124.014 cv
12.958 123.428 mo
13.5654 123.428 14.0308 123.676 14.3608 124.156 cv
14.6831 124.644 14.8481 125.349 14.8481 126.264 cv
14.8481 127.186 14.6831 127.891 14.3608 128.371 cv
14.0308 128.851 13.5654 129.091 12.958 129.091 cv
12.3433 129.091 11.8706 128.851 11.5483 128.371 cv
11.2256 127.891 11.0684 127.186 11.0684 126.264 cv
11.0684 125.349 11.2256 124.644 11.5483 124.156 cv
11.8706 123.676 12.3433 123.428 12.958 123.428 cv
f
16.1455 128.063 mo
16.918 128.063 li
16.918 128.994 li
16.1455 128.994 li
16.1455 128.063 li
cp
f
20.1133 124.014 mo
19.731 124.014 19.4458 124.201 19.251 124.576 cv
19.0557 124.951 18.9658 125.514 18.9658 126.264 cv
18.9658 127.014 19.0557 127.576 19.251 127.951 cv
19.4458 128.326 19.731 128.514 20.1133 128.514 cv
20.4956 128.514 20.7808 128.326 20.9756 127.951 cv
21.1631 127.576 21.2607 127.014 21.2607 126.264 cv
21.2607 125.514 21.1631 124.951 20.9756 124.576 cv
20.7808 124.201 20.4956 124.014 20.1133 124.014 cv
20.1133 123.428 mo
20.7207 123.428 21.1855 123.676 21.5156 124.156 cv
21.8384 124.644 22.0034 125.349 22.0034 126.264 cv
22.0034 127.186 21.8384 127.891 21.5156 128.371 cv
21.1855 128.851 20.7207 129.091 20.1133 129.091 cv
19.498 129.091 19.0259 128.851 18.7031 128.371 cv
18.3809 127.891 18.2231 127.186 18.2231 126.264 cv
18.2231 125.349 18.3809 124.644 18.7031 124.156 cv
19.0259 123.676 19.498 123.428 20.1133 123.428 cv
f
25.5435 126.046 mo
25.896 126.121 26.1733 126.279 26.3682 126.519 cv
26.5635 126.759 26.6685 127.059 26.6685 127.404 cv
26.6685 127.944 26.481 128.364 26.1133 128.656 cv
25.7383 128.949 25.2134 129.091 24.5308 129.091 cv
24.2983 129.091 24.0581 129.069 23.8184 129.023 cv
23.5781 128.986 23.3232 128.918 23.0684 128.829 cv
23.0684 128.116 li
23.271 128.236 23.4956 128.326 23.7432 128.386 cv
23.9834 128.446 24.2383 128.476 24.5083 128.476 cv
24.9731 128.476 25.3257 128.386 25.5659 128.206 cv
25.8057 128.026 25.9331 127.756 25.9331 127.404 cv
25.9331 127.088 25.8208 126.833 25.5957 126.654 cv
25.3706 126.474 25.0557 126.376 24.6509 126.376 cv
24.0132 126.376 li
24.0132 125.769 li
24.6807 125.769 li
25.0405 125.769 25.3184 125.701 25.5132 125.551 cv
25.7085 125.408 25.8057 125.199 25.8057 124.921 cv
25.8057 124.644 25.7007 124.426 25.5059 124.276 cv
25.3032 124.126 25.0181 124.051 24.6509 124.051 cv
24.4482 124.051 24.231 124.074 23.998 124.119 cv
23.7656 124.164 23.5107 124.231 23.2334 124.321 cv
23.2334 123.661 li
23.5107 123.586 23.7734 123.526 24.021 123.489 cv
24.2607 123.451 24.4932 123.429 24.7183 123.429 cv
25.2734 123.429 25.7158 123.556 26.0459 123.811 cv
26.376 124.066 26.5405 124.411 26.5405 124.846 cv
26.5405 125.146 26.4507 125.401 26.2783 125.611 cv
26.106 125.821 25.8584 125.971 25.5435 126.046 cv
f
28.6787 96.0664 mo
31.1787 96.0664 li
f
28.6787 96.0664 mo
31.1787 96.0664 li
@
307.679 96.0664 mo
305.179 96.0664 li
f
307.679 96.0664 mo
305.179 96.0664 li
@
12.7725 93.1563 mo
12.3901 93.1563 12.105 93.3438 11.9102 93.7188 cv
11.7153 94.0938 11.625 94.6563 11.625 95.4063 cv
11.625 96.1563 11.7153 96.7188 11.9102 97.0938 cv
12.105 97.4688 12.3901 97.6563 12.7725 97.6563 cv
13.1553 97.6563 13.4399 97.4688 13.6353 97.0938 cv
13.8228 96.7188 13.9199 96.1563 13.9199 95.4063 cv
13.9199 94.6563 13.8228 94.0938 13.6353 93.7188 cv
13.4399 93.3438 13.1553 93.1563 12.7725 93.1563 cv
12.7725 92.5713 mo
13.3799 92.5713 13.8452 92.8188 14.1753 93.2988 cv
14.4976 93.7866 14.6626 94.4917 14.6626 95.4063 cv
14.6626 96.3291 14.4976 97.0337 14.1753 97.5142 cv
13.8452 97.9941 13.3799 98.2339 12.7725 98.2339 cv
12.1577 98.2339 11.6851 97.9941 11.3628 97.5142 cv
11.04 97.0337 10.8828 96.3291 10.8828 95.4063 cv
10.8828 94.4917 11.04 93.7866 11.3628 93.2988 cv
11.6851 92.8188 12.1577 92.5713 12.7725 92.5713 cv
f
15.96 97.2065 mo
16.7324 97.2065 li
16.7324 98.1367 li
15.96 98.1367 li
15.96 97.2065 li
cp
f
19.9277 93.1563 mo
19.5454 93.1563 19.2603 93.3438 19.0654 93.7188 cv
18.8701 94.0938 18.7803 94.6563 18.7803 95.4063 cv
18.7803 96.1563 18.8701 96.7188 19.0654 97.0938 cv
19.2603 97.4688 19.5454 97.6563 19.9277 97.6563 cv
20.3101 97.6563 20.5952 97.4688 20.79 97.0938 cv
20.9775 96.7188 21.0752 96.1563 21.0752 95.4063 cv
21.0752 94.6563 20.9775 94.0938 20.79 93.7188 cv
20.5952 93.3438 20.3101 93.1563 19.9277 93.1563 cv
19.9277 92.5713 mo
20.5352 92.5713 21 92.8188 21.3301 93.2988 cv
21.6528 93.7866 21.8179 94.4917 21.8179 95.4063 cv
21.8179 96.3291 21.6528 97.0337 21.3301 97.5142 cv
21 97.9941 20.5352 98.2339 19.9277 98.2339 cv
19.3125 98.2339 18.8403 97.9941 18.5176 97.5142 cv
18.1953 97.0337 18.0376 96.3291 18.0376 95.4063 cv
18.0376 94.4917 18.1953 93.7866 18.5176 93.2988 cv
18.8403 92.8188 19.3125 92.5713 19.9277 92.5713 cv
f
25.1475 93.314 mo
23.2798 96.2314 li
25.1475 96.2314 li
25.1475 93.314 li
24.9526 92.6689 mo
25.8823 92.6689 li
25.8823 96.2314 li
26.6626 96.2314 li
26.6626 96.8462 li
25.8823 96.8462 li
25.8823 98.1362 li
25.1475 98.1362 li
25.1475 96.8462 li
22.6802 96.8462 li
22.6802 96.1338 li
24.9526 92.6689 li
cp
f
28.6787 65.209 mo
31.1787 65.209 li
f
28.6787 65.209 mo
31.1787 65.209 li
@
307.679 65.209 mo
305.179 65.209 li
f
307.679 65.209 mo
305.179 65.209 li
@
13.0068 62.2993 mo
12.6245 62.2993 12.3394 62.4868 12.1445 62.8618 cv
11.9497 63.2368 11.8594 63.7993 11.8594 64.5493 cv
11.8594 65.2993 11.9497 65.8618 12.1445 66.2368 cv
12.3394 66.6118 12.6245 66.7993 13.0068 66.7993 cv
13.3896 66.7993 13.6743 66.6118 13.8696 66.2368 cv
14.0571 65.8618 14.1543 65.2993 14.1543 64.5493 cv
14.1543 63.7993 14.0571 63.2368 13.8696 62.8618 cv
13.6743 62.4868 13.3896 62.2993 13.0068 62.2993 cv
13.0068 61.7144 mo
13.6143 61.7144 14.0796 61.9619 14.4097 62.4419 cv
14.7319 62.9297 14.897 63.6343 14.897 64.5493 cv
14.897 65.4722 14.7319 66.1772 14.4097 66.6567 cv
14.0796 67.1372 13.6143 67.377 13.0068 67.377 cv
12.3921 67.377 11.9194 67.1372 11.5972 66.6567 cv
11.2744 66.1772 11.1172 65.4722 11.1172 64.5493 cv
11.1172 63.6343 11.2744 62.9297 11.5972 62.4419 cv
11.9194 61.9619 12.3921 61.7144 13.0068 61.7144 cv
f
16.1943 66.3496 mo
16.9668 66.3496 li
16.9668 67.2798 li
16.1943 67.2798 li
16.1943 66.3496 li
cp
f
20.1621 62.2993 mo
19.7798 62.2993 19.4946 62.4868 19.2998 62.8618 cv
19.1045 63.2368 19.0146 63.7993 19.0146 64.5493 cv
19.0146 65.2993 19.1045 65.8618 19.2998 66.2368 cv
19.4946 66.6118 19.7798 66.7993 20.1621 66.7993 cv
20.5444 66.7993 20.8296 66.6118 21.0244 66.2368 cv
21.2119 65.8618 21.3096 65.2993 21.3096 64.5493 cv
21.3096 63.7993 21.2119 63.2368 21.0244 62.8618 cv
20.8296 62.4868 20.5444 62.2993 20.1621 62.2993 cv
20.1621 61.7144 mo
20.7695 61.7144 21.2344 61.9619 21.5645 62.4419 cv
21.8872 62.9297 22.0522 63.6343 22.0522 64.5493 cv
22.0522 65.4722 21.8872 66.1772 21.5645 66.6567 cv
21.2344 67.1372 20.7695 67.377 20.1621 67.377 cv
19.5469 67.377 19.0747 67.1372 18.752 66.6567 cv
18.4297 66.1772 18.272 65.4722 18.272 64.5493 cv
18.272 63.6343 18.4297 62.9297 18.752 62.4419 cv
19.0747 61.9619 19.5469 61.7144 20.1621 61.7144 cv
f
23.3569 61.812 mo
26.2593 61.812 li
26.2593 62.4341 li
24.0322 62.4341 li
24.0322 63.7769 li
24.1372 63.7393 24.2495 63.7095 24.3545 63.6943 cv
24.4595 63.6792 24.5718 63.6646 24.6772 63.6646 cv
25.2847 63.6646 25.7646 63.8369 26.1245 64.167 cv
26.4844 64.5044 26.6646 64.9546 26.6646 65.5244 cv
26.6646 66.1167 26.4771 66.5742 26.1094 66.897 cv
25.7422 67.2192 25.2246 67.377 24.5645 67.377 cv
24.332 67.377 24.0996 67.3545 23.8594 67.3242 cv
23.6196 67.2866 23.3794 67.2344 23.1245 67.1519 cv
23.1245 66.4092 li
23.3418 66.5293 23.5669 66.6191 23.8071 66.6792 cv
24.0396 66.7393 24.2871 66.7617 24.5493 66.7617 cv
24.9697 66.7617 25.3071 66.6567 25.5547 66.4316 cv
25.7944 66.2065 25.9219 65.9067 25.9219 65.5244 cv
25.9219 65.1494 25.7944 64.8491 25.5547 64.6245 cv
25.3071 64.3994 24.9697 64.2866 24.5493 64.2866 cv
24.3545 64.2866 24.1519 64.3091 23.957 64.3545 cv
23.7622 64.3994 23.5596 64.4668 23.3569 64.5566 cv
23.3569 61.812 li
f
28.6787 34.3521 mo
31.1787 34.3521 li
f
28.6787 34.3521 mo
31.1787 34.3521 li
@
307.679 34.3521 mo
305.179 34.3521 li
f
307.679 34.3521 mo
305.179 34.3521 li
@
12.8311 31.4424 mo
12.4487 31.4424 12.1636 31.6299 11.9688 32.0049 cv
11.7734 32.3799 11.6836 32.9424 11.6836 33.6924 cv
11.6836 34.4424 11.7734 35.0049 11.9688 35.3799 cv
12.1636 35.7549 12.4487 35.9424 12.8311 35.9424 cv
13.2139 35.9424 13.4985 35.7549 13.6938 35.3799 cv
13.8813 35.0049 13.9785 34.4424 13.9785 33.6924 cv
13.9785 32.9424 13.8813 32.3799 13.6938 32.0049 cv
13.4985 31.6299 13.2139 31.4424 12.8311 31.4424 cv
12.8311 30.8574 mo
13.4385 30.8574 13.9038 31.105 14.2339 31.585 cv
14.5562 32.0723 14.7212 32.7773 14.7212 33.6924 cv
14.7212 34.6147 14.5562 35.3198 14.2339 35.7998 cv
13.9038 36.2798 13.4385 36.52 12.8311 36.52 cv
12.2163 36.52 11.7437 36.2798 11.4214 35.7998 cv
11.0986 35.3198 10.9409 34.6147 10.9409 33.6924 cv
10.9409 32.7773 11.0986 32.0723 11.4214 31.585 cv
11.7437 31.105 12.2163 30.8574 12.8311 30.8574 cv
f
16.0186 35.4922 mo
16.791 35.4922 li
16.791 36.4224 li
16.0186 36.4224 li
16.0186 35.4922 li
cp
f
19.9863 31.4424 mo
19.604 31.4424 19.3188 31.6299 19.124 32.0049 cv
18.9287 32.3799 18.8389 32.9424 18.8389 33.6924 cv
18.8389 34.4424 18.9287 35.0049 19.124 35.3799 cv
19.3188 35.7549 19.604 35.9424 19.9863 35.9424 cv
20.3687 35.9424 20.6538 35.7549 20.8486 35.3799 cv
21.0361 35.0049 21.1338 34.4424 21.1338 33.6924 cv
21.1338 32.9424 21.0361 32.3799 20.8486 32.0049 cv
20.6538 31.6299 20.3687 31.4424 19.9863 31.4424 cv
19.9863 30.8574 mo
20.5938 30.8574 21.0591 31.105 21.3887 31.585 cv
21.7114 32.0723 21.8765 32.7773 21.8765 33.6924 cv
21.8765 34.6147 21.7114 35.3198 21.3887 35.7998 cv
21.0591 36.2798 20.5938 36.52 19.9863 36.52 cv
19.3716 36.52 18.8989 36.2798 18.5762 35.7998 cv
18.2539 35.3198 18.0962 34.6147 18.0962 33.6924 cv
18.0962 32.7773 18.2539 32.0723 18.5762 31.585 cv
18.8989 31.105 19.3716 30.8574 19.9863 30.8574 cv
f
24.8462 33.3921 mo
24.5161 33.3921 24.2539 33.5122 24.0586 33.7373 cv
23.8638 33.9624 23.7661 34.2773 23.7661 34.6675 cv
23.7661 35.0649 23.8638 35.3799 24.0586 35.605 cv
24.2539 35.8296 24.5161 35.9424 24.8462 35.9424 cv
25.1763 35.9424 25.439 35.8296 25.6338 35.605 cv
25.8286 35.3799 25.9263 35.0649 25.9263 34.6675 cv
25.9263 34.2773 25.8286 33.9624 25.6338 33.7373 cv
25.439 33.5122 25.1763 33.3921 24.8462 33.3921 cv
26.3164 31.0747 mo
26.3164 31.75 li
26.1289 31.6597 25.9414 31.5923 25.7539 31.5474 cv
25.5586 31.5024 25.3711 31.48 25.1914 31.48 cv
24.6963 31.48 24.3213 31.645 24.0664 31.9751 cv
23.811 32.3047 23.6611 32.8071 23.6313 33.4673 cv
23.7739 33.2573 23.9536 33.0923 24.1714 32.98 cv
24.3887 32.8672 24.6289 32.8071 24.8911 32.8071 cv
25.439 32.8071 25.8735 32.98 26.189 33.3101 cv
26.5039 33.6396 26.6689 34.0972 26.6689 34.6675 cv
26.6689 35.23 26.4961 35.6797 26.1665 36.0171 cv
25.8364 36.355 25.3936 36.52 24.8462 36.52 cv
24.2163 36.52 23.729 36.2798 23.3989 35.7998 cv
23.061 35.3198 22.8965 34.6147 22.8965 33.6924 cv
22.8965 32.8296 23.0986 32.1396 23.5112 31.6299 cv
23.9165 31.1196 24.4712 30.8574 25.1611 30.8574 cv
25.3413 30.8574 25.5288 30.8799 25.7236 30.9097 cv
25.9111 30.9473 26.1064 31 26.3164 31.0747 cv
f
28.6787 3.49463 mo
31.1787 3.49463 li
f
28.6787 3.49463 mo
31.1787 3.49463 li
@
307.679 3.49463 mo
305.179 3.49463 li
f
307.679 3.49463 mo
305.179 3.49463 li
@
12.9971 .584961 mo
12.6147 .584961 12.3296 .772461 12.1348 1.14746 cv
11.9399 1.52246 11.8496 2.08496 11.8496 2.83496 cv
11.8496 3.58496 11.9399 4.14746 12.1348 4.52246 cv
12.3296 4.89746 12.6147 5.08496 12.9971 5.08496 cv
13.3799 5.08496 13.6646 4.89746 13.8599 4.52246 cv
14.0474 4.14746 14.1445 3.58496 14.1445 2.83496 cv
14.1445 2.08496 14.0474 1.52246 13.8599 1.14746 cv
13.6646 .772461 13.3799 .584961 12.9971 .584961 cv
12.9971 0 mo
13.6045 0 14.0698 .247559 14.3999 .727539 cv
14.7222 1.21484 14.8872 1.91992 14.8872 2.83496 cv
14.8872 3.75732 14.7222 4.4624 14.3999 4.94238 cv
14.0698 5.42236 13.6045 5.6626 12.9971 5.6626 cv
12.3823 5.6626 11.9097 5.42236 11.5874 4.94238 cv
11.2646 4.4624 11.1074 3.75732 11.1074 2.83496 cv
11.1074 1.91992 11.2646 1.21484 11.5874 .727539 cv
11.9097 .247559 12.3823 0 12.9971 0 cv
f
16.1851 4.63477 mo
16.9575 4.63477 li
16.9575 5.56494 li
16.1851 5.56494 li
16.1851 4.63477 li
cp
f
20.1523 .584961 mo
19.77 .584961 19.4849 .772461 19.29 1.14746 cv
19.0947 1.52246 19.0049 2.08496 19.0049 2.83496 cv
19.0049 3.58496 19.0947 4.14746 19.29 4.52246 cv
19.4849 4.89746 19.77 5.08496 20.1523 5.08496 cv
20.5347 5.08496 20.8198 4.89746 21.0146 4.52246 cv
21.2021 4.14746 21.2998 3.58496 21.2998 2.83496 cv
21.2998 2.08496 21.2021 1.52246 21.0146 1.14746 cv
20.8198 .772461 20.5347 .584961 20.1523 .584961 cv
20.1523 0 mo
20.7598 0 21.2246 .247559 21.5547 .727539 cv
21.8774 1.21484 22.0425 1.91992 22.0425 2.83496 cv
22.0425 3.75732 21.8774 4.4624 21.5547 4.94238 cv
21.2246 5.42236 20.7598 5.6626 20.1523 5.6626 cv
19.5371 5.6626 19.0649 5.42236 18.7422 4.94238 cv
18.4199 4.4624 18.2622 3.75732 18.2622 2.83496 cv
18.2622 1.91992 18.4199 1.21484 18.7422 .727539 cv
19.0649 .247559 19.5371 0 20.1523 0 cv
f
23.1523 .0976563 mo
26.6699 .0976563 li
26.6699 .412598 li
24.6821 5.56494 li
23.9097 5.56494 li
25.7773 .720215 li
23.1523 .720215 li
23.1523 .0976563 li
cp
f
.412598 122.814 mo
1.13281 122.814 li
.997559 123.099 .899902 123.362 .83252 123.609 cv
.772461 123.864 .735352 124.104 .735352 124.33 cv
.735352 124.734 .817871 125.049 .967773 125.267 cv
1.125 125.484 1.3501 125.589 1.63525 125.589 cv
1.875 125.589 2.0625 125.522 2.18262 125.372 cv
2.31006 125.229 2.40771 124.952 2.48242 124.546 cv
2.57275 124.097 li
2.67773 123.549 2.86523 123.144 3.12744 122.882 cv
3.39746 122.619 3.75 122.484 4.19287 122.484 cv
4.7251 122.484 5.12256 122.665 5.39258 123.017 cv
5.6626 123.377 5.79785 123.894 5.79785 124.577 cv
5.79785 124.839 5.76758 125.117 5.71533 125.409 cv
5.6626 125.702 5.58008 126.002 5.45996 126.309 cv
4.69531 126.309 li
4.86768 126.009 4.99512 125.717 5.07764 125.432 cv
5.16748 125.146 5.20508 124.862 5.20508 124.577 cv
5.20508 124.156 5.12256 123.834 4.95752 123.602 cv
4.79248 123.377 4.56006 123.257 4.24512 123.257 cv
3.9751 123.257 3.76514 123.339 3.61523 123.504 cv
3.46533 123.669 3.35254 123.939 3.27783 124.314 cv
3.1875 124.764 li
3.08252 125.319 2.91016 125.717 2.66992 125.964 cv
2.4375 126.212 2.11523 126.332 1.69531 126.332 cv
1.21533 126.332 .83252 126.167 .555176 125.822 cv
.277832 125.484 .135254 125.012 .135254 124.412 cv
.135254 124.156 .157715 123.902 .202637 123.632 cv
.247559 123.369 .322754 123.099 .412598 122.814 cv
f
3.48047 117.849 mo
3.81006 117.849 li
3.81006 120.947 li
4.27539 120.917 4.63525 120.782 4.87549 120.527 cv
5.11523 120.28 5.23535 119.934 5.23535 119.484 cv
5.23535 119.229 5.20508 118.975 5.14551 118.734 cv
5.08545 118.494 4.98779 118.247 4.85254 118.007 cv
5.49023 118.007 li
5.59521 118.247 5.67773 118.494 5.72266 118.749 cv
5.76758 119.005 5.79785 119.267 5.79785 119.522 cv
5.79785 120.182 5.61035 120.7 5.23535 121.082 cv
4.86035 121.464 4.34277 121.652 3.69043 121.652 cv
3.02295 121.652 2.49023 121.472 2.09277 121.112 cv
1.70264 120.752 1.50049 120.257 1.50049 119.642 cv
1.50049 119.086 1.68018 118.652 2.03271 118.33 cv
2.39258 118.015 2.87256 117.849 3.48047 117.849 cv
3.28516 118.524 mo
2.91797 118.532 2.62549 118.637 2.40039 118.832 cv
2.18262 119.034 2.07031 119.304 2.07031 119.634 cv
2.07031 120.009 2.18262 120.31 2.39258 120.534 cv
2.60254 120.759 2.90283 120.894 3.28516 120.924 cv
3.28516 118.524 li
f
1.75537 113.792 mo
2.38525 113.792 li
2.28027 113.987 2.20508 114.174 2.15283 114.37 cv
2.1001 114.564 2.07031 114.751 2.07031 114.947 cv
2.07031 115.382 2.2124 115.727 2.49023 115.966 cv
2.76758 116.207 3.15771 116.327 3.65283 116.327 cv
4.15527 116.327 4.54492 116.207 4.82275 115.966 cv
5.1001 115.727 5.23535 115.382 5.23535 114.947 cv
5.23535 114.751 5.2124 114.564 5.16016 114.37 cv
5.10742 114.174 5.0249 113.987 4.91992 113.792 cv
5.54248 113.792 li
5.63281 113.987 5.7002 114.182 5.73779 114.377 cv
5.7749 114.58 5.79785 114.796 5.79785 115.022 cv
5.79785 115.636 5.61035 116.131 5.22021 116.492 cv
4.8374 116.859 4.3125 117.039 3.65283 117.039 cv
2.98535 117.039 2.45996 116.859 2.07764 116.492 cv
1.69531 116.124 1.5 115.622 1.5 114.977 cv
1.5 114.767 1.52246 114.564 1.56787 114.37 cv
1.61279 114.174 1.67285 113.979 1.75537 113.792 cv
f
2.07031 111.032 mo
2.07031 111.392 2.2124 111.677 2.49756 111.887 cv
2.78271 112.097 3.16504 112.202 3.65283 112.202 cv
4.14746 112.202 4.53027 112.104 4.81494 111.894 cv
5.1001 111.684 5.23486 111.399 5.23486 111.032 cv
5.23486 110.672 5.1001 110.387 4.81494 110.177 cv
4.53027 109.967 4.14746 109.862 3.65283 109.862 cv
3.17236 109.862 2.78271 109.967 2.49756 110.177 cv
2.2124 110.387 2.07031 110.672 2.07031 111.032 cv
1.5 111.032 mo
1.5 110.447 1.69531 109.989 2.07031 109.652 cv
2.45264 109.322 2.97754 109.149 3.65283 109.149 cv
4.32764 109.149 4.85254 109.322 5.22754 109.652 cv
5.60986 109.989 5.79736 110.447 5.79736 111.032 cv
5.79736 111.625 5.60986 112.089 5.22754 112.419 cv
4.85254 112.75 4.32764 112.915 3.65283 112.915 cv
2.97754 112.915 2.45264 112.75 2.07031 112.419 cv
1.69531 112.089 1.5 111.625 1.5 111.032 cv
f
3.2251 104.619 mo
5.7002 104.619 li
5.7002 105.294 li
3.24756 105.294 li
2.85742 105.294 2.57275 105.376 2.37744 105.527 cv
2.18262 105.677 2.08496 105.902 2.08496 106.202 cv
2.08496 106.569 2.20508 106.854 2.4375 107.064 cv
2.66992 107.274 2.98535 107.379 3.38281 107.379 cv
5.7002 107.379 li
5.7002 108.054 li
1.59766 108.054 li
1.59766 107.379 li
2.23535 107.379 li
1.99512 107.222 1.80762 107.034 1.6875 106.809 cv
1.56787 106.592 1.5 106.336 1.5 106.052 cv
1.5 105.586 1.6499 105.227 1.94287 104.987 cv
2.23535 104.747 2.6626 104.619 3.2251 104.619 cv
f
2.22021 100.577 mo
0 100.577 li
0 99.9019 li
5.7002 99.9019 li
5.7002 100.577 li
5.08545 100.577 li
5.33252 100.719 5.5127 100.899 5.625 101.117 cv
5.73779 101.334 5.79785 101.589 5.79785 101.889 cv
5.79785 102.384 5.60254 102.789 5.21289 103.104 cv
4.82275 103.419 4.29785 103.569 3.65283 103.569 cv
3.00781 103.569 2.49023 103.419 2.09277 103.104 cv
1.70264 102.789 1.5 102.384 1.5 101.889 cv
1.5 101.589 1.56006 101.334 1.68018 101.117 cv
1.80029 100.899 1.97998 100.719 2.22021 100.577 cv
3.65283 102.872 mo
4.14795 102.872 4.5376 102.774 4.82275 102.572 cv
5.10791 102.369 5.24268 102.084 5.24268 101.724 cv
5.24268 101.372 5.10791 101.094 4.82275 100.884 cv
4.5376 100.682 4.14795 100.577 3.65283 100.577 cv
3.15771 100.577 2.77539 100.682 2.49023 100.884 cv
2.20508 101.094 2.0625 101.372 2.0625 101.724 cv
2.0625 102.084 2.20508 102.369 2.49023 102.572 cv
2.77539 102.774 3.15771 102.872 3.65283 102.872 cv
f
1.71777 95.897 mo
2.35498 95.897 li
2.26514 96.0918 2.18994 96.2871 2.1377 96.4893 cv
2.09277 96.6997 2.0625 96.9097 2.0625 97.127 cv
2.0625 97.4644 2.11523 97.7192 2.22021 97.8843 cv
2.3252 98.0493 2.4751 98.1318 2.67773 98.1318 cv
2.83496 98.1318 2.95508 98.0718 3.04492 97.9521 cv
3.13525 97.832 3.2251 97.5918 3.30029 97.2319 cv
3.35254 96.9995 li
3.45752 96.5195 3.60742 96.1821 3.7876 95.9795 cv
3.9751 95.7847 4.23779 95.6792 4.56738 95.6792 cv
4.9502 95.6792 5.25 95.8296 5.46777 96.1294 cv
5.69238 96.4292 5.79736 96.8496 5.79736 97.3745 cv
5.79736 97.5996 5.7749 97.8247 5.73779 98.0645 cv
5.7002 98.3042 5.64014 98.5518 5.55029 98.8145 cv
4.85254 98.8145 li
4.98779 98.5669 5.08496 98.3193 5.14502 98.0796 cv
5.2124 97.8394 5.24268 97.5996 5.24268 97.3594 cv
5.24268 97.0444 5.18994 96.7969 5.08496 96.6245 cv
4.97998 96.4595 4.82275 96.3696 4.62012 96.3696 cv
4.43994 96.3696 4.29736 96.437 4.2002 96.5571 cv
4.10254 96.6768 4.00488 96.9468 3.91504 97.3667 cv
3.86279 97.5996 li
3.77246 98.0195 3.6377 98.3267 3.45752 98.5068 cv
3.27783 98.6943 3.03027 98.7847 2.70752 98.7847 cv
2.3252 98.7847 2.0249 98.6494 1.81494 98.3794 cv
1.60498 98.1094 1.5 97.7192 1.5 97.2095 cv
1.5 96.9619 1.52246 96.7295 1.56006 96.5044 cv
1.59766 96.2871 1.6499 96.0845 1.71777 95.897 cv
f
.625 lw
28.6787 219.494 mo
28.6787 3.49463 li
@
28.6787 3.49463 mo
307.678 3.49463 li
@
28.6787 219.494 mo
307.678 219.494 li
@
307.679 219.494 mo
307.679 3.49463 li
@
125.284 49.5947 mo
211.073 49.5947 li
211.073 7.99414 li
125.284 7.99414 li
125.284 49.5947 li
cp
0 0 0 0 cmyk
f
125.284 49.5947 mo
211.073 49.5947 li
211.073 7.99414 li
125.284 7.99414 li
125.284 49.5947 li
cp
0 0 0 1 cmyk
@
.9375 lw
2 lc
131.584 15.0952 mo
144.184 15.0952 li
.884 .769 0 0 cmyk
@
154.462 13.3223 mo
155.272 13.3223 li
156.28 17.1655 li
157.288 13.3223 li
158.242 13.3223 li
159.25 17.1655 li
160.258 13.3223 li
161.068 13.3223 li
159.781 18.2451 li
158.827 18.2451 li
157.766 14.2134 li
156.703 18.2451 li
155.749 18.2451 li
154.462 13.3223 li
cp
0 0 0 1 cmyk
f
164.201 13.8892 mo
163.769 13.8892 163.426 14.0601 163.174 14.4023 cv
162.922 14.7441 162.796 15.2036 162.796 15.7886 cv
162.796 16.3823 162.913 16.8413 163.166 17.1836 cv
163.417 17.5249 163.759 17.6875 164.201 17.6875 cv
164.632 17.6875 164.974 17.5249 165.227 17.1836 cv
165.478 16.8413 165.604 16.3823 165.604 15.7886 cv
165.604 15.2124 165.478 14.7441 165.227 14.4023 cv
164.974 14.0601 164.632 13.8892 164.201 13.8892 cv
164.201 13.2056 mo
164.902 13.2056 165.451 13.439 165.856 13.8892 cv
166.252 14.3481 166.459 14.978 166.459 15.7886 cv
166.459 16.5981 166.252 17.228 165.856 17.6787 cv
165.451 18.1372 164.902 18.3623 164.201 18.3623 cv
163.489 18.3623 162.931 18.1372 162.535 17.6787 cv
162.139 17.228 161.941 16.5981 161.941 15.7886 cv
161.941 14.978 162.139 14.3481 162.535 13.8892 cv
162.931 13.439 163.489 13.2056 164.201 13.2056 cv
f
170.653 14.0781 mo
170.563 14.0244 170.464 13.9878 170.356 13.9614 cv
170.249 13.9429 170.131 13.9248 170.005 13.9248 cv
169.546 13.9248 169.195 14.0781 168.952 14.375 cv
168.7 14.6724 168.583 15.0952 168.583 15.6528 cv
168.583 18.2451 li
167.774 18.2451 li
167.774 13.3223 li
168.583 13.3223 li
168.583 14.0874 li
168.745 13.7905 168.971 13.5649 169.24 13.4214 cv
169.51 13.2773 169.843 13.2056 170.239 13.2056 cv
170.293 13.2056 170.356 13.2144 170.429 13.2144 cv
170.491 13.2231 170.563 13.2319 170.653 13.25 cv
170.653 14.0781 li
f
174.74 14.0693 mo
174.74 11.4048 li
175.549 11.4048 li
175.549 18.2456 li
174.74 18.2456 li
174.74 17.5068 li
174.568 17.8042 174.353 18.02 174.091 18.1553 cv
173.83 18.2896 173.525 18.3623 173.164 18.3623 cv
172.57 18.3623 172.084 18.1279 171.706 17.6606 cv
171.328 17.1924 171.148 16.5625 171.148 15.7881 cv
171.148 15.0142 171.328 14.3931 171.706 13.916 cv
172.084 13.4478 172.57 13.2056 173.164 13.2056 cv
173.525 13.2056 173.83 13.2773 174.091 13.4209 cv
174.353 13.5649 174.568 13.7813 174.74 14.0693 cv
171.985 15.7881 mo
171.985 16.3823 172.102 16.8506 172.345 17.1924 cv
172.588 17.5342 172.93 17.6958 173.363 17.6958 cv
173.786 17.6958 174.119 17.5342 174.37 17.1924 cv
174.613 16.8506 174.74 16.3823 174.74 15.7881 cv
174.74 15.1943 174.613 14.7349 174.37 14.3931 cv
174.119 14.0513 173.786 13.8799 173.363 13.8799 cv
172.93 13.8799 172.588 14.0513 172.345 14.3931 cv
172.102 14.7349 171.985 15.1943 171.985 15.7881 cv
f
182.165 12.188 mo
182.165 13.1245 li
181.858 12.854 181.543 12.647 181.202 12.5034 cv
180.859 12.3682 180.508 12.2964 180.13 12.2964 cv
179.375 12.2964 178.798 12.5298 178.402 12.9893 cv
178.006 13.4482 177.808 14.105 177.808 14.9692 cv
177.808 15.833 178.006 16.4985 178.402 16.958 cv
178.798 17.417 179.375 17.6426 180.13 17.6426 cv
180.508 17.6426 180.859 17.5786 181.202 17.4355 cv
181.543 17.3003 181.858 17.0933 182.165 16.8145 cv
182.165 17.7412 li
181.849 17.957 181.516 18.1099 181.174 18.2095 cv
180.832 18.3081 180.463 18.3618 180.077 18.3618 cv
179.086 18.3618 178.303 18.0649 177.727 17.4619 cv
177.151 16.8594 176.872 16.0313 176.872 14.9692 cv
176.872 13.9165 177.151 13.0884 177.727 12.4761 cv
178.303 11.873 179.086 11.5669 180.077 11.5669 cv
180.472 11.5669 180.841 11.6211 181.183 11.7202 cv
181.526 11.8281 181.858 11.9814 182.165 12.188 cv
f
185.404 13.8892 mo
184.972 13.8892 184.63 14.0601 184.377 14.4023 cv
184.126 14.7441 184 15.2036 184 15.7886 cv
184 16.3823 184.117 16.8413 184.369 17.1836 cv
184.621 17.5249 184.962 17.6875 185.404 17.6875 cv
185.835 17.6875 186.178 17.5249 186.43 17.1836 cv
186.682 16.8413 186.808 16.3823 186.808 15.7886 cv
186.808 15.2124 186.682 14.7441 186.43 14.4023 cv
186.178 14.0601 185.835 13.8892 185.404 13.8892 cv
185.404 13.2056 mo
186.106 13.2056 186.656 13.439 187.06 13.8892 cv
187.456 14.3481 187.663 14.978 187.663 15.7886 cv
187.663 16.5981 187.456 17.228 187.06 17.6787 cv
186.656 18.1372 186.106 18.3623 185.404 18.3623 cv
184.693 18.3623 184.135 18.1372 183.739 17.6787 cv
183.343 17.228 183.145 16.5981 183.145 15.7886 cv
183.145 14.978 183.343 14.3481 183.739 13.8892 cv
184.135 13.439 184.693 13.2056 185.404 13.2056 cv
f
188.923 16.3013 mo
188.923 13.3218 li
189.734 13.3218 li
189.734 16.2744 li
189.734 16.7427 189.823 17.0835 190.003 17.3179 cv
190.183 17.5518 190.453 17.6689 190.822 17.6689 cv
191.254 17.6689 191.605 17.5347 191.857 17.2549 cv
192.109 16.9761 192.235 16.5981 192.235 16.1118 cv
192.235 13.3218 li
193.045 13.3218 li
193.045 18.2451 li
192.235 18.2451 li
192.235 17.4888 li
192.038 17.7949 191.803 18.0112 191.551 18.1548 cv
191.291 18.29 190.994 18.3618 190.652 18.3618 cv
190.084 18.3618 189.652 18.1914 189.364 17.8398 cv
189.067 17.498 188.923 16.9849 188.923 16.3013 cv
f
198.805 15.2754 mo
198.805 18.2451 li
197.995 18.2451 li
197.995 15.3022 li
197.995 14.834 197.896 14.4922 197.716 14.2583 cv
197.537 14.0239 197.266 13.9072 196.906 13.9072 cv
196.465 13.9072 196.124 14.0513 195.872 14.3301 cv
195.619 14.6089 195.493 14.9873 195.493 15.4639 cv
195.493 18.2451 li
194.683 18.2451 li
194.683 13.3223 li
195.493 13.3223 li
195.493 14.0874 li
195.682 13.7988 195.907 13.5737 196.177 13.4302 cv
196.438 13.2856 196.745 13.2051 197.086 13.2051 cv
197.644 13.2051 198.077 13.3853 198.365 13.7363 cv
198.653 14.0874 198.805 14.6001 198.805 15.2754 cv
f
201.217 11.9272 mo
201.217 13.3223 li
202.882 13.3223 li
202.882 13.9521 li
201.217 13.9521 li
201.217 16.6255 li
201.217 17.0303 201.271 17.2915 201.379 17.3989 cv
201.488 17.5161 201.712 17.5703 202.054 17.5703 cv
202.882 17.5703 li
202.882 18.2451 li
202.054 18.2451 li
201.424 18.2451 200.992 18.1279 200.758 17.894 cv
200.525 17.6602 200.407 17.2373 200.407 16.6255 cv
200.407 13.9521 li
199.813 13.9521 li
199.813 13.3223 li
200.407 13.3223 li
200.407 11.9272 li
201.217 11.9272 li
f
204.07 11.6841 mo
207.553 11.6841 li
207.553 12.4312 li
204.88 12.4312 li
204.88 14.0415 li
205.006 13.9976 205.141 13.9609 205.267 13.9429 cv
205.393 13.9248 205.528 13.9072 205.654 13.9072 cv
206.383 13.9072 206.959 14.1143 207.391 14.5098 cv
207.823 14.915 208.04 15.4551 208.04 16.1392 cv
208.04 16.8506 207.814 17.3994 207.373 17.7861 cv
206.932 18.1729 206.311 18.3623 205.519 18.3623 cv
205.24 18.3623 204.961 18.3354 204.673 18.2993 cv
204.385 18.2544 204.097 18.1909 203.792 18.0918 cv
203.792 17.2012 li
204.052 17.3457 204.322 17.4531 204.61 17.5249 cv
204.889 17.5967 205.186 17.6245 205.501 17.6245 cv
206.005 17.6245 206.41 17.498 206.708 17.228 cv
206.996 16.958 207.148 16.5981 207.148 16.1392 cv
207.148 15.6895 206.996 15.3291 206.708 15.0591 cv
206.41 14.7891 206.005 14.6543 205.501 14.6543 cv
205.267 14.6543 205.024 14.6812 204.79 14.7349 cv
204.556 14.7891 204.314 14.8696 204.07 14.978 cv
204.07 11.6841 li
f
131.584 28.062 mo
144.184 28.062 li
0 .994 1 0 cmyk
@
154.462 26.2891 mo
155.272 26.2891 li
156.28 30.1313 li
157.288 26.2891 li
158.242 26.2891 li
159.25 30.1313 li
160.258 26.2891 li
161.068 26.2891 li
159.781 31.2114 li
158.827 31.2114 li
157.766 27.1797 li
156.703 31.2114 li
155.749 31.2114 li
154.462 26.2891 li
cp
0 0 0 1 cmyk
f
164.201 26.856 mo
163.769 26.856 163.426 27.0269 163.174 27.3687 cv
162.922 27.7109 162.796 28.1699 162.796 28.7549 cv
162.796 29.3491 162.913 29.8081 163.166 30.1499 cv
163.417 30.4917 163.759 30.6543 164.201 30.6543 cv
164.632 30.6543 164.974 30.4917 165.227 30.1499 cv
165.478 29.8081 165.604 29.3491 165.604 28.7549 cv
165.604 28.1792 165.478 27.7109 165.227 27.3687 cv
164.974 27.0269 164.632 26.856 164.201 26.856 cv
164.201 26.1719 mo
164.902 26.1719 165.451 26.4063 165.856 26.856 cv
166.252 27.3149 166.459 27.9448 166.459 28.7549 cv
166.459 29.5649 166.252 30.1948 165.856 30.645 cv
165.451 31.1035 164.902 31.3291 164.201 31.3291 cv
163.489 31.3291 162.931 31.1035 162.535 30.645 cv
162.139 30.1948 161.941 29.5649 161.941 28.7549 cv
161.941 27.9448 162.139 27.3149 162.535 26.856 cv
162.931 26.4063 163.489 26.1719 164.201 26.1719 cv
f
170.653 27.0449 mo
170.563 26.9912 170.464 26.9551 170.356 26.9272 cv
170.249 26.9102 170.131 26.8921 170.005 26.8921 cv
169.546 26.8921 169.195 27.0449 168.952 27.3418 cv
168.7 27.6387 168.583 28.062 168.583 28.6201 cv
168.583 31.2119 li
167.774 31.2119 li
167.774 26.2896 li
168.583 26.2896 li
168.583 27.0537 li
168.745 26.7568 168.971 26.5317 169.24 26.3882 cv
169.51 26.2437 169.843 26.1719 170.239 26.1719 cv
170.293 26.1719 170.356 26.1812 170.429 26.1812 cv
170.491 26.1899 170.563 26.1987 170.653 26.2168 cv
170.653 27.0449 li
f
174.74 27.0356 mo
174.74 24.3721 li
175.549 24.3721 li
175.549 31.2119 li
174.74 31.2119 li
174.74 30.4741 li
174.568 30.771 174.353 30.9868 174.091 31.1221 cv
173.83 31.2573 173.525 31.3291 173.164 31.3291 cv
172.57 31.3291 172.084 31.0952 171.706 30.627 cv
171.328 30.1587 171.148 29.5288 171.148 28.7544 cv
171.148 27.981 171.328 27.3604 171.706 26.8828 cv
172.084 26.4146 172.57 26.1719 173.164 26.1719 cv
173.525 26.1719 173.83 26.2437 174.091 26.3877 cv
174.353 26.5322 174.568 26.7485 174.74 27.0356 cv
171.985 28.7544 mo
171.985 29.3491 172.102 29.8169 172.345 30.1587 cv
172.588 30.501 172.93 30.6626 173.363 30.6626 cv
173.786 30.6626 174.119 30.501 174.37 30.1587 cv
174.613 29.8169 174.74 29.3491 174.74 28.7544 cv
174.74 28.1606 174.613 27.7021 174.37 27.3604 cv
174.119 27.0176 173.786 26.8472 173.363 26.8472 cv
172.93 26.8472 172.588 27.0176 172.345 27.3604 cv
172.102 27.7021 171.985 28.1606 171.985 28.7544 cv
f
182.165 25.1548 mo
182.165 26.0913 li
181.858 25.8208 181.543 25.6138 181.202 25.4702 cv
180.859 25.335 180.508 25.2632 180.13 25.2632 cv
179.375 25.2632 178.798 25.4971 178.402 25.9556 cv
178.006 26.415 177.808 27.0718 177.808 27.9355 cv
177.808 28.8003 178.006 29.4658 178.402 29.9253 cv
178.798 30.3838 179.375 30.6089 180.13 30.6089 cv
180.508 30.6089 180.859 30.5454 181.202 30.4019 cv
181.543 30.2671 181.858 30.0601 182.165 29.7808 cv
182.165 30.708 li
181.849 30.9238 181.516 31.0767 181.174 31.1758 cv
180.832 31.2749 180.463 31.3286 180.077 31.3286 cv
179.086 31.3286 178.303 31.0317 177.727 30.4287 cv
177.151 29.8262 176.872 28.9976 176.872 27.9355 cv
176.872 26.8833 177.151 26.0552 177.727 25.4424 cv
178.303 24.8398 179.086 24.5337 180.077 24.5337 cv
180.472 24.5337 180.841 24.5884 181.183 24.687 cv
181.526 24.7949 181.858 24.9478 182.165 25.1548 cv
f
185.404 26.856 mo
184.972 26.856 184.63 27.0269 184.377 27.3687 cv
184.126 27.7109 184 28.1699 184 28.7549 cv
184 29.3491 184.117 29.8081 184.369 30.1499 cv
184.621 30.4917 184.962 30.6543 185.404 30.6543 cv
185.835 30.6543 186.178 30.4917 186.43 30.1499 cv
186.682 29.8081 186.808 29.3491 186.808 28.7549 cv
186.808 28.1792 186.682 27.7109 186.43 27.3687 cv
186.178 27.0269 185.835 26.856 185.404 26.856 cv
185.404 26.1719 mo
186.106 26.1719 186.656 26.4063 187.06 26.856 cv
187.456 27.3149 187.663 27.9448 187.663 28.7549 cv
187.663 29.5649 187.456 30.1948 187.06 30.645 cv
186.656 31.1035 186.106 31.3291 185.404 31.3291 cv
184.693 31.3291 184.135 31.1035 183.739 30.645 cv
183.343 30.1948 183.145 29.5649 183.145 28.7549 cv
183.145 27.9448 183.343 27.3149 183.739 26.856 cv
184.135 26.4063 184.693 26.1719 185.404 26.1719 cv
f
188.923 29.2681 mo
188.923 26.2891 li
189.734 26.2891 li
189.734 29.2412 li
189.734 29.709 189.823 30.0513 190.003 30.2847 cv
190.183 30.5186 190.453 30.6362 190.822 30.6362 cv
191.254 30.6362 191.605 30.501 191.857 30.2217 cv
192.109 29.9429 192.235 29.5649 192.235 29.0791 cv
192.235 26.2891 li
193.045 26.2891 li
193.045 31.2114 li
192.235 31.2114 li
192.235 30.4561 li
192.038 30.7622 191.803 30.978 191.551 31.1216 cv
191.291 31.2573 190.994 31.3291 190.652 31.3291 cv
190.084 31.3291 189.652 31.1577 189.364 30.8066 cv
189.067 30.4653 188.923 29.9517 188.923 29.2681 cv
f
198.805 28.2417 mo
198.805 31.2119 li
197.995 31.2119 li
197.995 28.269 li
197.995 27.8008 197.896 27.4585 197.716 27.2251 cv
197.537 26.9912 197.266 26.8735 196.906 26.8735 cv
196.465 26.8735 196.124 27.0181 195.872 27.2969 cv
195.619 27.5762 195.493 27.9536 195.493 28.4307 cv
195.493 31.2119 li
194.683 31.2119 li
194.683 26.2886 li
195.493 26.2886 li
195.493 27.0537 li
195.682 26.7661 195.907 26.5405 196.177 26.397 cv
196.438 26.2534 196.745 26.1719 197.086 26.1719 cv
197.644 26.1719 198.077 26.3521 198.365 26.7031 cv
198.653 27.0537 198.805 27.5669 198.805 28.2417 cv
f
201.217 24.894 mo
201.217 26.2886 li
202.882 26.2886 li
202.882 26.9189 li
201.217 26.9189 li
201.217 29.5918 li
201.217 29.9971 201.271 30.2583 201.379 30.3657 cv
201.488 30.4824 201.712 30.5371 202.054 30.5371 cv
202.882 30.5371 li
202.882 31.2119 li
202.054 31.2119 li
201.424 31.2119 200.992 31.0952 200.758 30.8608 cv
200.525 30.627 200.407 30.2036 200.407 29.5918 cv
200.407 26.9189 li
199.813 26.9189 li
199.813 26.2886 li
200.407 26.2886 li
200.407 24.894 li
201.217 24.894 li
f
206.752 27.6748 mo
207.175 27.7651 207.508 27.9536 207.743 28.2417 cv
207.976 28.5298 208.102 28.8901 208.102 29.3037 cv
208.102 29.9517 207.877 30.4561 207.436 30.8066 cv
206.986 31.1582 206.356 31.3291 205.538 31.3291 cv
205.258 31.3291 204.97 31.3018 204.682 31.248 cv
204.394 31.2031 204.088 31.1216 203.783 31.0137 cv
203.783 30.1592 li
204.026 30.3032 204.294 30.4111 204.592 30.4829 cv
204.88 30.5547 205.186 30.5913 205.51 30.5913 cv
206.068 30.5913 206.491 30.4829 206.779 30.2666 cv
207.068 30.0513 207.22 29.7271 207.22 29.3037 cv
207.22 28.9253 207.084 28.6196 206.816 28.4043 cv
206.544 28.188 206.167 28.0713 205.681 28.0713 cv
204.917 28.0713 li
204.917 27.3418 li
205.717 27.3418 li
206.149 27.3418 206.482 27.2612 206.716 27.0811 cv
206.95 26.9097 207.068 26.6582 207.068 26.3247 cv
207.068 25.9917 206.941 25.731 206.708 25.5513 cv
206.464 25.3706 206.122 25.2813 205.681 25.2813 cv
205.438 25.2813 205.177 25.3081 204.898 25.3618 cv
204.62 25.416 204.314 25.4966 203.98 25.605 cv
203.98 24.813 li
204.314 24.7231 204.628 24.6509 204.925 24.606 cv
205.213 24.561 205.492 24.5342 205.762 24.5342 cv
206.428 24.5342 206.959 24.687 207.356 24.9932 cv
207.751 25.2993 207.95 25.7129 207.95 26.2349 cv
207.95 26.5947 207.841 26.9009 207.634 27.1528 cv
207.427 27.4048 207.13 27.585 206.752 27.6748 cv
f
131.584 41.0288 mo
144.184 41.0288 li
@
154.462 39.2559 mo
155.272 39.2559 li
156.28 43.0986 li
157.288 39.2559 li
158.242 39.2559 li
159.25 43.0986 li
160.258 39.2559 li
161.068 39.2559 li
159.781 44.1787 li
158.827 44.1787 li
157.766 40.147 li
156.703 44.1787 li
155.749 44.1787 li
154.462 39.2559 li
cp
f
164.201 39.8228 mo
163.769 39.8228 163.426 39.9932 163.174 40.3359 cv
162.922 40.6777 162.796 41.1372 162.796 41.7222 cv
162.796 42.3159 162.913 42.7744 163.166 43.1172 cv
163.417 43.459 163.759 43.6206 164.201 43.6206 cv
164.632 43.6206 164.974 43.459 165.227 43.1172 cv
165.478 42.7744 165.604 42.3159 165.604 41.7222 cv
165.604 41.146 165.478 40.6777 165.227 40.3359 cv
164.974 39.9932 164.632 39.8228 164.201 39.8228 cv
164.201 39.1392 mo
164.902 39.1392 165.451 39.3726 165.856 39.8228 cv
166.252 40.2813 166.459 40.9121 166.459 41.7222 cv
166.459 42.5313 166.252 43.1616 165.856 43.6118 cv
165.451 44.0708 164.902 44.2959 164.201 44.2959 cv
163.489 44.2959 162.931 44.0708 162.535 43.6118 cv
162.139 43.1616 161.941 42.5313 161.941 41.7222 cv
161.941 40.9121 162.139 40.2813 162.535 39.8228 cv
162.931 39.3726 163.489 39.1392 164.201 39.1392 cv
f
170.653 40.0117 mo
170.563 39.958 170.464 39.9214 170.356 39.895 cv
170.249 39.8765 170.131 39.8584 170.005 39.8584 cv
169.546 39.8584 169.195 40.0117 168.952 40.3091 cv
168.7 40.606 168.583 41.0283 168.583 41.5864 cv
168.583 44.1787 li
167.774 44.1787 li
167.774 39.2559 li
168.583 39.2559 li
168.583 40.021 li
168.745 39.7241 168.971 39.4985 169.24 39.355 cv
169.51 39.2109 169.843 39.1392 170.239 39.1392 cv
170.293 39.1392 170.356 39.1479 170.429 39.1479 cv
170.491 39.1567 170.563 39.1655 170.653 39.1836 cv
170.653 40.0117 li
f
174.74 40.0029 mo
174.74 37.3389 li
175.549 37.3389 li
175.549 44.1792 li
174.74 44.1792 li
174.74 43.4409 li
174.568 43.7378 174.353 43.9541 174.091 44.0889 cv
173.83 44.2231 173.525 44.2959 173.164 44.2959 cv
172.57 44.2959 172.084 44.062 171.706 43.5942 cv
171.328 43.126 171.148 42.4956 171.148 41.7217 cv
171.148 40.9478 171.328 40.3271 171.706 39.8496 cv
172.084 39.3813 172.57 39.1392 173.164 39.1392 cv
173.525 39.1392 173.83 39.2109 174.091 39.3545 cv
174.353 39.4985 174.568 39.7144 174.74 40.0029 cv
171.985 41.7217 mo
171.985 42.3159 172.102 42.7842 172.345 43.126 cv
172.588 43.4678 172.93 43.6294 173.363 43.6294 cv
173.786 43.6294 174.119 43.4678 174.37 43.126 cv
174.613 42.7842 174.74 42.3159 174.74 41.7217 cv
174.74 41.1279 174.613 40.6685 174.37 40.3271 cv
174.119 39.9849 173.786 39.814 173.363 39.814 cv
172.93 39.814 172.588 39.9849 172.345 40.3271 cv
172.102 40.6685 171.985 41.1279 171.985 41.7217 cv
f
182.165 38.1216 mo
182.165 39.0581 li
181.858 38.7876 181.543 38.5806 181.202 38.4365 cv
180.859 38.3018 180.508 38.23 180.13 38.23 cv
179.375 38.23 178.798 38.4634 178.402 38.9229 cv
178.006 39.3818 177.808 40.0386 177.808 40.9028 cv
177.808 41.7666 178.006 42.4331 178.402 42.8916 cv
178.798 43.3511 179.375 43.5762 180.13 43.5762 cv
180.508 43.5762 180.859 43.5122 181.202 43.3691 cv
181.543 43.2334 181.858 43.0269 182.165 42.748 cv
182.165 43.6748 li
181.849 43.8901 181.516 44.0435 181.174 44.1431 cv
180.832 44.2417 180.463 44.2954 180.077 44.2954 cv
179.086 44.2954 178.303 43.9985 177.727 43.3955 cv
177.151 42.793 176.872 41.9648 176.872 40.9028 cv
176.872 39.8496 177.151 39.0215 177.727 38.4097 cv
178.303 37.8066 179.086 37.5005 180.077 37.5005 cv
180.472 37.5005 180.841 37.5547 181.183 37.6533 cv
181.526 37.7617 181.858 37.9146 182.165 38.1216 cv
f
185.404 39.8228 mo
184.972 39.8228 184.63 39.9932 184.377 40.3359 cv
184.126 40.6777 184 41.1372 184 41.7222 cv
184 42.3159 184.117 42.7744 184.369 43.1172 cv
184.621 43.459 184.962 43.6206 185.404 43.6206 cv
185.835 43.6206 186.178 43.459 186.43 43.1172 cv
186.682 42.7744 186.808 42.3159 186.808 41.7222 cv
186.808 41.146 186.682 40.6777 186.43 40.3359 cv
186.178 39.9932 185.835 39.8228 185.404 39.8228 cv
185.404 39.1392 mo
186.106 39.1392 186.656 39.3726 187.06 39.8228 cv
187.456 40.2813 187.663 40.9121 187.663 41.7222 cv
187.663 42.5313 187.456 43.1616 187.06 43.6118 cv
186.656 44.0708 186.106 44.2959 185.404 44.2959 cv
184.693 44.2959 184.135 44.0708 183.739 43.6118 cv
183.343 43.1616 183.145 42.5313 183.145 41.7222 cv
183.145 40.9121 183.343 40.2813 183.739 39.8228 cv
184.135 39.3726 184.693 39.1392 185.404 39.1392 cv
f
188.923 42.2349 mo
188.923 39.2554 li
189.734 39.2554 li
189.734 42.208 li
189.734 42.6763 189.823 43.0171 190.003 43.2515 cv
190.183 43.4854 190.453 43.6021 190.822 43.6021 cv
191.254 43.6021 191.605 43.4678 191.857 43.1885 cv
192.109 42.9097 192.235 42.5317 192.235 42.0454 cv
192.235 39.2554 li
193.045 39.2554 li
193.045 44.1787 li
192.235 44.1787 li
192.235 43.4229 li
192.038 43.7285 191.803 43.9448 191.551 44.0884 cv
191.291 44.2236 190.994 44.2954 190.652 44.2954 cv
190.084 44.2954 189.652 44.125 189.364 43.7734 cv
189.067 43.4316 188.923 42.9185 188.923 42.2349 cv
f
198.805 41.209 mo
198.805 44.1787 li
197.995 44.1787 li
197.995 41.2358 li
197.995 40.7676 197.896 40.4258 197.716 40.1919 cv
197.537 39.958 197.266 39.8408 196.906 39.8408 cv
196.465 39.8408 196.124 39.9849 195.872 40.2637 cv
195.619 40.5425 195.493 40.9209 195.493 41.3975 cv
195.493 44.1787 li
194.683 44.1787 li
194.683 39.2559 li
195.493 39.2559 li
195.493 40.021 li
195.682 39.7324 195.907 39.5073 196.177 39.3638 cv
196.438 39.2192 196.745 39.1387 197.086 39.1387 cv
197.644 39.1387 198.077 39.3188 198.365 39.6699 cv
198.653 40.021 198.805 40.5337 198.805 41.209 cv
f
201.217 37.8608 mo
201.217 39.2559 li
202.882 39.2559 li
202.882 39.8857 li
201.217 39.8857 li
201.217 42.5591 li
201.217 42.9639 201.271 43.2251 201.379 43.3325 cv
201.488 43.4497 201.712 43.5039 202.054 43.5039 cv
202.882 43.5039 li
202.882 44.1787 li
202.054 44.1787 li
201.424 44.1787 200.992 44.062 200.758 43.8276 cv
200.525 43.5938 200.407 43.1704 200.407 42.5591 cv
200.407 39.8857 li
199.813 39.8857 li
199.813 39.2559 li
200.407 39.2559 li
200.407 37.8608 li
201.217 37.8608 li
f
204.214 43.4316 mo
205.663 43.4316 li
205.663 38.4282 li
204.088 38.7427 li
204.088 37.9331 li
205.655 37.6177 li
206.544 37.6177 li
206.544 43.4316 li
207.995 43.4316 li
207.995 44.1787 li
204.214 44.1787 li
204.214 43.4316 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (006x003.eps)%%CreationDate: 26/05/15 5:51 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6pNe;Ldl=ir^cgV+Z_;GZ`WYIDS?n2lNpU<b)">3,I"2'sIB/T9h/kSMQu?X3fe^r^:odTm8h-**;C8a'po2#WeDE/'s'86t%\rkQ<2f4pcg2u.M-F<Yj;Jc[)A9CDmZ!paV$k$gN=\Z0[%4A3E-GEMs]_m.Wl^d':j/(II(E0\NX1a`Mr*?;"%k;MeUlrHpenU3E%Uc3(SQd8VX^LKHn5AJ_hU\.XOUfB:Q@%jS`DZ5%5?4VP"Su\ui[#S8MGP"DRjEV]uJnFO7/`*JAe:(`)a3\MmFls,R\+,%J8A:]s%4!!Mi@%m^cKnJ\S)*oZ^s39>j<8TmnSQ;TYdAYsK16AV-o;g=9K\$t6cVh0Xm:u:H=nSguX)t@p7(Qi>9gFtkHJ_k"kTm.(=n"\a%d\_XSCu-n-FOe,iWrH3oDc\HmeJ=uX^=>7Bp`J_*C)Dgp5O"AqT3AXF?N93hFugDLPXGb9f4kbFM>,3$arBXI1uNf1$>5XT>I=Pq%Dq'6?mn7AM6N@ng=8oA2..n.e;6sFjCKqE%(G..QX,<%J$odJjL7Zu%XpH+j'do"@CDN`b&Mai%ofaf9C_@]JODNk(0lZQZp$q`Q%?ZOSQRRnC.ebXO`ph=MXLOP?1A0'oaQiBjd"p/m-eN3""#[$'$CI_7-#H&9OffR8[^%)3R;`/5)kj8@.RiiUA@\m!(TVeReHiBMk%r4@T%VSGE%a%smq:Y3S36@kKg3r[ZPI&cN-<7gB`EZ*c3Dcmk,Z7Pob=]ikQYa/jcbIgR$`B(/[F^,_O#QJ6bf>Uqg%6q*uTn'NX%"amXQ^aFg;egZsUBt8%_pia3,cc]nr%`Ogp9C\\eku2tn5M&3Rn.TSGTC<M0@@qd?kqhZ<IUX>a&Un3(3@3n$fI-U8?e?V$`0MgB%BZo$Qr5='E?S'/[+\YL&$6O%l^[Mp&Pfm1Kq1G&5)H/+`.cDb'PP1MU:N<;B;<Wfrk7Om`s'[MG++@ZlP_6?poGQa-rl&'n5L*\0%(&BQV%mTS#p5\\c5:P_sJtH-QqhLf.Mc<:s>q(/SaCP?+kOQN97e*6Qa'+^FS1_23'RRcgi^MhSQ8u]n%K6n(@.1U9@dif'g2$O!%qhLeGMon!PO4&]qMk=)VH^Dloal^0%.7YOXl/jbFAVEbr@SS5'ao^0&c;R>ZMB/NSKhLZbQue;W^/<[j(5GXhVsi*toH2&BC*o3X%b&^/og-V5*U[m_b4+/KAiS*R2(8m?Dqc(/;gjAUIDgO7X2;R:JVm=>J`/%>)htF"bETQt9\?oQ<VQ)-,+9&*;;.]baNBZn3dXO6:%iBQcarKkZo-8"cedXS]"IsZ\05KBJ4*J_OUfY;g*54SX#J")r"\+c6g94`uL>2oLWs%4U6g\XYD.H2GWkK#a_UjT#Rq(MR\qPP27%_^lT=UKl)+FqG)?48`Y9ZsNN7j@i7,U12/+a1%humLsaS=Ah<WDAQ4h]9md^"$c<?m'!;8^T&4H(Mfp(%],7SgSSi7p/RCWeTCXh%(O-PU-,c>'/nu_B_Vgc4J"c:Bi4"R4nSNO&o%Fbl?%?fjCuC/nEKb0:Wc@520,I6beFi#n+X;1*^T#mTr(F"YT43X_`$_Y"0T6iK%nh.9R<e0hZ^g:fbWRLSR!r5Kbc\+J1(.t:"bBOY6@;SZi"-'7lEmAnhe,N"=Mf4M\EOZcAc92NbmH,8E0o,1Cr/YU#$li1QP+9#r%983o=;46H^l95Wnqi+Y%bq&:u>0uk!jVh#/q*DP[Id'7(b+*tZ.7.J1+ZE$7CK[,%rs5)e(/gUZbrCdRn/&JJ?1d;ule$[ColQF-%!dNpllu78C\k4^?'$RbQa=-/5bM2]]1S0r3IQL"9B@Sbc(GHZ20"'%&c#qaXXluYmmk_F+*Y56W&6L68]"B&uFHhX[RcK;k@=n[_%50,0BEC!auh6i0B-UgL/cknC;+DW.+Ji,MnKp:e[%mi1qgBRW%3D&.F$>OW"l&p%_i,O_)6qFt`O.TJ"Eh;n7ALPmkGsKqP?i=ng%1*L?TL$c9D>'FZGe<U=.[Q0,RFl8_As'M"3Q-(2F;'FR*ZV9JrK?sRde08u!MDq>T$_0\6A.e9JP((#B^?AMDMX=95NoQon:^KTC%>#uN+M:=sc',HEk[6:UqFs3JZrHcIR""kmsj\^Q@Tn@4)qs_",S+J`9UM`@N\FR_^>1,RJW>`*bq*JC+_b46<G[1AN76F/29Jut>%.U;T0(of']?OFH.(Dag(<Y<tn]4Jq3P;PS6N"Y;,WTu;Z!]"C&WI?WE&Ej:W^b,h*?u/H$KCg)H8N9`\[(7]f5agO:Yd$o=5L:a`%CBRFei(9TBRVZK5A`ls$3'ouha2R:9--4OqC'fT2f0%f*R'\7)1XVe')k?2nkB3)i,^L5kgI5q0;[n'UDpiiH-Lp.=[:@uYOnU[b%_dX$S(i<O2*YFdVZLPC@/AMuG2:&@sYb@l-&hL^IfpX,(&c&7=rI1cG$a5,oA!\0fO"SK_!i[H+Jo%fZ@24JR.5L8j>%rj&LZ/Qe%_Kr&*@n"4t:c]qL]j_nt+<f9W@\HM_HN6H@#S!2O9B!E@HAI%/45AR8mnhgP5*Zt?!]78I)?T&j*iCmMc`aL6Us._o3^`\5p[h+B%ps%lqbcMo^$Zs%6(5T%il_*=<ee--:-<"^EQHS(L6+Yt_PXu:gaBSi3>Ma^cdS-Z`<K\2c;+[OgV?KEqX@m1-X=i\.kJ*7[D'<Cn%M/^Dpj#+9(()5KMr9_q$*!9Z4h#d%B^rC(t*27;E*'hcab_#PWbT0<_hjjSTcZ:3d?.LNmO$lBOCoHY(n8r5;LY?4cT1q&#H*,f7%\iQ[P?4=2SM;D@YY%a\<.EF=F.&sQBL=e6pha;kU'sJXW:I[1e)Y3WYCpL=&pE5_U<#Hm.#A9COCk[j:gumWoD<T38(SuS;;2`sM%Zo>'/mEp,'F.s;NM_b[fC1&#\M\>0,#9>LB]3=#)QH<NEKhb,d?]03t\+jZGGl$F-k`%f]YWb#ZZ-cNcea^JQr@W<;Z"ii,:fnEs%b(pr)Y>g_>B3L5cL@gt]d%iS=84.$%eFoB//.m&fCT-a'q+0Nb[nY%mMp$W0s7Z?k3eLjNBpj6_%ZsEL]D9HdV9Jap3!rc*2oQLq%\km/)\HhEE6[>68O>!rm9kUi*k\j@F:qL<DHl"PI\2XP1WNt"rD6Z#ZQ2j%4b*/Y,>+lk<nQo@Q^C>e*6"j^p)\c%TY0NXq8atjS%Abn=:@t>GiY\eYDUWe-%3>PKOr!rb!>6pb(G!G0<,-XJV.e+u"^Tod*U.o5W:%j$-p<W]>ZC1rBr8aG,n].js)mt?ZPVT*9h\ImR%Tm\E\8<LgL!fl5&`Kl@F$;*&LF8.5O2)a4ZI"!$r#tA[]Z]1Q1AW_dC01t?l/";6M3@Ul'2b.Ek0J\r]9U8h<V@a28AeJJbgdrK;%7A'-W,_0SWmGFe&/3XI)2!<9;&q-8DP!h]0/`mcd*'9nHGn-$H;@q_^gY!E94L%#F[.fL.ZA@,/;r<</j\LPb]h.=AcFk*$H"8PR%V*Xa%;g=a9UZhU'0+#';E"c(`L:KlZ,JOS5k$n2e>"-bt;U4f7&%..TPS1-'"keK*=Wm>jC".c=<U-L9\u,q->_qjf9pK`X;l[Ul%g+3,&BRJc2H(2"[*k*&q`Z'=Q^69qBe]psSXtZ'sO,"1CrDCU8hp`fpi]J:6Ic/USX7=ZoWW-k3B(E-bkA'jp<I'.1l(dE+eX+Qt%HA3/ZhbJYb3n8'.UH':J:q9V@<R^R`]M*eF^V/MW<e!&3?f(+UZrI(+>&,skAjo:frgLR&[$n[t5-@oNPua?<MjF*%rdlL4TTRj7%=-fN,C9-.nJrs,*PlQ?%$IY[PJ1@,aoOb4/Ir1+PktaP'[&eIuV_>PETU"AMrNtJ2B8oAT2!]W:>%bgM'^Pc\?lY@Hl:5thTPd<%%64d&/ebRf_J_JK_i8MG]og5KUqflmVRdV=O@/rWc$V9nm5D&S&f5m_\dJi^t8Lca'ZoT9^[Hd#6m8!=)Xu3#pmuR;q#U6Nk*k%'3%->j&]T>"Bq<RPLB]hE14M?_<qYe[Q(?!N=I^+OhcgRC6Rf;e4;DQhpl:S%DS0;W8u_>7/\C7Y7TFRHC(<D>-BEi1!d:$;qbU83iJ%$JSYS$/\KUI#lZ]MXPUadT:q9O'VPO#E&ME<gE;CqY"5e^I%J@8IDpN?+m+UeEecbdQ)gcIgLkV,nIb^SNO()WZ_'>MrWu"eBThf%WL`>.Dg)&A3o1Q9G[(-.E$(O4l.4Ai;IL,CW="&A"Uggq^K<3I'I\oRSDhW"]$V,g0unbG47UqC$W<bJqO@C`c#iBL>,h<e#M]IU%=K'ec"cu:mRhq`l&ll,?CG]3b^ON_nXCgnc@/mJ$=s`R^9Y<.M+Ch=?((U-rs8AtJTu&"&e3WNdHf<<NWmlK""ZN",JSt6(GQ)Kc%Vn%2U<M>uSA+3Lc<*k+k_]tfaL;7/]ejni4LAN7NrrsbJ+33>iP7#K>SX9)3g2!`mB6=9E+B=*"[Is(fdm6A<aJ3X`rbJK=5td&<%p:ni(`*MqDN:4-?rp#@(bZ):S#cqbo7oYamf)BmHi:We5+llM+cFs._4,pFnC\N4kU;_+;.B#+15-(m#ku;TNX8b?bEU6'bZ-i\2%4<ts2e[O]PZLM9"p[q>M`BPdTI43:Rfb,PUP/$JQhuEM%C]nS+5$n4Q1&R/oS2Ph"03+1UnuqDD+6E7^a4krZk=="WXCA4kpNQW`%o$4N/B#T6`?9@U=];;Q/f$R1g?e-f`I!;dnmbK+Z.J</pdGLYC8^H7L"L*AWDuL^,S**6Gr29MYmg`&7lJ9!mDR7acp[kJt"94P#%(<36OQ]JPL)fS9"]G,l=U1ieOcKLVPiN\M3V>aPmNCeXEg;.O&C0Ca:aEg@&^J]RYWOu6[a,MFceU7Ko?8uh&gXXk^eb!#;^R]K2%oqPH2rht6erq8:2R?./E[?;oRP]"ejcqXLCnY=pA<W51\Zp"T-GM;jnkIFH(]s7X'k=@(i<(UrMET<hN3N:TT)CJM\EH%L0DR;V>%)L8@2QYa^Id^JP3dYjnV8W/g5#I?=R`6E'ki]4G]oYf)A+"tDr0)C@/nR.KWr(0.;GQWV4h4.<i^M-_X[?YWMSi$GH[[J$l@j7X;%7^auPk)"b'7TS;^Zp+Je;;[[oB[+t)K/"oZ*UV-QX3/CA\m64XCK=bpkieIPfb)Jlg*_8ke?e;70IMV>fMT/AW\UkT,du@-dXO>F%dpf>K+JIl-8d'B4^#aWAK2NPfI/6a?YqF]f#c+6,4l8Q$0.QXUp,becWC@hWGG,&T8CRXBoRRs?@nNs3g[1bmZURl>5Dge^qSbu%%KA)U>:8LmKIu?"ds48Mjhl4@ks',J9[<pgJI-%a3d\nt$"Btq<"^a)@9i).-8T?:C)/"eb%E2N!_N;G'g@-mW0bVPPDE!up7dCfO%GXH+PK]lD#01*A41q$Y7WTNMb[@WXT:BIpK76pK+<7i0X:F66O4$bStdYjusoR+C\p)e_pi=D-+B\Q0FqeWHIR^sBg@:=Lmal;"0%3"o#d8p2#%a4LIpg2pRiNN),-O7#(!MrgPVW+K)P.["<<RGTIne8!bp\ptP]8E":\+T,.7BVo,T(cVJ5\lF02GM7M42MfPEE,0%U%kBG^'Kf]euGT[*I%W<Drn5KGI^rZkh.d^!=[J1P'J9RS82,?p\%qdiWX>HVoqr@"?7b!LHiV&r@qXO0Bp.fY<n+L#'I)`J-JG=ki%[--<0MI6QR55OM#Ilcg-K':8T&Ej`h`]MGlS7l)>1+e^r?8R*l[?#Vkh<qWgTA3fAg$l<aXtb?L+&q"`4g5DW[%*W42No)LMns3#%,9&n_;Yt,4UoW<fF98ka.W+;_lQS%0XLu9)ks0\FSc@q2"KL;5&#E//4SaXUC.W#&RM>7*8G][LGkm#9JOp;7J*8?:U/=XbeS/%K%m:HMK7PB6YCEK`&Z2`j0bn7(s,52*h"$6s>Y*'WI6M*CF=@T=*1g7*5f5@I`F,,`M5EC(CEo+_epS[PO,n>=!<o\uiadD>D`o*?a%%3XJ2?k`uLD,k#Ed&nQNXn\>ML7/t8U2Y""IPd\5i-`OGj'AFf4HnN"&#Q!t-^Ma,'/s(\2P+p/8K+QIU3tdMSgcLh"0^t[dFLlq%GLLal4/YS_<O3*\;-VH_`OMCs-go.oT\fJB+^At<N*7m:f.>.3n>IPW0SEK.[Ba8Ap5Gme`Rb88'5Da<,dcTIIR+3,%;I&t0SH<<%Q"K_QVBr1l!QTqq8/OFn:Aa.L*qYi3lSNB1I/^-6@b&Ko9pRA[>%+h-DdT,>EgTbbp[9YmE[@mFnn,'3C3LT@`-#kR:rH2#<!ItR%I19X+9%5MNKAl(rg>1'&7G_^p2r!#3or[5-?6Uj^J"Y)k0dXJ)%1GZW\rknC::C,m*%(nljgEZUrGIG$6s/>\26ZmcFoL.>U72m)%JLLsEqP1=dC3mc>)>:s_K$3*pmN_!SR]eq=.^\5UC,B990a`VXLrO`ZSbHkLRLhmTd#<F(WU*LLV:CAFW@,LjYH2>*9)<>r2nB^O%b"'sco)-o2W\f?MokiHA1WV6u<Jeup`R84W8+lan=2B+:`1Jc-[+T9k'Wf?jg[<Qnok*eQ)AB4G9)Bt#-"n1]U.Wq2=F,RcE*TBN%lER.I&Yer$>pklK5a2dA&C3.m]de>od4r#,Wq+T1l%TQ]<0IG7Pg*$Yod/2!EohTBqYSb1EX"!;4h?5F5nSRJ[QiX6]uGB:NB"7a%j"_cH6eZ2j?0skuWl]og0J^'4W\%a(6!`@J).A'BdseI,ifk)A[A5CXdKDAMNjaP*`AYUaqW>n7BQr05S28]rm5Y$t=^Xj']dOqJ%i]I;I%kQjYqYBT%Ylt5Q.pg!\F\f7_,ogKiKX/X,g3.jT8I0XRC@?.j,`_@5GNWH$Y]dmnK2n@VD'e&\KL)O3hIuj`+q$t1$1t^u%dA\FuWDlEFNVDQ8O]'oQ^!]&uUhUqEMSAeY%s-;$l6et5ORL*i#?nLG[&+TtK58r`4$ck\dM-;.7D3?Bd3\mg_um0ll]"YudZR3b%eBr/,efn)0g[BArC,K>6CFY)5.WO%@ND=&?CbLaLo7\Dd4'&Lu%t<ds4f\9FaZi_Lo;^5D=cSK/?7>:;j1j-uEOGJOqVmX&<pY^t%f-S^4<-`E[BD^_s48s>*q5\fAU\%'_<mCO%)nq[YFJ3f(RbhdZ??&/'1=KnN0$:8RGA-IrG<s->S$I>6Kd0SLS_m$-@fQoNFq=^X%dLJV5j$d;>%k[?E$s#,R8DPL+QTOdc-;dc<jT&ppXTF6Q$S3QO,);s=9SjJG,n7eGG'g\`fb)\d)PGJT@.d]gUXo*m\%8.0W09b6%NX_\`V4\Lk2CL[R'`=(];BqJfr]61sU",mjZeQS>nktAC3AB)(c&G#Jpp3p0bN0?FN9*hC4$/I*XJ0FJ<p/)Y-[U=@i]3ptjpr6i%fAAYNIaa7@?V@tTn4S-R&!ln]Zd*1Q\%D=D4`Rc2.K3ANf>LU)IeCX*+.Lfi=2u(tdjM-=f_jIdb1Q(>NB=T<rW/(OIV6^`J!NjM%((RL)@uJK\VW:d]B*`a'X>'OpBPZu;5d'lrX<0U-l'm_$=?"g_c-#$E\RAk1b,b89fm^"<;OLR$D=op(cog+>fQ5e_cM#Cl[bSAI%/kW7X)l7dX^-4'Nk#Yp>\\)3\;"Vm/\crkDSSPWlZ%\*kSZtUrd2AF'adutF*%WV"/Ngb9A$[8L[B\E1jp-'H<plE]E2)EPdh;bM%G+A6e.8rlNY\')=A+eQKADM(/&*Z%HidMin-j"q":HMY^d;7W=DN1a3n,1D5D2h887*XlJc;lEirEMQM6buetH(DN!b0;QJY?L\,%`</NXLE;NqhOVD9`jMX'GYKK[4Hb6OT3F_pBIXYqC];aH>>[YX>5-pFo*D"CBBuA!W.b6Um^J`[26*k7L7?;7L'(^!T5%.t2O\&>%><bp:adM>6P</i1njNV\Pa1p,#b]beUpL!R%0pWQh^RZnc!OmE;jm?(\[dqbqD^G@l`7<KdFaK_3k`.D*(5q`]QNtCm39n[OQ8"q%O'h/iZSN%D)N?AP/krK'TZ>O1!M13Bp/[.Q"m(%_GsG4WQeV8:qho)2o<[7<QQFECf=,!5d"fTH_apGDme>s&!Lh.6^]IS'7GCK,%m;S`=p4IAX^:t3`Zou*GXbHjNAH8h-5!-G\h$WHuEqNTb]?4P1d.-[r4aHUp*JFMob4kXA!YfKlYclVGk-KM5L]UaW[MGGe_LZSR%q<@1'I2r=1lr^;EZ*;OMHG)9O:n%&EA+bi`/_ti@I6_^OP^RmU7A+^-5e!d'U8b+#J@1l_^@'n8<$Hir'DCU)q&p)Y;)t#UG6:)2%$3e'5]sR=-Fa+N+oQ5@^Ns*$q4k5f'TXTj%l/V+i5RHiDhKJS]p1AIp'^3MXr@JZGl2*,GI6F5/Kn8&X0(t_aiB[/1b^"JDAMkH@%F*B_Zkf)T5G__7TTm](%0%]iTiBRq)8rjLtmdEMohB.16"Fq+5%.'U%o<fP=oZg>%gU5">TSJ#c?Uq8oLB;nZ=Tk36g"09eFFGbB%kk2JaqY8bR"mR'[NfS&409uV%dPh16UR5\ZINIlH#4u&j%4KKfc$j5a!7dsuB"%Y$h,g31QLY<'TkgHLr:?K%9W>XbB)m+_'f:X3%`mcI?g0($YoQ1KGqH4/Io30u?)o@;0qg<5hJS#3bk_j8BFr#@1$_7:Eq;q!`MZR0cpD/0Bc1cphEVMqPlB=kp4[7:b[/?3P3eC@`%I;S)H%5,E-@mU!-r`Rrc5aQq2"6:J@<1hJ"n5cYR=on*/gch?VBInGT"&H+MWF$H=:Z'Roq?_Mk/3fNYi`*kN^k8W^6A@Z%;mc^'%/Ot6MGdfo.i7%Q"pf/dWq:n0j=h9N=l=b5d:XMtq.hC+cdf@@gM7b`ho+Llmrd9-"MgkMMoQrUb.A<+dEA[[c]H-ONZTY_0Eo*Zh%IntR+J[Wnf5F2>RVs=%TnEKQ4Bq80RjS;5aSpQkK:G4NM\Zt@rGK$CYmqETWSh^iMAE;Kp3lfM4aJYXHg?,TCVi5(lTB3J9W4/J4%^R!-cVn8D&FqsiFV>bkR+&0#>Z)O;+\]C\Fr5!G3o'*<c5-@@R/3g"+c7VPuD/Ll#eN)LLV4$G\e+p=Wm</-0OBi0-jn@BVem(E*%3RQNja`["]LHSqXff5.e_UM8J)&="N$L#B$h\NlHR63>W5FO<*1T`Hi1Z-(%ii[V;1Z(E0plWP$o%6;!UjsPR@-ZN=oZ#QpOBNJ*%YB$qjm:L-=RpJ6aA>=^EO[k58#p!#npPVdi?tq$&;sqH#:W#$[l3D/]9QpKrmhGkA,58A=4:AT7]S+b)7A$iNJ^1H4DndKH=q_S4%c.]9^mX&>]\@m_%$:E/^2%licrdB#0#*e?[%[\nXI79g41/R"Q;?H,'DOsHc?`0bJ4J;(upZdSlmcslTYC02qh/]/m2':2ulU[[6%hGl-9..bI#gd1R4%hKT@%M'.:YOA653aQ\C^2`&f=#+uU"H%8UpMccUA(`Q/A1g?emS?=cR!9m=5g^Z6oC93QEq&-/j$#G,Kq$\t%pmSSH_p;DtB0C%iqk8+S,[6XlRcZ\q4(^-(U!IrYGpss!.IP[/QTs1+k.giC,/sf-Ek9)'ZM.hr@q'/gqcIXZ]UlC-5)E>A;:h8C%.nqIAKFP#ngQR*m%VtL`D%XumV1aqQ53%h<==[t8a21,p!?_k/#N0"m?!D0o._\Fk0m]>"pM)E-5#2#3$Pr:o'%MmGAP;IZe*]7e%q>;(Y:>oaOB9#oGqYYn0h(LNRSruV]TY.RGAhrEL7Im`#8tYNH(eUb96gF2S)FX=-6(;1^G.`W*+AbXcY20+omWh22-TQW0e;XZl%.0Y'S0n?M3r?ECIq0*1PfA7L;&H/)VllS:&kE5\[R<UIs,6&P^$11;8eeEEHh2SCTRt&So)G;:@bDTib+'PtYm_7`GSk;b'E/e`>%e/Z6k"0o5X)g?Kk@eiaEXClk3\.A?sPl.W5#N\G>DPnco&DH/#EM)Gi&`XNj]8)OlDZhs+V$6_3BZD@2h,8U5kgrG[CkldPM<0G7%m5go*JfFZ19jbXp4,>7@nmuTT$Lp<:5c$H4UfZ+,lkJK/Q`ue^P`*Q.*Q"f6Q%Xcd6GJ5"R[jNPY)3g->%jq$am&2!&f<nMKYe"i%6kUj@hO%[3Z6LW_"GFX+X9P++EL:9rq=SX.HcWCT_mGFl'`6Fmb4sL_/12gpKl_A;5AjV2fP3d?@";gY.IBPZPd;#fJ=U!X]3@0C%GX5ZO$He>Kr=VXmQpG(?>G6;DD*>AG3XLrXcSq)'k<.AXKuL9,^7-FP>ENE#.MHND_I`SmBh(2eOWL87.t.=!Ds"JA4"pj6)o^Vb%Ur^"%K+/5_M7oh=/\dhd%SJ6#]&(4AK2cK32ZfhN'8B3a8oj9M+r0Ln$.^E^T0!q[q7@W)Gb<m6^O!O[8,3C2Yp:=E3rU$e(o.`]%)`t0_9!Wi^$+4811j0m(M<U(14oDnj./):3)9$-E2?:^b^5WDAX)$_K=UQ,kGnfSb45TC<.X2S7a#:-Xa-'26_R6\U5!Ca(gq<KT%9JB>@56&a;[$hq#STT'n5:L`lYXrE5c0Oo!+fVg!(;k0g:%islE7]'@[o)@?#XSPkP#(VB&W*aoWD$3YpjL?b&>@t"G&Oc!bREYZ%7a8DZ$sh`p7)bXRL!:(kU8Aaf54Mh+mb?&j.@^k)G#70kYn<-A!4p^RMg""b-4+EX`WObDm8WWIEecUqIE[JA;4?]+hbS%gmQ6gX%E>D-ciXN[u56`7_5Mpi1H8s_FdDJQDo+XO3Q[mRTq=9#YE'`tK62siNSfB;)eC&bl.sX7PHVVjuHm&CVqT+KCV;S&PMaYJj;=R1c%+Hl(9Q=%W(8bY%(=7P+>MMFsTI*ndH#RO&hpoq#V>q[JhX]bGh8Na!Ig@b@3OV&45:c>=he&-9e>5hg_eSrlV4rbBq=BB]rr55i.%+"M[B3!dYL#N+6c*Kh[n[qeq`+R\j/M[RGS!O@B;@Qb%H/(PLj"YcPZpFVLg<W_PWVSF!^n@R*f5BQpmlqE$O,RGgkG,=pq=#rr\%'$tO\=!et-D]%PTbG]tg?U)#tHV6bf@?Bct?>q#,W,&`%>t\`A>,Ap8M/j\YmR_G?00&M3e=eVsO;Af#M_tM#k8CUU"5qo;bm<nX%%+>aJb5uP!5Skrmaa@5rXI>H!Dd]cACc4!-)cZ85J5%pn`1,*J_L$]R)I.k6CpYGD3&EOnGUk]&Xa9s"A5o!#M\H1`p$YZ=I#B!:%P"IiN`LB?fh&QU+';C%dX\]NdVO\l2._Jei^>J\+(YP1*I5'*]8@29Gkl_AMIXe[h[^\eA%U0ZB)##MAXfMC22kfh8CeW%G\],FW%b!4E:N5J$p1Lcb6etTQ:B=f]uqf=sOA*cs*d=<nih`^b_gRGf9+3(#Y,4Nt3a=Q&UB@-qXPV=_\e=sqI54ECl(6*:j*uZ**STp'Y%9&@k_CTjP)R.[,+bo*dHP7,n\5JmOYBX3XL/IG'BLZ)PHgZZV#+i929.lNE!rWUr*pKZZ$GTnAcSf)k7i@\mHo_^,o1+"ob+Ch7[%Mm8thHB-VMGkB^*_F`e<`IN#D5@9LjJSe,6(^4`pkLdri`W"SJh#\1%-#0=bBr?;M4U<r=1H2Qh]Wj)7Yd(]'<nRDV\Btla2]j"K%TklGiF&L+M_ohaGkSA``Apd[HU[dee;uX$U;T=lYL6kK0eu;?5LtmFQn)&?B45a9l1]1pBmDP'>a[S#5:."tEDA4>_%.2q^.q)q]%R.'c.)W#n_WF=C\80_3@UZ#_W8hlY)ZO%3=&igj_bp;)"j__m@mlf@#p=P72M+l%t?U329X"`B'c]OE,pJkRl0',a%G$cQDm[e$[%;(RiepRYUk-aR5b*jnWm_QNud?K@8@7.3Z"5q8QrKI`C==Me?YL$W:#^f8BEUYOHH:#!=,rJBAmRUkTM+0Xm.!1`TPTjD77b34$'%@Um)QDj%3X?rO%`5.S>856;u\AF2eTjJ]He5;++BGl"eHa>rg6m,hNE6mP)j$`o3Z\abq7XuDrSR0WE3R>'"9OtYF9)dBEDHDH=p%/EZU1ba^10c(Pg;%*bFiVZ_r$LFtcC/sR;K%UBlI?NqOYQG_n4`FmP+[brQSkbtXQA^I]M`R$VenJQF">B&dG\ko%DK.\]ZE0)'N%p^B34G/pgIFR^5j?LHQe3HXd/FD/]aO[BpA;?$O@iTld-kKn>^Ab("T&g<+S"?N,,pR4CkF119p+G:BBfu8_G$qbO:Vc(_r9U%83%DT?X@M@M?E<t^EWs0jAHU:fC<U,UZp]a=ki.1ftRhVM#,Pj4fo[ligefT:MnX3WTlWF07r&(C%I<%g]c:LX.)K(G=^Ej34/=9#)h%QgSBCJ)i):ke0j9"]e(s+Z_ui=6(h@WQ:kqhF-gs3?htH"h#-#=5A)MO3GNY3_;8_`,>g9$lT?q]a;QqV>drUK]J"s02;qHlkZl?%Ej0)`I^Xhrjs2Q9LC$t;r3T^fceet9U:5_Fdu[O\\PXe26S%,cVWlu,n>(62ffX'-^#V;D9s0`XTD"#Go2uU[5fk7.I3k:^`XdZ(%L[fpO_YpFD4V0,U/NZ8VN/%l<LqNHG1]q/!Gl)kVkqM`T]dU@j<utHd$S9`j)Bb+0Vq6aS7ipQ/I/_<B05))kRPl4n#<otD'L%c<%-_aGkOE.E8,rG;I"5h-OK%DT(">dt:9[(8;(Vu(&/c04_f,UPRcKS'S=K`F,35#0iU=`SOM+7&2HK!Bd:b4e)ZqlSP3XVPc`<+^K%Roe4"riJrMOkDN^I9E/2J5P3WarWU`a(NSPP:1`6nN#G.LF;IT`K-oNh3RboDi\_?pU9H"m"V'R,:7c":%U1O>n$ofbhI==i@$IZ%qacqZk)Arpd%cbG`Y53GR,XDga:LedYUNi,]J>oq]i&@Xemq*pIcsU(4nhAI@^bh\OY_\e!]a<#:-[4OkY.TKh;]ck8,?)1HCW=H%Lbjh(En]6<aRQnrIr#Ae1*V_XZP1^\0RkVkSJ$[$!fhHUraa4mbDeso]Leg<X\OUM#YJ8%PbakfE>`G<7:]j`m#2P(WFt('*)ccl%9X[#,o<fMTObo1)Lks:CJ.W[6Ki.Rk7h_$4-^V,;8R`JB+u6d*fKfX7b`!ZUE9m:7kjt$hkIi)qW?c1k6Ut[+[G(R;7R<E/jIEBC%pUJI#R&&nH\V+0ZpkTp26X;qB."5fSY?)c[S?jc=7%pfVcVFru%*cJiOH+gg9#=^=$o3Z;7n#rrAjhBV/^4^[2<+$r\j(^u@es2K%FNNiFWcqe*d-$-@pMe_Y+5:D&fJFAY>;+Cl5pXZ.WMB#8BeM@Mg,$8l\5D]s>"9<jN2=3(*sTrEli4W361WtYf9/Ul%u3u99h+N@%&!nur@`WpVO_<XrL`8=#,U+>5c]$?SoARQm"\5*of@sJh+s0R)I=nG4,fka6Hk+7pq/@L)q,<h'FZu>qKQ`qK2"\'`b@;JTZQ=n2%Ul.UsC3<Ls&fVd5:S_Y!0,f]@7/"dud_i$>]j_`>"r+X-8.:`B:>/hfenm#B[PPk_M>(n#,ahoIQQ^D+gt,])k`9.m?$&?5h]:&,%H-HMWOSWHM(m.W(0-Y&UrY)5Vjt[CU7N2t;`5Y9S2>OgTP]/U#*3#K>[b/J:09"sK@%&ZLm#d*h7"(_nB_=rEG"9C'hp=SGOp>3I%58(K0S_nuCJ]#eTm,NnifnJi2(8d]!-Ia47@`e=A@Jhc5!TWNKha\'pAY`AH+%+LJ#KTH<N'E(%%/S.<]c9a9lJ;1_1/bBB;.QJ3%^=Xhh;R)eO1K(KC?q+n\1!mW*[k>;Tf=h\%BJ"RK1\.U*@Ybq/`Q,BLn$X5`'eX;:)gs2@,[X$0$Kmr^T4HqFBI[7H`C?C*QZ-7k%A1Ch60iGob_KG7%(bc[WhD(78X0:P!=8Fuj^(Ap>&R64<5Hc\]=qk)D8S&O9fjJ<H:?m_j'BhNS)&aGD4=O4QGJnIm>#Oh."d6`g%jF"?A[U'h+4?U+5Q>hut%eMT[l`RS.qqZlS7tBI\ST,%rHUntaa9@uI8+0ZiMooOLiq93KFsf3ib%GM1V2\_m\kkRp\$*nrk/Eff%CEpT2Sa@1NZS.$LAo8,4+ZO?0_'i4i`aDrnae+P-PBXGjFrPjNS+CF[fH3u_-bCtF*$*,ZB*kO45*oCiCIBJ\?,^@,[E$Io3E\WL%a_ka\d2@+PWHKQpkYl;Ph:A;N!=dmu[PZkW5_I0rGh'12ePK!@U\F<'`$N$pfgqe-/'D9s)0XTL`4,D\(R\]UI2eMsp(`p&f/Pi"%"3U)mgTS?+7V14Pj)PHU>t"iI*St[*F0Qj=-gUX"@hd9s?(qJeb.s3Z9[8tk\0#$u3Dk^Sh0s`7KYm:#O(h<HFRE?VXsdB,nkUhs%SAq+r[NY%H9mH%)I(a<br:*`2Ia:J5E?7iK6enN:8_cI0hsj5`7`g.MHd=iVIGZ:dk5E`5Eg/N)Kaii[*P'4alUg=T\OEg=r@l1n%2idYQbh.:"#/!>VX=5?^4s+B53TtbA#l6724UacZa'Ade-qWHJZ/<fj0dm2La$](6<jft*7,DNW3<N_IflUX>#$2Imc__)nV<b]K%Aa!sAY^dP)MfX!nFCD_%M,'Z//"8/;]lK@jFA^V0[+TOg7BI59dtLL[66pitCc\2P^iJ];\j)'g]!,GN0FK[A2I4tJ3ApAD]!,F#%Z1^5aCc^\qqJtiqDVNQMdtQo3H#]3KA^c?QQUIrGRS=U4.QZj2\hK@H&jE)4V@2EkkfLh3A^c@pd`$Q*K4NGb23mI5Z/4/U$!2A,%bbbb+Kb?U"MT,IGI8VU^2I1?\%?jL&Q:j_LhaX#.(R@]1IT,)WflUX3FQ\SkRnY8m7BDeCjbsV>9c)qRVh,/:%@p30Q:oii?I8eZ%l,#CoF%5nSflV7YGqNC.H"A6]&uOPSYIkC79c)BSi0j:eA^gHPMO=IaA>K&LJ0?GGIs-trh:,r#[+"?0b%/%b5dC4[G;!NoakuEu%\o@+IeG%K>^,MbKI<A,&eiNEOrdD#'d](lUG:^=$e;:`Yc(CZU01t$_:NBH@de(iQ.qk\6KmV1GV[!bmjX^V8kcGQtTnN7T+9)a*%RJn)O]"6W+KZ`sZ[i$%W]D!Bn$%qnlc!@\NhAt:ci*X)^M@I3?1%q'J`3G5oY.55B&pM`/i\[L1C[V&RT02<pGC`Zo_CrLd0C0Hp%c!Be--6flIoQAD!+"LhS\dL,3otKQ@l+(cX]qHZlqYIaknW,=*Da<)NOBIf?k]AcXL=q@.,T/YP3]hF-?0';K55&0D7(U3tM?6qN%R@uEEpVO@XoUhD'GLJ.gh"4KLh^5Y-4&UVjM3;80jV&4DS!X[t']GabnJc<YXnQWPIg,!g""&isfF?]XDCB0Ld9bm%]:kn&,WiTt%pQlQ:2j2D*Id`X<1)=\=kaYi)$6/Q1X_#@mU,PsBF\h!F/t1kq,`X^dp,'9nK%ui7=s):oJCmhWIi"8TR3^eqYYATNr&7><mbBls%84n.O)<*u-OfR0GmMS1MiXL>p5VW(L"IU^TF,r]6<CiY&!0-BdB1;H4K-<?<:9[:ElNTT4^CQ\,Qo'pKrf/.<B@pF0Z'A1V&jWXa%Mf[mkh<DW-nZ-(_QdU$6P8Ke3d!$\O4QF._%512GL4L<3#1'L>kCu&&-!CaJEl/o'Z\Z?UXrfN[^>Z6@bf9bUM*c+&)dWucDR^YF%VS#+Td]kam7B9jh2r)g8J"f^Gn'P5kHQqI(]3`*e&gl19`c#cfC<,bVLN.CHEo0?P=F9c_]EM]YgXd(qOrg7kGVF`^FD)s^r15Fe%:6.D7.VUt39qSr'm+P]#E.0m^/h_+'@fQ8k9/?r]C:H)6bY/N"f9]#;YPLk#$B;pu1Vt1WS]SfA9]?8oV4$Q5_>7>Q_PVq4S1][F%4k^kp9;7^!ED&O8l3WK29/Nib8t*a6Qc/OKMB$78Pl>].YPM%(,.Z7OY$oCkM'Q*$:WG0S5/'@,pjI=UP^)ZOk]0q3,?J]75F+FP%ot(0uWM7_L\fT+=O8Plf&`pM<ZFS$[S5cAdZ)AYoY&,#<'%)D2pDHATe-N4(A.]qp_nM+Y#pTLqr@m8KHhFK8W>7C5]9gKnlL&A+%IK&kT[IH(l_7-OVRbN%/=+8\sf>`_ji$!YWR:?*+0+IAhrBpkTbD0k/>[/AoTdp(*CeKK:lTdY(Pa<)TL=c9I>#HSr.V30D.eCuT%R']Y$n)`6'5@Nk13oP%jgsi*MDGAoV#CmH1cgP;sH-X,mh8;,iPF?Z27d%[sVsUIL[+AIlA3%r\XP_SQ;U]5fDk*j21]PN+<C,QV%Q/`.CejRM;/3ZMa_`c!>h3t]uq@^I)maoBO"AiacQWb70H4g3MpK\(#h7JII=t6)0rEPo3V[MK'9>UOo>Km?:;2TMJe-em#(6tf.%V0ml@5d@.TVrS;Nd-GHl\8+A]f7XR'Kp_+gF>?t8NKZV,F4S)E<(sl?1;PPSX7</`>nN6]llYNa(]2uk'oc*7FC1MZE_Fj1VKVud%ahrOoY(1DqX];&t;E1g,g^2Yd:8^65TI%oV9<bfRBi\Du4dnt'M)Q_6H1fh=gFMSBi@Z]GZ\UoICS+Z-.$6(+WCC7l[,OmhNtMtr%09)?)=q$m^RjJ4!WcY^.k;QJ=Tju;_p'P[*,ZlbeO]N<4Sbp.ul$BVT<g^,UDhNf^6$W4!jSATRa2e$;0J5CM<Z8r?og=R(Q=J5`%8sHU69Q18S.KNr^S[F,BE\ZOK36A%[huYF@_epa?5aOu#8$8*R%gGPCq(^h\`m<p#&5Xg"a8,TqH,q(+0tt7p?2/MF]l,PuS4If<%GKO(W1Eq4GJA(lh;!s)*<-d<bRGXSmPK=j:Z3?G^EtFnu(3_NK!cQkL<:jf$"GqYLF;-/"3B<g5:B-b,=lgM\'sRG/=0sF@QC58&%ipSbmM3jQkMN)c9CclAY]@JKfC91Jh:HoQZZ#\M>`HnUjp=795j"?L(?0T4gPM*Zfe<@n=!O;]hjoG7bZL9?[DB-N7!.E^KhcYIa%/'l>sabd;'PNDl=]R`5GM8!lW$f)8W3"%ES%Uf&l]h,O1PL;7'XA#2hQo#%%_&PH^$SZ9)@#rjIpaj2iMG8;uJsZ&U4c6tlK7DfW%^7LMC,ASg_V0osOU);.OI+6%"r54ll"n#%[LG%\H\0$"7Qh'e_KcBqf^>N./s3.<e^/=5=]9Ftu;bBY0/&lc[f^q?HWkWoZqE#X2%d!P_%'@hN3hnWkl"n)&Ahn7SdlT+LKI^*1J)1J4+mV'n#8p%7Dca0<7Ej&jJXaY]Z<t:?#&X&>;d(Om:%_Hqc?f2^+&Sr?q]@Ch]%9WnA=.n4/lolmTHr2kE8hd=Lnoc#N$RIjh#poHOYAH_c(`UDDS[R7Is]m`QE.u1agc_h:Z))ItL4M\XZ?K,;D5SrUEolI<D4=?o0%dRKJhc>N;J&Eci2Y@%3@QZO$cYC$52ho@Ztc?nWSIKSEHfCt@CINRH$)X+Tgg$[K-X$5tElYS4DEN`_sH4#YI%tCcir2'Pk-6m)X%Hi:NHl+>J!Q7pZY9s8pBic"JtcPYsI?GC`/YZFlZB[Suq=?3\"L[\OHqUYV$Hi;s[JC+2g#.W8<Um6X?h!b8L^\CiUgrGcV?GH8>%rF4@QqTF5a`nfoMm+;U3oo$T809tcl%AWCblSC&.A6ILSXaWk/=Kd)ML@`EKhWpNh5/-"Eoo$T8YJ9u0#$%;RI=-\(lfW14Gg'N>%AkN*tqLo+%qDqJ$dCk#!'5DQjoa(!YMndfGa6Y[/148GjIaZK[6f%([f;VIHhs2(L7guJ3%=TC+5LHRbqtPnAL1e!l%D1e\hs2'j%c=S#1fM7^*n+B=oG5C_&qSgL_r-*/jI]m*\qNs4n$5pee]%8Tag.li%%tCcir3SVcQ%RrZ(IkZ_4!FL2f.Z*qEl`V+'($_[qHgoh%a3]%2T7A]X]mbR<TsskiVp,`pY?uZDCoZ)t2rVH!nLHL1`J1tUc];-]3'"2R'=cXIIW;(%ks1*ooo$T8O.P)^r4RP!V=9.?\gH;6%=XgnC_;Q_]E1f5(k=H.<?/'\o3`2$(7B^.jNVD9',_dQs#3:Wh`/A'+XYqJpb?Qq0C;rJq4_5QR@?fPEeIkP>oZ]i!gT?dmINO2N%ATqtip2EpO?%(G6$Kb9H9cgD'A<iSZ=RP:ZC$;\nh(hg.G45DkT:9!]R[r=5hGgr@%eC@k5F^6V?0,(ADbh=9cLObFlJUn'`;KVI%^9u4en_tOQYHiN.esO"_ANXh$I%IOVSfV"#mq:0<oD<!oqKqcg5ALu5N1Z[-V)"Z9[?[d^Fa^.drFg[n=rVVME:!.7I<ne`fs3BJ%Dg-A:J)2PjNQ,7HM6N:VG-7C.SR.7dk8uV%[(#L^q%\=(6RcsAD(=Z)0>#Am20I>^4h3AN[W;cOd[k]fT%iE!mBK1c4I]^&/RE&^%I<V3Z^&?'\g34"=CsJRW?hO)'QS.1^5J$ZW?VNA@VbOuD]MJ+]8^5K@2thI5LdfAch<dnD>5I;^Cerr$.aur.M2Rk0[E3_F#CMrf%N45F9g?[BAk*#0'jNt0(Kr/jGqpc2A,U[R_?TpQp.$N1_-p)>A*VO)1I@tAr"Y[1(ilQ;DPjZ!`ZPH#e2(MW#.Gg;i=605%_Yr'-%Q$$2R*T+q\<d$EBmFUI*47RT$]%kXSJ8FndXkLbE>q2&q[`4o4SVqFC/A4;i7\0Rd0q%S.@:OS4X@7H#s(^o0o6ZgjO7T3+X)7b=%h*%oP0kki_:?pHTlP>mK.Cm_4mR;Ben2YO7bYIbJl3rLi"&8,Cr3YWXhCf_9SL48>>p)@?'YA4ucU*r4<mHt'g49@NDCb=tL!3><%Ap\/\?'p(j9P$2XHaE8f[o3kLk2cjFo.T+>UAWrcY)3HEq*D@V-:(M*7pDJ?QsXel-^UCM4S-^N$hAp/j&J4_P5>^=mE#e@LP/6A%Ha0Z9EW8k3;hWrW\VB/F&lgu1iM2Q7PoRjP-9Wt8!Zpe]EnUJ\A*3!"5>/#<NUZH/7+(GWcRO=Tim0-7St\6CYFgBY,&D+>1-<[H%GJ-@g!)O$f1';iNPU0/u9h0DnWt2PO$h%-lBX?hp37;VQm<IoSGY0N](`:a)o4ht4,hIOP>rNXD2g_]Pc!';2983<>eFHPsh;2r0%cgpa%*"?.io60Pqr&B&8Vp2q\I;lojl(3]`TA83I,f"F"H%/-D5m;p$qZUOY<!=re1/#A^`\/+L2^&.b*<!<kUMo13F049uXR)$e%qP=#=JHjt)XKkCh&#"BBKC_.<V#gmmC%;P`cHjjUQ-$lmA'&@P'A,DLJFdp_i6C2[Eat!@4R;=rA_`@@jIhH72iGX[AS#W@XZh/>%?7?bA\rq6GY(!X$/H(t,/IuOl/$`,tDKCUWb$CV23D6)c]CWC/_RoE:P;7*hk">h!%iaisCV*XFSS=^5XK5bHq7S:i,2b*KrI_)"%[1pW^%r8^tJ(0i7?#C_MDU-g:GVjuZ]ie7=B49@HGhqjG<F*nN=Z5FDUX'A#e`T'FYg'3R:qk9GD!kg2G`$NKRE;m10;%,SZ&j4Z%`7=N)M6]I!0h[\!JVkEAF(l[h`Lf"EJ.$t0GOWV+Jn8*EbMe2F/7FpWooR/f_KIQ9@$VFfUi!D[V'&)k;uFJg%.8E><Yq"sP;%;j%j]3=ml9ZZCA14Wu&4;#TW=psdCHFPqI,75*n):6?54b`fG?5[i<'!p2e36^k:n?EGS`BZ1S1"5'So8's0Gnf>8AT4%QdG[nKFdrh%4-_6WIHITSY\fq%D1f?ZrV53bJfNSOr^e.N0Od&jK>X1:[>m+&H[+S2c+ddJn7-NU5q=&*T<g&'94J>G%m+9Z\`o<_q-W/\q"/ZE%0s@e>a6VBp_:A83Coart[P7D3NFHnd#r.paJ/qjba+9SJ(Jq[nIg^I?)>>%dPU]J*c].dFmV1]jqW'\e[esd8\8uHQk"gJ=`^+=]%=X!.hT$*FHcSQDhWsKJV!hb7.nl-"T?%$WJ[ThAFa+`o;r6a9AIf?E^9GW-XC7c'`X$(Vj>uY,docd:Mok&fc%U/DaB\bnp8IG8p%nb6"(@S&3eT:t9uO+H`9L`Fn&H4*n=21dVJPTj?BSu--=Y[\[`lDSKV'LQGTdSZ6PZ+bL*]Q'RdP`)F7e-DrZj?'h(aIFmd[eB8O%\$:>Tr`IC94LGO2=6n0=M!gC1caUoO@3kk#ASgc3EN[e+\Y=kjJ:E@[D!lbWK/1T1dad`,Pb)"25M9-g<BiB+B4cUX[Z<Z&NUM6I%?ekJRBU=W7Fd((IN8b'ZhNJH"b3?"4Sc9Uce$7C,b9'IIoqc#;'!q9f2&;R*pXO8FjF4].lZdG9,Ia'dms:.WY:m(Ra^]DRHa,Xg%7@jk,RF/S0M3Y?"n)cg&d=%N?n%jXq()kNJZ%^j?YdAJ@$Y,+?i^51O2Z$>Rj')J*LMn\FI3"H=oZcUs<;(jB"8<HXq_2XEU'f\j%fN[/\5Bb>l8l+$cHX^P.fYU%!G\GjOcg?SVE740KT]'bXc4>o"be:D?h>8gZATC>6_3eM%dZ_HOf!_Bc"u8*<=\iGT_,KWG'^pM[%-U.RoSX)Q2Z!k4:#T^SL0eo[)kq74b7+?U9[Q-JnjN'N/NFJTM25H2I\0(1Coj_(eABkRQH':7s1.#:uCh=CkVJb"@q1Y]OOam1L%=>$c&S%JKM`mQ]fo/cV"EI0b%pjL^u0"(,>O3H>L_dr;8EdY6VCNUs_T+89XZ9)KtQ/0QGf>@LS`:icJgY+tDZ^E[S(Y\NXgf>O]%`Xh[`O^kZ%,W`b;Yp5IcM0<V4j5rLSG&c2=Y.C`2kl'/GrOmWb?`I)&Z_a/CnTT/FQGeDLj1^$bJd+#@FiW,"UlZrO_2nB*6Oj+d%$P.I"R=Oh(QTNSYA7q2;!;'/>B!X"Si$Ua4ma[<Yh9V9q4q%JWG9V?Z:T;RbNai-;:A-._)S64l\Z,>qHc<a@\6jP0V=nRmZ+`>s%m;CZ:*-g\j8Gn6faJhl5o7[,1lT[BC#OqFA)_3?^^*g\hLLbc@h8@5KL4B8R4*1lRQ0CH3O@)3U\Y?3t":$dm"-K>i!X?\L5Jh^-%qO>0?Isg1ki*gK<a3#_;'GH8_kK:qVB*CbdXaM%2:A6\fSb9\o[X"HuiTB,6IOaHUWCCm,3:U`4s2atug]1_h64E:de(&uZ9ffus%#<A'S-CTY*k3$jbY*cVpg[RXH?srrj*FF,PCigb8:K$r7?*H$-aZqPW.kbW/_&+lkWQ\h"dAb)Q#5SM<]Jj!+.rK4+IY(SI^IcJf%pl^H^_miNRAYdZB[=8caAO[L@MhK=PjQ&EF8@_Wd^=6r6mRGj6+_3.*].l&VVHuXBYs-ZQ5imlcYqYhh:q>fhZ"nXbR"+u^H#]O&%U1$U]E,>McAn,YkAsC=O*aa-]kOdEDqk&4oi#UggaYF(pNlG\'IQP'4;Sm_[AScA<^%R&-UC@)-Y7>0J,EB3f3B*q]W8eSE7S%hV%Y/JBVM&bH"je+E[!U%NKM,T(M*4R(0$QRD:#3RWAKd-Bqh_PHuE7eOkV[&6Cod0,f'9D_G8%5!*0menP9)O;rfT>@HITUt+<,-#l%YkV>6fd`Vr)cpQB;Kg*1m)Z_0fM%"eKC,f(dkc]=Z.ms-K8d8eE.6od\tgAuSk<&J$nu<oVlQB*]7"%G[r![cKA/DlLX5n0]KM`F%`I0@3CtiX\0#mb0gg0pGr6IaI=VCO2IN3uYb6p-J-Nuf"8K6L3:ZO*7If-:lQ1ME+T*3kB^-OjPjn@?l4l8h2q9F__GOJ"RIu*WJ%m:8H*5KS.!6LkXBT!06UQ[b7iK^F#Nbs0?q^<6&n17k^uTJaH4)"6_g5KS/eG2,IUO#!<2*@(%u@m"i!46uKhrDVPoGe/N"m+o]F%gX<JL;@dAfU80^/f08"Ns"8`+qm=B$c:#BfRZ)7XX/DdqmMN]4ae6^G]!?PENMKb:m+IJ=0dEM.hq$*SDrN2ZCuXXRpfm;TVf&kI%W<]58D"[WtbYHK4GP\Psla7]BSh_8H?k`C^Xk1K?D1X&X!DUYt2nJ%Yr&Ch'IVmf+Ftf\/4hN3l#G@?`[.6B#8jCAZET=73$1tW@%JqSP![i:/sI-*=>k:/kNhuVMXGMM\*pIY0:,Sk!Zl7RRWphore3k\c[5=@o[n\MX5ZD/:u03;YC>`!?rDf&h<8m;$So/q;=VcLfs%/_o%J[n><XVqB<4!Ze&31toE;>d)5V:@<djNCS25O-S;S7+fj4,%O`oSi@=@S4<_#k#4=GQX#Y?8Pj5q$52->,QK795IX.7#_?cg%(*\UnO[.h!2)E-@:g$$RO^P.?G!e!g@kp]'&ciMhCGXZ$SD=i(fY5[ls#CV2!S&"d4\tti1b-H;d3g/jp7ocNn8`U^,mVoK^/D&?%[pRRS>ka)EOCSrl8C.@)=3=7aX+^=`,1ln+gr$<+PV5Tc!n/:#k531b>"b<M7<5&=cr6l1e='2b;)ckeA-^&(>5i5adf%B!,?422%#o)^Y`/H76&_\8+gG<@\=if\i9up3mR"^rjj\ft?WC4rAWT4bODF2>dfRtW;dHk+FqQ(q9BbPQU?k\].%O0O]SlA$`#&D)>ar!0Y%c(MZ*eV'#WA\33`/8gHJqs2LQ_P`XE2?g88pORVsALs][ZO&0)b#iHn&MfYOc=^]+)bf:)P?L.G`k%Y$A8IoVa>,Y]2kjh6'F-*t%5qEY-aCE]<]3bsOXo70r?nPj_U_,U9-0@=h9Su2V7%R%Zqr2UWV34J>aG:hRNB(oFN]12DZR(UPF+]LoABIpN;pDSHRCHpmc\CUs%0$g>`WE4Orj=*12%A!fJg/JmFhU]d/P%FGt+qhU?&s74q-Q^ts_nQ)K@V4XYhO?bQrgs,/)=R8]qmeP9?K(T%qmgXL-@VR?Fa-s9%NZqAAmcAi$21*o$5k)hX."/H`00PIRa4:TUh?,duD/CZ`4jYRCht$\2+PV^l/[ndD]Mb/@>D37FJHU76-]?tH#Nk!*A@/&%s7mfe%7sH0#]Xke*K%#K^1^t.2i["'Yq/%1J%_ieCr9\(D?=FmZ3,$\:VO,8%S:(:XO[tB+ZG(r"qk^SWI[u[7nc$q$$'LU2(Vs"Xj,@p(%5TZFe=fg?DqSofH$Ckq`Z>Xg[j-S[#`P%hI;_K5QWjj\_bW?JO;k)SqY=LCE_;"dn^FHJ@1craAeZJ]fk:M2[1\jnZGs016[5/P.%9OqFDpHK0-4Rr&0k<aQ.8=_<7gEMFIP"MBJr)LP#g1?<-,@<dlchFd@9bliQR$T)?X+B/Mn]d_$Pa9'8pj'b\I!d@fq/::9Xm\^k%hkVN*]WFT_O5B)@m[NoLr1%<?nG1*=M4'[B*)erDPSW'-LQ,m,@WGf/Nq>0GNk2&-nig_o]OTIBbknIH<1fUB6F,Ica7U`RZgUoa%9p=l`]GXg`KOFDPr,cpa87d\Mc>:$r3k0,kY(Br]DT\Y-8sA'aQLn:.S>Ct>1;6C$R<`*BljkLB(;#.MgpQZd:?)6n'\G"#-Vi,4%nIel0T(o;$bfnMZ2`EN3M^0d,7d(&@l[gFW=-%317_pG-qX<>XLYD]UfXM;%(a!.'3Qb8SW>od5hRl,KSu&TBFX#M#TU"F;Hu@NT%lXbQ8\O(<P0k9b(9.U8dZ8@L+4s3?p!-K9HdVeAu`W=>04.7O"j>?i*bs6o%Qt8/nZc@,<[;tS(+f7ghJ2DfsNu*%Zs.?]`m5S/#%0c`?H48GjU>=YfV[uYi]+gmi_j`a\s]`-V5\#Rubl@1n7`ll\0[GFJ.V/uI]_Tn0O(99*Jf4paZ#\H9R;@J0f:b6!%+40!$%mXts%n[H.'\NOr<=t0GOY1J9;"_RGp<K]iY%b1F1k6fHM>'U'la)(k1Z2(#g;p5LsN\)^c)NK]Kk:]D(fc08CAnCM3gorGSj]0kb[bYk=%of9e64P\cFF5(KUp<$sTgpf'k9!,]EV0GqQ4tEi!='nMn/TF7ZGKbhi4M3<^C'kVE%IEBap9Ze;=`e[@cO%a;EBhAbh&-5(etkLW%\aP@j`qc/)h];Ld\H>5'1&4qn*H0;j;]0Ut##";H/sE[,3R<MUm;c&%*O$h[^tRhD*'M)GoBLZ8I\*V4]EW[m_""Ou4#m2WOm-]=%Et$,X&C2W3hY.<I`1b7dp-"W=`N`rZ8cNZX"$"j>,Abc:H8N8"r,S>[E1f+dX(TDBf@;U)W5FlM4980"GA<0P9Y@MYL3,\5,[See%oL&m!6%;)EnH17]cW?##]Y?61helFPHp']-C[R2e]R$aEr7e8<RUE5q4B\K#2W2tknFJ-MhYk)eppUK.ir68B]tV8$O(`dgV6_*^%`q2cI%`Qo5GD80e?WNnr1!2^<[Of=O4T7X-dIL&OkZh[&cke#YSHhU>;E&4G>=IZ2?G1t;?<D)pkE!H>nriMt3u@"hfsPDg@WD==%r,e$?jV+a?:KV),4e)?P#WtD10Bn8p_q6Stl(tA6As=o,^FqKcS[mamCDn`$BUe-F3OXL7o>$"/F`6:AfeUAi/)3ij%H+2Wn##$n%WVnk-rOXLh7./N$l/,4/97Qn#.fHq-hLUo"V^0A*DqE+!6)WC["P6+Nq9?C]9M3>5q/NY>G7drp_m3FUM1q!gTRlpUjEaC$C7K:I%Fa:NVP`Cg.X`*a+`l;7kWNeTm/pj'b[[$-fR0tijF`j2j%=HBUD4'tnPH>a3/L>`-DL#*O>/"!fn\kYo8V<U[8BUG[O=VuqDa3MT%`4:;Em.fei,!ghc9rCF8f\.N22/?4`<k**;l(4tqJNq_nbVrlNAsj15\?6';\CeZ:fG[iD$CACVdmkNQ$3JIF7(@*uc^Y8OjcpLQ%E:`qA=#p@$R072=,"Oud(_U7p;Biu(iO^6do?@tRr@dof9BF'oaQ*u8FJ^g5bIt5<&f&LqD29UZ2D@5]D>>'RM7KEA&5Oa^M>=kB%,,>6Xd248i=>q#m,%[-Bc=Vk!7P92nfiZa22j=G3'ke_OFucVshh81aL"S09-59+Qh$\9+RKmaecGHe$AmljWJQ4;dG)V-oa<i*M%O;f<tdOeuCE$K6b`'R;!!]VmiO6q\MQYqI5TLrE\@jhqa)[dR&^mabWX$+2)<sVVR2s8_]XR"'MXCh9$o<jrY+s:=-nmj;\0I1(I%;$+&!ata_[VR[rR&r?^e=:Z#.h$k[%P^Jro>W7DF3]Sci`fb(a:@F1[2K40=TJ002BW[]6Y6f&JX.q7;,B>UVYrG,Z<<*8B6k3[g%*E"(<agjuS"u9FeIo]&\Oi]F!-=e'4)P*MDhrWs6n(-S/SJHJ!_pZHN$CcD`<U4IEHM+hI4`8"eOE6re'%;:+S]ho79MSqZ+"&FB%:@i_U`&,#7L)a;dkJ#rk6Lp=/&7FWnJ)7Z8oSck"Eb4?h`'&("r35]<AtUoRJMRS.#DJ*rA9C[3A9Hj9'o/mY8ZO%[S\j.HDeYg/%]sB]/o.CMbSRkaPrGch+m%JfU/52MNg=)aCIdC*V8YHC!M?TbBKs'`Y>PlL]6Q3(,T-#h_m9fIlb&^KM8cH+G4Q]5(hZ7:k[Q8(:%Ya&Q$"W_p^Ac%8tY\%6[DH2.CCO'4h$0dsbS$eOb@Eu.b(8-JkoIiLQ"X_00r%'eJOqq8d$ZAn)GBW-rg+2dXb:RMsgc3O4pTHAh%JaqlEN5ts9]u\`f-XPNncg.KQI.-0K]T0M8MRn;*AP7h<4#Eme-Q\]B>O>[*hgTGbkQq<efubQ:VS/DMJB892d2m3aYf3(_fj(O?%f(S@u^=qVn$#BEPp.@m1N?$,h>(6Dp*Z3>YX^5A+0#n;sP"3a-/AIl3E56*5YX5C'IWe-Kk<;DDHqHIZfP1IW$V^8r=:r`HpH#@#%nWaVoF&Y-20,JEa0DUg<]BRc8il3;-ks7IOI]?MV(rZf]OlrY%*-l'BW(*ANl5cufJeM*.cVI8H7X0N"jS>dbln;+1D>^$6e2"hq%;:W]brDd/F9P#tUEa%l.1pMZ.\647WW:*geY-q5CRf95#J,!`iBiT6&RVBVL'2/(l;_t4e>+JCVKB)TkbI9OOO-e-^UL%[5SR01-%X+UBBSRQmo:$Xu0h<"8;@&#hND0RmqCQaa/iF>JOkMcHAs.k,%cV[;+e,MU1$:=q;rXD)8iQE;kqG19pdKf$kHR8WJ0:nt=9@#)R%U8E(fakE%qVnZ,aTk+tf[CienYKV(t/CU7c]IV->+mnZpI]'m\fL\]W3f]>'T\(QhmA2YT9EiY)XK1)fqEOJ\RFO168aDD"eIC%0%FB$H/RZ7S@C=^p?Rm;/'NhKl=4U]Uf/@2acWYeQCAei4'8<K%b/OP:K.r2^CH.B@/Q=`IGPLXd*+@QcJAg%:j<jbI9!)j=gXh/?!%0Q^KoB+;i"1AG=j-7LaWQK>VQ"shPP!l;,jT"8]K23$1.Pq;iooq4+@U6@>aCR@@Eh0#D)Zl6<GC.?oRJ4p;se]PJ3Y!O#U<u"&I%GXKphXCl'$bJsNs$=N.f=:])D\iM:hZaOT4:hITQKIE9uAJNb8H4H#W)TFNTL2B"dBKrPt.]EY[:$=d*WEID%8UIJ'[9[J":k8`r%I9/9T`sqfQQiq%r[=O;eecTYS%nN*]fEb/>_IJG"!Z-!\j^ntHeju2p\7iZ6>6TUeOTeuHiCsae?oU%nF+B/a'EN0l-2?aR?T(s&%%[mNtXs4`W.!)$jMMD[T.aX'H\H'c!+ESRTkQ4jl"iO\uSaHQ)JD=8hg-jpXciV`tYoYSk2[Na,J8T/LIqY3i<\l9l?H6frD9X=K%$jYGk-ptV$73kJ]<Q7KVZZMOa0QgnNe2)UVL.+os9u]YQD`JLHdp[&LJ-:BRQ<=R!dD:,OH)<rJYr'Hi"*rmfY$"6F;&$+p$F'R_%;c!f1'Bj+,&HFZj2M,%u5^BAUR]RbQYo^]"28X687n-rN:^:2N\:C.O,AB;FV7>1!"].PgOLGtI,#EC>,h00)@?n4_BT/4,]Ofd'%%&drlr@e4se(+gXTP9XU?oD9J&Lhc=.kMH\S+HfI(g(L910<'5>Ym<#9'E(Ekd6q8X9@838-=S8aE<T2/sHA[%3dDcBVu6NJML%d%9sI9X%cC#ocN[W*@T[a!7*8.ALoV3C!uf6RTG8A9NUU!S<Duj%l2`URb9?>+WbFAk)A'f*9Nl$^?@jWSW-Q`U_gn*#*Y8T.VG>9=%BEh"A&A(FH$ht"?e?D*?G*_9P1-LOn@K:g-bok8^69-/<Us*caR6bS<Pq\67DeR$2AY<m>.:(j>FI\S0<%3BWQD0MuJt;riYrN@s%edG:]b"8gH9F>l@$3_-Z"=j\n7kb,N!)C+%#$/dmBph^VBnG<m%DjtCKH4m.!G+NAS(M*h[#N]c'?CWX&1I^t-Ccn-<.'UC&d4\C%&o9<q.;9<GQuE[S1IsY`I(BWI#$cj;*,o02%hm;K6,6/JHm%/(>nC,T8Q/(*V!ioN&l+m'q(0]3FKp?N!'p]IF"*q:L[l$N$(t%)%$?T"Y_9)mM.1R5_F;oK*`%X'EJ4:Z3aI*Mr#P+ot[)f+l1c6BUlRYRCiM3BGg(WeKK6.,Lcl=`87q7Kh#4N3M*Qq-DNK>n,1Z0OC%JZ`c8@0WYK@AF3q&%%q$N+.ElPR1UG<N7Yo2AV6`:kg3T5o:)@j+?Wp9`kQU_?CgNN&5LL,@nWAcnL#_-?("CWfo3"#650D+C-mf%>9!nt,=*55(H#*&1IcsQ&9e/u5g[kUQsfb1PB[Qs^emRq4gk[!$rAh(8?g-NjM8Tj1=A"h.DX=>+d`Pc+Ae2un1'ZRZ(W@[+TD]l%6"Y4sp-LPQ,Je+V3j!!m5(XL%$5!:YUaR<NMH#5XdP]$6Y^1-Ta72^0ChsM2NG?fqMm3j_b99md1kr7I/=c.\e?qYF#=R:QdDmK-%4%3Kh9WCDVa?@:F7P'tb0-dWgcS#CBEG:j1b<U#?@ONM:bXAMiqYW+AUi$"b1([l`kdk`V^kfO]&TGo-DN#mN9]Zm<\Re$3LDXOC%/H`Uo)33T+"7g2m.f3f@dK*Wb[gYD\7l,O1)1$CnC,paP%+''JDODuo7aEXgg[<F.?asZDjuSCaF3F%V`UUQO$5-5-]4E,TMG@GF%iKcbI%&fW@/H]3e:cH8_bM\:q)mWhJU,pr8cS#B+d1f$5rA&n@.7>sT^C8TsXL%3`b<UJTS,-"!0*@/4M[n1P0*A$P*a(\A%+')2%:&"Hpi$(37iOA!:BkW!EDAfCEBi8kG\7O#+WXk\&#+]2Rg%3@.j<F8aKNA?fU8]&[Y7/H<jp;?t9LkR="P!%cF;-LJn!/I`RZ?_.%b)d5gomMNqVRrRonB/P:&oE`D1/MqF)CNi]",aWC#l;1h68?OQH"Go>3e4?Y.g&Q[L-X#HPlVoA]<HZhR6`r@fB8Ee34_tJ:3^>H%Af1WQ$jL>3&IYed1rQ1WG\+YnYTgO%.l1$okr:3+111Nq[^&s=`gE0@cRT*0JP>AnY7*Nla!.nb]J;=kJ@NoU!sXAQZ@-$s1=^MP%T3#WuM,REH<sFTfV71$>%*UW>=dIAa6N]tO,L7kBhLjq[HY$T,f`XQbARKVj%k>4I."`tAjn$V[6k&AX$Ejm:=2U/K1A"mYK=VWL%-U[>;-9Jg*P8Q>>R+0%44rJ[R%eEZ1:PKoBpj#&q$p@d+#_Z!.*\C?4A=j:-KLd+Xp;t\)[7rEG&3^uCZsY4$fdFZm9qsm#ouYS&%<A[Ena^B(@M'mH1\P$Or$,8!;AE`c>E7pCE7U02N2U=NAFG7OX3BiKt_243:F3(![<5eDhA5K/P!/9Tt@0hD/iB2l(6N@VD*mZ!.%/<6t(a'a8q^KUC-@gX,;k-o>[9Hh-5h]IKU_/p^@kDt1;=EJf[r%Z\292U-:(cokjTr7(7J]7]-*M5Qng,q^\q-uBj)8qO(r%W<(%FOuZQ0b&D',?M`(du_R;T0.T3`Wk@`l1;qPFK8A8G/uKes.2<,:T,7ZrYQ,o(9sL'56`dN"rRY.In[n.L$na60dsAB=N'gOTFk0M%ohJY+:\FNmkTHQh-2D#KQIL!LHnd0^i@=8Rfku"m%*F*0Rd>r@O^jhDB+2pjjE"mFbf0[?N"MX;L1PJBp7*iV`rj<R3Fbki1t$ft%R#UVil7!'Q%*RjZl8`?4.MiJKEGl9.*6#42hADR++br-h=QIo7SoD]*CTH+%(`=cD%+uFA3c!(tmYbKkp\20N7`l_&kDPJ$-CsK/%?OY,F3T.Ug(30A-qdR8pK6bs#<pB6NmYd2_QZe>`@TWc^B3Y)KYfpOl+RY.rR7l3XHnk9\R03e&%*N%1V9-Fg.<B27L&5???-=$.%,?"c:L>99p7`m:IMfNG=b<QMb0et;dBXim\A#,PZ#&rO[OYV]Di6E0beYEdNmYkQl)0mK?N0H&_EG(4uSc-8>RV7DK_L4.:c*;BD%(SgYZ[2-InQDlnk'_fSN9J`[+EF4Zh3Fn'_^)._+FP:$gMd[Lu'9;F;q9!O!8=W[VVK#t%:=?(3EF0-tfW3dB_]i=:%+uB51);;T%Xr&Uor;eZ)F*/Zk_A,F;'U;.R\1:%kD!DXP=,`egq#b0'9Vl5HGK$cpgbDlR`NTbu&>(IBlD`8bjK9=KZQ2tf`TWbBAkK3C.FNV6%0iI)Z&01G_Yfo"^9F4LR9RH$rOF(H4M"un_'>lSl&mffl3:)88e7;@6Pe!7/(W/!C^IZ'UQGFE4b.\]Ae!SJ$Hnd0^g*_8&>)t_/%g_[j`n1%\r(F*KDMle^@N4:@Kil\tP.<B2sO8EBgjquU1jh;Q\,GpC0@T^E81Z=7#a?Wb)Ui9\"0)=_:01N"iIPG2g'[aIgnAVU?%XHP.2@TWgJF$k,jY`)@6\2-V>))T:PSM;ZO<T4`"B8i'PgF/RH/@4O_,.oW]ZQ1MEg`%JL5$n^k^`],P08=&R#?1?8&1,;g%LVsL%8/Vji$XX=c1qM$XHneNr(olq\@@:R#6=V9?_qcr'o?cJh``t5LYoFZqj/s4J;f#fSN0Y>F=,bL+Vp6N.`CQ+XrD)d>OYYJW"ij0%%C\XDS$m[9D]F`@*.0K/m4(G(F/f+k-%*MW!iP@7RUADX1K)2(M9\!(V;Jpem2LT]s/bZ4/cVP%_1)QB8/;m]$,qH<nF%KDB_7#dE%?0cBq&k#3fM_lcjEA6t[hPXX[I#*W*8J)VXq[,6U;GR1dk'gdD"%>Q6d_[:=dY:&#S@f+8W0i)I5p$^I>gjk25tfJp$h;8GN(+<r%Sgbd+=@+P@Q@OIaasB"WKB#DX@q?Rd_,<p>g(d<`LOL'Ojs;=IKPSLUXi.GEW.Q[ENKrFK@*/r<r/4bB-_P@(/V3U4W')mun3AkU%OcdL6Um=8NPXsUDAV(2^,s`p[:El^PMN_9fcC#;Q>Tm)Oq'aB*"d@-)eDT3C]N:>+HZ[J#TJ.rE-'h3hTVVd@KV@@&>V1Y0@T+3]%8<HN??AgS`"%O;.C"j7WPr;?D@lU`<KS6hW_27$ROr)P.**T.1\0@pJ)M6@AFo9Uj:Q3O,-dX)lLlal+PXq>YAVLGM[3Wi3_+CF:%3!k1XZis6WS3rmnSV+3`V5]eoL8=($0LOq]PEE57-sJ%`8g[%X'.,(E&j7.i1oTUSi92Z_'*K;m8Zl=,0:1Y!d@o#tga@V9DeL#8%[mnM2KH&)C$]GU^O:`I*M!ooDD3[l\29O;_1'IoLL6ahZaWm!ie"Tl/`Ls6rg136=ABHcc=`SL'ChTW'TS4\H6P'6Ag&X,492$;\%H73cMC6i+o7hri9R:%)?`.ht`.FBRG;MhC,(4/iA3AC#f>*`o#nO,=!+@)oB;Sf35OcU<D)2bTGhAIpZ=n:$>?'YAaoH;Ohn%#I)%l<s0^6<;-8=odD,V$<#bF/ZJj>eh!.,fE4Ie[A$U3"co<R7J&j^+qIsVi9,"es6EEIEG*OTgVr(#nF+1#<_48`Xl2\_DWg[76IP"%bQ<tCIa93:qPY0V8S+t=<$c<]=Q5d.XCO]G$P?>Nj<R\jc^9M@/fKi.iTs&a_,-k<ZM-a)j0aM_LWKY&MNknuR7`s,o,\+^,k'u>%^D<-^O;Q1E@A66<FDQ_5d8Z)5WM;52<5B<Fh'4X&2Sg[@ip'M@afL:rd^<0pnS>AI`"dSt-*dg0XjY/YrK(+r'*[fqBG_B5akO0.%$Xho$`E7u5/-T+sV#_=SLo8Qh>q@[0f,L*j!b(B-+u[AdXY;Cn![W3t#p8;,8169t6gC$-9s@;g%8Eu/7`o,iMRA*l2TP7o\M+,)%/Q;470]9*t>22(,9"]`!/*"@#f92eiJ1$IW@)_@^&Eb#>E/j`AdKAHt@$uaR]L3V=+Ie/):l-L,AQeSS9$jeBh&CLA`,J\n)k!N8%M5d4CoAHm>QmX#m'E3T:'ltiMbZ,-KoM9]ZaF"VSQYPKRL?31Wh'5rj^r+,i=-Klj_6PX7k+Y9/T-uKXGcW2W.035=Vnbo$?!o9E%'BC8,:rrR/84(<WDO?O9'h17g,?[>m?sp6fl>!X3Yq0BmO>NT@3])pLl)Q4pqC]pD`q"k;`X6CB`X7r`SdDKP/rHf')U!^I;D$[I%lIT/%J`?qcKRl5]A>Co`jQ\MWU.":;-keGq%1+crBG)m#:7U5DD9e:EgH9m!%jZSBAHBQ[6@6</b*%C<K)061*AWcl_XMGXZCpai%WR&4Jo76)\Q"OhTJ4[m.:_G6)ck^@E3[ZAW"f1Z=.gEX<?V<<MPC;pcJdfE"g,(?6@4k0JmYN^:K?%..A.nAW@LB1>aT^gY/OAM&%PZ:_os!j6J"'sE"0Zh-*Z6:_K'S*=X/$"R)9k7g8Fmb'*61mj_^3aErkX@jD00Ep>nouR&(%\ZlC?Tfb;c[/$14@<&!HlGdX;J&K%.]\K>SYY3Z95'jAdoK<iYu[(qD&"W/FVXBkC'q%%aT^[o.07EpFnHf#lABpL*M9oPHO9j?AHthL-(qDg'>,]JL_u[1EEVs,,d*"[%c%F&?ik"*bo/+P+MX-[c3S-^'J"F[>'"k2)r`Y?M)dYg@J,t+Y757\g)QU/l"VTsl7-^Bm'3#Mp#tbMK&j6D!K'EDY_3lGGJf9OZ%EPKBM)M([mD/[XqdUU`Hd68/KkoO)$@r_O??XlN]e9=b:1fgt/<*$eu<)t+f<*%p/P`b]7dTD^ZMFAhDmT5YlJh^,D!Ytk7i6tee%ef1n^/<rc^'4lb$U*W)R!Dao;^l$TG+O7OWB:Pm(]Nildgm7-T=56sGf2n=Sg/^JQE"U@X%RZ*?qXmjQpc?[BK[bpGKOtL7P5Y`g%KU)qgKdQBY8a:&q'n<D":8@dQMQ7\tNW9<j8B:6<&Y!YCQOjrZ5*9DfL'NdI,R>^S8`URf$).gO--#_i(XQ3BV(YF*MT`'#jTtu(%Lf'XtNi$f+l,aa=r9-=ee]=JmXKGldf6=EW9>/pif*i1]V`u5#>g#7B\L)WnoCNd?aHf@g?X9$Pq"<16)h<A5ME;mSE'X*HaZ?G?%K_7q_hMO(^YG*>:Y6(;kY6$4LFFcDa97V.O@D)o;`o=F3c&t4CCsUI=ftg+gTY^aG49E@[d*8#F?XZB[e8%o.jBf2=F@3k81e8b.%e]bq#X.n3-:LQ,G`kS<Q.bU=E25GP)RXh8]SeT-M2t<8!LY+,>A6+p4*]V^`ViqA3US^;6PMF&[iej@PEd1l+Vi`1`neR]_iUqk`%7#'<=>ra\.PpHjB-Z%j#H;P5t09H\E,l!4#OT+_*hI]iq?-*k.K)H24.1$o:CJOoA$->U;Q37Z"TSJOc7g2fY.TCNoipE-YIR]"R%>'Y;"BP"@:H.q4rKH54q_G:mUY*cd%qoDn0gF'f'JFb9"(V00IG's0%`m]4[d`a?="N?_;K/Lojqhu9F^?ja+I*j`0=[fZ"WLZDO%b<-S5?1DB25ka<[\I@DVQc^tJ!CS)kFHd2AeSOidoiQf(7JX<ElRL)<HZa@U&G%gT";j\.<+%nX7SQ)*7XHjA#>m[1#MhS[8*=>!%^f?ki9tM_QOY'Xf:&M`Ok2:t3H2!*8VK&\EJY_]G,84/m)9):^4%Y_/h!+MuGmt`0JbUB(!CU2;OX:keS:G]R65T`a=)Hf?0KUiZ%faW&ZArZ!_(eEpL0qV18-D,:Q]pP.=.\FD,EhD9bJ$BD=grI"4EVCTXN2*97lY:/Fa)*`_7b)kjA^!h.OjlU)/_[P"a=4QapdqL,%F]+f#jrD.&iRVqVnYrc62\noh&.k:MAK(];`9L!*T4ums/M;jHM!m]@",Y;.k(4[4\T1)bTgD&0.pC<ear$ZWNU<(E?WcUAbPnIf%m,HnP]:ZdSWNm;WSQ(nG)I-`N=k5u9Z+\(O;WUS"iBAfrTqfoQ&#$?.Fs!>LL5(-.,WuYn`_0r1`]S@O,EVEAfg*ui&hD@9Rto9Y%H_EemQ"sQ"mb/NV$_;^MI31KXES0<Mko$Dtdb.s^dnHe"5o9jg6rO&@[:mm$,,a("i[:]Lf1@tmjun03SK2V2LX$C%6<lJs6B8@s%cL;fO`g13L8<WbLNMjo[OLjik'pdBH@;!g1<*3$d2'^LJ7J88]/1r0;$JXAoc^M(t[f\7k#NtWNYQuVg%YY?;FcRAb^m`=k[[3B7%j2-=eS:pd,]Z)N;G/VC[$4Af_WN^@(+,fK<`$)/h=SF%MMIHP`mY@hsOOS,V-/,\oW#@f>&%_n*.]O@8V^d_Z#ZG/%gbE4d\IkBI%RUN2#]c#ss;$AVi=IF1RWIMk-"kH(:Z+\(O;FRaPEfS@jr*B^lE,YPWA8taiAlk\]N6;QdCLm%5YR!SNLVi&R>gEaM+M(=h`BL;A%eVM43JV#(IZQRt%0mXTB48bCb.."9%=f9,G)uiskmFO:qYl!)uSI/"8N@Ze6/8LusZG!'<Urk\m_L5*aj$n`^+$sBJ8@f:b7=EeH%gIEs?ohsF^q119>n0+m'$;9ID[UCK9U\A%o,MEM/$E@@UJoXr3k[,b)5ToOS/pra`Ntlin@ApHE'#p/5<A\qM;,626>/Qj<;3Q&N%g.V>h<TH1ikK(<Vn#`gT7+B[k3!SN+F;<s>\8JAB9[&j$N$1m`&B$;QTB4F$#?&kgU:tq*<*(uCe<TZ&>tHg%Q2O>?C'!Ru<7=[t%<"f=$en]Rs:teK@rI).41Z:`"mtd)0XGL1kH\n#`b5"cKI7.D:(@'$aP.KXRhPmZfDg/3s91Q'9?4@.Zq1oM^@eZS!JY[/sUX6=o%.Rm'd_lc2!MFp@\WJKnJ;HMp'44Q2o7C/G;NpkAe8%&P#6R1D"j[<#HLp^pBC*KS.?K*?3,1fD3)OY[EnnBGgdF(<kKW+k/C$%'L%o$c&]0:NIr"8g'db[7I4+.[!ff98VDi"@Bb&cHuaV<ZalK8i'3Y'RJE)iutdW>ofQ"-EjU\Z1L^!Ir17f:$k5(3+F%3*^gbfNblc%OrMJn59qZIdF=<$$k3E)`p.'''M2P@6sb[2_e0a&,Q`Wa/g/Kk_sVp3oMgpdFb].i>ht\6Y+eC;h"_'sG<LL.mG)3iD>C?f-i9LH%0].)VdZ%Hk`27KH3&e!'gLJf>lJWtNPb;L`nQ8ek-ka,cLI>WE1p)G6TmK$GL8fdH^"ic&l-Sl-K9P5Z6<@m$obF0@19.sc27?$.%2I_^rUmipjV%o.da_-nI41!DLp$b>S?)0g.0K6$a$CL5nKN=s%6?=[C]4NIJ70,\qV.Fjm+B<?al$%m8j_c399V#1MZ3^PL0i'3_%XYl"V)=ge]![EVb$B&7p(1Eb8=u%5HI9QOZNfulrHdSV9CL5P9fW*IIQ_oJceQS9^cCZtTWt3lf2,O*EJZdRI@)DDE;UJm@Ldn>C%4`"l0\7BN9dC=/1?%uoL2&<'jVAZ)o&Aqq/IV'>Jbb(?9Kj58mV<R\>+l0l2Y]I)??imk7I24Ri@7</.0DElJ,H0E(0Tq`.S.DV+%Uol#f(r2$M,ds"@8Xd_>d`k('NSM]Lg^*C2ilM1[*)BUYIK#dOPCZu5I3&ts^uc5*#%Y3/Y@dtNCMmO_>>^UM?aLWH>7fm#?I8*9%*hA3l!R\!K#:tRc-:a:$)=>roS?FrG%#CJdODY;$k8YZN=:Mh%D'`5G+QrJ>\uR(H)E$eor")mQ&gbhdmM,f&7kbelNRU['%ER1C%,hiRF&P\RQUXT*r-;-5,4VmF=eJ;,pD&8GK(.S<j=-7C\csIpeLaN:6CL_+_,3h'"K`mZ$Sh)%?^m64:/1Mj99!#tl->=[M8N4]O%4aM$X*Lau%/*jO7f0`\LbKR?45kITm.k@?apE>:76EigVM57j!UX6=ol35p8g-_U5@\fK.aNc)C7@\QSK58>/^ni**i4Kuoa>S"]%+35;LZXYbPe2^uK!G`mK]XbsRdc:fqU4#:5K,2&@+-NeD)E;k^\.(s=6*AeJXs/J_e5a"OB>1Jg8EqucMEG[K>-P]94/@`P7`q]a%lsJ2ka,7T+>t#B\Emt5]kH1fVGDD-UWPMu!E$D9.`*,",k+Shl/THt2OlrN%NQX>.VlnSYWMU/2XbbW>P-3BZ1'P;R!3h<Cnq@c'%ZFceA!bn^C&CcB;mg1eD:GnPLV"U`NM($iX7(;Dhl5XqHd\j0O"rDsaZ3oZ!rH(UTKP?tBl?3hqb.>KhiQ)Y,ZEbhJM<uU,Ot(+T%OmPO,)E-3uoE2K9Qiu.UPM/W8=b4eCL1q#-2/=_(a7)h/KaC=<8utF-<g+t%C6.)4W%oAdPi(==qaYK,[cb;E.I?!![K<.>`qBc,%-R/tT#ICic,^#/MMrqAjnqjIpDNZ@;S9/gWhP9hr<_l/LZuu0!iM&&:]iNOK5#is*_Vr?qU_'$#QB"TOP57q4g<,k_XYZhdC+G.8%QB?'",!2-u're*O)-d]t.r.Re;EqQ(fVmo)WVt[cf%,MMh@UtC=;1MKp(B;UQ*]8ep*"\j>A,O:8D8r<DI-OuN'17.*$"C:CFcWE%c%iaE9mUP)Ojn)S-/,\oW#0>(Bb.2;NfeAI+o@V5($?Sf(RfeF_hr'YAo)A5JhidlSjFa7M58u?CXHD!%qT<fM4(/r/9eB[.dsWh%kpiD[o\>&0MMS!-64P9eeeQfDnb4h8T#-3F,n1-(&O_:Nl$6\H,^LN!MgX%8C(]ienrP3MYb9^X0Y/$gMEmXmhqXO9@P&s+WJF3q%_o\^T>@[YrY3t1?4*?fZ)H^Iu<RsQDAUB9)UrmsX_L56e"%R3f+$s0D9pC>3!)ottjP3:a=&/Pm'lt]$)JIrBVF1<8*5+837!hsu%.n6l^g(RGrNfe9^_rtCi.Un8&3R1Ncfca@;lh_5`F6+:sQ=gb"Poan,E$@kcM)c6D->-;bQe4m0aE1>*JU*;_nn^^3[r=s8HuHd^%g%a)iIcf=>#8k<,Og&3aD#A#oin8i]s+H\a5A%Hu(>oPtT-m[%*#2!d-JGpsE*#^K<CbTfM#_n2.;DDT>J>GR<V!H3D,?>u&:%Kh%I4*)XP1+@63lFpPmHcX\jI$O"H^-D"&QL^)?6VKTdQRPfR*s08OSobh's1UG&cKpe&ng2%/^`BkHB$c!U:i?(YS?oOR`Nb'*dLM\%d^U.Qn'V"b;Y/eef65@f-a>S0eac@U,ce&7S?7n63sBY1Ai=I9')=nX0M7Y[`9#/_)%W(C&=*m\#3g>dOaK:@@>V#F2&<PHH1QPW%(0^%4/+h]<S?4fcCuPpW],*d<V^=rhFBI'obp-KB`fuHGe'G%^U1]V)Di&3QWG`)!%[`==O@>;\K9u9*\MM!_Y3/u&8<T4\\='iZ%qlDDDCj8-SGbD[MiTS<aQ:_;^@71U3S#!f!Eqh5WS"!pjbD9]pe*d]d!Na$+MQ[%FJV&%/P.rj@:?p'"%u&,um#j<d0lg]!4N"d3%cPm!XC9cKp-:Hn<H+%qmG`o("hn;UG'1r-qQuN-u48[0j_StGUZL_*MAn(URK-(2:.NJtU4R#EMVa#<-B_JiA_MDVPkY+q2<.Yo"%A"n'%UNO@>-tK9a=#;f!J[!bE*Z@PXfu2=u8_3[dg9!*P2E8UU2Nqq)%9)5UoF.uR^!<0A<D=g/C3nNU06<0hl>\J#$Jt;$)3A8r%Nm[5Zl<HTo!EMQ?iNT;r=BTdL#_""t^+DE)-L[(D)?4ijP0s'.37>G!`3iY,:eLWW\pba]34&k]bkg"gXnuh9VVoCGKH1epS'Y#r%O!^>(>FZD<_&bF3#MHAXWC%?%VG]e1_5<Z_>.)#3lh]sEU?Uq=4NM[gp!"X8JCT`QCb2iS,WWJ.[?&@DbX,&"6eM?[pe9lEA[Q^n%_Zm5f1?poEknWGi7lL92fU_W!,UE&O=GcaQ-F^7T]s,G-._"#^Ejt;.Ipr-t,IqHfA1=j&=VHtVSGN^cOP",1e?ZHo5rb"V4^qq'%CEfOd\\q4j7%TT[NlueA?E/n<Z.VP?;kTh*R>FD6QMK*ck5ie?$41Lh:qcF&&a\qKY95/;qAu"sIFR>8&ab;K"Au=46+8@RF=u(N%h3LKmKq;;h0/$Kt\A2"geh4Z3P%[1fr]2gj6rNK0OU%tEI.HD41J*dOgo9ujGmt_#21>gJ769mdjYO;f>P;c'%^H\-I@btA$B\d)%@?[$Yo9ic)8#Hf;ToYXI0qu?XT:j>L/1>^*N;eO>b+ikQ/0m00;FSR,m*o8t1RBpu*UcBTO[ELc,7hF2ZAG\0As+LH]PrAN?[_g.%Xs0]/4dK)9k1t;c76o`M8T<6*GHV,'#OCJR<tW^B2[`;QM56^VUWBbgWWh-Mb2Y<U_+6GKOBkMJME?&5T;`tPo0*pj`1Zu"+u\'G%5#id6g"pL.;[XjnNu4;#R`HncQe4m0SED0Q#N[g^Trn59C$T_"T5oJcT?#[^1hhf)PCR'DGH@nPBC5MlCdM%/M,EP@'/bF0-1rE]%<&.?H7:cF][SD8G,F+^H,Et&/"3rlqS,+C)+pqI;n%?(5P.F/b7<;KC)<K*hDNZ@;S91ZK3CiP7Y6_>$kLtfl4InT.1jXun>D,N'%7HgY&+]*=-'TE2_,3;0m",X_sk&MP$\Saf^Tg:u/lWMU%\eptGNCDoAcYG$t1$&N].`,btqO/Lf=Q<Xkp[;U_M^soH[)AoIXGMmF%H\n;hb'EDsqk1S+NqsYYKYAXHF<@P6Wk3SgBs%tS>j(D+EUnR[Y+SEGC)#2`d\%4'd@SnLWY+WP!X2T,AO3kB@e;>G'k*k#hm.nh%fKg$`.Uf!T]g=6lLr/8R@sJM/FcTX_k!mJ9CUBD;=lP7[G^bFKZG1_['7CmGp\+)Z+XjO$kl_ICI45p:J+Gpdo!SDNM,K.ra_P3i%"%ccG7Wi9:<*-MpeCA9-P*'K/,.j/JopOscZ+_CnZhNgml:mnY5+6i<iBA5qrd80!S4Mod0f";;O\opJZ'/-IcUkVWb%op%?hm(;%f<103-+W5clT`Kd:M7g&@9m4u9lel.rTSTU%4$(c=GcaQ-E7:)9DV#UW+DcpR`PISIDouL4aX=-eCQub9f&k-[Pu*g19,<2lI``R%P57\M7=/&K3Q:\)5=lU#:<GRPn+"S-.mATL*)?#\c7aLGI^,'.HEHrr@WFF3p5<7X?``=d7"Fm*[F!>dj_^_imt?+"bZM%:)XZ9G%Sh>HJm(ht=2u-Lfa\;7M?A(&a:U&@:@ljFfLX-fY&>agmp>_(F+h>rUA'6BI/OrRYdrR\6D8c56_co<GaE)4D!1R<a^=kCcX%l"P%P1n3)73EcJJbc)X2>P0-mD\]87/8)IFSeJM^;XoJB*s](#P*W/Ya`*;mC"3$c^T883jJ&p)ds+90/J/IpB%+^K/GZaU:jrI:h;a"%_L5D/J`C984Q^CkY;g..?ngsk6V\PE%W\+Ci.M:FPgg!FaCXnRQWI]gl8,[Xbumb).7SY=Fcn/F?\<6gKA!f&W9'/\S-2UD8\FXW%NJA#41MNUX8inD;'T(NZje-,hP2qmqZQO"'2FVu/9G6G,&%[0chBVd#X71r!IH54G)K_6T,3<rF9uUH05"/+R`H'*j+T"^'Oc\(6%@anB.6qq6>8Q/1p2:]gGU9\R.WHdK!%;hE2*^.f+n.OZ.9am\>*^mgZZh+/JOOQF&A--NjUY&m^B8ttEb&\3`U[f>5:f[K+]"6,=%T#:^)%GVPhU'$2?Gf^cY-d4"YjV>[9mOY>*Nc#e*WFnrT%(;MpLK%-o83%EIrCcG0,Fnj.0qEmGK_J<gUl?QeIN2ouiJj>>%jGu6%m%#qTV/"'u2O9``,<(:\]LQjqrp&97e91(]V+Fr)&[h5$cAh0^H"E7CU"@Gujn8J_?q@@q%`qL;oK=lEql%V:,MEM/$DLeMJo7S4%4-pY)LFH]/(7q;D9.OKMk%e[jQqf-4`$jfF239Z'`2KoAM$hH"P/<A3='-+'$MtaQ:g!^Y'G`V3O2Vk,'l1U\BDoQfGfeUd='Lk6%+rTCF\d">/9oO,=R]%-@0.@I3U7.3bWZq<V$B)F.H0=SC7c'EC^*9_`QZIW.p>gE/Kuc6e^?pRYP,+CGMrn'b0>44UJt410Goh(*%EB-PXV6S@TU$JJ8Ts<G9%p.DJdn(:_qdc*/G!*HP,qJ><LD*?iM579fUVa;`.Vt0fR0lT]W3B%*CLVB;oMqY`o)aj&e)RPB+SrZ]%DQ`oOb-A`S2!V?]#*QPfN(dVRA/*ckm&]BF/;\<fQ.NfK?fQpg=$2s78%-%$qA-aV.Qb..2.$E>Rsk+f!d*8=qAMoi26de=od_+g%6u,AB8/%8IFAi_'];2P<ce7LC(!jjaER`LU87R!0/1I>$3BQj'8g&9%Tb`Vj2<5Ah9<9C1A2q]nTY-'JXfQd"qmF(ST/m[LpNNgJ%]J^393lJ)XKrEj?#[rpITq#m_+maQm9^#DLVAQ9qW_Xgr8k-CkM!SAE=2q#@eC*RU<7?4Q)>c9QbhjL+-E=)aU[F`(Pt2ft@T6F[%7!3'f8R4oQX"+L#FaX^)W%3?glM<&CD:U6U\8uaCYO^?$CO$($IUV(Y&U=qKjY`.LD.4gFj&L>&%CVT;Lf@6r83'\4rC[Lp/5#ZI%]Pb>\l8:k<h@\haT)EZ7dRCAs)j+!hO<h9QN!lU3j&BbHnWQq7l_L$qo,bYFBCX:?[>tJ,cqKJ4BB'],[]4/QfeR8Xf,*2*`cci8%MAf,5Fe'@,Q8MNL4""Yj/4hTS$_g?/;obi?/RhU\WkP&C_.2Eo7fC_>Z,a)$-3Vfa9XY&&D[qm1XG0DX@u6KDI$,dQm/unt1KW0"%"-jU.cTA>4;BJgJG7cH46U'+&+etmA't!D#f@GTpSMmQ;F8h8O.0WpKW^E5R@&3\nk1Dbq.^4)LVMQFSER`LT5%Aq&N$tG.WB03.%30?R7%3lNg',f>0gJ;^M.e9*oF'RRsQWsU^*d`2f4l0lP24)+^<q<TGGa;(%q$HpUQb]e*nl$b%6q8bA5'XdpfP0D,iZhrT$/jRm%:NFZ*E+%f@ODgV$0[f"]a("UqV6@,QDL#OC3AA#I;Es@XptRg<"<KmYmj6kr7??X#pQ`"EN(#7n`lk'J0tq$(D#;4N?8+jL(83>K%(ZTEt-Y_8/>(He)@SGn_2it0sdrp9\8DL]&#E45%1XmI"DIrU&Is\sJ#fBXn!XP.sjBDHbOBO;;aJoq"`#^Tr0F9.kRQQ67%i>ZT%`@e:G"3)I)BuU4$^f\1gkEb1)-9%(/qdIq0m[@4K22h?r'MC\8[t@..#cBh>LE'OABP8X]I'JWt^UC5I(MCf10@m=CWg=uE;R?8i%,q<,0ko5h*C#cOhdmD?5;]fhh.?]uWr#3_G3V/](q'dI$5T%gX:DX+;rl1Vd$\lkh@]+X@Vi)5*Vi))07eo?-9*1\;7bnh<`2ANi%]jY"A-2e8aZ]OP@@N^ZhR/2!2@)\p=hCb,n<QdNSNu*]_l_]5o(Q3N3_rU>s+SX\CjW#%uce<2r(Un_$(sisa#aK!i1H$JZj4\LY%%:E.2")&GQ!iWU/M4K2?Nfjl"",Ne5OIJ((NE\Qn=P-)/O]tXJZs-\\Z`qEkrnU@,[8>PjOEs?,`MnSNpL''=B;-HC[[@F4,^L8o%ZQO"'/k(-'bFlup::bjA?DBu"/:Ik7m.ko!Q4BjEoQd8P<C$Jdc)h3^i>6Rc`cr'WH+:L26W0h=Q"\HXEk@+OKlIe`\Hs!m]9sDI%$Y)jSXn#d*aM(i\8Ktc?KY0I$"hK%OM1SPEpT,$k,aOfR+_l$e7=2krTZVO$Pl%t<)SOb:WV5qSi]dSbGKL-;l8,3<.o*LA"EL"]%["7bkfp$W([OQ#BOjnYceCP9[)lBfT0Bk!DU:ue.l>(l4BDdORBKKkcBo%#HGM[ur%*QsSf\T!dlj$OH%%APA:*fLn(qIGNa=4Qa%pfZYT6^^]dI99fC(E1I=6=ZXkI1\9OBV&(d_UIucd&F:Ci]*A0ZM`:)#qM.5f?8(dF>(%_ZcU^';B\q,7;IjWZf]oPUp2U?ns2n$%_(W/t7GT%Z9$N@b%iJ6caOP#PSB)k\L62cer'SK&*Y1)iSYV-:-fl>8pZT:JG!@=s\\'+qAYilj!)0CC_UC%hCR22Jo@-p^&@!3"%0.d=$kCd+&=c9=L1_n.HoXKb^a](Y$.k,8F5\$XVT/9AI<ubsO=]Zjr2.`>Im5HIEOYj5ZW3!(Wb0'F@ZE?1e:h:s3Y,ng($YAE1%8Qh[nC`ghNlFV,[>;U&4!%%/=So:#`\9s3&5p_]*9oMEbR]%'>0<#J]U6:XZ.O+a+lACrZJ+>lu2/H6Q"VrgoosMS%N68E@,&F4u%$Z$qWBSj-1O7"1Q<4!J>%'#i`6$XB:F8TA0g)`%Qo=9OcidI)6MZ^aCH%AC@a89PUNKg;/ol\3B0;bsA;Wim6AOfA.U,q%=Ei.-F%.-`AJG&<2`L!E:GO(3`0E8[GeeP@YmCX:#tD?inTo9,;T,,oe)a91!]51MV1+ZGB-B/kbA+aFM9oeh1(I=8?[I3)@sVE6G1E%5/o%HAP^_HatJV2'R&oYK;mUB4<1@Z^Rg0CbMauWM5P9iRC6g/nliAG3kVi@3]'=MRpjKVWPJX-PK@cK2.(58_kWBU-5Q6N9V"996QIJ%17aYN@,@[Qf%+L5\n@N<r$d_%*[VfrSloB)-'mT!\FuE4c74JXi'A#+VZ`aWKO!M>M^q4Q'rhr>:r,[X<KR/OMOL]p==N=$4Vh+E%O79Qe5$20IVG9?eTVg!oGMo\<US`?+<)g;l'U:McWfh1"e^p1BWq(q@Wm<G$>IM$%S^<pof#Bi38[sja0]*RYnoj6B95>ZLf>L:g%B/NO<;K?h.&#l:\O`IHFqj3Oi7pmoAmF?5OLq%I5c.dj^\J:r?+c9tR95>YAA;N;_U*f&&[$UPZWlT<\cB3C5?[h<N<AVi'6K+N8%qp13EVJP4Vg'*UlEdS$*?/^6Cm&B!--O,HF_1s'*(:d2#NXZu=D1)oP[X;]io5."gJ)pJT>"T9TJM]srl\L"6aVu$nlG>WT8qD56%Jb3eM/,#onlhZ7U'+dFOP+)/T6peiNpAMIROU\hnII6tjKH*+8dXC10^V["JTDTk"\f(cR)'s)5X6^bq0#D1t06lU!?\u;[6kn0i%ah<bipVM/rV>qLCPnE'f)6dnJV'HS]<eUGPd%nm1AdHkZIO8-mSa[m[<<HVm$^R?!b"F#_GG1TMjQJmn_Ws4n@ilT#jkeW[r`#R5%?do8r8OBJL^`I>0p2ROQheae6j,;V:1?1Sj^1nUgY1MShBD-a`IWk'&A!E,N<1tC@e7J_(RR._;JILBkN@[d1q`m.@!24E^mBYL2%_qno(T\!HlqT'%X.?<Lj0NDu5V1(kq*a92(Z,7/J[f1+-=t[3(DN(!!>'ApCm3+__^XJM]5h0P6/6dKC+<6T:+KF/L\aQ0fqr*sf%0$bs<r#kM9J"G;HnbgaEgN<bn6QlbY*lu)(Ym#-'7XKZ;ZSLp!BsSAM4W*aWf$IZZ!7\!-BAQ&SpU2#.N[U[QUs>h/4Y\(bXi3/X%DVn1]1.fg$eZOse>aITuq]KX!?N)$/]8$4"at^ddH-H9.Do[XE<QUN`ZIK-ce]<tr,a/hNE/jV\0R$-%j?s[f%YK<pF$pJU'(TCH%jANLg"4J)$^bmMhcS(bSaXYq"1B*Sj:,8?kVB,$mXsTsC(X2HZ4!m,qWTdFa":t"r,IFHaOtOs(Z8S6Y@CF>ZbJ'O2+;CJ?7q/L:%AXX'\__KOtD8)EV&dbdjN`jn2HnTc@eTKl5f"H&=n4BKoKpID)h,M?okCiYAJn2jdQsKjQg)Q2+blHmD/XC!?K.KNLYr#+ZjP<:=%3=o?0\EG-%]."M^Ame!mb?V&27U.Lh5jlf,>FL[=HWaAF3"tk%mh-"L#&IQT-l>eI]_F"595o:R"iNi4'%8ca9$EO#]$f6*/=d`g%\D!YcXNs%=;$O>+/_qa@GTCQAOp8"kG:C4$l`2e:5d)*EWXMRnHudZ!XOsiV=e[$RaR60=#?Z:ki;BK\ej:2!s##F`=Wo`F!5?[%%&Gc>n1+J>o_la518Boq+OK[2Y7\7.2:3QT]YhLMVW6+)1U-1RCeaJHsbD"U5mTWUMZZCBBFP12]-bBq8iReYe6-dRA+g/OMb%QW=%`fqs`l7UkkB\fOp<KLY$6l75U1OBZ]^N;n%hLX0`LE<<`UJ["@0L]35VjceZ2N!r7%fk.k`ck(UbJ*d[IfEl-Z(=S!?o>R.hRE>;%A"aOV]0#oA:t5QPO8S*@R-"#=EFQMQ6#L:+m5F<r2'=gPj>/P/MlV;Ok/[A)lN9EA%%egF?+'_>ni]ibd)Q1?glOa"F%f-gBi:(H%bG)re2-;V!-k/niEE`Pe<]>#84NN\5B"k\oM"'L&D[?g.?+t7S&k`lR^\nMGOo>&aZp3%af;.$S?4.2='$rBk<<Mh^o_r\XL00ge%O6rK@R)#ki%*X#V4%aVD&W#:P$j.0q/TMr0C>-jF9i[68_S-/KiO`u7!n"V-DI3ImbQM?]^ACS#nfGNVKmf@DZS/.M\T8YnVR1a(%PU-O2:fhL;'+7aMYg'U3$WB)9iPfD;$85X(FXFkm"W)sI,^`np.+QQY8.5%Wjrd83k2"Q(8-AJO(1B`9o>ZfeW/eH?)&Nh,r1P$r%WG]*s6%D'/)"sefH+WGlHZO;*hoTmAU<_Pu0>T$LL**6']4%5YX(TM/?fuhmWgGP>#9Q>IV7V/D&DEHUVKZ-=;k%3'8os!($j0E4%I@,."kJA(nEMoA:.);?eM)W,1`sAD=[p/2U0HW[bUr'pcYZrb/`?DC!@"&`'2_YV-THs[Gd_>8F](T;illT,#*RQTQ50u1@3K#L+%LKbkF"#__7CFV4nD;OfZdQ["<6N-J</?X9OR6Hl]Ct[&`N7):kM7`7YlIV(MqMP7E_sjScSS$#/1D[*WC6@pk@PL6j[pNRK$>)t5%_#iqq[Bp9)aDa;I<NmUX?G"Z9=C<i?C!?`_)MaPX_&tV$_2S2_VGD%L";/@<Q$)QsMJjtU_C\<tCT=CuEk-ThHl4KEDu3cC1ZHSc%@#9/XU[1W)%0jTG$B&Kbdt!?*<3Z$5rEH^\ERD&fJIJb)K'CKSF0#'>"e&u345+MKk_>R3LbuA5o+%*`M_1K7!X99\@UO(I7SRc=%7XH:*,g%]?&l.bYh+MoGfoYQ0>QC&FSK$)Rn?P&U9^[Km?3SsJE\s\XR9T.!mhO6e%j^h7R-tfb-Jq\)\_)(e,i>)QB\U4J)IIK&%#j]Gib8]rsK`,]h1A2MCfRL;lTAEsG2GDdkk%j`2htLJ)i`@Z+#;9B?%AtYZBQ.RE4B-e;[OS*'Z+I,.oq52B3eeg\;:B(3RO%Kc%hge9Z@[p(U$?.p7D8s\EQ$O;6]JZ*$^*<8%#@"7[XN&T3DqELg"%_-RD+Y,'fM]+q61[KBjLW&ocQ'c6it8Y$EiJ"6WOsG1pQj!n%WO6Bef]#DBOub?WeO23Ee1o"<qd'dnjGd_'3^pl#V`MiX4_jDo9>;Uo^np)Uc\+@a6uV;,^S9O*k/9QKP\W.S7!*oeq63b`*)`k2%+1MS%GF[<Cp+2GXC$j:h=Gj]_4,Y&&=Pp6Fh0kaK*_4bB5GZWOME0!\G/p+1/TVilp@pC)WBspCh(n([;Z@^E/pL+,.;pm2e#<\W%4681Pn*s&"],M6tgU]7]iVaX!8TSPR&aU`PGb4kOK(3'_IXG"b4!/dd41OC>'p-('c3,SMaQqE$QIIOQl8[k8q[UJs^3]hbon#_D%EaYbRXN-TfN?q:F8Zp@7RMsMdV0ScPNmH1+A.l:?)7?'qn+ig"A;@E&7<gh#VPu+se1o"<qd'dnjGd_/3^pl$,<Ej)4_gK%ig6#I%*pf'%n!#t7-l4-WT,hi"=;dIbN`Qs+N*Y"#>*\P]+,K!,'3ikUejTIHHV$k%'m5q/;r;(Y@ohe!/[J%'8p(XIB2&Zno82;Xlfnie%U0rndK5`$6H]A7CXJ4X:\!FSh1^23rmMM;bka`N.DO>;>XfX;P%W-pY<XrseQc8MC0nV?mZF7VlQSVg&/!8?Y^eF<%O6Zuh9+"(M%W+A_H.&-GfCF^HR5-u&]6k=.**cmURFkT,A[2"`-*84"-%BF!4X^2OGeJl]cl4er\)UY7\mnjI0jY'20QN^TI<%POp%`qj-c.a[S%b77`C$CA;T6;S]Er?etI4c?&-@X*6&H^q+_0rI/+OCO`doeB\:Z-kkX.YkIl!9elG.n&UDg5<SiF_GP58R<D^'>,O[M61?,3_dG3%V`Vo[4aMAWpME:0[_>:s[LL0(Fmni:Q2Kb#,CRmT_lj^CX-NV%hW*;4Q>[5QWd&1@:U.#S9V]OV4>k:YQHp<YIkHCo!i`5%ha0l(%.F.^N!;uQV:I+>R%Kr\qF4kbpiInn*Dc+oioP'%n%N_Km\_W'*4uUkJj%i7dl_Crr*$')gNE\E5:SifcCS[C?_\n4R7q9'VfiBH!%l\!AH[0*sT`5hq^.%')?AQCih_/Lba7cZ^MH1ta^?unQ!m3^pi&2DZo]<tMj<II*;Ksj.Un($J-)-GcsWm%S.\1l;W,k]rtLHTHL%CO0)2[7>R_OmU>=Y#O@#jLa^f;CTXJaP%[?ee#1QDl_\dRI-V]_G#6`[e)+1d=duHneLD4,km>O*Na$M_'a(Oo?o&pN]YcG.dsWh%m6'H_#37Z_f8dqa3=1+EB^/UVO8Ph_5<d\b[N0B;.8L4?0`C@,P5$2CFDk;MOZIfVLq+WQ\aj;=T]5qn:#_eE&qL1<M7If7+t=_)%957(nW6?NW$IA.:BqaQ&`N6Tam\;"#4DMb//AdWmHV`P28Y&^Y1r_]bG9HX?(jY$S"eWH<bY9H7Gj^7*\@b<bDa3TTQkh`#11*W.%UrL"o)270ZUe"%^mgqh>]0)^--]JBWFke]d(Mf`LZG!'3:)$]rFAq"*=CY7E[WC*&D5E=@+kM@)Io_/\+_.#o5=X)-a/tbCrB#5I%O?;1D3eBZS;J)\%'<HA'@l3%PG"`->"&CA.]&U<("FUF6c$[U!F'H'C[da`p]kmT<g:#"+GlC"6V/+Nr=DCkp,I@=O92cLNOf#""%cS.;3`J(6;]HWt"0#rFoD#;8<r3b2nhhT2DMa[JX-%BL7/S#*#P*D`Ofs["___G;m,caGAZjU>8/`]cBG*,$A0R4*CFNr[3g1cpk%6)Yj,3ackgS)#t[U.hjM6oF1cT2064%s!rokB9Hq>rph.2?FOHa[bM61"-Rb-)OSdRd_j/\L&T+*T_,+;9`EOVQ/s?I>MtgWI)S)%"0X0+jR$Mj3`X":V`]^q4a;bLk.f!EYI<26eK1)]K@\&UrH,VA)5N6CDM,@&2!h;$\&#(l-VqM.'4K4D?.#7p<4CF"m6-9TmDefs%:1(?+25?DfjmAn,?#K%)4:F8lWMQe6VOET(@Z@_-B@uO[1KABle=%g6P5:M![\ktdVnB^e:T#\PmZbc5]Z9JX^Wj>HaL$,sh\oh[%F6Fi9O'Qq:jn>0mC"SKm[3b]eZn-*0^QjSW,_B.'&8N%jg>U430lpcXfel5j,6&d+@4]nPOC3'9Y%"JhC<6+3ZB?];1b#?VZ[Z\0%^gUak/XJdfUH3Hj3;U;6jpL+VAgRl`]JJ@RUs:tg%X9kI-#5$;dKp8844,c2n"IqE)h7C'!CdVAYmflLSM]Y'&h:rN;C:HAPUr:S%<8,<qX>=QY7bDWg=1"k_;$5KXdSj%4D'nAopcPK=0Aog<e<Wc#B6;a&'2fIsm*>=9Rd>k\3%<G"PS6Xe9,QF4RY"Jp?KS.a'jPt*%@q=HVGK^H<14>!m:)R:kQ22!W,@bG"R/5ajf9gu%-<7f\r5B)Tr@'-$!6<nU3@)Q5RfnT:=m`H\Z*Y5b:CVX&L:8R8dm$=pQ*]#q%cf`MQBNNeqBUmIBl3.;i!P#3"p#5O+r@kHhj,\c(Tu(iVc$1hdiZ1Q1nc\W:NTRX0ASWIG#mWn.F+a@5UJ4OpX0(4VlII[/U1a5"%LPXF=^BN#[eQm#=[8P2%j?]rK82Di>&Qp$".O'IWmk>g[ZGknA%LC.c02kl`)#jKCKN/ItduiFp`ELUa:$X]pf"La@qtWUuDlq3D%KZCN'nm/^G-*nt>@7(Q"h(0FaP?um`YF8&eH_9$8]%*j#Fl`V+*17&,=nh!#TEt#BD+0.Wi]s*[eT;U^@iTP]3[\s!]rlZ=/D\@:%`MI3Q-AR#:mpg$DDPWe$H"tlEP!+=96*"kr1kQ&1UjH%SP<55U(3uETZRL!_SpjoCLAREcid>m<Ri[jAJN;9W\G4K!kUQP`J2m8G%]9n(Qa^=LGiqqAYr#u`f>01.<@Oa!h1o(4)F-sMMgK9$Ki>U-t"-Ket+;=&j&FkP>IRJ'B[TPKA;DofiCc/#G6WeLuDSH7#@,`e2%2'E[:c.(V&H@aKS%u%$gFlj.U#EkuAh8j:0*3g_`>`qjY#(lhp7:!h1O62Ner%VCg;)hH=W?=;HllIl:JMiQehHjfl&J[EP\mo"%%UR/GEr'_#:]`9;S.>MFEJU?2#C2^[^C2g]kAK&]9F=\<pWnnr1a0Og=U8*m5eF/'q4fdhqg/E@\M6bl-6Ij`2'G<U<2j[!VqR1=Z%W[kX0deh.cU8=4+O62bJ6RSVd]G()gi<`reLm;Z"C*KG*?=Kg2'hiho@pn/gpY*RX@WElRY]UcRXQqaJO+][P08M"U8DcK%j,<c^%5"<EHo%\cUgrj:2PsH6tA*bJ=&$fNIN,'uR?nV!%N^0j9.fp#(B1t06C2touk)ua--7Uk:VTuMlBkHRlhPB72<F6n@2-%?@FgP4,%@QtItfKrZ_F';&c4^qq'CEfOd^!'6L.X:BGa1/cP05kFsMpDjGl*[7I6.B$!S`I.Z4&\l%/-j<RM0q7_/CYl*eFA3s3N^B10Nnii%,u)m&dS6jij6C\QfD*ZkW,$FU<"Y9aq!@Fn4^uoEb=$J@%c3WAKWo[=9!i4gO\]dH1"3*/Q5ed;.dsW(Ad1o^Jp,>FeL8!#!Z<]F%BB^.qAnr)-?Qc].!^,djqf+RD4LqDeS"Hg=CebUp&;bH!$B/DSSYF-`YRt&p^D8WP8#VnF_rsH=.'U`[ZsA\OlTuDM5:l-)=k.T.%9$,6fJuks6q6hJfl!*V_lu%O<_RuDQ?Ue#6'l1A=dd0&8$0l]Lf()HUL=GU@":5'lWtM_g1N>5066ZE%1WFU\AZ?=.g.M0[*mA?q%#`3RGU5!UR<gT**P45*/M]B*<'K,h_Js)AfU*b9$c,,Xe\-Kme,^/4i*np[$-LMMU/rf*.IV[H>m9.#8[mX@";!ktSa@_Ea>"Tpp%Pp>$e'C6rR73hTO.5FL\56R-n>_pM9Gam76<L4hX<g=*$G#6W(!aA3Q)gn[,`crRjXfW\XoJp*Td7J[")hGDo+riM_VUZqbZa$0@%?f\CK1/eTY0p*qaWMQ^h:!8P+W_`U,Rr',$k)43+HX<FqK#E,IBg3jrORID\4&J4d#2,@67Zp_'DVj&o#:qkXjDWfe1X0`R.Hm"O%&1Li*A/\PDefKAZUV(Ir-'<5Vg<#`)$rRKGVk+C@m*jWs`t2I/U1stgJT/MrYkt`p,jdX'_D]3)Rja7c&J-r9JHP@/1TH_'e2Eqs%j(%u>&X1!'Z#_2aX4tt8W8oV@TBU^j*.O60?`iBB[\(m?^7O=ieO-g<ne_E_0r+7_'+dh^lG=1,aj*/rl@l_>!'N-3DDeVQSd27)%:3du$K67fMl`5-,-=j_<,r^U5o(Md9VFr"h89@)eC0%ui:''2*oXaKjAir0q/Q^CYeE^dASuHImUlGG^P0#&63_,,[?qk/FgC%>N%.-EP2k)d4\0(1puM^Z(&4J*po#::D)26+*B79qg,>KSeXft*^c7+VGQb=I^f^8l!1,UE%E@;O8)]!_7]hQ:pi_bR2B1u1Kmr:9R0%W4MYR1j%9$JYes;q5EQ2pYA^o[>4^Sn=EUqI<$Eo-\VFC7P:nlEf061IZc1$SWn2+hW+@aHe'MYLm_=-o\u/I%/\,5fQF[j4mcIk%IXG""%_]BX`*):-@Z!M[@72dEg]UX4=!lcNbj]XQd/fSYKMXe.HI@[9K#`GQL.+h>L!a/hC=)#[*H[e!8*;id@(3Jk>TjTYEmIu"%%b"uq8rXS16^:1l)ASjb-B^D[N%A@2A/!]*?BQ`"2p(3D]Edk\^@5KW@Xr(u7#(K17Q_e3,)Vq"P;4<&+Jdb&U#M*u>!p#FPmAZ.%4(2sOC2t&Jp-MW/.Tbf+gf6P!W_X&m3c,NAQJ-C"29?54m;*<F6Q8Ih$6_R-B?Cn)rXg@k=;*^6p(BS]'tI)^3AU'nq]((dD\def%g_mQr`/?1b4u-/HLW6_I>F7Wb\(YT;[pNRPL"%,005LLhMf0]\p)5jaT<Y+&R6NlZ9l<=$T<2":,#Vnb*YWkTpX,BWpD%;tIXH-&%^=TA.-/$(Tm$FimIpC*&>D_lu(jNed`3354=&'+tS">o1pPp5+k+pXX"==AZa?^30+TIul%3VmrUOP5/p>esqTN[(1,j#/[<s%fP%O_8RE7X#Z&@KdX_k-n<Rgu'-N2;C1H^:kOX=:^`:M+738<bCWe+m,JK9/W!Op"O9DRdc?bl=YHL?#GKI`7dg4&l']pNu4;#R`Hnc%(Yg95j>[J/W4^1=E)GgP80'mA<%g3dM5etaRY&al6+b*ni/HI[9AMYUf<&UVPE20XLC$Pc-<?iqX/JSFWNdX)]D"k1]!34PQ>""G%1%rg&F&1"A(W(7O4kG=f^A$"hNj<KjPT3ql''URY6rLdU[:m`5EX$en_*aCGI!1*%'(>@:4!gcsB#F8LX7:&_JUM&;?KL.#Tm^_/%O"]eAQfE(".F/0"dCO&+8mRc_$8Y7#DQ>]0BG4a_'#kh]`c:=XerfSIOPk%bY#A2]lWl=`g)3;h%L:sqkL$u1%E-c;1PD,DIGD@[%AEB$>.(+gep3.hj&[jRC@Y(?C&L.t%,4^Sm"Z&^_3DQk?.dsW(Y/]c\0c/b]J)"0.`Q9i$6t)@_]4<W#)9[b;,TWJ2STTKKlEN]&%)R<O?nY.<Z-]'SN%<>alUJilV^sFPX(KRR%V;8)Kl`H`5(9YO.^aVEi0.N)X,k['tMoMhBB+Gph(6TeQ1MPu:]SGfq.t1N%/+I(r%?"OA&G)a:$15>E3pTii9B05lE%#LbO"qFQ-/VQ5D\T6D+XfK,E$b39)2'1)U]-!oYb:r:+`2E*D?BK[%_6I5i+_#)I,=->Ogl*NF%UNckGaL)ee`/JSL%e^aP56aM6n-OA>ZDoBclp_IhW<oi%+sV@4=a_^,$Aj1La3qrfmA`MaPfK&K%<P[LV)5mDTpEUKOQ]]6UT`E=%>]llj&EF;Kc`YFul$a6-?Ug3k+">h"HtBs9T8M"%47r.+=fQ5^/4);`ES(=RWf<4tZ'+nl,Gu5H+KJn7JmkM0DL+.RWt?Y6HVdsG%[pPk6fp7f-gT&sZD_N,WVs@p#?uEMn->M6-I3KY+@Zp:>h/EGdBY[<d_<Dgm\'.TOIAj'_kcW3Op<F3gc>&WN<3JcA>`TJP5o"[F%3l:;=0H.#UN.OhSCKlaA2:Hg.E9-m4lMbdnE[+*?AWqX_4WO@\rQ@F.jKJ;2nU54:IZ]FnXlQ[k$f0oQpQukf@+g6Q=-/e]:[(:Z%YmTQ`r%6":(i$J-,S)$%HW?!T`ETel8\JN*-Nm@Toc9!"<A24dRYhAXC9Hc(DC:Z@e?-/^,5bJ-9AMDB%_D2e8h,Om20uF(lN=La%F3(YT."]94C*oB?l5DB4^oAQ9fMl=UdmJ#:A<+`XglD;!q?oVB1m.jd(KDa00W>YHZdNZpJ=1:D@"0+5?&7lW:[$cLI+1#f6UF\C%M:H:`.ZtIIgfT]-D,cam+ua?Pc,CW3cUoI3RY\m2B.<At7RbX<0Wg-i[W'3!-A!ebI%m$"l5;>MT+sAEfN>A?"?EMS1IpIgB((B>%D&nd0K^E/o)Ct/7m"@M0K?&o>>Jko;;-uN>*a-YP?lK+U+aF^%GdSff3,1V\(rt%FC):?>D$[<@L*?a5$kCLH.V^`Po>X*OK-47Q%+PJ\8\eal;_@[@&QqH?!Q`K8;jL'hn[TE)2DidpT^,o1d,k[-63P^Nn,rV*78YX:E'$`4WO5+`\4`#4f2Se_cf9o#*:a8;=.A@+)%\?(LC0m4bMkbF!GS@Ha4XporXDA0(uQrR\>(QD9XK-4+PT\9!#H5<gf1@t-C`h'5kC62]jBF%CNg"7`.*LF8(9J;OX.q1Z1ZAP/8%el4>b`&Ns?>)pIHXBqgWfTkg&lgg#ehk(c*C;'TXXP]AQh=j_j]b]);1$Ytk$^88\][1EEamFSo\nCp)2D75!X#EEB[$h-Fn#hNG%AsAH[X;$d6"V!OI3Zi?Ri5:l7YuSEd*5%`p$dEQ[?+3M39`oA$]A@\(h0X9#)YLF@\d,jQgUpd]bb[*#S7"u!gIp5<`jVa;-DI&p%fB&clj>=;F;!JgNccZT/h=#_^S.MoEb9/ooO)Cd8@V/(@/%)n)EpP8V]0,U-69K*E-#=#]GrfI&Q$]OuZS+sm,EHZ:q$jgdB0U%F%osTUjhYWg=VreFPB#1Imil!B-2<$dDJjbd]&;.HAkiEmFLkJKKV.WV!PfC#,:3b*.>6RHeb=PXj7eW^4fNk[Yk#lHVQQ!0[ie[$G%^1tPE;e:;MLu#?U26(mpeTIm$:(:bsDU0)&2[5puB2$VS9KK&^/*1ZAfc)jR]el4(b-!5XGI-OKch0V0L,*pj9+>Gi'q:cH*0/O9%;2PaNN=?3WN6:Rb=nc?Q(]@.+9PM-dajjo)G^CX?6'?%RV&H6m,Lhd-.0mL(k>=($3(\_CD\C;LH&p`^BqbB@HBfiGpDj(l:#eI@%jKCM%nU9cuIZ]FnXlQ[U?5%\X]lHa!/a&:WaiQ_YFWf:IM/]?I5M.cTWGW.I#Ne$\otYm7a@U/<cT,\KC[*!6(#bhf1X<,5Ra]\'%;+1rR7!R)]aOE@?bdAXtgaFJ8FE0gr.Q63Ac->4YouJsuq^7(g2j'[Fdi([sGX]n(2E#V_>,@&Q-IEfspW+@-0E#JE['Y2?i7p&d%;%@"(U6DLOmC/?PBkaX'jk1m,d`O9_Sm:lE'^.P+X[4TXZYE\)Up\3Wc:Mdse]:<tACnm\CRqLd-`u6^Mc._.2kq]nRoUltUht@s%,uM(o',QlH8_kULU-5Q6CgqaJRA>]k-fl>6pY`a`?ZK`GksWZc>Of'(Z&ahY4e)Jmh\u4KMu'aZX(H?-rtgWF&Ad5ri0R=KIoIGD%,g/BuUt[]R[SjFu";36qb`s\.EWouhTqnL*2*$J9AWO"5PTYg<E!dM[Wb,m72,ua4cHY<2"Ik^9-=#E0GqoaQoo9l7^m^cfCbG7@%7$6FRS7D+2\\n<@^VmJZG>c2>[#)[,#ol9$iK]j4-KV(@F50@DYn^O7Sa/ZdWT1p#ZtD8(a@g=9Kr,&S2=f06jf\4&^R,o2;Hti-%2"pZ@;-153DQR]gK1&WscWngk,k[2MLutcco#[Aj3A%A\7$]pf*0p9N]j+tco#K$+Sl_TB26`.#9o[m#.#6O&R::.rF9o<t?eW5=%rBG>/LAgn!'Y2+\nI?VgI8"IiDE3]VfQO_:fFPeJ>XQ:JI=Fr&MDlYq]l(UCP-"A#[bT<_po3!?.Oh"t[L$sb%53eWP6m?ZFk+6J%9HH\8"TATJ"l;tI#VHo"SQiZg"6I$C+;#ZNVLo*e?5U5`02rIq'^G`__X(hUGo?-^81bRJlmd8n2'?:@G^[!li=[Mi*$RYd8R`iL%71_1nJP<cW%rCu`)[!MO@+Jt"l!(ElSU7e19umGbmNkE=OK`6[!t]t'B:A'p,1i6)(U#pCQup$L%&?Z<90r('<]<u-KtId?"mXu5%7Z(o9DgpH;(\2+Tohpscb,f"g'sGP&7&&CmI7LBpEg$X_dq'[=io!5\HVB@8d=I/J,_Dp"<KG7q"&ZXg$o.oUO)K/XI@'q=F3MFK%#UW.2n0&VVi7XQ60T]OV#9p-15_44Y^mDK1$4R$AL;i\>e0i$n*1002-3cEBIP:*?A_PQiTecmbR^so"/)7PAf!MmfcZZu8^fNKK%+(q"RH(!F*koiF3Cr?pfdNa^:5bB>(4B:0J1iGbB)*$#<d.(DUlbdtqn.;l4n?_m=n"+[Z"BZ9@#(*7CEA@[OBTRUAWbF6<U3fK]%DD/K!)U$MZc0'kr1R9A[U@*6LCdO!_kf@`N0!o;AI"&<c"#?uL3gGZ*An"#aj4Ue@_CFWJW:Fc$Ni#8_b2jK[i3d*%C&33SRR>u=%n+V'l:7+8A!umGk(^7cW$1l01$P%j*<fJGm>f5%QTmI-p$>1k(OfeAeL!O$3iVp_6O]t'H))5&/Y=K9Xkj[4m!@Rm61[8;$a_2%;%9;\Cs'1MO'U$d+`d5lX@&(?B>ij4@e_Cp2%:;gCL@)kGDL0?5>0n@Dg&JbbSQO-"!F5l:5ebs+i=OrCIb%Qqtm=5[\7<DO5fJ9QB%RF?<9+A6a?AqR39VB?drO8nufo%KLR?#KOLK"rm+kh_#]?\fEp>l*$Z:3H-CY!Y8!a\D3u%eHVO04),`9Mp[.KZ>ERSW^HBlSrZ5%?!e+qqm;#^e*#qC/%^-M-$'AQbtT<8+%rSa9=)3-bp(jr&/-_42)44tka^1pGp8LkepgZ*CsA4gQ,[4QX#s]]KgJ[-@CD7VSn2_L%.hKeMB?,+[0asbp>FUhWiM(/>rhHpE=rK&s&Mb[mE/4(06hIt1-[@VF&Kfo?n'VuG0Ug^*3+.g[2=-*e+6-BqNbCg:7Eeer=B#;4%Xn(,HR"1&EoFd_2rJc.O[9rD6[<<a717KYCKk!O;VQ)d?!(:_0a&jIHs3bk>3_cW??^\b$+Z&;moqb\,B;O&g?.1&KkpRhd:,QmJ%GWOR5hEOp"_AAFM8c;;LEFF4oaJl:c((Yk34[KLQ,>3]Oa`6![du1!!C:d,Ea,!&T`TlTP5aF7Z9XgGo:'h5U<?1_IZj6a:;_iK9%<IG&55\(5DR_+GHSVQ@1U=&8CQL!+1O=2:$>ZnBL*]MQ1)9Sp_he,,B<"P=J3eYC%29^/P77.NggmBbo+K<MJ.nZd]0PWb4MN$^i%FVU)@![8G'dWfq`g%?3.Y)c%a-+^[KattpSe50MYUWnWS=Duqd&R1Th60o192;"(,]!XNDl2)JdG&:tVaX+\lQg>&^nCS<&)G-51%Kt(Tr,)ka>7q4=@,uGq^JbXCdSIt+U$]na`n#W@S*Zg<gF)qj:lL=M+.,1j-h-GX6;s+QD!UAu!j]l7XjCE"br$G,X'@Qh#3?HC4%NG2(Cg%I&CK`g"1DOV#ffV,@Uc%SMqCZs&>k/&HD[RjWe\03aHQF5"9q\HRZHI=!!LHVZFGHZ'?"BAm5B^L,`09@%&N6*eJ<&F8V%`RGmYB^6^r_Mp9!7DbDYQ.W_1GE'E?aiVX[j:\L:02lBA3(Z^eV,Y3b/t^>&dZc=;:04LMPFQM2qoBVG;\k9j^(nQB1#2iO/t#i.%o5RA_c$5W3b.*FFehkZ1?#C]>YR7-%M?H`uLuC,Y9M>CT'UuM5)lmgOT`+CbCqqqAm7Ab!P;f#h[V_5-QcSpF"2d;tXB`6ghM;]r%5D/l,(bU#M;iM[NMsjjR6mc&FnK%LlCKQ?;37B3iRD?Xo+g[Xgnq6:U[u;$/(@pI8;`*3NEc/1&R'UobWC7YTQaM7GN,mPVB$9B=%KhKX&\N2Wj0)f)3V677`l"H0GlB1_p*ZP\XB1kY[:$&hPCj3F$kLnpHdlqiG=50)G['VPg1GpdC2$RuSD$*AXeC13]p=*$%e@?I[%+E$L6WMqu:<0LOG\NS(kWU_:ETKFCa?G_X+XGLb&H\n/dMC^.:BirZsqp)n>0I+\dq58'.X,<9Q*uS:WgP6\q!MqGtF6K!/o/'87%[K(d0$Z9OES-MVc@Z,ht29t4"Jp^\-jWKG(i#]K,5*.gM(2$`NrlJV&S,@+6FfWW#/:*U.haO"o2-lBa>h#4r1B=1_ef&"urAmSk%i)l1]ol>DfeI/+Mlm/)lF>%.AXTUe4,GVdE9C.mgb,)Qd;0CO4gUOoX,OP0,]erPe9H2aP<D-R?R-jR8`Hg?%ccM'I=VJ_>/]b'!%d]uq2D4$o!69!o$+$em.c@Ob^mAr_hTWVL?4-YpOp7kDKP1Ie7[3R<5I)rn\2Sm@:*csK:"9!$@l;=EZs(Ihj/(\"$Z)^Wl>&GQV%]TJ_1J_4]k2-*1e99d$TLe5lO-!p_^9tGSQC9dKLHoWic*j%T+DK;=CM[$-'4s1lY!c.DY8T<HCU)I>`#InORU,jGF?E)FT92oYh%Rlk_oD)L.g_E'=r#'@"'AshZu^<XFLdU7<^k[^V"B=aGp`mH,)g3d3<Y4(,kG&/Y^G")b5(a;J<1(.%nmd2Bh@Gj5Ee!6M:D+(eq%DVC&:m750:.V8cILE@1Pc\eF!"'`X:0*ta-oX)ia(uMb9;I?ZIAEs4XhF:&C6?A3pn-[("*G&NCjU:"<EHt:oQGO>K_]i][XI%,E%)k1I[D4)f@os`-KHej!o$)DCta]]U$"3g?=%2[t<3GD*n4V]M6@;iEI=/9*@Y.7!"a5MA\KUf!pmDCsOlq5RPM'PekV1p";m&aG>%1ZLA]lo[)V4M-Vu-og[mR>$GZV:kG+/-@AqV7rE8hPp7ok%bhtGB'SWH-DG<lPU.bEt83KPD``,+1ugs^2SgR?!gl)P?VIDO.VZ\%c^0"#j8&7!+$0FDe*Oa$G,6^#7D]o=;\kKZ6S>?;gk*C4L"Jo4[cO+V8DcK%j,<cl;uSfOrr6[3hg^9U[&6WOY(DQ2iOACF^]/Ik%XOBN>mQi'HG[JMqF!1ueH2-%t0"sF@ec!:]&ng8l*%Bre_95fSNj[E"8*hCF?[>E#nOVr2Vk8k5<d$RJ'n+<f^a'V5S_lW^&58.[%S>;L#@?Tp[mG_+8RT<e3*V9FaOsCU2b*?ol:X[K/`T4FW(>+[$=C;r0b/RZkEk:,4ITWr8q7t/7(m'I4jS8RSU\D5I1Y8^[QrsVe%cM0(EqjLGUB`P=Vp<AkbBC-\%]/3q,YIf3q28L'4n#S\-/!heHM5j4dl@\X6lh]il]B9/X6gPEQ2FX==2aLA26gp#qerX);Rd2d2%d6KUf4!Err_Me`!-KA#]7qO*:N9*?L%*NGQr#dP>Ykn>5kf.BK`2#T-2>eTkmRrWo8L8>qg>uq4cuE()qL.[RpRI+GE/5ecFdq$c%-i$$giE[Q8iRlR"d`DbfBCYHQL+t&Og>:_OnB8i2f`S*h)k`pEh6l<1Lq`7>eUt8I^)D>DT^RN/D)!n62NcKL@TD=H8MuW)CbIN,%7$6RVSAXn9]6"TbOijZW$m=>RAn4J'e5R(hDU/<FpD:F;->l*j;cL/3`o%C':*(46L7VB\5aS\f!(a-l6nKBKn/:ZmbbJ.f&.B0T%7++fN;8(cK![Q?rn-9c?l@lRRQ6u-T+O;sa3C01lJ8(t*QPcX0o^17t4Nd1]8/%K+Mi460V&q./J]Pe^+Q?rKD:Gqu^m8c<gq!a*%$8VTZ+dL/PB8uF["tZ%FiT[kYW&;[aVaU0h22g!bbP[Z\^?_(6#tWZ!2rD@]RZBGiWg>k)A^\7[U553I!0R/#U*l;3BP?bIBTpH@%!0\3p7-/@t=>*?WG;lp_d<&)U?g.j1_es>R6?oLie["97W2$>gStAEtIR`kA1XSUlC\Wole`23[P?_EeXl6-f=k9%!LLg#dHCMjr%Ucp5X0A(7t6f,$_E\K@=5!(J=$I\em0L+5_I7$J08]m4#U!FU)#c:`1^;MW5!;jjpIZ7(4_&s.cKBCT,I,SHjV(DtFWq'V:dH^2d%)TGb$>68G"G'@>_j::1d>iggc[e'&AS<R]@-oLYQ(ob3m/]b>1@C\4rp^^4(\^a2)![>[ZZ@;8r16P%[=Og%UW?rRpe6^UZW,4)N%.O7u"3g`Nb.),F/:Cka).-6tVM2(rHFQ=?K9]qqbJO(Iq&\5B(f\05A"Ie@74e,P_ibU,R?*>^V&F>fsPW!Mee@TMEA0Bkn"O`VP%OZ:I<[Ms/5?/"h&<9qjcV4#b_87m&gZ>L;kG6mIk'!)eM+)`b(B[=TG>B1s&h*oZ<W]U;uCQt2G5U=%JoGjQ*#sg*s^G?9'4%2eF%9t."#:@6jUJ>[K-<L<.-'BOHq]%5Y$6gu,,^f'5-ShQNXZ1HCW/S1jMr7NFiNp^mlDV[m[dC]@Q-Xd:8D1a'Zl"jR3GG02>Dd/Ye%7jq37nFA`Vd#$rb7!TB^.XaV2DH4k,J>B?Q^QhNf<)KH)c;A:jql&F@=QYrUQ+P,:=d7q]B1>.D"FK/]8J)ktUsUI=oHm_@WG?t\%e6_m.rJ<#:AchWPiUB.Vn64`9D]?hO>=(!kOl9;Qfn"nuKTDmB&\7%@6]%-qJ@-Si_4ef*n?%-9XISFLWqUs1Yoe>%=tJ'HbT6po%\uA<*HadH.OnW_s\IaKN;"nkH/pYIn/WeVs"m10@W6+dOd2mL1M(78#"m)9+ftTB@hchbcUf,C]Q<D[rk8UT$B^_Ph(fO7R:HQ?;%jafi"!cot^:!T_O0DHDa3S-h_8*8:qq>MuE_@7Khg?m6Q0W@pI'\c?T<H23?4bljS9uUWI!`IXPLhtu^P'TmI%B9ZLlP/,*Bli1[%L.Y"BkmNt5+^0pICgWL>`n_Sg?7m*aWIdW9ChAoh*aks5'o`r4aFg,jYmK3"%OB0_*E0`>hGR(nUM);?)+6L"KCC]EkK)cP>Hudj%5i1pl,s,O00E""6<l$:H^&/#FE?>2$oEWsPMZfbei6)b*!0JXsA?h5Sl[Wdq]$rA57*X"M'B[kt8=Fi0K$V"l?$V[_'4NiLd6;0G%V$k\IepW*2lEUR,;_/KjZBF>Y+unPE`@@P!"*#opT4"oCN,QJNjNWT)8t)R+L?XT6Y<Zu4O\-:L6>W0_brn.ogGsg4cd[%O5sUf-%O-QhTcW*VErCSkmOCalG!L4K4aMO0toHjJMq$N7!G1\O]bbdsfnD;/tWIi2kA1q.S"b3^KFp!:!?]YY4NisU:?E%B\&?>SG$NPIM%#`-FJ!kG`[$d!ak&,"!JHJ>\lQ-YOKES;[mpS*5'A]p8[q!?F:LK"WVqO4SK\p^S[XS@tH:qi,X&^F>`*#UYQj*kS?Nr^W2R6Zq"%fLps+@r[OE:VVS\A>*<nXh\819(Z;1Y^j2jUgoS%&F2`H[-c<?HeVs5?8VqNm_VnU-%K,DLAW3)FHt^'WFBI3e!!-!cUL1Sn$a4g%aQY6int#7q-<7AZIhj@G0uS2c1R&r]914_@E!B'I$+^$A-Kg:/kI7'<\Ge+Kp+fYUm,-Oi9dc@iE5#6s)5_7a=4[`eN[]31F]$g/%&,;?)GoCoi#0=+poK^-'=q1?g1$VL0f$<*Jc)[a_<FYQa<8FW"=K^@]B=@ml_I5'd=o/u^O^'P_$?D&",Xbc+rO7G+(1O\W"2_5q%%S?Nj1M0#Pn\q_^LbO&d!PcATB@3gl'bU>a(fH)HV.Qchk\KP4pq,e+n(?5,m#%ffU$\)W4M+lb7U'K[MQ=6ZFI[3-ouIbpnB88[%3l/U5?@,#1n*m!P,T)>8\;>4)7bsH*X$3M`\g"/.mtrd8<Jpt,e<d\rI_?="T%*3;o0Y)llFZG^;sn6gHbK9=[Iq.9j/>Dd^_Jsp%/P1V/,YNorG*p_;GK4D_0(h'#9@SF%+Gd[H-]$p'`CS1K'kn0GFW()@^8`?OY[Do.R;rVrqeleQ[F--H23OFHML3NGLYKd[Gt8Q5%+EC92D*]J]9\Zt4:L"$2fOQU9"Fr&ihMCBOen%@2>,kks"eNmfhE"snD-r7<FpK3pIK4A.,Sj&rBfm%Uf`@hAU9@Fier\d#//Pq#%dNb*Q'%L"NnYEl:@`,0sT1XqWM,cXB-rt\fgWp[Y1c;B\S!+*Yqb3%MPA],%kkc1mSoUpj7.o;/B<F:\5<3iIrDH2k'FnEhIat-M%LdDZD*P.8BL[MA_rN\dLQZIq"`n[8W^NG<L0'<`#N4D<"i6J=7*t]"=N1!$LYE$JROr_-EQofC1qsagth@<ftX_`bWf:[)QioN?d%72##g4@?65Wo8W%QR8"-8$+lhGpd"`;t/J.4-lL+H9DdZNB9!Um'ZQRbE\$8V']R;(of.RR02-/)hm'c)ASZ]27M]h=<f8bZqba1%]P@ONpS/Yi&DIOM#!pQ$jFHso3/?ja)qSlKDHt6!NJf_jb>)AK]F;=rc7uuAo?n<8nB^+Aaji21H;&"g*gt-,4"PY_3,tW>Q[@B8%LHFjSH8on!#ah,k0W36)i<tW3mOsQWgoHlIF4Y2hjR1\DRn31r+Y[;-+g!/[jK2uo3_e\EP9!$])RhA*\G5ufj<<L&"#f59hHdXi%64=(p#_<[I;!>b"-6!BiE.K.c-%*4_A05]REZ_G_73=-Mqekiu<?EjMf=c/`9m<V`gOY<cVZkb147!0#G1_7tl',3ZL[@kkH/1;=%ETR/RSU@qle._p0iPU?n,,\uFiBm3T*/2dqCW[JH>Q_8:2jLYa_%"mPP69F!m(`euQn?F2$O"eB-Ll<lghHffKueZ+^fAMELBH/i%59,SKEnhu0,A+_SbMg3i[NV,M\1u%RF?\[LF<p[#UQG7DUDEI"k,-r"8p]8M'dOHtNb.r:F;B>=W!GGBcm6%(Q/18EA#?FhRj,NW%Q#"Xo.7^ZK2bH)WU*=5ZDTb$\"Sl^6dI/gem),+1jXQ#r(HDtk(e<Pgr<g^t74*JC8a:ln`#Zphj+CB,C!5/Nk9pWaX#n>O1Pt4;%MeCJOQbFStO#**hn:X7[pQhOs]a`sbeR9%pfn\mf'].MoJ996_6^$4aL?Fe6gW>6:6Po,u;RD?r:6[<cG>0\pC-Ff10g!aAm:GMG%js9!"Pc8?,8gqSg_Q"h@E$(l_1LG0AnbD1\Q..1-<AUkRDf'+lY,'b7GB2WaCUrO:O!CrJ/@qh1/W#E0jk@h-$Y5Tl*1W%"#B#cH%=".nQibrpol@V2l>s01;_Y@mmG:fDp7[ub2ON<dG.>BdseMHJJ5sBI,D'2!EhF&J\",<5J_!-U?[G3bEZLaAnS4V'X,]"SN;/^Zn%WH*>fbX.6o$lX9JppaaM`)N%.\!U[u<L%OZ+t%.Xa`@h1_AR!rDP@&&%<T1!TmO;85gQP\U\LA(^$.fUh*rQ3P7EN'$th'd>KlQu%/m!-!O/n%?(2pb,+V'VsP/O#QAL-H@4O8tM1q&/Z5du$NS1;ciP^Ks]l;UC@SHIPl)hm'qMaTkr.X(P<Z<WBs%ehPY'*giPR%u7B%^O9/-:[VHTe<1?lV@L1/\Po7Z2=8oWEog&UDHYkr&Vuu]5e^0,4haj)A$L4bP'hls<-'s1f@$0bs(@R:+";!"-T/;%J#a5OQRqA2%KUj@K$t(sR&K=B5,Y@'@31OhVhS]'?BcGg7E8!>g:0ZI:K[2RM(u_goSOe!8ICg7cl80YCU>0>G>9e@FEq_t_Xm`L2Aa?t41n*4#%L$+YrkT+5/oV"`iFL72R3b(a&+<db/bk88CMi,S![[-\ZR[i%V4-.EBC0s#<6/9oCOi68;,oj0s@07aWbAUc]2pL<c*QoF,FP(&Z%ck)f<fRgRd:?\qt7G/o2C`UV=gK[?6[PZ:oYoOV3R9d7',[pDnGoBTb&KE5l-F^cG(Yh1N'c';EWP5R@q3[M(b8,itXu!V)a7O^.%m]mR#[FN0+92!f@[[`BAZV?W!S[MD<]s]%_ek^U/5uQJ!E8(`a=9!H"P2mS[/6o+1G$9Wgm'f\i]R+2(JoJ"=M=_'Jgs(M_8&+H0%.J%AtDi7!(C9Btrg[[IYITpL-_Gj7EXWuM;)l;>..siTO%fNi'L\l8(/WLNQK@,[9GoJDP',X8Ah@IYDl8tQD?XY.*ZXtlXf8uUO%cuFughqHb)$g[`Y20j)E<9TN`iOQq]E8gYIHZ"9)T]7s($hW2ZN4Edk,JrT[D2XB==4<UU>:9<0*4^[p8X)uR/M*-[Nk3#X/bF#]%"KQ\3_]ALeLA:o=T-#F-q1lk'MjY&6#/Y-`$ZbRg:Tl?L$'3Vkf2`;sWQ@<,Nb#>q@im'fX\%CWQG'_ed;-qm.D<1\N^>t#[_?5\%pF.Fj\S7=kiJoY51'cW$q\+o5P.pmRfa*(T1$[c*D7=EEAJJJdi@"0Y2J:sm66N_gF.I-1E[h2bSX7Z#UO&q!F5bEo2%$%g31UH\%Bafn]98VoG#kr'-dpl)K6GRFFmkZM"Bk.!%/2"G*f>a2YiUt^>,%bp'hVR9Dp$@>@5ocYE4k3.j\jl>n_Cmp]9fh,.P0K'2A=4#?%kHMk/dRnM_k@f>@2<a_GN:r#;6[`k$N^%&1-@WL.c(*2b1uT)QL.')@p4UNO9YKg]dh27$2F$$F;XMo'/o)8#(hO'A[B&iM^2r>q%5r=e@Y\ZT1_D*@FFd"C7krK1F_l&=ap=*T@eSh?a?S7%;%<8cOX"O"l<F-[<U\$gc.pmHPol4G]JGgYa?`F6`r=H'^.ii^>Dh]?^%DsK9Ia@?a)'<ZKm,M<rd>F;7r3JG@.=RU;"'\c_EP>ROTQ&l0QmGo#%+j%\X1ljoL7s'FTX4ZCR4F(FmapaU^/HqQiKr`k^D/lIX%)8!#JU%=-aTHUtbEcA?bg,/q]g@HU?m=rFW.bgcT^9#u'WuLoH[Vio-5[(J]%@s%ZgFhi@2qroPVI\uS\6<:%AAP>l&ED6I7kWni%2LOO;QRJla,YutT4ET2L$a\W1O;Ub_\D[2<'=^#K;$nSE=_=ks*gj+\>^+fmn\/83en&kM&NDQ1lE9X)[,djWk0Kahs1l+(-\ZL@%PC;bWrMjdA*\.N*HJaKJ?/EGim]olS\eT3t])ClBo_aF?dB/5:d-XX'Sp+^C'T0eTSh]i.j(TTgSn.;80';#3a*sPLHooXNef,U^%F7*0*WUUDD&ncuHZfV"Ul:u;@H/hV"%D?bjGb;R\:<:d]n(DuH(]B5>B/Mia';Xqcm590>3]kZMbPr0Qj?1Jp#0GW"IqHa3(N;$M%<+2rre;V#OSX/c$41tr/Y7bGq:Gj#>U,=\\O^tOg6ut=oA+n#eme(/C\RXSZn+L:'ps)1X*=dJeSKfN^>^,b'5D[::'1q",f(BK_%E1V9s>SYP*-q@SBSU/WP(>^)oH-\2\G`=2aB0c0^7j7V+7n)jlcHWoO4,@q'GS!UqFcY2)D!S&I15bHFG*4=1SWn2'?DI7k"2.oN%Q0^d1=4+m90$iI`Sp[n1L@0-I5R3%NJ)NWtK#@5"TKA;WkY]JCkY;j5kjg:rE50"Gd/2=(/mR'j3TmX15'0iM%eQ.=_HHjak5KK"%m.KO/@^Y,gGFQdNe+ZObF$'m[&T@<2j8%tuiS80Zin4]"I\YfU<A>KVNb$I]/nMqP1oNT[i];9/]?\eF1;K\/hjSI.$-(O-OmcW_%bEoC'DRl+?leH&9*4jLXH-bRFKbbE8/EP19DO[hK+@@6ej)?e9P'lFi8:8rbMg;XM;ss2dK%qpp6kci.A`l&f<l8HN'=)T&QC=;7%gt<!;)JhZbEIN9'gaPUrmlX4)4^JYEQs(]38Ie7#7V(sJAtNAlBEBPTfl]Jdgs=GBrYZ>K)NIs;?XqDMGt(#BH!'N1NcR<gHJLUX%)/JPWVQ*9+eS?_NH]</6%`bk.g#7;O'(2;[[<hYg?.b79TmJ7M\m9p));aJ^V.LuE$aFE+XJj6q/@DrDTiC`RA(@0Q-_G\J4StFV%#54[ca<StbA0bc]],be\R'/Ip92g@j(6)+-F*[U^EdS&q6L^RXG+3\d,$Qq8c&pLhp);65DB#bF2THK#Ej?6Oj%E`79qGo`ZJ.K6%\VhBPGN'dkE+J\plV.#@/*iCW*<!T'HJ&j?5WjJWGUX%?s&9N3j-T,-a.l9p:Xk"B*.,)Y]]Kbi3Qu't*6E[$-q-&I6^5D[H]01r%c=))9i;a+ZRjX1?f@>;8*TtdFCnn;r>TO^L1O78mdmqHrEt7<CMgKg$Et5%[>=ku=;9:=W4Zea2k>B<ke7d.&b12c:*rC0LnA[RT%UkA(Ln+s%m!b++qR80W*OQisVg`#`!NcI,)LE.-VQTsoXpXD2.ZKF=W\`Xrg*)b1*NYc.HGs4@RBPt:@?\GpGA,'^(r8]l!X]d]X%3IfCQc)ho?fkIKVT/X5ooS[dk(.`8l!qWNteDsiAB[?ELM(%+k-,Oe.O3[R>:D^C)E$mO/TIW)BU;*2Icm;GE",VI1k.QhES3t\/%n1f`>D?niY,+lmBZgU$MCZ.@!/:?WpFU7/UCbW_Omb<imMu.rT+fXYCgkp.@\aPL4HQKdH]$Ge_(%-/#L8DV(ZPJ"'QD1FK2:8+g%R\SW,,geJEWWPi@HH3ZOS$c4ZF",fN?3XETnXr"(auOWPHI*aCE+YCVkZHH?WuoXX0<s\=]CQ_=7i'C4*9c4M4pqTV,l_U#I&g0W%\3%YOCC]uS%sip3h3%%hc_]-B:(*U&F>Ppg3umHd0BI/?^2-f`4!OiNc5H8Eg#1`X0<s1-`OB2ad)kW>a+@E*9b)7rLN6J;rT@q!%p;;B_#&=PF3EJ*7cdUT<s*9iLs#DR4Eg=H=k7?",ArNG`*/'Zr>7QtY8\IooFh5m\4Ek9Wmdn@7GDq"T4^XNA4I=[P-/-_:kBN'$%??^F]G?dmXflt`:#l;i?*tg3hY&a]NkF?,=EUFbmqTY_)>Hb0FEK58,Dg4_,NK&3fEZ4`1aRZ]Ap7#\$E?G"CR(Lc=X7NMS7%h"/%#'UXiXaA6"Pdf2,[p5M#\'Qr*Q:%s?:6saW=W_6ImW(h'^H>,V_n8Vn>On,5TOjGuggBK&+/5Krr]UY7kqIm$ZMWT6=.[d@r;IA-%9%SLd?baN#jk=ld,@O"B)r4)Gl(q]:3QY]S(H)0U,_s*='!parE_KHG,TjPtfgTf*`sGTtd[,--*Zf@BkTT,,PTFl/FjWk-FHO`V%<GjCuZPre[H/aA\>I'/LZd7Id?XiFX\'N>aD'V>0&$Er.9@,P/T0LkMW:lfk*uVuPPc9+%pBj-PjQ+B!)Sq0N^9'b:)0L4QlMpbh%bO*=1o``9B9>08f]mBtHa+*r&J,:nubA[FHs-!BUnR)=i:]JspfDi>[pb2[Ea5?mR^]3&<p^b.<dm*e,J,AEDs3L`=\,Z'?huE)Q%J,]2WrSN,)p:#PIQ[et[J,@QAs1b.4^A[Z<rVbXRo=t:ZhnT-es7*;m&!5rf0E+cIoH4+Rs7Wr%%jULE?N~>%AI9_PrivateDataEnd