%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 006x006.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 260 204
%%HiResBoundingBox: 0 0 259.4155 203.6123
%%CropBox: 0 0 259.4155 203.6123
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 100 8%%BeginData: 6738 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF52A852FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFAFFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFAFFF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFA8FD06FF7D52FD047DFD0CA87DFD19A87DFD0BA87DFD0DA8%7DFD19A87DFD0BA87DFD0CA87DA8FD06FFA8FFA8A8A8FD33FFA8FD33FFA8%FD0BFFA8A8FD09FFA8A8FD73FFA8A8FD0AFFA8FD73FFA8FD0AFFA8A8FD73%FFA8A8FD0AFFA8FD6BFFA8A8FD06FFA8FD0AFFA8A8FD6BFF7E52FD06FFA8%A8FD0AFFA8FD69FF7EFD09FFA8FD08FFA8A8A8FD69FFA9537DFD09FFA8FD%05FFAF52A87DA8A8FD13FF7EAFFD51FFA87EFD0BFFA8FFFFA87D7DFF7D7D%537D7DA8FD12FFAF537DFD51FF7D53A8FD0AFFA8A8FFA859A8FD04FFA8FF%A8FD73FFA8FFFF7E7DA8FD05FFA8A8FD73FFA8A8FFA87DA8FD06FFA8FD73%FFA8FFFFA87DA8FD05FFA8A8FD73FFA8A8FFA959A8FD06FFA8FD73FFA8FF%FF7E7D7DFD05FFA8FD75FFA8FFA852A8FD06FFA8FD73FFA8FFFFA87D7DFF%FD06A8FD73FFA8A8FFA87DA8FFFF7D7D7DA8A8FD28FF7EA8FD2DFF7DFD1B%FFA8FFFFFFA8A8FFA8FD047DA8FD28FF52A8FD2CFFA853A8FD1AFFA8A8FF%A8A8FFFFFFA8FFA8FFA8FD54FF7E7EFD1DFFA8FFFF7D7D7DFD05FFA8A8FD%54FF537EFD1DFFA8A8FFFF7DA8FD06FFA8FD51FFA87EFD20FFA8FFFF7D7D%7DFD05FFA8FD52FFA852FD21FFA8FFA852A8FD06FFA8FD4FFF59A9FD22FF%A8FFFFA87D7DFD05FFA8A8FD4EFFA8537EFD22FFA8A8FFA852A8FD06FFA8%FD20FF7E84FD2AFFA87DFD25FFA8FFFF7DA87DFFFD05A8FD21FF53A8FD2A%FF7D7DFD25FFA8A8FFA853A8FFFF7D7D7DA8A8FD1DFF7E7EFD2AFFA87DA9%FD27FFA8FFFF7D7DA8FFA8FD047DA8FD1DFFA853FD2AFFA852FD28FFA8A8%FFA8527DFD06FFA8FD1BFF53A8FD2AFF7DA8FD2AFFA8FFFFA8A8A8FD05FF%A8FD1BFFAF7DA8FD2AFF7D7EFD2BFFA8FF7DA8FD07FFA8FD44FFA853FD2D%FFA8FFFF7D7DA8FD05FFA8A8FD44FF7D7DFD2DFFA8A8FFA852A8FD06FFA8%FD42FF7D84FD2FFFA8FFFFA8A8A8FD05FFA8A8FD42FF53A8FD2FFFA8A8FF%FFA8FD07FFA8FD3FFF7D7DFD32FFA8FFFF7D5284FFA87D7D84A8FD40FF84%7DFD33FFA8FFA87EA8FFFF7DA87DA8A8FD3CFFA953FD35FFA8FFFFA87DA8%FFA87DA87D7DA8FD3CFFA87DA8FD34FFA8A8FFA852A8FD06FFA8FD3AFF59%7DFD37FFA8FFFFA852A8FD05FFA8A8FD3AFF7DA8FD37FFA8A8FFA852A8FD%06FFA8FD37FF7E7DFD3AFFA8FFFFA87D7DFD05FFA8A8FD37FFA87DFD3AFF%A8A8FD0AFFA8FD35FF52A8FD3CFFA8FFFF7D527DFD05FFA8A8FD32FFA8FF%FF7EA8FD25FFA8FD16FFA8A8FFFFA8AFFD06FFA8FD32FF7E53FD28FF537E%FD15FFA8FFFFA8FFFFFFA87EA87DA8FD33FF7EA8FD28FF7DA9FD16FFA8FF%7D52A8FFFFFD047DA8FD2FFFA853A8FD41FF7DFFFFA87DA8FFA87DA87DA8%A8FD30FF7DFD42FFA8A8FFA852A8FD06FFA8FD2DFF537EFD44FFA8FFFFA8%7D7DFD05FFA8A8FD2DFFA8A8FD44FFA8A8FFA852A8FD06FFA8FD2AFFA852%FD47FFA8FFFF7DA87DFD05FFA8A8FD28FFA8FFA8A8FD2AFFA8FD1CFFA8A8%FFA97DA8FD06FFA8FD28FF537EFD2CFFA952FD1BFFA8FFFFA87DA8FD05FF%A8FD27FFA8FF7EFD2DFFA8A8FD1CFFA8FFA852A8FD06FFA8FD25FF5953FD%4CFFA8FFFFA87D7DFFA87DA87DA8A9FD23FFA8FFA9A8FD4CFFA8A8FD06FF%7DA87D7DA8FD22FFA828FD4FFF7DFFFF7D7DA8FFFF7E84A884AFFD20FFA8%FFFFA8A9FD27FFA8FD26FFA8A8FFA859A8FD06FFA8FD20FF537DFD2AFF7D%52FD25FFA8FFFFA853A8FD05FFA8A8FD1EFFA8FFA8FD29FFA8FFA8A8FD25%FFA8A8FFA87DA8FD06FFA8FD1DFF7D53FD2AFFA853A8FD27FFA8FFFF847D%7DFD05FFA8FD1CFFA9FFFFA8FD28FFA9A8FFA8FD29FFA8FFA859A8FD06FF%A8FD1BFF28A8FD2AFF527EFD2AFFA8FFFFA87D53FD05FFA8A8FD18FFA8A9%FFA8A8FD2AFFAFA8FD2AFFA8A8FFA87DA8FD06FFA8FD18FF7E53FD59FFA8%FFFF7D7DA8FFA87DA87D7DA8FD06FFA8A9FD0EFFA8FFA8FD5AFFA8A8FF52%7DFFFFFF7DA87D7EA8FD06FF537DFD0DFF8453A8FD5BFFA8A9FF7D7DA8FF%A87DA8A8A8FD07FFA8FD0CFFA8A8FFA8FD4FFFA8A8FD0CFFA8FD0AFFA8FD%13FF537EFD51FF7E53FD0BFFA8FFFF7D7DA8FD05FFA8FD65FF7EFFA8FD0D%FFA8FFA852A8FD06FFA8FD63FFA853A8FD0DFFA8FFFF847D7DFD05FFA8A8%FD61FFA8A8FFA8FD0EFFA8A8FF7D7DFD07FFA8FD61FF537EFD10FFA8FFFF%7E7D7DFD05FFA8A8FD73FFA8A8FFA87DA8FD04FFA8FFA8FD73FFA8FFFF52%7DFD04FF7D52A8A8FD73FFA8A8FFA87DA9FD04FF7DA8A8FD73FFA8FD08FF%A8A8A8FD09FFA87EA8FD69FFA8FD0AFFA8FD08FFA852FD69FFA8FD0AFFA8%A8FD06FF7EA8FD0EFF7DFD5CFFA8A8FD0AFFA8FD06FF537DFD0DFFA853A8%FD5BFFA8FD0AFFA8A8FFFFFFA87DFD6EFFA8A8FD0AFFA8FFFFFF7E53FD6E%FFA8FD0AFFA8AFFF7EA8FD70FFA9A8FD08FFA8FFA8FF53A8FD70FFA8FD08%FFFD047DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8%A8FFA8FFA8FFA8FFA8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8A87DFFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8%7DFD07FFA87DA87DFD04A8FFA8A8A8FFFD07A8FFA8A8A8FFA8A8A8FFA8FF%A8FFA8A8A8FFA8A8A8FFA8A8A8AFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF%A8A8A8FFFD07A8FFA8A8A8FFA8A8A8A9A8FFA8FFA8A8A8FFA8A8A8A9A8A8%A8AFA8A8A8FFA8A8A8FFA8A9A8FFA8A8A8FFA8A8A8FFA8A87DFD08FFA8FF%A87DFD0BFFA87DFD0AFFA87DA87DFD09FFA8A8A87DFD09FFA87DA87DFD09%FFA87D7DA8FD09FFA87DA87DFD09FFA87D7D7DFD0AFF7DA87DFD09FFA87D%7D7DFD08FFA852FD0BFFA87DFD0AFFA87E7D7DA8FD09FF7DA853FD09FFA8%7D7D7DA8FD09FF7DA87DFD0AFF7D7D7DA8FD09FF52A87DFD09FF7D597D7D%A8FD08FF7E28A87DFD08FFA87DFD0BFFA87DFD0AFFA87DA87DFD09FFA87D%A87DA8FD08FFA87DA87DFD09FF7D7DA87DA9FD08FFA87DA87DFD09FFA8A8%A87DA8FD09FF84A87DFD09FFA8A8A87DFDA0FFA8A8A8FFA8FFFFFFA8FF7D%A8A8FFFFFFA8FFFFFFA8FFA8A8A8FFFFFF7DFD09FFA8FFA8FFFFA884FFA8%A8A8FFA8A97EFFFFA9A8FFA8FFA8FFA8FFA8FFFFFFA8FD3BFF7D527D52FD%047DA8A8537D847D7D597DA8A8537D7DA8FD067DFF7D7DFF7D7D527D7DA8%52FFA87D52A9A87D7DA8FD067D52A8FFFD0B7D53FD3AFF7DFFFD067DFFFF%A8AF52FD047DFF7D52FD097DFF597DA8FD047D847D7DA8A87D7DFFA8597D%7DA87D7D59FD047DFF527D597D7D7D527D597DA87D7DFD45FFA8A8FD05FF%A8FD0DFFA8FD0BFFA8FFFFFFA8FD07FFA8FFFFFFA8FFA8FD05FFA9FD99FF%FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T17:58:50+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T17:58:50+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T17:58:50+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>204</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAzAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q801j8rtZvNV8xXz3&#xA;lvqC639Va3juA8X1d7Vrn0iaC4SQQpcIAvEB6fFQ7sVZXpltrV3NfSXGsTosVwYIIoI7YIEjjQFj&#xA;zhkfkz8ifiIwKj/0Vff9Xm8/4Cz/AOyfFXfoq+/6vN5/wFn/ANk+KqTaVq31hOOs3P1fg/qVS058&#xA;6rwp/o9KU5V+jFVX9FX3/V5vP+As/wDsnxV36Kvv+rzef8BZ/wDZPiqlPpWrcB6Gs3PPmleaWlOH&#xA;Mep0t+vCvH3xVV/RV9/1ebz/AICz/wCyfFXfoq+/6vN5/wABZ/8AZPirv0Vff9Xm8/4Cz/7J8VUr&#xA;bStW+rxfWdZufrHBfW9NLThzp8XGtvWlelcVVf0Vff8AV5vP+As/+yfFXfoq+/6vN5/wFn/2T4qp&#xA;RaVq3Ob1dZueHMehxS0rw4LXnW368+XTtTFVX9FX3/V5vP8AgLP/ALJ8Vd+ir7/q83n/AAFn/wBk&#xA;+KqTaVq31hOOs3P1fg/qVS0586rwp/o9KU5V+jFVX9FX3/V5vP8AgLP/ALJ8Vd+ir7/q83n/AAFn&#xA;/wBk+KqU+latwHoazc8+aV5paU4cx6nS368K8ffFVX9FX3/V5vP+As/+yfFXfoq+/wCrzef8BZ/9&#xA;k+Ku/RV9/wBXm8/4Cz/7J8VUrbStW+rxfWdZufrHBfW9NLThzp8XGtvWlelcVVf0Vff9Xm8/4Cz/&#xA;AOyfFXfoq+/6vN5/wFn/ANk+KqUWlatzm9XWbnhzHocUtK8OC151t+vPl07UxVV/RV9/1ebz/gLP&#xA;/snxV36Kvv8Aq83n/AWf/ZPiqGs01S38xG3k1CW8sntDKY51gDJKJFVShhii2K8q8ifbFU6xV2Kp&#xA;bon/AB//APMZN/DFUyxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KpPdea9HtvM1n5bldxql9C1xAoQlOCcju/QEiNvu+VZCJq+iLTjIpS3/ppP+jP/AJm4qqpr&#xA;GnSakNOimSW69KSZ0jZW4LFIIjzANRV6qNuqt4Yqw/UfzXtINR1Ows7NLmfT5fSXnciLn6cN1LcM&#xA;4CSNEI/qDqpYfESvRWBKrI/LN9DcrfGNZF5XLyfHG6CjhSByI4k+IB2xVOsVdirsVdiqU2/mjRp/&#xA;Mlz5cilY6raQLczxcGCiNuPRyOJP7xfv+eS4TVotNsil2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KsXn1mPzXpes6b5a1NrHVLGb6rJdmJv3ciOC3ENSoYIy1HTr4ZYBwkEjZHNkFn&#xA;bSRW1ut1ILm8hiWOW7KBC7UAduI+zzYVoMrSiMVSlJ0fzS8QD8o7MciUZVNZK/CxAVvoOKsQ8kvp&#xA;S+fNZgjWOS/WXUXM4V1lCNdQl0YetIqrzKhf3ScirOPtFnKs7vdJ0u/VkvrOC6R+HNZ40kB9Ji0d&#xA;QwP2GYlfAnAqH0T/AI//APmMm/hiqZYq7FXYq7FVvpR+oZeC+qVCmSg5FQSQK9aVOKrsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiq1Ioo+XBFTmxZ+IAqx6k06nFV2KuxVLf+mk/&#xA;6M/+ZuKsA8p6pfTfmtqtnDdSyQ8Lx7n1Q3pyJFdJEiqGupCrW7Exoy26Ky8qliMKvUcCpbon/H//&#xA;AMxk38MVTLFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqlv/TSf9Gf/M3FWP8Ali+0e78yztaa6984S8aDT2ieMoslzG8/N3A9T0ZCqIKDgG498KpV5i/L&#xA;rVdU1XV76GCziW+WIQwiZUV5oGf07icCycMaMOSSCWvQMoFGVZZ5XhvYo7xLiWOQLcMtI4ynxqqh&#xA;zXkRQnoAopgVO8VdirsVdirsVdirsVdirsVSfWtP8xXOqaRNpmpLZWFtK76rbtGrm4jIXiikg8ej&#xA;DqOtewyQIo2hOMil2KuxV2KuxV2KuxV2KuxV2KpXrHmfRdHu9OtNQn9G41WYW9igR25yEqtCVBC7&#xA;uoqfHJCJN10RalpGn+Y7fWtVuNR1FbrTLhkOmWixhWgUA8gSAK9u5r12xJFClTnIpdirsVdirsVd&#xA;iqUos480uXdDEbMekgUhh+835NyIbf2GKsR8li5k896nctbvDbSpdyQSS21zAGWS4hIEYnijCEca&#xA;zAGrOa7gbFXomBUt0T/j/wD+Yyb+GKplirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;diqST+YbC+1DVPLemXwh8xWtsZKNEzCEyIPTk+JeD8TIhIr/AByXCavoi1TQdL1GLRrCHzDNFqer&#xA;WtXe89NQPU5NxZAQKFUIXlQE4yIs1sFCb5FLsVdirsVdirsVdiqW/wDTSf8ARn/zNxVhHkRbEeed&#xA;SaC8a9umiujdyvNYyIVNxEYJIEtlR19VCWn2Uc6cgTQ4VTjWPzBk0zWLvSZNNMlzCI3tT6jRxyo6&#xA;SyE85Yo0qqQN/dl1rRSwO2Kpr5V1K0vobuSGReck7TGEkeoqyqrLyUGo2OBU8xV2KuxV2KuxV2Kq&#xA;N7eW1lZz3t0/p21tG808hBPGONSzNQVOwHbFWPyXup+Y4tD1jypq0cWjG4L6gHi3uLdX4ui+ohZG&#xA;BRl7da12ydcNiQ3Rz5MmyCXYq7FXYq7FXYq7FXYq7FVO4uIba3luJ3EcMKNJK56KqirE/IDFWN3O&#xA;o6h5o0bT9Q8mavFbwNdK1xcSwk+pBGWWWMJIvIGvsK/zDLK4TUgjnyZGlpaJcyXSQxrczBVlnCgO&#xA;4X7IZgKkDtXK0quKuxV2KuxV2KuxV2KuxVKUuIH80vCkiNLFZj1YwwLLWSo5DqKg4qxXye0OoeZ7&#xA;jV9K832mq2Vx9Zd9LRZmn9N5l4lud2yr6BX042W3UcWNa1BxVlkvlXyzN9a9bSrSU3rB7wvDG3qs&#xA;pLAvUGtGJPzJPfFW9DAAvwBQC8lAA+jFUzxV2KuxV2KuxV2KpLbWHmT/ABNqNxeX0M/lyeFEstN9&#xA;NfUSSiiQu/EVU0bYk9e1MlYrzQm1tbW1rAlvbRJBbxDjHDGoRFA7Kq0AGRSqYq7FXYq7FXYq7FXY&#xA;q7FUs8weZdE8vWaXusXQtLaSVYEkKu9ZGBYLRFY9FOSjEnkgmlCCy8zDzVdXU9/FJ5cktlS104Rg&#xA;SJPVeTs/GpFA37XfptjYrzVNbSztLO3S2tII7e3jrwhiVURakk0VQAKk1yKVXFXYq7FXYq7FXYq7&#xA;FXYq7FUt/wCmk/6M/wDmbiqR+XbCO18130ia6l0tx9bddKRpCVJuVaRnjaWSJDA7FAY405c6tyO+&#xA;KsuxVLdE/wCP/wD5jJv4YqmWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpY/mXQ019PL7XQGr&#xA;yRfWEteL1MYrvzpwr8J25VyXCavoi0F5f0XWm0b6r5wntdavBO0qOIUEaoKen8JRRyXrXj/XGRF7&#xA;KGQZFLsVdirsVdirsVdirsVdirsVdiqW/wDTSf8ARn/zNxVhvkqGxt/POqJbkesy3kdxcNPezyXY&#xA;t7iFYi31gcK2iP6LNzarE8TswBVZrnkvzDfXutzW9slsl3JGbEQ3YVXaMSH6xcrLBOrMzyUK8dkA&#xA;AxQyzyxFexpercyROFuGUrGjLRwqhzUs1VJ6Cgp74Ep3irsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVYre6zd+afL1xL5E1eCK7huRA15LExQFKGRAJI2/ZYUbiR+sWcPCfUEXfJkS2Fp9ZS9kgifUFj9&#xA;E3YjUScK1Kht2C8t+NcrtKIxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpSizjzS5d0MRsx6SBSGH7zfk&#xA;3Iht/YYqx7QvLHmbTvO+oavJBpx0/UGnE80bqtyytIrWx4JZRsCiKVcNcNzJ5VFKYqzfFUt0T/j/&#xA;AP8AmMm/hiqZYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUFrOs6ZoumTanqc31ext+JmmKs/HmwRfhQM&#xA;xqzAbDDGJJoc0E0ltPMN75g0zVNO1GA+VJLXnPa8KyzPIrNHIjlahaMh+0OnTDtXmqcWlhY2aOln&#xA;bxWySOZZFhRYw0jfadgoFWNNzkbSr4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlv/AE0n/Rn/AMzc&#xA;VYh5RtvJTeerzVNNS+i1u8hvfXN1bmFJFW6i+s8ZWiVnMUvpx8eZCDanXFU01Tz+unX17Yy6bLLc&#xA;WzIIhFJGyuJEml+JiVWN/Rtmfgd6FfHCqY+VtSsr2K8kt5VYyXDTenUc1SVVZCy9RUHAqeYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYqlt35j0S01iz0a5ulj1O/VmtLYhiXVASTUAqv2TTkRXtkhEkX0RaC0rS&#xA;NdmXVrfzRNaapYXNyzWFsIVKpbcqokqsoDEbdeVP5j2SRtSp8iJGixxqERAFRFFAANgABkUt4q7F&#xA;XYq7FXYq7FXYq7FUm1y180zappEmj3sFtp0MrNrMMqcnmiPHisZ4tQ7N+0vXvkgRRtCc5FLsVdir&#xA;sVdiqUpcQP5peFJEaWKzHqxhgWWslRyHUVBxVhXke8s7j8yNd+q3NncMVuZLlrZIxPRpohb+syxp&#xA;8IjU+nxkfnUs3E0XCrM5vJ/lef6362l27/X5BPeckB9WUftv4nt8tumBVXQlVVvlUAKLyUADYACm&#xA;KpnirsVdirsVdirsVdirsVdirsVY7e64dbstZ07ynqUKa/pzCCSSVGKQTciCGDKQdkYVAYVyYjVG&#xA;Q2RfcmVjphMGnXGrRwXWt2cCo98I1qJWQLM0TFQyK5r0ptkSUphgV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2Kpb/wBNJ/0Z/wDM3FWG+SlhTzrfQIqQJbx3nowpGiMfWuYnlR5VkdZvq7gRpwRf&#xA;TB4nc4VeiYFS3RP+P/8A5jJv4YqmWKuxV2KuxV2KuxV2KuxVQv7+z0+ynvryUQ2tsjSzytUhUUVJ&#xA;oKk/IYQLVI7i61vWZtC1TyxqNsNBd2k1L1EJaeElQqx1QlWFHrUrQ/dkqAsEboTu207T7Waea1tY&#xA;oJrpudzJFGqNK+/xSFQCx36nIWlEYq7FXYq7FXYq7FXYq7FXYq7FUm0i281R63qsuqXlvPpErIdJ&#xA;t4k4yRKAeYkPFeu37Tf7HpkiRQrmhOcil2KuxV2KuxV2Kpb/ANNJ/wBGf/M3FWNeXj5Vu/OF8sWk&#xA;taa3Zy3he6W4jkjf98nqFVSYuDIJI5HVohQkV/ZJKteZNA127vdZSyguktbuOzeCaG7RC1xA0jSE&#xA;LKW4IweNWAAqFPtiqc+UIdSitLhL2SJpFmKyLErACVUUSEOzHkpb7Pwg4FT/ABV2KuxV2KuxV2Ku&#xA;xVL9U8waNpVzY22oXSwXGpSi3sY2DEySEgcRxB7sNztvhESeXRFoKw0/zHJqesprk9reaDd8U06y&#xA;EdWWMhhIkwZQGDAitS1fbphJFCuapzbWtta28dtaxJBbxDjFDEoRFUdAqrQAZFKpirsVdirsVdir&#xA;sVdirsVS7WvMOi6JHBJqt0tql1KtvAzhjykapA+EGg26nYZKMSeSCUxyKXYq7FXYq7FXYq7FXYq7&#xA;FUpRZx5pcu6GI2Y9JApDD95vybkQ2/sMVYR5SmlT8zdXRLBHVjeLLNFcwuIAbhGVliN7M9JvtT0t&#xA;0KycRQ9cKvTcCpbon/H/AP8AMZN/DFUyxV2KuxV2KuxV2KpPc67aXV1qehaVexDzHa2xkWCQNSNp&#xA;E/dO+1CvJlJpXr75LhNWeSLW6Po95LpOnf4pS01LW7ImQ3axKyLKHJR4uSKUYKF3AG+MiLNclCdZ&#xA;FLsVdirsVdirsVdirsVdiqVSeYNOm1O80Kyu4jr1vbmc2zhiEDABGelBSrLUA1oclwmr6ItD6Lo2&#xA;pXGh2lv5wFnqupwSNMZViVog4ZvTdA6JR1Q05BR/EsiL2UJ7kUuxV2KuxV2KuxV2KuxV2Kpb/wBN&#xA;J/0Z/wDM3FWD+SLJNT856hrVvEW022lvlt72C9neBnuZYZQkcH1qRB6ifvZawopYqVqBXCrKdT84&#xA;xafNewPp9zNPaywQwxRekWnNwrMpjq6qoHptXmR0+WBV/lHVrDUra5uLSVXE8xuFjqPUWOZVdCy1&#xA;qKg4qn2KoDRdf0fW7eW50q6S7ghle3kkStBIlOS7gV+0NxscMokc1BR+BXYqsmmihheaZxHFEpeS&#xA;RjRVVRUkk9ABirHL7UtX1/SNP1DyTqNr6L3StczXCMVe3QssiBSpYNyHgp/yhk64TUgjnyT2PTNN&#xA;ivptQitYUv7hQk92saiV1UAAO4HJgOI6nI2lE4FdirsVdirsVdirsVdirsVdiqGTTNOS/fUUtYV1&#xA;CRPSkvBGomaMUPAyU5FfhG1cNqicCuxV2KuxV2KuxV2KuxV2KuxVKUuIH80vCkiNLFZj1YwwLLWS&#xA;o5DqKg4qx7yRB5Ustcv9P0uxlsb62M8Eim9a5ieO3eKNWCNPIVb0zD9qMFBRa0pUqnl55K8tXt1d&#xA;3V1aNLNfcPrDNNNQmIgoVXnxQrTYoAfvOBVby/FFDFeRRIEiju5EjRRQKqhQAAOwGKpriqG0/S9M&#xA;02JodPtIbOF3MjxwRrErO1AWIQAEmg3wk2qJwK7FUlitvND+Z7x7ua1k8ryWwjtrQKTP65K8mkqt&#xA;CpHMfa8NuuSsV5oTOx0+x0+1S0sLeO1tY6+nBCixovIljRVAG5NciSlXxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KoC617R7XVLTSri6SPUb4M1rbGvJwgqT4DptXr2wiJq1tDeX4fNUc&#xA;+pHXbi2nhe5ZtLFupVktzXislQu9KePfc4ZV0QE4yKXYqlv/AE0n/Rn/AMzcVYP5FMR89akJvSW/&#xA;H6SDpC87oR9ciZ2RZeIjFWUNRfjap6DcoelYEpbon/H/AP8AMZN/DFUyxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL/MKa4+i3a6E8UWrFKWklwCYw1RUmgO/GtNqV67&#xA;ZKNXvyQVtnpKSx6de6vbW0+u2kKq92kYPCVkAl9FmHJVLV8NsFpTLArsVdiqW/8ATSf9Gf8AzNxV&#xA;I/I3lTzDoMt0dUv7XUfrVHkulimF00oVF+OaWWUlKq78P2S1FooAxVHeeNO1W/0Iw6XJdR3iyLJH&#xA;9SlEDsVBoruZbc+mWpz4vWnTFVXyut+I7w3TR1+sMGjRWqsgVef7xmbkK9NvvxVO8VQer6zpWj2R&#xA;vdTuUtLVWVDLIaDkxoAO5OEAnkqLVlZQykFSKgjcEHAreKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpSizjzS5d0MRsx6SBSGH7zfk3Iht/YYqm2KuxVLdE/4/8A&#xA;/mMm/hiqtLrOlRapDpMt3EmpXCGWC0LASOi1qwX/AGJ+4+Bw0atUp0rSNX1PSLi08721jeyG6d4I&#xA;oULw+itPTJEg+0Dy/wBjSu9ckSAfShkQAAAAoBsAOlMgl2Kqdz9Z+rS/VeH1ng3oerXhzp8PPjvx&#xA;r1piqA8tDzCNGgHmEwNqvxeubavp05HhSvfjSuSlV7ckBM8il2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2Kpb/ANNJ/wBGf/M3FUyxVK/MXmG00KyS6uIZbgyuY4oLcIZGKxvM&#xA;9ObRr8MUTuat0HjirHh5gludG1tfLd5afplLrlCl24VQJRHICwrX4om+HtX6clGr35ITq3i0SW4s&#xA;tV1H6g2vW8Aia7jKngWX94sTMeXDkW413oT4nBZ5dEpl+k9N/wCWuH/kYv8AXAqm2taStwkBu4vU&#xA;kR5F+NacUKg71/yxiqp+k9N/5a4f+Ri/1xV36T03/lrh/wCRi/1xVTn1rSYEDyXcXEukYo6n4pHC&#xA;L0Pi2Kqn6T03/lrh/wCRi/1xV36T03/lrh/5GL/XFXfpPTf+WuH/AJGL/XFVO31rSbi3inju4vTm&#xA;RZEq6g8WFRUE7YqqfpPTf+WuH/kYv9cVd+k9N/5a4f8AkYv9cVU4ta0mR5UW7i5QuI5Kuo+Ior7b&#xA;77OMVVP0npv/AC1w/wDIxf64q79J6b/y1w/8jF/riqm2taStwkBu4vUkR5F+NacUKg71/wAsYqqf&#xA;pPTf+WuH/kYv9cVd+k9N/wCWuH/kYv8AXFVOfWtJgQPJdxcS6RijqfikcIvQ+LYqqfpPTf8Alrh/&#xA;5GL/AFxV36T03/lrh/5GL/XFXfpPTf8Alrh/5GL/AFxVTt9a0m4t4p47uL05kWRKuoPFhUVBO2Kq&#xA;n6T03/lrh/5GL/XFXfpPTf8Alrh/5GL/AFxVTi1rSZHlRbuLlC4jkq6j4iivtvvs4xVU/Sem/wDL&#xA;XD/yMX+uKu/Sem/8tcP/ACMX+uKpdFf2cvmoQwzJK7WLPRCG2WZQa0/1xiqdYqgdZ0PTNZs/qeow&#xA;maANzAV3iYNQrUPGyOKqxU0O4JHTFWM+UrW8m17XP0lpsaRK4WGV7NYaenPPFHHHKY1NxH9Vigfn&#xA;U0LEV/ZQqyv9Gab/AMskP/Itf6YFd+jNN/5ZIf8AkWv9MVY3fxTxedtOtobP1dLnhInjjtaRxNxm&#xA;YyyztbvGQSiII1nRgTXiwOKsk/Rmm/8ALJD/AMi1/pirv0Zpv/LJD/yLX+mKsR83yahY6qkWk2DX&#xA;KyaZfSJAlh60H1yJQ1rymWMhWduQ4lx098Kpt5TtfrOjiS/tucgmnSGa5tVtppIEmZYnkh4R8GZA&#xA;P2Fr1oK4FTj9Gab/AMskP/Itf6Yqknm+FLLSVubG2YTpcQ1S1s/rTuhcCRSiRTMF4VJYD6cVQnla&#xA;O5n1nWre/szJZwyBrCeS1+rwqhllUQxrJbW7syIicnDyK1RQjuqyb9Gab/yyQ/8AItf6YqhNXtNO&#xA;t9KvJxa8THDIwa1tlnnBCmhiiCSc3/lXiantirCPL0/mefVdGS9sHFpdIXuFlsBF8DNeE/WpfQjE&#xA;c8KxWq0AVXLMVDKRxKvQv0Zpv/LJD/yLX+mBXfozTf8Alkh/5Fr/AExV5xqt3rqS6zLY2t28FneJ&#xA;FaQSaYVnmCrcGWO2kSymj9B2WJY5XVvsks4DocKvRxpunEAmzhBPYxpt9wwK79Gab/yyQ/8AItf6&#xA;Yqwvzudbs9VtU8v2H1kNa3T3Ft9UEkAdLad7Zg/oBeZuEQEfWR2HpnnzUqnflG2N1oiS6jahpvWu&#xA;EjluLZbeaSBJ3WCSSExxemzRBSRwHjQdMCpz+jNN/wCWSH/kWv8ATFWN/mBDc2fluafQ7YjVVP8A&#xA;okdvaif1HCMQkirbXdENPBKmg9RK1xVb5VS6n1bWbbULItbQSBrKaS1EESo0kq+hGGghLmNUXk6y&#xA;SK1QVbxKsm/Rmm/8skP/ACLX+mBULqlnHb6bdTWGlw3l9HE7W1rSOP1JAPgQu9FWp7nFWEeXJvNk&#xA;2r6TBqmltHHIhW+EljEkb0+tiSeSSNZEicNFbhIxJuHJoeqlXoP6M03/AJZIf+Ra/wBMCu/Rmm/8&#xA;skP/ACLX+mKvMr6989Weq61d2+kSadHDcwG0S0s4pJru0WO5X0UuIIr345HihkLSoFSvAlagkq9W&#xA;wK7FXYq7FXYq7FXYq7FXmc/5l+a9Mivb7UdGjn039JXVhp0iOtpVbS5uoiXeSScMWjt4+PJYuTkg&#xA;fDQ4quk/NjVrR5Le50aG4uooLydvq92FBe2+sFIAskYb1P8ARx6gH2A6tQ1oDSpz5m8xecrG6tIb&#xA;Cwt3/wBDlu9SWplSP0yoPCZnt2NATx/csWPZRviqS3P5w3NvDcMNHS4a3nNsWS7CIhVplJuWeILA&#xA;X+r/AALVq8l3GNKnGoef72x0A6xcabBBHJqj6dbLcXhjX00neATzuIHEfIxFuKh9iPiwKk8X5pax&#xA;NZXbrpiwTrFJcW0Nw5jnYKhdYIYONJpU4/vAXTiCDvhpCp/yt6f1xGdGCo0SSeo91w4GRwp9VGhD&#xA;qkINJ3Cn02VloaVLSUTF+ZF9baD5bvbyxjubjW5fTnWGX0xGv1hIecXNCJeIkDcaqxAJApXiqqeY&#xA;PzNm0nWNT0+PS1vP0eIxVLgrJWQW5EkqGIrFCPrO8nM/ZPw4qg7j81L82yXFvpaAo9v6tmJ/VuXS&#xA;a3WVpESOMqbdWenrKzV4tRK7Y0qL86fmNqGiQzJp+nxXlx+i5NQgkEzsrOILiUCJFjrNGn1X425L&#xA;Tmn82wVvzR591XQZl0s2cN1qC6b9blmSZg3renOf3UHpHnGr29WJdaA9MKqd1+ZN6mqW8EdlCYHv&#xA;ZrGdTOxkg4S+ks15+6/0ZWoSv2+VV3A3xpUp0j849Tm0y2+t6Oi3v1Czubmaa4+rRercRW7yM8fC&#xA;aWKLlcEI9GBIoaHGlTq4/MW8sbfy6k9gt1davYw3U8cchjm5yNDG6wQem/qcTOXYF14opO9MVSu3&#xA;/OeaUQltGjQyRtI0QvQ8howAEarCeXENWTkVKANsabtIVYfzguZBaf7gw31hHdpY7sGElUV+MDvF&#xA;GZivOkgCgqQaBsaSnvl7zzNqGtXOk6jaQafcQrD6fp3X1n1HmjEnGgij4EfEKPRjxqFpvgVlmKux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqNp9S9Jvqfp+j6kvL0ePH1fUb1q8duXq8ufflW&#xA;u+KrL39HfuPr3o/3yfVfX4/3+/D0+X7fWlN8VROKuxV2KqNv9S9W5+r+n63qD656fHl6vppT1ab8&#xA;vS4fa3407UxVWxV2KqKfUvrsvD0/rvpx+vTj6vpcn9Ln+1x5epxrtXlTviqtirsVUT9S+urX0/r3&#xA;pnj9n1fS5DlT9rhypXtXFVK4/RPqT/WfQ9X0D9Z9Thy+rVavPlv6deXXbriqJi9P009Lj6XEenxp&#xA;x402pTalMVXYq7FXYq7FXYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:0A3B4F983D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0A3B4F983D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0A3B4F983D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T17:58:50+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -203.612 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 203.612 li
259.416 203.612 li
259.416 0 li
cp
clp
[1 0 0 1 0 0 ]ct
18.334 186.487 mo
255.484 186.487 li
255.484 2.8877 li
18.334 2.8877 li
18.334 186.487 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
18.334 186.487 mo
20.0532 186.487 li
20.0532 184.769 li
18.334 184.769 li
18.334 186.487 li
cp
clp
18.334 187.675 mo
18.6489 187.675 18.9512 187.55 19.1738 187.327 cv
19.3965 187.104 19.522 186.802 19.522 186.487 cv
19.522 186.173 19.3965 185.87 19.1738 185.647 cv
18.9512 185.425 18.6489 185.3 18.334 185.3 cv
18.019 185.3 17.7168 185.425 17.4941 185.647 cv
17.2715 185.87 17.146 186.173 17.146 186.487 cv
17.146 186.802 17.2715 187.104 17.4941 187.327 cv
17.7168 187.55 18.019 187.675 18.334 187.675 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.334 187.675 mo
18.6489 187.675 18.9512 187.55 19.1738 187.327 cv
19.3965 187.104 19.522 186.802 19.522 186.487 cv
19.522 186.173 19.3965 185.87 19.1738 185.647 cv
18.9512 185.425 18.6489 185.3 18.334 185.3 cv
18.019 185.3 17.7168 185.425 17.4941 185.647 cv
17.2715 185.87 17.146 186.173 17.146 186.487 cv
17.146 186.802 17.2715 187.104 17.4941 187.327 cv
17.7168 187.55 18.019 187.675 18.334 187.675 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
21.8848 184.128 mo
25.3232 184.128 li
25.3232 180.688 li
21.8848 180.688 li
21.8848 184.128 li
cp
clp
23.604 183.595 mo
23.9189 183.595 24.2212 183.47 24.4438 183.247 cv
24.6665 183.024 24.7915 182.722 24.7915 182.407 cv
24.7915 182.093 24.6665 181.79 24.4438 181.567 cv
24.2212 181.345 23.9189 181.22 23.604 181.22 cv
23.2891 181.22 22.9863 181.345 22.7642 181.567 cv
22.5415 181.79 22.416 182.093 22.416 182.407 cv
22.416 182.722 22.5415 183.024 22.7642 183.247 cv
22.9863 183.47 23.2891 183.595 23.604 183.595 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
23.604 183.595 mo
23.9189 183.595 24.2212 183.47 24.4438 183.247 cv
24.6665 183.024 24.7915 182.722 24.7915 182.407 cv
24.7915 182.093 24.6665 181.79 24.4438 181.567 cv
24.2212 181.345 23.9189 181.22 23.604 181.22 cv
23.2891 181.22 22.9863 181.345 22.7642 181.567 cv
22.5415 181.79 22.416 182.093 22.416 182.407 cv
22.416 182.722 22.5415 183.024 22.7642 183.247 cv
22.9863 183.47 23.2891 183.595 23.604 183.595 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
27.1548 180.046 mo
30.5933 180.046 li
30.5933 176.608 li
27.1548 176.608 li
27.1548 180.046 li
cp
clp
28.874 179.515 mo
29.189 179.515 29.4912 179.39 29.7139 179.167 cv
29.9365 178.944 30.0615 178.642 30.0615 178.327 cv
30.0615 178.013 29.9365 177.71 29.7139 177.487 cv
29.4912 177.265 29.189 177.14 28.874 177.14 cv
28.5586 177.14 28.2563 177.265 28.0337 177.487 cv
27.8115 177.71 27.686 178.013 27.686 178.327 cv
27.686 178.642 27.8115 178.944 28.0337 179.167 cv
28.2563 179.39 28.5586 179.515 28.874 179.515 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
28.874 179.515 mo
29.189 179.515 29.4912 179.39 29.7139 179.167 cv
29.9365 178.944 30.0615 178.642 30.0615 178.327 cv
30.0615 178.013 29.9365 177.71 29.7139 177.487 cv
29.4912 177.265 29.189 177.14 28.874 177.14 cv
28.5586 177.14 28.2563 177.265 28.0337 177.487 cv
27.8115 177.71 27.686 178.013 27.686 178.327 cv
27.686 178.642 27.8115 178.944 28.0337 179.167 cv
28.2563 179.39 28.5586 179.515 28.874 179.515 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
32.4248 175.966 mo
35.8633 175.966 li
35.8633 172.528 li
32.4248 172.528 li
32.4248 175.966 li
cp
clp
34.144 175.435 mo
34.459 175.435 34.7612 175.31 34.9844 175.087 cv
35.2065 174.864 35.3315 174.562 35.3315 174.247 cv
35.3315 173.933 35.2065 173.63 34.9844 173.407 cv
34.7612 173.185 34.459 173.06 34.144 173.06 cv
33.8286 173.06 33.5264 173.185 33.3037 173.407 cv
33.0815 173.63 32.9561 173.933 32.9561 174.247 cv
32.9561 174.562 33.0815 174.864 33.3037 175.087 cv
33.5264 175.31 33.8286 175.435 34.144 175.435 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
34.144 175.435 mo
34.459 175.435 34.7612 175.31 34.9844 175.087 cv
35.2065 174.864 35.3315 174.562 35.3315 174.247 cv
35.3315 173.933 35.2065 173.63 34.9844 173.407 cv
34.7612 173.185 34.459 173.06 34.144 173.06 cv
33.8286 173.06 33.5264 173.185 33.3037 173.407 cv
33.0815 173.63 32.9561 173.933 32.9561 174.247 cv
32.9561 174.562 33.0815 174.864 33.3037 175.087 cv
33.5264 175.31 33.8286 175.435 34.144 175.435 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
32.4248 147.407 mo
35.8633 147.407 li
35.8633 143.968 li
32.4248 143.968 li
32.4248 147.407 li
cp
clp
34.144 146.876 mo
34.459 146.876 34.7612 146.751 34.9844 146.528 cv
35.2065 146.306 35.3315 146.003 35.3315 145.688 cv
35.3315 145.372 35.2065 145.069 34.9844 144.847 cv
34.7612 144.626 34.459 144.499 34.144 144.499 cv
33.8286 144.499 33.5264 144.626 33.3037 144.847 cv
33.0815 145.069 32.9561 145.372 32.9561 145.688 cv
32.9561 146.003 33.0815 146.306 33.3037 146.528 cv
33.5264 146.751 33.8286 146.876 34.144 146.876 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
34.144 146.876 mo
34.459 146.876 34.7612 146.751 34.9844 146.528 cv
35.2065 146.306 35.3315 146.003 35.3315 145.688 cv
35.3315 145.372 35.2065 145.069 34.9844 144.847 cv
34.7612 144.626 34.459 144.499 34.144 144.499 cv
33.8286 144.499 33.5264 144.626 33.3037 144.847 cv
33.0815 145.069 32.9561 145.372 32.9561 145.688 cv
32.9561 146.003 33.0815 146.306 33.3037 146.528 cv
33.5264 146.751 33.8286 146.876 34.144 146.876 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
37.6948 171.888 mo
41.1333 171.888 li
41.1333 168.448 li
37.6948 168.448 li
37.6948 171.888 li
cp
clp
39.4141 171.354 mo
39.729 171.354 40.0313 171.229 40.2539 171.007 cv
40.4766 170.784 40.6021 170.481 40.6021 170.167 cv
40.6021 169.853 40.4766 169.55 40.2539 169.327 cv
40.0313 169.104 39.729 168.979 39.4141 168.979 cv
39.0991 168.979 38.7969 169.104 38.5737 169.327 cv
38.3516 169.55 38.2261 169.853 38.2261 170.167 cv
38.2261 170.481 38.3516 170.784 38.5737 171.007 cv
38.7969 171.229 39.0991 171.354 39.4141 171.354 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
39.4141 171.354 mo
39.729 171.354 40.0313 171.229 40.2539 171.007 cv
40.4766 170.784 40.6021 170.481 40.6021 170.167 cv
40.6021 169.853 40.4766 169.55 40.2539 169.327 cv
40.0313 169.104 39.729 168.979 39.4141 168.979 cv
39.0991 168.979 38.7969 169.104 38.5737 169.327 cv
38.3516 169.55 38.2261 169.853 38.2261 170.167 cv
38.2261 170.481 38.3516 170.784 38.5737 171.007 cv
38.7969 171.229 39.0991 171.354 39.4141 171.354 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
58.7749 151.487 mo
62.2134 151.487 li
62.2134 148.048 li
58.7749 148.048 li
58.7749 151.487 li
cp
clp
60.4937 150.956 mo
60.8091 150.956 61.1113 150.831 61.334 150.606 cv
61.5562 150.384 61.6816 150.083 61.6816 149.767 cv
61.6816 149.452 61.5562 149.151 61.334 148.927 cv
61.1113 148.704 60.8091 148.579 60.4937 148.579 cv
60.1787 148.579 59.8765 148.704 59.6538 148.927 cv
59.4312 149.151 59.3062 149.452 59.3062 149.767 cv
59.3062 150.083 59.4312 150.384 59.6538 150.606 cv
59.8765 150.831 60.1787 150.956 60.4937 150.956 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
60.4937 150.956 mo
60.8091 150.956 61.1113 150.831 61.334 150.606 cv
61.5562 150.384 61.6816 150.083 61.6816 149.767 cv
61.6816 149.452 61.5562 149.151 61.334 148.927 cv
61.1113 148.704 60.8091 148.579 60.4937 148.579 cv
60.1787 148.579 59.8765 148.704 59.6538 148.927 cv
59.4312 149.151 59.3062 149.452 59.3062 149.767 cv
59.3062 150.083 59.4312 150.384 59.6538 150.606 cv
59.8765 150.831 60.1787 150.956 60.4937 150.956 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
58.7749 25.0068 mo
62.2134 25.0068 li
62.2134 21.5684 li
58.7749 21.5684 li
58.7749 25.0068 li
cp
clp
60.4937 24.4756 mo
60.8091 24.4756 61.1113 24.3506 61.334 24.1274 cv
61.5562 23.9048 61.6816 23.6025 61.6816 23.2876 cv
61.6816 22.9727 61.5562 22.6704 61.334 22.4478 cv
61.1113 22.2251 60.8091 22.0996 60.4937 22.0996 cv
60.1787 22.0996 59.8765 22.2251 59.6538 22.4478 cv
59.4312 22.6704 59.3062 22.9727 59.3062 23.2876 cv
59.3062 23.6025 59.4312 23.9048 59.6538 24.1274 cv
59.8765 24.3506 60.1787 24.4756 60.4937 24.4756 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
60.4937 24.4756 mo
60.8091 24.4756 61.1113 24.3506 61.334 24.1274 cv
61.5562 23.9048 61.6816 23.6025 61.6816 23.2876 cv
61.6816 22.9727 61.5562 22.6704 61.334 22.4478 cv
61.1113 22.2251 60.8091 22.0996 60.4937 22.0996 cv
60.1787 22.0996 59.8765 22.2251 59.6538 22.4478 cv
59.4312 22.6704 59.3062 22.9727 59.3062 23.2876 cv
59.3062 23.6025 59.4312 23.9048 59.6538 24.1274 cv
59.8765 24.3506 60.1787 24.4756 60.4937 24.4756 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
64.0449 175.966 mo
67.4834 175.966 li
67.4834 172.528 li
64.0449 172.528 li
64.0449 175.966 li
cp
clp
65.7637 175.435 mo
66.0786 175.435 66.3813 175.31 66.604 175.087 cv
66.8262 174.864 66.9517 174.562 66.9517 174.247 cv
66.9517 173.933 66.8262 173.63 66.604 173.407 cv
66.3813 173.185 66.0786 173.06 65.7637 173.06 cv
65.4487 173.06 65.1465 173.185 64.9238 173.407 cv
64.7012 173.63 64.5757 173.933 64.5757 174.247 cv
64.5757 174.562 64.7012 174.864 64.9238 175.087 cv
65.1465 175.31 65.4487 175.435 65.7637 175.435 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.7637 175.435 mo
66.0786 175.435 66.3813 175.31 66.604 175.087 cv
66.8262 174.864 66.9517 174.562 66.9517 174.247 cv
66.9517 173.933 66.8262 173.63 66.604 173.407 cv
66.3813 173.185 66.0786 173.06 65.7637 173.06 cv
65.4487 173.06 65.1465 173.185 64.9238 173.407 cv
64.7012 173.63 64.5757 173.933 64.5757 174.247 cv
64.5757 174.562 64.7012 174.864 64.9238 175.087 cv
65.1465 175.31 65.4487 175.435 65.7637 175.435 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
64.0449 147.407 mo
67.4834 147.407 li
67.4834 143.968 li
64.0449 143.968 li
64.0449 147.407 li
cp
clp
65.7637 146.876 mo
66.0786 146.876 66.3813 146.751 66.604 146.528 cv
66.8262 146.306 66.9517 146.003 66.9517 145.688 cv
66.9517 145.372 66.8262 145.069 66.604 144.847 cv
66.3813 144.626 66.0786 144.499 65.7637 144.499 cv
65.4487 144.499 65.1465 144.626 64.9238 144.847 cv
64.7012 145.069 64.5757 145.372 64.5757 145.688 cv
64.5757 146.003 64.7012 146.306 64.9238 146.528 cv
65.1465 146.751 65.4487 146.876 65.7637 146.876 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
65.7637 146.876 mo
66.0786 146.876 66.3813 146.751 66.604 146.528 cv
66.8262 146.306 66.9517 146.003 66.9517 145.688 cv
66.9517 145.372 66.8262 145.069 66.604 144.847 cv
66.3813 144.626 66.0786 144.499 65.7637 144.499 cv
65.4487 144.499 65.1465 144.626 64.9238 144.847 cv
64.7012 145.069 64.5757 145.372 64.5757 145.688 cv
64.5757 146.003 64.7012 146.306 64.9238 146.528 cv
65.1465 146.751 65.4487 146.876 65.7637 146.876 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
69.3149 143.327 mo
72.7529 143.327 li
72.7529 139.888 li
69.3149 139.888 li
69.3149 143.327 li
cp
clp
71.0342 142.796 mo
71.3491 142.796 71.6514 142.671 71.874 142.448 cv
72.0967 142.224 72.2217 141.923 72.2217 141.608 cv
72.2217 141.292 72.0967 140.991 71.874 140.769 cv
71.6514 140.544 71.3491 140.419 71.0342 140.419 cv
70.7192 140.419 70.4165 140.544 70.1934 140.769 cv
69.9717 140.991 69.8462 141.292 69.8462 141.608 cv
69.8462 141.923 69.9717 142.224 70.1934 142.448 cv
70.4165 142.671 70.7192 142.796 71.0342 142.796 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
71.0342 142.796 mo
71.3491 142.796 71.6514 142.671 71.874 142.448 cv
72.0967 142.224 72.2217 141.923 72.2217 141.608 cv
72.2217 141.292 72.0967 140.991 71.874 140.769 cv
71.6514 140.544 71.3491 140.419 71.0342 140.419 cv
70.7192 140.419 70.4165 140.544 70.1934 140.769 cv
69.9717 140.991 69.8462 141.292 69.8462 141.608 cv
69.8462 141.923 69.9717 142.224 70.1934 142.448 cv
70.4165 142.671 70.7192 142.796 71.0342 142.796 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
74.585 139.247 mo
78.0229 139.247 li
78.0229 135.808 li
74.585 135.808 li
74.585 139.247 li
cp
clp
76.3042 138.716 mo
76.6191 138.716 76.9214 138.591 77.144 138.368 cv
77.3667 138.146 77.4917 137.843 77.4917 137.528 cv
77.4917 137.212 77.3667 136.911 77.144 136.687 cv
76.9214 136.466 76.6191 136.339 76.3042 136.339 cv
75.9888 136.339 75.6865 136.466 75.4639 136.687 cv
75.2417 136.911 75.1162 137.212 75.1162 137.528 cv
75.1162 137.843 75.2417 138.146 75.4639 138.368 cv
75.6865 138.591 75.9888 138.716 76.3042 138.716 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
76.3042 138.716 mo
76.6191 138.716 76.9214 138.591 77.144 138.368 cv
77.3667 138.146 77.4917 137.843 77.4917 137.528 cv
77.4917 137.212 77.3667 136.911 77.144 136.687 cv
76.9214 136.466 76.6191 136.339 76.3042 136.339 cv
75.9888 136.339 75.6865 136.466 75.4639 136.687 cv
75.2417 136.911 75.1162 137.212 75.1162 137.528 cv
75.1162 137.843 75.2417 138.146 75.4639 138.368 cv
75.6865 138.591 75.9888 138.716 76.3042 138.716 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
74.585 69.8867 mo
78.0229 69.8867 li
78.0229 66.4482 li
74.585 66.4482 li
74.585 69.8867 li
cp
clp
76.3042 69.3555 mo
76.6191 69.3555 76.9214 69.2305 77.144 69.0073 cv
77.3667 68.7852 77.4917 68.4824 77.4917 68.1675 cv
77.4917 67.8525 77.3667 67.5503 77.144 67.3276 cv
76.9214 67.105 76.6191 66.9795 76.3042 66.9795 cv
75.9888 66.9795 75.6865 67.105 75.4639 67.3276 cv
75.2417 67.5503 75.1162 67.8525 75.1162 68.1675 cv
75.1162 68.4824 75.2417 68.7852 75.4639 69.0073 cv
75.6865 69.2305 75.9888 69.3555 76.3042 69.3555 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
76.3042 69.3555 mo
76.6191 69.3555 76.9214 69.2305 77.144 69.0073 cv
77.3667 68.7852 77.4917 68.4824 77.4917 68.1675 cv
77.4917 67.8525 77.3667 67.5503 77.144 67.3276 cv
76.9214 67.105 76.6191 66.9795 76.3042 66.9795 cv
75.9888 66.9795 75.6865 67.105 75.4639 67.3276 cv
75.2417 67.5503 75.1162 67.8525 75.1162 68.1675 cv
75.1162 68.4824 75.2417 68.7852 75.4639 69.0073 cv
75.6865 69.2305 75.9888 69.3555 76.3042 69.3555 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
79.855 135.167 mo
83.293 135.167 li
83.293 131.728 li
79.855 131.728 li
79.855 135.167 li
cp
clp
81.5737 134.636 mo
81.8892 134.636 82.1914 134.511 82.4136 134.288 cv
82.6362 134.065 82.7617 133.763 82.7617 133.448 cv
82.7617 133.132 82.6362 132.831 82.4136 132.608 cv
82.1914 132.386 81.8892 132.259 81.5737 132.259 cv
81.2588 132.259 80.9565 132.386 80.7339 132.608 cv
80.5112 132.831 80.3862 133.132 80.3862 133.448 cv
80.3862 133.763 80.5112 134.065 80.7339 134.288 cv
80.9565 134.511 81.2588 134.636 81.5737 134.636 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
81.5737 134.636 mo
81.8892 134.636 82.1914 134.511 82.4136 134.288 cv
82.6362 134.065 82.7617 133.763 82.7617 133.448 cv
82.7617 133.132 82.6362 132.831 82.4136 132.608 cv
82.1914 132.386 81.8892 132.259 81.5737 132.259 cv
81.2588 132.259 80.9565 132.386 80.7339 132.608 cv
80.5112 132.831 80.3862 133.132 80.3862 133.448 cv
80.3862 133.763 80.5112 134.065 80.7339 134.288 cv
80.9565 134.511 81.2588 134.636 81.5737 134.636 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
79.855 65.8066 mo
83.293 65.8066 li
83.293 62.3687 li
79.855 62.3687 li
79.855 65.8066 li
cp
clp
81.5737 65.2754 mo
81.8892 65.2754 82.1914 65.1504 82.4136 64.9277 cv
82.6362 64.7051 82.7617 64.4028 82.7617 64.0879 cv
82.7617 63.7725 82.6362 63.4707 82.4136 63.248 cv
82.1914 63.0249 81.8892 62.8999 81.5737 62.8999 cv
81.2588 62.8999 80.9565 63.0249 80.7339 63.248 cv
80.5112 63.4707 80.3862 63.7725 80.3862 64.0879 cv
80.3862 64.4028 80.5112 64.7051 80.7339 64.9277 cv
80.9565 65.1504 81.2588 65.2754 81.5737 65.2754 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
81.5737 65.2754 mo
81.8892 65.2754 82.1914 65.1504 82.4136 64.9277 cv
82.6362 64.7051 82.7617 64.4028 82.7617 64.0879 cv
82.7617 63.7725 82.6362 63.4707 82.4136 63.248 cv
82.1914 63.0249 81.8892 62.8999 81.5737 62.8999 cv
81.2588 62.8999 80.9565 63.0249 80.7339 63.248 cv
80.5112 63.4707 80.3862 63.7725 80.3862 64.0879 cv
80.3862 64.4028 80.5112 64.7051 80.7339 64.9277 cv
80.9565 65.1504 81.2588 65.2754 81.5737 65.2754 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
85.125 131.085 mo
88.563 131.085 li
88.563 127.647 li
85.125 127.647 li
85.125 131.085 li
cp
clp
86.8438 130.556 mo
87.1592 130.556 87.4614 130.431 87.6841 130.208 cv
87.9063 129.985 88.0317 129.683 88.0317 129.368 cv
88.0317 129.052 87.9063 128.751 87.6841 128.528 cv
87.4614 128.304 87.1592 128.179 86.8438 128.179 cv
86.5288 128.179 86.2266 128.304 86.0039 128.528 cv
85.7813 128.751 85.6563 129.052 85.6563 129.368 cv
85.6563 129.683 85.7813 129.985 86.0039 130.208 cv
86.2266 130.431 86.5288 130.556 86.8438 130.556 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
86.8438 130.556 mo
87.1592 130.556 87.4614 130.431 87.6841 130.208 cv
87.9063 129.985 88.0317 129.683 88.0317 129.368 cv
88.0317 129.052 87.9063 128.751 87.6841 128.528 cv
87.4614 128.304 87.1592 128.179 86.8438 128.179 cv
86.5288 128.179 86.2266 128.304 86.0039 128.528 cv
85.7813 128.751 85.6563 129.052 85.6563 129.368 cv
85.6563 129.683 85.7813 129.985 86.0039 130.208 cv
86.2266 130.431 86.5288 130.556 86.8438 130.556 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
85.125 61.7266 mo
88.563 61.7266 li
88.563 58.2886 li
85.125 58.2886 li
85.125 61.7266 li
cp
clp
86.8438 61.1953 mo
87.1592 61.1953 87.4614 61.0708 87.6841 60.8477 cv
87.9063 60.625 88.0317 60.3228 88.0317 60.0078 cv
88.0317 59.6924 87.9063 59.3906 87.6841 59.168 cv
87.4614 58.9453 87.1592 58.8198 86.8438 58.8198 cv
86.5288 58.8198 86.2266 58.9453 86.0039 59.168 cv
85.7813 59.3906 85.6563 59.6924 85.6563 60.0078 cv
85.6563 60.3228 85.7813 60.625 86.0039 60.8477 cv
86.2266 61.0708 86.5288 61.1953 86.8438 61.1953 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
86.8438 61.1953 mo
87.1592 61.1953 87.4614 61.0708 87.6841 60.8477 cv
87.9063 60.625 88.0317 60.3228 88.0317 60.0078 cv
88.0317 59.6924 87.9063 59.3906 87.6841 59.168 cv
87.4614 58.9453 87.1592 58.8198 86.8438 58.8198 cv
86.5288 58.8198 86.2266 58.9453 86.0039 59.168 cv
85.7813 59.3906 85.6563 59.6924 85.6563 60.0078 cv
85.6563 60.3228 85.7813 60.625 86.0039 60.8477 cv
86.2266 61.0708 86.5288 61.1953 86.8438 61.1953 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
90.395 127.007 mo
93.833 127.007 li
93.833 123.569 li
90.395 123.569 li
90.395 127.007 li
cp
clp
92.1138 126.476 mo
92.4287 126.476 92.731 126.351 92.9536 126.128 cv
93.1763 125.905 93.3018 125.603 93.3018 125.288 cv
93.3018 124.972 93.1763 124.671 92.9536 124.448 cv
92.731 124.226 92.4287 124.099 92.1138 124.099 cv
91.7988 124.099 91.4966 124.226 91.2739 124.448 cv
91.0513 124.671 90.9258 124.972 90.9258 125.288 cv
90.9258 125.603 91.0513 125.905 91.2739 126.128 cv
91.4966 126.351 91.7988 126.476 92.1138 126.476 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
92.1138 126.476 mo
92.4287 126.476 92.731 126.351 92.9536 126.128 cv
93.1763 125.905 93.3018 125.603 93.3018 125.288 cv
93.3018 124.972 93.1763 124.671 92.9536 124.448 cv
92.731 124.226 92.4287 124.099 92.1138 124.099 cv
91.7988 124.099 91.4966 124.226 91.2739 124.448 cv
91.0513 124.671 90.9258 124.972 90.9258 125.288 cv
90.9258 125.603 91.0513 125.905 91.2739 126.128 cv
91.4966 126.351 91.7988 126.476 92.1138 126.476 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
95.6646 122.927 mo
99.103 122.927 li
99.103 119.488 li
95.6646 119.488 li
95.6646 122.927 li
cp
clp
97.3838 122.396 mo
97.6987 122.396 98.001 122.271 98.2241 122.048 cv
98.4463 121.825 98.5718 121.522 98.5718 121.208 cv
98.5718 120.892 98.4463 120.591 98.2241 120.368 cv
98.001 120.146 97.6987 120.019 97.3838 120.019 cv
97.0688 120.019 96.7666 120.146 96.5439 120.368 cv
96.3213 120.591 96.1958 120.892 96.1958 121.208 cv
96.1958 121.522 96.3213 121.825 96.5439 122.048 cv
96.7666 122.271 97.0688 122.396 97.3838 122.396 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
97.3838 122.396 mo
97.6987 122.396 98.001 122.271 98.2241 122.048 cv
98.4463 121.825 98.5718 121.522 98.5718 121.208 cv
98.5718 120.892 98.4463 120.591 98.2241 120.368 cv
98.001 120.146 97.6987 120.019 97.3838 120.019 cv
97.0688 120.019 96.7666 120.146 96.5439 120.368 cv
96.3213 120.591 96.1958 120.892 96.1958 121.208 cv
96.1958 121.522 96.3213 121.825 96.5439 122.048 cv
96.7666 122.271 97.0688 122.396 97.3838 122.396 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
100.935 118.847 mo
104.373 118.847 li
104.373 115.409 li
100.935 115.409 li
100.935 118.847 li
cp
clp
102.654 118.316 mo
102.969 118.316 103.271 118.191 103.494 117.968 cv
103.716 117.746 103.842 117.443 103.842 117.128 cv
103.842 116.813 103.716 116.511 103.494 116.289 cv
103.271 116.065 102.969 115.939 102.654 115.939 cv
102.339 115.939 102.037 116.065 101.814 116.289 cv
101.591 116.511 101.466 116.813 101.466 117.128 cv
101.466 117.443 101.591 117.746 101.814 117.968 cv
102.037 118.191 102.339 118.316 102.654 118.316 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
102.654 118.316 mo
102.969 118.316 103.271 118.191 103.494 117.968 cv
103.716 117.746 103.842 117.443 103.842 117.128 cv
103.842 116.813 103.716 116.511 103.494 116.289 cv
103.271 116.065 102.969 115.939 102.654 115.939 cv
102.339 115.939 102.037 116.065 101.814 116.289 cv
101.591 116.511 101.466 116.813 101.466 117.128 cv
101.466 117.443 101.591 117.746 101.814 117.968 cv
102.037 118.191 102.339 118.316 102.654 118.316 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
100.935 45.4067 mo
104.373 45.4067 li
104.373 41.9688 li
100.935 41.9688 li
100.935 45.4067 li
cp
clp
102.654 44.8755 mo
102.969 44.8755 103.271 44.7505 103.494 44.5278 cv
103.716 44.3052 103.842 44.0029 103.842 43.688 cv
103.842 43.3726 103.716 43.0703 103.494 42.8477 cv
103.271 42.625 102.969 42.5 102.654 42.5 cv
102.339 42.5 102.037 42.625 101.814 42.8477 cv
101.591 43.0703 101.466 43.3726 101.466 43.688 cv
101.466 44.0029 101.591 44.3052 101.814 44.5278 cv
102.037 44.7505 102.339 44.8755 102.654 44.8755 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
102.654 44.8755 mo
102.969 44.8755 103.271 44.7505 103.494 44.5278 cv
103.716 44.3052 103.842 44.0029 103.842 43.688 cv
103.842 43.3726 103.716 43.0703 103.494 42.8477 cv
103.271 42.625 102.969 42.5 102.654 42.5 cv
102.339 42.5 102.037 42.625 101.814 42.8477 cv
101.591 43.0703 101.466 43.3726 101.466 43.688 cv
101.466 44.0029 101.591 44.3052 101.814 44.5278 cv
102.037 44.7505 102.339 44.8755 102.654 44.8755 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
106.205 114.767 mo
109.643 114.767 li
109.643 111.33 li
106.205 111.33 li
106.205 114.767 li
cp
clp
107.924 114.236 mo
108.239 114.236 108.542 114.111 108.764 113.888 cv
108.986 113.666 109.112 113.363 109.112 113.048 cv
109.112 112.732 108.986 112.431 108.764 112.208 cv
108.542 111.985 108.239 111.86 107.924 111.86 cv
107.609 111.86 107.307 111.985 107.083 112.208 cv
106.861 112.431 106.736 112.732 106.736 113.048 cv
106.736 113.363 106.861 113.666 107.083 113.888 cv
107.307 114.111 107.609 114.236 107.924 114.236 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
107.924 114.236 mo
108.239 114.236 108.542 114.111 108.764 113.888 cv
108.986 113.666 109.112 113.363 109.112 113.048 cv
109.112 112.732 108.986 112.431 108.764 112.208 cv
108.542 111.985 108.239 111.86 107.924 111.86 cv
107.609 111.86 107.307 111.985 107.083 112.208 cv
106.861 112.431 106.736 112.732 106.736 113.048 cv
106.736 113.363 106.861 113.666 107.083 113.888 cv
107.307 114.111 107.609 114.236 107.924 114.236 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
111.475 110.687 mo
114.913 110.687 li
114.913 107.249 li
111.475 107.249 li
111.475 110.687 li
cp
clp
113.194 110.156 mo
113.509 110.156 113.811 110.031 114.034 109.808 cv
114.256 109.585 114.382 109.283 114.382 108.968 cv
114.382 108.653 114.256 108.351 114.034 108.128 cv
113.811 107.906 113.509 107.779 113.194 107.779 cv
112.879 107.779 112.577 107.906 112.354 108.128 cv
112.131 108.351 112.006 108.653 112.006 108.968 cv
112.006 109.283 112.131 109.585 112.354 109.808 cv
112.577 110.031 112.879 110.156 113.194 110.156 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
113.194 110.156 mo
113.509 110.156 113.811 110.031 114.034 109.808 cv
114.256 109.585 114.382 109.283 114.382 108.968 cv
114.382 108.653 114.256 108.351 114.034 108.128 cv
113.811 107.906 113.509 107.779 113.194 107.779 cv
112.879 107.779 112.577 107.906 112.354 108.128 cv
112.131 108.351 112.006 108.653 112.006 108.968 cv
112.006 109.283 112.131 109.585 112.354 109.808 cv
112.577 110.031 112.879 110.156 113.194 110.156 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
116.745 106.607 mo
120.183 106.607 li
120.183 103.168 li
116.745 103.168 li
116.745 106.607 li
cp
clp
118.464 106.076 mo
118.779 106.076 119.081 105.951 119.304 105.728 cv
119.526 105.505 119.652 105.203 119.652 104.888 cv
119.652 104.573 119.526 104.271 119.304 104.048 cv
119.081 103.825 118.779 103.699 118.464 103.699 cv
118.149 103.699 117.847 103.825 117.624 104.048 cv
117.401 104.271 117.276 104.573 117.276 104.888 cv
117.276 105.203 117.401 105.505 117.624 105.728 cv
117.847 105.951 118.149 106.076 118.464 106.076 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
118.464 106.076 mo
118.779 106.076 119.081 105.951 119.304 105.728 cv
119.526 105.505 119.652 105.203 119.652 104.888 cv
119.652 104.573 119.526 104.271 119.304 104.048 cv
119.081 103.825 118.779 103.699 118.464 103.699 cv
118.149 103.699 117.847 103.825 117.624 104.048 cv
117.401 104.271 117.276 104.573 117.276 104.888 cv
117.276 105.203 117.401 105.505 117.624 105.728 cv
117.847 105.951 118.149 106.076 118.464 106.076 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
122.015 102.527 mo
125.453 102.527 li
125.453 99.0894 li
122.015 99.0894 li
122.015 102.527 li
cp
clp
123.734 101.996 mo
124.049 101.996 124.351 101.871 124.574 101.648 cv
124.796 101.425 124.922 101.123 124.922 100.808 cv
124.922 100.493 124.796 100.191 124.574 99.9683 cv
124.351 99.7456 124.049 99.6196 123.734 99.6196 cv
123.419 99.6196 123.117 99.7456 122.894 99.9683 cv
122.671 100.191 122.546 100.493 122.546 100.808 cv
122.546 101.123 122.671 101.425 122.894 101.648 cv
123.117 101.871 123.419 101.996 123.734 101.996 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
123.734 101.996 mo
124.049 101.996 124.351 101.871 124.574 101.648 cv
124.796 101.425 124.922 101.123 124.922 100.808 cv
124.922 100.493 124.796 100.191 124.574 99.9683 cv
124.351 99.7456 124.049 99.6196 123.734 99.6196 cv
123.419 99.6196 123.117 99.7456 122.894 99.9683 cv
122.671 100.191 122.546 100.493 122.546 100.808 cv
122.546 101.123 122.671 101.425 122.894 101.648 cv
123.117 101.871 123.419 101.996 123.734 101.996 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
127.285 98.4468 mo
130.723 98.4468 li
130.723 95.0083 li
127.285 95.0083 li
127.285 98.4468 li
cp
clp
129.004 97.9155 mo
129.319 97.9155 129.621 97.7905 129.844 97.5679 cv
130.066 97.3452 130.192 97.0425 130.192 96.728 cv
130.192 96.4126 130.066 96.1108 129.844 95.8882 cv
129.621 95.6655 129.319 95.5405 129.004 95.5405 cv
128.689 95.5405 128.386 95.6655 128.164 95.8882 cv
127.941 96.1108 127.816 96.4126 127.816 96.728 cv
127.816 97.0425 127.941 97.3452 128.164 97.5679 cv
128.386 97.7905 128.689 97.9155 129.004 97.9155 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
129.004 97.9155 mo
129.319 97.9155 129.621 97.7905 129.844 97.5679 cv
130.066 97.3452 130.192 97.0425 130.192 96.728 cv
130.192 96.4126 130.066 96.1108 129.844 95.8882 cv
129.621 95.6655 129.319 95.5405 129.004 95.5405 cv
128.689 95.5405 128.386 95.6655 128.164 95.8882 cv
127.941 96.1108 127.816 96.4126 127.816 96.728 cv
127.816 97.0425 127.941 97.3452 128.164 97.5679 cv
128.386 97.7905 128.689 97.9155 129.004 97.9155 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
132.555 94.3667 mo
135.994 94.3667 li
135.994 90.9292 li
132.555 90.9292 li
132.555 94.3667 li
cp
clp
134.274 93.8354 mo
134.589 93.8354 134.891 93.7104 135.114 93.4878 cv
135.336 93.2651 135.462 92.9624 135.462 92.6479 cv
135.462 92.3325 135.336 92.0308 135.114 91.8081 cv
134.891 91.5854 134.589 91.4604 134.274 91.4604 cv
133.959 91.4604 133.657 91.5854 133.434 91.8081 cv
133.211 92.0308 133.086 92.3325 133.086 92.6479 cv
133.086 92.9624 133.211 93.2651 133.434 93.4878 cv
133.657 93.7104 133.959 93.8354 134.274 93.8354 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
134.274 93.8354 mo
134.589 93.8354 134.891 93.7104 135.114 93.4878 cv
135.336 93.2651 135.462 92.9624 135.462 92.6479 cv
135.462 92.3325 135.336 92.0308 135.114 91.8081 cv
134.891 91.5854 134.589 91.4604 134.274 91.4604 cv
133.959 91.4604 133.657 91.5854 133.434 91.8081 cv
133.211 92.0308 133.086 92.3325 133.086 92.6479 cv
133.086 92.9624 133.211 93.2651 133.434 93.4878 cv
133.657 93.7104 133.959 93.8354 134.274 93.8354 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
137.824 90.2866 mo
141.263 90.2866 li
141.263 86.8491 li
137.824 86.8491 li
137.824 90.2866 li
cp
clp
139.544 89.7554 mo
139.859 89.7554 140.161 89.6304 140.384 89.4077 cv
140.606 89.1851 140.732 88.8823 140.732 88.5679 cv
140.732 88.2534 140.606 87.9507 140.384 87.728 cv
140.161 87.5054 139.859 87.3804 139.544 87.3804 cv
139.229 87.3804 138.927 87.5054 138.704 87.728 cv
138.481 87.9507 138.356 88.2534 138.356 88.5679 cv
138.356 88.8823 138.481 89.1851 138.704 89.4077 cv
138.927 89.6304 139.229 89.7554 139.544 89.7554 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
139.544 89.7554 mo
139.859 89.7554 140.161 89.6304 140.384 89.4077 cv
140.606 89.1851 140.732 88.8823 140.732 88.5679 cv
140.732 88.2534 140.606 87.9507 140.384 87.728 cv
140.161 87.5054 139.859 87.3804 139.544 87.3804 cv
139.229 87.3804 138.927 87.5054 138.704 87.728 cv
138.481 87.9507 138.356 88.2534 138.356 88.5679 cv
138.356 88.8823 138.481 89.1851 138.704 89.4077 cv
138.927 89.6304 139.229 89.7554 139.544 89.7554 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
143.094 86.2065 mo
146.533 86.2065 li
146.533 82.769 li
143.094 82.769 li
143.094 86.2065 li
cp
clp
144.814 85.6753 mo
145.129 85.6753 145.431 85.5503 145.654 85.3276 cv
145.876 85.105 146.001 84.8022 146.001 84.4878 cv
146.001 84.1733 145.876 83.8706 145.654 83.6479 cv
145.431 83.4253 145.129 83.3003 144.814 83.3003 cv
144.499 83.3003 144.197 83.4253 143.974 83.6479 cv
143.751 83.8706 143.626 84.1733 143.626 84.4878 cv
143.626 84.8022 143.751 85.105 143.974 85.3276 cv
144.197 85.5503 144.499 85.6753 144.814 85.6753 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
144.814 85.6753 mo
145.129 85.6753 145.431 85.5503 145.654 85.3276 cv
145.876 85.105 146.001 84.8022 146.001 84.4878 cv
146.001 84.1733 145.876 83.8706 145.654 83.6479 cv
145.431 83.4253 145.129 83.3003 144.814 83.3003 cv
144.499 83.3003 144.197 83.4253 143.974 83.6479 cv
143.751 83.8706 143.626 84.1733 143.626 84.4878 cv
143.626 84.8022 143.751 85.105 143.974 85.3276 cv
144.197 85.5503 144.499 85.6753 144.814 85.6753 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
148.365 82.1265 mo
151.803 82.1265 li
151.803 78.689 li
148.365 78.689 li
148.365 82.1265 li
cp
clp
150.083 81.5952 mo
150.399 81.5952 150.702 81.4702 150.924 81.2476 cv
151.147 81.0249 151.272 80.7222 151.272 80.4077 cv
151.272 80.0933 151.147 79.7905 150.924 79.5679 cv
150.702 79.3452 150.399 79.2202 150.083 79.2202 cv
149.769 79.2202 149.466 79.3452 149.244 79.5679 cv
149.021 79.7905 148.896 80.0933 148.896 80.4077 cv
148.896 80.7222 149.021 81.0249 149.244 81.2476 cv
149.466 81.4702 149.769 81.5952 150.083 81.5952 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
150.083 81.5952 mo
150.399 81.5952 150.702 81.4702 150.924 81.2476 cv
151.147 81.0249 151.272 80.7222 151.272 80.4077 cv
151.272 80.0933 151.147 79.7905 150.924 79.5679 cv
150.702 79.3452 150.399 79.2202 150.083 79.2202 cv
149.769 79.2202 149.466 79.3452 149.244 79.5679 cv
149.021 79.7905 148.896 80.0933 148.896 80.4077 cv
148.896 80.7222 149.021 81.0249 149.244 81.2476 cv
149.466 81.4702 149.769 81.5952 150.083 81.5952 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
153.635 78.0469 mo
157.074 78.0469 li
157.074 74.6084 li
153.635 74.6084 li
153.635 78.0469 li
cp
clp
155.354 77.5156 mo
155.668 77.5156 155.971 77.3901 156.194 77.168 cv
156.417 76.9453 156.542 76.6426 156.542 76.3276 cv
156.542 76.0127 156.417 75.7104 156.194 75.4878 cv
155.971 75.2646 155.668 75.1396 155.354 75.1396 cv
155.039 75.1396 154.737 75.2646 154.514 75.4878 cv
154.292 75.7104 154.166 76.0127 154.166 76.3276 cv
154.166 76.6426 154.292 76.9453 154.514 77.168 cv
154.737 77.3901 155.039 77.5156 155.354 77.5156 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
155.354 77.5156 mo
155.668 77.5156 155.971 77.3901 156.194 77.168 cv
156.417 76.9453 156.542 76.6426 156.542 76.3276 cv
156.542 76.0127 156.417 75.7104 156.194 75.4878 cv
155.971 75.2646 155.668 75.1396 155.354 75.1396 cv
155.039 75.1396 154.737 75.2646 154.514 75.4878 cv
154.292 75.7104 154.166 76.0127 154.166 76.3276 cv
154.166 76.6426 154.292 76.9453 154.514 77.168 cv
154.737 77.3901 155.039 77.5156 155.354 77.5156 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
158.905 73.9668 mo
162.343 73.9668 li
162.343 70.5283 li
158.905 70.5283 li
158.905 73.9668 li
cp
clp
160.624 73.4355 mo
160.939 73.4355 161.241 73.3105 161.463 73.0874 cv
161.687 72.8652 161.812 72.5625 161.812 72.2476 cv
161.812 71.9326 161.687 71.6304 161.463 71.4077 cv
161.241 71.1851 160.939 71.0596 160.624 71.0596 cv
160.309 71.0596 160.007 71.1851 159.784 71.4077 cv
159.561 71.6304 159.436 71.9326 159.436 72.2476 cv
159.436 72.5625 159.561 72.8652 159.784 73.0874 cv
160.007 73.3105 160.309 73.4355 160.624 73.4355 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
160.624 73.4355 mo
160.939 73.4355 161.241 73.3105 161.463 73.0874 cv
161.687 72.8652 161.812 72.5625 161.812 72.2476 cv
161.812 71.9326 161.687 71.6304 161.463 71.4077 cv
161.241 71.1851 160.939 71.0596 160.624 71.0596 cv
160.309 71.0596 160.007 71.1851 159.784 71.4077 cv
159.561 71.6304 159.436 71.9326 159.436 72.2476 cv
159.436 72.5625 159.561 72.8652 159.784 73.0874 cv
160.007 73.3105 160.309 73.4355 160.624 73.4355 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
164.174 139.247 mo
167.613 139.247 li
167.613 135.808 li
164.174 135.808 li
164.174 139.247 li
cp
clp
165.894 138.716 mo
166.209 138.716 166.511 138.591 166.734 138.368 cv
166.957 138.146 167.082 137.843 167.082 137.528 cv
167.082 137.212 166.957 136.911 166.734 136.687 cv
166.511 136.466 166.209 136.339 165.894 136.339 cv
165.579 136.339 165.277 136.466 165.054 136.687 cv
164.832 136.911 164.707 137.212 164.707 137.528 cv
164.707 137.843 164.832 138.146 165.054 138.368 cv
165.277 138.591 165.579 138.716 165.894 138.716 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
165.894 138.716 mo
166.209 138.716 166.511 138.591 166.734 138.368 cv
166.957 138.146 167.082 137.843 167.082 137.528 cv
167.082 137.212 166.957 136.911 166.734 136.687 cv
166.511 136.466 166.209 136.339 165.894 136.339 cv
165.579 136.339 165.277 136.466 165.054 136.687 cv
164.832 136.911 164.707 137.212 164.707 137.528 cv
164.707 137.843 164.832 138.146 165.054 138.368 cv
165.277 138.591 165.579 138.716 165.894 138.716 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
164.174 69.8867 mo
167.613 69.8867 li
167.613 66.4482 li
164.174 66.4482 li
164.174 69.8867 li
cp
clp
165.894 69.3555 mo
166.209 69.3555 166.511 69.2305 166.734 69.0078 cv
166.957 68.7852 167.082 68.4829 167.082 68.168 cv
167.082 67.8525 166.957 67.5508 166.734 67.3281 cv
166.511 67.105 166.209 66.98 165.894 66.98 cv
165.579 66.98 165.277 67.105 165.054 67.3281 cv
164.832 67.5508 164.707 67.8525 164.707 68.168 cv
164.707 68.4829 164.832 68.7852 165.054 69.0078 cv
165.277 69.2305 165.579 69.3555 165.894 69.3555 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
165.894 69.3555 mo
166.209 69.3555 166.511 69.2305 166.734 69.0078 cv
166.957 68.7852 167.082 68.4829 167.082 68.168 cv
167.082 67.8525 166.957 67.5508 166.734 67.3281 cv
166.511 67.105 166.209 66.98 165.894 66.98 cv
165.579 66.98 165.277 67.105 165.054 67.3281 cv
164.832 67.5508 164.707 67.8525 164.707 68.168 cv
164.707 68.4829 164.832 68.7852 165.054 69.0078 cv
165.277 69.2305 165.579 69.3555 165.894 69.3555 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
169.445 135.167 mo
172.883 135.167 li
172.883 131.728 li
169.445 131.728 li
169.445 135.167 li
cp
clp
171.164 134.636 mo
171.479 134.636 171.781 134.511 172.004 134.288 cv
172.227 134.065 172.352 133.763 172.352 133.448 cv
172.352 133.132 172.227 132.831 172.004 132.608 cv
171.781 132.386 171.479 132.259 171.164 132.259 cv
170.849 132.259 170.547 132.386 170.324 132.608 cv
170.101 132.831 169.976 133.132 169.976 133.448 cv
169.976 133.763 170.101 134.065 170.324 134.288 cv
170.547 134.511 170.849 134.636 171.164 134.636 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
171.164 134.636 mo
171.479 134.636 171.781 134.511 172.004 134.288 cv
172.227 134.065 172.352 133.763 172.352 133.448 cv
172.352 133.132 172.227 132.831 172.004 132.608 cv
171.781 132.386 171.479 132.259 171.164 132.259 cv
170.849 132.259 170.547 132.386 170.324 132.608 cv
170.101 132.831 169.976 133.132 169.976 133.448 cv
169.976 133.763 170.101 134.065 170.324 134.288 cv
170.547 134.511 170.849 134.636 171.164 134.636 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
169.445 65.8066 mo
172.883 65.8066 li
172.883 62.3687 li
169.445 62.3687 li
169.445 65.8066 li
cp
clp
171.164 65.2754 mo
171.479 65.2754 171.781 65.1504 172.004 64.9277 cv
172.227 64.7051 172.352 64.4028 172.352 64.0879 cv
172.352 63.7725 172.227 63.4707 172.004 63.248 cv
171.781 63.0254 171.479 62.8999 171.164 62.8999 cv
170.849 62.8999 170.547 63.0254 170.324 63.248 cv
170.101 63.4707 169.976 63.7725 169.976 64.0879 cv
169.976 64.4028 170.101 64.7051 170.324 64.9277 cv
170.547 65.1504 170.849 65.2754 171.164 65.2754 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
171.164 65.2754 mo
171.479 65.2754 171.781 65.1504 172.004 64.9277 cv
172.227 64.7051 172.352 64.4028 172.352 64.0879 cv
172.352 63.7725 172.227 63.4707 172.004 63.248 cv
171.781 63.0254 171.479 62.8999 171.164 62.8999 cv
170.849 62.8999 170.547 63.0254 170.324 63.248 cv
170.101 63.4707 169.976 63.7725 169.976 64.0879 cv
169.976 64.4028 170.101 64.7051 170.324 64.9277 cv
170.547 65.1504 170.849 65.2754 171.164 65.2754 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
174.714 131.087 mo
178.153 131.087 li
178.153 127.647 li
174.714 127.647 li
174.714 131.087 li
cp
clp
176.434 130.556 mo
176.75 130.556 177.051 130.431 177.274 130.208 cv
177.497 129.985 177.622 129.683 177.622 129.368 cv
177.622 129.052 177.497 128.751 177.274 128.528 cv
177.051 128.304 176.75 128.179 176.434 128.179 cv
176.119 128.179 175.817 128.304 175.594 128.528 cv
175.372 128.751 175.247 129.052 175.247 129.368 cv
175.247 129.683 175.372 129.985 175.594 130.208 cv
175.817 130.431 176.119 130.556 176.434 130.556 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
176.434 130.556 mo
176.75 130.556 177.051 130.431 177.274 130.208 cv
177.497 129.985 177.622 129.683 177.622 129.368 cv
177.622 129.052 177.497 128.751 177.274 128.528 cv
177.051 128.304 176.75 128.179 176.434 128.179 cv
176.119 128.179 175.817 128.304 175.594 128.528 cv
175.372 128.751 175.247 129.052 175.247 129.368 cv
175.247 129.683 175.372 129.985 175.594 130.208 cv
175.817 130.431 176.119 130.556 176.434 130.556 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
174.714 61.7266 mo
178.153 61.7266 li
178.153 58.2886 li
174.714 58.2886 li
174.714 61.7266 li
cp
clp
176.434 61.1953 mo
176.75 61.1953 177.051 61.0708 177.274 60.8477 cv
177.497 60.625 177.622 60.3228 177.622 60.0078 cv
177.622 59.6924 177.497 59.3906 177.274 59.168 cv
177.051 58.9453 176.75 58.8198 176.434 58.8198 cv
176.119 58.8198 175.817 58.9453 175.594 59.168 cv
175.372 59.3906 175.247 59.6924 175.247 60.0078 cv
175.247 60.3228 175.372 60.625 175.594 60.8477 cv
175.817 61.0708 176.119 61.1953 176.434 61.1953 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
176.434 61.1953 mo
176.75 61.1953 177.051 61.0708 177.274 60.8477 cv
177.497 60.625 177.622 60.3228 177.622 60.0078 cv
177.622 59.6924 177.497 59.3906 177.274 59.168 cv
177.051 58.9453 176.75 58.8198 176.434 58.8198 cv
176.119 58.8198 175.817 58.9453 175.594 59.168 cv
175.372 59.3906 175.247 59.6924 175.247 60.0078 cv
175.247 60.3228 175.372 60.625 175.594 60.8477 cv
175.817 61.0708 176.119 61.1953 176.434 61.1953 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
179.985 57.6465 mo
183.423 57.6465 li
183.423 54.2085 li
179.985 54.2085 li
179.985 57.6465 li
cp
clp
181.705 57.1157 mo
182.019 57.1157 182.321 56.9902 182.544 56.7676 cv
182.767 56.5449 182.891 56.2427 182.891 55.9277 cv
182.891 55.6128 182.767 55.3105 182.544 55.0879 cv
182.321 54.8647 182.019 54.7402 181.705 54.7402 cv
181.388 54.7402 181.086 54.8647 180.864 55.0879 cv
180.641 55.3105 180.516 55.6128 180.516 55.9277 cv
180.516 56.2427 180.641 56.5449 180.864 56.7676 cv
181.086 56.9902 181.388 57.1157 181.705 57.1157 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
181.705 57.1157 mo
182.019 57.1157 182.321 56.9902 182.544 56.7676 cv
182.767 56.5449 182.891 56.2427 182.891 55.9277 cv
182.891 55.6128 182.767 55.3105 182.544 55.0879 cv
182.321 54.8647 182.019 54.7402 181.705 54.7402 cv
181.388 54.7402 181.086 54.8647 180.864 55.0879 cv
180.641 55.3105 180.516 55.6128 180.516 55.9277 cv
180.516 56.2427 180.641 56.5449 180.864 56.7676 cv
181.086 56.9902 181.388 57.1157 181.705 57.1157 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
185.254 53.5669 mo
188.693 53.5669 li
188.693 50.1279 li
185.254 50.1279 li
185.254 53.5669 li
cp
clp
186.974 53.0356 mo
187.29 53.0356 187.591 52.9106 187.814 52.6875 cv
188.037 52.4648 188.162 52.1626 188.162 51.8477 cv
188.162 51.5327 188.037 51.2305 187.814 51.0078 cv
187.591 50.7852 187.29 50.6597 186.974 50.6597 cv
186.659 50.6597 186.357 50.7852 186.134 51.0078 cv
185.911 51.2305 185.787 51.5327 185.787 51.8477 cv
185.787 52.1626 185.911 52.4648 186.134 52.6875 cv
186.357 52.9106 186.659 53.0356 186.974 53.0356 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
186.974 53.0356 mo
187.29 53.0356 187.591 52.9106 187.814 52.6875 cv
188.037 52.4648 188.162 52.1626 188.162 51.8477 cv
188.162 51.5327 188.037 51.2305 187.814 51.0078 cv
187.591 50.7852 187.29 50.6597 186.974 50.6597 cv
186.659 50.6597 186.357 50.7852 186.134 51.0078 cv
185.911 51.2305 185.787 51.5327 185.787 51.8477 cv
185.787 52.1626 185.911 52.4648 186.134 52.6875 cv
186.357 52.9106 186.659 53.0356 186.974 53.0356 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
190.525 49.4868 mo
193.963 49.4868 li
193.963 46.0483 li
190.525 46.0483 li
190.525 49.4868 li
cp
clp
192.245 48.9556 mo
192.559 48.9556 192.861 48.8306 193.084 48.6074 cv
193.307 48.3848 193.432 48.0825 193.432 47.7676 cv
193.432 47.4526 193.307 47.1509 193.084 46.9277 cv
192.861 46.7051 192.559 46.5796 192.245 46.5796 cv
191.929 46.5796 191.626 46.7051 191.404 46.9277 cv
191.181 47.1509 191.056 47.4526 191.056 47.7676 cv
191.056 48.0825 191.181 48.3848 191.404 48.6074 cv
191.626 48.8306 191.929 48.9556 192.245 48.9556 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
192.245 48.9556 mo
192.559 48.9556 192.861 48.8306 193.084 48.6074 cv
193.307 48.3848 193.432 48.0825 193.432 47.7676 cv
193.432 47.4526 193.307 47.1509 193.084 46.9277 cv
192.861 46.7051 192.559 46.5796 192.245 46.5796 cv
191.929 46.5796 191.626 46.7051 191.404 46.9277 cv
191.181 47.1509 191.056 47.4526 191.056 47.7676 cv
191.056 48.0825 191.181 48.3848 191.404 48.6074 cv
191.626 48.8306 191.929 48.9556 192.245 48.9556 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
195.794 118.847 mo
199.234 118.847 li
199.234 115.409 li
195.794 115.409 li
195.794 118.847 li
cp
clp
197.514 118.316 mo
197.829 118.316 198.131 118.191 198.354 117.968 cv
198.577 117.746 198.702 117.443 198.702 117.128 cv
198.702 116.813 198.577 116.511 198.354 116.289 cv
198.131 116.065 197.829 115.939 197.514 115.939 cv
197.199 115.939 196.897 116.065 196.674 116.289 cv
196.451 116.511 196.327 116.813 196.327 117.128 cv
196.327 117.443 196.451 117.746 196.674 117.968 cv
196.897 118.191 197.199 118.316 197.514 118.316 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
197.514 118.316 mo
197.829 118.316 198.131 118.191 198.354 117.968 cv
198.577 117.746 198.702 117.443 198.702 117.128 cv
198.702 116.813 198.577 116.511 198.354 116.289 cv
198.131 116.065 197.829 115.939 197.514 115.939 cv
197.199 115.939 196.897 116.065 196.674 116.289 cv
196.451 116.511 196.327 116.813 196.327 117.128 cv
196.327 117.443 196.451 117.746 196.674 117.968 cv
196.897 118.191 197.199 118.316 197.514 118.316 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
195.794 45.4067 mo
199.234 45.4067 li
199.234 41.9688 li
195.794 41.9688 li
195.794 45.4067 li
cp
clp
197.514 44.8755 mo
197.829 44.8755 198.131 44.7505 198.354 44.5278 cv
198.577 44.3052 198.702 44.0029 198.702 43.688 cv
198.702 43.3726 198.577 43.0703 198.354 42.8477 cv
198.131 42.625 197.829 42.5 197.514 42.5 cv
197.199 42.5 196.897 42.625 196.674 42.8477 cv
196.451 43.0703 196.327 43.3726 196.327 43.688 cv
196.327 44.0029 196.451 44.3052 196.674 44.5278 cv
196.897 44.7505 197.199 44.8755 197.514 44.8755 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
197.514 44.8755 mo
197.829 44.8755 198.131 44.7505 198.354 44.5278 cv
198.577 44.3052 198.702 44.0029 198.702 43.688 cv
198.702 43.3726 198.577 43.0703 198.354 42.8477 cv
198.131 42.625 197.829 42.5 197.514 42.5 cv
197.199 42.5 196.897 42.625 196.674 42.8477 cv
196.451 43.0703 196.327 43.3726 196.327 43.688 cv
196.327 44.0029 196.451 44.3052 196.674 44.5278 cv
196.897 44.7505 197.199 44.8755 197.514 44.8755 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
206.334 102.527 mo
209.774 102.527 li
209.774 99.0894 li
206.334 99.0894 li
206.334 102.527 li
cp
clp
208.054 101.996 mo
208.369 101.996 208.671 101.871 208.894 101.648 cv
209.117 101.425 209.242 101.123 209.242 100.808 cv
209.242 100.493 209.117 100.191 208.894 99.9683 cv
208.671 99.7456 208.369 99.6196 208.054 99.6196 cv
207.739 99.6196 207.437 99.7456 207.214 99.9683 cv
206.992 100.191 206.866 100.493 206.866 100.808 cv
206.866 101.123 206.992 101.425 207.214 101.648 cv
207.437 101.871 207.739 101.996 208.054 101.996 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
208.054 101.996 mo
208.369 101.996 208.671 101.871 208.894 101.648 cv
209.117 101.425 209.242 101.123 209.242 100.808 cv
209.242 100.493 209.117 100.191 208.894 99.9683 cv
208.671 99.7456 208.369 99.6196 208.054 99.6196 cv
207.739 99.6196 207.437 99.7456 207.214 99.9683 cv
206.992 100.191 206.866 100.493 206.866 100.808 cv
206.866 101.123 206.992 101.425 207.214 101.648 cv
207.437 101.871 207.739 101.996 208.054 101.996 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
216.875 159.647 mo
220.313 159.647 li
220.313 156.208 li
216.875 156.208 li
216.875 159.647 li
cp
clp
218.594 159.116 mo
218.909 159.116 219.211 158.991 219.434 158.767 cv
219.657 158.544 219.782 158.241 219.782 157.927 cv
219.782 157.612 219.657 157.31 219.434 157.087 cv
219.211 156.864 218.909 156.739 218.594 156.739 cv
218.279 156.739 217.977 156.864 217.754 157.087 cv
217.532 157.31 217.407 157.612 217.407 157.927 cv
217.407 158.241 217.532 158.544 217.754 158.767 cv
217.977 158.991 218.279 159.116 218.594 159.116 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
218.594 159.116 mo
218.909 159.116 219.211 158.991 219.434 158.767 cv
219.657 158.544 219.782 158.241 219.782 157.927 cv
219.782 157.612 219.657 157.31 219.434 157.087 cv
219.211 156.864 218.909 156.739 218.594 156.739 cv
218.279 156.739 217.977 156.864 217.754 157.087 cv
217.532 157.31 217.407 157.612 217.407 157.927 cv
217.407 158.241 217.532 158.544 217.754 158.767 cv
217.977 158.991 218.279 159.116 218.594 159.116 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
222.145 155.567 mo
225.583 155.567 li
225.583 152.128 li
222.145 152.128 li
222.145 155.567 li
cp
clp
223.864 155.036 mo
224.179 155.036 224.481 154.911 224.704 154.688 cv
224.927 154.466 225.051 154.163 225.051 153.849 cv
225.051 153.532 224.927 153.229 224.704 153.009 cv
224.481 152.784 224.179 152.659 223.864 152.659 cv
223.549 152.659 223.247 152.784 223.024 153.009 cv
222.801 153.229 222.676 153.532 222.676 153.849 cv
222.676 154.163 222.801 154.466 223.024 154.688 cv
223.247 154.911 223.549 155.036 223.864 155.036 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
223.864 155.036 mo
224.179 155.036 224.481 154.911 224.704 154.688 cv
224.927 154.466 225.051 154.163 225.051 153.849 cv
225.051 153.532 224.927 153.229 224.704 153.009 cv
224.481 152.784 224.179 152.659 223.864 152.659 cv
223.549 152.659 223.247 152.784 223.024 153.009 cv
222.801 153.229 222.676 153.532 222.676 153.849 cv
222.676 154.163 222.801 154.466 223.024 154.688 cv
223.247 154.911 223.549 155.036 223.864 155.036 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
227.416 151.487 mo
230.854 151.487 li
230.854 148.048 li
227.416 148.048 li
227.416 151.487 li
cp
clp
229.134 150.956 mo
229.45 150.956 229.751 150.831 229.974 150.608 cv
230.197 150.384 230.322 150.083 230.322 149.767 cv
230.322 149.452 230.197 149.151 229.974 148.927 cv
229.751 148.704 229.45 148.579 229.134 148.579 cv
228.819 148.579 228.517 148.704 228.293 148.927 cv
228.072 149.151 227.947 149.452 227.947 149.767 cv
227.947 150.083 228.072 150.384 228.293 150.608 cv
228.517 150.831 228.819 150.956 229.134 150.956 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
229.134 150.956 mo
229.45 150.956 229.751 150.831 229.974 150.608 cv
230.197 150.384 230.322 150.083 230.322 149.767 cv
230.322 149.452 230.197 149.151 229.974 148.927 cv
229.751 148.704 229.45 148.579 229.134 148.579 cv
228.819 148.579 228.517 148.704 228.293 148.927 cv
228.072 149.151 227.947 149.452 227.947 149.767 cv
227.947 150.083 228.072 150.384 228.293 150.608 cv
228.517 150.831 228.819 150.956 229.134 150.956 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
227.416 25.0073 mo
230.854 25.0073 li
230.854 21.5684 li
227.416 21.5684 li
227.416 25.0073 li
cp
clp
229.134 24.4756 mo
229.45 24.4756 229.751 24.3506 229.974 24.1279 cv
230.197 23.9048 230.322 23.603 230.322 23.2881 cv
230.322 22.9727 230.197 22.6704 229.974 22.4478 cv
229.751 22.2246 229.45 22.1001 229.134 22.1001 cv
228.819 22.1001 228.517 22.2246 228.293 22.4478 cv
228.072 22.6704 227.947 22.9727 227.947 23.2881 cv
227.947 23.603 228.072 23.9048 228.293 24.1279 cv
228.517 24.3506 228.819 24.4756 229.134 24.4756 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
229.134 24.4756 mo
229.45 24.4756 229.751 24.3506 229.974 24.1279 cv
230.197 23.9048 230.322 23.603 230.322 23.2881 cv
230.322 22.9727 230.197 22.6704 229.974 22.4478 cv
229.751 22.2246 229.45 22.1001 229.134 22.1001 cv
228.819 22.1001 228.517 22.2246 228.293 22.4478 cv
228.072 22.6704 227.947 22.9727 227.947 23.2881 cv
227.947 23.603 228.072 23.9048 228.293 24.1279 cv
228.517 24.3506 228.819 24.4756 229.134 24.4756 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
232.685 20.9268 mo
236.124 20.9268 li
236.124 17.4883 li
232.685 17.4883 li
232.685 20.9268 li
cp
clp
234.405 20.3955 mo
234.719 20.3955 235.021 20.2705 235.245 20.0479 cv
235.467 19.8252 235.591 19.5229 235.591 19.208 cv
235.591 18.8926 235.467 18.5903 235.245 18.3677 cv
235.021 18.1455 234.719 18.02 234.405 18.02 cv
234.088 18.02 233.787 18.1455 233.564 18.3677 cv
233.341 18.5903 233.216 18.8926 233.216 19.208 cv
233.216 19.5229 233.341 19.8252 233.564 20.0479 cv
233.787 20.2705 234.088 20.3955 234.405 20.3955 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
234.405 20.3955 mo
234.719 20.3955 235.021 20.2705 235.245 20.0479 cv
235.467 19.8252 235.591 19.5229 235.591 19.208 cv
235.591 18.8926 235.467 18.5903 235.245 18.3677 cv
235.021 18.1455 234.719 18.02 234.405 18.02 cv
234.088 18.02 233.787 18.1455 233.564 18.3677 cv
233.341 18.5903 233.216 18.8926 233.216 19.208 cv
233.216 19.5229 233.341 19.8252 233.564 20.0479 cv
233.787 20.2705 234.088 20.3955 234.405 20.3955 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
237.955 16.8467 mo
241.393 16.8467 li
241.393 13.4082 li
237.955 13.4082 li
237.955 16.8467 li
cp
clp
239.674 16.3154 mo
239.989 16.3154 240.292 16.1909 240.514 15.9678 cv
240.737 15.7451 240.862 15.4429 240.862 15.1279 cv
240.862 14.8125 240.737 14.5103 240.514 14.2876 cv
240.292 14.0654 239.989 13.9399 239.674 13.9399 cv
239.359 13.9399 239.057 14.0654 238.833 14.2876 cv
238.611 14.5103 238.487 14.8125 238.487 15.1279 cv
238.487 15.4429 238.611 15.7451 238.833 15.9678 cv
239.057 16.1909 239.359 16.3154 239.674 16.3154 cv
.884 .769 0 0 cmyk
f
.53125 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
239.674 16.3154 mo
239.989 16.3154 240.292 16.1909 240.514 15.9678 cv
240.737 15.7451 240.862 15.4429 240.862 15.1279 cv
240.862 14.8125 240.737 14.5103 240.514 14.2876 cv
240.292 14.0654 239.989 13.9399 239.674 13.9399 cv
239.359 13.9399 239.057 14.0654 238.833 14.2876 cv
238.611 14.5103 238.487 14.8125 238.487 15.1279 cv
238.487 15.4429 238.611 15.7451 238.833 15.9678 cv
239.057 16.1909 239.359 16.3154 239.674 16.3154 cv
cp
0 0 0 1 cmyk
@
grestore
18.334 186.487 mo
18.334 184.362 li
18.334 186.487 li
cp
0 0 0 1 cmyk
f
.265625 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.334 186.487 mo
18.334 184.362 li
@
18.334 5.0127 mo
18.334 2.8877 li
18.334 5.0127 li
cp
f
18.334 2.8877 mo
18.334 5.0127 li
@
18.7549 189.228 mo
18.4297 189.228 18.1875 189.386 18.022 189.706 cv
17.856 190.024 17.7798 190.503 17.7798 191.14 cv
17.7798 191.776 17.856 192.255 18.022 192.573 cv
18.1875 192.894 18.4297 193.052 18.7549 193.052 cv
19.0801 193.052 19.3223 192.894 19.4883 192.573 cv
19.6475 192.255 19.7305 191.776 19.7305 191.14 cv
19.7305 190.503 19.6475 190.024 19.4883 189.706 cv
19.3223 189.386 19.0801 189.228 18.7549 189.228 cv
18.7549 188.729 mo
19.2715 188.729 19.6665 188.94 19.9473 189.349 cv
20.2212 189.763 20.3613 190.362 20.3613 191.14 cv
20.3613 191.923 20.2212 192.522 19.9473 192.931 cv
19.6665 193.339 19.2715 193.542 18.7549 193.542 cv
18.2324 193.542 17.8306 193.339 17.5566 192.931 cv
17.2822 192.522 17.1484 191.923 17.1484 191.14 cv
17.1484 190.362 17.2822 189.763 17.5566 189.349 cv
17.8306 188.94 18.2324 188.729 18.7549 188.729 cv
f
44.6841 186.487 mo
44.6841 184.362 li
f
44.6841 186.487 mo
44.6841 184.362 li
@
44.6841 2.8877 mo
44.6841 5.0127 li
f
44.6841 2.8877 mo
44.6841 5.0127 li
@
43.8657 188.813 mo
46.333 188.813 li
46.333 189.341 li
44.4395 189.341 li
44.4395 190.483 li
44.5288 190.45 44.6245 190.425 44.7139 190.413 cv
44.8032 190.399 44.8984 190.388 44.9878 190.388 cv
45.5044 190.388 45.9121 190.534 46.2183 190.815 cv
46.5244 191.103 46.6772 191.483 46.6772 191.968 cv
46.6772 192.472 46.5181 192.86 46.2056 193.136 cv
45.8931 193.409 45.4531 193.542 44.8921 193.542 cv
44.6948 193.542 44.4971 193.524 44.293 193.499 cv
44.0889 193.466 43.8848 193.421 43.6685 193.351 cv
43.6685 192.72 li
43.853 192.823 44.0444 192.899 44.2485 192.95 cv
44.4458 193.001 44.6563 193.021 44.8794 193.021 cv
45.2363 193.021 45.5234 192.931 45.7339 192.739 cv
45.9375 192.548 46.0459 192.294 46.0459 191.968 cv
46.0459 191.649 45.9375 191.394 45.7339 191.204 cv
45.5234 191.013 45.2363 190.917 44.8794 190.917 cv
44.7139 190.917 44.5415 190.935 44.376 190.974 cv
44.21 191.013 44.0381 191.069 43.8657 191.146 cv
43.8657 188.813 li
f
71.0342 186.487 mo
71.0342 184.362 li
f
71.0342 186.487 mo
71.0342 184.362 li
@
71.0342 2.8877 mo
71.0342 5.0127 li
f
71.0342 2.8877 mo
71.0342 5.0127 li
@
68.3257 192.931 mo
69.3521 192.931 li
69.3521 189.386 li
68.2363 189.608 li
68.2363 189.036 li
69.3457 188.812 li
69.9766 188.812 li
69.9766 192.931 li
71.0029 192.931 li
71.0029 193.46 li
68.3257 193.46 li
68.3257 192.931 li
cp
f
73.6167 189.228 mo
73.2915 189.228 73.0493 189.386 72.8838 189.706 cv
72.7178 190.024 72.6416 190.503 72.6416 191.14 cv
72.6416 191.776 72.7178 192.255 72.8838 192.573 cv
73.0493 192.894 73.2915 193.052 73.6167 193.052 cv
73.9419 193.052 74.1841 192.894 74.3501 192.573 cv
74.5093 192.255 74.5923 191.776 74.5923 191.14 cv
74.5923 190.503 74.5093 190.024 74.3501 189.706 cv
74.1841 189.386 73.9419 189.228 73.6167 189.228 cv
73.6167 188.729 mo
74.1333 188.729 74.5283 188.94 74.8091 189.349 cv
75.083 189.763 75.2231 190.362 75.2231 191.14 cv
75.2231 191.923 75.083 192.522 74.8091 192.931 cv
74.5283 193.339 74.1333 193.542 73.6167 193.542 cv
73.0942 193.542 72.6924 193.339 72.4185 192.931 cv
72.144 192.522 72.0103 191.923 72.0103 191.14 cv
72.0103 190.362 72.144 189.763 72.4185 189.349 cv
72.6924 188.94 73.0942 188.729 73.6167 188.729 cv
f
97.3838 186.487 mo
97.3838 184.362 li
f
97.3838 186.487 mo
97.3838 184.362 li
@
97.3838 2.8877 mo
97.3838 5.0127 li
f
97.3838 2.8877 mo
97.3838 5.0127 li
@
94.7422 192.931 mo
95.7686 192.931 li
95.7686 189.386 li
94.6528 189.608 li
94.6528 189.036 li
95.7622 188.812 li
96.3931 188.812 li
96.3931 192.931 li
97.4194 192.931 li
97.4194 193.46 li
94.7422 193.46 li
94.7422 192.931 li
cp
f
98.6948 188.813 mo
101.162 188.813 li
101.162 189.341 li
99.2681 189.341 li
99.2681 190.483 li
99.3574 190.45 99.4531 190.425 99.5425 190.413 cv
99.6318 190.399 99.7275 190.388 99.8164 190.388 cv
100.333 190.388 100.741 190.534 101.047 190.815 cv
101.353 191.103 101.506 191.483 101.506 191.968 cv
101.506 192.472 101.347 192.86 101.034 193.136 cv
100.722 193.409 100.282 193.542 99.7212 193.542 cv
99.5234 193.542 99.3257 193.524 99.1216 193.499 cv
98.9175 193.466 98.7139 193.421 98.4971 193.351 cv
98.4971 192.72 li
98.6816 192.823 98.873 192.899 99.0771 192.95 cv
99.2749 193.001 99.4849 193.021 99.708 193.021 cv
100.065 193.021 100.352 192.931 100.563 192.739 cv
100.767 192.548 100.875 192.294 100.875 191.968 cv
100.875 191.649 100.767 191.394 100.563 191.204 cv
100.352 191.013 100.065 190.917 99.708 190.917 cv
99.5425 190.917 99.3701 190.935 99.2046 190.974 cv
99.0386 191.013 98.8667 191.069 98.6948 191.146 cv
98.6948 188.813 li
f
123.734 186.487 mo
123.734 184.362 li
f
123.734 186.487 mo
123.734 184.362 li
@
123.734 2.8877 mo
123.734 5.0127 li
f
123.734 2.8877 mo
123.734 5.0127 li
@
121.343 192.931 mo
123.536 192.931 li
123.536 193.46 li
120.584 193.46 li
120.584 192.931 li
120.82 192.688 121.146 192.356 121.56 191.937 cv
121.968 191.522 122.229 191.255 122.337 191.134 cv
122.542 190.909 122.682 190.718 122.758 190.56 cv
122.834 190.405 122.879 190.247 122.879 190.095 cv
122.879 189.853 122.79 189.647 122.618 189.495 cv
122.446 189.341 122.223 189.259 121.942 189.259 cv
121.745 189.259 121.534 189.298 121.317 189.36 cv
121.101 189.431 120.865 189.532 120.616 189.673 cv
120.616 189.036 li
120.871 188.935 121.107 188.856 121.324 188.806 cv
121.541 188.755 121.745 188.729 121.93 188.729 cv
122.408 188.729 122.79 188.851 123.077 189.093 cv
123.364 189.335 123.51 189.653 123.51 190.056 cv
123.51 190.247 123.472 190.433 123.402 190.597 cv
123.332 190.771 123.205 190.974 123.013 191.202 cv
122.962 191.267 122.796 191.438 122.516 191.726 cv
122.235 192.013 121.847 192.415 121.343 192.931 cv
f
126.201 189.228 mo
125.875 189.228 125.633 189.386 125.468 189.706 cv
125.302 190.024 125.226 190.503 125.226 191.14 cv
125.226 191.776 125.302 192.255 125.468 192.573 cv
125.633 192.894 125.875 193.052 126.201 193.052 cv
126.526 193.052 126.768 192.894 126.934 192.573 cv
127.093 192.255 127.176 191.776 127.176 191.14 cv
127.176 190.503 127.093 190.024 126.934 189.706 cv
126.768 189.386 126.526 189.228 126.201 189.228 cv
126.201 188.729 mo
126.717 188.729 127.112 188.94 127.393 189.349 cv
127.667 189.763 127.807 190.362 127.807 191.14 cv
127.807 191.923 127.667 192.522 127.393 192.931 cv
127.112 193.339 126.717 193.542 126.201 193.542 cv
125.678 193.542 125.276 193.339 125.002 192.931 cv
124.728 192.522 124.594 191.923 124.594 191.14 cv
124.594 190.362 124.728 189.763 125.002 189.349 cv
125.276 188.94 125.678 188.729 126.201 188.729 cv
f
150.083 186.487 mo
150.083 184.362 li
f
150.083 186.487 mo
150.083 184.362 li
@
150.083 2.8877 mo
150.083 5.0127 li
f
150.083 2.8877 mo
150.083 5.0127 li
@
147.759 192.931 mo
149.952 192.931 li
149.952 193.46 li
147 193.46 li
147 192.931 li
147.237 192.688 147.561 192.356 147.976 191.937 cv
148.384 191.522 148.645 191.255 148.753 191.134 cv
148.958 190.909 149.098 190.718 149.174 190.56 cv
149.251 190.405 149.296 190.247 149.296 190.095 cv
149.296 189.853 149.207 189.647 149.034 189.495 cv
148.862 189.341 148.639 189.259 148.358 189.259 cv
148.161 189.259 147.951 189.298 147.734 189.36 cv
147.517 189.431 147.282 189.532 147.033 189.673 cv
147.033 189.036 li
147.288 188.935 147.524 188.856 147.74 188.806 cv
147.957 188.755 148.161 188.729 148.345 188.729 cv
148.824 188.729 149.207 188.851 149.494 189.093 cv
149.781 189.335 149.926 189.653 149.926 190.056 cv
149.926 190.247 149.889 190.433 149.818 190.597 cv
149.749 190.771 149.621 190.974 149.43 191.202 cv
149.378 191.267 149.212 191.438 148.932 191.726 cv
148.652 192.013 148.263 192.415 147.759 192.931 cv
f
151.278 188.813 mo
153.746 188.813 li
153.746 189.341 li
151.852 189.341 li
151.852 190.483 li
151.941 190.45 152.038 190.425 152.126 190.413 cv
152.215 190.399 152.311 190.388 152.4 190.388 cv
152.917 190.388 153.325 190.534 153.631 190.815 cv
153.936 191.103 154.089 191.483 154.089 191.968 cv
154.089 192.472 153.93 192.86 153.618 193.136 cv
153.305 193.409 152.866 193.542 152.305 193.542 cv
152.108 193.542 151.91 193.524 151.706 193.499 cv
151.501 193.466 151.297 193.421 151.081 193.351 cv
151.081 192.72 li
151.266 192.823 151.457 192.899 151.662 192.95 cv
151.858 193.001 152.069 193.021 152.292 193.021 cv
152.649 193.021 152.936 192.931 153.147 192.739 cv
153.35 192.548 153.458 192.294 153.458 191.968 cv
153.458 191.649 153.35 191.394 153.147 191.204 cv
152.936 191.013 152.649 190.917 152.292 190.917 cv
152.126 190.917 151.954 190.935 151.789 190.974 cv
151.623 191.013 151.451 191.069 151.278 191.146 cv
151.278 188.813 li
f
176.434 186.487 mo
176.434 184.362 li
f
176.434 186.487 mo
176.434 184.362 li
@
176.434 2.8877 mo
176.434 5.0127 li
f
176.434 2.8877 mo
176.434 5.0127 li
@
175.419 190.954 mo
175.719 191.019 175.956 191.151 176.121 191.356 cv
176.287 191.56 176.376 191.815 176.376 192.108 cv
176.376 192.567 176.216 192.925 175.904 193.173 cv
175.585 193.421 175.139 193.542 174.559 193.542 cv
174.362 193.542 174.157 193.524 173.954 193.485 cv
173.75 193.454 173.533 193.396 173.316 193.319 cv
173.316 192.714 li
173.488 192.815 173.679 192.894 173.889 192.944 cv
174.093 192.995 174.31 193.021 174.541 193.021 cv
174.935 193.021 175.235 192.944 175.439 192.79 cv
175.643 192.638 175.75 192.407 175.75 192.108 cv
175.75 191.841 175.656 191.624 175.464 191.472 cv
175.273 191.317 175.005 191.235 174.661 191.235 cv
174.12 191.235 li
174.12 190.72 li
174.686 190.72 li
174.993 190.72 175.229 190.661 175.394 190.534 cv
175.56 190.413 175.643 190.233 175.643 189.999 cv
175.643 189.763 175.553 189.577 175.387 189.45 cv
175.215 189.323 174.973 189.259 174.661 189.259 cv
174.489 189.259 174.304 189.278 174.106 189.315 cv
173.909 189.354 173.692 189.411 173.457 189.489 cv
173.457 188.927 li
173.692 188.864 173.915 188.813 174.125 188.78 cv
174.33 188.749 174.527 188.729 174.719 188.729 cv
175.19 188.729 175.566 188.839 175.847 189.056 cv
176.127 189.272 176.268 189.565 176.268 189.935 cv
176.268 190.19 176.191 190.407 176.044 190.585 cv
175.898 190.763 175.687 190.892 175.419 190.954 cv
f
178.913 189.228 mo
178.588 189.228 178.346 189.386 178.18 189.706 cv
178.015 190.024 177.938 190.503 177.938 191.14 cv
177.938 191.776 178.015 192.255 178.18 192.573 cv
178.346 192.894 178.588 193.052 178.913 193.052 cv
179.238 193.052 179.48 192.894 179.646 192.573 cv
179.806 192.255 179.888 191.776 179.888 191.14 cv
179.888 190.503 179.806 190.024 179.646 189.706 cv
179.48 189.386 179.238 189.228 178.913 189.228 cv
178.913 188.729 mo
179.429 188.729 179.825 188.94 180.105 189.349 cv
180.379 189.763 180.52 190.362 180.52 191.14 cv
180.52 191.923 180.379 192.522 180.105 192.931 cv
179.825 193.339 179.429 193.542 178.913 193.542 cv
178.391 193.542 177.989 193.339 177.714 192.931 cv
177.441 192.522 177.307 191.923 177.307 191.14 cv
177.307 190.362 177.441 189.763 177.714 189.349 cv
177.989 188.94 178.391 188.729 178.913 188.729 cv
f
202.784 186.487 mo
202.784 184.362 li
f
202.784 186.487 mo
202.784 184.362 li
@
202.784 2.8877 mo
202.784 5.0127 li
f
202.784 2.8877 mo
202.784 5.0127 li
@
201.836 190.954 mo
202.135 191.019 202.372 191.151 202.537 191.356 cv
202.704 191.56 202.792 191.815 202.792 192.108 cv
202.792 192.567 202.633 192.925 202.321 193.173 cv
202.001 193.421 201.555 193.542 200.975 193.542 cv
200.778 193.542 200.574 193.524 200.37 193.485 cv
200.166 193.454 199.949 193.396 199.733 193.319 cv
199.733 192.714 li
199.904 192.815 200.096 192.894 200.306 192.944 cv
200.51 192.995 200.727 193.021 200.957 193.021 cv
201.352 193.021 201.651 192.944 201.855 192.79 cv
202.059 192.638 202.167 192.407 202.167 192.108 cv
202.167 191.841 202.072 191.624 201.88 191.472 cv
201.69 191.317 201.421 191.235 201.077 191.235 cv
200.536 191.235 li
200.536 190.72 li
201.103 190.72 li
201.409 190.72 201.645 190.661 201.811 190.534 cv
201.976 190.413 202.059 190.233 202.059 189.999 cv
202.059 189.763 201.97 189.577 201.804 189.45 cv
201.632 189.323 201.39 189.259 201.077 189.259 cv
200.906 189.259 200.72 189.278 200.522 189.315 cv
200.326 189.354 200.109 189.411 199.873 189.489 cv
199.873 188.927 li
200.109 188.864 200.332 188.813 200.542 188.78 cv
200.746 188.749 200.943 188.729 201.135 188.729 cv
201.606 188.729 201.982 188.839 202.263 189.056 cv
202.543 189.272 202.684 189.565 202.684 189.935 cv
202.684 190.19 202.608 190.407 202.46 190.585 cv
202.314 190.763 202.104 190.892 201.836 190.954 cv
f
203.991 188.813 mo
206.458 188.813 li
206.458 189.341 li
204.565 189.341 li
204.565 190.483 li
204.654 190.45 204.75 190.425 204.838 190.413 cv
204.928 190.399 205.024 190.388 205.113 190.388 cv
205.629 190.388 206.038 190.534 206.343 190.815 cv
206.649 191.103 206.802 191.483 206.802 191.968 cv
206.802 192.472 206.643 192.86 206.331 193.136 cv
206.018 193.409 205.579 193.542 205.017 193.542 cv
204.82 193.542 204.622 193.524 204.417 193.499 cv
204.213 193.466 204.01 193.421 203.793 193.351 cv
203.793 192.72 li
203.979 192.823 204.169 192.899 204.374 192.95 cv
204.571 193.001 204.782 193.021 205.004 193.021 cv
205.362 193.021 205.648 192.931 205.859 192.739 cv
206.063 192.548 206.171 192.294 206.171 191.968 cv
206.171 191.649 206.063 191.394 205.859 191.204 cv
205.648 191.013 205.362 190.917 205.004 190.917 cv
204.838 190.917 204.667 190.935 204.5 190.974 cv
204.335 191.013 204.163 191.069 203.991 191.146 cv
203.991 188.813 li
f
229.134 186.487 mo
229.134 184.362 li
f
229.134 186.487 mo
229.134 184.362 li
@
229.134 2.8877 mo
229.134 5.0127 li
f
229.134 2.8877 mo
229.134 5.0127 li
@
227.854 189.36 mo
226.266 191.841 li
227.854 191.841 li
227.854 189.36 li
227.688 188.813 mo
228.479 188.813 li
228.479 191.841 li
229.142 191.841 li
229.142 192.364 li
228.479 192.364 li
228.479 193.46 li
227.854 193.46 li
227.854 192.364 li
225.756 192.364 li
225.756 191.759 li
227.688 188.813 li
cp
f
231.526 189.228 mo
231.201 189.228 230.958 189.386 230.792 189.706 cv
230.627 190.024 230.55 190.503 230.55 191.14 cv
230.55 191.776 230.627 192.255 230.792 192.573 cv
230.958 192.894 231.201 193.052 231.526 193.052 cv
231.851 193.052 232.093 192.894 232.259 192.573 cv
232.418 192.255 232.501 191.776 232.501 191.14 cv
232.501 190.503 232.418 190.024 232.259 189.706 cv
232.093 189.386 231.851 189.228 231.526 189.228 cv
231.526 188.729 mo
232.042 188.729 232.438 188.94 232.718 189.349 cv
232.993 189.763 233.132 190.362 233.132 191.14 cv
233.132 191.923 232.993 192.522 232.718 192.931 cv
232.438 193.339 232.042 193.542 231.526 193.542 cv
231.003 193.542 230.602 193.339 230.328 192.931 cv
230.053 192.522 229.919 191.923 229.919 191.14 cv
229.919 190.362 230.053 189.763 230.328 189.349 cv
230.602 188.94 231.003 188.729 231.526 188.729 cv
f
255.484 186.487 mo
255.484 184.362 li
f
255.484 186.487 mo
255.484 184.362 li
@
255.484 2.8877 mo
255.484 5.0127 li
f
255.484 2.8877 mo
255.484 5.0127 li
@
254.27 189.36 mo
252.683 191.841 li
254.27 191.841 li
254.27 189.36 li
254.104 188.813 mo
254.895 188.813 li
254.895 191.841 li
255.558 191.841 li
255.558 192.364 li
254.895 192.364 li
254.895 193.46 li
254.27 193.46 li
254.27 192.364 li
252.173 192.364 li
252.173 191.759 li
254.104 188.813 li
cp
f
256.604 188.813 mo
259.071 188.813 li
259.071 189.341 li
257.177 189.341 li
257.177 190.483 li
257.267 190.45 257.362 190.425 257.452 190.413 cv
257.541 190.399 257.636 190.388 257.726 190.388 cv
258.242 190.388 258.65 190.534 258.956 190.815 cv
259.262 191.103 259.416 191.483 259.416 191.968 cv
259.416 192.472 259.255 192.86 258.943 193.136 cv
258.63 193.409 258.191 193.542 257.63 193.542 cv
257.432 193.542 257.235 193.524 257.031 193.499 cv
256.827 193.466 256.623 193.421 256.406 193.351 cv
256.406 192.72 li
256.591 192.823 256.782 192.899 256.986 192.95 cv
257.184 193.001 257.394 193.021 257.618 193.021 cv
257.974 193.021 258.261 192.931 258.471 192.739 cv
258.675 192.548 258.784 192.294 258.784 191.968 cv
258.784 191.649 258.675 191.394 258.471 191.204 cv
258.261 191.013 257.974 190.917 257.618 190.917 cv
257.452 190.917 257.279 190.935 257.114 190.974 cv
256.948 191.013 256.776 191.069 256.604 191.146 cv
256.604 188.813 li
f
66.6948 198.161 mo
66.6948 199.907 li
67.4854 199.907 li
67.7788 199.907 68.002 199.837 68.1611 199.685 cv
68.3208 199.532 68.4033 199.315 68.4033 199.034 cv
68.4033 198.753 68.3208 198.544 68.1611 198.392 cv
68.002 198.237 67.7788 198.161 67.4854 198.161 cv
66.6948 198.161 li
66.064 197.644 mo
67.4854 197.644 li
68.002 197.644 68.397 197.767 68.665 198.001 cv
68.9326 198.237 69.0664 198.581 69.0664 199.034 cv
69.0664 199.493 68.9326 199.845 68.665 200.073 cv
68.397 200.31 68.002 200.425 67.4854 200.425 cv
66.6948 200.425 li
66.6948 202.292 li
66.064 202.292 li
66.064 197.644 li
f
72.8662 200.405 mo
72.8662 200.687 li
70.2334 200.687 li
70.2588 201.081 70.3735 201.388 70.5903 201.591 cv
70.8008 201.794 71.0938 201.897 71.4766 201.897 cv
71.6934 201.897 71.9097 201.872 72.1138 201.819 cv
72.3179 201.769 72.5283 201.687 72.7324 201.571 cv
72.7324 202.114 li
72.5283 202.202 72.3179 202.272 72.1011 202.312 cv
71.8843 202.349 71.6611 202.374 71.4443 202.374 cv
70.8833 202.374 70.4438 202.216 70.1187 201.897 cv
69.7935 201.577 69.6338 201.138 69.6338 200.583 cv
69.6338 200.017 69.7871 199.563 70.0933 199.226 cv
70.3989 198.894 70.8198 198.722 71.3423 198.722 cv
71.8145 198.722 72.1841 198.876 72.458 199.175 cv
72.7261 199.481 72.8662 199.89 72.8662 200.405 cv
72.2925 200.239 mo
72.2861 199.927 72.1968 199.679 72.0313 199.487 cv
71.8589 199.302 71.6294 199.206 71.3491 199.206 cv
71.0303 199.206 70.7749 199.302 70.584 199.481 cv
70.3926 199.659 70.2778 199.915 70.2524 200.239 cv
72.2925 200.239 li
f
74.3706 197.817 mo
74.3706 198.806 li
75.5503 198.806 li
75.5503 199.251 li
74.3706 199.251 li
74.3706 201.146 li
74.3706 201.431 74.4092 201.616 74.4854 201.692 cv
74.562 201.776 74.7212 201.813 74.9634 201.813 cv
75.5503 201.813 li
75.5503 202.292 li
74.9634 202.292 li
74.5171 202.292 74.2114 202.21 74.0454 202.044 cv
73.8799 201.878 73.7969 201.577 73.7969 201.146 cv
73.7969 199.251 li
73.376 199.251 li
73.376 198.806 li
73.7969 198.806 li
73.7969 197.817 li
74.3706 197.817 li
f
79.2856 200.405 mo
79.2856 200.687 li
76.6528 200.687 li
76.6782 201.081 76.793 201.388 77.0098 201.591 cv
77.2202 201.794 77.5137 201.897 77.896 201.897 cv
78.1128 201.897 78.3296 201.872 78.5337 201.819 cv
78.7373 201.769 78.9478 201.687 79.1519 201.571 cv
79.1519 202.114 li
78.9478 202.202 78.7373 202.272 78.521 202.312 cv
78.3042 202.349 78.0811 202.374 77.8643 202.374 cv
77.3032 202.374 76.8633 202.216 76.5381 201.897 cv
76.2129 201.577 76.0537 201.138 76.0537 200.583 cv
76.0537 200.017 76.2065 199.563 76.5127 199.226 cv
76.8188 198.894 77.2393 198.722 77.7622 198.722 cv
78.2339 198.722 78.6035 198.876 78.8779 199.175 cv
79.1455 199.481 79.2856 199.89 79.2856 200.405 cv
78.7119 200.239 mo
78.7056 199.927 78.6162 199.679 78.4507 199.487 cv
78.2783 199.302 78.0488 199.206 77.7686 199.206 cv
77.4497 199.206 77.1948 199.302 77.0034 199.481 cv
76.8125 199.659 76.6978 199.915 76.6719 200.239 cv
78.7119 200.239 li
f
82.2437 199.341 mo
82.1802 199.302 82.1099 199.276 82.0332 199.257 cv
81.957 199.245 81.874 199.231 81.7847 199.231 cv
81.4595 199.231 81.2109 199.341 81.0391 199.552 cv
80.8604 199.761 80.7773 200.06 80.7773 200.456 cv
80.7773 202.292 li
80.2036 202.292 li
80.2036 198.806 li
80.7773 198.806 li
80.7773 199.347 li
80.8921 199.136 81.0518 198.978 81.2427 198.876 cv
81.4341 198.772 81.6699 198.722 81.9507 198.722 cv
81.9888 198.722 82.0332 198.728 82.0845 198.728 cv
82.1289 198.733 82.1802 198.741 82.2437 198.755 cv
82.2437 199.341 li
f
85.5269 198.161 mo
85.5269 199.907 li
86.3174 199.907 li
86.6104 199.907 86.8335 199.837 86.9932 199.685 cv
87.1523 199.532 87.2354 199.315 87.2354 199.034 cv
87.2354 198.753 87.1523 198.544 86.9932 198.392 cv
86.8335 198.237 86.6104 198.161 86.3174 198.161 cv
85.5269 198.161 li
84.8955 197.644 mo
86.3174 197.644 li
86.8335 197.644 87.229 197.767 87.4966 198.001 cv
87.7642 198.237 87.8979 198.581 87.8979 199.034 cv
87.8979 199.493 87.7642 199.845 87.4966 200.073 cv
87.229 200.31 86.8335 200.425 86.3174 200.425 cv
85.5269 200.425 li
85.5269 202.292 li
84.8955 202.292 li
84.8955 197.644 li
f
88.7139 198.806 mo
89.2876 198.806 li
89.2876 202.292 li
88.7139 202.292 li
88.7139 198.806 li
cp
88.7139 197.446 mo
89.2876 197.446 li
89.2876 198.173 li
88.7139 198.173 li
88.7139 197.446 li
cp
f
91.041 201.769 mo
91.041 203.612 li
90.4673 203.612 li
90.4673 198.806 li
91.041 198.806 li
91.041 199.335 li
91.1558 199.13 91.3091 198.978 91.4937 198.876 cv
91.6787 198.772 91.9019 198.722 92.1567 198.722 cv
92.5776 198.722 92.9219 198.894 93.1895 199.226 cv
93.4512 199.563 93.585 200.003 93.585 200.552 cv
93.585 201.099 93.4512 201.546 93.1895 201.878 cv
92.9219 202.208 92.5776 202.376 92.1567 202.376 cv
91.9019 202.376 91.6787 202.323 91.4937 202.228 cv
91.3091 202.134 91.1558 201.979 91.041 201.769 cv
92.9922 200.552 mo
92.9922 200.132 92.9028 199.806 92.7305 199.563 cv
92.5522 199.321 92.3164 199.2 92.0166 199.2 cv
91.7104 199.2 91.4746 199.321 91.3027 199.563 cv
91.124 199.806 91.041 200.132 91.041 200.552 cv
91.041 200.972 91.124 201.304 91.3027 201.546 cv
91.4746 201.788 91.7104 201.903 92.0166 201.903 cv
92.3164 201.903 92.5522 201.788 92.7305 201.546 cv
92.9028 201.304 92.9922 200.972 92.9922 200.552 cv
f
97.5181 200.405 mo
97.5181 200.687 li
94.8853 200.687 li
94.9106 201.081 95.0254 201.388 95.2422 201.591 cv
95.4526 201.794 95.7461 201.897 96.1284 201.897 cv
96.3452 201.897 96.562 201.872 96.7661 201.819 cv
96.9697 201.769 97.1802 201.687 97.3843 201.571 cv
97.3843 202.114 li
97.1802 202.202 96.9697 202.272 96.7534 202.312 cv
96.5366 202.349 96.3135 202.374 96.0967 202.374 cv
95.5356 202.374 95.0957 202.216 94.7705 201.897 cv
94.4453 201.577 94.2861 201.138 94.2861 200.583 cv
94.2861 200.017 94.439 199.563 94.7451 199.226 cv
95.0513 198.894 95.4717 198.722 95.9946 198.722 cv
96.4663 198.722 96.8359 198.876 97.1104 199.175 cv
97.3779 199.481 97.5181 199.89 97.5181 200.405 cv
96.9443 200.239 mo
96.938 199.927 96.8486 199.679 96.6831 199.487 cv
96.5107 199.302 96.2813 199.206 96.001 199.206 cv
95.6821 199.206 95.4272 199.302 95.2358 199.481 cv
95.0444 199.659 94.9302 199.915 94.9043 200.239 cv
96.9443 200.239 li
f
100.476 199.341 mo
100.413 199.302 100.342 199.276 100.266 199.257 cv
100.189 199.245 100.106 199.231 100.017 199.231 cv
99.6919 199.231 99.4434 199.341 99.271 199.552 cv
99.0928 199.761 99.0098 200.06 99.0098 200.456 cv
99.0098 202.292 li
98.436 202.292 li
98.436 198.806 li
99.0098 198.806 li
99.0098 199.347 li
99.1245 199.136 99.2842 198.978 99.4751 198.876 cv
99.6665 198.772 99.9023 198.722 100.183 198.722 cv
100.221 198.722 100.266 198.728 100.317 198.728 cv
100.361 198.733 100.413 198.741 100.476 198.755 cv
100.476 199.341 li
f
103.657 201.769 mo
103.657 203.612 li
103.083 203.612 li
103.083 198.806 li
103.657 198.806 li
103.657 199.335 li
103.772 199.13 103.925 198.978 104.11 198.876 cv
104.294 198.772 104.518 198.722 104.773 198.722 cv
105.193 198.722 105.538 198.894 105.806 199.226 cv
106.067 199.563 106.201 200.003 106.201 200.552 cv
106.201 201.099 106.067 201.546 105.806 201.878 cv
105.538 202.208 105.193 202.376 104.773 202.376 cv
104.518 202.376 104.294 202.323 104.11 202.228 cv
103.925 202.134 103.772 201.979 103.657 201.769 cv
105.608 200.552 mo
105.608 200.132 105.519 199.806 105.347 199.563 cv
105.168 199.321 104.932 199.2 104.632 199.2 cv
104.327 199.2 104.091 199.321 103.918 199.563 cv
103.74 199.806 103.657 200.132 103.657 200.552 cv
103.657 200.972 103.74 201.304 103.918 201.546 cv
104.091 201.788 104.327 201.903 104.632 201.903 cv
104.932 201.903 105.168 201.788 105.347 201.546 cv
105.519 201.304 105.608 200.972 105.608 200.552 cv
f
107.151 198.806 mo
107.725 198.806 li
107.725 202.292 li
107.151 202.292 li
107.151 198.806 li
cp
107.151 197.446 mo
107.725 197.446 li
107.725 198.173 li
107.151 198.173 li
107.151 197.446 li
cp
f
111.435 198.938 mo
111.435 199.474 li
111.269 199.386 111.109 199.321 110.944 199.276 cv
110.778 199.231 110.619 199.206 110.453 199.206 cv
110.083 199.206 109.79 199.327 109.586 199.563 cv
109.382 199.8 109.28 200.132 109.28 200.552 cv
109.28 200.979 109.382 201.31 109.586 201.546 cv
109.79 201.782 110.083 201.896 110.453 201.896 cv
110.619 201.896 110.778 201.878 110.944 201.833 cv
111.109 201.788 111.269 201.718 111.435 201.628 cv
111.435 202.159 li
111.269 202.235 111.103 202.292 110.938 202.323 cv
110.765 202.356 110.581 202.376 110.389 202.376 cv
109.867 202.376 109.446 202.216 109.14 201.884 cv
108.827 201.56 108.674 201.112 108.674 200.552 cv
108.674 199.985 108.827 199.538 109.14 199.214 cv
109.452 198.888 109.879 198.722 110.427 198.722 cv
110.606 198.722 110.778 198.741 110.944 198.78 cv
111.109 198.817 111.275 198.868 111.435 198.938 cv
f
112.41 197.446 mo
112.984 197.446 li
112.984 200.31 li
114.692 198.806 li
115.425 198.806 li
113.577 200.437 li
115.502 202.292 li
114.756 202.292 li
112.984 200.589 li
112.984 202.292 li
112.41 202.292 li
112.41 197.446 li
cp
f
119.104 200.405 mo
119.104 200.687 li
116.471 200.687 li
116.497 201.081 116.611 201.388 116.828 201.591 cv
117.039 201.794 117.332 201.897 117.714 201.897 cv
117.931 201.897 118.147 201.872 118.352 201.819 cv
118.556 201.769 118.766 201.687 118.97 201.571 cv
118.97 202.114 li
118.766 202.202 118.556 202.272 118.339 202.312 cv
118.122 202.349 117.899 202.374 117.682 202.374 cv
117.121 202.374 116.681 202.216 116.356 201.897 cv
116.031 201.577 115.872 201.138 115.872 200.583 cv
115.872 200.017 116.025 199.563 116.331 199.226 cv
116.637 198.894 117.058 198.722 117.58 198.722 cv
118.052 198.722 118.422 198.876 118.696 199.175 cv
118.963 199.481 119.104 199.89 119.104 200.405 cv
118.53 200.239 mo
118.524 199.927 118.435 199.679 118.269 199.487 cv
118.097 199.302 117.867 199.206 117.586 199.206 cv
117.268 199.206 117.013 199.302 116.822 199.481 cv
116.63 199.659 116.516 199.915 116.49 200.239 cv
118.53 200.239 li
f
122.336 199.335 mo
122.336 197.446 li
122.91 197.446 li
122.91 202.292 li
122.336 202.292 li
122.336 201.769 li
122.215 201.979 122.062 202.134 121.877 202.228 cv
121.692 202.323 121.475 202.376 121.22 202.376 cv
120.8 202.376 120.456 202.208 120.188 201.878 cv
119.92 201.546 119.792 201.099 119.792 200.552 cv
119.792 200.003 119.92 199.563 120.188 199.226 cv
120.456 198.894 120.8 198.722 121.22 198.722 cv
121.475 198.722 121.692 198.772 121.877 198.876 cv
122.062 198.978 122.215 199.13 122.336 199.335 cv
120.385 200.552 mo
120.385 200.972 120.468 201.304 120.64 201.546 cv
120.813 201.788 121.055 201.903 121.361 201.903 cv
121.66 201.903 121.896 201.788 122.075 201.546 cv
122.247 201.304 122.336 200.972 122.336 200.552 cv
122.336 200.132 122.247 199.806 122.075 199.563 cv
121.896 199.321 121.66 199.2 121.361 199.2 cv
121.055 199.2 120.813 199.321 120.64 199.563 cv
120.468 199.806 120.385 200.132 120.385 200.552 cv
f
127.704 200.538 mo
127.238 200.538 126.919 200.597 126.741 200.698 cv
126.563 200.808 126.473 200.985 126.473 201.239 cv
126.473 201.444 126.537 201.61 126.671 201.726 cv
126.805 201.847 126.99 201.903 127.219 201.903 cv
127.538 201.903 127.793 201.794 127.984 201.565 cv
128.175 201.343 128.271 201.042 128.271 200.667 cv
128.271 200.538 li
127.704 200.538 li
128.845 200.304 mo
128.845 202.292 li
128.271 202.292 li
128.271 201.763 li
128.137 201.979 127.972 202.132 127.78 202.228 cv
127.589 202.323 127.347 202.374 127.066 202.374 cv
126.709 202.374 126.422 202.28 126.212 202.081 cv
126.001 201.884 125.899 201.616 125.899 201.278 cv
125.899 200.89 126.027 200.597 126.295 200.392 cv
126.556 200.194 126.945 200.093 127.468 200.093 cv
128.271 200.093 li
128.271 200.036 li
128.271 199.774 128.182 199.569 128.01 199.423 cv
127.837 199.282 127.595 199.206 127.283 199.206 cv
127.079 199.206 126.888 199.231 126.696 199.282 cv
126.505 199.335 126.327 199.403 126.155 199.493 cv
126.155 198.964 li
126.358 198.888 126.563 198.823 126.76 198.786 cv
126.958 198.747 127.149 198.722 127.34 198.722 cv
127.844 198.722 128.22 198.856 128.469 199.118 cv
128.717 199.378 128.845 199.774 128.845 200.304 cv
f
132.606 201.769 mo
132.606 203.612 li
132.032 203.612 li
132.032 198.806 li
132.606 198.806 li
132.606 199.335 li
132.721 199.13 132.874 198.978 133.059 198.876 cv
133.244 198.772 133.467 198.722 133.722 198.722 cv
134.143 198.722 134.487 198.894 134.754 199.226 cv
135.016 199.563 135.15 200.003 135.15 200.552 cv
135.15 201.099 135.016 201.546 134.754 201.878 cv
134.487 202.208 134.143 202.376 133.722 202.376 cv
133.467 202.376 133.244 202.323 133.059 202.228 cv
132.874 202.134 132.721 201.979 132.606 201.769 cv
134.557 200.552 mo
134.557 200.132 134.468 199.806 134.295 199.563 cv
134.117 199.321 133.88 199.2 133.582 199.2 cv
133.275 199.2 133.04 199.321 132.868 199.563 cv
132.689 199.806 132.606 200.132 132.606 200.552 cv
132.606 200.972 132.689 201.304 132.868 201.546 cv
133.04 201.788 133.275 201.903 133.582 201.903 cv
133.88 201.903 134.117 201.788 134.295 201.546 cv
134.468 201.304 134.557 200.972 134.557 200.552 cv
f
139.083 200.405 mo
139.083 200.687 li
136.45 200.687 li
136.476 201.081 136.591 201.388 136.807 201.591 cv
137.017 201.794 137.311 201.897 137.693 201.897 cv
137.91 201.897 138.126 201.872 138.331 201.819 cv
138.535 201.769 138.745 201.687 138.949 201.571 cv
138.949 202.114 li
138.745 202.202 138.535 202.272 138.318 202.312 cv
138.101 202.349 137.878 202.374 137.661 202.374 cv
137.101 202.374 136.66 202.216 136.335 201.897 cv
136.01 201.577 135.851 201.138 135.851 200.583 cv
135.851 200.017 136.003 199.563 136.31 199.226 cv
136.616 198.894 137.037 198.722 137.559 198.722 cv
138.031 198.722 138.401 198.876 138.675 199.175 cv
138.942 199.481 139.083 199.89 139.083 200.405 cv
138.509 200.239 mo
138.502 199.927 138.414 199.679 138.248 199.487 cv
138.076 199.302 137.846 199.206 137.566 199.206 cv
137.247 199.206 136.992 199.302 136.8 199.481 cv
136.61 199.659 136.495 199.915 136.469 200.239 cv
138.509 200.239 li
f
142.532 198.938 mo
142.532 199.474 li
142.366 199.386 142.207 199.321 142.041 199.276 cv
141.875 199.231 141.715 199.206 141.55 199.206 cv
141.18 199.206 140.887 199.327 140.684 199.563 cv
140.479 199.8 140.377 200.132 140.377 200.552 cv
140.377 200.979 140.479 201.31 140.684 201.546 cv
140.887 201.782 141.18 201.896 141.55 201.896 cv
141.715 201.896 141.875 201.878 142.041 201.833 cv
142.207 201.788 142.366 201.718 142.532 201.628 cv
142.532 202.159 li
142.366 202.235 142.201 202.292 142.035 202.323 cv
141.863 202.356 141.678 202.376 141.486 202.376 cv
140.963 202.376 140.543 202.216 140.237 201.884 cv
139.924 201.56 139.771 201.112 139.771 200.552 cv
139.771 199.985 139.924 199.538 140.237 199.214 cv
140.55 198.888 140.976 198.722 141.525 198.722 cv
141.703 198.722 141.875 198.741 142.041 198.78 cv
142.207 198.817 142.373 198.868 142.532 198.938 cv
f
143.507 197.446 mo
144.081 197.446 li
144.081 200.31 li
145.79 198.806 li
146.523 198.806 li
144.673 200.437 li
146.599 202.292 li
145.853 202.292 li
144.081 200.589 li
144.081 202.292 li
143.507 202.292 li
143.507 197.446 li
cp
f
150.596 199.206 mo
150.291 199.206 150.048 199.327 149.87 199.569 cv
149.691 199.812 149.601 200.138 149.601 200.552 cv
149.601 200.972 149.684 201.298 149.863 201.54 cv
150.042 201.782 150.284 201.896 150.596 201.896 cv
150.902 201.896 151.144 201.782 151.323 201.54 cv
151.501 201.298 151.59 200.972 151.59 200.552 cv
151.59 200.144 151.501 199.812 151.323 199.569 cv
151.144 199.327 150.902 199.206 150.596 199.206 cv
150.596 198.722 mo
151.094 198.722 151.482 198.888 151.769 199.206 cv
152.049 199.532 152.197 199.978 152.197 200.552 cv
152.197 201.126 152.049 201.571 151.769 201.89 cv
151.482 202.216 151.094 202.376 150.596 202.376 cv
150.093 202.376 149.698 202.216 149.417 201.89 cv
149.136 201.571 148.996 201.126 148.996 200.552 cv
148.996 199.978 149.136 199.532 149.417 199.206 cv
149.698 198.888 150.093 198.722 150.596 198.722 cv
f
154.912 197.446 mo
154.912 197.925 li
154.364 197.925 li
154.16 197.925 154.013 197.97 153.936 198.054 cv
153.854 198.136 153.816 198.282 153.816 198.499 cv
153.816 198.806 li
154.759 198.806 li
154.759 199.251 li
153.816 199.251 li
153.816 202.292 li
153.242 202.292 li
153.242 199.251 li
152.694 199.251 li
152.694 198.806 li
153.242 198.806 li
153.242 198.563 li
153.242 198.181 153.331 197.894 153.509 197.714 cv
153.688 197.536 153.975 197.446 154.37 197.446 cv
154.912 197.446 li
f
157.972 201.769 mo
157.972 203.612 li
157.399 203.612 li
157.399 198.806 li
157.972 198.806 li
157.972 199.335 li
158.087 199.13 158.24 198.978 158.425 198.876 cv
158.609 198.772 158.833 198.722 159.087 198.722 cv
159.508 198.722 159.853 198.894 160.121 199.226 cv
160.381 199.563 160.515 200.003 160.515 200.552 cv
160.515 201.099 160.381 201.546 160.121 201.878 cv
159.853 202.208 159.508 202.376 159.087 202.376 cv
158.833 202.376 158.609 202.323 158.425 202.228 cv
158.24 202.134 158.087 201.979 157.972 201.769 cv
159.923 200.552 mo
159.923 200.132 159.833 199.806 159.662 199.563 cv
159.483 199.321 159.247 199.2 158.948 199.2 cv
158.641 199.2 158.405 199.321 158.233 199.563 cv
158.054 199.806 157.972 200.132 157.972 200.552 cv
157.972 200.972 158.054 201.304 158.233 201.546 cv
158.405 201.788 158.641 201.903 158.948 201.903 cv
159.247 201.903 159.483 201.788 159.662 201.546 cv
159.833 201.304 159.923 200.972 159.923 200.552 cv
f
161.465 198.806 mo
162.04 198.806 li
162.04 202.292 li
161.465 202.292 li
161.465 198.806 li
cp
161.465 197.446 mo
162.04 197.446 li
162.04 198.173 li
161.465 198.173 li
161.465 197.446 li
cp
f
165.75 198.938 mo
165.75 199.474 li
165.583 199.386 165.424 199.321 165.258 199.276 cv
165.093 199.231 164.934 199.206 164.768 199.206 cv
164.398 199.206 164.105 199.327 163.901 199.563 cv
163.697 199.8 163.594 200.132 163.594 200.552 cv
163.594 200.979 163.697 201.31 163.901 201.546 cv
164.105 201.782 164.398 201.896 164.768 201.896 cv
164.934 201.896 165.093 201.878 165.258 201.833 cv
165.424 201.788 165.583 201.718 165.75 201.628 cv
165.75 202.159 li
165.583 202.235 165.418 202.292 165.251 202.323 cv
165.081 202.356 164.895 202.376 164.704 202.376 cv
164.181 202.376 163.76 202.216 163.455 201.884 cv
163.142 201.56 162.989 201.112 162.989 200.552 cv
162.989 199.985 163.142 199.538 163.455 199.214 cv
163.767 198.888 164.194 198.722 164.743 198.722 cv
164.92 198.722 165.093 198.741 165.258 198.78 cv
165.424 198.817 165.59 198.868 165.75 198.938 cv
f
166.725 197.446 mo
167.298 197.446 li
167.298 200.31 li
169.007 198.806 li
169.741 198.806 li
167.891 200.437 li
169.817 202.292 li
169.071 202.292 li
167.298 200.589 li
167.298 202.292 li
166.725 202.292 li
166.725 197.446 li
cp
f
170.436 197.446 mo
171.008 197.446 li
171.008 202.292 li
170.436 202.292 li
170.436 197.446 li
cp
f
175.191 200.405 mo
175.191 200.687 li
172.558 200.687 li
172.583 201.081 172.699 201.388 172.916 201.591 cv
173.125 201.794 173.418 201.897 173.801 201.897 cv
174.018 201.897 174.235 201.872 174.438 201.819 cv
174.643 201.769 174.853 201.687 175.057 201.571 cv
175.057 202.114 li
174.853 202.202 174.643 202.272 174.426 202.312 cv
174.208 202.349 173.986 202.374 173.769 202.374 cv
173.208 202.374 172.768 202.216 172.443 201.897 cv
172.119 201.577 171.958 201.138 171.958 200.583 cv
171.958 200.017 172.112 199.563 172.417 199.226 cv
172.723 198.894 173.144 198.722 173.667 198.722 cv
174.139 198.722 174.509 198.876 174.783 199.175 cv
175.05 199.481 175.191 199.89 175.191 200.405 cv
174.617 200.239 mo
174.611 199.927 174.521 199.679 174.356 199.487 cv
174.183 199.302 173.954 199.206 173.674 199.206 cv
173.355 199.206 173.1 199.302 172.909 199.481 cv
172.717 199.659 172.602 199.915 172.577 200.239 cv
174.617 200.239 li
f
178.422 199.335 mo
178.422 197.446 li
178.997 197.446 li
178.997 202.292 li
178.422 202.292 li
178.422 201.769 li
178.301 201.979 178.149 202.134 177.964 202.228 cv
177.779 202.323 177.563 202.376 177.307 202.376 cv
176.886 202.376 176.542 202.208 176.275 201.878 cv
176.006 201.546 175.879 201.099 175.879 200.552 cv
175.879 200.003 176.006 199.563 176.275 199.226 cv
176.542 198.894 176.886 198.722 177.307 198.722 cv
177.563 198.722 177.779 198.772 177.964 198.876 cv
178.149 198.978 178.301 199.13 178.422 199.335 cv
176.472 200.552 mo
176.472 200.972 176.555 201.304 176.728 201.546 cv
176.9 201.788 177.142 201.903 177.448 201.903 cv
177.748 201.903 177.984 201.788 178.162 201.546 cv
178.333 201.304 178.422 200.972 178.422 200.552 cv
178.422 200.132 178.333 199.806 178.162 199.563 cv
177.984 199.321 177.748 199.2 177.448 199.2 cv
177.142 199.2 176.9 199.321 176.728 199.563 cv
176.555 199.806 176.472 200.132 176.472 200.552 cv
f
182.758 201.769 mo
182.758 203.612 li
182.184 203.612 li
182.184 198.806 li
182.758 198.806 li
182.758 199.335 li
182.873 199.13 183.026 198.978 183.211 198.876 cv
183.395 198.772 183.619 198.722 183.874 198.722 cv
184.294 198.722 184.638 198.894 184.907 199.226 cv
185.167 199.563 185.301 200.003 185.301 200.552 cv
185.301 201.099 185.167 201.546 184.907 201.878 cv
184.638 202.208 184.294 202.376 183.874 202.376 cv
183.619 202.376 183.395 202.323 183.211 202.228 cv
183.026 202.134 182.873 201.979 182.758 201.769 cv
184.708 200.552 mo
184.708 200.132 184.62 199.806 184.448 199.563 cv
184.269 199.321 184.033 199.2 183.733 199.2 cv
183.427 199.2 183.191 199.321 183.019 199.563 cv
182.84 199.806 182.758 200.132 182.758 200.552 cv
182.758 200.972 182.84 201.304 183.019 201.546 cv
183.191 201.788 183.427 201.903 183.733 201.903 cv
184.033 201.903 184.269 201.788 184.448 201.546 cv
184.62 201.304 184.708 200.972 184.708 200.552 cv
f
189.235 200.405 mo
189.235 200.687 li
186.602 200.687 li
186.627 201.081 186.743 201.388 186.959 201.591 cv
187.169 201.794 187.462 201.897 187.845 201.897 cv
188.062 201.897 188.278 201.872 188.483 201.819 cv
188.687 201.769 188.897 201.687 189.101 201.571 cv
189.101 202.114 li
188.897 202.202 188.687 202.272 188.47 202.312 cv
188.252 202.349 188.03 202.374 187.813 202.374 cv
187.252 202.374 186.812 202.216 186.488 201.897 cv
186.163 201.577 186.002 201.138 186.002 200.583 cv
186.002 200.017 186.156 199.563 186.461 199.226 cv
186.767 198.894 187.188 198.722 187.711 198.722 cv
188.183 198.722 188.553 198.876 188.827 199.175 cv
189.094 199.481 189.235 199.89 189.235 200.405 cv
188.662 200.239 mo
188.655 199.927 188.565 199.679 188.4 199.487 cv
188.228 199.302 187.999 199.206 187.718 199.206 cv
187.399 199.206 187.143 199.302 186.953 199.481 cv
186.761 199.659 186.647 199.915 186.622 200.239 cv
188.662 200.239 li
f
190.727 201.769 mo
190.727 203.612 li
190.153 203.612 li
190.153 198.806 li
190.727 198.806 li
190.727 199.335 li
190.841 199.13 190.995 198.978 191.18 198.876 cv
191.364 198.772 191.587 198.722 191.842 198.722 cv
192.263 198.722 192.607 198.894 192.875 199.226 cv
193.136 199.563 193.27 200.003 193.27 200.552 cv
193.27 201.099 193.136 201.546 192.875 201.878 cv
192.607 202.208 192.263 202.376 191.842 202.376 cv
191.587 202.376 191.364 202.323 191.18 202.228 cv
190.995 202.134 190.841 201.979 190.727 201.769 cv
192.677 200.552 mo
192.677 200.132 192.588 199.806 192.417 199.563 cv
192.238 199.321 192.001 199.2 191.702 199.2 cv
191.396 199.2 191.16 199.321 190.988 199.563 cv
190.809 199.806 190.727 200.132 190.727 200.552 cv
190.727 200.972 190.809 201.304 190.988 201.546 cv
191.16 201.788 191.396 201.903 191.702 201.903 cv
192.001 201.903 192.238 201.788 192.417 201.546 cv
192.588 201.304 192.677 200.972 192.677 200.552 cv
f
194.775 201.769 mo
194.775 203.612 li
194.201 203.612 li
194.201 198.806 li
194.775 198.806 li
194.775 199.335 li
194.889 199.13 195.042 198.978 195.227 198.876 cv
195.413 198.772 195.635 198.722 195.89 198.722 cv
196.311 198.722 196.656 198.894 196.923 199.226 cv
197.184 199.563 197.319 200.003 197.319 200.552 cv
197.319 201.099 197.184 201.546 196.923 201.878 cv
196.656 202.208 196.311 202.376 195.89 202.376 cv
195.635 202.376 195.413 202.323 195.227 202.228 cv
195.042 202.134 194.889 201.979 194.775 201.769 cv
196.725 200.552 mo
196.725 200.132 196.636 199.806 196.464 199.563 cv
196.286 199.321 196.049 199.2 195.75 199.2 cv
195.444 199.2 195.208 199.321 195.037 199.563 cv
194.858 199.806 194.775 200.132 194.775 200.552 cv
194.775 200.972 194.858 201.304 195.037 201.546 cv
195.208 201.788 195.444 201.903 195.75 201.903 cv
196.049 201.903 196.286 201.788 196.464 201.546 cv
196.636 201.304 196.725 200.972 196.725 200.552 cv
f
201.251 200.405 mo
201.251 200.687 li
198.62 200.687 li
198.645 201.081 198.759 201.388 198.976 201.591 cv
199.186 201.794 199.479 201.897 199.862 201.897 cv
200.079 201.897 200.295 201.872 200.5 201.819 cv
200.704 201.769 200.914 201.687 201.118 201.571 cv
201.118 202.114 li
200.914 202.202 200.704 202.272 200.487 202.312 cv
200.27 202.349 200.046 202.374 199.83 202.374 cv
199.269 202.374 198.829 202.216 198.503 201.897 cv
198.179 201.577 198.019 201.138 198.019 200.583 cv
198.019 200.017 198.172 199.563 198.478 199.226 cv
198.785 198.894 199.206 198.722 199.728 198.722 cv
200.2 198.722 200.57 198.876 200.843 199.175 cv
201.111 199.481 201.251 199.89 201.251 200.405 cv
200.678 200.239 mo
200.671 199.927 200.583 199.679 200.417 199.487 cv
200.245 199.302 200.015 199.206 199.735 199.206 cv
199.417 199.206 199.161 199.302 198.969 199.481 cv
198.779 199.659 198.664 199.915 198.638 200.239 cv
200.678 200.239 li
f
204.209 199.341 mo
204.146 199.302 204.076 199.276 204 199.257 cv
203.922 199.245 203.84 199.231 203.75 199.231 cv
203.425 199.231 203.177 199.341 203.004 199.552 cv
202.827 199.761 202.744 200.06 202.744 200.456 cv
202.744 202.292 li
202.169 202.292 li
202.169 198.806 li
202.744 198.806 li
202.744 199.347 li
202.858 199.136 203.017 198.978 203.208 198.876 cv
203.401 198.772 203.636 198.722 203.917 198.722 cv
203.956 198.722 204 198.728 204.05 198.728 cv
204.095 198.733 204.146 198.741 204.209 198.755 cv
204.209 199.341 li
f
207.034 198.907 mo
207.034 199.448 li
206.868 199.372 206.703 199.308 206.531 199.265 cv
206.352 199.226 206.173 199.2 205.988 199.2 cv
205.702 199.2 205.485 199.245 205.344 199.335 cv
205.205 199.423 205.134 199.55 205.134 199.724 cv
205.134 199.856 205.185 199.958 205.288 200.034 cv
205.389 200.112 205.593 200.188 205.899 200.251 cv
206.096 200.296 li
206.504 200.386 206.792 200.513 206.964 200.667 cv
207.129 200.825 207.219 201.048 207.219 201.329 cv
207.219 201.655 207.091 201.909 206.836 202.095 cv
206.581 202.286 206.224 202.374 205.778 202.374 cv
205.586 202.374 205.396 202.356 205.191 202.325 cv
204.987 202.292 204.777 202.241 204.554 202.165 cv
204.554 201.571 li
204.764 201.687 204.975 201.771 205.179 201.819 cv
205.383 201.878 205.586 201.903 205.791 201.903 cv
206.059 201.903 206.269 201.858 206.416 201.771 cv
206.556 201.681 206.632 201.546 206.632 201.374 cv
206.632 201.222 206.575 201.101 206.472 201.017 cv
206.371 200.935 206.141 200.851 205.784 200.774 cv
205.586 200.731 li
205.23 200.653 204.968 200.538 204.815 200.386 cv
204.656 200.233 204.58 200.022 204.58 199.749 cv
204.58 199.423 204.695 199.169 204.923 198.989 cv
205.154 198.812 205.485 198.722 205.917 198.722 cv
206.128 198.722 206.327 198.741 206.517 198.772 cv
206.703 198.806 206.875 198.851 207.034 198.907 cv
f
208.213 201.501 mo
208.87 201.501 li
208.87 202.292 li
208.213 202.292 li
208.213 201.501 li
cp
f
18.334 186.487 mo
20.459 186.487 li
f
18.334 186.487 mo
20.459 186.487 li
@
255.484 186.487 mo
253.359 186.487 li
f
255.484 186.487 mo
253.359 186.487 li
@
15.0239 184.015 mo
14.6987 184.015 14.4565 184.173 14.2905 184.493 cv
14.125 184.812 14.0483 185.29 14.0483 185.927 cv
14.0483 186.563 14.125 187.042 14.2905 187.36 cv
14.4565 187.681 14.6987 187.839 15.0239 187.839 cv
15.3486 187.839 15.5913 187.681 15.7568 187.36 cv
15.916 187.042 15.999 186.563 15.999 185.927 cv
15.999 185.29 15.916 184.812 15.7568 184.493 cv
15.5913 184.173 15.3486 184.015 15.0239 184.015 cv
15.0239 183.517 mo
15.54 183.517 15.9355 183.728 16.2158 184.136 cv
16.4897 184.55 16.6304 185.149 16.6304 185.927 cv
16.6304 186.71 16.4897 187.31 16.2158 187.718 cv
15.9355 188.126 15.54 188.329 15.0239 188.329 cv
14.501 188.329 14.0991 188.126 13.8252 187.718 cv
13.5513 187.31 13.417 186.71 13.417 185.927 cv
13.417 185.149 13.5513 184.55 13.8252 184.136 cv
14.0991 183.728 14.501 183.517 15.0239 183.517 cv
f
18.334 166.087 mo
20.459 166.087 li
f
18.334 166.087 mo
20.459 166.087 li
@
255.484 166.087 mo
253.359 166.087 li
f
255.484 166.087 mo
253.359 166.087 li
@
13.8843 163.2 mo
16.3511 163.2 li
16.3511 163.729 li
14.458 163.729 li
14.458 164.87 li
14.5474 164.839 14.6426 164.813 14.7319 164.8 cv
14.8213 164.786 14.917 164.774 15.0063 164.774 cv
15.5225 164.774 15.9307 164.921 16.2363 165.202 cv
16.5425 165.489 16.6958 165.87 16.6958 166.354 cv
16.6958 166.858 16.5361 167.247 16.2236 167.522 cv
15.9116 167.796 15.4717 167.929 14.9106 167.929 cv
14.7129 167.929 14.5151 167.911 14.3115 167.886 cv
14.1074 167.854 13.9033 167.81 13.6865 167.739 cv
13.6865 167.106 li
13.8716 167.21 14.0625 167.286 14.2666 167.337 cv
14.4644 167.388 14.6748 167.407 14.8979 167.407 cv
15.2549 167.407 15.5415 167.317 15.752 167.126 cv
15.9561 166.935 16.0645 166.681 16.0645 166.354 cv
16.0645 166.036 15.9561 165.78 15.752 165.591 cv
15.5415 165.399 15.2549 165.304 14.8979 165.304 cv
14.7319 165.304 14.5601 165.323 14.394 165.36 cv
14.2285 165.399 14.0562 165.456 13.8843 165.532 cv
13.8843 163.2 li
f
18.334 145.687 mo
20.459 145.687 li
f
18.334 145.687 mo
20.459 145.687 li
@
255.484 145.687 mo
253.359 145.687 li
f
255.484 145.687 mo
253.359 145.687 li
@
10.002 146.917 mo
11.0283 146.917 li
11.0283 143.374 li
9.9126 143.597 li
9.9126 143.022 li
11.022 142.8 li
11.6528 142.8 li
11.6528 146.917 li
12.6792 146.917 li
12.6792 147.446 li
10.002 147.446 li
10.002 146.917 li
cp
f
15.2935 143.214 mo
14.9683 143.214 14.7261 143.374 14.5601 143.692 cv
14.3945 144.011 14.3179 144.489 14.3179 145.126 cv
14.3179 145.765 14.3945 146.243 14.5601 146.562 cv
14.7261 146.88 14.9683 147.04 15.2935 147.04 cv
15.6182 147.04 15.8608 146.88 16.0264 146.562 cv
16.1855 146.243 16.2686 145.765 16.2686 145.126 cv
16.2686 144.489 16.1855 144.011 16.0264 143.692 cv
15.8608 143.374 15.6182 143.214 15.2935 143.214 cv
15.2935 142.716 mo
15.8096 142.716 16.2051 142.927 16.4854 143.335 cv
16.7593 143.749 16.8999 144.349 16.8999 145.126 cv
16.8999 145.911 16.7593 146.511 16.4854 146.919 cv
16.2051 147.325 15.8096 147.53 15.2935 147.53 cv
14.7705 147.53 14.3687 147.325 14.0947 146.919 cv
13.8208 146.511 13.687 145.911 13.687 145.126 cv
13.687 144.349 13.8208 143.749 14.0947 143.335 cv
14.3687 142.927 14.7705 142.716 15.2935 142.716 cv
f
18.334 125.288 mo
20.459 125.288 li
f
18.334 125.288 mo
20.459 125.288 li
@
255.484 125.288 mo
253.359 125.288 li
f
255.484 125.288 mo
253.359 125.288 li
@
10.1348 126.519 mo
11.1611 126.519 li
11.1611 122.974 li
10.0454 123.196 li
10.0454 122.624 li
11.1548 122.399 li
11.7856 122.399 li
11.7856 126.519 li
12.812 126.519 li
12.812 127.046 li
10.1348 127.046 li
10.1348 126.519 li
cp
f
14.0874 122.399 mo
16.5542 122.399 li
16.5542 122.929 li
14.6611 122.929 li
14.6611 124.069 li
14.7505 124.038 14.8457 124.013 14.9351 124.001 cv
15.0244 123.987 15.1201 123.976 15.2095 123.976 cv
15.7256 123.976 16.1338 124.12 16.4395 124.401 cv
16.7456 124.688 16.8984 125.071 16.8984 125.556 cv
16.8984 126.06 16.7393 126.448 16.4268 126.722 cv
16.1147 126.995 15.6748 127.13 15.1138 127.13 cv
14.916 127.13 14.7183 127.11 14.5142 127.085 cv
14.3105 127.054 14.1064 127.009 13.8896 126.938 cv
13.8896 126.308 li
14.0747 126.409 14.2656 126.485 14.4697 126.536 cv
14.6675 126.589 14.8779 126.608 15.1011 126.608 cv
15.458 126.608 15.7446 126.519 15.9551 126.327 cv
16.1592 126.136 16.2676 125.88 16.2676 125.556 cv
16.2676 125.237 16.1592 124.981 15.9551 124.79 cv
15.7446 124.599 15.458 124.503 15.1011 124.503 cv
14.9351 124.503 14.7632 124.522 14.5972 124.562 cv
14.4316 124.599 14.2593 124.657 14.0874 124.733 cv
14.0874 122.399 li
f
18.334 104.888 mo
20.459 104.888 li
f
18.334 104.888 mo
20.459 104.888 li
@
255.484 104.888 mo
253.359 104.888 li
f
255.484 104.888 mo
253.359 104.888 li
@
10.2031 106.119 mo
12.396 106.119 li
12.396 106.648 li
9.44434 106.648 li
9.44434 106.119 li
9.68018 105.876 10.0054 105.544 10.4199 105.125 cv
10.8276 104.709 11.0894 104.442 11.1978 104.32 cv
11.4014 104.097 11.542 103.906 11.6182 103.748 cv
11.6948 103.593 11.7393 103.435 11.7393 103.281 cv
11.7393 103.039 11.6504 102.835 11.478 102.682 cv
11.3062 102.529 11.083 102.447 10.8022 102.447 cv
10.6045 102.447 10.394 102.484 10.1777 102.548 cv
9.96094 102.619 9.7251 102.72 9.47607 102.861 cv
9.47607 102.223 li
9.73145 102.121 9.96729 102.044 10.1841 101.994 cv
10.4009 101.943 10.6045 101.917 10.7896 101.917 cv
11.2676 101.917 11.6504 102.039 11.937 102.281 cv
12.2241 102.523 12.3706 102.841 12.3706 103.244 cv
12.3706 103.435 12.3325 103.619 12.2622 103.785 cv
12.1919 103.957 12.0645 104.161 11.8735 104.39 cv
11.8223 104.455 11.6567 104.626 11.376 104.914 cv
11.0957 105.2 10.7065 105.602 10.2031 106.119 cv
f
15.061 102.415 mo
14.7358 102.415 14.4937 102.574 14.3276 102.892 cv
14.1621 103.211 14.0854 103.689 14.0854 104.328 cv
14.0854 104.964 14.1621 105.443 14.3276 105.761 cv
14.4937 106.08 14.7358 106.24 15.061 106.24 cv
15.3857 106.24 15.6284 106.08 15.7939 105.761 cv
15.9531 105.443 16.0361 104.964 16.0361 104.328 cv
16.0361 103.689 15.9531 103.211 15.7939 102.892 cv
15.6284 102.574 15.3857 102.415 15.061 102.415 cv
15.061 101.917 mo
15.5771 101.917 15.9727 102.128 16.2529 102.536 cv
16.5269 102.951 16.6675 103.549 16.6675 104.328 cv
16.6675 105.111 16.5269 105.71 16.2529 106.119 cv
15.9727 106.526 15.5771 106.73 15.061 106.73 cv
14.5381 106.73 14.1362 106.526 13.8623 106.119 cv
13.5884 105.71 13.4546 105.111 13.4546 104.328 cv
13.4546 103.549 13.5884 102.951 13.8623 102.536 cv
14.1362 102.128 14.5381 101.917 15.061 101.917 cv
f
18.334 84.4878 mo
20.459 84.4878 li
f
18.334 84.4878 mo
20.459 84.4878 li
@
255.484 84.4878 mo
253.359 84.4878 li
f
255.484 84.4878 mo
253.359 84.4878 li
@
10.3359 85.7183 mo
12.5288 85.7183 li
12.5288 86.2476 li
9.57715 86.2476 li
9.57715 85.7183 li
9.81299 85.4761 10.1382 85.144 10.5527 84.7241 cv
10.9604 84.3101 11.2222 84.0425 11.3306 83.9214 cv
11.5342 83.6968 11.6748 83.5063 11.751 83.3472 cv
11.8276 83.1938 11.8721 83.0347 11.8721 82.8813 cv
11.8721 82.6392 11.7832 82.4351 11.6108 82.2827 cv
11.439 82.1294 11.2158 82.0464 10.9351 82.0464 cv
10.7373 82.0464 10.5269 82.0845 10.3105 82.1479 cv
10.0938 82.2183 9.85791 82.3198 9.60889 82.4604 cv
9.60889 81.8237 li
9.86426 81.7212 10.1001 81.644 10.3169 81.5933 cv
10.5337 81.5425 10.7373 81.5171 10.9224 81.5171 cv
11.4004 81.5171 11.7832 81.6382 12.0698 81.8804 cv
12.3569 82.1226 12.5034 82.4409 12.5034 82.8433 cv
12.5034 83.0347 12.4653 83.2192 12.395 83.3853 cv
12.3247 83.5571 12.1973 83.7612 12.0063 83.9907 cv
11.9551 84.0542 11.7896 84.2261 11.5088 84.5132 cv
11.2285 84.8003 10.8394 85.2026 10.3359 85.7183 cv
f
13.855 81.6001 mo
16.3218 81.6001 li
16.3218 82.1284 li
14.4287 82.1284 li
14.4287 83.27 li
14.5181 83.2378 14.6133 83.2124 14.7026 83.2007 cv
14.792 83.187 14.8877 83.1753 14.9771 83.1753 cv
15.4932 83.1753 15.9014 83.3218 16.207 83.6011 cv
16.5132 83.8882 16.666 84.271 16.666 84.7554 cv
16.666 85.2593 16.5068 85.6479 16.1943 85.9224 cv
15.8823 86.1968 15.4424 86.3296 14.8813 86.3296 cv
14.6836 86.3296 14.4858 86.311 14.2817 86.2856 cv
14.0781 86.2534 13.874 86.2085 13.6572 86.1382 cv
13.6572 85.5073 li
13.8423 85.6099 14.0332 85.687 14.2373 85.7378 cv
14.4351 85.7886 14.6455 85.8081 14.8687 85.8081 cv
15.2256 85.8081 15.5122 85.7183 15.7227 85.5269 cv
15.9268 85.3354 16.0352 85.0806 16.0352 84.7554 cv
16.0352 84.437 15.9268 84.1812 15.7227 83.9907 cv
15.5122 83.7993 15.2256 83.7036 14.8687 83.7036 cv
14.7026 83.7036 14.5308 83.7222 14.3647 83.7612 cv
14.1992 83.7993 14.0269 83.8569 13.855 83.9331 cv
13.855 81.6001 li
f
18.334 64.0874 mo
20.459 64.0874 li
f
18.334 64.0874 mo
20.459 64.0874 li
@
255.484 64.0874 mo
253.359 64.0874 li
f
255.484 64.0874 mo
253.359 64.0874 li
@
11.5923 63.3418 mo
11.8916 63.4058 12.1274 63.5396 12.2935 63.7437 cv
12.459 63.9478 12.5483 64.2026 12.5483 64.4961 cv
12.5483 64.9551 12.3892 65.312 12.0767 65.5605 cv
11.7578 65.8091 11.3115 65.9302 10.7314 65.9302 cv
10.5337 65.9302 10.3301 65.9111 10.126 65.873 cv
9.92188 65.8408 9.70508 65.7837 9.48828 65.707 cv
9.48828 65.1016 li
9.66064 65.2036 9.85156 65.2803 10.062 65.3311 cv
10.2661 65.3818 10.4829 65.4077 10.7124 65.4077 cv
11.1074 65.4077 11.4072 65.3311 11.6113 65.1782 cv
11.8154 65.0249 11.9238 64.7954 11.9238 64.4961 cv
11.9238 64.228 11.8281 64.0117 11.6367 63.8584 cv
11.4453 63.7056 11.1777 63.6226 10.8335 63.6226 cv
10.2915 63.6226 li
10.2915 63.1064 li
10.8589 63.1064 li
11.165 63.1064 11.4009 63.0488 11.5669 62.9214 cv
11.7324 62.8003 11.8154 62.6216 11.8154 62.3857 cv
11.8154 62.1499 11.7261 61.9648 11.5601 61.8374 cv
11.3882 61.71 11.146 61.6465 10.8335 61.6465 cv
10.6616 61.6465 10.4766 61.6655 10.2788 61.7036 cv
10.0811 61.7422 9.86475 61.7993 9.62842 61.876 cv
9.62842 61.3149 li
9.86475 61.251 10.0874 61.2002 10.2979 61.168 cv
10.502 61.1362 10.6997 61.1172 10.8911 61.1172 cv
11.3628 61.1172 11.7388 61.2256 12.019 61.4424 cv
12.2998 61.6592 12.4399 61.9521 12.4399 62.3223 cv
12.4399 62.5771 12.3638 62.7939 12.2168 62.9722 cv
12.0703 63.1509 11.8599 63.2783 11.5923 63.3418 cv
f
15.0854 61.6143 mo
14.7607 61.6143 14.5186 61.7739 14.3525 62.0928 cv
14.187 62.4111 14.1104 62.8896 14.1104 63.5269 cv
14.1104 64.1646 14.187 64.6426 14.3525 64.9614 cv
14.5186 65.2803 14.7607 65.4395 15.0854 65.4395 cv
15.4106 65.4395 15.6528 65.2803 15.8188 64.9614 cv
15.978 64.6426 16.061 64.1646 16.061 63.5269 cv
16.061 62.8896 15.978 62.4111 15.8188 62.0928 cv
15.6528 61.7739 15.4106 61.6143 15.0854 61.6143 cv
15.0854 61.1172 mo
15.6021 61.1172 15.9976 61.3276 16.2778 61.7354 cv
16.5518 62.1499 16.6924 62.749 16.6924 63.5269 cv
16.6924 64.311 16.5518 64.9102 16.2778 65.3184 cv
15.9976 65.7266 15.6021 65.9302 15.0854 65.9302 cv
14.563 65.9302 14.1611 65.7266 13.8872 65.3184 cv
13.6133 64.9102 13.479 64.311 13.479 63.5269 cv
13.479 62.749 13.6133 62.1499 13.8872 61.7354 cv
14.1611 61.3276 14.563 61.1172 15.0854 61.1172 cv
f
18.334 43.6875 mo
20.459 43.6875 li
f
18.334 43.6875 mo
20.459 43.6875 li
@
255.484 43.6875 mo
253.359 43.6875 li
f
255.484 43.6875 mo
253.359 43.6875 li
@
11.7251 42.9424 mo
12.0244 43.0059 12.2603 43.1396 12.4263 43.3438 cv
12.5918 43.5479 12.6812 43.8027 12.6812 44.0962 cv
12.6812 44.5552 12.522 44.9121 12.2095 45.1606 cv
11.8906 45.4092 11.4443 45.5303 10.8643 45.5303 cv
10.6665 45.5303 10.4629 45.5112 10.2588 45.4731 cv
10.0547 45.4414 9.83789 45.3838 9.62109 45.3071 cv
9.62109 44.7017 li
9.79346 44.8037 9.98438 44.8799 10.1948 44.9312 cv
10.3989 44.9819 10.6157 45.0078 10.8452 45.0078 cv
11.2402 45.0078 11.54 44.9312 11.7441 44.7783 cv
11.9482 44.625 12.0566 44.3955 12.0566 44.0962 cv
12.0566 43.8281 11.9609 43.6113 11.7695 43.4585 cv
11.5781 43.3057 11.3105 43.2227 10.9663 43.2227 cv
10.4243 43.2227 li
10.4243 42.7061 li
10.9917 42.7061 li
11.2979 42.7061 11.5337 42.6489 11.6997 42.5215 cv
11.8652 42.4004 11.9482 42.2217 11.9482 41.9858 cv
11.9482 41.75 11.8589 41.5649 11.6929 41.4375 cv
11.521 41.3101 11.2788 41.2466 10.9663 41.2466 cv
10.7944 41.2466 10.6094 41.2656 10.4116 41.3037 cv
10.2139 41.3418 9.99756 41.3994 9.76123 41.4761 cv
9.76123 40.915 li
9.99756 40.8511 10.2202 40.8003 10.4307 40.7681 cv
10.6348 40.7363 10.8325 40.7173 11.0239 40.7173 cv
11.4956 40.7173 11.8716 40.8257 12.1519 41.0425 cv
12.4326 41.2593 12.5728 41.5522 12.5728 41.9219 cv
12.5728 42.1772 12.4966 42.394 12.3496 42.5723 cv
12.2031 42.751 11.9927 42.8784 11.7251 42.9424 cv
f
13.8799 40.7998 mo
16.3467 40.7998 li
16.3467 41.3291 li
14.4536 41.3291 li
14.4536 42.4702 li
14.543 42.4385 14.6382 42.4131 14.7275 42.4004 cv
14.8169 42.3872 14.9126 42.3745 15.002 42.3745 cv
15.5181 42.3745 15.9263 42.5215 16.2319 42.8018 cv
16.5381 43.0889 16.6909 43.4712 16.6909 43.9556 cv
16.6909 44.4595 16.5317 44.8481 16.2192 45.1221 cv
15.9072 45.3965 15.4673 45.5303 14.9063 45.5303 cv
14.7085 45.5303 14.5107 45.5112 14.3071 45.4858 cv
14.103 45.4536 13.8989 45.4092 13.6821 45.3389 cv
13.6821 44.708 li
13.8672 44.8101 14.0581 44.8862 14.2622 44.9375 cv
14.46 44.9883 14.6704 45.0073 14.8936 45.0073 cv
15.2505 45.0073 15.5371 44.9185 15.7476 44.7271 cv
15.9517 44.5356 16.0601 44.2808 16.0601 43.9556 cv
16.0601 43.6367 15.9517 43.3818 15.7476 43.1904 cv
15.5371 42.9995 15.2505 42.9038 14.8936 42.9038 cv
14.7275 42.9038 14.5557 42.9229 14.3896 42.9609 cv
14.2241 42.9995 14.0518 43.0566 13.8799 43.1333 cv
13.8799 40.7998 li
f
18.334 23.2876 mo
20.459 23.2876 li
f
18.334 23.2876 mo
20.459 23.2876 li
@
255.484 23.2876 mo
253.359 23.2876 li
f
255.484 23.2876 mo
253.359 23.2876 li
@
11.2393 20.9482 mo
9.65186 23.4282 li
11.2393 23.4282 li
11.2393 20.9482 li
11.0737 20.3999 mo
11.8643 20.3999 li
11.8643 23.4282 li
12.5269 23.4282 li
12.5269 23.9507 li
11.8643 23.9507 li
11.8643 25.0474 li
11.2393 25.0474 li
11.2393 23.9507 li
9.14209 23.9507 li
9.14209 23.3452 li
11.0737 20.3999 li
cp
f
14.9116 20.8145 mo
14.5864 20.8145 14.3442 20.9736 14.1782 21.2925 cv
14.0127 21.6113 13.936 22.0894 13.936 22.7266 cv
13.936 23.3643 14.0127 23.8423 14.1782 24.1611 cv
14.3442 24.48 14.5864 24.6392 14.9116 24.6392 cv
15.2363 24.6392 15.479 24.48 15.6445 24.1611 cv
15.8037 23.8423 15.8867 23.3643 15.8867 22.7266 cv
15.8867 22.0894 15.8037 21.6113 15.6445 21.2925 cv
15.479 20.9736 15.2363 20.8145 14.9116 20.8145 cv
14.9116 20.3169 mo
15.4277 20.3169 15.8232 20.5273 16.1035 20.9355 cv
16.3774 21.3496 16.5181 21.9492 16.5181 22.7266 cv
16.5181 23.5107 16.3774 24.1104 16.1035 24.5181 cv
15.8232 24.9263 15.4277 25.1304 14.9116 25.1304 cv
14.3887 25.1304 13.9868 24.9263 13.7129 24.5181 cv
13.439 24.1104 13.3047 23.5107 13.3047 22.7266 cv
13.3047 21.9492 13.439 21.3496 13.7129 20.9355 cv
13.9868 20.5273 14.3887 20.3169 14.9116 20.3169 cv
f
18.334 2.8877 mo
20.459 2.8877 li
f
18.334 2.8877 mo
20.459 2.8877 li
@
255.484 2.8877 mo
253.359 2.8877 li
f
255.484 2.8877 mo
253.359 2.8877 li
@
11.3721 .54834 mo
9.78467 3.02832 li
11.3721 3.02832 li
11.3721 .54834 li
11.2065 0 mo
11.9971 0 li
11.9971 3.02832 li
12.6597 3.02832 li
12.6597 3.55078 li
11.9971 3.55078 li
11.9971 4.64746 li
11.3721 4.64746 li
11.3721 3.55078 li
9.2749 3.55078 li
9.2749 2.94531 li
11.2065 0 li
cp
f
13.7056 0 mo
16.1724 0 li
16.1724 .529297 li
14.2793 .529297 li
14.2793 1.67041 li
14.3687 1.63867 14.4639 1.61279 14.5532 1.6001 cv
14.6426 1.5874 14.7383 1.57471 14.8276 1.57471 cv
15.3438 1.57471 15.752 1.72119 16.0576 2.00195 cv
16.3638 2.28857 16.5166 2.67139 16.5166 3.15576 cv
16.5166 3.65918 16.3574 4.04834 16.0449 4.32227 cv
15.7329 4.59668 15.293 4.73047 14.7319 4.73047 cv
14.5342 4.73047 14.3364 4.71094 14.1328 4.68555 cv
13.9287 4.65381 13.7246 4.60938 13.5078 4.53906 cv
13.5078 3.9082 li
13.6929 4.00977 13.8838 4.08643 14.0879 4.1377 cv
14.2856 4.18848 14.4961 4.20752 14.7192 4.20752 cv
15.0762 4.20752 15.3628 4.11816 15.5732 3.92725 cv
15.7773 3.73584 15.8857 3.48096 15.8857 3.15576 cv
15.8857 2.83691 15.7773 2.58203 15.5732 2.39063 cv
15.3628 2.19922 15.0762 2.104 14.7192 2.104 cv
14.5532 2.104 14.3813 2.12305 14.2153 2.16113 cv
14.0498 2.19922 13.8774 2.25684 13.7056 2.3335 cv
13.7056 0 li
f
.714355 165.665 mo
2.46094 165.665 li
2.46094 164.874 li
2.46094 164.581 2.39063 164.358 2.23779 164.198 cv
2.08496 164.04 1.86816 163.956 1.5874 163.956 cv
1.30713 163.956 1.09668 164.04 .943848 164.198 cv
.790527 164.358 .714355 164.581 .714355 164.874 cv
.714355 165.665 li
.197754 166.296 mo
.197754 164.874 li
.197754 164.358 .318848 163.962 .554688 163.694 cv
.790527 163.427 1.13477 163.294 1.5874 163.294 cv
2.04639 163.294 2.39697 163.427 2.62695 163.694 cv
2.86279 163.962 2.97754 164.358 2.97754 164.874 cv
2.97754 165.665 li
4.84521 165.665 li
4.84521 166.296 li
.197754 166.296 li
f
2.9585 159.495 mo
3.23877 159.495 li
3.23877 162.126 li
3.63379 162.101 3.93994 161.985 4.14404 161.769 cv
4.34814 161.56 4.4502 161.267 4.4502 160.884 cv
4.4502 160.667 4.42432 160.45 4.37354 160.245 cv
4.32275 160.042 4.23975 159.833 4.125 159.628 cv
4.66699 159.628 li
4.75586 159.833 4.82617 160.042 4.86426 160.259 cv
4.90283 160.476 4.92822 160.698 4.92822 160.915 cv
4.92822 161.476 4.76855 161.917 4.4502 162.241 cv
4.13135 162.565 3.69141 162.726 3.13672 162.726 cv
2.56934 162.726 2.1167 162.573 1.77881 162.267 cv
1.44727 161.962 1.27539 161.54 1.27539 161.017 cv
1.27539 160.546 1.42822 160.175 1.72803 159.901 cv
2.03369 159.634 2.44189 159.495 2.9585 159.495 cv
2.79248 160.067 mo
2.47998 160.075 2.23145 160.163 2.04004 160.329 cv
1.85547 160.501 1.75977 160.729 1.75977 161.011 cv
1.75977 161.329 1.85547 161.585 2.03369 161.776 cv
2.2124 161.968 2.46729 162.081 2.79248 162.108 cv
2.79248 160.067 li
f
.370117 157.989 mo
1.35791 157.989 li
1.35791 156.81 li
1.8042 156.81 li
1.8042 157.989 li
3.69775 157.989 li
3.98438 157.989 4.16943 157.952 4.24609 157.874 cv
4.32861 157.798 4.36719 157.64 4.36719 157.397 cv
4.36719 156.81 li
4.84521 156.81 li
4.84521 157.397 li
4.84521 157.843 4.76221 158.149 4.59668 158.313 cv
4.43066 158.481 4.13135 158.563 3.69775 158.563 cv
1.8042 158.563 li
1.8042 158.983 li
1.35791 158.983 li
1.35791 158.563 li
.370117 158.563 li
.370117 157.989 li
f
2.9585 153.073 mo
3.23877 153.073 li
3.23877 155.706 li
3.63379 155.681 3.93994 155.567 4.14404 155.351 cv
4.34814 155.14 4.4502 154.847 4.4502 154.464 cv
4.4502 154.247 4.42432 154.03 4.37354 153.827 cv
4.32275 153.622 4.23975 153.413 4.125 153.208 cv
4.66699 153.208 li
4.75586 153.413 4.82617 153.622 4.86426 153.839 cv
4.90283 154.056 4.92822 154.28 4.92822 154.497 cv
4.92822 155.056 4.76855 155.497 4.4502 155.821 cv
4.13135 156.147 3.69141 156.306 3.13672 156.306 cv
2.56934 156.306 2.1167 156.153 1.77881 155.849 cv
1.44727 155.542 1.27539 155.12 1.27539 154.597 cv
1.27539 154.126 1.42822 153.757 1.72803 153.483 cv
2.03369 153.214 2.44189 153.073 2.9585 153.073 cv
2.79248 153.647 mo
2.47998 153.655 2.23145 153.743 2.04004 153.909 cv
1.85547 154.081 1.75977 154.312 1.75977 154.591 cv
1.75977 154.909 1.85547 155.165 2.03369 155.356 cv
2.2124 155.548 2.46729 155.663 2.79248 155.688 cv
2.79248 153.647 li
f
1.89355 150.116 mo
1.85498 150.181 1.82959 150.251 1.81055 150.327 cv
1.79785 150.403 1.78516 150.485 1.78516 150.575 cv
1.78516 150.901 1.89355 151.149 2.104 151.321 cv
2.31396 151.499 2.61377 151.583 3.00928 151.583 cv
4.84521 151.583 li
4.84521 152.157 li
1.35791 152.157 li
1.35791 151.583 li
1.8999 151.583 li
1.68945 151.468 1.53027 151.308 1.42822 151.118 cv
1.32617 150.925 1.2749 150.69 1.2749 150.409 cv
1.2749 150.37 1.28125 150.327 1.28125 150.276 cv
1.2876 150.231 1.29443 150.181 1.30713 150.116 cv
1.89355 150.116 li
f
.714355 146.833 mo
2.46094 146.833 li
2.46094 146.042 li
2.46094 145.749 2.39063 145.526 2.23779 145.366 cv
2.08496 145.208 1.86816 145.124 1.5874 145.124 cv
1.30713 145.124 1.09668 145.208 .943848 145.366 cv
.790527 145.526 .714355 145.749 .714355 146.042 cv
.714355 146.833 li
.197754 147.464 mo
.197754 146.042 li
.197754 145.526 .318848 145.132 .554688 144.864 cv
.790527 144.595 1.13477 144.462 1.5874 144.462 cv
2.04639 144.462 2.39697 144.595 2.62695 144.864 cv
2.86279 145.132 2.97754 145.526 2.97754 146.042 cv
2.97754 146.833 li
4.84521 146.833 li
4.84521 147.464 li
.197754 147.464 li
f
2.9585 140.663 mo
3.23877 140.663 li
3.23877 143.296 li
3.63379 143.271 3.93994 143.155 4.14404 142.938 cv
4.34814 142.728 4.4502 142.435 4.4502 142.052 cv
4.4502 141.835 4.42432 141.618 4.37354 141.415 cv
4.32275 141.21 4.23975 141.001 4.125 140.796 cv
4.66699 140.796 li
4.75586 141.001 4.82617 141.21 4.86426 141.427 cv
4.90283 141.644 4.92822 141.866 4.92822 142.083 cv
4.92822 142.644 4.76855 143.085 4.4502 143.409 cv
4.13135 143.735 3.69141 143.894 3.13672 143.894 cv
2.56934 143.894 2.1167 143.741 1.77881 143.435 cv
1.44727 143.13 1.27539 142.708 1.27539 142.187 cv
1.27539 141.714 1.42822 141.345 1.72803 141.069 cv
2.03369 140.802 2.44189 140.663 2.9585 140.663 cv
2.79248 141.235 mo
2.47998 141.243 2.23145 141.331 2.04004 141.497 cv
1.85547 141.669 1.75977 141.899 1.75977 142.179 cv
1.75977 142.499 1.85547 142.753 2.03369 142.944 cv
2.2124 143.136 2.46729 143.251 2.79248 143.276 cv
2.79248 141.235 li
f
4.32227 139.171 mo
6.16504 139.171 li
6.16504 139.743 li
1.35791 139.743 li
1.35791 139.171 li
1.88721 139.171 li
1.68311 139.056 1.53027 138.903 1.42822 138.718 cv
1.32617 138.534 1.27539 138.31 1.27539 138.054 cv
1.27539 137.634 1.44727 137.29 1.77881 137.022 cv
2.1167 136.761 2.55664 136.626 3.10498 136.626 cv
3.65332 136.626 4.09912 136.761 4.43066 137.022 cv
4.76221 137.29 4.92822 137.634 4.92822 138.054 cv
4.92822 138.31 4.87695 138.534 4.78125 138.718 cv
4.68604 138.903 4.53271 139.056 4.32227 139.171 cv
3.10498 137.22 mo
2.68408 137.22 2.35889 137.31 2.1167 137.481 cv
1.87451 137.659 1.75342 137.896 1.75342 138.194 cv
1.75342 138.501 1.87451 138.737 2.1167 138.909 cv
2.35889 139.087 2.68408 139.171 3.10498 139.171 cv
3.52539 139.171 3.85693 139.087 4.09912 138.909 cv
4.3418 138.737 4.45654 138.501 4.45654 138.194 cv
4.45654 137.896 4.3418 137.659 4.09912 137.481 cv
3.85693 137.31 3.52539 137.22 3.10498 137.22 cv
f
4.32227 135.122 mo
6.16504 135.122 li
6.16504 135.696 li
1.35791 135.696 li
1.35791 135.122 li
1.88721 135.122 li
1.68311 135.007 1.53027 134.854 1.42822 134.669 cv
1.32617 134.485 1.27539 134.263 1.27539 134.007 cv
1.27539 133.585 1.44727 133.241 1.77881 132.974 cv
2.1167 132.712 2.55664 132.579 3.10498 132.579 cv
3.65332 132.579 4.09912 132.712 4.43066 132.974 cv
4.76221 133.241 4.92822 133.585 4.92822 134.007 cv
4.92822 134.263 4.87695 134.485 4.78125 134.669 cv
4.68604 134.854 4.53271 135.007 4.32227 135.122 cv
3.10498 133.171 mo
2.68408 133.171 2.35889 133.261 2.1167 133.433 cv
1.87451 133.61 1.75342 133.847 1.75342 134.147 cv
1.75342 134.452 1.87451 134.688 2.1167 134.86 cv
2.35889 135.04 2.68408 135.122 3.10498 135.122 cv
3.52539 135.122 3.85693 135.04 4.09912 134.86 cv
4.3418 134.688 4.45654 134.452 4.45654 134.147 cv
4.45654 133.847 4.3418 133.61 4.09912 133.433 cv
3.85693 133.261 3.52539 133.171 3.10498 133.171 cv
f
2.9585 128.646 mo
3.23877 128.646 li
3.23877 131.278 li
3.63379 131.253 3.93994 131.138 4.14404 130.921 cv
4.34814 130.71 4.4502 130.417 4.4502 130.034 cv
4.4502 129.817 4.42432 129.603 4.37354 129.397 cv
4.32275 129.194 4.23975 128.983 4.125 128.778 cv
4.66699 128.778 li
4.75586 128.983 4.82617 129.194 4.86426 129.411 cv
4.90283 129.628 4.92822 129.851 4.92822 130.067 cv
4.92822 130.628 4.76855 131.067 4.4502 131.394 cv
4.13135 131.718 3.69141 131.878 3.13672 131.878 cv
2.56934 131.878 2.1167 131.724 1.77881 131.419 cv
1.44727 131.112 1.27539 130.692 1.27539 130.169 cv
1.27539 129.696 1.42822 129.327 1.72803 129.054 cv
2.03369 128.786 2.44189 128.646 2.9585 128.646 cv
2.79248 129.22 mo
2.47998 129.226 2.23145 129.315 2.04004 129.479 cv
1.85547 129.653 1.75977 129.882 1.75977 130.163 cv
1.75977 130.481 1.85547 130.735 2.03369 130.927 cv
2.2124 131.118 2.46729 131.233 2.79248 131.259 cv
2.79248 129.22 li
f
1.89355 125.687 mo
1.85498 125.751 1.82959 125.821 1.81055 125.897 cv
1.79785 125.974 1.78516 126.058 1.78516 126.146 cv
1.78516 126.472 1.89355 126.72 2.104 126.892 cv
2.31396 127.071 2.61377 127.153 3.00928 127.153 cv
4.84521 127.153 li
4.84521 127.728 li
1.35791 127.728 li
1.35791 127.153 li
1.8999 127.153 li
1.68945 127.038 1.53027 126.88 1.42822 126.688 cv
1.32617 126.497 1.2749 126.261 1.2749 125.981 cv
1.2749 125.942 1.28125 125.897 1.28125 125.847 cv
1.2876 125.802 1.29443 125.751 1.30713 125.687 cv
1.89355 125.687 li
f
4.32227 122.507 mo
6.16504 122.507 li
6.16504 123.081 li
1.35791 123.081 li
1.35791 122.507 li
1.88721 122.507 li
1.68311 122.392 1.53027 122.239 1.42822 122.054 cv
1.32617 121.868 1.27539 121.646 1.27539 121.39 cv
1.27539 120.97 1.44727 120.626 1.77881 120.358 cv
2.1167 120.097 2.55664 119.962 3.10498 119.962 cv
3.65332 119.962 4.09912 120.097 4.43066 120.358 cv
4.76221 120.626 4.92822 120.97 4.92822 121.39 cv
4.92822 121.646 4.87695 121.868 4.78125 122.054 cv
4.68604 122.239 4.53271 122.392 4.32227 122.507 cv
3.10498 120.556 mo
2.68408 120.556 2.35889 120.646 2.1167 120.817 cv
1.87451 120.995 1.75342 121.231 1.75342 121.53 cv
1.75342 121.837 1.87451 122.073 2.1167 122.245 cv
2.35889 122.423 2.68408 122.507 3.10498 122.507 cv
3.52539 122.507 3.85693 122.423 4.09912 122.245 cv
4.3418 122.073 4.45654 121.837 4.45654 121.53 cv
4.45654 121.231 4.3418 120.995 4.09912 120.817 cv
3.85693 120.646 3.52539 120.556 3.10498 120.556 cv
f
1.35791 118.439 mo
4.84473 118.439 li
4.84473 119.013 li
1.35791 119.013 li
1.35791 118.439 li
cp
0 118.439 mo
.726563 118.439 li
.726563 119.013 li
0 119.013 li
0 118.439 li
cp
f
1.4917 114.729 mo
2.02734 114.729 li
1.93799 114.895 1.87451 115.054 1.82959 115.22 cv
1.78516 115.385 1.75977 115.544 1.75977 115.71 cv
1.75977 116.082 1.88086 116.375 2.1167 116.578 cv
2.35254 116.782 2.68408 116.884 3.10498 116.884 cv
3.53174 116.884 3.86328 116.782 4.09912 116.578 cv
4.33496 116.375 4.44971 116.082 4.44971 115.71 cv
4.44971 115.544 4.43066 115.385 4.38623 115.22 cv
4.34131 115.054 4.27148 114.895 4.18213 114.729 cv
4.71143 114.729 li
4.7876 114.895 4.84521 115.06 4.87695 115.226 cv
4.90869 115.399 4.92822 115.583 4.92822 115.775 cv
4.92822 116.296 4.76855 116.718 4.43701 117.024 cv
4.11182 117.335 3.66602 117.49 3.10498 117.49 cv
2.5376 117.49 2.09131 117.335 1.76611 117.024 cv
1.44092 116.711 1.27539 116.285 1.27539 115.736 cv
1.27539 115.558 1.29443 115.385 1.33252 115.22 cv
1.37061 115.054 1.42188 114.888 1.4917 114.729 cv
f
0 113.753 mo
0 113.179 li
2.8623 113.179 li
1.35791 111.471 li
1.35791 110.738 li
2.98975 112.587 li
4.84521 110.662 li
4.84521 111.408 li
3.14307 113.179 li
4.84521 113.179 li
4.84521 113.753 li
0 113.753 li
cp
f
2.9585 107.06 mo
3.23877 107.06 li
3.23877 109.693 li
3.63379 109.667 3.93994 109.552 4.14404 109.335 cv
4.34814 109.125 4.4502 108.832 4.4502 108.45 cv
4.4502 108.233 4.42432 108.016 4.37354 107.812 cv
4.32275 107.609 4.23975 107.398 4.125 107.194 cv
4.66699 107.194 li
4.75586 107.398 4.82617 107.609 4.86426 107.826 cv
4.90283 108.042 4.92822 108.265 4.92822 108.482 cv
4.92822 109.042 4.76855 109.482 4.4502 109.808 cv
4.13135 110.132 3.69141 110.292 3.13672 110.292 cv
2.56934 110.292 2.1167 110.139 1.77881 109.833 cv
1.44727 109.527 1.27539 109.107 1.27539 108.583 cv
1.27539 108.112 1.42822 107.742 1.72803 107.468 cv
2.03369 107.201 2.44189 107.06 2.9585 107.06 cv
2.79248 107.634 mo
2.47998 107.64 2.23145 107.73 2.04004 107.895 cv
1.85547 108.068 1.75977 108.296 1.75977 108.578 cv
1.75977 108.896 1.85547 109.151 2.03369 109.342 cv
2.2124 109.533 2.46729 109.648 2.79248 109.673 cv
2.79248 107.634 li
f
1.88721 103.828 mo
0 103.828 li
0 103.253 li
4.84521 103.253 li
4.84521 103.828 li
4.32227 103.828 li
4.53271 103.949 4.68604 104.102 4.78125 104.287 cv
4.87695 104.472 4.92822 104.689 4.92822 104.943 cv
4.92822 105.365 4.76221 105.708 4.43066 105.976 cv
4.09912 106.244 3.65332 106.372 3.10498 106.372 cv
2.55664 106.372 2.1167 106.244 1.77881 105.976 cv
1.44727 105.708 1.27539 105.365 1.27539 104.943 cv
1.27539 104.689 1.32617 104.472 1.42822 104.287 cv
1.53027 104.102 1.68311 103.949 1.88721 103.828 cv
3.10498 105.779 mo
3.52539 105.779 3.85693 105.696 4.09912 105.523 cv
4.3418 105.351 4.45654 105.109 4.45654 104.803 cv
4.45654 104.503 4.3418 104.267 4.09912 104.089 cv
3.85693 103.917 3.52539 103.828 3.10498 103.828 cv
2.68408 103.828 2.35889 103.917 2.1167 104.089 cv
1.87451 104.267 1.75342 104.503 1.75342 104.803 cv
1.75342 105.109 1.87451 105.351 2.1167 105.523 cv
2.35889 105.696 2.68408 105.779 3.10498 105.779 cv
f
3.09229 98.4604 mo
3.09229 98.9253 3.14941 99.2446 3.25146 99.4233 cv
3.35986 99.6011 3.53857 99.6909 3.79346 99.6909 cv
3.99756 99.6909 4.16309 99.6265 4.27783 99.4927 cv
4.39893 99.3589 4.45654 99.1743 4.45654 98.9448 cv
4.45654 98.6265 4.34814 98.3706 4.11865 98.1792 cv
3.89551 97.9878 3.5957 97.8931 3.21973 97.8931 cv
3.09229 97.8931 li
3.09229 98.4604 li
2.85645 97.3198 mo
4.84521 97.3198 li
4.84521 97.8931 li
4.31592 97.8931 li
4.53271 98.0269 4.68604 98.1929 4.78174 98.3833 cv
4.87695 98.5757 4.92822 98.8179 4.92822 99.0972 cv
4.92822 99.4546 4.83252 99.7417 4.63477 99.9526 cv
4.4375 100.162 4.16943 100.265 3.83154 100.265 cv
3.44287 100.265 3.14941 100.136 2.94531 99.8687 cv
2.74805 99.6069 2.646 99.2183 2.646 98.6958 cv
2.646 97.8931 li
2.58838 97.8931 li
2.32715 97.8931 2.12305 97.9819 1.97656 98.1538 cv
1.83643 98.3267 1.75977 98.5679 1.75977 98.8804 cv
1.75977 99.0854 1.78516 99.2759 1.83643 99.4683 cv
1.88721 99.6587 1.95752 99.8374 2.04688 100.009 cv
1.51758 100.009 li
1.44092 99.8042 1.37744 99.6011 1.33887 99.4038 cv
1.30078 99.2056 1.27539 99.0151 1.27539 98.8237 cv
1.27539 98.3198 1.40918 97.9429 1.67041 97.6948 cv
1.93213 97.4468 2.32715 97.3198 2.85645 97.3198 cv
f
4.32227 93.5581 mo
6.16504 93.5581 li
6.16504 94.1313 li
1.35791 94.1313 li
1.35791 93.5581 li
1.88721 93.5581 li
1.68311 93.4429 1.53027 93.2905 1.42822 93.105 cv
1.32617 92.9194 1.27539 92.6968 1.27539 92.4419 cv
1.27539 92.021 1.44727 91.6772 1.77881 91.4097 cv
2.1167 91.1479 2.55664 91.0142 3.10498 91.0142 cv
3.65332 91.0142 4.09912 91.1479 4.43066 91.4097 cv
4.76221 91.6772 4.92822 92.021 4.92822 92.4419 cv
4.92822 92.6968 4.87695 92.9194 4.78125 93.105 cv
4.68604 93.2905 4.53271 93.4429 4.32227 93.5581 cv
3.10498 91.6069 mo
2.68408 91.6069 2.35889 91.6968 2.1167 91.8687 cv
1.87451 92.0464 1.75342 92.2827 1.75342 92.5815 cv
1.75342 92.8882 1.87451 93.1245 2.1167 93.2964 cv
2.35889 93.4741 2.68408 93.5581 3.10498 93.5581 cv
3.52539 93.5581 3.85693 93.4741 4.09912 93.2964 cv
4.3418 93.1245 4.45654 92.8882 4.45654 92.5815 cv
4.45654 92.2827 4.3418 92.0464 4.09912 91.8687 cv
3.85693 91.6968 3.52539 91.6069 3.10498 91.6069 cv
f
2.9585 87.0806 mo
3.23877 87.0806 li
3.23877 89.7144 li
3.63379 89.688 3.93994 89.5737 4.14404 89.3569 cv
4.34814 89.146 4.4502 88.853 4.4502 88.4702 cv
4.4502 88.2534 4.42432 88.0366 4.37354 87.8335 cv
4.32275 87.6284 4.23975 87.4185 4.125 87.2144 cv
4.66699 87.2144 li
4.75586 87.4185 4.82617 87.6284 4.86426 87.8452 cv
4.90283 88.062 4.92822 88.2856 4.92822 88.5024 cv
4.92822 89.064 4.76855 89.5034 4.4502 89.8276 cv
4.13135 90.1538 3.69141 90.313 3.13672 90.313 cv
2.56934 90.313 2.1167 90.1597 1.77881 89.854 cv
1.44727 89.5483 1.27539 89.1265 1.27539 88.605 cv
1.27539 88.1323 1.42822 87.7632 1.72803 87.4888 cv
2.03369 87.2212 2.44189 87.0806 2.9585 87.0806 cv
2.79248 87.6538 mo
2.47998 87.6616 2.23145 87.7495 2.04004 87.9155 cv
1.85547 88.0874 1.75977 88.3179 1.75977 88.5981 cv
1.75977 88.9175 1.85547 89.1714 2.03369 89.3628 cv
2.2124 89.5542 2.46729 89.6694 2.79248 89.6948 cv
2.79248 87.6538 li
f
1.4917 83.6323 mo
2.02734 83.6323 li
1.93799 83.7974 1.87451 83.9565 1.82959 84.1226 cv
1.78516 84.2886 1.75977 84.4478 1.75977 84.6128 cv
1.75977 84.9839 1.88086 85.2769 2.1167 85.48 cv
2.35254 85.6851 2.68408 85.7866 3.10498 85.7866 cv
3.53174 85.7866 3.86328 85.6851 4.09912 85.48 cv
4.33496 85.2769 4.44971 84.9839 4.44971 84.6128 cv
4.44971 84.4478 4.43066 84.2886 4.38623 84.1226 cv
4.34131 83.9565 4.27148 83.7974 4.18213 83.6323 cv
4.71143 83.6323 li
4.7876 83.7974 4.84521 83.9634 4.87695 84.1284 cv
4.90869 84.3013 4.92822 84.4858 4.92822 84.6772 cv
4.92822 85.2007 4.76855 85.6206 4.43701 85.9272 cv
4.11182 86.2397 3.66602 86.3921 3.10498 86.3921 cv
2.5376 86.3921 2.09131 86.2397 1.76611 85.9272 cv
1.44092 85.6147 1.27539 85.187 1.27539 84.6392 cv
1.27539 84.4604 1.29443 84.2886 1.33252 84.1226 cv
1.37061 83.9565 1.42188 83.7905 1.4917 83.6323 cv
f
0 82.6558 mo
0 82.0825 li
2.8623 82.0825 li
1.35791 80.3745 li
1.35791 79.6411 li
2.98975 81.4897 li
4.84521 79.564 li
4.84521 80.3101 li
3.14307 82.0825 li
4.84521 82.0825 li
4.84521 82.6558 li
0 82.6558 li
cp
f
1.75977 75.5674 mo
1.75977 75.8735 1.88086 76.1157 2.12305 76.2944 cv
2.36523 76.4727 2.69043 76.562 3.10498 76.562 cv
3.52539 76.562 3.85059 76.479 4.09277 76.3008 cv
4.33496 76.1221 4.44971 75.8799 4.44971 75.5674 cv
4.44971 75.2617 4.33496 75.0195 4.09277 74.8408 cv
3.85059 74.6621 3.52539 74.5732 3.10498 74.5732 cv
2.69678 74.5732 2.36523 74.6621 2.12305 74.8408 cv
1.88086 75.0195 1.75977 75.2617 1.75977 75.5674 cv
1.2749 75.5674 mo
1.2749 75.0703 1.44092 74.6816 1.75977 74.3945 cv
2.08496 74.1143 2.53076 73.9673 3.10498 73.9673 cv
3.67871 73.9673 4.12451 74.1143 4.44336 74.3945 cv
4.76855 74.6816 4.92822 75.0703 4.92822 75.5674 cv
4.92822 76.0713 4.76855 76.4663 4.44336 76.7471 cv
4.12451 77.0273 3.67871 77.168 3.10498 77.168 cv
2.53076 77.168 2.08496 77.0273 1.75977 76.7471 cv
1.44092 76.4663 1.2749 76.0713 1.2749 75.5674 cv
f
0 71.252 mo
.478027 71.252 li
.478027 71.7998 li
.478027 72.0039 .522949 72.1504 .605957 72.2271 cv
.688477 72.3101 .835449 72.3481 1.05176 72.3481 cv
1.35791 72.3481 li
1.35791 71.4048 li
1.8042 71.4048 li
1.8042 72.3481 li
4.84521 72.3481 li
4.84521 72.9219 li
1.8042 72.9219 li
1.8042 73.4702 li
1.35791 73.4702 li
1.35791 72.9219 li
1.11572 72.9219 li
.733398 72.9219 .446289 72.8325 .268066 72.6543 cv
.0893555 72.4756 0 72.189 0 71.7935 cv
0 71.252 li
f
4.32227 68.1919 mo
6.16504 68.1919 li
6.16504 68.7656 li
1.35791 68.7656 li
1.35791 68.1919 li
1.88721 68.1919 li
1.68311 68.0771 1.53027 67.9238 1.42822 67.7393 cv
1.32617 67.5542 1.27539 67.3311 1.27539 67.0762 cv
1.27539 66.6553 1.44727 66.311 1.77881 66.0435 cv
2.1167 65.7822 2.55664 65.6484 3.10498 65.6484 cv
3.65332 65.6484 4.09912 65.7822 4.43066 66.0435 cv
4.76221 66.311 4.92822 66.6553 4.92822 67.0762 cv
4.92822 67.3311 4.87695 67.5542 4.78125 67.7393 cv
4.68604 67.9238 4.53271 68.0771 4.32227 68.1919 cv
3.10498 66.2412 mo
2.68408 66.2412 2.35889 66.3301 2.1167 66.5024 cv
1.87451 66.6807 1.75342 66.917 1.75342 67.2163 cv
1.75342 67.5225 1.87451 67.7583 2.1167 67.9307 cv
2.35889 68.1089 2.68408 68.1919 3.10498 68.1919 cv
3.52539 68.1919 3.85693 68.1089 4.09912 67.9307 cv
4.3418 67.7583 4.45654 67.5225 4.45654 67.2163 cv
4.45654 66.917 4.3418 66.6807 4.09912 66.5024 cv
3.85693 66.3301 3.52539 66.2412 3.10498 66.2412 cv
f
1.35791 64.124 mo
4.84473 64.124 li
4.84473 64.6982 li
1.35791 64.6982 li
1.35791 64.124 li
cp
0 64.124 mo
.726563 64.124 li
.726563 64.6982 li
0 64.6982 li
0 64.124 li
cp
f
1.4917 60.4141 mo
2.02734 60.4141 li
1.93799 60.5801 1.87451 60.7393 1.82959 60.9053 cv
1.78516 61.0708 1.75977 61.2305 1.75977 61.396 cv
1.75977 61.7656 1.88086 62.0591 2.1167 62.2632 cv
2.35254 62.4668 2.68408 62.5688 3.10498 62.5688 cv
3.53174 62.5688 3.86328 62.4668 4.09912 62.2632 cv
4.33496 62.0591 4.44971 61.7656 4.44971 61.396 cv
4.44971 61.2305 4.43066 61.0708 4.38623 60.9053 cv
4.34131 60.7393 4.27148 60.5801 4.18213 60.4141 cv
4.71143 60.4141 li
4.7876 60.5801 4.84521 60.7456 4.87695 60.9116 cv
4.90869 61.0835 4.92822 61.2686 4.92822 61.46 cv
4.92822 61.9824 4.76855 62.4033 4.43701 62.709 cv
4.11182 63.0215 3.66602 63.1748 3.10498 63.1748 cv
2.5376 63.1748 2.09131 63.0215 1.76611 62.709 cv
1.44092 62.397 1.27539 61.9697 1.27539 61.4214 cv
1.27539 61.2432 1.29443 61.0708 1.33252 60.9053 cv
1.37061 60.7393 1.42188 60.5737 1.4917 60.4141 cv
f
0 59.439 mo
0 58.8652 li
2.8623 58.8652 li
1.35791 57.1567 li
1.35791 56.4233 li
2.98975 58.2725 li
4.84521 56.3472 li
4.84521 57.0928 li
3.14307 58.8652 li
4.84521 58.8652 li
4.84521 59.439 li
0 59.439 li
cp
f
0 55.1548 mo
4.84473 55.1548 li
4.84473 55.7285 li
0 55.7285 li
0 55.1548 li
cp
f
2.9585 50.9727 mo
3.23877 50.9727 li
3.23877 53.606 li
3.63379 53.5801 3.93994 53.4653 4.14404 53.249 cv
4.34814 53.0386 4.4502 52.7451 4.4502 52.3628 cv
4.4502 52.146 4.42432 51.9292 4.37354 51.7251 cv
4.32275 51.521 4.23975 51.3105 4.125 51.1069 cv
4.66699 51.1069 li
4.75586 51.3105 4.82617 51.521 4.86426 51.7378 cv
4.90283 51.9546 4.92822 52.1777 4.92822 52.3945 cv
4.92822 52.9556 4.76855 53.3955 4.4502 53.7207 cv
4.13135 54.0459 3.69141 54.2051 3.13672 54.2051 cv
2.56934 54.2051 2.1167 54.0518 1.77881 53.7461 cv
1.44727 53.4399 1.27539 53.0195 1.27539 52.4966 cv
1.27539 52.0249 1.42822 51.6553 1.72803 51.3809 cv
2.03369 51.1133 2.44189 50.9727 2.9585 50.9727 cv
2.79248 51.5469 mo
2.47998 51.5527 2.23145 51.6421 2.04004 51.8081 cv
1.85547 51.98 1.75977 52.2095 1.75977 52.4902 cv
1.75977 52.8091 1.85547 53.064 2.03369 53.2549 cv
2.2124 53.4463 2.46729 53.561 2.79248 53.5864 cv
2.79248 51.5469 li
f
1.88721 47.7407 mo
0 47.7407 li
0 47.167 li
4.84521 47.167 li
4.84521 47.7407 li
4.32227 47.7407 li
4.53271 47.8618 4.68604 48.0146 4.78125 48.1997 cv
4.87695 48.3848 4.92822 48.6016 4.92822 48.8564 cv
4.92822 49.2773 4.76221 49.6211 4.43066 49.8892 cv
4.09912 50.1567 3.65332 50.2842 3.10498 50.2842 cv
2.55664 50.2842 2.1167 50.1567 1.77881 49.8892 cv
1.44727 49.6211 1.27539 49.2773 1.27539 48.8564 cv
1.27539 48.6016 1.32617 48.3848 1.42822 48.1997 cv
1.53027 48.0146 1.68311 47.8618 1.88721 47.7407 cv
3.10498 49.6914 mo
3.52539 49.6914 3.85693 49.6084 4.09912 49.4365 cv
4.3418 49.2646 4.45654 49.022 4.45654 48.7163 cv
4.45654 48.4165 4.3418 48.1807 4.09912 48.002 cv
3.85693 47.8301 3.52539 47.7407 3.10498 47.7407 cv
2.68408 47.7407 2.35889 47.8301 2.1167 48.002 cv
1.87451 48.1807 1.75342 48.4165 1.75342 48.7163 cv
1.75342 49.022 1.87451 49.2646 2.1167 49.4365 cv
2.35889 49.6084 2.68408 49.6914 3.10498 49.6914 cv
f
1.4917 41.4487 mo
2.02734 41.4487 li
1.93799 41.6143 1.87451 41.7739 1.82959 41.9395 cv
1.78516 42.1055 1.75977 42.2646 1.75977 42.4307 cv
1.75977 42.8003 1.88086 43.0938 2.1167 43.2974 cv
2.35254 43.5015 2.68408 43.6035 3.10498 43.6035 cv
3.53174 43.6035 3.86328 43.5015 4.09912 43.2974 cv
4.33496 43.0938 4.44971 42.8003 4.44971 42.4307 cv
4.44971 42.2646 4.43066 42.1055 4.38623 41.9395 cv
4.34131 41.7739 4.27148 41.6143 4.18213 41.4487 cv
4.71143 41.4487 li
4.7876 41.6143 4.84521 41.7803 4.87695 41.9458 cv
4.90869 42.1182 4.92822 42.3027 4.92822 42.4941 cv
4.92822 43.0171 4.76855 43.4375 4.43701 43.7437 cv
4.11182 44.0562 3.66602 44.209 3.10498 44.209 cv
2.5376 44.209 2.09131 44.0562 1.76611 43.7437 cv
1.44092 43.4316 1.27539 43.0044 1.27539 42.4561 cv
1.27539 42.2773 1.29443 42.1055 1.33252 41.9395 cv
1.37061 41.7739 1.42188 41.6079 1.4917 41.4487 cv
f
3.09229 38.8667 mo
3.09229 39.332 3.14941 39.6509 3.25146 39.8291 cv
3.35986 40.0078 3.53857 40.0972 3.79346 40.0972 cv
3.99756 40.0972 4.16309 40.0332 4.27783 39.8994 cv
4.39893 39.7656 4.45654 39.5806 4.45654 39.3511 cv
4.45654 39.0322 4.34814 38.7773 4.11865 38.5859 cv
3.89551 38.395 3.5957 38.2993 3.21973 38.2993 cv
3.09229 38.2993 li
3.09229 38.8667 li
2.85645 37.7256 mo
4.84521 37.7256 li
4.84521 38.2993 li
4.31592 38.2993 li
4.53271 38.4331 4.68604 38.5991 4.78174 38.79 cv
4.87695 38.9814 4.92822 39.2236 4.92822 39.5044 cv
4.92822 39.8613 4.83252 40.1479 4.63477 40.3584 cv
4.4375 40.5688 4.16943 40.6709 3.83154 40.6709 cv
3.44287 40.6709 3.14941 40.5435 2.94531 40.2754 cv
2.74805 40.0142 2.646 39.6255 2.646 39.1025 cv
2.646 38.2993 li
2.58838 38.2993 li
2.32715 38.2993 2.12305 38.3887 1.97656 38.5605 cv
1.83643 38.7329 1.75977 38.9751 1.75977 39.2876 cv
1.75977 39.4912 1.78516 39.6826 1.83643 39.874 cv
1.88721 40.0654 1.95752 40.2437 2.04688 40.416 cv
1.51758 40.416 li
1.44092 40.2119 1.37744 40.0078 1.33887 39.8101 cv
1.30078 39.6123 1.27539 39.4214 1.27539 39.23 cv
1.27539 38.7266 1.40918 38.3506 1.67041 38.1016 cv
1.93213 37.853 2.32715 37.7256 2.85645 37.7256 cv
f
4.32227 35.9917 mo
6.16504 35.9917 li
6.16504 36.5654 li
1.35791 36.5654 li
1.35791 35.9917 li
1.88721 35.9917 li
1.68311 35.877 1.53027 35.7236 1.42822 35.5391 cv
1.32617 35.354 1.27539 35.1309 1.27539 34.876 cv
1.27539 34.4551 1.44727 34.1108 1.77881 33.8433 cv
2.1167 33.582 2.55664 33.4478 3.10498 33.4478 cv
3.65332 33.4478 4.09912 33.582 4.43066 33.8433 cv
4.76221 34.1108 4.92822 34.4551 4.92822 34.876 cv
4.92822 35.1309 4.87695 35.354 4.78125 35.5391 cv
4.68604 35.7236 4.53271 35.877 4.32227 35.9917 cv
3.10498 34.041 mo
2.68408 34.041 2.35889 34.1299 2.1167 34.3022 cv
1.87451 34.4805 1.75342 34.7168 1.75342 35.0161 cv
1.75342 35.3223 1.87451 35.5581 2.1167 35.73 cv
2.35889 35.9087 2.68408 35.9917 3.10498 35.9917 cv
3.52539 35.9917 3.85693 35.9087 4.09912 35.73 cv
4.3418 35.5581 4.45654 35.3223 4.45654 35.0161 cv
4.45654 34.7168 4.3418 34.4805 4.09912 34.3022 cv
3.85693 34.1299 3.52539 34.041 3.10498 34.041 cv
f
2.9585 29.5146 mo
3.23877 29.5146 li
3.23877 32.1475 li
3.63379 32.1221 3.93994 32.0073 4.14404 31.7905 cv
4.34814 31.5801 4.4502 31.2866 4.4502 30.9043 cv
4.4502 30.6875 4.42432 30.4707 4.37354 30.2666 cv
4.32275 30.063 4.23975 29.8525 4.125 29.6484 cv
4.66699 29.6484 li
4.75586 29.8525 4.82617 30.063 4.86426 30.2793 cv
4.90283 30.4961 4.92822 30.7192 4.92822 30.936 cv
4.92822 31.4971 4.76855 31.937 4.4502 32.2622 cv
4.13135 32.5874 3.69141 32.7466 3.13672 32.7466 cv
2.56934 32.7466 2.1167 32.5938 1.77881 32.2876 cv
1.44727 31.9814 1.27539 31.561 1.27539 31.0381 cv
1.27539 30.5664 1.42822 30.1968 1.72803 29.9224 cv
2.03369 29.6548 2.44189 29.5146 2.9585 29.5146 cv
2.79248 30.0884 mo
2.47998 30.0947 2.23145 30.1841 2.04004 30.3496 cv
1.85547 30.522 1.75977 30.7515 1.75977 31.0317 cv
1.75977 31.3506 1.85547 31.6055 2.03369 31.7969 cv
2.2124 31.9883 2.46729 32.1025 2.79248 32.1284 cv
2.79248 30.0884 li
f
1.89355 26.5566 mo
1.85498 26.6201 1.82959 26.6904 1.81055 26.7671 cv
1.79785 26.8438 1.78516 26.9263 1.78516 27.0156 cv
1.78516 27.3408 1.89355 27.5894 2.104 27.7617 cv
2.31396 27.9399 2.61377 28.0229 3.00928 28.0229 cv
4.84521 28.0229 li
4.84521 28.5967 li
1.35791 28.5967 li
1.35791 28.0229 li
1.8999 28.0229 li
1.68945 27.9082 1.53027 27.749 1.42822 27.5576 cv
1.32617 27.3662 1.2749 27.1304 1.2749 26.8496 cv
1.2749 26.8115 1.28125 26.7671 1.28125 26.7158 cv
1.2876 26.6714 1.29443 26.6201 1.30713 26.5566 cv
1.89355 26.5566 li
f
1.45996 23.7324 mo
2.00195 23.7324 li
1.92529 23.8984 1.86182 24.064 1.81689 24.2363 cv
1.77881 24.4146 1.75342 24.5933 1.75342 24.7783 cv
1.75342 25.0649 1.79785 25.2817 1.88721 25.4219 cv
1.97656 25.562 2.104 25.6323 2.27588 25.6323 cv
2.40967 25.6323 2.51172 25.5811 2.58838 25.4795 cv
2.66504 25.3774 2.74121 25.1733 2.80518 24.8672 cv
2.84961 24.6699 li
2.93896 24.2617 3.06641 23.9746 3.21924 23.8027 cv
3.37891 23.6367 3.60205 23.5479 3.88232 23.5479 cv
4.20752 23.5479 4.4624 23.6753 4.64746 23.9302 cv
4.83887 24.1851 4.92822 24.542 4.92822 24.9883 cv
4.92822 25.1797 4.90869 25.3711 4.87695 25.5752 cv
4.84521 25.7788 4.79395 25.9893 4.71777 26.2124 cv
4.12451 26.2124 li
4.23926 26.002 4.32227 25.7915 4.37354 25.5879 cv
4.43066 25.3838 4.45605 25.1797 4.45605 24.9756 cv
4.45605 24.708 4.41162 24.4976 4.32227 24.3511 cv
4.23291 24.2109 4.09912 24.1343 3.92725 24.1343 cv
3.77393 24.1343 3.65283 24.1914 3.57031 24.2935 cv
3.4873 24.3955 3.4043 24.625 3.32764 24.9819 cv
3.2832 25.1797 li
3.20654 25.5366 3.0918 25.7979 2.93896 25.9512 cv
2.78613 26.1104 2.57568 26.187 2.30127 26.187 cv
1.97656 26.187 1.72119 26.0723 1.54297 25.8428 cv
1.36426 25.6133 1.2749 25.2817 1.2749 24.8481 cv
1.2749 24.6377 1.29443 24.4404 1.32617 24.249 cv
1.35791 24.064 1.40283 23.8921 1.45996 23.7324 cv
f
4.05518 21.8965 mo
4.8457 21.8965 li
4.8457 22.5527 li
4.05518 22.5527 li
4.05518 21.8965 li
cp
f
.53125 lw
18.334 186.487 mo
18.334 2.8877 li
@
18.334 2.8877 mo
255.484 2.8877 li
@
18.334 186.487 mo
255.484 186.487 li
@
255.484 186.487 mo
255.484 2.8877 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (006x006.eps)%%CreationDate: 26/05/15 5:58 PM%%Canvassize: 16383%AI9_DataStream%Gb",KH!`$]e*-`3Hj<JFEIls_G6DnmNr,t-*9E!,JFh!tJ)&A!;b9#A2n]:ahKe7-cMRm?3aJ^a<@X8+.`l9]gY],:U\2(Krc9M?%)d6F1jg:oKBjK:gg$DJo[,1D?akN[96c$EEl5D.Sj],MCcmr;VZ:kqF=)Pd%J(@j&PA^9*hWpH\c$$S*PV2o7D5@cDDs0bM^"KL$%I\a9g?2^bNB\"^$mUrr"7T^r:b0&2qGGA;&qYklAGF-aXD$*mg_RM4E#RS?Qh[+P:p"K>HeP?b)H>WBi4mp,go*Kn2X7uLi"c*:!%;-,fkfbZ));#9)9h.chidHc"WrC4ElOJ>g!gRZZ*pB/)]U&PO(8Xm.TSt4It43_NTNgZY7H<s+;i_TQEQ:-_NV%a"p!.J'I_K6^9%Gujs?;?+s?HDb)Oe[pK%`GY^WnNWtoZDL2+q'8a2^ROoa7B=g+e>WGR$&];J[<`Kd`nmmUX)G?K#QarN"jX1)[sB,f]A<C>[P+I/%VZnDuKBch:0&[jNE87G%cJ+\Qb!eZRe!@-=s(oeL_uGT[(mUCeNE%Cu:P'Ce!"K5o.*`,3eoA1hen?X<ks\#g1>M:UC0ZFhP.&F:%VE\u*s4bj!KM^1\I_Xa6KHm$;*HF9*PWq8T'qE#`2/?22LgdT@n0/WPLmh&6%'=QX?X68CVJ792r0cF>Wt23VTms'LT8!B=[LJk*%Oon]apoCFa<)qnVWfj9F$G9*i1(5RB)">^&TTikM.Dr)`*1XGHAS`=.fJ[CNr.S%W%Ahu%HpXf1#tgITn7JX&:J)o];lRR]9#WLB%m7IPR="<8O68>1#cpMOn:Z5%2\Vg"e5+r[t#sP$s[)m#2Gm5jP:FH;sJkp'h_[5ldZjAqT(UOH3!>FE*_$hoI:M;]b"Xp_al6P.1%og:0A(OSQ;8d/U_I"67SA&:[O-28a(P*QdH$13C(;EI_CaN,err]quH+++,:,!jXlnr-*Jr^&&IT-Id](%Nua%mJqg[#W3L4pg<N%JPRZtm=S1Y7A;)]YG?WGdEqufgsI36AqW@bFXT]Rk4")3S59`\'=p`J"LB=+;Sr57AY=1+AjYhAD:31i'\Wea:l=Hq[#a^0]F1?.%#$RA93h#I.*Psg7"4;!VLE0Z?ZjeE2RR2,4knf@R$/Z&3K^5F?_De.CObhIE69CEPC+%ZUqrBd57jo`JP@ub73T1F`:r30frpno@%hFV:LhTC22_^DVa7(XJQkP>F%Euf:I3g[.iAM+4\aPeDWc+2f[lHnkH9CS*'AQcnMi%M?m1B"+!j9biZrkZqbs7fsl09t(1!o\XN%5LUmmq-W^=ZH-t-EpC*s^LE<fiIAtabt[bus!@\CflEKGpg<T1CQ&,QJ&sp3r?M"UA-\_pY2m(`Mu6$2;m_^b=3?\4WTZt%dM;>K%BLVq)aU!u#r&74'ED$f>XUN^Mn?9HAoRC"1)J#.2lcYH'QI0?EBYe'/-@_jdqR9]tUTj2#r.]i^i._1\A^F<R(K$4L+]$KEg\GH]%$s"Y8:&5q,9d%f#G:A1)1;)`-RCS#UAWXK/Dqa^1T`P*,BSL.g>?>gfk]<Ou3cH25"Bl-d=TocN@9Jqj'ZRWHE#QkB$l/P*\u*>O%r0Ds)@-mA(ik4QN*.@*1L1lUM#oop0SWqb&!<4Mi3A@Tr'Eu3`dlIpSs08^mI@(g3IAT(]#&Xj`_qU45D>7"2+e3OsWE>OSn."st%nS+1ccJKp/lF]FJ=%\hqbXIq>&\-uNFSrkUi>*S>a^rK>ZIhJfD^^C:`6((d`>3O*/!>^HoFcpd?rsRT.4_\gk>5.n`.&_k:j<MI%>SO-b[Ra&2NJaA^!]Jss:h+BG)Z!J[GgJC?;huS3^l8(:6VHsY,*mG@Q`'W/6&>VD#ToTuMDhWl'KP-;)W@Nq3cAH0d(W$2XXgp+%PV_kWVp40aH.1.J8#&X/Jau7'*23H^UqMp`c_Ogt(bK=%CJI)/\?7QXP_47a.8UBC]])F'`MKg40Wh3p1V2(n;kL(/WcZ5.*1a;j%N!i51dYP&'4,^LDPVTY`-">9K2kAE0Q5uQ\ZD?<d/@?1lk20M;U^.l3lS^au>)K^hAPsbL6sRg13nR,8AOuV>m3`a@;RCp0Mlu?*%4Wl=q\E:W$Lis6NJbE!pi4U-/XU&cDn499ORtH#/aBKE>ku\h=86`,Mr'^!iVZs(=kb<!8HWK*+9Z,nB@'c8[S8h5fLm?HkX8pXJ%@OX-n;[RZZ3Pom,QLi'aq^U0<TmtP=TAsC(<p6Gm\KpfcgMK4sN`%BFK0><%A#R"h44XSM_'kXCrcT#eX(/h=A[R\WeLZV@`Ko-?%6$OC!8e,a\+;3]tKNMQ7g2/#]a4:j7>I;cW'k^Kbr&%^emGj'InCfbj_E5[t+SH3@<7-"R3l8E[Dt24LZ!A!hREnk&H3W#NQN^$`%MYmY$iZ6&nQYibm7+V'>]t?5X+tH>/:k*"#L*I)!6"g_$hWEZ9/hQ:\Dego%O6SXd3?Nf?q2okd)NqlrS`'c9-W5)/SFg?:O*ZLk%i"+e6^.GT7g7[9?nqpIR.WO1!k0W9;qOI8F<#5C(dO28KLg.js9)&+6]N$!H#(hJeA)<ebW.O.c^B\:#p0d+AL+LbE3.uVu.7m`R%aNQ_TSe'i7QIi_CGbuDB3VO@>cgaqC*IZeQS`f!2ik(E%!<9>F92%KoJ[Z9RN;!XL)]4U[L/qgaS6H"!K1cFT7tGGD$UcZ)d;Dq8%Q3RfF/1ak4MiI^)3pof_9ZaP.'),_3mpJa_Ha')'@n7p!s0UUr:X!kK>L)u9\&7+o^)aD[6-?_rZ>iDKhh%bD/;'16TA]_Ni;>7W%[=C<*<V1hUT)7)I#M"[c-;[HLhMubN72HJNk?\(F5BFJ#g(Wki2q^m'.#dWe$1f0>0,gKm9>h:sYjJ/#fpP"mVn=AH$(59bV0&3N%W19GeDCI307!"!n:%;HEkG2^)>m?l]''%KXkW[)PU?'lZa"J]\M\&&oj_uBk5g+Z_iE.Es5JYEC.\_*CD\.i"DE;)Wa9R"C)R5T9%Z\Z$@D%:R*6RPVp52gA<Bp+l7[`>g9IPUp<ELr-H`6ZI8K8c?hcWO5hM(mWP?$EqHc(U$aO]V[0auqB5FthiTfgJo3n'3IM@j;KX%($R\*N1KUMl'2AlYu".+7tk94b%A+d2-=W<hb*93=:FOVX&(2"G-h-:T!@bZa]Z=Wh'":`q"N67)jP<J@$N6bKV)@B-d?T%BY3$u%md.B2[SsNO>5P.f54;NZ;6fc`bHLbX5F7t<!<2BP]@!hFX,Tk,'N(]0mFKbI+aP%+FT+bE?*=3DG<boh"M3.[UY]g2"LJS8D:R'9%eSZ`QoguLDWcli.c7g=sr]j8ZLdrFDLW)M^n+Jeu@JCRB`)Arm!T?n7MQ6XLoObGdWq@3Ho$^;mJOST\H\M.>DL/Ydh0Vqi\(aW3%f):D5VdKpeo)FY0:@JXnitc(M?qn"Y\#*WDs,X2aPn'qt4o?[;03+Ld``oq+H#L@l<T*J=eO5uT;67Mr?eWaon!!($!'.$%qi03>%rTp^o^]#+*%Ckr7dAe?Y`7BoHg]$QT?C1<;HaQem3;`.Z>k3gse=Vg+(2`Et@^ts9aV3=CdJp7Mn"gBgXnI6Jpd]WZ21(+[?hM%a%J&nGo8(Gq3H6H9JCOC;%;eQalI@QJa5)KmCm53qkWRt!,></MOoj?q'*r>F8Jc:k!V=\3mmQjIs&GZ)Y"^<X_CT.@iHcrC1!S*,-%@L>tr3.6pK4K17)8F\DL-SMHlbqhU`0/]u1k2\CBZH4S9E$\rO!CA1)D4h?J^bE'W-1Zj?(81If'T<TKJ-!_?Xj1f*186uJSDQl-%n>l'dgo,Dr_S9YF>r\rfS$(->2SD5<lHNoIkp.1:(JmCHW*H1PDKh.krp80Lahm`0_,7gFa7s9pCUAD`@qY`m%/I5ZIPtE/^`n05%OPZ,or1F!dD19q8G.Oo9Rc/SJs/SMZ(5gpcPr-WX_.UGgXW_#0:4PGH!In(\NTs.M[Y"2O#t4]@Vr<,h$d63,l[,C0ldf:IN2J$/%"jtuVD7k8jJ^=SuBMbo4=R&o&;F3&6?P[JE-FkR[GBuo36kVOBh<I-H;>$4WM@)0js1;auD&<rmIMAu*YM[$Bqt$H64P-cEFW=9e%RdJ^fH7bR]X`gcEcXW&(]ha-ZG#:1\_@;<9gIhY;.[L*[m1W^oGA9EqcLOc>">Q>*DL:j8J,[3BJA#RToj9HOiJ*l1^Up[l]Li,F%fd8Z"n+F]THaNC>88@"C("Mhuruq7,:d6@cs"nKhpZQ5RG$^ATr?'TA9)N(trebM(9*>!&[HK8Nk9R>j/A(#9eXA`$>4^21,QI#$%rj,B5-DDHG/o7uNs.!+!2W,Z4fV5Y8^O3+'hgdL0ie7@8l"@#m;Z7DTS_-K4gA7SuK01Lsm@Yb93R%URGeG>M:i3mo=5W<-PBI2j%l7N7\0:[.M]mBF6HMY;RB0X(0C\4Y\NFnscQQ%q1G87a_C(U\L#!E2e1S*.?NF&McrTg]ArU<e#gFIIE0C<M`7KZWFOd$u,N7aG[%G,*SPXZ+S\VaUDjE1T4,pDQjIIO^PJ9Zo3>VJ5A5MmtIdr"?UO,c4/<d482V*GX']M-mV.Y=O>,l5tl&K1;GiV]PeU&7D@E8jZ/M%,["7BDS"lLV#<fsgOZjP<=q)BZ3:goXqHU5=E(1oD>[2A[3H+-MP8*0'puHifU_DIh,3?C]Hjl8WP1.<;&.P6"46&UVp=WWZK*>g%-^nq@6+#XG,-b/k[Eu"W5PqO[KbQZR7Yt]QJEe;id#kBqeO"35Ze&rU2T[e<6<^Z8q$msa=`$$Bmmub`0nKD=M\'Q*/-N3*LYQ8S%;nOMP3rt61G"6dALaT;!AY[j"G3,f4mFT85_LbJ\RaBN->IF="Pt&5!6(dn:ZheIL7C<c]'#[gN2Ic7\3h`K$Q=7ds/Cq(g7#NdY%-sM_L/_nuHJ;bJ[8\8bW^OhtVe6"OooW,)qf"JtICo-u30=K`+ObIdJ4J`-[J@4*4fdojWVZe'$<t1ttU+T$"n(3^#7mF6KqrpGO%mDW);Cp0PuWZK`!ApZnu_X26.M8hsf]*jmZfE50^DV:<q;NTKOgiVm!M_1Qdot6NU"NU/0\6JcH2BC--&n+$tMOoP5_QV3R-iMbR%\G;c]DZ($XdrW..?<YXB>:["o\8/"CNq;`I3Tk'tGiRS2/8F=_M$.q$]mdZ,p]mf"^%5-=nnoXkRdG3pg-MQ^NR.&?mXCB2GDGip%j81XWPLU`Z4Vp>TZ,.p)^0s7Nh&B@'Jq0;N^\aSjIej`lg@uap]20T7SY@Q60J=-&(K,c7g>Dj@UK(+aqVCk#j"EnHIc96(h*q'H%^%WR6[F_*pUks%h]eLNbW-'#(&,FafUZ^%-?DlWRPkqKTW)p&=%XFU[Xi@4?`SGY+]AI4r%SGWF97>mCa(/%K0E]1f^mTqQ5?dI+%%tk`*WU7nO,*eW@<J49KDRJ$\<7/YJoe2!#;*u9!5MU#a^_TOI",RH>BdDk&Nfh@-O/p5TE;d3#Xjq3>6;JDXgAN:XSQ6I"`3/U1%rK>22I'qXL#bd\A44kLcD`VeZf"H>u0lPHW*DI8pFeGTN?4sN:a[W`^RX6-9c3lBe+5t2/VNFd3j:7DA;c'/"bA?SQRk49e0<jI^%%G^X@I"RBL/[\FXC?`n2p1[C3e+^2\B?+^h0f3rK=]-M:]?c0ep[o2^hYu290"Bo]Xk.GBO(M%($k#!&^'1"^4I`@a^k")rAW`%1%9)$.IoYO7MU'@h7`'Ol/Leot0Sc!g?-<.(-*#kf6pk][,oNkm/?B9B99W.^Ob[723Wd6A6aj\4)_lm&&mIMQ`c\lN;r0\p0Y1U_*%I.eJRFMHXg?+,S0M@bg._T:ZbCL4#hRJJ@'d(aq#hVHA=7G_FlGC''crN4400*-c5)UN-\R,VJKM$ug/(s1*)5Mu?e$.Ar(;JUHe%5MI_AiR`6NN&TXtbb(Fg\67boBP5.KIkXm8,Tm$TYjYX+\K(%r5+l/m;u;S'cjQbNh0EjmF==@\,hCH4^Xp*6N50`EB!d+_AONfT%DEENJ>_=J2Gsr7noNM2@\.lg&8'nL2dcc0]4'oY4[dAbdA2G^bZ-@L3dR&bFme>P<,N!VWIYQM&:8dFC?kEKZYMZ.p4.TP/,uC[4%g;_:S^l6E&QY6`2oGB6t\5Me(6<PNG7*<uaQEPBB;]9W;(H7@O"hA3O1aT*!\Fc]RrecDe#n#cEAlOGl-.KFcS`f\;Y7J+ckpZo9%(^O/f<Oc)u2;VM6@m/1nS_:5e)7-%hCbuPQp7HTK7)m4`RC\5I1ED9Keho\s(a/=T?`Mqd:'p$n_Nn83K'?o<]3`ZilM^rmo46O`%3P@Q!R9K8i(k'(['$<JM+;o3BSj`ho=j1(Gjf`d:M[&NcGlNNMH,m?=J!*q^'Klr^1rB\/8eC6e]na!-42Por3u;(Tipi3B'^<uP%Q#J)a%6C'SG5$Jq=\,VdW;lQ1rFS0]8sC%EGWl?<eC#E)Q&Z]El7LX=>)VANFk-L_&u+p[GO0k_/6Y\K;[])2ouQ>;USok\nh[\T%g^DqO'8'-J!EWL-G!DeOi^-D=UXp0\Kl74b]u-P*p$`IJPTd\@%C9Y0E%:a0HXUTU:Deq7TmBF:nD/DM.,n,NpIr-]'G]cQ@VeHq%TtHT/TCq><^&,/8b1TAo%Rf\gK&d#k]XRpIe#3_qT?aHde.9qTh<6]]7<a-s'lu`:fK)#cDg/6>Qqubd1_PKM1@+9I')X4aOtc*s%B\m%R86JM#GLHd.!/#qFVu\PcHY[TLKjRGA(4IQ_.T%D"lnOLCSb%\0:m!Og^c>5k"<m"B%8!1L+mAu*,(t4rJrn>s1^5.a&/;F*%8&q4OCKZU"\(Z4P45FT/83;b>^7loRa,mE)H+YE4,DiouW,UO'!i88A"cI#=0Sm\HMVL3GJ;rX0!(G2>;uto$"9N)PZdS9EV3gLU%=omseRf7-KY@#!XUr*&g_Yj7W?\NEU[dmp"AIj6oDtq/S\piMn/H<)d5B\AL=0(GTd`i\WWm%Z<)Xj)a]!Ii./BjW]ZC1NrO-NE,%kgn$1]Jn34kF_Ror:eWBB&W6jS6;'d'reE`1Q/<c1Srk;Xf(e$&TQnCD>j6T:#30UbIBDnDc[^H.rFlMQ"p5r[.@6MV6\qFg?M=N%Tl[TMZ#BBfXIYWWI&27l?#FfRDl*#AjlX4]>$QK@kDEl0etPncCDu1LBjA-JAJQm?G;G0.U6V-rc(@;&/:_SK(7o8e-J/$+Aodjp%"uInZ2GIC8PmZ6u.BAjnS@7N>gIu1PA;<ceogU0Bh/)hGa>`tT5nB)T7MT0XR,0#PB(s#cVrcG2l[+(t4#>-LRP4<7m8R-^^3P/n%JF045S%^>0BU=(th1o82&.!E@LKKPmS\N]%PbgD4RZ(Bp/6)Ib@?c&6WN<"$rJ16s%BB'2qs`.N#cP-&@[pI8'u*A'oR#/S*7WO[%c-@(hr$u'@R-r3m[6&i&G/'[@;mS,UVt[]!+r?qVW?SIJ"B9,0:0Gb)D?!59RsV,T^A5[MdT!Y6;<]WCNuNkPIVk@Y-eelWQ-S_:%BSSn?^$+=f.XP!+%VbJ6K.!hOXPTR805BkTW@goId7R2HAiqj!cHY`'XqZ#]QRuMmoZH:P6hfR1"m^PRYgT?qrM'!dn?)>&nbaf>%;R>laC^*t0b'L'V;FOlu[l!"6YOob\e?7[>(AoZLc)faBI[-e9W*9-_2mZZEp1l0LogYt6dZJIE'9tLtlL\"8p8_/m4?QS^V-oM#%D)EZH+0EFY:o.0+Hf=eK^X?tu3)cG,D`j:_44`dp0!*O1hCQru3mIM`[X(_!h7EWb\150tOUfT()(M0rW-"ro`]Z2E7FdhIDd*b?%DQ<f')O';RXn!<.Bj!KeHa#YuU0:*q]3e2M^Ucq5^6P9Ac_uD[maoca.A5,$7Hs.f2h>`6D<q0rrTNZ-2sX]4j\4tlYgTlP+4U/X%8td#(mC%,Ihc]KQoK^Z-<&RcXr@@:%9a"LCq6W<4a5amP>E>V]p&21GV2&hj:QI^]*dfJd3<%S'</PIbec*/-CR'EBmk*dtf3IsO%o]TB>o@UKNhb'Ma(QhE%ChktV2P1;So]AKoC4,IF<b`X,:1Q7((:R,:94,2,1l?:Ro_i;ad7RcqS>XisD@`ag\5HmMD0EtUdKA`Z%DQ*o,/e![q:VXVAfkGa#ko<^8g@^oO?@.!`<n^oQpTuc0#5T==FRquYFW82ODXV$d"-r"gV5Pu?<SC`#g03cg.\0r'R4q1.lgk%L%X&AnETq`Vkj%@k$V:*)idODEueX%%N.s]n'/_8[:rpF@1p/h:%Zq2cRqN:NVGG8Am4t"6P^%u8a]F0/N@f!@C`1MCJhY`I"08#k1%KCAL#pQSj1A9uGJ!H02#9[B'2o]`Qjl$7#GnrlFbn&+][D7r_MVm:m"c'-t[qnT+q13`R7r:I]!35_A73+bi"Q0I&T^paj:>O+oN%e!K*ebC35Aa,J.#M:\)bJ@DYOl(+)t*dRU'k0*JV^6igis.W<NM'_W>QbB_k__IeHQfWM5bOg(+Q$k)lJtLndQWEq2!KK<U+3ge#%[t"'H3]hmg5;&5G++@!7a$)^;CQCc"UZVPXecVQ4.GEKui7$</bLo08a/1ZA]D$At:Uc4:0D3,YHcl2<*6bZs7[_CN"h^u+86`-9%:7IS^QT\.-c[YT<l-iOZ`S2necC_T/MLNlkT:MHTGMHWAVsCf2a5U#S2%sSVV8]tXpb4LJ,sF=&Ve22A4_/<)oVZ*Z>KSMbff*U,%qs,4cnc5_$(<WO$pp`YfcCP)US5'9FKq\0>:H'<+fptrO<_jLqBHUs,&RoTTKeC+68L?N4C*rSM_P,MK6.<p@Dm7>s\q=bq\\dX$%/2UC7Elb[`Cr(4+d:KDu9'99?[iYX9)O$@$S`ZJ&mdk1%\@i?Q'Fd@CjM4Bab0Qh=^Ii3iJH>AmYH:W89rq;URh@3YN],4:8o)o)%PJ#?#jEpi))#%#@K@di754>"6\!sNmF#SZ8,5//hI[*fL*7#X->?)2d@IEV%;!H4lE(_Q.4j>kP]A&5+%Y9n^gu7)(dZmM_Y>RJ!%_pogP">Ug@,_;545B?1TC#*s4a5<ifOgA'!XaPqj,ip)^5?j93N6/9DXm9KE_??+Qhl5I0Ha/F]Hs`B[,#Z)650n\hUHQ]r=2)<!%\0/5MD,?_G?S"#\QPTA:>%b9e:8dqJ?A4cXf#b%9K_Q-%=L34KIUO/Gm-VD?10`9\W*+7THia=a>?Ug-E7h$&?jGDbJ5_)h[b;ln%>`gdXoJR*Gol?@HS@W>K1urf'MO1$&D6^XtHg;0`(FSG01ed&Gk8`n$TAL<\qgmqOdfKn?S<rsAC_hMN8mXrKoO74bOd+!dU7T)3%OQml>-o:2;/s"Y0!gT/;b/<u95%hGkbMe):Y-ghpakK.<!G#ZH%t@!imgRHIUEqnAg,Bi#5&bm&!p'YCnTYZLq6`@()TaOf$G;9_%AFeO<Y=]M736JtJaN"1@2/E*g/"H(-pmajWdI!#Ya5-J%Z]r^=HZ)Ge\P5k[RiXWY,C1E?gnIf(Q,_DRDHC?k_WT.]?)fuGNDBQC%*k)u5"/oAT=s+oOG>=rX:hstbh7Z]Cg]"l!a7=VIG2qhP9H$KkVQO9t+,2QijKcH`%<S3HOA_[2e#N79I[WlY5hWVc/XPje)['*U%COl]@$/HBZ3B)r=].O>EBqZbQVe1+H1baG3:^^in'ZcZYH[C4ld2f++3$@;.A(cKl`F7aLF8*;W_'-Qsn`t<WU6r=F<@=ra6R=`A%03lR+n8UtQ6<>*1'E_LXfrb3<JNDeD%jXmk`#dEf.U38AZ%=1*iua4.JMP`@rjFIcCYLL*^IBDA7aF#hHN0]ni.Zl@A:@?#[I(aa%/sQl&55mVA@J'[BJj>BZNKl-l,&cVH+$)*$jVoK$D;`KqgOo/-9X2:/g:#a2H\\F3;-cBTL(MmBh[:RkplnYi5`utr+@HCFFA-e]%jC_86I/X/e,2D@*afcHIck6)I\QBgXDP)<:U("np%*6^tj3fL1E'ipD#fpo#-S`_&(?*jkj4I:SC`F*?g(57i\2GOuh1:DuJ'Db^%`)/(BGJ',M.X2k>a#:-Y1N=d#rk5VP4u'KP\U"-2'k<t3I/_T?@5ZYl46uJ:6!WjQ;3T-PRl;#0,B@G!a+i\@S'69fJ(JWeg*f?#%!js.Ki_T)r#mmj<WGGh2\:)P2KFmT]-bA&ZAqomXUZU;@KWac+Wl!q.IWIl^W6'\IV];K&d!NkBiGA.'(GpRk1d^3(J8@([i#V@k%irh4BirRtgmSn2LEYgeY$0K.A,Y^bQpL>.mLOM-*c6DIS\,k5V@K=(.F3XGV$YPVYh4Nd]:Vh7&nRud$0E5f(('LgMZnI](P[M$T%Da!a$j2Wq[kN$a)LU@(e*?2<h3k0+p+r7M4\p0l'?qkf!bMC.f.Jomumc&TM0((emF%)Ds+s]]p-Us(Am.$/g?aF_#'73XI\``\D%"!](oTPRHRAk$JQZ2AsQX5PaQ4rb?p=I8crh8?P`*\/H;*1194#@GW8%2(LCDdZNb,4>'5#7JF.*k(j&@ZcV+MY26g!Lh@3qj,#<%,6i>p;rENi\6\?YDmFjdFJb0A`!Ib[]@-T3Pn*(40mL2",9'Ae*sS:GA^E]@Y$[PPd2ETO%$LUqmi;[hC0E6oBrPoBX0b)F;,3eI%>a%8HhN;`T#%cRW?=9ife,ZRWAG,!f^pOQ=1?Q[tVB<sI7D*%2?)T*jo4;@8C.@!l!Ne\mS7fi#CqhJDC@Z?ghTh)+^X^qKhBg8%%7Q]sr,@ohl[fWSGY*[Wb6`5dG8E%rqp[3,nDLmFH>`Hd+pb^FPh(^/rT-!3OKm9gFGXbf7i)n?R5Olf2Ls3Or)!G8D>,d$oJq[@:%^KJEX>Q]<_>nr>:pF>.(X3$,9hg$Lj;t:7Hp]=UoX$-c.QiL_&/9?SM[,+;j^nUKck#2k%G?g&\(pi`I+dZk\meUB,Mrol3,@k;j%BG]Hu%IY`3>WT#V$gmg^DI]na=ShI4fW]V;/QsVfT$c.r0qOL"TS:Wn[Z4;Um5]'8H"PEJ*EcJY&sa%+]bJ'*bLqT*Aip1#EIbS9%@#*T["cM<DN"C5Gi/RWGX<lBBO2EPZCa4j[D!V'U1U:*Ncuh,V]_37bdWg1#jBUCj(Qb,!>LP8q!O0'RHSM7^$r?(&#S35oSLPK&%i08O)C6iIM6W\M"?#hU(YX"N3rir]T&@HH53uT<q@X-3j`?,Pi';rQK";8uSY-5k*h\/uWYqT"pif&UnEMqBeCm^+8IjOjX#OEIo%=t2W1BF&k"a23(r(rd6<^CM:&0V4F*HbeW"(:*abZI/1@/$'["N.iNt'fm6s%B^BI/BK5(OA"MF\25.G*u<agiSSso9C8\t+qg$'%!PX*:LT^UP[X4#S^NX$4noT^n!djZaXPOt3[OK7+Fn+\;-'DfqYEoL];@Du0&3hfUnMDFNdYis>W=f-#b<7Dm0""T+EF<0(jb$-"%1eCV(YA<%3HUm,_>]\@/]F"Wp^'*7"mm%cJDHf@A]m:?)m06C`ZKfs1rkTG9\<Jp^`KPr*#2HM3MW<q7<.T,OS']Eh/rbZUP2]UX%:Uoq[FBh#$Xm(TmhjFZ6q`%rcpQerurHKNAW%8_78'%4TMOQuR`9EaWLJJ3n6OmCH#$i]?SfG=m8mN<V`*/1m6Pl=[#MF^haIsi,%/LZ73c7DH1TaT2>UY15DkKs$*ati2YZ3?$*TaT2>F3a1j22<eHK9#-/NKupJSj<U)C`GHW?5)GW&+.,<R667BE$uC/,NB&$:aXQ2%9I4EX/^E%$o73L"nBER<U-_BXgHUstY$nDjWCegcdo14Aah*^<pA2OdHj]Fnn&g$ZGP3KpaX9l?BlJD\iDM-d%<$O;V6E/\bZ8(_%_c+D@)BYd6rMj4b8"]_Q@<q#h1%eq"0i@h$op<L*2g==4M!<;4'g*uk__@XE'G\.c,:YB]c9W&515C!'>%+nQql1<"rU<L.Tc\J7%8GH5I^n@qkdMjEI]TmjpLek2;c/Rg*a_j:(+br^69<o9X0ILk61J4U'jeih[I/X8-$/Q"59LD]4k!iR+)-ScX1`c<CJnK@Jc/qIj%MUM*@2S!!_54/"ZkDSW;J^TB'-;$%q:)nSd%`8B]=Sb=)Hc3"I[Hn`]1FI#&N6#cV<lYk#6#U+h.34/5U_i*87HK)GZG6O4Xs*B2%^8"/n"F5AJiV>-jY+Sd6C>)(s*r$Sm;7K/CT*uoX6ccNiQ-^5M#<osVK%dXpK'D;*`g0tu7kb$nb65n\jqq=tSDJM3U/GO=k]3ka%!j\b]7f5aHnELiM(7lkAOCM-X+[g:nP<H6tIC&.olEh4l4VQG6F`J-<l5R(9qi:4*flHF)M?jn<'+m&`.uuH54T"eg@Ggk*fHtr`%479nehcVmSZ58<@aug(Tn5u'eSaaNo6qJasPk4$r6qc`8MEBi)lMH\&(,s;G`)",s>gU,=QlT&'Z$pID5!D2G:h2e770>lbnh8rX%Khjil<ondnBkD=]O,*14RN.H='V6B/Z9%?r@DA>@?9`Bk:ZRT(6<hIZj+$HBHG#k7(6;6G_`Jo0HXM=YA<%DEUB5g@aE"?A&`lBC%&q_H<kAXN->,$gHBSN'9-9al\]nR-\Nl^8d,;Pm<JJ":M*=I\EljXhpEEa9*Iqh(X)0K[C592+p&L/L+2i\nH#fZ-I;?jU+5"@e4%$->:j,*RnJL,O'?#$.el05V\f#t`D[aE\<NliKb)mOf;s98PGKHh("bchim[=l,4^6Oe+&`KM_"oo&Xf&XB&rmhaDlmo5-(CI*SH%XOL)_dKpeR;:ChC7rB5gGD3aqKSDhi=E&A=2^fE3=#]]\@@_i!Fd$4fClk#>iOeblm2cDMN064OcB@lgK:n@KFl&+(-c.nodq!tu%00Tf4&"!4,^1$Tk!nWUTRL]Y2N1,\DSIZMmcXOh?30n49b(putHR'^U/n%67OSNkpfn/80LPrU,j2d!c?Jk7O)DUgA@\6"C;EgV3%>^k5d`gmY'5,$fS*?'3+LZYk$SllTA>MR1@^02NkZ34^5mYU"js0<Y\:LmGEQg2WY_%j")2kW";6"6d/FGsj@<4BF!g!1.l-Q\7[%/=BbIQQ^>)SEMM%nAcZ^/iXu>FN61^??;]58Go^u6,`,EQ[pr+pBaf]\P,AndJ?6F!SOuk-Jroa-QLAM#B%SM/Ok!FV6QNp9X4iF%&W'V0\duXjgjNY(h,32/)j4,EGd+%6,CpNqr:V*:m!n_:Jg4lJ$\L/b83M#gW."6UipERopg7hAL=riM7gk)`UfJk7I+(WAa@NF.%]_D[>P%CFqN@,tDrbEJkWISP")6&]N2NE_q^b^:+.U_dYU]qhA*M'rf2))dgD--dR)7e#5h$k0K]&@dV>V#ekgJLl-r'ms]VnrV[%AZVkMr#GJk'DGp6iVY\omSp]`o?%YDiDQq;)C6,9?q8.sWGpgVTo`K,'=PE6lpUW3B7kk]AL)P-SaWr,ZXT-@``TPJA?enp$JH0W%3i*];)_!luEm/[EE:@%/o\opI@>f3@g*Bt-$lC$lH=9H+nHT;>Rb#a!=l2gFTSa>SGB.?OK)Zl).Kb&ak1]A&G4W$9<1^1>DcQ/'%NQ93;g<%o8Tg)JUS?JD@pcA$;m8eG+\7;&tPrA6;V:&sa+"e]rlSsMo[crdfd[64[)_33&CaF-=HukeMA*LoP;041t/\`>KMW&3A%;Z2"r]96k5-+dH<AD$Q%.^al\5s38,kF9:*G&XF(25nsdcj[PR79c_?H_9!>I#h:m9m2/iVV/)+@KICWO)Hp-fhK`s<]\"$r#(`-%B1u'L);k1>)0Rr_@<lLX@2X7Uo5hZ=Sbr0llL2-R%(ggf0&_lWi(CJ=m^@h[R$YWf/Tpk<W6uaiWe@r6XWDteHG8GbIK,JRYqTqe%#N=d;(7O]:6;#\"o>'j87@fHCq/1M6e$-1.2MBnp0ou:*D[gNH5FHDEn(C7NcD-5=Lq=3U$+n7C/"EQj,e8tWO5+fApa/!cn!Auu%j1It/Da5T6a:X31a5p7X(<L+a@EL<B*-"!+U%c81H&8%5.]f'k+(eV<LqIO,I$h_cq@XN_f0C0E_RNrJ\sY=,,Z!KGK`88_O19q#%DfujO+NBU>k=;4i2.?,n3knq2JNHe"cDL1@GWBtfN\?mI0:+<BachRel%7M;a-fX<A1bik9fGu"3d*EPhrM[FP=NioF#aO`Qd4F]%a,s*ZQV6LS@7JG;o:%\:`h#ofQV5BM?H8@+7iaru/tK?'G'qtbI^sP_%Pt8(3^;lgW:a9!l24UOa.5rf7oDsPB0=jhIe*(nfm'</%3knq2E)128CcXd[WJ&?eZftr%n;`l1k=#Om5;%tMqh,89(*f;$50$.7VXr!-,HGbCbbk!TV=VGNDj5'!56QU!,GSl"$#F%N,saO9%_e7Hoq9CGXJRg!<e+r+R7GKCS6oLU.KL3uJ*\s3[Cp&sp(N3UtaGuYP2o.$5_e.Bn29:-AIA1O=2b>/+^lXLSpB8iU`V%i#gnU>_%AkBU3f2Tc5`BkPkk^>mBG*2`#pXT(d(ZW650(usbOn[DFbusAYca`_c%a1bj5MWL\4AdKe.Q;R'6;isdT0LV$F`Gkl#Hsd0c4l;s%;ksZV3TVfFW8Ocla[h$_&g%)F1R[YKdCR!Bo7Y9:.D+UXpBUF7`<h/C\`PNs-LZr]@.;K*0?8h(Nu32f?0p4_8CuY%rXsD%?0jDE%TPNtYm8"esRQJhE!WEnk,n%?\>]U^0dmUu0KgaPJ3FcXa7<dV-UZcL]igpP0fcN40VljCJ=nh\HoEN84(n!glQqhj<J!>BV<0L2>%<c]K5dKT&$9X*+e-diHj<920\b`81o]C34_,C*<.geG77HQ1LT?(8oemRTe%M3S2W0:rO9f]7uMUBh?(%Gth<CV=BXjO62?))=K/%@Q/O`h,"A[XM)][G!dE`EHZGZmk;_ID_.<;8ai$W3p+C;E_\4+6AN3]CDdd]n0Y/'pEYdZU.OO>`3CZ?Sp<7hi-Q-_>2qXY&5`2t%G<YhfEAC9#[;h.nqkf4cSU9NS=Xd)kI9[%!\]W/+cKHDfDtpX>]\-(ja@u,qHgGgV6L7YUK^9gD.jDe=L?R#VN()a))uQ*'5$I)Y%gdHnd4,*a]W41mjQ>rE-5d$:YF5m#`oOpATDOBK_]"r_+6W4j8-SinEl+=Rdj`nA1kD$V-o.-$[E(=[MmY55^iJt!B"Q+3cU`0Nq%E0i9MEQEMOT:>C@mtLp'gl68O?@o_0kY6?=h([dsGNAIii02#&OEn/[!cGN+g3"&bZ1]YpHW+02G5jFWRkp0'2R^QXq_.Ci!(5VW%(AjEinBAqj1$#/U/G[]f>[]`,F/W&C4<mRm*,@R=\Rt('G&gkpfH/#mq<^h]$No4(C"AcAm'ElK<]@ZdPf2W%Kl^m[4U*s2Z'1R-%%>IN^_:O;c>&FC@hIt17a5S.W%`mZ%b2Be+Rq&Q;8&rT;='ipA@gYk<HKk]pZac<33NguUPF-<,Fg,ZFF'KnaPtL6W#2R=$b)a9_%c=&$Sq_l/.f:0Pj)s34#cZ-WiIPb'o3EJ0"\aIkU.;qm?Y,-LhDuh>O*C(C)j#XCR,>]Th8/aUC#`'D:FcS?\"Ca>ETe1^eE*PWK%GhZ@a07V'>c,/=;H*Y/.<aMC_4'uhhcPu*&p'Jk.]=tJuPaSq91)Y=U?ruEVoA,[dGI2fK<pIh_lV1^BS;<jgpH<=cV7R[B5+I_$%'V'p0rI/(9""TWddTfW2T.r?;T&q*4frI2ClTR;eE2(cXK.GcL]Y3f6MClSa&)6MFr[m=T[Tl@<g5-l@&(d:*Vn9fPCXnX1R%%Br%CBgT3j[*mUX*QT%n.&I<i;Jq)J4bgCXEIQl%a'QR$E8,ob&I"immVFb->ru9[<>fSQ/5,/4dD1Y(JK>Q07te2g:F5mV)ecU(YC[8%K)%R=>4@b$*#gH.QD>?7V<>Cc@Z5>`@nZ4g(*=l#X)Bi`Xp)7=j"keC6DdPqa^?h^:*QS#3VR8b3UX>t(q5m7L8Qp=6qD^2Iu)EX%::R\]R&#o6^,Fs2QFNng^#XO^rI(&aJ8W$%<PDU60WrIO#oURWZ\T'(n[$YQCorSaPnpVp1QFXZW5L!cLcrFK=a)TEBfRu-&>BC&%BdG,5B5p\U'CF6U,KW/B4@F[5L[<H`eG.fUiA"D<pM4hfF1!lGN1%st&anHl$\f7=AV&Dmn_Hu"M\00%r2.40(1n!6ji8t@k78RT%96=QHE-uJ;*)"kD><&o.H3R6JN6P+V6YKCQ(c1N[`D;]@0djq[2N;qt=QpiL@lXb)1<)=p[?<Wh*#.RkKY%d[.o@F^=rE:j-Tuar%*E1A"##8J!Ye&5kQc;cG]+-pa/Gb;2="7UBhrZFp^RZj^mE#5!\=$$6L1^n63ThME].NA[e/7&PMl>RYqCrT``TS`0kf;2?;E<QK%MKkD!kZ#@]9<SUNiKflcAE!8$8(,@4;?>J/c,RXZEaZS$,\0c_4@qLJZ#Z7k@hC5XM&LZ4h$7t:+C-sG17RJs4^i^U+q$)B%\Tk(%-I)Z4Uqo8#d,g67c2nDWH&`\:Ng0bb2[;&-#50/RM/Li7h$k)\$SZH.T`7$cEO,Z*o$_NYN1U7j2[;%V*'#8P0Q%A.`9LQO(>oCj%B!>:l9DQXM79AKbhf(#OUaATBD8j,O0Bsg?nQa4,/BmP>Hmt]N^8/O.;SI\YOiMhu?]lhmn<`]kcVjXe0'./6@Xm./I(l1M>Ws#K%^,)W5qJ<*@p\H0t)f"#PrBq;VGcT`KB1$t4oaBZi(m4J2qd.%aVTk.8:MF`0B1'YLf.Z]2W3P.D(OiDlK)Eb'EZogN&r4'Mcd-%_%\,(Af0cS$-@D?%FL<8LK^0<<OP:P>"Ic7d4NI64%^"720\7OHBrPGo/E%PS0f.VNdI_6]$dJ*LVc*&,S?9_M@(s&*7e`7nAp#CmU%IKNlC5F1A:^MlaKAYkA8h4<Ef(F.3IlX%?qd4Xi>kbrk,inqd8EmB$iXaWXna-V%lo=p?)PTIoNE8)DE@[5kX^M%CCNdL`Ado/d?%Ie8!c_D`3c2]513h!6o79%U1oTlL`GC81.h$bt6<5@Z,;]mer.?rU1\Gg\\<=?3h&#QJ$,')2?THi:h;!8m\KL:Gj]#KoGuoTS1u%(QKg$5/,\DqM!hl(UD&I/FT8RG,l^n@q3%#0Dnkc<&R<,%)1=H@92+7ZE2#LrSlP9W-eJ4o>]hIlPJ_J^<uEB$bt4FfmS7cFs$1$%I)Fh,kJlLEk0H7J-2G6'I_iBZ-gJX]f.VM<NR,!R_nCNX\,&P;?K3ENLYh;Dgfuti]mbf5D&W7W5>O>7B0C&*qtQ=BZU4-@)a,(1%hWd&bSh&u1^OU8]h,$I_Wf2>/?_"IO8&*Y/4Kde[PABr?rVY*apfu!T'H?=D^[Pr!ff;1k]meqhG&OQ(p0KsJNlBc[RG_DdR.JH4%n+DUHHZ8%mr<=6/f<'M'Q4`TY@tOBeePA/AI\_>h_@pBW;3Th'p\KTIfE`H9l!?S5?/FN#cp!EO?GH!KKo"3/@c-JfI]FPN[qG>[%r>_!u'4T(PGk/1=$9j*[D;a>;Ed07s*+HLfrB>1p,)-9)@6,@r#Ob7V8R1oO'B'7Y@BHYT"Ii%i2HnY4HPChP[lIro_K"C>69]G7%71X_#Y0q[CTODCb1OjU*,o*RI9Mu#aWA7D-CV+k+[Zr;ShK:Z_qn?,t*,@aj5;))1(I)ssRpVZ5cJ)39o':YOaP9j4.f/kO0kDqd%DbV;pJ">k3+#eD@T%@;N_od+N5Ms`L#M[u(k39q*HL:(G\9^BC+6d.!Zh9qh=2g\1r\\\E\t@,o/2^M3g\(6mf%6,]Q0iIrN2+VI%dJD(O3kK6>J)9S\k.]_#n$Me:I0kfIB6LF`S=a)!o(.n])<L8OEdgHJfoR\QqjULFkNe_HD+pRF]?g1e[qB!?rmI9`1gYM)bM<It%"[&Da/M(5ieH:088UL>7kk=H!E7paEl+cNLat?u64a=8jY<P'U-I4_H/o[HDpTpB\.rH?nq(W8`"#[PPh<h4@RF%86cW4]D-^0n+%kA+"uD?7jj>1)3@-_%M;%<>&7SE/&@pHhA3K)KG>/Y&#l.9=a?ZdMgdL0uBG\&7(mF<B#>P7iqXdWdMb.u!jPO]h;9`0uf?I@"k&%okSr'B'Eb$o\)8SeL!0]rKY'U6Edh&YpVb2[]VO<8&Vjeg33)YqEC/rmMM?.K]hpL5t`iWS<`8%9Lrd.H/)LcaE2F&MP'9g??-#1%l=k_5np1PTU#qq'o8p>k5UQ/>qFqdPS>8K$(A8q7opn*`6-mk:hrIo[4%;=e>NhtFL\#tW_:e4KT;r@p-Q9tl]'*cUn%;[M<48#Y%$_cC=k0".cn&k"Bm]O2VoDXus3eZqa`(,!car\cb%h@`/fn2``_4t.G%gq<K:?bKO72?q]Dgk!$_9nbY]9n"d$6LjU&)OZ3H]Z;B%)p16@)\NPc;tA4C7E+<dO\DVXL$]6OfR[.(mG"I,[3/*GUaqQ!\3LpVZFf>arq@Bi7jeOe>Qetu7mBcqje;DmUQ6>k]N3*&RWIcj%3RV!->KKV$F&[BC]3#99QBJmS/%msgj''r,9=:)OO1CmZGGB2kfsE(X@CEFa1B!%m,oTYQ%-jF02*uXn8<.lO-DNl6(D95R>c]QC%MAOabc_Yi,^Jd6J[]X!pYa*JF\];ikmVZCR]j<W;\X]^*`K?eJfu,FlEW>-.Jb=XF;W@U%Jt8&W!.g4Oq,X&r>f>M2qp4EG\'8-"%#DS]ejl(Pt(OoA]m*@j^n>8R87GRp9QB)F7]M<:d8:oD$IY;YVB?@XJ<,%VTjJ/_/C0j^?([KA!2pLS:[lS<JMn4@7Jc0i>(?h-*%]3$[b=/M>@=u-t[PqDCT5go)ooaa*E,p1U=jT4IN7F]KZ>lc>V]dr)#kA_2RDk92t])-CqL*=$AILFWBWA/9TGFIWcg"uPEb5/MH%gqT.%4mmpV5FD.H94lB\=NdOrj7_ije`PiIB!0g@UBumMbq1AomUn,bf+$&fY3X.Y8*<"UkYoBAr@q)of]MiOl?jZeq*JTNA=?%r%Ra(T8?9c/?Ca%c7M<gX"*+_P=/VfOZ&JmCakL)IJ'u/>8!%ot)hP3"^-%P*^0*`G6nlT;jp1#0'$TeO<Jm!t"P'6?GPnFH29fimZ%B49-PQb4HKSsdtn<c5>D+YT(c*D5nV"u[/LRlX!XC2LF&kqDqLm<pt%a^mZ4o%luC6A:G2VR;IQ32Fl<YKf/q4.=4\"ds9q1E[NS%Zq.4SmOWqdH%\B*bFMV@o__Rf;o?%l.c<e]T)!QAK-`7`O5q[5E(CP`JK>fd>cdRW9^_,qcHO&c2rJ1%Z_19XaNrYad8FT8no6Up%=I;+nbl=&tL8S[P`M0pJ+19>0iUoqmfBk2$(,F2lTGEl!M<XpAfs0(Q(jP:j!F,;`0BOl>_d9*tXm5N/a%#Bqn@Wa$F*^bI?iDoe%hRt`=MJ(hQ'<'AZnk@`O\B@otcaFY&WsPTU(mUC*Q0Bp$n+pgp^!jZo4>#nn(6@?R%Z9F\D6!O*8+..=?G4S#9NeB,>@laFlKoj?%*L--\n[a(1'=[*Gje("maX+>oIR+EmII]32NQ<7PDKQQ21X/#A""f,di#-R4!Bo#mYQ]GlO\dIfVCY=(Q!9`u-Q<SqCo+6!cO!^5%CVI7kea1?\f<)\Lc###h^H\"TVpF2IcdgT>%&S*3X2StRm)S\3;odHAT'!Hc,$3i%(ZZ[T!LnG.oUq/cPAkY+)5S^I%SesK[d&js%O4i2.><=2AH/kr-.$f'A)nekS.<!YfPZDZE_gC)b]lGI'm1_cTP&r+]Ol[,9p\N;K15T02T$DSXhME/21c\.V>n)juB_XKLpe?gu%nFbnNBlRslIOu%AVMJ100JbaK1V&ZOq!&iL)*NL!o0.K)fEL;\Q<D:G+A4f*\WBt$(*?K.9Wlc2`jPL"*o<3Upc8sDjdOREm-L=H%NhdbtZ]AR-0'c()Qi!hqQ)FV,B'\,0IZN=<LUJm&%3F323Tp*h2E5Sq6.+W!GjCj;9'4uVfti(QUC,\Pc,c8X:6CaUL[K#!q\mnf%;9aCqUQ.I5`1qSJ0c^)gj*+[])9#'Z/nVKbcH"S=:=<D._.$Dc.GEq.O>R9OH!h?Xm9(\!(`N.drO!noKhUWRi/CIokfO0[Z*]pc%'JssE3@ZY'UlFC"O/#<mI9te]0!psWcoeN3J0o0[7iO\=43LjaLR2Maq=6LFriVh4D\Te]WQjTNjfDoel>%,]lEjT<fULZ!rdJ'U%87aaO>5(p_=eFIB`5eCc]F+F9X?;M<32bEfam<PVCVFfc?9H!8l7U]UmK[KTk2#sh3Bc#p<bLu-\$_':HCC-BK5CFY"<N/HB#aDE%X4;3*Sshup`7I.C!&;7\G`SC%1qlAg'>5W:B%[`\?7Fu`IcUq4a\Vj?H"2-gj#!><K.D(+&WtpK.Qarr(rMs*]aD$amU8S&i][6F%EUOlBb3ujq*q(MCaA^e1Zu)R<O4l?)ruo&;<&XP7+h<%"4(mQOHLlfMPsc0j;kF:>$9j.3IcCe^J5q(XEXX(UN?2*h+eO*V7pA.L%%VcOZ_FGbo$k?W/JpHJSS%801EbM5a_q73r/":4FQor5M=&p+6.qf(=5!T4rftg.O^V4(1d4b'(\@F^h5GcNNFM#1bSu`gXh_Mpa%2ZV2?++lZ?FOal=j,PdfeXXc#PFYTco4+Y??d>,s^$q`G1U-lIN\=6S)qbH8am'#R72DaVjU&p8j<]dM(k[cn._F>:[$i/#JY^gL%mn]5;bM1dP+3:I\?b#'>I#006;-YN^16QU(9s3KTlkmWJJMg@j3PN^ml<L<)U@'mLEs(d]#Wh,"g^kLtlWtggYlrluaNbNp@t*6L%aNd6JO55Wha5#EFnV[e:;[#L68"'2-fo=4';laFESn`WAF!e6_rp'S/GXnuUZ4+R_j%Sn:VZdGX>>Pg[P$-SHDg:biS=r10eY1[^%R%s%tc:ocMmPr1i&X%shQ1-atecT$X*-S2?j;`FrE=0I8,O(!'!lm*RJbdJcTu]XP8&eql%f;1`o[*-56lHRlnK;1fI*7?IZe+]G%`8;DaopIuapr19MQ^Z_J/j@kOF=ZP?g,5Ib<:#H[1N9MV2cCms@&*Vpb\X8@\]_r4AGDb3q3?\S76F[3Q)r[]@a6ILeGH(do:[4C%gLrL#A*<>&55k*<mX4j>p:2a%D52qnN:kZ1qr7FjYK*$:,lFe8PX42m(J$Y`#_L(F2R8qslW^Xbo[020'V!W[0mYeXL@EDgHC<:g%B.$^P/+7--q2GT.PMi^unU?k?;t*,,jDP_p(-@I.J#hM4f\nHP^K'dK.aR!&GV&Q^f(bC6T(i2u;t*oUY_V:X'g*6n7,Z*4Gj<rU%fB5<oVt_<XZ@e&%h1n/J_R1@M$Z[k"OuqZ=+824OQbGY.>,-:SU9enZO)aclB3R760n,Z/X26+Gb5N+t8X7a"M^I:iL7sf<`qQ0Z%i]6<nnbmM!-2=.^\&t;h!Y!8RhL)W^l%SFu+$+b^&];H6HFr0*U$gcW'P@OP9gh<1_40?'No/".N0=(n1a26o<o/:QP<]XTYGBP1%f,TKn9[(Do?bQiR2D@FK2WNPOfHi_&)cq)\X;:"#hKsIpk-t5`g_g_4ZaB$NJ"F5hqJlB(EqA8r#b?JN2t"kLB";0L1[W$pfhUG\%]X\]%jnnDfeEOYOS^=fRB><1NjkC9c^,&T"L9OSAh+^!0$=E+0:NC20hsij19&!dkL+4l#]97G_R%P0R'7cM^iP]&M71N`l\Tc%q%E6h[;C0CPM4(_1U>Vic!a99ciFlUO//7h+irRf)@V&nA#7B=[h,)Kh3*;%gW]"aZfB.V\\aA;`FnE9o;0CF1YS5[dj&t?o`PR5LA%/F((;nR7M#bRjYDW)hc(#^:;P`'tp6,!lkD!M3AM.*,CT8PjXDi6+:=rIN$9DNB<)M!b$!1^Ikg1SRJOeI6I*[849O*/i>UYWDS'%Bcr^k7\-hL$DT"L\5jf67A?.aoeN1aL\C+<]T15.E[VWr<XrbNAjsBI;8h"@=fdkua+@0E1jDl:XUH!.qU.kAUeah2A\BJp]c9MH%B=V';[L@qCCLmbnS=W%CrW!;&QdSY)m"O76f5d5$ETNB6kF7F]Rg2a"QoZ#2Wa#tU#<EWX,!a3.l?Q.SZ/L"V0!=<r3];d\d'9:5%+mR^Abm;`P?Q+`\H)ZTS,%kN1pHL&89(1/e@*W9XKFp3s-g%p>`hgL5,1"64IGm#=>3T^Rc\NPbNB'0HLDqk,fb-d8\RA!=4QWUC%WYamKN*WgSb_G:P0$fcLWE4@kE`.'Ug.i^A=[ueCHX"CO9:FrIM+I+g9118fT5\Je/H,:C%[i;<E,Pf\n`S+4b]n?ol-H2/n-X@T%l-BHkUA0#=e9A3eFsWH;o-!1RXdM3K!7MJ+;=\CC??d`+NieQ^q#`A3D/Hbt+/i,]Daii?-ejHq/[ngE3)ntpG%j6e+On';Rg4)-%6g!>KB='rhs7M@MNo30iH$O'$'W)C*8/`nFM;uOPQa_6r3rE)&o=*=#F,<M.iNQ&IRpHn4@Ij)dJ0QN6lhW4>m"\9lpi1l4_Yp5[%P;k--/qPBYLDf!D"u8.SZ<3CIqSk8u$Ckulo5A]hPLlE3jo+#Z):+'_?/1\F`m4eA<,t'c'd9G24J!W"X,NKA]mhe;hgW)ChMPt'%;iRp6g'M;nS]aRE=Os>>nGTlU,b@3"NY7t"66j\>-HkA]+r[DEJ!=?<G#`MPOfo>aQ\QQ.PM%rAq@ucrC;VuqIFAIZXlW=\rOesD%T3a%`rnE$georXLDaG'jgfD;_7rMB^pJ#ocIn\88nF9.aM4'+.*7I$nDCsMOa,OZpEb\q5Nq>G,O1HVHiZFsJr"uh!r?9K;<MsoY%^t&b_EH;<4lj&r,;oE^3D]6DJ+)67(ShG"SWGHk:b#KoqLR/dC.^H,J9eeIoGd@'8P9)5M3F\AU'78AoR<ON2qh$q-*h!,Zh"T`@%6'2(/!gm8`-Vi)3i=]0mT(n^Cc-4W&QXaVc(3*:^N6j0A>aI8Z]maEg1Q$"sSbin7G,X6Ca,PF!KAcjlQ@hAHPKL]Gma!\@+)'q#%Z;*@u'(nlX"+4oC-X%7/7_+1n(*R1m`Y48m%9^i)\.A*A'o4r;9R+$p0l*JSo6*6WZcG`7j-p5WjX<oA11ZF^BPQZ&Z%Pi8BE1U*%3?0^AhYY''.FYS][&$u=\o@N%XET`;NOMA-]oZDm'oKW/I*nt%/)>OM]`)QYgj]5$XLJ&jV0&DU<ncB;oQ'o<?)smnKjab`.E!p]%!(@!5iW1(&r;ab?P^hEA+$5[aX4?c:l"82P>9Kj3XPu?7j?UtnIB8NXTnW6\4)>;GBBHsqc6+@1S6;'d'c7[6cX.<ZZF@j:mE4F0%V/9P<;GHLbFM$Gal:Z,jF0rE]DthhaSX$7'V1#CMDKYDdV=JKbk.J!'>^aTM\(DRpr0S#bG^*:>e2/G2C=(O)BPBI_<ON5[cO%G]%?pDRAfbo>^X:'<LF'k,:M"=cah1:'I4+Opc,Tf[5P7<+(Q,Q7+d)>@9$;R(^j$j`!QNc4&6FPqlM>$#?5Rqbc]`+?d5;-Pf?3<2C%i8dWb*1hSoaE0Vl*<SD9KJNpP%QIsiSQ`rgqoGR_FtD<3d_D?q+rX[^0k,7,*p**s+1AS:*2njbqK[@q[[M1GFh!a*-_Q:`:@i1_%Wn0sF'+S[eeEc4`SB*r?kV!_UkCAH,bI&V1*:2h7[l]uf?S@J_R_>aE=hRd7k?CZu.&^fD:)D$W%<-D+qKZA>msa%`cF6;HOT(.n%Z[T.@*77S]KsM^>1[5W6LZ8.!/*f/&T15oW0e2'T\h)kMH-QXT7Z3mrdD*u58meQtoH,B)>Mb`9hl=!RXi:m;GbqtLrEgI+b"JO#%mpB,XEbik\jl43ejnUTGM^M[3T!1UaHT%E.+Q*AOB1[k!(e/^8bUcJt'lE8OoBUFld%;i7gUaiQ*,X/-a2^*rF<:'^Fe*GU^fr-*%c16'W;F<Dnak[Z@3]3n3P2&dJ,B?+@-+TL3QN!%-.S8G1INYKE.7p8S4)f5;f4fCK_6r6)IWI(oA*?=[35HBg/j3up!6^3I()gBu%"S8IhodsUOERqj$`T8i`SX<M`hfb;(gN/s_`nj+[_De7V8G*;&i'D=1I8XS])RF6!-9;*:]88sLR(d^X]VnRYhoSFYjTRV8K:I4C%@;p0VT"lCn:F]Cba1ab1?$rQ4TOEJM1TWlaD3:EY[Ar^2/m(ts^ai[2*ue>ERr=:lbQh3S[lc0GFQ(hiNQZ6o93dcS&;UsN5k>$j%m^h\A_Z[XCl7eoR>C1Hm3Y=4n$c(<rY^k@\@)C]`^kDC/='JqlRk8iJ0DC>sjeK!"'On.cVQsXR]t%9sMg0s,8!QCQjQ?9(T-7(U%`MET^9"l_9'D2VQ"FST6EGW-s/1+i&?a%]87r:`36Nc1IPcPa#%&NM;n>'@PjQ%^o#SqH0I2d5YDXUo!)q$k<br?*+>*t"t!!K>p%h!GpdMh*8XBFkd66g5BW0r,Di+(E'e<#urkh[aRYPc/Nq+HV:/V'2?7ko1"fK><l8SZ=]S]jL>LX>%[f::8U5'3_^4WOOVti[BUi%X140)(.Mh.+\4nbA5UCae?fcW5ltaC*/dXUk[mBEXE:nmKJd7=X&DgrFY%Ek0<!8TllbPr*gYppMXHq9\kjfM=rh0?(m0HM#c/\H%WB<$,&_TfGIRK/l"Qq+s*Qi=MafLL^,3*AqRZMCY89B<`G[D/_^"ZVpA6QdHLKfg4.s1?)>]8$Cl1N)ko!D>"^um[;92#l0G<B4X%1HBUV@KN0H3TJ&!->2fg1\eaP1A>>b(?1rCJq.IIjQAn6:<n)aVcHiiESLZYaH%9YC^)@%l8aJnGYlPg6WWs#6WP!UA9Q&Z^9B'g%f."A7rY4M*r11g+h04#rCQ;.u%jos)Yt*gLZ"VS(et.o?o4,6k9+j8#Pq<gn8Ru+Fa#F&R*g(-<r:64d\:;_d+tjrS2#509o9cFH%IKtJdl0=p=!\?R/(3&L!f:?C[TP.\NmptSqf?-2`&s>8cOu&C@A'X[#(8.n>F>#oh"=DcCr4F`-Oqq>fo>`8941bla]p8DOjfYk3%TcFlmLY=:b@(\YG3:XaF*k?UZlD<RUCENKLhQ$g"*H>^,qYjKd/g9*>P+W#LGbif,bmT5Sqn@D&-O=PMW_`8VntlKjSK8cF4PalT%`nNW4>cKnD&'4:Tb1$)6`Vl==B%hDY`\O0QCVSL(9fTbM\)mE8;\G6U6Io_=)u;Z%HtGMlZtf;]QN_j[$Da"a.i0+09n6o.:;<'p%Cmjl\V'RcZMdC.Y9BQhNEc^6JG^=g'Zh:W6ETP:6YiRl0Q*"2JirmoJo2B(X4LPo&"4'd)8#q[/"P(<Z;cD@(StI!HIOZoGZP-<m%s*$'&N9]5ajeo4]9jA`5A[;Y_<ptN^TRd$K=at4o%]Y$/].#a7rfb]Yn7gTj=g?D4Y+m("5S%1!ZaagTcD;&5j7H;!G5LC@CVS87%<P*aWQN2,UG]9ol:+rG8fdBaB3B`;!Oe,B`oI'r[P#$nNVj*DuUAqFsPPRauN`/iEr:c>:-m@g5?g,NOqXP#Frf`YEoO7Ua5t]be%`RC&fWHhL0jKtphGtjI/oOgcpUqC;YaFOH@AHi$?YJAJ]%u,_dcdZ#gb$10tQL^n];ker.AmUT7)q>*G6d[n"!4H>d(o"%G78(hI%RVcPjDFf*M2$G\a<"'0k/QKW`1u#lH8="/*!15>.Q3/mRbt8@Wm(=U5L00k7=#<LbY;)2V`!/gZU"[fXQ:V(`BbUWP.='\!A[.J_%2f-GK&Li"MPSA=a$MnMKLf3fLU<"P;!edsVJ5I(99T2WG5(T&Z.`QHt\KDWrkXqf]d\'O=F)lRKFb!gigq"s[`r,#/YlA"Gm\Qic%n[04>V<9/D<^dtC@B,QYAQopE#D;j,O8%.(Wg3FCZI?.jo^rr$'/4>g(<&Va`q\UWeFeYaQE;s!CtX*e2H:14A.&Jr)2+"ML*de*%.lR52We"QDTp"#$"1Y<S7N7($TNRMI!mJ#/4"VRQo9*sZ@WeW?MPS\p-r"G_f:Y$WBV]BtPnr(B!3`n<MP83[))H1MMC'H3EX/^e%eV#2$RkB#Kghfk-:9sq//JDNfq$[kq&?ARa,GW@h2P\t<LIYh$G3$,gs6E*)=q:_oQ7QhQ9HDf!,YqW2jf##kYQGJlCp\$ma+M&u%@8.hk$*8oajt.SeWhY[WX-S`!)`iVeDp?(,eF@2R!5l[Zf(5a_RD9F<ZXp3MHJ[4P%@'8g:W9ClOARoH2oMu?,0Vh8["-6Ab9i%.%=(a;;cY5/^^dNu(7"`""7b00nGf<D-<R#WN;,f)9#78g"$-#WC-DWkll(SCl*sPaaLL^G$g*OOJlPUnd+]b/L7n/][CdtfW%ZeOP%XiG>ls7_FRYTB_U=d<f>!A(H=T:!U/5qN7p*JcC[S4rS:5^\p8RQgM0=:\s$'hg#2s%)*&/a078$S[*u.[D@N$VcOECdZW)`0)C-%SK]5$a9&Kj,igd*joIl89EJ'+6ZGJl0m:BL*E=Xu6H0gA.+F"pNpUIY+da]U3XOmR@O[O:dQRm;n"E$@!bq1&aOj.C-=XjY[G:Eu%-WN*2<2!_g"U/opG<qb87YG2&#ad$<G^Z*SS1;g,LN66IDYZ^?PM[#Q[n0i3/_DHaqgeSgR'6X1/_/E3lp-)88m^%b4P+$13j>Il%^0ti9JJp2bVG#AX(mc\'aJrYUP"-'WLT"nkpgp1'+TSOq&g9/QX@,KE0O<6=6.$7^6??e53YR?>P?iKh5`.k,,]k8eC0@DV#6uI<%))()BP[eap/l_!^#H,[@+GXhNKXOX+;'$"1#b-'US<o`mc>eVW;(?J:`O@A4V>Y=o[\$8K9O\l.S)V4ORtB@/_c0O@.1WHDK.jr5%;'ZUqpTScFQV1=4/K-D'\c>YSjKM7$S3V-lU-Lb[g$iq'P&.3NaEQ,'LkE?<8_%euCif]0%(YYX;!1W)JQJodg_>rIU/A!Mh/P:U%MKBK_&u\:&VIU8ED&\2AijME*W^J83k"QLu?Q9a'X7=7We-AofdmXpj=s_-V2hMC<'4@%0$kqY7X&%Y#UPa&];9kusQ!KVKq(:u`%QaF:t6+,ha'Di[t(92q#_sW></ID;g+@BrYlb_MOYbi@4![FE^&K3PE5S]\df`2?ni%Hq&JLQJ=QRieD*,:s\&-rU5+pd``+`IT=%>u_RIdj<PaV$u0:0a-66!MUf#/'IQJ#")m[Sea"';H+23Y>9p>bGO`*WXt4B'rYT+UZ.G*+LHP2nqu0Ll^B,c6KIC8,eu..8\>+g%Gd0HZ%+@W[1nN,e.2O,.I14-*^b@K<Z2+TP19)2C)<FOI?MR#.P2?oPf1B4$-42LufZR6b[2_Ui;%"OFmD'3"QiW5)Kji9-'\",@%2M>MdCalP2^5-OD?qd3nd8a--@L%^'81lb%Qu+:(RV=[KN<2]g`/l72RK:Wu"YJ2>-*PCe.TWHt.<T?m7Y5*$Q>&<,B$"b\Gn_H9%R8Ad`;ntetm])?5L-QL(+&9<G@'()MPQqU/itJIgi$K\+nXL3:jPlG2CpW\:hZ"46%iQ2-ZAI<\(_m5gN/D5b$8;t<Z<&&CEtDOW%UB53tWbmUo4%5EsW>*6:!)[l;#TWr!Y$gdM*A!(>@&$l?%RFn77O8hS'-U,d:5"a[*QLQ8A%XuH5iYg(@5^lk'8ki;irM5lBo6N5%9?@MM&/%YDC6f<=M,5:G)5\i\"ZmTDfb,\L+\qo&(uYP:jD^",-h>`[MK@UIS4gjP^IY^%>N5ZDM2R,-cJppO&>=d]D&og\o*?q#%nH^^nPm:t-YRP)EGf5UMbCOYa3q4FIFs1>8Pf&@11&YMm3tC3]3tXq+FrV*RNq)C:#`[<o`7[-+:+VF7N^rHGW5MS%S.$&E3j4QX%#,@#h&#3?^33D3pLBee4AJ;+=jJ>3WkI<l<Q\njfnVt\0C&]-Jm:/tGn16@:6?ng4G^,Ofb+l9FfTI'cjAX26"O`RJAE/A\J>in"%<?2oA$jDP&4@+TbaD/8bOO+KA`QTP[cb_BRd(lZMYSi9_C]iu?K;`<8S@lmMW3p5@^n`1B)nK.D7Q0bLV?Ep+]W.ra.S;_fA$?5l%[Z<c54[!`9\gj#o@7ub,@R@5q@;G<-[(NN//uk#VW^%\h;_C=;q\Y93JRN#X@eC'*A5k:d1WfmC\E+ND<.7L<h^3?ZYb6:V)jht9%8Fn3@2@fXGTE>3_IQ?lT!3I&)!b2<2S:sNjo!1jb,QpJ^;E,(-Q>Pn(U=]Z8'PF6Pc%BTE$LjB=X:RkXeBiFB&C&!A7(T+,[N"5Y%AeAXB\s4$bR<dP??kolkb+l^r.,\'-aHTUa.HP4kcp2;iq^;U(PDFmG;A,Br$^`1pVfpT<_494J'cPA6X>GlV!Q*P<^aL!9-H7K8%T>45l(#q?M>`anKIZ_Y2\&A;h&f6N6EfUWF(s!]`'/Q-Q?5.K(J<1QKDW$*8+pBh/E=H>W1fuqo0U\SE%*$3l&48Ak/p)VGQDB@0%VJ38@Kp7t(%mVrXR9CEF<$Xn31/0RhiZ-!l',i^45+M<hMb41-do+Ds5e0H&%!h_D[]J\K8gm-I.:Al:GL]2`6_K=:O$G^X#ji:5%PR@m5itSOii$Y:WELfrZ8B*6rfOj6S`;_\-+#GM;&44ClW]6(B!Fi=aAG2J2(6^nKP1UJ$/s0A:d5k,Yf[15\T7Rcq51tGe!WeDQ%`;gX`JJb'72@`>&Qm%*)7PO3#!Q7sR3a6W2``s2XNi+8A9O5-V![<?$WU]6fk#l_n'\FXp(8s]_V./+lTkP53MVEk*4'O84_q$)#%5c!R;fj0r)VN[m8,35@7QpsQQ!+B^X@"\Oh&`XJ*9]..ja'gkNfb'!0AC4H=[uC@aALuIC%F(nPRCEuV3t)B/P(7?Y3oD,R7;S2&%%!(3H?qh_Z6Wal[N=g^KWl8@>NW?o-'q)E0i`7X*VqW8\ec8+E1trHoD;,\G9@FLQAZEid'BDXiRLB0`A^qBUF@`fk1iYuCK%QB'%E>^HdTNa`3.SBdUQFEnQWY:mJW\jk.$mN&QJ5He17#Xd71<rCF*6r>TA1eCre7)XDhfA]LQa;_fJZ"YWbCUI;+DsV)?%E<IBLEh:%dg&qU)Zor%Z)Q4CFJ#?==[<VcTca>K.NSo']EZ2!*MQ&c(l86IC#bR@Jm"C+hQeG8J.;l^Gi6uslk>]67#3W`'Od:7L7Vm1BO%%Y%B<_1[-OTA]@dT\%jBYB.LGb%k??'b'$!V^^#!&E4J-GWN\1<0T9%-3=ni]uH+<t$>Y_EH<g3eX3Z&$sXY`TOYn=#L+8Ac[W8Fu@U%`;fc[(+]\--&Hp[QD@pg6\h5<[K&B#@4"!PiBVdW_O<[`L9M^;Wm%[^:"1a!@r_^.,o\b/[\dhc8J?4S+Gp3+9LijuU)RL,7>PN<%h*E$Xk@For$^`'W&iT7Kg;&Y'?)BGE^8<)&Q_k^IaY3nc@Lti=>c"Ya"\`%ZY1fgX#W,E/&a3g<TlgEqnpk.XI%n#':,7,4[i*Fa%,$qh!2Bom^rEh3l+'SeBAV54NNnn*I!tf.\1eJO#$%k*`n0P=c-?<FsdBhJk80&=l1][dl'?u[?5^)<6J?@H,JknW3``RNIm\q%8%>F5k]hh6b-S*gIp+jS;.K\<SVQm%(Q)":-7X3R$`/C^B8Q:P%9-QDao=uLqn`]4TT%1Q,\R!i;`aD7[4_M$]:h-CoH7`BJ3"=YFu%/Pn#!=ORBiAUoDh1Po'X1=@>%ZeHX,P_`O]dC/,FV#N$0(2X?t=?q9BBA]a"$%oYd3tPf.S6'-cb^o8d")Ibk941C$]Zgm&Nf:_I%,52;;r*WB!(dMmNJjZdB=G@Zu!GP9dKd$fZeW2Zl]D314K7j=Ii$9k(kaH3qL^LIk(W:=b6l6PrS/*emF=E1#V_P*4;l.lQ2,6.M%0+:Z!hED8in)8CLTp,rk9G%pV+$?sI+Z6-T-CLsO$$6OdeiEh$H,)*g51/'e?8@BT`u3EZ<8=d;ZmWVbrNDBm?rIKFm2#$ic8#IC%6GakQ*uK/D_I2[:fqHFCV6Hg-^*GVUU_u]]nomd5@gTtf%EjXG'Z5N4k[Y)VCkG!o0m!\1b@JJH@+Z>qD)3h\?s@(*T8`FJN@9>*%"[Q0mV=.9KKc1Af;B1mSbU)Tbiq6Hm0-fp_W[nF6"*R-o)A=s[ilKkE+g8D(WiXnA;NcuMatTN/_KON8#N_=*RaC8maY(.B6ti+k%UHDqO(nYJY!\YE[N8ok3-5E`NU2A%kC&aZu/_Up"+3E.>+LaldS'qd-YA1Mi@0\"#c@][m&76`VV@U*Y/;aX9Lh/Vb;+WJZP9rP*%ePs'&!J6</TORuN/Oeh@"V@u?QpYE:HYeR#"u'?6jg9OEVN.mDcg+Nnb`gMOd((U')]<b@'Jtb7":]F;_X\Bp@@7LG;6:DnTpd4Q%/3m=\(lYkp@:D?nFU<G+oIt/=R[HRVEf4d/IS9OP?ID$'6pmh<ZXhIF3$?%t5W`i9EZ#JoCCXfH?q:hES/n7oaM6-Er^YTG%*.Nd%(dRQkQN/c!D1LR2!.^a:Z&=EGpjc"366;^"9JA=ppp;bD=!0=G6L_fCn/d32BI42##WX6Q++Sonf7t>4MeiCQ<%/A5-gspT<LC5s%KXHk-??)HW96V1M@!e&e#W<@KL:]L>fQ7^Z]Mr$W&^DLco)onA!lMqn`Te,haf&ZBG6hi%nObI_SG\]I^J*L9;$":@8HaUGOR93,%f*::;0\Cp^6O_M%WT!;D=ORL^'"_U=EWApnVN`R\1Q/>t1DiAN$\eon;Q"MuD0#9F#05Da,V4XWpukA$W=ig8%G=lBL;4RS(VoS8%3/fJo$]#p2*VKj1l3uf\Eh\ZaBMgN6iQ/Wq/-;NiUC_[r6uC;i67-.f(+;NQ3ufR">oaV<>soPUeg:sR+@>Z&(uYK_`7W#.':?mt%@Ou`e(8TrU?*mW-/a\%OZpgI9*$ef6#S`,3=Yo#!!F+Ne!tf.^Xr=r`bho8$V@UBD2T8SYAmPfA;="TnE5[=I6&Gj/\R9EOM5Y/u%!'ZuLPAFd9M:ZBSjEN_9WNZd:&EHpH(h-V*/W(+[68Ou[&U0:G64cLB`;4#$N<kIk=jH%@Y8GqJQrlGpRmmF^\7s=%GS,YRUH&s@%S64aM8V);H/p\5E%oFI;!lT8%&8f(4L,6oM9Osnc&`Y_pR0gbUYXgkH>JgF5&f,9gm(ZP>?ajE%4V!-JE$>Xt',5U4^gur)M!\U=%3j>Il^*L/)_V=QjE1k:XT`mHs=@*]+&66QC<4GeY5fcDW),B(d4L*ib3ZZ*pE*<9OfiVsMcja7r+W</U+q0e%"@O/f8+Gk$B)"A`%3fRrq_K@[SL=798`mN\I\@GFkX,(:rh-t'E5[\'_&h68'=u0G0T`G:V_I5k(hlL5rLp`g_@2ra!$%-7t0lB'@1P*&i(2Z6a$i+-P%AC5uOYK+X`!1>?i=:eTs<j9!)YQGK7kE0Ju#9r\^.BMcd07a:X<A%qj6=H$2**rrh186IQ+Nk(5QuJf+JQQmI#XD@W/8i;S"rc&!%`)QL5&6Pb6J>L(#)$=!b((25oNcbu]=EM9u/$kW)k9S`&m`ES*n.I(22N@]b`Jl_`h-G\MFlmAa:nV6:$^F"Ob&iaK(TAf,eJuA.%k($S")&gL;<gg`m7M94>6T('_>@s!%jL:*J"Ypk[#Ft['i;O4+?EsiQ_gqrX'FHo5@5_r&_])8D]+iig_3`)hfW]?"=_6YC;VeY#%IQ[l;Lh.^$%NmMj`C5s2`Yj<bV<HMF^p(ZWbeV9/8?hcB'XAJ+jid^^@u<^:Y3Q3J7AGsTThq0"$pQ+2V=RAU2Jc;G#mB:^^Ypd6%(ZF^@?H.S&MO'&'[K=:&JQNl>(sCtc!C/CS::1@H"rRW>Xlie7ItXg=(BoC=Y6CX(H&+56[NE7qr80/;d=*4mUe:,?&i0//JU]RA%^la3Y6kD+B&?n;/hk[L=+L_'b6^9L\+eul!Ot+c:!f3]<*2H1f=c3?;JeJG51'B+.!5UT7!<fT?!Q;p5";6(_P)R%!l'_uFNN`[D%i7)NCNIe!]6;==enHF541;i/u,<k%Lb+2S\hljOi3#b14UQQ2%J4:h.H<4Z-cA1<\WAsc@+IN=6ZT*b!h*JoF_eNWhACN:[1Q%SC%gp2em)S]k\h^huL/<I]#!umB+!b]DC19hT+e$TA3JI"V$9skB<A+*;tdg'4mHXYqlCUbus`YfSm%/]?6nE[ji64UCl&:EmI5ffBO%*%ONSB)ic/e/#mi)%HYO:%6q;(eSnp%<2S+&SB0(.7Gr,8U<',jRp?;LNEf3<5C/C#,RM[NfWE,3bdoMhljQ'R].1m1,9g]`UQ2%%$^/TMg(;J-9T^Y)0dK2`>D06>=b%)*0MIF$X?M3)N%2hg7QHZj7s<;Rj0u,i4gGjj$#G0f2SgN`E)hWD*R!HH!s&VXOb-AN+M@$U%RQgKZfFqDcld`"m-C0OLBn9R`3X5]$J;Xs>U;>Up+>t3P%hM+'8nR.(p,<'3FDLrmaci0NDedd-!+M?"_#Ip5m?&sAGqHiIe/h5"%iA5]W;pK##L%_TLOCk7]VV(bf56ns9EO.FcBjFb;<Li\SJfk@$+:()a=Sjo.k[G:(Nk1h`5u&4(1FR_OALMsf/4K%a`'?]Ra&`cl%GdEYRH4C.lg,cf4'_K$o;9oM\\MN%JC%a&IFS+FM1WXo9>]cF)f1pOYO)r`u.n]f3k'tB--RnWY;qiVH@1JPHGb;<X?lp85R(c"H%`,?CfnYX"7+[mHa7rG9k6pZ*58-O#+XTo&@2nWHbZ.7+1m'g:u,OM8=QE7Ian:Io?Gu4l9_Lk[^[';616;/kA$q4>u6X/sJk\g8@%&4CB$KM?Q,(6)%@gKI\pculf0hqZP-n$8^R#ABUi<-/<4gR+D%#J&T[B[2,Mh?fD)7mk:jkUm\i1c`1=lng$O`;N`"r&`I/S>jf^%jA?rc>GT2P]TB)r6+D7Fp5q&)A<SdcnQWn[]P6j'8<YY:(E5.$X*:F_QM#3q4pE,O5Q^1t/QK0B(D,;%R(^P)*#30a*kD`4l@Z=h%#S>,(Rh6=[).VD#e5B9k1A\%t(^*Q5NDV(88f`L?[VF>"JFQKKqPsL,YM+"a9qGpncC-l<9E[4uJshEiL^u(GaoHA%RH2%-<]Wt#%E2VG<j`T^702DM;l[R2b-[AUs^)pn&0"djVAP*+Fa$)90X>!*>D6qA!TA05^o&MOoG^l8^!S<4USDF>M,&-$f.4pX,,Q\/oC#U\W%D667-VHO>^"4:X7#KCksW?k9Llb.RIhF*JQmnHbsK&8CC:BM$,90n4&eMI(a\+H1$<RV1WIjc^abtJdc%]kiXcA7H4A&<k3anb#r%-#PbDc>fc;BB=:(IOe:pSaCpVChK/fpbc)Vp8lTuF^OH*qj]@dqj`-$M4[#ApHO`g.1`Z/QX`4WSrm(:SQT_SbDWP5cY`"68+PQC%(f3Omk6jt)l)'aX0H=ks3I*^TkRp=Q\MmBFm(OmH&n=icXg6t;c=^l`B0H!%CEmMuob2EP&u3X;n/tnT5'_X7Rnf5igaVu#H(DQ#%bERKhq]@QIDe)J9I!5#l\XO8n8Y=Hb4mV^;f)C[p6(0gYmOK`;!B$m#$3?NB/C.3%@&'eu8nD3Ko<+b%RA[Y#;Q4DG7be*mbVBFC%jLV<69u*70o/+.;-HY><W7GLoBkX(N\CP:*926H8Un^ai2"[`:>;HS4Dg2:;&"4P>Q251@SIclK_Lr*LOE8OU9>#A8N8[NT9Z]#+%^DA3rcLX81Ss'_:2]+GE9)f=&Y.e+8iZ)&GJ<&MV!pIttr=@s[8dt&bjd=Ak-`co#pOouh/j/6tY8pDsHQ\b>2dr.a2mjo6Gb_T9%eJfc*3o:i+bZ"M\i$'n[:K@6`B/?rkF+3bZ.jKku[?Kft,`OEbaocS'q./:b09)dc[um6EjIEb6bE@A<qB%ECDraJ^"RWK>-$0X@%;aJH"4VdVPf)CC\JT'`&PeWA/Qj$G^*tD:sOu0p*6?*!iT$uEqd7eSL!Z+DbOL1<#pHZr7bSX:HVNs%jYP71YHP8].h)CHIq1$kt%/4VCeCU]_G_)fYs4<"g?lpjhf,-2;i/jre`'IUi>PqX5l\)\P"rXp<4-KDHHD0,5&?b[=!s%`(`m1Z#O`Zn1N-2Id<$tD3cY]&pE%4u287T[RgB%J8iWrWeT2,mX-XEm/1Ee(*`"HU:qD&"`@Cf8QWH4V0CY"4IsrW?k9Vl[=&YhF*F%o1_&Wb25$2:CQU]PeN<K9F^6.%+5Q1U80mH:8RsoG#+%#TJ[a]Vo)>/E7[!AsWV6.4S[C*YOFQHhs71Ga,=bW=BU9ScNH;s!"a'UCVh"d%hVXG?"6$ncIH&'h8\nn$%lA>X+$k\OU!%FEDT2_N4\YK]Rf^aFG&3Ket;M=R+esM&Jek\Pq\NojuS8nhHRB:[CdFi]nd7G7TrslNI;uIh_,EXl@6b[VXFgQID%`FPF:V(V!hO8c_ddnE_`8Y2=uGJm"<&7L)Jj#lnX&gr[7i4"j9;t;\\^R$2FcLX81Ss(..9era.+%qe/[>&>2Zrn+?8/QBPc7PF^%f!$67gA;h0";W3aH,kmMB$.K@=+?>-L&mD^E=X6RG^EjAmjO?spYcI:%PUK0K/HC<`#@E#5b:@(c:Cs/S<8\%]kF:Cn(P@Q0)pQo%VI&a7q2t]E[htG3h`91`&T=)OWO:kh@.ci/kJ"a=ER4dlQ:u<#FB":qaLrJSNd$e6BG<IrSS"LOf*V>V#l/\%s6lT>,X%`:8qjd'%rj<NHAtZ:8BH2bTA5"4N54WV,qsgPs^EYl_J\qmBK2oWrC#RSa]K1cJ=d=cYOK:1Ej)lUD*)^tpN'WU?*%]0%H'*O@57Ma8JZK79%W'I4Qj,CD"V0-V][FjE-O8c#6rh*u)a"$;%`9t$dDB58lpt^"MU%W6tC?T_qB^%MdYd@;HO-tr\Ppgr\JQoTOF[CIlN]@?W-0LHc%Q?_XN3QI]Y1b7bErEbT`459e2g!2@L5L&*`a*($R)O)M%p)3RdYpK465134AqXM,(^EHDr3k+5Sf3I=Nf%"A?ob#'b"m;;UJM;s?%jhD#>>]?8Z)[N'2GTQ5Sd?Jb[e"#3m--b28qXa(1M(6aMSg`2AiG!\29,uSIF2m_W\^,";hU$=50I/#ipXlKWXA%-'=6KnJNhkV[%9UXfj3MX7%`(hQ"H1#eO]Y)PHDahg`oDK2hmj(j:d^nGL4L3"/k[d9PGXj<+I/97BNrRn_s$3<SI,[=cNqlq+L23FOPR#spL$-VP%[H%(i'B30(%ue'0;bNRo48#L3^(X50"[(27RDRG:4J0.0;u0+`1,Ym!SN>4WOU0BXPDDti&'ZhAJ@FT5o%k!0N?m\r;seYs3ceYo%-NDBa5@CYO8<V%8Y@8^h^`*iQj5X4'3W;rMIm]=AWe#>UD@]idD$C3_e&9A'lWHHKM6"]'DJA+k!VZ`mF%*sVKQpP/"+qe`)UdDa%WB8FVQ\a'PH&6LbV3cr"$2:%%_DC_I^O#&,Y'4dJR7fTGF+5SU1_6UX-.)'RGQN87N]@W_+m5&5Qal9J3R=8c1b\%YrDo<`45^(B%q+_!&U3>DDF.Ph)Fsc8p&C7VKIci^,5I^;EABLouf8WG.GuI/KV)!b*@CXe#q)7e0efJ"@Rb-@L&Bi>?_f^5V@Vf(U`<%gl'P''!%SKi4obO6-l9Z2d0&(/g8,YnV5H@Jk2]]F?0eY@ObPb:tSfZ%b7U>o2543(Ea.6)a0[p&IM/Nr\3T@D71iZdPO(!aI4;!pjm?c&$8%hNDs&qb-j/WgrBM\^/Lcr;BZrr&`s=\/A(_A\hf5&m*Do10OgeM^O,R%dYEM94D-ino#9?nYX"7,?pJh>Wl9Ce&]dH5mr8=\5bHr%#U=(*5[HN8!.0L$F<a<:GQ)Dc[1\[i;u>!>,:HNfNJuYRj;!k9A'Y__T;a.#M6#_:TI!3PZk3I)nZ).9Tc9$aZD8PBN6[OR*-!W6%'_s892i<pPfb:OOk!@=@rhg_m-cAIiR#O=61*3^$`'g@H=Dd]MCqS'Hn)_[+Zi!UdjX`cr#UK=`7HW?sA22sS3VJRh>X7QPNrR\7%+)fm1)_tq_\\NfF\uVp8NO[ZU!b2sFUkaO2-Ee&*P8c&VAbpQN\UKY^$<Vd;b\EmVahr\.hoq5N;E86HQZ:DNLO[#"rjn^'6.I4=%<u%a"nc<[C+?D\Tn@ORZ2EQE].&._YL=+Fj/e"\d\NejXc@`.[4=TBb4<ZmPa.*OoP&neC9Din3SEipqR[J6rIOe4nSah3bN$m<L%oNY6&*WOiT=R%9E^$+0.lm$"-7+Fg,X^XNO[.ceH/IfhgV6mq^QX`4W5a\7]B-)kpAG>`tCp0"&>2/eHC?:]b`#^mL$qVpH6Nrd"%c.s*`rK.j60P86oKGTkS8e^/S>%m.NS^Q#N:AiM3/rrDc/tjCM!C")J.1a'7kEC+V\EQCAc^jP^0B_\M=gIrehuAf6INqo4l@H$8%XuMa.8jf3I>LFemD[lU6VS0_h=&@f[d;YHt.<,l7+I^q;+Hhb&2\#Sp0"iDu`;qF2%]hP#=[HBqLAX2j`$M*VqIoIgoY&+m8^q7W%1o)%;l>Ifcme8pY9pRIWkT5PtS:@E`.3cO=&AFOG=rNnF/KkKkmV=u0Sr"L22bVpEbm.]20f$c=Vj<Q;hO!ggdA,Jl1oD3OkO&!V%jklL*Vp'7K-'-H-@!K`pC0Ek%5TS718X0_]aOl_2foQ&8`I>I6n*@7^7Jl.($NlrI8IB8EpmMXZrBX"EL\1I_Ifki!/6q`&'^EIZ%);Rb?4(NKD+:Y4k]U:tqQ-PD4<&0glC8NQ`d@t7,*tT2FPM_KP@!pu$PQTSJDKZtk,MtMqqUj087i1#]V2"L-BofU4qObLA5nnbB%#N:O[_b6@P6!Hs?df'`".TM>i6?nrcf@g%l7/;&@s(V'FEeUo^/#D`]PbOXGMm.UD#$0q4T`0b67s!t6oTtU:ptXS9TgFm9$gmuk%j09eJ:%ZN\ZHVqJ%-^pQ,Pprm]8o2Uhm\LZ_9cGp?YfMuO8jYPaZ/><p1lGhBDQng9.%fqpc;-?cPt^tnDA`nT0N>,s7m%c-FDfb%!6?H\4GIfb%St&oN+OLCOhhaQ/oWos$_KEKDH'iq;_W$/!0Won8cQSpKN-37R\1jo.(+\S^0Yhu#hYaHR?M_cf!.X:rLXFHB8fQ9%mi65U<mMj2r*p]U($+VI7rNXf[gnSD1If#f$*kS.YrUkRn:lllhH=<`PN;(RZ@,>Ojp_strq!nQKHg<cAS^9;=t?hH\N[%ccn?7H%F-;'TFUt7A9#ek.C?7C;puFa+dNL-(L[<BI"K^!GOfP\LX.ZP-f4e*.*gZ8-QRA5?H01W0PCP39le)O=,EsQ[2)k0+5,5Nl3tu2,%4k'$?T%E1om"F$D*-)7.6d?tG/of<r12]20BgRh__fYm]s8?c_s8&L`Zmr:*FTMrMoDZ[N61NK;IO2Z)>7i^^V[Jrs'(F'KIbj[[%p][bmlVYCdo,BD^q[Vs;@n<sj=FgpX&T0Q6hdR&Z^0&5A_4DlG<d-osG7o.+Oq3g*.?V%2)q8*ecJL@i3O/8$EoD7ZfCR<OlIJ1l%?_B@^ZQ%$$US>_2ZI*Ej5S+7QUra"blZWj+3UV#M+qZ;dd4#d1$mHk6:@eQTAnM)Q)hXQCELXo7YYq`=-;>B+1q%5/7o^-N=U<I[%-\j]_6A-5/\IJ+2c%Rip#`ph6PI9ai(LIuR4'_Ju`Y%2rA>#/8MIj.AP+01LDgs%6Ye8p*=Xn"Kn6c^1nT)_^[nT]X,nlB_pQ227%f1Z`%G[/1lYVZk%4O)rCH%fgcE(UITpfHAf.N7%2!FQ7#H;>&^h\:9q9S,E_3C$_'!.EH485grK!d$,VBVrqBH<2L\</3%`Tr)js%-%[3hD-f"/9+d^c=m>0$jub#CbBk@31@[QLh/<2I]ghVuk!,lC!0>q41[X9RG4`7&q]!DJeE;l3&HGC13VIU+pVg`n.=CJd'jL\#%Qf[(B)u+R-W-3A<?V:*9e+@>]I:Pm/QOj'l-b3HIoE4,bW;Y3`5Dip^QgkG7H@9n!\UT1;18jj1"!I<to:Vc955JtZ)L=g,,uq;p%Hi8YOAVL52`,lCC#RCTCd\'4E:q>S/2%'C;Na3;kLn3u@;OoGJUO$;4c'6+6P%p)8C_MFU\.Fs+bN>V(i'C6-<*Os$V=gTFIE.Rc%6ADO<'A\67huYYD6po+mkU\\2,WWW1CnHpCR58D2rJPHd^h>nn`YNi>Y7%j2?E'K\-kZU'kc,D\)m22"`tB$&:(S/Pe;u/0WB4/n%'2>Jt-G!414=4'.;IKB.q4fNUohn-_%iFEp%T1ZfAYN#iBsgWZ6>U`R3=EJCB9RP+R-@!Va,TFB-g/]bNH>j@3R8o"Z*-g_0/iDp%nS$g[@.cb!/=D"B^b<;h7YH,B7>bG:B5_R@N"!cRF5NF@1.gVeR:O<5l`,^S7L77XQ1l#O??)mlql_-+c$9RARpUpSfj+=!JkB<^%hmfh%U<99[#8Wad0%F1<It<=I4lBdI6V=`Sd7iLUm2K.#U0NBF4]&t6W^]bF%M,_G.UPb'Eu.c`nV_9CK)@]8IRD&2B]"'hae43\%I3W&aZqAf]+/H#C'I;)?!st5EA(86G:_DY2g@oRZ`3o&bU<un89krR<Kd5(:_1@N.,RtNmbVW,qb0O8=^(Jc.KP*mT`XDaIf!hU8%QuZ((9`7H9Ja)^%IL#$#[lj#LItmfZ`g\PVS"ZlaQ&)Gh@ngXE*RVSUQD'Utkg^O?C3Lf;W@L?+h5hXuk]M`^D<a(B]G2SfeF155%-R06%4!QqYNgU(m/XZearIk_&7&a5RA=IT[@ga#6Q@&J.[NR,YW8Pb*JF"Xd"UBDCQ?7)k5S8u[FR[r1Tn@jKjj_,u&q_A2Zm&kD%nm?(iQXX"0<:R&>Hs+&\jc=oI-#1,r6g$pH+WjL65g>As<2ACj=8sS$TDfri+"^2f,h,P1H'_adkVK?+a<QTGfq%dKJ8IbTUBWXL%5%MfGDEk3[.Lcd99WECF*Yj^MS&oWE1h!bf.S_Nm"_?2]HA#7T!Oclg;mc37%Rdn>9j"UW5U:M&6!Y,+Zgfd2$t*m/8_Qng&(]!g%hl-XZ-Nt(4L8,*-o8tT6<>j<icbPpBq"UkI6q,('D"!&cfrBpHR8nb2S>#L8b"C_nCmSftN)\p"m32uS]R'DIa+<c^Q5NtFb&Clu%U2`9-D*fQ51QZ2>q>=RTlnWoO'[s-"dgIGG=r?qRSs@'2#,Aeerg/Jo0(C7F\R[/Ua94Vh"Ob46GfGO':Iq80<ds1m:ATT"F]^A2%/t8GY$5]rdQK<,%)T25)OAf22m_*dD=kUEImZG8iJd90f34`5qBl2%<jaJ/KnahnBmeL%0'rBd)\n*6@e+%k?g!j[W_fMT+q`#&2%#CDD_Cj>C25[,`XSqrpTk&"(=$.25E-C]kn8MqHYJ[cU?O;W#bNZ!,iRp1J1P*q4o[V5^r\Bko_p$D^E%F<:pijg@'QHs[jSe!Z]%Q>'N,he5"*Jb\.)1(H]>b,"5PERIF!IQQ4H-a,>hL1gEW(nUWQY])OAd%]1WC'JO0PT9E?,\52:GQPGDCj6-sF.+5VhkD:#nY3Y"%"G8&-(P?V3.J'@(iJI'2X.19VVTP#ZKTNY.1d&$t`ib`.k?)1EILr*4=Kr2n$bRWqPBW@\ksQE0NGP5Nf9o9dVcP-<g-f=U<_:$Z%bcc*ks0c^n;u?0eWla]KpiY25:1\k\W[B4M]$$'0b)[36<<UjB[ER'G9[j_t;!tVV4TQbCMPcsFOX^U0T!3V.\6>gY5UaHS4TR=]%51C73X0"7Y-^>3D>7's*L_NGgon5bN)1uhl$'AARH?(,Hg)Z9T-Z"1pjYkX&&od),WTjfUm+.TS'+XJ3^S@1b?pSX43rpU@S)Ya3%Np?J<G/>]AZYfh4im1U`iM;;.Vn*1rlWPh)-3pEZ$%Fu#%,HTc)4HEShQpf\&o1(-8K*<j>)p#G8JoWYV^XY&Q1J$6'@n0FHY1NU%Q&#6-RL.U7<K^sW&CX;_aQIo0Shq*=]kc1m#g)IpC*l3;h3Tr3;L+6h1BI2c]VLt:kZ6,*\<sIBBI:"ok'#"FaogrJR`VI%%?\]*%e\*#A(K<8_jZ_HP$$-mjIN'RU5@Nu'!OhYDUXu@!o._;e,4N/DObA2BFWn3^p8<7CJ35<KGua?HS`YQe+08b&s"fnW.lgm;Y4^4>%&TtYbgNQ4a(R1?$7Mcr[+XG"NoE0`pKah>Q+.!4SpC]8HS1]=5m\i3@jNt8<.92RBPkX-Y+idX,+$G!X>s0_u#_<Dr?r`g,YVrBs%Mm.O^hc"YVqHSQll]^hK,g:Wg;VbUH$L)V?j41;JA:>R4Wgs`%$^KatM;DLSkJEq"Q@(;)Yku)Pk5pScWVId0-X",j-&YHMbCqb?%5&XUJ2l]n920q8!)=b7Z9O09M-$?adGOBHB,ZWZA7^W"id`C5(P*W\/p$@aF<AKC&Hu-0`"KBEF=PrAoPPc47Y9'%;RGHooH%SJ&%L]mTH2f\3M.aAj"q5'Zkhl;FjIstP>q/$5KmeS\O[AjEqM(rb7*2OO+3im^b"ci.J(pf1%(oNtrS_ZnY*bZjaILYaBFcn1f&lL!>%6[n28hf8d,PVuT'-"FP4YpkCJ/VS5-%"6noD.6a"hE?Qa+<,U0)>VPdjgEB^IO/X1M\4alaC9PN^-kHAV1g:I;2rH3c)"ID=NS(_%d`;l((4H')+QNd-PTgXf,YY$_?QNbIQ*;,;5kKH;iJVGC\a'.&b4l3eD!g;KjbWAFMNJ.upRT&cZM@^1^2+f\]4DW=Zk`k,>An%,%5KG]h<$"Y29h'Lk*Q't0+d4jbL*;A)K[-#9YjEM.ZdNC5M?sZbf.Gn$K4UjEYI`qRHkVfB&/t8)Ysu:+RHd;Q*Kih`H`Z<?.Ccar%Eo@;.4'86,c;%YfFkgt+-T3h>RPV8A&.2)>EAge)kZuE?_X<-_H8[oGGY`dhfusO'FAi3\2)k:CatW617pG.XbcOHi<\O6ToO;k;%)OK4qoF=i'd6mTG-Ilq!*I,r`I>p>.k6SB7L\_B()[>$QQN]H-=f_:>X7?X`7!IhE<W0$mpFt'L\uJuD8Z5IA_'npEnK[OiQ4;:.%/XbKr<7=pV(4t[HB;HF^&7T6.f:jJ4YL%MHWMhUHY(k<O:gHi)`bhDG9bNBkNCt!>>6=A%%aoP3OgM#K<lZ*#05r3``u.dN[k"cc%aL]m)8k0@h]sA2JEq]R7ju*u9&:(Hp>+YBl@W$u)W<4WXUJ@i=RsD:P8a>_9A=NLV_1e+k0PtHgjj!X]QAX7p8_k+1q@t7jaeYEI%FsP)iO>F]+0c#%9M2tDnF5)QF)0qc3F.9"UEOQf>g#Rmm`DRnOQ$#'t3g/%B6UDh7lqd?\&\3%8dV"f+4DKZ8I7asJLFRH0I]Pr$%*EGK#D2"/$PcEIH'E=H)4+@FgESS)N7/<jp_u"3t6[MX`EOM;b:P]J++m4D8jF$Od&iZ@0A%C'ZB'#Pplo5q_hM#K_d'9ciQ!\@i%Q`?U)X%K)cq.6]![gi8Hlc7_ibGeJc,rB8W[E8`:.TroS%U>Wk;l^m:PH;8p#ssB8!2;U[&o'tW7&r^Kmd6iO3OGGLeg_cq[i:5f%^lYG)AkSBQ')I#kQ+3FRFe<%6[^0"kbN[SRXV*&sg7>Xo!Jb.-=s`2[UhS:-*=Aoh1t.R]X2Nig4>n[@)ceu,8u-Tk>:7lL0p\kP%I8LVnT3<Q$/(X7@ps61b*)nDU<C(Qs9rf7?**T^A/<!W9<gf(,SVih9M0>7m_R3#.f#OIaJg/`67B6R=XD[$$-1d%];ldjdh=mmK%#3K)8IQI4s<MFn=TN%s;:[Y;a50,S\NG4Y[FhM=f1>$,@AO]@o$r"tr1t5"G.bWX#C6]q,>$7m/h8>gU:gXXFKN<r.N-/d8P4:=Q%CR&!sG4dkDNGE3dBpDegH3km$,o1E'VcK3?djk<OVH'qhRC,X^e3(-2XCu\;M,oHJIBT_P,,XXSEO0-CYB#*!c%AY0">ZdQ)R!<j%`RrI>,t*g5!6W\,88+8+'<Mm!/bAr*ep)ASWDuiRrTQp#QGgA?;Y`m(e)r_f0ZXrMom+j;>X79>$nV=Gj&*qE8@*i`j#IZdB2:MN%nf6CXBQJG_aL^-jnf5`Xe^?77`sDQ@h3gg1]2lT6!&1S4rSR'_Wf"EPW@[f6_?619W5RHd!->=8^`t#]+j1^62VKkn=hL<hc(;GE%\+?:iKWf_aV\ZF2B*I/;f9[-SQ([t;^Zlk:-7?rG/Qk'$\N:&Q"mkUD`)N4Zf/!jhg@t-S,@U$.`"2+eGBYDQD\hi`\H*"R+"o`e%0oYbAK7gG-3^#%&(*67A$M#^:CIZ%ToTmknnb:J`AEN?NRbKCkSOi4n3a;%@bXe0s`Q[3W/XaB&]*j+d;ksoET\2Gq0s^:m`]?n&%l)RGJG9VJ,*2gObgqE0$;o/j6!-<X&Cuk)0IbNTLGBt=,Uf'8IFj9Q:c2:I&Zu8sLoKU*lRJsXGs8M[Agr^m"/Nm_C.EQ%0SVPu.%9Jqh@m7Hc:5%@#r5p*jiLW,hR/t.sg/XCjD#j'K`JSA]8+)f/RTOM)odAgN$@aqkmAu*iLGOI6am>"e*j>#@0)HRKQM2f-LQ/+/C%e8X`A+iZ9X=NJt'0WFe'Vk!$.8D%paoWC1tDWq=8(4!8sIXpY,I0Dp"3>@']'=g<8ONX,3DgMD]CF[qL#[0fj7rOIN;Kg;14o3E(%s+up+8;te:B7MpO4S$c1,Fp)m\!-2XnhP.ORdbe4cbopVTd"<VVLX!nC2nqZNRTI[I^Dbbb"0i,&e]glOQ^6&OSJmN]C6L;9kNkt%h<&cL1MVpV,b?IVc6(=#Zti%Uo6NL1o1(o<e?l8G-TiP13es4/hN5(c]1^@iU5\,-[nk/ibU("l/(]:)&Vjl;QR2Z5ReW/tf.TR'%gE0dfpj`8&^QA-u(Y#/g]<hh:fO'Du9UO!do[@S+^VF(eVr,5+>d=G^D>X`6^P/f%gFk7Ip7KB;dQY)(dN1!!^<b3FGOMb7g<1C\%"PbLhTi[/X([MRS/VF=nX]lj):RIU\^e.O</Bro=`Qhe]0[C(?n=j@AC,Q(@RkHW<J;d^-<hu./'apPI0<.tqY^]18M#<jA6S"IQ%1/%q39U%uP*Ip\p8@'<LinEOG_01op1l>?!;cE'flAhV+5a&:DJI8V%)P^T$l+fU=-[J1C4]d(c:8Za!+&)t_f4E@0@QInCf2XAf%m09>(]5Ld"U%*15ePO^<@:hRiLI6-B8?+5$8kjgfo)hLQ4p4s9JLeUon4D_5bl58<T;fA)+/VD8Gb"_-^4KNQj2>jE*L]L&"<$!;%(2,fe`li)A%/+]a5+R_5nW6pPj!"*YejCWRo_Cna)?sntDEalhT"^@=mUeY%6C3k2jo[VKZn:N;QBk_cBh,f.n9L@MB_Zba;/M'h%*KAa,8ppsaGJ\e?j-(sFp^DF?j:]q\!dN5E>6B,)]X;<5QNVmoit5Ta?`ckX#EA#%+R6,PF3]I/&5=b8m8)!_26k#o4/&X1U(gS]%)n6`R,2^HAH+@G;8&d6&qEA+$obgVuI/($Rs7MJ#o:KYKZm7m832duIN1O8VL;b8Hja&Kg?-3hSqT2`U*P/boDgQmuB&IdAeS04M%c=t>W6u15^[\P2T;L_':$brV4i"PEul^6/b'`%HW1LYIb)0)A@LZ0l;b!-Uk&n=IV+^\M2__MHM^iaYJ]4`nh=IUX$L;*G?Gc4-s%5o<6!j>jS>+S)jsJSsumD?0+[&0E1Rg=tOaR#8P/\i,u?*Jf@qJS[NAW;9:R\8Q9i/3;70nR#<IZB?)qqt%bKFVdainF3(Up-Z(<%,b0&"%dWE)H'#0r^u9>"9Zn"0e>V/\&,<quU#ED+?h-n)0o:H)_Qbh=426sJ4k@:16RG>*FWY/8'1*+uEM\JMKsqMIA,u[1(^c?r%^G',.mpRbG%+bcmEPVRs,/L.Uoch[bd_I'HfY)P+X,CN@Nio1/;19Fh%?DaS>jNCP_Q.;u[/AI\(@J='c!-LU[G*fhe^PDUnSi.$%p$EMIbi<VdK%nd^3C`C7g8VAu+"a?\D_rZBDY6:+-@O$gf4X\\?'!Y&6[+%af)ZGKb^K0Vc.%prEKdm]!Rb_H%DZM(hfVslg(_S:%77d%5's1LFT@Z#[St)l+O>)Njra9UMYo_dg?".A/nh8m/H5ccB0hEC:<1aG(_"'k''P7CXnb"G17&FY3J-l\^:.YW-XcLFaRq0$:%m9)rnAQ#QnpC8_p./mGiKN&7i2iQDp,YkX9#sTOCrrlPefoep8FkQDG`Wn1dEr,W*LqR:-/9,WCVOFu]:ItEU%A^?-nRfd@'B.?l%TN82T$m9YQF9WjEJWC*(%!VaY(enX.@nE2VAG:^]N(7sZhMNWs8;@2>7$rirIs&r.jXo<RG=e^JK?^en3X$E3]=QE>!/1*9knJ@_%Yoa#Q;&K$i%Y9Sl+b3&DBg`pB^j*]ZLB,Co!AC89e^ndF@$nV#o.pBJ=?B)/+D[;?ODA7iZDST2<Rl=I56ETLf?5'$@.UNQSH06F%R]W1_%2WF$euYABJ]/K<^U,d>>.69fMe'Sm!E^V[8G+b=UZqIeV)u]Pll/(i&7!/TAb";&AYnDqBIHa2b/l0p$HlY8+_Af`H2J[Q%5fVjj?o)Ai,678MCTZV&^m&bCmrAV_m(:l2n(7V_"e[EWdhfN*Vt+4C!!6_X3t;6caZ\&QO;BAWJ5<6!%Y0;#VcuPI>mNZO8VC".%3%,AEpF[aFONS-IH3kSoQ_>n-E"N1_Fk,)5-Y8*!^LeVZ4/mgo^UdJj$G^eb.TlAg@)MZASj57/2ZlN;U$#pJ")1Zq,%2Yj)tNml%<r7ipRHHe_"*NJOrXcZ.=q4KLV2q*g[3>=B&4kbi?CP!W_QAUlII$>=XRD'Uki8_N>_`*cr>VAq+h@c<iECqQ"M>IG#_FO#q1G=U%>$;d>N9]/e`F;kaUMk&JRI/XUla-7pa7`^mp4aaFMhVML-/8B(;-:+E-\_+\%%^cNnC%hL#K"&EOI3<#N1.$!=.$6YOkI!*[2H8)%[P27hV*VN2O:<bC/*GGEm+%J_(;cH`4de$o.5GDA_s&k<JX],<eng,ZBV3jl8)i-sN2&6<T(%0>>I,2=r)V%CfkAL/g#t)jfq?K#%f-rY"2T?QqlmLY[[qLg3W-McgPVg.#K_M@;9nn(,Ce2q,8,fW"5Micf"@N".9A\Rh#$"D$'XJjq%"7`T2<L8&hl`VphSP*n:HA4A%`0e4R#]#lKRdnn?:X/iQ-e<M@XI#b]*Yp2dZAY.83"Jk<EL.OKIY[Z*j5m>m<MjP)GR^P5U%a>p+[$3dW1dd*KC4D[PRe0d\FF3H%V_XJaFb]1hpX3Ct8QF4=-aFhB@'u:*Vhd#q=l<XIS%L%[B'R]&DFF;r(tl)KpWYP>4@3dl5;RIU"\UD5/eoVfA$OJ[Vf*]+UA@6S%K25$_9$JZ0>j@N8@gZH\Fp.(b"[7)kEHk/?aC>,W4+j,ulGHgjVng9S42S^7bdZfi&ZU9idfNL(HE^F^2RX]\Oi.g`I(>jL?SViE%5%.+5g5O<Zl:gS$S\mV8O73Q>;-bGF0b$hhiJ<NO^N(A1#mO(n/96^u^JfRt$$8m_;WK.lkI'j)73(F*J2d<;&T8F(0RF$U()q!.%QDQ8i"m"eq=_oM7^=8#RXm\QI!G@2C\.Hf0#P+FrhP=7_ri36+A$gp0;>:&G>AW?Jk8\BETba@^!6o!=>1Y-+CnHIK-6'#'gB2+H%feR.d)d48+o&WI23.482-6)0\DHS/hLS,U?Cc5=<>UF$LGRI<T9!UKCmX;MBB=:0hp9%LI!rL,G)e-.5>77haRgh`'C,_$pL/O=C%X[]SK7aXm6a^to3Cps,8fkf'Ifkd=TQpX8Y2Ge_#e.eA]b@GHiBP<C!2WjX;+u\2n)%$"rY>G6b=1d+$8Dr+>l/V,(D/A7CA=9At%>)]ob4,gV,M:'n`]Z(=NK#l'G*:d]DNDc*8R,U#fK$>ldKd>-<dn39jg^"E"YmG#LCReEEo/3u/'$!nHdIq9;S'ct@@.OYld>"UU%AN#`g\o&QY1YND@c8R`)BLB/>Md76<$j\K=*(0Z%<hH9-D+ON#d_\4`\(u;UBOe'\GoCP@ml"-$T[AJqK]3@oUFd^&Ziq61',()r%l4*QJq;E,SI07%-L0SgoQYo83L`]\mV]c8so<]t`(ini<+l<^0]GR5kG1ChS_,u\QoSlV)=`$F0)5i>dWnKRE[DeZ*eJ9Y[XL:p*%-%#P$34mn:=eABLW+?WF\CFBq;[EJnbYFGQ]*Gsmha\]K0un_q0U:PH)#9t%+r^'q)CCP9rpJPSSiO5XHUVW8X]%cZ*amKd[G[#=%noILTZ=l`C\*,BM]-,4;^`_D(`#)`mPJI=tb.2$l"Y6@[i4%.q1SR:P:7A5HH$H2Y"r:t6=ILl+/Je6%J,0?V<>%E1=d)7Tm%l==%h)j@2887NT14#B*6M:n[m7Br=N,oBO;O?(hBmYCI$r;)0r?.0S4qGJi394,(oUhGJaVDpVfQ%;B<(V#L1s+r51s)E41s$lpF@73S%.$?=_oT?H#'Zj`n.$DDa;^?c\9TT+Y0LChJ']]57JK@k_6sS&\>02>LQ0^^E,Pe`)g;rM?23Drq]!MMGH1!m*$i-VN23?"Wqb2YW%?ZZ600ug'h+BFq:.V!0f[*uABRU(MCr8>MXg1)s(mj<'(2NqD$Q<f^R-LH&$c+tH.29g>iCN`DpXJ_5X.0?BD=n$M(UVbG9+dNf$%$e@&Wjc`lJlH\tgP/M@/.NF*>cU9]kYu:/V'Tpf9\7jErPYZJm(#4I\?duF?\][:2QE"(NA+FT([!@l>p8f"]%*+#:H!//<k>$nc%cqm7!,G!5*lcgL">[fO<Qm-n#mkbtcm*aQD+`2VW/.%=cZ4di:Fp2qY-IW:=U+5'"kfbOE/kQpNiIn!U9c,ZUV3WsF+SF@JdS&eO%aJ@\/%j\?XMp6,t>):`^0=0(S3gHRJ`)QRpYV_V4mLqT(rU)0$GQ7:+hLtMM'<+7-&<l%'QfJiBMPr<HaO[0d+Z^AicMMR5bSAg@%W4(r'o2Hp+`b)n[%rHDkp0&=o^/<mRA9o8X(5JQW[;ZAK`iWD/_#=`u*EAkn9gsVB(SkZ?YA1M2l1p7HcIkl]=g$_D4:su[h:5[E%7#O?`7n^@tR\uSQ?kNn4B)9@h>.\%&gn]m>9OmtnB"W#YUOEneiKBV#0f.;+C7D,h%SRl9Au75kMPk87+`:R[G+"c_cd3u9[%$:j%,#937!+2%O+ISfLolZ7A!K0QWXI/*]3\&^GWGS](^A-9*`aK7nNHm8-+%0G#-8Rfh0[o'KAu8)aAu;nLT'6l&VIQ%\V)"-EqQ^6A%Aq+=3IAM0-A^rtRE%q;t&J8mk;JS9U)@r]R?tQ6"HYr:)\m"@gG?F)I'.]X@gi4%61VWi]arEs`FUO#J#I8,G*3fV,OE9prNg+Y=%9"+,TFAa5$@Q)[i.5_>L*,Cg_qPOMqihSr(5k?q&OVO8KoF%6qeL[]l0.7nqk;9J_99b("S&j,b03.[Y@N\Ne*BTAObgnoA.-FYM%9&M9q\Ipt"S'R\Xm3Y4E7<_=&gY[!W,tRZmBLGS&kU@4;TZ=FDT\1m6(g5LP0n0/&7jNo!jIApB3P19L1eC=6la43jj[2udk\#M,%j?bKhe`STi3(j+HD]fc;5Q6alii;'XB4KID/o!V<f[Zgr[K3ltZ6sr-o4"*`JctLge3J,Lc(9@;?s(rp9<i2-l&oTgPNB.?[VE`!%![)E=gk#kYXdOj!2<G@Y+Rn6N+E3cS&3/LSaaJ+O#Y+T/ll4,M.!DQ\0oXXj[[FKW+_LG^/rO7MmH:u/QPc&p%f_&ghKLi<ffQ;+%ES:piO',B0>1c9Do#b-D!bM;U3#BKp,1pTe+>7r\Sm#_mDC(heh^+oilM9dk&EX[7ld,d&q05Iu4IEl>)71[g0J/[6TVl,.8=X$V%R-d.fk84Bh`i5UIhT1<VTNFBY]gP=>k,KJ0AeAY[kG%M&N5WQb,\+5*h_KNnq`$<'P93mCk&V;?Lu;<(.qc]rMTce^4C>Qe6Sf":%ZS:jLYAMij9gN^g]BAL-Xg7I*ULoiCk%0hoD$qH>ZE&9ub/[bTMlfkOA$2ga>t.;2qr>I/bk6TjXceiGEa?"0#^1nQSm/PFclDNh%finMW@5M4E\@X$0"&&&'8)PnB`.ToF9oWF/,ma"k\!`EdEP10h-'BpQVE>ZPn#8-8a2X#WlRKn&L1!FJ,Z\g-f.2RjGg<dmC$!TD%Pu?`IYbe8GMi%K^+]@TkH6P^,\R^Z.\8:D1)t>X1FGcQfOt-,i_U=)5ZHVO-B,pt7hg,p&%Y/-R!HIh`)0Lu4lZYifM?e-dlhsIp%gdOdW/P3aMp.I[\LmNNY?@KQGH$XtE\!@Y%8lEZ.WbpM,H>N%%Jg?uU)qbSC7nF.t0?n"e=orGgpGr5s]#96#iL7KTR\*cP'&n91%LFaZ5d5:l5q4j5?!:7XF8/3Rl6PZ`e-a^.O`cSY^f]Uc)Q"JlCmpA)1]Hu`NlHbl87/;3IeZY2!.T.1W3MIN$T/5?]ZIHs"b\_Y*%j_#jOd!Uj;Z5X]E[-0k;ZbaK3c@?,gci`*Kr,7f*.7oA(/bsJp.(m+ZPq3D!CQogcJ84fN3Wg;o(-e3?T6ae(GYFQ%#'@*QA3*[H%@sV0t(<Ta@A1Ce[D/*>b/X4!eJ,2c_jGJS218u)8Dc92::0^YA=Vn!8<3N;*!5hGrbYmcU;$*P^G$#G,V:cLf3_Fp.rD)d?k7C$Y%Q#uKs@7JF"G6,7^U)u\6cD)OnXVpBk(;IKS+3dR_Urc?9qFQLMIeZJuO4a@UO-+62=SJ"!R/0D,C=2oVoofsQC>MN>G0i01"J%n^%G1)2=KEL%fnN\3Q<kaY#o'"4Fgg!tD7ZDjs2&E[r8N:9ja1IrHfX&6=@K<-Ho'.S',,s>6:QdF+PGDQcT-UhIIM/fHX\Y53:Vp,k%:Qq0F#,CGII1_6^]M"D29Dt^^l4+J3S-TqZ,i'iG/km9qDA"(m%!Ro2^YMV)@.FFAmFVdP'dF"$k_FH%.Go@?PE9Um4Q41qC]LFZ%@?QTi\^KRrVf!iL$"3DkE0G69=PV'-`3E9E=5hVSf"GED4<_'+BXt]70YP$u7U]q22ZPrO?QRa'82k#G,.Y:1QCV'L0teIGfXIg^%guBWmAhlq3+q.emlC(A_Y&8cKXqB']%KOuK%=34#V"WkQaFMHYK<,>G1ntjGWA?c6'1mLkPK;<:R5?n<\Oe>C?R_K:"A-i0S"%?:%eK!#=kflhj428<tR,?\p?g>lF>G(&\@!4$JE2Aag-a]l^P!"oZYQm+5@KC3':1os`.c,Bk=%I.o/oCY'HPN:l2d!QdEik]Bn]YKA%V_9]@&s?i`@8cA8>-^)\d@Xe$OJj?e%">F-H4e$9]]*k#b.6[)M9_o'gn^?s"F`(hH>t2$@29p5m=!]Vb]A!%W*5Iaf6VF8;(>l>%cJ7*<0Yb9"W:<&tN\Z.Qf8bZ"r,=>I8)2qYX$5o#c3a_@0^chaEce>52[N.7q&oS:kOZL]!f-ZDBg7m%5Q;"l):oJI/n%6Is(RhD%-;O'eY4NE.cR07PiqVX"7m_#0"njK*H,JYoeM*hth19GnImK)Hm3(%^IuGlNaR,$krMsQ!ke*`=KnXPc\:?+fPD$:MH3p<V4-Bf7%0P,gEjD=DT&i6(,%8.U$:W:M!GoERT#Am)U=-YL<o5(UT/CPmjXO`T97nM(:Xt43:X5)agcbFn@NemocX^%UjBL/J,d]H,"?_*Hd%"jUs<kp]e'IcoB@.K<csR]Kj*/Xme5%G<+!IobGQW#G2BIHqMI+H8!^;CF+8E\;W]M3Ui#1Y`:4PB'FS;-=@U]CUhe8_B-c`#lq)%IZ%Z"Lu#J:moXRBl$=!@a_LY,;KV%_9=m_!2f(X7V1hglr*+4_"Mc.nDgu<=ADbtl8addOmMeB<"!qrs2#5F$/H$9s#)dEqKEWOu%e$fn=SKB4+k0>_^J#M(X3]Nj4:W]^i%$\\VW4(3Xcr&,5.%IH+Dc"0]RHbL2aCJY)+5r.`-JB7IIg)[F5c)1kdc+A^.n(UR[c&4*%aK.)7*4"Qk@UbdQQLh/gY+qgC<bq-*iYnjEP2O^5:8@us%2YE"b%R\fSm1M2<5p'%<4F&S*COUTmRBeWn?7d@hN0NKFm%O<P'fTT%kgrrn0@DR=FX&3VI7?mf6n.^3o#2P4Hipo$M(BY3Yh/56Ga$n2qb>1*Aaq*nEZu\#9$rSk#^!1n^WE!IUP::(<uG//^/:08Cc7OS%gQkf)/NX`rZ_rdOCD"%Xf</Fu`"??0Ni=BT[A5UEqK#G1U<5U.6+H.c0tP^YJd).=EN*&g")"GlOqPZjV1>bspjUm=T0,\9ZD7OI%Ne9+3Go@$)?lma`Id8_JTA,!)G^Lr;NCSW0`#K,X*5;p<o<gH8CIB4/8ar7/j,BCGN-p1^Kj*(`=j;m7OZO)JjTra`I]u@L,%W43%Bju8XQ>NOF-t!QdB0/>@67%)8Qh@!D.T@3:XAW.F&4n)gE\8NLDB8<]L#.tqa51)74\h1i4&36K6SZ$rRXtY8<H-&rj5=M$`kcYY%LG:5i)opH^D&c[1`pl^.NU*DY/_r;h%:uE]V"<iJ%W168GnXZuDS(Wp4*BR=ZfJ<Uh<p]fO!L"@*`]4[r*Y\gf8\fGm7Fl,a+:$(%9pjMJoTm]\NrHmT#$"?.W,(fZV+%3C1Rn*@hB_GW+@-:h1m_epa'>L98NrJQ2IT(0jhRR4r+Trp3j/4P#%]Xr)\r`1g*&]o(=k52%XKCMCB19P.HQ65Ao1Q2k)!5h')R3Gf<6H,HZ.,aUa+:)UHk7Hp4q3HKOP,uCI1E`eJrkcR=R)`t]\rVUVS*[3ahh&i*!pA9XeAcP%Y6UH$8$D39!`e8lm</J4I-_$4q!Ga[SVo=jOLn8c+;4.mq`_bmbJmbTH3C/3JNDho>-8*l3/`C3Y6TS[aJrMVHlB7s&$S0_`jb7#%5_A?C!,XL'C:YBm5:VrZEWFT`h6TH%g?K$PbCR73ZC"u/J/(/\Ch,]D3RbT0q4/E)rmfT<R=7/H$'Q1+EB/R!::q80bCKmq-,_D@%T(-.;6E9^!+L&?qLgSlt5dYEq"/+U.B8Bk(0\')X@7hH(k1=^i5K7NB(V:[fYP`V8eVn!-KIJ[%h(KQnaHO(*[U60BlHo1HH9Dgh%a7V^;7+*mSgIr@e&?0E+PXmDuh#^n+;=/=dQ-TqJNL5g*i5qO-%*1C=!9_I$;40[DI(LK9[$5rLQ5;'T#@?$RbKV/-ll>06c]"hL%JYYO':?E(Mn6EQ19IiB2+H+n6.?2hMGCHF.>%Oo"&!HUM3mOr&d1.riSgk#00kKYU^eTs$&eLsN`^D>7G18d9c9f3"JkY,2P0Fi'%JVD2a_tU?n6f*p20m2Wk2N#ok.FG>?k([.McpK2p(8h?l9?m&g;8V<<M;Q%b4GjbRE=(`Se8R?$28I.RSH_[WoU9C#1m83J06tOK%UfDu.,C<P7[<n`(8le.*CE>:@:`WSo_OFDW3eq!.il#dD,V>L=aU&Y5R3_:i64a8o-4#3@h;g:M(BhR*pr7B:MMMO=L7.E+2Hr5>%`9ckeMrReO4MlH5&2[7G0O9'1eRW$Z44_,!igjD.a\q#"L-BduqN'a1o.@9m_h!;ZX-'RP4::NE03dR!=)Sh*6IKp+=Fk^n3[$\h%Ng[uXG"eiZB1_Y274t1%BGY&7Z6\OZq#8[$QW`%(1G\Xcgbt=C6B(-[=USZ"`b/VL^quqs4<<QGbgkbKko2&K4CDXI<Nk_++j;br%c"3jqe,"L"SuIR4Fd4V,"D8\4Ysd>1:<f*^\dmiAh,:*N+D^5B#2>REdMcu:I31k$Mf&!CfSU!Z`'q&o,/sFPK#aj2l',PJM?NOu%,rt->87,B+3^mM\PW.(PWc?gJY>:&!kL[]C+q0PeWQq:rs&A@--:+h59?Sl<NgL#nTVt<+TiLA:U;qIg=jHglJOmnHA.eInWF#NJ%;-9S:6m?Da"u?NGJnJ*MM*]LN8MXjA!?f@\P!/;K\8Dg"_piO[[+-;?QrsQ*ea*dP#gi7@n!_0=!."<ZMZ>!#(:^I^!QNeDLCPm;%Uf4<E>6IL5G%<WG7f0e$rMj&<B!Vbh%F;<u";j-lqmo)?Ob#[W5/D1k]3R4>+L&'Tr.eko7,);`J,jqSA`a!6/EXUH9#5ZCC^qT,%gtJYdJ@oRp48Fce9!^P)D_5@g)0K_'.Q7SnidN^5o0!!^F!+t%%^;Kc*IR4u(TkfJgH6u5OYFVHV%XonhrLI<[U.;H(>NVi\O+L@%E80BuboGZCk^A5R"*plo*r*+6?T10KDrgO#5>Otu;l"@N/V8$Ephd=-bK0O&f6g$9X_+OSnAsiNB=e)Yn&D^,/MjSYV3d%q&h5Ka%o<tQ@/X#9b=aAAe4!?6,*Rc5jg<i8H3fB1^8@%hKaL3lg"rE^nYe\"o2L.s@bg`8+gkbMm0sY/!c8C/86IQ&=Mc7B7.G=85o4("6%q?@:$i5+!Hc>:l2^rNFG7o9HdL]j-C$@n1\Rk1R)`s$_!i;p1./DoMtc-Zl+fZKW_&s7ITRdJCc_BNM$0<H];RQs2ebrFjS^e1:=%e-)M\cifje;Zq\g45sadTa1c'dT=R:;Zq];Ta1e=9bW=S0hpTTicl%@_u5cB&2GROCYW+0`qCI[2dONnqTb^I\m4"0882Y_40mD)%lHA3WZqB@iWT_f4l3d*J/rRP>!b)+AeRTI=2cW)\5la*T#2-/b2K[\B5I!/")V`(oZ0h*!=3,t1]mo,`ns5f,WBY%(&`rVX<.C@D%O9I@&(Bk#>?,%t#n/W;!hL>8<8TFfViD_@d*$>d:18Z$V)E8N^]'(4edP+78g.O'NI#gM-)TR28EcB9F\q4)X#hMKdZ)oI_9FqW5%k2V'O6-@cI,pEUM@`p&O'*Q^G$%h@o"@5jqOrt%>4W^@+8J!FD?R_I<&d1!X&d6B`')8iD,^<H1YC`EO1h`6Z^tR"n#Z0$\>K1mk%>Ve(/!,8s#V)G/&cWk.L2NIVt$A[O,+ODUkY;'fXmQ-AonD(c+*=0E\k!Ll(?pN]&F;/1"!4h^j^:bDiRg!<S-"3/E))JU,<&<IM%/3m"mcE@L=?e*Lj+`?$j"#C<=d,?Y$@2:P:RR\`G(Epe8T%YgFcLkGLK?Ue`8R`GXQ.`M\:hgeSkYn7N`@bOmD=tGs@=ZMTgH66d%(^(V/62].^K4s'l"41GZC<SG@rjIqr&R[FA5GR>-073PtQ2rf&ji[aFFC"UCL6_j<g<JGL?:!oFq&R:"i;oCfhdIC59Ip:QdoJO,%fUH$d/ok^fCfeI&UkE3uY%A1'ODi44hH0OXl0!'s0XCT,hug:o0J.(9*$iR>V.K.18_ZT6enN_!8Bm&`XB8p4floM!#)S.&!j-0t%-R:?SAKEg(<lYo(5g4R&Tb9o&jXNOI*P<qp-%.'Sq2?d;'UNj[G7XL3_b/pnr;cH?a-',TGT`Fl0k'&9*n(PhGF5"Qn^BFY,t9.c%eTBgqZs,.R4VI_%.ijJihi-cU\4dR?eH#T7ENGP(`<"FH3\Qp*O`P/hBPomd2Y)Z=dhIBgkB=fd/&Us&IU4V-kWFbmG[PodUn9$c%n:KR'CL-g)cq`PQdcJq6E8hf'62G.a1;-GoKLshqP+pVkCR-AeDC2,mQDfpoR%HXtY[`FrPdpqIW2<<7^Uoj#>s:h-Egsd9+e0,_%r;&Lmp]?r+d#r<f;*HYVC#1BG4DBnp\nUdAP2T!F7FV.RH"eUo-K1l[UuM/Kk83#,$&@9`k\EXETih5s7i#XOD>+G7meAm,9&l?P%Ns5nQr@rC_OcX]0e,f2cL)!a?`iK]W5buObo=F3udC/lCS71I+$MMH/RNg4C,-]\[,n`CUMPg$2>NJ"-DYd891@TYOJc\gShB$sr%>45GnrFb*^8](*"r'=#W+o!e&/HQ_YW>:EdK>nC+&DFIVGRR'c!t9If(_NhQDgIq$Ff28D3fU@,/Fn<*.#Y,R:R\T:Y*H321?'9K%(eN[cl+?a_"a6d?@igH;6*3&1'TpE?]f"U-Wr1\LV(2:Ci=YJ7nq8nUDgr<KQQ"ot@0@'!e^Geb$+$:cik!;he[V(uFdTkF\s]M6%JTUDob3p=6XcA^E5L`nh\4+6o9t,GRcu2CZKP44KN#fOV3.U7=XmI''1LWTdm+li!G^#WNJ#l%D*danoH?oj@?R7DDWb.ND$_2<L%lMa@KT4KGEOg-nDijTM4oVk!>qIM.Ylco[%De>F%$2\RZjf^T6S''$e.PubBC]>>1I&W+?W:TqW)LislMmkYg+$!'#Q43r%Dam"J%EY^khi?L^.NH4*-hb4L2-")n6c0Yi!&?LZP7gW=-S&t+=]5d=/918r\U:W0,%e0?;5u\`mlmN-h&.3cEbl2j91,n'gj:<Ro$ANM(%,P0;`/k/c/=3*):ADp;16pt"f'@@]&T`o$:n<TS9hHt6MM/mc$iFtpD%t!poi5HXrT56t`]bFp+[7F[N".k(bM^SrnQ/8,:I7s>\%KEUPu/#fi9ROTIpYR.(Y&M97s4#Qj:,JaVU'N4U3&Ge[O!ik!"b@DOa&"379+p[?7/"!DT4M\%0*uuL0h(G*8/>9$^<CkDk02T]*%pth1?aSSVhFJ>;]::SP>R]uG*.>/%G@'A`9b<j1P^EK*G\s_HtVYIRBPqUVUV)Eck!;?](eDSmjMW@QjMopuTL4,TEh.bfgZ>..k%/pV%&K,Epm'B<Q=qIAe!+B'*I]]9-cd<;g1kFV6#7S<ech!@;!.KGTm*(+76[(Ue^$Hn@<-Q=nVYpf"^>qE:UGEn=(\as2;RA&E3%gAldE(ed7;.>,]4Q*,j=nWK2qgp[gTD%c*U&:c2Z]l"SifqYJ_e9"U6`+,`6f!c'TKesJTXtXETqF"Y`!-m!]OT:>"A,.krGH;ts%#\8#5=Y(GHakOZ.nq[>Z:Y:4]+'$VKdQE^1gb_mIPYFDZU7T%Nhb[$H+[l2/Qn/:#4a?t%A\u:/(4`Wf@(uRYSj,7o5%:0e5i;eo%*42%mh6k>MW-*^j=1`!5M""#%RRbDCKp*G/'$D?0D0+)NOq>79KI!7;dn_%fPJ;6S?gIK]f:bE[2]%9LPm7q2]Nd&_7*ZSXa/\45%m:RtZKWffNZc?2[bs`H>U;LH^U<BdU+T_VSRGUTOppEbu0@TEe2L[4YS!<r-0*\mt37^qhRhg`f*snFG=@F>0l(Sh4[b&6#+^,\t%]"$IeMaOpECJsBg*L;&km4M)P?XOelR0Q%Aa6.GFkW`)qCH'.%LYNMjF>Dg3@2)fp])oGA:2*QCDe4GY7"C+!HYRX+&BZ%rE:D[E%!7T0cVa3s%Q8bS1Y39Z*d+?]Q#t8?]E>VZ9.IZ\6Ckh.[@iZQh$@Ah]R9H=GGcdaUM)W7m0Ifp6L=k*QG9AV"a.*7gO>G"j9<<60%SDd4f9Zl\N-+28%718dGE[p4V@3TmE9u]%1Jd8YSAS;fAC8e.[QQ"q(<c"%&K&hJ1%*lt.#O]a36;;b.9?S_9$B&:.dUNF9n<Pt4%#(9[A]W.m^h6!2SXf<$]/MR9HBh*YT7cVcn5o42a5=g#'d[CopH/K,LS%Q5K9;fllmWA?-I%%[VHKp)obfkqf?4HcN;YmSdq43b1%?b;!i1(@T*j4@0I3@M.Df(5BI)f,f(S%5='qafAj_JLKHV5-*A5Ah4'NYV)rg2E[J+LNZD=2?0@`]GaG4#I<2/VYQt0C;i]U"GDb%A#&c$6A!T,f!B&Pid"5I"Em]g'IA,d'4.A*!_l'9QQ$`Kn=NQV.I`Wpel^U`2sa0;;Ekr_ot$eD+XJ^F+%5ga`gPQ^Lg10%,/8I]%R[LpBgC)<4I>KbKK)aEZ[5Fs)1.?\:_riTV8<\bF>GM?-F\\VV=$CGV-)9(TRg4+\(#cg8ijaoU9b?_l5dtF,&&LjANgGSb$kYKH%#-34WQ8?5ia>E>c04U@*:T;uW<k'H"6_^X!pURX>VW_sf_EE]=ND.ufq[o5l8Hk.E_8e0S\?8dpa:^);lWWV`q/#,#dY%'1,6rkm%(r4q$dRrGq+_kZ;eB;2n3gFP*M["UQ(?InqQ,$Ct!Bq?_Xmk&J*J3%.QqiG3O>+);V%090N<SS0K[B@!ALU>?pI5RF3XoVAL'U_*%ji^`,D?7NKenZ.pB<t3[kr`b5bl(r_W8.HQC?as5^>tIEgRISZ.-^+cP02Uegii&Mir:s^r'pU^?^p9Y3XoG2j"JA91:4E(1!T,^%8lo?h)"_f7V/Fc0)_,+l$H#Y.>NQ)FLq/W3OSUbR56ImEc3D4oa:RKq<V\oGH<+UhT:)2W5=7d#B=<A1Vt!m*Yn!Q?okbgdFNR[+%F%m'f+)W8u^KV7_$LPj0k&p"YGR4D0kneU^6)Xfu*V([)iu6L@@umS'rtK6Y4P[]6)nQC;N)fpVY!2K%AX,T`p*EZmnK<q6T&4)%%S>ui<I!MO935;1R9B;g*MHYJi90lOP.-hDma\JAKS!1XD2?<L0M:<dg-gAW0hu5U>JL^+DTo[_Kj*T(;>:(&@Tn+ba:ca)_-iom]%5*4Th;!B3Mm&2,g7Fj=dPYY![f<5g:S`BUM8u9eUPl"2G!4f)>L2geEnMQhRJKTA`e"8XrPPu[q%`3occ6:,Jac,+YeR.;*4',PG%&te1Ri$p9VBVZujeb^1D[WXQ5K&E`AG&Zm\Ul8MI><)f<bHol*AP#d-@gOXjP2lXOIa([CqO=?(Jj@?KQ*XEX9R8:I`=Vc\$*.Z>%a'0us=0$'V\(!8?+*JAVSYmKY>0Y;>#WCmX58+Hp*Mc+k(Et&9M;FJAofSA2$O<?9oRuLF8V6gVRiufc0V*H9"iifcO_>%K50-IS%iMm":U*+/bQA6U;OYjS`N!8($EQNQ#XE9o$hbJBePB5llM<b,hB"c__SLA(9(lqJBG%SLu)XASUO\iNV_X\Pl+rMK1;&s**(AdK:%2RX`BgkK7&(A/bB9@oJopsC1.M@HY"3f1H+:gZPd&:VHQSGSgW,'o/&\-(/\j5Q##9@-J[hQVgYc87g7Kg.T]G2uo6MAZr;-0LKc%Q?_X.)8i"YT9E&,pWc$@]U%7J:b<+Q)]Hk+2tK*?-%>78`Kt<6;B(+^Tg5J58Ya^56[9Br*S<m%YTtjm)2aAtMs50Q8:sA<XPLA.%:IMBEB&;L\7D@5@fRdY"G`ae!f-/%VKSuc7cO)*h<pM6N&X3W5%l(_qOuu6)_^4Q]jRB&r"Jk$@J;45%%NrHAJr`9P>H#EqY"Oh@%-"!>_9EGcti8$Cog(Ks4EX%?c2U"quA9`$k71Ef$<HW8iI.N`XEm@UMG=7fROY$5$8d%8<X3+"0gPfu:GEguJBD3#G0JR\FC-tth%3-S"DC1S12:]s,GO%nbOA1k/*NR$C*dg;i&A<ng>:t\ddl=0JnfBK;qa?Zd#gSg@R7HK=SS>58NS@RhnehGX*^4j^FRa-F]VrYYW%2a:aS/P"E3Q^3c7\UpQC9t36]\L,=ZhKZHRPlndhp4`rJY-3/.?LoSk\d$?>7DUK=Y$IT^+USZ%Cfk])FBQn!gbRZnYjnraB="GP%$Pd($U2(T3[*[Y;mfi/E5OE6XB072+H^23$n]_bI5]c9:@sVVL%I)Eo0/1'/QrC,4(+^hfSA%+&Tr&Hj^$7c[d[dg?Q'aqJ)CrVO%Qq++p,.R9@D2W`q8(<tL3%Op-7DG^Af13;C!W=#tL;p#?/u)(@3)Q6(M!]b\]*#TZWNKVD&S@f:)V.q$ECif_rCtpY$l'&/.dkM/%/1HfK3O5I`l!7*J"])lXlJt4En)Gp1[3gM'o<d$+\ma?[.m4]k)A%8^5Z*N&24=fX=8Mj*9:/OkgSLBK)]9ih?(KhF<`b^S,J($0%?PT%^-F)]bCYS9))s%lVY\j%^N:JN8,1Be@\3Fq#Y>=+sMm'oH3#?s&oDFBL5WZqsd2s<F0jpQ\+a"1K#4%_%6I%T6XE=sbOd6QO%EK-RdMs]gu4j3+o9CHjk3-P6FS^[':d4)KRmp@e=R)nK;O4mR-,^&Opp5/c.%7SQ"<kq?ir#%e=_gH@BY!62KrBdk[4Z!tmre:LH%f?O4g!K(6ro($?1^=:0+'d1.i`8\e+psup#kgt@%fi^j=bgQAtM[0btEhMpu"3;L\LQ-Z4/O/QWHig$_3?a?%Q/;n&30.fd0jJid%qWqZu?at+Y_MAu8E,4:JY.<W#i!_j8pG;bH:1s)E(m5Eir7,k)'g^o@YbQNb/T%8%Wd$N>Ns/ocr>Yp+RuNO7U/\Ln6Xe3L\iC1G%W4^AnKs:"m)*u3cYmO([;GE1/"`aa-$%819=AT?if[[r,_o&+_"_t,+Wlj46cQe7a^HaD`82tBc['Q_7?JEcX\Sq;oH3CqFIScmr%F4W&;7!pU#7_pZk,pY2\UM@%b?&Fob^`1f.;5]GTBbbVgLmtB]1SRB#PNY'u:&'8Y#ff,(N6s;1/R?(3&;(O"L]t]G]17D)a2o0s%l,`c6b4WE_hd0"N0MWe1!=FW)89[Rf6aKNr-SJ;ID"o7-)m3<_1+Mq>\uUH/</[Unnu`'cBm7[H;+0!WOKkUbW/D<<7Fbq]ZX_`:%S+-Jq9'^jTUC-H&W^Q,12*HNKXc'9#a#ZP(>ZI(sEj:N8?KJ5mFQ8WhKa,9&&K23T70nU\3#K<&+u1f;R/PDEAJJf/IAPV4g"k"D%`ReIVW@b]\ap$l^S#*Qd*5`qZRAp,f3h4,<lP/@=1XW]U<3S'pH9uUFS5*0M[fia/=!+`nB-"RcC6u,+r:.*]cL*Rd6#;5>?:,]7%N1*&#<@4.u#-,"8R='3Co,ht`dXk`(i</VC&4Q$60c[f)qsp$q]oaihqI<Wlh`;'D&<&tDVhK/X_EP[bX1*al,[%hBW]42AV4't4%m15dC.c!i7]OtMG-e0.VM=Ca]>k"%glWSdpT2(Ymh'pZ+F3`\%A@$b7G_`7n2QRJ1e?k=*]l/l=WFa1,ADp:["Hb7NRRIuu9,ATm%RL[+<mMMJ:lI44:/pX0(h1;P:G`X\;MK?rHa+8l@-#$g';((,H'@=L'+B>cO[hhN!qcd%d10%.Xl0!*0"$%."@q7n_A:3t9&iZ@0%kID8ooC?VhhE'BW9iP.)%Jq)jk$L(=4$>BKm5j6nC%tRFJ#-f#Pn5%=or=TAL*Qb'lP>mkODl)YD!Ik4%6/n$/@O:LH>J+/k"9IG%Pf>?ki<ih1nB0&sA+=_#%Zu_e8[GJP!q?ddAn[S?78ABtp&*0`aK[<RXfGOE&3YX8,k:X:,9S\jF]<)hUm[D!`KVOskTkZ'd9Cq_%a>cnt'FN>'_'PFoWjWBIdEq0&UkV(l-BWqMV+h7ebSDgO/g4Ws@G3FW()"3i?DSgj)9A7NFA?GTE^ZHRpSdng+cfC2EUc(r9&ug-%G6<Qc.^:adWqn-B$)Hrd:*e)]@Q/0_7Bbbu,SoD[WgU7I/%39fY0Ko@"gFTji`DY(#ij?)faWrk"[pPp@j-Ig10!<P\-@nd8>9Ug%AVu(L(b)-NnK=Y\;#s)"RCGs27OR#]^m_o5ECL\WjZA!@h>?91VFFSaJcMiVZT!Q3")4I#10ZRhG;Y;!3)QaN^,'+1;/bg6qY=,]%$jr+pe.[U&41;h=CYW\uj4&#nl4rRbLlrV>-Fr)kgp\kUa-[+KiaqpY]M(02D,Z1rE"=ih,QMlBg\0;coG4]\lR(b"/<EG=0)_JK%6D::SJHR^5X!'"d/lP5/&&#!#f:'jF-!.u)%k9OfLbVIlOZLK3jp[_g?,AbJ2.,jQ:p6E_(SoojR`b"KQCR0p6c*?&4=aD2rumBX%5MClIDYp2lZ3'pEQp)Nk="#+X^W.C9+84E`P$>?slTWL]&m`HcR0FtEPV]=4?eqJ]53eKJ3`o&/B";T$7s4D8:_+:hZ2TkF[VBV9%.]\oAAp&HE-eG+QKG[f[X]Ip6U\4?akYhT4N)aVX<V5FA']C6RgN/N116R*(Fc=`g+8R0LSs.[aG[[&`QfCM5M&p$32-)nJ[UcIN%gEn*-;\Z4TGUdu;de!9hSF9+s(T]mpM\:[+7PYO%;Gor*?QqAsYb;dp@;[BBnI.M_r)jErkj9Or7'[7F@BE0m4SB%Kh4f^PN3E#2%6cZ[Vf%4MfCBsTIQZ78:.5Sk'ER=r01*NF.V,7;SU^:$pdKQP'DKWZ]GITF"a)jW^Po<Y=KlCk:<Hf@Q+hGUqqXRXi\+I^-&QHP9%=/67'ga*`Tqnju3+p1`f6ILL*p1A5rNkKm&71jS;9]2UU)YQ+Se\?"aGKO[ug(hjce*s1lrp&`$gh'Lq2\N49AU[LVH%p`X$o'oW%qe\&=s0pWL2<FVtB*]ZdmBX7`_B?(,=Sc`q']s<W.*n`j6?8*E;9Q1CU<P/F6@Xl"LZ_e]M1>70e)*VpHWi^6/!cm\54ubR,nX^K%M#k&=^NF4o-uVB'DM/5EcA?q/R]6t:,3LmI2QNGUSHO9#-.qV2<OAGm,CQ=K6rWktN"C\feY/ZP6MNn($&oL^i>Ej:P+c=KX!NTQ%U*W@\[?'b6J@IC0%o=$:-mLg((gG"5"5]%manlE?3^M&0-edbEe',AO,6,i?GZo)jE!&-J5(cL0`iZ^5N1M>0>BM3U)h`sOX"!L@%D\+.&*8?%?E@Z4UA(B'Ah?EV=qpVWq3]TX<*oh\_jd1ZUq"PQN1C1IknJ)fA*Celu>mAn?qI9NOc;`cXLL31m%j\:1KF&Hh-0%ts%(]4]AN9`cTR[J6rhRP67q)#>UXiH-6J,C7bhiF+S?g@)5Ieaohcf2^13<Q0B+l!?gEpP#\#`A+rTRhd%^VX_+qt7Fj0s%(L.)p&1%pK79/UFPgBM"]M_2^?L$?JB9/]_bY+"P:h!;W"*$rU!*Y09e*`a\8YFG`eMaRBbII;`g[87en\keA7VSD$Re_,M)K!2=;=g9LY=o%RE1ir:'.WMJQ:K[8f1s"`p9bt)kg%3W.4Aep6gE*Di":-JNqWpq4mKhYM4C[HDEU.XDBtfML7ht8O@A$E,Rt1'U)/q[`!<Ii0^WZ%@?DjF[h*qVZXq\N)[SnEj)7sR';]^QTH86/LE.I:Ui[e9LC!k!2V*Vd3%PX-6EF4E;.Z[5Of9P96$3@J1>8I93k"5>C,sWG_8/i=%p<g>nf57ddNIY@>0\n2i-ILiNcVamKRLWlD_K&&3`(9_!$?KFZHb.:s['qX%UQ8*:gM>i>gg)"B0#UinTgRd(HnHEinusLLoN7ZN%k1@uZMKiHL`<fO5mVij$aJc6P5BV@2k_,7-c`_!p&fGF_hfqIX,gO152:eNe:4gP^aT7d;FV2CA[l7OIWm<HT@9m%Gihhn%(_]PA%g5QspjZk(G.j>3*S;p.)=IE:n2DaY."-\CA9GA$.`m?)X//&$Pr358*L>[8So2*G.#\'jF+f%B%B5^^a:^9_=9/&-W$/t*^r=Km0%%3Y>r,L+6Z&cci)jjqHk%XseNKcHUe'*POnTBqD1X)asBASqak:f.^o<P.iV,cNfA1aE&$9H0/$6f.&;QmQ!cK..-@Y8+n"L).nQ%?X6@>&1o'.F2)h[F.:a6N&V)=Li`HY04B*5#`ge]9V]@[`9)RhS`=IJa,YeeR(*&T#>5^7?+58m$'I"=HHTC&rW+ciQR)N'UQU_]%VoA3_LEs'$1fPc&(qX:\04$BTl%;s#MoeeQn;;lXAn*9QLGfSPa]iu>`HMgFEo:t@Z9haH'Ye#[b#YtdfLNr=4I?"4D",7g.m"l4%$ubC<c3O;^2]lI8[glkGTYV-bC"fsI-BM81ks2T?-DXd-bl_HJ6R&U"fp`[m@,&mGf:-$OaR>q+HIl'f6s)jdCLUStaimDk>O>9q%UXb%r+@^X*r:2j1b1SiCERKA16D8t65=m;2bOQ^Na]H]pQ4S1KbO6GBhb?:?B*f@6K()4X*6R`;ie/U[$>0EQlg.fdU<$m$G?KL<%!pd'XdT8tPUL2Oj0C5rgR>;aZ'er5`m_5^JTMc@\"h('u;E1C""V]H4?QiW/^+f(/qdT]`N]2@'2M,h,/jTZr#^9IYT3&JT0ouhT%/gUf@=oFP+eCk!#8C3Na3WdRFR=0jeT.YEcn!IpW/SSE'iuBfB/BUO<TO_kq_*LM@96)n175O6a0K`:"2,7IR(n2ng(Wit-'hb@V%dIJ(%hu5U?X$M4VRZ7iQ8mXFNJ44iMdXErO^MLq6KajEA3%`%Aq8+n&LjV9e8F0`"QQ;0#j:.?&RAT^!VN^ZP=AJK"Nl^)6j::"l%"(4ZF)X"qE?t3!q_9fJCq)gq!G7hkBlGk22Yn+e$%`O"'V6+h^Ce7Wqf)1gbW5jInp!,W/">$En*!fbTgjaZ,k0F861>ZNUk6&Q)%j$;7GWu2/ZQGcIG*iNElSHg"LHoV_G>jf3h6c/_DT)d'8jjO4_oU1uf:BU*X=!)l0TLa]!0_*VBAK(D9VZFpsn>aT+"(_2IX[YJ`%%*PP7rhZ+h\TKnA5_J4Zo@!](_WTof*eV"fF@YW1`d&D;s-]G^><YYl!R.@ecEgnM<nh^3/@k/.UHj@i,d;4b+BVNb/0+l'hq9Xf%!I3K4Z+i.JKHikNdsMXu`!4[_qDj*)<j-l\JD9jsHk$S.^LHAV/_//Tg<Y<n[k5hNNb%uND?&I][9_<eVPYFRROaOm'>%H]"CSQ.%$&#aG2rg3OrfX<*,IFNEGCigTg(I95,VA*V,oPsZ:$Em],l^$N7W>Z#_?.g/"PHKF@*#f&f+#poIis^;l<1("K@2E.k'^.k#GEl`%'L-9*Sg(1C8=*"dOlj'/OY(CJZ>6IbSom1e2LSi'AY=aY22E^9"G$G_1NO\VFQfEt\VDL<+MpHoC!st(Z'FkHc"d&bhI>T3HCD<6%jkfiJhEi]O4.E]Q</lf'2fE\5>$fEW7)J;ZXBT![pMAY(P-*L69!)<97uc9YQPm7uOdW=;[3I`@Ctp4;;h&(UmkEkR`uG#+2K#XN%ADH<:"*.]eZo)%9NS?Q(0lE],Pl!.PR2gNcj-DXqFXC-.P)\5oPo.!XOr:a>4.Fp9,':auGiF9qqiri'N*A]8+:'hT1CV<<fskTq%`lQ.O@Sc@'0bn69ft(3^>nE(6Gas`:ldTJW9HiE;)a`a[>=k/iTSY<cd:IPC?'6[iCNP]P5.Xtlo=$Y'riF8X(CjFnX"oE@<<a97%P$pRS)>5m[kVAf+1d]Z&3/1]K?"RgTTfA/H[_h[%)-Kks,%4Im["L=>k)Z'M>D,1oI43eX#1&&)Y0A*=83@N^c/;>=_opbm@9K)A%^D(N3[k?ACB[Ck9Y0DLFf!9.Nd9s4,Udu)aXNhsJc$h&:$mHCgP&4EVfU1GQI0Q+mqI/,&9OkPJgDZ54ReY$))A\bYfsX>!R'!I<%E*^b*gG3j-SgVA\WiXYlk\esfgG6RH-C"cd^K3Kr)MVYlAD5b#rOfA\.Sgo[[5d1[%X"$;/0e^;,pJBYbKq9RQr\9b)j_H+&V+*8%/=D4VmI4_^PS4qs,YaZ<`O$pRi43%ZYD;pa7!2(DSB/^^B[Z9X;rg$\gTS5]?S,$@2e4ASF)SSH@$M8#a\lmZh$NW!,trUB/NKH9%^Vihkb$".SgSDJUgc$$\gugOaL^Udu?7Iu/EFQ:QPOA,cZ<pMEWMp-Qk?,Qbn"`QRkJ0O8F*1%bci3@t*:q8$T!ubETdOCHU/>Tm%:WI\9e3r<$5Goc;eI<`2BsBc32`bDu!>I78S?IgkCcn_0b?t(8=[V>uaM!ul,\V3Yk&`ZtK1h;H@.Psu@ZgqK*3@pr$HF$EE::3_%S@gJ6?O6f]b^5HVLAB+^\=tu&aAcD1,%Mfh!sD+he]MHq1Y_JkJP0h(/.@oGXnO(LQK8+*m\#NaH3f.?(Bc?!1eogNCICq;VFk4;%^@R(qU2t7]KnC`,k!=2XHutD)m]=ciS4h^Eihb)ar&1Qb7UG9FNA/]k*l:1INt],_;l9$][ugPDKRmTf0OUD^2XZr17cf7n",<)>%ZbrR>j.f4@H_2H2r<1bpQ3QZ`$PAR,9K$j[ek=JEAneK,'Nkf`Y_luA8uu#<MhCfIVp/F$H'%nZGn<s.<Y*=n8`NI20L=edYfYrl%Au<\&@(FG_T9e*jnL>)D@9u*2#@\i-/\Ml7_LqJ`C9eB^[rX.Ug7m6'/ld9cq0rt,s%\AVUh(3J2=hN/9?i\^dt:]oaqAS9/9N"e%NNfE^"A6S4ErGRro8l2+#]%Khl>.X]Q;%K=HL5mC#f+BY;%mBCcsR[r*5Sic'E\Br1mM6D>k$accrj[;/7Di,K85!XhQL7KJUeWl%/tU!H^rW4aKRpAWN?/;@1LRr3aTd?*fg*Wn'E]Mf/d;AjR)Aif@N[5885"lUbO`?!kRHXY79]Ua%"sD2b8e[IQRZF6fg&Y>%am$B%QIb.)"(?I<f.[cq.i0O4b.f6b!s?UjS-l,CL#%p]C(f6M+>Y:<@U4Y,P+Om"=CNGTm](qYN1lLnbWrB9qfu=onp.CZn*`Hd[Imsa%4$ApVOi-FoQ;uWIV^J_'QnpQ`m&JYF1-nHSH6S?NL&rc#lT_8*Ls$G\Eq_8u?6j<ij9Tpq-h?ebkV8F%+kbskfZ/ir7Sd[THcU]9%/l.,*bEEg:pW08,,qb6]?(tLBVrBJ`]t-#O;N2guhI2F)e9k9@)Ujk29m%^C497#Kal;g61G1:2>8Q2RXHhhob`5N<#hO)FPmY&'%[p(CVfhMr-]hT5^=3]+YqVn[:TQS0o\n"LOWM64%Y(,iB6o9E+<MU74+rfsMCFAejOK;IEYGf9+6`)NthFndqRS7&s\eF(u9:5:c%>B2oQIu0XaPdB00[Rkb4\Be?TNA,.5L1RK-hf?](p<#HFId(%4@9KW6)mRq's,`3j91:P^D+3,Ai8VGV%Z(2L<m$9+I7dba5Hgk]%Jmiik,Q]$<m@&bTY?O,P$C,Wj$[5-Xh<';JPqp'G;^MsA7[\TZNA>1QK@%_8J.4(r3dt'WK12Y6-9dk^)9b!e1+)()@3g76-,1gl%_EIBnJ*Q.9]XW,"qoDm+4RO<e[u1-/diLl@I4_9j+N/7+OumY7F^dR0ICur,;CZ]F2SRYR&-9E0]&C6ikftmX4cd4dOm0GfkLSLY%Z-H.l]g_P6kMG'Y+tqI(D+U]__Aod_=l.4TWY#B7UCP7qa90FaThAk]<RN$B"0hY@=jel><EcefR&$5;r/.2fd?$$Ae/RJtSOqOU%n!(n:,RlA7ao^H5c6ceWTE9"C-H0E:/4Xm]3V'OnM88`);n\LC)Y8XI[E\57;%_0$R3QRG/K"goX[O^b?u<#U>;BliS-\f4A#D)N%ZR3'q$t^P>0EKk'l^j:-:O^>3H,(\d)iL:%q5PVB<LQ`Q<39^Lh=t`"q;,e!LjF7:LK'dBLmfRSY^>p&0EGBETaq_C91K^@d5LR,%VhtAX4/BB&hErPiVF>(o\O62VaCIcP&1Pueat$mobTuq9RW:Ds+q#HM7:,IqW(Fumq'BBT5BaS"'hDLR^+5834u#0$=1aT'O%5iA%eU*6bq!hs$<q@aZna3("Z"5GW=IUP:GT`0+g8t'^Mof-u<]mU/mrZk\7$hRRI*4U+P#uq>kQ<#SN6GB)6K9Oun\E)HVFEZJaV>]2%lS,tU2WB/+T<*;8$b'oWiZ7p;(_!Qj>kG;!ElCHhWT,LVZf='#?B0q-Nc^M-d0C.eICp]iN*69>\ck/M@g&/`mh'.o.)0@YmeJj9%WNq7j4HR!p]&s147(p^$G:]0Pa"M/H+0E_=;p[47`3eMqBH'OQEA0g];FfHk%rhhL8TnPVG<kq'@S?H;QY+3HK?`7W=ReZOU<Tfb%8!4UZ^='o]/[^i`L[;3'4(bH!Eo+j%Y5(&tlU6I5pa#?Zc)Ki*P7aS`iWpd#*5D5V`H,WJ7%rFN]ma;<^MrNqgGkedr!YC#0s_,k%+HNfMhQ2Abr$n#P"gH9g).nCilM6^h'I5-B<cbI/@?5(rAdT)55E,SD*+NP9Ks_<NQ-9s'1;B2(b=?3dpTQ@#=(9FNL2=#6DlTBT%RacRUF=5!sB3=Z==pdIhg.L.j?3s&'DKP&E3Ti$=0K##@N;5:dm,Q#RD<I>Z$d=+$)SKW)'r^k"4UG7=1_%OJV4ijT+3;Lg2RRIG%XX8&^jS`["($;V/!O/C-`uu-.%T?8]YuErlq\Q,B\X!r4<ZO^H0C-=Mkr':WVA2_)<CCC"ZNA*I5&]#6MhKTLMZfs"2nRP0&0IHO%_#q)H';%rhA7hk+RoliUEQlSko([CHr[]>!HF,TPK_7,s^LG6HJ.A5,0N\r6TOUE`:\@]NP/(Y=SmDh^!7J(%N[6EICHJYS+j&:K%d\U8F?4hD5\g0D'=9PJ$(u:XMk=/aFDX6agPR"Hre6HQe4V0cA@"?H5Le+1/g@"R5]BJ]/_'B.;Z]@9QBUTY!+GEg<]"G--hIbcl%]5%WH5W!VskUqlUbGSA)83BDboU=o.(@'IX?5i4?RBlG87(4Z*mNQLjoqI7[``Y9C3_Y1gK+G&A#2hs#LNBMS7%<UaGkiiUs05k6%CR)G>P#@9('F$dJ6W9%TPCc&WrGX9>5?t)Z1]>1mq>,s'fUAI@q1&i&U6&,^L5en4;nn9M%)*TBG370Drb1)QX4.ElSn$KB>;LEE%n+O^=,uZ<:`Cs!Al#llK8d'qqVXD*Pe.DDC0r,%)/MFml8fRHR16qN9/84Mnqp+PZ9P_48[U'tIMDmo`GENLf^4Ps#b>_-j*s_mZ%ke-Fr`pIT=J<_P2Oft#W%V3&S:W6^0gS-BSo=&'%>T66\DG?_'M?/rLb+,S82k>)H@Rn4lh@oJIjKS*V=0C^?8NS1iQ$o2#f8fYm%rW#hN_bZ7i>p>Y.:os5@WsqLt=r]dbD;)6VN*C/_Q@`YH[p,r<Ug''fjBeSW2LF3!VFY`7+(%kKMh^S3c+TN'(Gsg`#2P<8d3VIg%i!h]5]XqRJOlYkPWdR?CkO"K1g..Ocf8b8i%'Qj)IRWlEMI3sA1G$)?a[VI8Ee]d;1Bg4/M9AV2d0IJ,Z'$aD*7E4^KXL!KquRt\%85Tu[#h-W#-;uBM-79$VTP4V=BLE#bnL/SpCPa;IG5<[_S$ljB>3aCT\Y.&>pRjSk5.ZCr%oel$2OP&DR;$D-YhW3ER$Q@cnVa&r%7o2_pKBuA7<^qt(!5_?,iD1mnhbfE4#[kl_+6RIVZ#cGT"ZLAsLl,lBRl04X0t&T$70)SK*DmEaWjp?uTi0f4=Xbg%#S4=]DoV_.%Ti.a%Lr^&@_m2Y+F=HR>*@gDia"&j,G@uCtdH;"mT7W364%2Gc6W\+X#SRGTLIrFfd)-kRi-s:u`8XTB1TZ"GW*ntnIc_-*#@["a%E2Yn?_!&'k`N\]*ahJOF8o@oS.\NIMUKou3TX=?$;[b*XEZik1NbsB$X&XTr*Ykp3lu;&Z&+eI:.]&!](`nro/5Aq%8j"SXA<0?1%jmo3%qalr2?*^)5l\Wf*Vm$G%Z=jE%YVbH(A_\u[O%W=1d;16_!_D.j[Xi<**/R%l_4=WnkB3?T,/ggH=ub_%hu+CXmXA8AAF%g4%A%Pnb7_AP+Q'C7$PG2*QBGV>tph!$=Q+H^H0Q#&X&hrM!>S'9flHgGAPG,s1e(p'aU+(khTW:*[HpuKFcg_`'Io8pg"Jl%Xp*UHK%pH".M6h9^ZVG+5C,T*Ae56j:Cp*VS#Dh$3Rf^4_o?bZK\;l[;ka"PCq7dJ%QS@Xm1rK`bY59t?1I)]SKf=at5kMWUj\,-&NmimmR%.`T.!O[;Y=1LC&O<B7bXd?7.`.D,JNpaM@YJ'qDEq3,"1bFbOo29T+VkjWYd38J`%K[`PGQ8.[[If"2fHmrrZmLLatRWhVo@U#38%e"_pdHJ\Xoc5`YLcP(Z6@QA=U18[ZMD/s9W+]MDYj1,%RZ*jPi6@$;GV9T`iOtA]Os5[Mb]D!.4n`.m8m/BMBr8@FOqW@m]H`G0*%r&&#"3ZJ21fl*o]cD-#HjDe1PW`X8?@HCk\L=d*g$?:9P^4N_B&<)p`3"(c7Co%A6^-S:WK[c>J^fHd*Ip#DT_?)I>hh0_OMAl\U%AmB*9BS>p]@9o!4T-:dYV!aIsV2U:d>ZRcjPiY2p9o>/513)7qnE,`[FmQ\D](SXHX:OX2To,?#l38FgKNH:f."\)!!gb0d:1I<M%)i4<j<JHOs;Fu!c?So>u@qWUgP3floMKCBKSrkk+NX\-NU`H8H>pXXE/ubkH"sQXU!\,\jK^<kbG*94?M<MVRKNS)n\.gM406;Wg%E2P0[b-59]A*.g?7,PiJs0(`lFtD='i"sU%oVNp:>cI)\X-V,D84Z7&"UK:MF_M:Ubm`kTJbXRAo&Xh]1V9(=3\EMm-tbR]Yq$'P%B#gi&[pul^P?%UQ1!n#/b'f!8BE1AC0"6Q)JLb,W[kUub1)lT9[PqkBMM3g=7uV^bQ!"N@REM0hZkA[1L&?akj"X"fp!rCPQ?5,m%IestG9g2Y?+[j)0X,MV/'h,\`0X5*4g=37InR0o5LHtDOQ`a?_]k$<^M8%1`H+3G6Fr6Ld[DsBN9L?*U,)dL`E\&Csi;0IEO-iZf%>QEZ(SliF^Z,Vu"G?Q+Uc>CO`1^Qj?e>OL+XcL?&6_&E^cmm;d_4oL?#iPWi5^6#^Vc70-bsOqU9@D!G<&ACOdA0o\6DA=M"Yl1*%j@5$9OX7\5@IC(:oZ4GtmXn9k64Q%:G$?\`l/E<Q&Fs0td)e!P3Yd>1/]+GP-^_1+Hj1$1QE_]0MB-oTQNtIsJJ06n#&id7a5%AQ%e?peZ[M]Q_)1#kcUJ<"cB8IZJFXeRB]!H5_iMb4Q.QT1SE^,-4k@(8k/)NA2RKl1H,L!5squ(4W%m.$V4mY"bmU<$H1"QHs+Ep]d%MVs%^mUT_7'bdIKg\P-jhB/!&\Wb30/5L;3$"<@eq9sT/V6mki8ar5.R">3Ka4PkGhq)J9*P)6%#L1_GeUIc6g;pO<M>n"PYgh<0%#%q3.Gt#l<(8<t>C!(TmUu-8*k2jGFX72OrNZf+D9&B=O?[0p%06rS^s3+9<s#`sF_9DASmE_kuDieSM$&RdVAk)980b*7D1Rlkl%k@o&4T4c3Ss6SR^r\Jbtqp515rR=L)H/<\/.eFL5"2e+5`f_i$NCcWDOcoUY)B^e_>G^[XZ*<,J<<jEnG('/Se:E@5UI]cc"'q*H%bsd[3_@H3carT\KOuq%g54\tTWFKq7KtEJ2M9riR2`sb@YumeprF[2Il9DKD6iCYh7I!+4>PrBd1.>:=\^m0Q*EZ5M)0VVio>L^]%@?qF+*I;&6hK+CbkJc0Z[oD&3$qQTe<ZLh)q5*W:,Kq(rrh*]2)?u(;76];ad'28^-%'KHlYcrRIo,">*)06TQ#4'G.G.Bp/-'^1%:F+U<OUUCX!=bg\Do0]?Fs:S.jqTng^+Sa/M5_9Y/1Gl6f]/jed+YfJ)!R.a\@,#XD5#(thuJJQ=9R;X16uVErK..@T$fqUk7A^`%J3RnP1o'mggS2f@!\0P)MFF!G'4+HKd*Ud=/L2Zl)C(O&<[:F=#b*1REhWQof0N@eW-N,.c)<JTO1=gMTo"/_jeg+U!m%S;pi;rS%36!<Qr(B1Mi6k>)D@^IO3)Mq84c)Xp9=3jPIu;DdQ;lsX/u^Fjf%RJ<[(+r-HCOsN46>o&irm`]%8X!dirhmI3+5#4?XVj1o1R!,%SJ8NO9/`)p8`jHD/p@9M&Bo]j@hb;F(<>PSF3Z_OHCb+hD_2GnF^F!0Vqj%ko)p#9G@UJ>$(B,7a#HB6Z#DtdLA#2b.j9G-k6Lkq%XP)]Solf9N\(V][*K$mne3p'jQqE7CR!g/0$mU?i=s]]*/NsctKu+uY"+DCh2P)Y,EL%6n9X"$S?e!,%e6-?LdaaJNc&[J36Lcrh%UK8m\*L3Mi=?Gn61Xd8`?V5rg/(EO#o(VAR=:04.FVYDF*'?fjWgoB3l?#3%LKcb6-*&46/jqL#A.@"FCjT@GXA)+P/C(7N>t>Ru%]O9E"U7FgDkh$FrZ4WH6*%:Nh-+Uf'>6i(aS52S?GsS\Dd+`"ILcWKXO*V$tXWu&+i;W5Q;_/@+QL7q3^"rRW?#gf"GDD%ubDMMc%ona)dQ`.N8C^fFnij.MUJTn5TjVkPj!058B!(]E<I0E5K*MVsgjl$c-XPM0):;Vdp79E\4,)E:[Q>,VL#Ak0d=rIZ.7/W917'e-\%5Q!]dLh<L=eX7."Ut!p:$4HWJSORXDLe[.%cnr8E6aK_H*O;8HDhpI'SK\!'c?#6;e?1PgV#i*[gYrX8RSNRREtK=Eir\Sf^(A/=%U0G*;Hi7mkJ!ooSM(^,/W:_^HDn6aTXq6idqVVP6&U&lj;sk";P2$eHf9n!3<GJ&'.FN<"-U4:T8M\)d3NH.\PX`<s6L29\=,:LM%\jFgoQ@6*`9UAY<'MaHq@[6$`C<(Sh#+O'Y-!'Is+^Vi*&R%>O=]TIgQQ;2fYKq#Tpp`@OWa>Y%NgBHh>*47"lhV'qi,%ReTj8Si%>+ok,(QLA.\ebl\GRcS:k+%E%F/U,,\ZImAr04(_U81\GM*c6]+W6WPY9fW*%12'4$brQ/6i+;1<BqZIlmD"&(e.R#,\f6LVrg#u%%sLFhf(,(PLDoM`VWcetd95\k$7BP],LUVfK9"S:fAP!jL[u/CdX3rcWtoj+ZKl%EpWj&fODV\^/8?$F2Op4(h2?$ll;<Nf;*.6=%eG*=Y*-"]I()'o122N5/kWPf1,Z1>.$ZQIaM+K6hX*r7>&Z2jET2H]89mOG61FZJV?)U-G;OU$+.a>[te?8(8Dd],fpK?"5.6/tO%eBf#7G%t_9&6B0T9PP1t)IA'_8X$*NGs$p%1Zd829f/F-1+t)$'(pXpPGh>V21c'-U4rg@)"BJi.a2:lCs4VG[XLO'C(YCA_=^h\%m&a$"(D:,HigN;qOh<!4R$pGq_qjRr,`?tD$.#>hjCP`<9X'H*+!jd:ed>&&T4^/"HYu\BlC>$\[A-UZ6@iruK`.qBXri%-h>+eh%!Rk&0O$mBMIRTa(\:5LQR6rXDOs9u"Wm9!tBH8Zre->D^(-Nm[;A9c@(j_>A>I-B<WDR4nU1'),k'K\K7/fA.Ut'0_gM8r6jP"JF%a'$t[50YkH[R-]?6@lnld't>t)oP6L:n:5@s64tO7Wcd!h3<iE>NkM=em645G7Lg.orL'3%Y-&]V01l4:-Vt1eX[6T`Q#.f@Iu'i%>>rRY19%GG?9meb*umFeKTEG$;pf;VP4)9DII;@)>5?3eesqh8?Yfb[$GMi46b0tQk)=.K(d5;[d4q!(nY65%&6qL<Q%PWZ)<nR4%3rs.Z#<P^L"A(W+3K!)?cVH+e[!!54-t!+WC\m\Uk;UHh_JK<d+Hi*%.)(^YNHL7t_UB+_**G3Be@M_!J1hF:HlqYo<@HHZenG]9%3`0KDknT8%!d!p)M05P5A)g[h1nh+^d35dZB.t7-'>cer<!%)6qA7&,W^Y69-eRW6po0t4;5W'.LH:-jX`14;#i-sX:CB&<YpN7.%`h?0,V1q%AFH\pYU``E>2:RIKEhm81'[VZ@c\*Xsb7#9ceBCa]Bct(3"FNHQFqYk_*6&"6URg=u/;[K,"6!qVHn*^1$mP[^`Q>cn%Zumh0'+es2mLa\1KR@T=iD.!q]8oqH0(!$m%3XhgF]$T6^<)R^g.1McW4m;p'i:=7BdZY9@+dt51k["tBMKV,$Z(FUaIs8B3FH'2%gW3\>>];9['cB0<q:,T0DB>%)>'4,[UkM/_%MDDs'J72F\GBiB'-WVC1)fIl"S+n9T4>>FK;Js'!$<ET4/J/LLa_A\>5dCONmV,J%+SlckR2@[T9nWsrMY%AZ<,+IEe%0V*%ERXfKL%6%AOZHkH'(>s3]OC%`mWs8.Mi3IjhY=:[0JO$='>5rX/A0'E/PaB8D0;.Abd0u%Z\EX'b-o3h-=7YkXj1%RbUuF@7p&W3NK@p>r:[TE6?gOu9*hV3^ZD,`o3B?pB.fE?HEJ):Y%XeM3=aB2N.GX,[5./\%q'qT84W(5%6__LO"hD"43kKXm(-4TQG%8Dm>iiS^\lMGqC]t\JXg4K-WI;J@cAC0rojNmP@3XaV:2f3rMASHYA68OW7BehUCkBS/8?PEs%YAI.%-JseuF$RK!&6hnbFh'Yh*Ug4aP+CmGCdRJYNVbma=_IGFf`j_o]e$X+cuI+2VVMcJ^7?E+Yo>(hN+;/E`2jI.##IV,kRA+_iDfo!%ILQ-1Vg6=Cl"BFSOueBZlsoI]5g+C/ibt)*E.jcuF,19n#=<E$a"7T_<6rI1833?S"b(W]/O.!s`9RV\4AOt9a9_!h'D)bJX-F.9%[dOmW1!o7_N)8t83I\&MY0/kMlOgD\dWWUrPS&1dS*?k50D<-Ig4$U3Y&:7EWcAL2^.G-&V=U_EDJ<D>Wp/[!kQY,NhY[XGaErI1%DBHDmPP1n[F6H6V*QU"Va1Mi.%XVq9F$sfLpQrD7Zg0dZ[jh_rK[YO99f7CSq1GgsiHu1RXk9ANlTU9@8+t&BQAp$,n(&`(@FPq5%R]GZqLRsht=T1:=+''`)R+Q8pi(2bVT)s=g:`?Va*bi&aR;aD`^Z2m4p7_LiA`FriIaO9*RJ5gH<.mCI#bJY;G6Rs@e+*(2?U+M^%0D)I&Da-Dbk4eOe5C`M+mIbsI+$]_rl1t.9YFj_Oo^Ve(pU?2ZT>/)=kO%O,bEoEi?baASqu"XdkE!)jhnOWQ4am4JfDbn4J)ZMR%5QCY:hgP>c32KWj~>%AI9_PrivateDataEnd