%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 006x004.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 380 151
%%HiResBoundingBox: 0 0 379.0361 150.7485
%%CropBox: 0 0 379.0361 150.7485
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 5402 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD04FFA87D7D7DA8FD3FFF7E53FD067DFD34FF7DA87D7D7DFFA8FF%A8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FF%A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FD0DFF7DA87D7D7D7E7D7DA8FF%A8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD3AFFA8FD15FFA8FD2DFFA8FD08FF%A8FFA8FD2FFFA8FFA8FD0FFFA8FD05FFA8FD2DFFA8FD05FFA87D7D7D7EFD%3FFFA87D84FD057DFD2DFFA8FD06FFFD057DFD2DFFA8FFFFA8A8FD0DFFFD%067D597DFD2DFFA8A8FD3AFFAEFD15FFA8FD2CFFAFA8FD06FFA8FFFFFFA8%FD2FFFA8FFA8FD0DFFA8FFAFFD05FFA8FD2AFFA8A8FFA8FD05FFA87D847D%84FD2EFFA8FD10FFA87DA87DA87DA87DFD2BFFA8FFA8FFFF7E7DFFFFFD04%7D52FD2BFFA8FFA8FFFFFFA8FD09FF7D7DFFFFFD047D537D597DA8FD29FF%A8FFFFA8FFFFA852FD31FFA9FFA8FD0EFF8452FD09FFA8FD29FFA8FFFFFF%A8FFFF7D53A8FD05FFA8FD29FFA8FFA8FD05FFA8FD09FF7D7DA8FD09FFA8%FD27FFA8A8FD04FFA8FFA852FFFFA87DA87DA8FD28FFA9FD12FFA852FFFF%A87DA87DA87DA87DFD27FFA9AFFD04FFA8FFFF7D7DFFFF7D7D527D53FD27%FFA8FFA8FD06FFA8A8FD09FF7D7DFFFF7D7D527D527D527DFD26FFA8A8FD%05FFA8A8FF7D7DFD2DFFA8FD14FF7D7DFD05FFA8FFFFFFA8FD26FFA8FD06%FFA8FFFFA8A8FD06FFA8FD25FFA8FFA8FD09FFA8FD09FFA8A8FD0AFFA8FD%24FFA8A8FD07FFA8FFFF7DFFFFA87EA8A8A8FD24FFA9FD16FFA9A8FFFFA8%7DA8A8A884A87EFD25FFA8FD07FFAFFFFF7D7DA8FF7D7D537D52FD23FFA8%FFFFCFFD0AFFA8FD09FF7D7DA8FF7D7D527D527D527DFD23FFA8A8FD08FF%A8FFFFA87DFFFFA8A8FFA8A8FD22FFA9FD0DFFA8FD0AFFA87DFFFFA8A8FF%A8FFA8FFA8FD23FFA8FD09FFA8FFFF7D53A8FD05FFA8FD21FFA8FFA8AEFD%0CFFA8FD09FF7D7DA8FD09FFA8FD20FFAFA8FD0BFFA8FFA87DFFFFFD05A8%FD20FFA9FD1AFF7D7DFFFFFD08A8FD21FFA8FD0BFFA8FFFF7D7DFFFF7D7D%527D52FD1FFFA8FFA8FD0EFFA8A8FD09FF7D7DFFFF7D7D527D527D527DFD%20FFA8FD0CFFA8A8FFA87DFFFFFD05A8FD1EFFA9FFAEFD1AFFA87DFFFFA8%A8AFA8FFA8FFA8FD1FFFA8FD0DFFA8FFFF7D7DFD06FFA8FD1DFFA8FFA8FD%11FFA8FD09FF7D7DFD0AFFA8FD1DFFA8FD0FFFA8FFA87DFFFFFFFD04A8FD%1EFFA8FD1CFFA87DFFFFFFA8A8A8AFA8A8A8FD1DFFA8FD0FFFAFFFFF7D7D%FFFF7D847D7D52FD1AFFAFA9FFA8FD13FFA8FD09FF7D7DFFFF7D7D537D52%7D527DA8FD1AFFA8A8FD10FFA8FFFFA852FFFFFFFD04A8FD18FFA9FFFFFF%A8FD13FFA8FD0AFFA852FFFFFFFD07A8FD1AFFAFA8FD11FFA8FFFF7D7DFD%06FFA8FD17FFA8FFA8FFA8FD15FFA8FD09FF7D7DFD0AFFA8FD17FFA9A8A8%FD13FFA8FF7D7DFFFFFFA8FFA8A8FD16FFA9FFAEFD22FF7D7DFFFFFFA8FF%A8FFA8FFA8FD17FFA9A8FD14FFA8FFFF527DA8FF847D527D52FD14FFA9A8%FFA8FD18FFA8A8FD09FF597DA8FF7E7D527D527D527DFD16FFA8A8FD15FF%A8A8FD06FFFD04A8FD12FFA9FFFFFFA8FD29FFFD06A87DFD15FFA8FD17FF%A8FD0AFFA8FD11FFA8FFA8CFA8FD1BFFA8FD15FFA8FD12FFA884FD19FFA8%FD08FFA8FD11FFA9FFA8FD2FFFA8FFA8FFA8FD11FFA8A8A8FD19FFAFFD08%FF527D52FD0DFFA8AFA8FFA8FD1FFFA8FD0FFF527D527D527DAFFD0EFFA9%84AFFD1BFFA8FD07FFA8A87EA8FD0AFFCBFFA8FFAEFD21FFA8FD0FFFA8A8%7DA87DA87DFD0DFFA8A8A8FD1DFFA8FD0AFFA8FD07FFA8A9A8A8A8CFA8FD%1FFFCAFFCAFFA8FD15FFA8FD09FFFD05A8FD1FFFA8FD0EFFA8FFA8AFA8FD%15FFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD15FFA8FD07FFA9AF%A8FD23FFA8FD09FF7D52A87DA8A7A8A1CAA8CAA8CFCACAA8CFCACAA8CFCA%CAA8CFA8CFA8CFCACAA8FFCAFFA8FFCAFFCAFFCAFFA8FFCAFFA8FFFFFFA8%FD13FF597DA8A884A8A8A87DA8A8CACACFCACAA8CFCACAA8CFCACFA8FFCA%CAA8CFCACAA8CFCACFA8CFCACAA8CFCACAA8CFCAA8FD09FF7DA8A8CFA8FF%A8FFA8FFCAA87DFFA8FFA8FFA8FFA8FFA8FF7DA87DFFA8FFA8FFA8FFA8FF%A8A87DA8A8FFA8FFA8FFA8FFA8FF7D84A8FD12FFA87DFFA8A8A8CFA8FFA8%FFA87D7DA8CAFFA8FFA8FFA8A87DA87DA8A8FFA8FFA8FFA8A87D7D7DA8CA%FFA8FFA8FFA8A17DA87EFD12FFA87DA8FD0AFFA8527DFD0AFF7D7D7DFD09%FFA87D527DFD1EFF527D7DFD07FFA87D7D7D52FD07FF7DA8527D7DFD07FF%527D527DFD13FFA8FD0BFFA8A8A8FD0AFFA8A8FD0BFFA8AFA8FD1EFFA8A8%FD09FFA8A8A8A9FD07FFA9A8A8A8FD07FFA8A8A8FFA8FD99FFA8FD05FFA8%FD3FFFA8FD07FFA8FFFFFFA8FFA8FD2BFFA8527D527D527D7E7D537D52A8%7DA87DFD35FFA87D597D538459A8527D52527DA87D7D7DFD2BFFA8A87DA8%A8A8FFFD04A8AFA8A8A8FD36FFA8A87DA87DA8FFA8A8A884FFA8A87DFDFC%FFFD34FFA8FFA8A8FD40FF7DFFA8A9FD37FFA8A87DFFA8FD3FFFA8A87DFF%A8FD37FFA8A87D7DA8A8FD3EFFA8847DA8A8FD38FFA8FFFFA8FD3FFFA8FF%FFFFA8FD38FFA8FD43FFA8FD1CFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T17:52:12+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T17:52:12+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T17:52:12+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qwe5/K63lmdxqMjB5&#xA;J5madBI7tOiq8cvFo43iZ15svDkenICoJtU+8vaTcWWkW9l+kbiVLQG2jZlgB4QExL/uvwTuTgVM&#xA;fqk//LbN90P/AFTxVa9ldMoC386GoNQsB2BBI3j7jbFV31Sf/ltm+6H/AKp4q76pP/y2zfdD/wBU&#xA;8Vd9Un/5bZvuh/6p4qtjsrpY1V7+d2AAZysALEDc0EdN8VXfVJ/+W2b7of8Aqnirvqk//LbN90P/&#xA;AFTxVatldBnJv52DGqjjAOIoBTaPxFcVXfVJ/wDltm+6H/qnirvqk/8Ay2zfdD/1TxVCWxu/0uP9&#xA;LklszDIoidYgDJG6AuCiK23Lj9qnt0OEilTTArsVdirAZPyltDcSzLqMjvLLNM8k8YldzNRjHL8S&#xA;xvEZPjccOTdOQWoJtVD/AJVRbacgvINTl9Wy9CaJmijL1tKyKxY1/eF/h5U2j+ClN8bVna2dwAAb&#xA;6ckDqRDU/dHgVv6pP/y2zfdD/wBU8VWvZXTKAt/OhqDULAdgQSN4+42xVd9Un/5bZvuh/wCqeKu+&#xA;qT/8ts33Q/8AVPFVrWV0WQi/nUKasOMB5ChFN4/E1xVd9Un/AOW2b7of+qeKu+qT/wDLbN90P/VP&#xA;FVpsrr1FYX84UAgpxgoSSKGvp12ofvxVd9Un/wCW2b7of+qeKu+qT/8ALbN90P8A1TxVTtUuY9Qu&#xA;UkupJ4vShaOORYwEYtIGIKIhPLiOtem2Ko3FWB3v5WGe5aZdYmkLPNMfrcSTEvPHxZW9MwKYnYlp&#xA;Up8Y4iq8cNqybyrpraZodvYG4e5+q84RLIFBIjcpXYd+Nd6n3wKm2KuxV2KuxV2KuxV2KuxV2Kux&#xA;VDXDtIxgjfgFFbiUGnFevEH+ZvwG/hkhtuqHhDtqkMikpbG2kSCCigAK8fx9KjkCKCvQeJORu0BM&#xA;cUuxV2KsBm/KkPPJL+mJp/Ullnb65EsxJmB5RsVaIGJ2Y+qlPiAUfCFw2qFm/KkWsRuf0s8hthFK&#xA;OUI5sbYFuZYuf3rf3fOm0XwUPXG0PR1BCgFixAoWNKn3NKDAlvFXYq7FXYq7FXYq7FXYq7FVsssc&#xA;UTyyMEjjUs7HoFUVJOKpdpj3MuoXdxNVEmjhMEDAApGGkArsDyb7RB6Vp2woCSeTfM+o6prmu2F+&#xA;4/0OYi0j9IRERpNLETUM/L7Cn4qMK9KUJUpfcflfPNeXF1+k4o3uJrqUqloQqrdwrG8Sj16BS0Yd&#xA;yBybcVHI42rJ/KemyaZoNvYSXDXTWvOH1mAWvpuU2G5APGvxMx9zgVN8VdirsVdirsVdirsVdirs&#xA;VUZ5mBEMVDO42r0UdC7fLw7/AI4QFUIoY5B6SCtsjVkY9ZXB3qe4r18enTATaFzo36XhfmxU28oE&#xA;fw8QQ8Z5DblU18aYpReKuxViHkjzNqOq6prdpfSBhZzcbRfSER9MSSRlqhmqDwU/EAwr0oQcKoCX&#xA;8r7h7ue5XVIkaa4uZwgtPgVLqJUaBV9aixl0DPxozbjl8RxtUNN+WF/bW7TnXpJRbrbOeULF2+pq&#xA;eTFjMR6kg+DnTaP4SG642r0ZQQoBYsQKFjSp9zSgwK3irsVdirsVdirsVdirsVdiqXyA6hdelT/Q&#xA;bZ/3p7Syqfsf6sZFW8W27HCjmqxKRqlyS5IaGCimlFo0vSgr9+BLE/y7029tNV8xzXdnLbSXV1zD&#xA;vG6RyfvZiWjLyS8hVieg613DChKqFx+XGsz3k9wutmBJp7mYWyJL6aLcQLF6ahZU+FmXk+1T2o3x&#xA;Y2rKPKunzafodvZTXLXcluXiadxSpRypIrVqErX4mZvEnAqbYq7FXYq7FXYq7FXYq7FVKeYxgKi8&#xA;5nr6cdaVp1JO9FHc/wAaDCAqhHGzM0aPUk/6VcD4SWFPgSnTb32+e+Am0ItVVVCqAqqKKo2AA7DF&#xA;KFdG/S8L82Km3lAj+HiCHjPIbcqmvjTFUXirsVYL+WelX1jeeYJL2yktZ7q69RpGjeOOVjLMzNFz&#xA;kkJXkx7DrXcEYSqlN+W+tyXctwmuGKOS4uLhbVUkESLNF6XojjIn7tj8T7VPzqxbQh5fy31u3tWk&#xA;k8wyzLAtszVWXk4s0JZjWVhzf7G4pw+0GONq9GUEKAWLEChY0qfc0oMCW8VdirsVdirsVdirsVdi&#xA;qBvJ5JpvqFsxWQgG4nX/AHVGewP87/s+HXwqUFFwQxQQpDCoSKMBUQdABgSh4lI1S5JckNDBRTSi&#xA;0aXpQV+/FWI/l9fSXeu+ZY3uLhmtL2VXgeR2t6SyuUaOKSGJoaLH9lXYHkSSfhOFVJ/IvmmS4eX9&#xA;K/V6yXbKkc9w8fpTxhI4grfGm6hmdZK15FactlWT+VLO9stCt7S8ufrdxbl4nuKMC5RypZi7OzEs&#xA;Cak18d98CpvirsVdirsVdirsVdiqlNP6ZVFXnM9fTj6Vp1JPZRXc/wAaDCAqHjR3eRUkrIxpc3A7&#xA;U6Rp1pSv0fPATewQjERI0CIOKrsAMUt4qhHEv6XhJZfS+ry8V4nkG5x1JatKUptTFUXirsVYL+XF&#xA;7Nc6lr8UtxM72t06tGZmkt6SyOUMUckMJhoqfZDGta7/AAnCVUpPInmmWd5P0t6Aaa6kMcc1w6GK&#xA;ZAscIDfHH9kFmV+vIgfFsoQ0vkDzZb2zTS+YpJ/QW2eQO9wQ/wBWUmZmX1KVkX93x6Fd2q2KvR15&#xA;cRyILU+IgUBPsKnAlvFXYq7FXYq7FXYq7FUJe3ciMttbANeSglK7qijb1Hp+yPDudvEgoJVbS0it&#xA;YfTSpJJeSRvtO7dWY+JwKArYpQkQk/SlyWIKmGDgAKEfFLWpqa/dirEPy1YjUvMsLfWXaC9ZBLcT&#xA;POOPrTMqJ6i+pGAG5FGkfdq7Vwqoz+TvPM07yrq5tkaa5dbdL28dBE8XCFAWCsKmhapPA1aOnLiq&#xA;rKfKVpf2eg21rf3AurqDnHLOORLMjlWZmcszksCeR3PfAqb4q7FXYq7FXYq7FVGedlPpQjnOwqB+&#xA;yoO3J/b9fbCAqhCjSFvTclW/vrnoz06LH4KP9repwE37kIxEVFCIAqqKADtilvFXYqhHEv6XhJZf&#xA;S+ry8V4nkG5x1JatKUptTFUXirsVYD+Vh4XPmG1IuT9UvGhElxNJOvFZZqJGZkEqAfa4tI/2uW3L&#xA;clWn8neeZbiSY6wbdDPcSLbx3l46ei6FIogzAMvL4eTb8GUsn26KqoTeS/O0Fu0s3mGSdYVtmlDT&#xA;XFH+rqTOxTlx/er+79OvE/bb4sVeiry4jkQWp8RAoCfYVOBW8VdirsVdirsVdiqFvL1o3W3t1Et5&#xA;IKpGTsq1oZH8FH49BhQSus7NLZGJYyTyHlPO1OTtSlTToB2HbAoCIxS7FUJEJP0pcliCphg4AChH&#xA;xS1qamv3YqxL8t3f9IeZYyspRb+RlnliEQf1J5nHFhX1AFIPLwIwlVbUPLvnKa5la01AQQmW+eMG&#xA;7nI9O5iAiUp6VQUkWqkPSME8Q21FU78p2uoWuhwW+oTrcXUTSJJKpZqlZGBq7nk5rX4iAT3FcCpv&#xA;irsVdirsVdiqEmvCwPosFiBo9y3QHpSMftt28Pn0yVAc0WthtOakOhSBjVo2NXlJFC0p96fZ8Ov8&#xA;uRJJ5rSNAAFB0xS7FXYq7FUI4l/S8JLL6X1eXivE8g3OOpLVpSlNqYqi8VcSAKnYDFWB/lfJIbrz&#xA;FG0ctI7+Wk8sAhEnKeZqoQSZBShDdwQfGhKqt/5X86SXkr2WpmG3Z7z00a8uGHpTxUiBUxlg6ybh&#xA;hJSME8QTSiqBuvKnn5LaSSXWQ0afVnkT6xcEFIYWWYU4iu/7PSX7T0OKHoi8uI5EFqfEQKAn2FTg&#xA;S3irsVdirsVdiqCuL6RpmtLICS5A/eSHeOGvQvTq3gg38aDfCi1a0s47ZWoS8sh5TTPu7t4k/qA2&#xA;A2GBQFfFLsVdiqEiEn6UuSxBUwwcABQj4pa1NTX7sVSbyZ5Oby3DLGb5r31I4ogzRiM/umkbm1C3&#xA;J29ahbwVR2xVLtT8v+fp7qVrPU44Lcy3rQg3EvIRzxgQg/uqbPXx9PqvLphVPvKdvqVvoUEGpTLP&#xA;eRtIssi1NWEjA1Zt3Na/FQV8MCpvirsVdiqlNdRREIatK32IkFWP0dh7nb3wgWqCd5rp2jZQ6jZo&#xA;FP7sdiJpP2vdF+mo3x4q5ItFw2ioVeQiSVRRWpRV2pRF34j8ffI0tK+FLsVdirsVdiqEcS/peEll&#xA;9L6vLxXieQbnHUlq0pSm1MVReKuIBBBFQdiDirG/Jvk5vLcdwpvmvfXVFBMYjpwklkqaFuTH1+Nf&#xA;5VUdsVSvUvL3n+W7lNnqaQ2okvGgU3EpbhLGBCrfuuvOvc+n1WvTCqBuvLX5jR20jS6xG8SfVmlB&#xA;mlNUhgYT7emtfi247ep9puJxQ9FXlxHIgtT4iBQE+wqcCW8VdirsVWTTwwRNLPIsUSbtI5CqPmTt&#xA;iqB9W81EUh52lkes5HGaQbiiKRWNf8pvi8AOuFjzRtvbwW8QigQJGtaAeJ3JJ7knck9cDKlTFXYq&#xA;7FXYqhIhJ+lLksQVMMHAAUI+KWtTU1+7FUXirGPNem+bbq+tpNDuhbwJBPHcq0hQEuh4MgAb94GA&#xA;CswIAJNKgYVTDylDqkGg20WqzLPfpzW4lTvIHIclvh5HlU8gq1/lGBU3xVCS6rZIhZX9UCgJjoyg&#xA;k0oz7Iv+yYZLhPXZFqH1m+ujSFSkZ7p4HoTK440P/Fat88FjputqsGmqq/vTUHdo0J4sf+LGJLye&#xA;HxGh8MBJPNaRiqqqFUBVUUVRsAB2GKW8VdirsVdirsVdiqEcS/peEll9L6vLxXieQbnHUlq0pSm1&#xA;MVReKuxV2KsZ81ad5tub61k0O4WGBIpUuUeVow3NTx4cQ37yoADMCACTSoGFWOzaH+aSW7NdatDJ&#xA;Ei2xuKSbMIkP1o8fRX4XT4eNRyb4qpih6OvLiORBanxECgJ9hU4Et4qp3FzbW0RluJUhiGxkkYKo&#xA;r7mgxW0F+krq5oNPtmZSP96rgNFEPkpAkfxFFCn+bCxvuVIdMBkWe8kN3cKaoWHGKM/8VxCoWnZj&#xA;Vu3LAmkbil2KuxV2KuxV2KoSISfpS5LEFTDBwAFCPilrU1NfuxVF4qgtbj1KTSbpNMcR3zIRA+wI&#xA;PfiWDKGpXiSCAeuKpFpWnefY9Ot47q9tEuFUGZlUuXdvidmPBVqXJ+yoHtjZ8vx8UikR+hdbck3E&#xA;0VwGNXjkd2Sv+SpU8f8AYmuC59/2J9Pcfn+xD67e6loGmNqZsobhLZk9RoxJNIkVQHctIy8URKks&#xA;Woo3yIie/wDHzT6O4/P9idU11tm+rqPGNmDfeyOPww0e9PFHu+3+x3pax/OP+Rq/9k+PCe8/YvGP&#xA;5o+39aG1O61awsJ711aaO3UySRxSxc+C7sRzhQfCN+vy32x4T3n7F4x/NH2/rQWg63qGrG7hQlZ9&#xA;Pma2uGLxqjvGzRO8YEUhCepGwAYhtunQl4T3n7F4x/NH2/rTb0dTP95Rx2Hrsn4xwoceDvJXxO4D&#xA;8e+3fVrz/fQ/6S5/+aMeAefzK+KfL5D9THtH8zTajqkdidOuIDc273VtNLPIsVIpTBJAZFMgaZHQ&#xA;uQu3ArvjwDz+ZXxT5fIfqZD9WvP99D/pLn/5ox4B5/Mr4p8vkP1O+q3JPx2sUngJLiSQD5B42x4A&#xA;viy6be7b7mNSecbax80mxm04wJCY7R5bcxSBpbtlZGJBTisax1ZSPU+NSFpuSIgcmEpk8yzXCh2K&#xA;uxV2Ksf832fma7jsotEmWJDMBfBiqhoSRyDFlc8SnMfCOVSD2xVEMPN5NVOnoD0QidyPblVK/Ogx&#xA;RuoyWPmuYky30Uats0UHwIRSmxaN5Vr4h6+FMBvoyFdb/HwKS+YNWm8tT2ks2nxzy3AmaO/PqXHp&#xA;+gnqGFppnDI0q8hEtaVrWgrgqXf9n7U+juPz/Ynuk6nrOp6bbahBHbpFcxrIqSFw68h9luPJajps&#xA;SMal3/Z+1lcO4/P9iLr5g/ltPvk/pjUu/wCz9q3DuPz/AGMW1r8wbzSbuS3urVF9C4WCZwOQKuiF&#xA;ZFo4PHlOg6cuvw03xqXf+Pmi49x+f7E60LWtY1nTItQghghjkaRDFMW5q0MjROG4F1+0h6Mcal3/&#xA;AGftTcO4/P8AYj6+YP5bT75P6Y1Lv+z9q3DuPz/YxW9/MHUrSeNJdPPCSW6tlYKOLXFsxAjEhkCc&#xA;pAjMgPbc8QDjUu/8fNFx7j8/2Mh0zUdY1LTbTUbdbYQXkMdxCGMgbhKoda0qK0PjjUu/7P2puHcf&#xA;n+xXkk8wJGziO1cqCQgZwTQdByoPvONS7/s/atw7j8/2MNtPzStY7i5utQspkja2EkCQiJiy20jC&#xA;ZuRl4EBZVdWUlWXdWYnjkgD1YSI6PRMUOxV2KuxVQvLGxvYhDeW8VzEGDiOZFkUMu6tRgRUdjiqv&#xA;iqT6x5s0TR762s9RlaGS7BMDCN3UkVqDwDFaAFiSKAA1OKpZceevIuo2KxSyi+trt7eL6o9tK/P6&#xA;1JxgrE8dSGI5Dbpv4YqrDzX5L0uWa2ikjtQtw0Fz6MDKouFMaFX4L1/eL8XT3xVXXzz5Ya0tb0Xq&#xA;/UrxJZIrpgUQLDIkT8ufFgfUlVQKb18MVTXT9Qgv7dp4QwRZZoGDChD28rQydCf24ziqnZaHolhI&#xA;sljp9taSKhiV4IY4yIyxcoCoHw8iWp44qjcVdiqD/Quj/WXuvqNv9ZkkSaSf0k5tLECI3LUqWQMQ&#xA;p6iuKozFXYq7FXYq7FXYq7FUNc6Zpt1Kk11aQzzRo8ccksaOypKOMigsCQHGzDviqnfX1ho2nJLI&#xA;npWcTwWyJEoCoJpUgjAUUAVS46dBiqV2/wCYHlGc0jv6fummq8M8Y4IxU7ui71U/D1pvSmNKhLjX&#xA;fIkT21/NaRC71Od/QZrSk0stoxhZyxUbpzIVmbofh8MKq+n+dPJosbhNKlUw6dbtcNawQvFxjU0o&#xA;issa1JIoPcHoQcCplp/mTRtRuxbWNwtwzI8iyRkMh9JkWQBh3X1UJ9mGKrl8t+XVkkkXS7NZJfU9&#xA;VxBEGb1hSXkeO/Mfa8e+Ko+OOOKNY41CRoAqIoAUKBQAAdAMVbkjSRGjkUOjgq6MKgg7EEHFUBH5&#xA;d8vxxCGPTLRIQoQRrBGF4B/VC0C0p6h5U8d+uKphirsVdirsVdirsVQt3pWl3kiSXdnBcyRgiN5Y&#xA;0dlDAhgpYGlQSDiqVW3lHyRYCysIdHsUaGExWaG3jd1hiKk/EVZqBipJJ+0R3OKokaL5Wu7qV/0d&#xA;ZzXVtOZJXaCMyJcOgJckrXmyMPi7jFVY+XdANvFanTrb6rAjxxWwiQRKkjB3URgcOLMitSnUA4qi&#xA;rKytLK3FtaRLBApZljQUUF2LsfpZicVVsVdirsVdirsVdirsVdirsVdirsVdiqncW1tcxelcRJNE&#xA;SrGORQ68kYOpoaiqsoI98VSC68veQY79oLrTbA3WoJHbtBLDG4kQFpI4+DAqAWRmAp8RWu9MVTAa&#xA;R5avQFOn2kwtJpeKPBGTFM5rKQrL8LPXkT+0DXcHFW08teXo4ZIYdMtYY5oTbyLFCkdYW6x1QKeP&#xA;tiqtZ6LpFlcSXFnZQ200opK8MaoWoAN+IHZVH0DwGKozFXYq7FXYq7FXYq7FXYq7FXYq7FWO+ZNA&#xA;1DUriQWs5txdWot2noHERjmWXdOSFllXkjb+GxGFVby1pGpafzF9P9ZdLe2tFuCKNN9WVyZ3FXoz&#xA;mXiasT8NcCp5irsVdirsVdirsVdirsVdirsVdirsVdirsVdirGtb8tXWpak7h1jiJtp45mDP8cAm&#xA;QxMEkicKRKGUqevL6SqYaFp11ZyXz3EjyG4mTg8hQu6wwRweq4QBQ8jRltu1NgdgFTXFXYq7FXYq&#xA;7FXYq//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:083B4F983D2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:083B4F983D2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:083B4F983D2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T17:52:12+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -150.749 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 150.749 li
379.036 150.749 li
379.036 0 li
cp
clp
[1 0 0 1 0 0 ]ct
26.1064 112.589 mo
171.907 112.589 li
171.907 3.23877 li
26.1064 3.23877 li
26.1064 112.589 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
26.1064 112.589 mo
171.907 112.589 li
171.907 3.23877 li
26.1064 3.23877 li
26.1064 112.589 li
cp
clp
.3375 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
26.1064 112.346 mo
33.7803 112.103 li
41.4541 111.86 li
49.1274 111.617 li
56.8013 111.374 li
64.4751 111.13 li
72.1489 110.888 li
79.8223 110.645 li
87.4961 110.401 li
95.1694 110.159 li
102.844 109.916 li
110.517 109.672 li
118.191 109.43 li
125.865 109.187 li
133.538 108.944 li
141.212 108.701 li
148.886 108.458 li
156.56 108.215 li
164.233 107.972 li
171.907 107.729 li
0 .994 1 0 cmyk
@
26.1064 111.374 mo
33.7803 110.159 li
41.4541 108.458 li
49.1274 106.271 li
56.8013 103.598 li
64.4751 100.439 li
72.1489 96.7939 li
79.8223 92.6631 li
87.4961 88.0459 li
95.1694 82.9429 li
102.844 77.3535 li
110.517 71.2788 li
118.191 64.7178 li
125.865 57.6704 li
133.538 50.1382 li
141.212 42.1187 li
148.886 33.6138 li
156.56 24.6226 li
164.233 15.1455 li
171.907 5.18262 li
.884 .769 0 0 cmyk
@
26.1064 112.346 mo
33.7803 111.617 li
41.4541 110.401 li
49.1274 108.701 li
56.8013 106.514 li
64.4751 103.841 li
72.1489 100.682 li
79.8223 97.0371 li
87.4961 92.9058 li
95.1694 88.2891 li
102.844 83.186 li
110.517 77.5967 li
118.191 71.5215 li
125.865 64.9609 li
133.538 57.9141 li
141.212 50.3804 li
148.886 42.3618 li
156.56 33.8564 li
164.233 24.8657 li
171.907 15.3892 li
.873 .242 1 .129 cmyk
@
grestore
56.8013 112.589 mo
56.8013 111.239 li
56.8013 112.589 li
cp
0 0 0 1 cmyk
f
.16875 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
56.8013 112.589 mo
56.8013 111.239 li
@
56.8013 4.58887 mo
56.8013 3.23877 li
56.8013 4.58887 li
cp
f
56.8013 3.23877 mo
56.8013 4.58887 li
@
55.9067 114.221 mo
58.6152 114.221 li
58.6152 114.802 li
56.5366 114.802 li
56.5366 116.055 li
56.6343 116.02 56.7397 115.992 56.8374 115.978 cv
56.9355 115.964 57.0405 115.95 57.1382 115.95 cv
57.7051 115.95 58.1533 116.111 58.4888 116.418 cv
58.8252 116.733 58.9932 117.153 58.9932 117.686 cv
58.9932 118.238 58.8179 118.665 58.4751 118.966 cv
58.1323 119.267 57.6494 119.414 57.0332 119.414 cv
56.8164 119.414 56.5996 119.393 56.3755 119.365 cv
56.1519 119.33 55.9277 119.281 55.6895 119.204 cv
55.6895 118.511 li
55.8926 118.623 56.1025 118.707 56.3267 118.763 cv
56.5435 118.819 56.7744 118.84 57.0195 118.84 cv
57.4111 118.84 57.7261 118.742 57.9575 118.532 cv
58.1812 118.322 58.3003 118.042 58.3003 117.686 cv
58.3003 117.335 58.1812 117.055 57.9575 116.845 cv
57.7261 116.635 57.4111 116.531 57.0195 116.531 cv
56.8374 116.531 56.6484 116.551 56.4668 116.594 cv
56.2847 116.635 56.0957 116.699 55.9067 116.783 cv
55.9067 114.221 li
f
95.1699 112.589 mo
95.1699 111.239 li
f
95.1699 112.589 mo
95.1699 111.239 li
@
95.1699 3.23877 mo
95.1699 4.58887 li
f
95.1699 3.23877 mo
95.1699 4.58887 li
@
92.1987 118.742 mo
93.3252 118.742 li
93.3252 114.851 li
92.1006 115.096 li
92.1006 114.466 li
93.3184 114.221 li
94.0112 114.221 li
94.0112 118.742 li
95.1377 118.742 li
95.1377 119.323 li
92.1987 119.323 li
92.1987 118.742 li
cp
f
98.0073 114.676 mo
97.6499 114.676 97.3843 114.851 97.2021 115.201 cv
97.0205 115.551 96.9365 116.075 96.9365 116.776 cv
96.9365 117.475 97.0205 118 97.2021 118.35 cv
97.3843 118.7 97.6499 118.875 98.0073 118.875 cv
98.3643 118.875 98.6304 118.7 98.812 118.35 cv
98.9868 118 99.0781 117.475 99.0781 116.776 cv
99.0781 116.075 98.9868 115.551 98.812 115.201 cv
98.6304 114.851 98.3643 114.676 98.0073 114.676 cv
98.0073 114.13 mo
98.5742 114.13 99.0083 114.361 99.3159 114.809 cv
99.6172 115.264 99.771 115.921 99.771 116.776 cv
99.771 117.636 99.6172 118.294 99.3159 118.742 cv
99.0083 119.19 98.5742 119.414 98.0073 119.414 cv
97.4336 119.414 96.9922 119.19 96.6914 118.742 cv
96.3906 118.294 96.2432 117.636 96.2432 116.776 cv
96.2432 115.921 96.3906 115.264 96.6914 114.809 cv
96.9922 114.361 97.4336 114.13 98.0073 114.13 cv
f
133.538 112.589 mo
133.538 111.239 li
f
133.538 112.589 mo
133.538 111.239 li
@
133.538 3.23877 mo
133.538 4.58887 li
f
133.538 3.23877 mo
133.538 4.58887 li
@
130.641 118.742 mo
131.768 118.742 li
131.768 114.851 li
130.543 115.096 li
130.543 114.466 li
131.76 114.221 li
132.453 114.221 li
132.453 118.742 li
133.58 118.742 li
133.58 119.323 li
130.641 119.323 li
130.641 118.742 li
cp
f
134.98 114.221 mo
137.688 114.221 li
137.688 114.802 li
135.61 114.802 li
135.61 116.055 li
135.708 116.02 135.813 115.992 135.911 115.978 cv
136.009 115.964 136.114 115.95 136.211 115.95 cv
136.778 115.95 137.226 116.111 137.562 116.418 cv
137.898 116.733 138.066 117.153 138.066 117.686 cv
138.066 118.238 137.891 118.665 137.548 118.966 cv
137.206 119.267 136.723 119.414 136.106 119.414 cv
135.89 119.414 135.673 119.393 135.449 119.365 cv
135.225 119.33 135.001 119.281 134.763 119.204 cv
134.763 118.511 li
134.966 118.623 135.176 118.707 135.4 118.763 cv
135.617 118.819 135.848 118.84 136.093 118.84 cv
136.484 118.84 136.8 118.742 137.03 118.532 cv
137.254 118.322 137.374 118.042 137.374 117.686 cv
137.374 117.335 137.254 117.055 137.03 116.845 cv
136.8 116.635 136.484 116.531 136.093 116.531 cv
135.911 116.531 135.722 116.551 135.54 116.594 cv
135.357 116.635 135.169 116.699 134.98 116.783 cv
134.98 114.221 li
f
171.907 112.589 mo
171.907 111.239 li
f
171.907 112.589 mo
171.907 111.239 li
@
171.907 3.23877 mo
171.907 4.58887 li
f
171.907 3.23877 mo
171.907 4.58887 li
@
169.282 118.742 mo
171.689 118.742 li
171.689 119.323 li
168.449 119.323 li
168.449 118.742 li
168.708 118.476 169.065 118.112 169.52 117.65 cv
169.968 117.195 170.255 116.901 170.374 116.769 cv
170.598 116.523 170.752 116.313 170.836 116.138 cv
170.92 115.971 170.969 115.796 170.969 115.627 cv
170.969 115.362 170.871 115.138 170.682 114.97 cv
170.493 114.802 170.248 114.711 169.94 114.711 cv
169.723 114.711 169.492 114.753 169.254 114.823 cv
169.016 114.9 168.757 115.012 168.484 115.166 cv
168.484 114.466 li
168.764 114.354 169.023 114.27 169.261 114.214 cv
169.499 114.158 169.723 114.13 169.926 114.13 cv
170.451 114.13 170.871 114.263 171.186 114.529 cv
171.5 114.795 171.662 115.145 171.662 115.585 cv
171.662 115.796 171.62 115.999 171.542 116.181 cv
171.465 116.37 171.326 116.594 171.116 116.846 cv
171.06 116.916 170.878 117.104 170.569 117.419 cv
170.262 117.734 169.835 118.175 169.282 118.742 cv
f
174.615 114.676 mo
174.258 114.676 173.992 114.851 173.81 115.201 cv
173.628 115.551 173.544 116.075 173.544 116.776 cv
173.544 117.475 173.628 118 173.81 118.35 cv
173.992 118.7 174.258 118.875 174.615 118.875 cv
174.972 118.875 175.238 118.7 175.419 118.35 cv
175.595 118 175.686 117.475 175.686 116.776 cv
175.686 116.075 175.595 115.551 175.419 115.201 cv
175.238 114.851 174.972 114.676 174.615 114.676 cv
174.615 114.13 mo
175.182 114.13 175.616 114.361 175.923 114.809 cv
176.225 115.264 176.378 115.921 176.378 116.776 cv
176.378 117.636 176.225 118.294 175.923 118.742 cv
175.616 119.19 175.182 119.414 174.615 119.414 cv
174.041 119.414 173.6 119.19 173.299 118.742 cv
172.999 118.294 172.851 117.636 172.851 116.776 cv
172.851 115.921 172.999 115.264 173.299 114.809 cv
173.6 114.361 174.041 114.13 174.615 114.13 cv
f
76.7427 126.481 mo
77.4355 126.481 li
77.4355 131.583 li
76.7427 131.583 li
76.7427 126.481 li
cp
f
81.9644 129.274 mo
81.9644 131.584 li
81.3345 131.584 li
81.3345 129.295 li
81.3345 128.931 81.2573 128.665 81.1172 128.483 cv
80.9775 128.301 80.7676 128.21 80.4878 128.21 cv
80.1445 128.21 79.8789 128.323 79.6826 128.539 cv
79.4868 128.756 79.3887 129.05 79.3887 129.421 cv
79.3887 131.584 li
78.7588 131.584 li
78.7588 127.755 li
79.3887 127.755 li
79.3887 128.351 li
79.5361 128.126 79.7109 127.952 79.9209 127.839 cv
80.1235 127.728 80.3613 127.665 80.6279 127.665 cv
81.0615 127.665 81.3975 127.805 81.6211 128.078 cv
81.8452 128.351 81.9644 128.749 81.9644 129.274 cv
f
83.8271 131.01 mo
83.8271 133.032 li
83.1973 133.032 li
83.1973 127.755 li
83.8271 127.755 li
83.8271 128.336 li
83.9536 128.112 84.1211 127.944 84.3242 127.833 cv
84.5273 127.721 84.772 127.665 85.0518 127.665 cv
85.5142 127.665 85.8916 127.853 86.1855 128.217 cv
86.4727 128.588 86.6196 129.071 86.6196 129.673 cv
86.6196 130.275 86.4727 130.765 86.1855 131.129 cv
85.8916 131.493 85.5142 131.675 85.0518 131.675 cv
84.772 131.675 84.5273 131.619 84.3242 131.513 cv
84.1211 131.409 83.9536 131.241 83.8271 131.01 cv
85.9688 129.673 mo
85.9688 129.211 85.8706 128.854 85.6816 128.588 cv
85.4858 128.322 85.2266 128.189 84.8979 128.189 cv
84.562 128.189 84.3032 128.322 84.1143 128.588 cv
83.9185 128.854 83.8271 129.211 83.8271 129.673 cv
83.8271 130.135 83.9185 130.499 84.1143 130.765 cv
84.3032 131.031 84.562 131.157 84.8979 131.157 cv
85.2266 131.157 85.4858 131.031 85.6816 130.765 cv
85.8706 130.499 85.9688 130.135 85.9688 129.673 cv
f
87.6006 130.072 mo
87.6006 127.756 li
88.2305 127.756 li
88.2305 130.051 li
88.2305 130.415 88.3008 130.681 88.4404 130.863 cv
88.5806 131.045 88.7905 131.136 89.0771 131.136 cv
89.4136 131.136 89.6865 131.031 89.8823 130.814 cv
90.0781 130.597 90.1763 130.303 90.1763 129.925 cv
90.1763 127.756 li
90.8062 127.756 li
90.8062 131.583 li
90.1763 131.583 li
90.1763 130.996 li
90.0225 131.233 89.8403 131.402 89.644 131.513 cv
89.4414 131.619 89.2104 131.675 88.9443 131.675 cv
88.5034 131.675 88.1675 131.542 87.9434 131.269 cv
87.7129 131.003 87.6006 130.604 87.6006 130.072 cv
f
92.7251 126.671 mo
92.7251 127.755 li
94.02 127.755 li
94.02 128.245 li
92.7251 128.245 li
92.7251 130.324 li
92.7251 130.639 92.7671 130.842 92.8511 130.926 cv
92.9351 131.017 93.1099 131.059 93.376 131.059 cv
94.02 131.059 li
94.02 131.584 li
93.376 131.584 li
92.8862 131.584 92.5498 131.493 92.3682 131.311 cv
92.186 131.129 92.0952 130.8 92.0952 130.324 cv
92.0952 128.245 li
91.6333 128.245 li
91.6333 127.755 li
92.0952 127.755 li
92.0952 126.671 li
92.7251 126.671 li
f
99.5166 127.868 mo
99.5166 128.462 li
99.335 128.378 99.1528 128.308 98.9634 128.259 cv
98.7676 128.217 98.5718 128.189 98.3691 128.189 cv
98.0537 128.189 97.8159 128.239 97.6621 128.336 cv
97.5083 128.435 97.4307 128.574 97.4307 128.763 cv
97.4307 128.911 97.4868 129.022 97.5991 129.106 cv
97.7109 129.19 97.9346 129.274 98.271 129.344 cv
98.4878 129.394 li
98.9355 129.491 99.2505 129.631 99.4395 129.799 cv
99.6216 129.974 99.7197 130.219 99.7197 130.527 cv
99.7197 130.884 99.5796 131.164 99.2998 131.367 cv
99.0195 131.577 98.6279 131.675 98.1382 131.675 cv
97.9282 131.675 97.7183 131.654 97.4941 131.619 cv
97.2705 131.584 97.0391 131.528 96.7944 131.444 cv
96.7944 130.792 li
97.0254 130.919 97.2559 131.01 97.48 131.066 cv
97.7041 131.129 97.9282 131.157 98.1519 131.157 cv
98.4458 131.157 98.6768 131.108 98.8374 131.01 cv
98.9917 130.912 99.0757 130.765 99.0757 130.576 cv
99.0757 130.408 99.0127 130.275 98.9009 130.184 cv
98.7891 130.093 98.5371 130.002 98.145 129.918 cv
97.9282 129.869 li
97.5361 129.785 97.249 129.659 97.0811 129.491 cv
96.9063 129.323 96.8223 129.092 96.8223 128.792 cv
96.8223 128.435 96.9482 128.154 97.2002 127.958 cv
97.4521 127.762 97.8159 127.665 98.292 127.665 cv
98.5229 127.665 98.7397 127.686 98.9497 127.72 cv
99.1528 127.755 99.3413 127.805 99.5166 127.868 cv
f
100.723 127.756 mo
101.353 127.756 li
101.353 131.584 li
100.723 131.584 li
100.723 127.756 li
cp
100.723 126.265 mo
101.353 126.265 li
101.353 127.063 li
100.723 127.063 li
100.723 126.265 li
cp
f
102.396 127.755 mo
105.384 127.755 li
105.384 128.329 li
103.019 131.08 li
105.384 131.08 li
105.384 131.584 li
102.312 131.584 li
102.312 131.01 li
104.677 128.259 li
102.396 128.259 li
102.396 127.755 li
cp
f
109.62 129.512 mo
109.62 129.82 li
106.729 129.82 li
106.758 130.254 106.883 130.59 107.122 130.813 cv
107.352 131.038 107.674 131.15 108.094 131.15 cv
108.332 131.15 108.57 131.122 108.794 131.066 cv
109.018 131.01 109.249 130.919 109.473 130.792 cv
109.473 131.388 li
109.249 131.486 109.018 131.563 108.78 131.605 cv
108.542 131.646 108.297 131.675 108.059 131.675 cv
107.443 131.675 106.96 131.5 106.604 131.15 cv
106.247 130.8 106.071 130.317 106.071 129.708 cv
106.071 129.085 106.239 128.588 106.575 128.217 cv
106.912 127.854 107.373 127.665 107.947 127.665 cv
108.465 127.665 108.871 127.833 109.172 128.162 cv
109.466 128.498 109.62 128.945 109.62 129.512 cv
108.99 129.331 mo
108.983 128.987 108.885 128.714 108.703 128.504 cv
108.514 128.301 108.262 128.197 107.954 128.197 cv
107.604 128.197 107.324 128.301 107.114 128.498 cv
106.904 128.693 106.778 128.973 106.75 129.331 cv
108.99 129.331 li
f
114.391 126.272 mo
114.083 126.804 113.859 127.321 113.712 127.833 cv
113.558 128.344 113.488 128.861 113.488 129.386 cv
113.488 129.918 113.558 130.436 113.712 130.947 cv
113.859 131.465 114.083 131.976 114.391 132.5 cv
113.845 132.5 li
113.502 131.961 113.243 131.444 113.075 130.926 cv
112.907 130.408 112.823 129.897 112.823 129.386 cv
112.823 128.882 112.907 128.372 113.075 127.854 cv
113.243 127.335 113.495 126.811 113.845 126.272 cv
114.391 126.272 li
f
115.492 131.465 mo
115.492 131.437 115.492 131.416 115.5 131.402 cv
116.024 129.316 li
116.052 129.19 116.073 129.071 116.073 128.973 cv
116.073 128.777 116.003 128.672 115.87 128.672 cv
115.724 128.672 115.611 128.763 115.542 128.938 cv
115.471 129.113 115.401 129.331 115.338 129.596 cv
115.338 129.61 115.331 129.624 115.317 129.631 cv
115.303 129.638 115.289 129.638 115.282 129.638 cv
115.198 129.638 li
115.185 129.638 115.17 129.631 115.156 129.617 cv
115.143 129.603 115.143 129.582 115.143 129.568 cv
115.191 129.365 115.24 129.19 115.289 129.05 cv
115.331 128.911 115.408 128.784 115.506 128.665 cv
115.604 128.553 115.724 128.49 115.877 128.49 cv
116.045 128.49 116.199 128.546 116.339 128.659 cv
116.472 128.771 116.542 128.911 116.542 129.078 cv
116.682 128.896 116.843 128.756 117.032 128.651 cv
117.214 128.546 117.417 128.49 117.626 128.49 cv
117.788 128.49 117.928 128.525 118.054 128.582 cv
118.173 128.637 118.264 128.728 118.333 128.84 cv
118.403 128.953 118.438 129.092 118.438 129.247 cv
118.438 129.442 118.39 129.673 118.306 129.939 cv
118.222 130.212 118.117 130.513 117.991 130.849 cv
117.92 131.002 117.893 131.143 117.893 131.269 cv
117.893 131.409 117.942 131.479 118.054 131.479 cv
118.236 131.479 118.383 131.381 118.509 131.185 cv
118.627 130.989 118.711 130.779 118.768 130.555 cv
118.775 130.527 118.795 130.513 118.823 130.513 cv
118.907 130.513 li
118.921 130.513 118.936 130.52 118.95 130.534 cv
118.963 130.548 118.971 130.562 118.971 130.576 cv
118.971 130.583 118.963 130.59 118.963 130.597 cv
118.901 130.863 118.789 131.108 118.635 131.325 cv
118.474 131.549 118.278 131.654 118.04 131.654 cv
117.872 131.654 117.732 131.598 117.62 131.493 cv
117.5 131.381 117.445 131.248 117.445 131.08 cv
117.445 130.996 117.459 130.905 117.5 130.807 cv
117.557 130.653 117.62 130.471 117.697 130.261 cv
117.774 130.051 117.837 129.855 117.886 129.659 cv
117.935 129.463 117.963 129.295 117.963 129.141 cv
117.963 129.015 117.935 128.903 117.879 128.813 cv
117.823 128.721 117.739 128.672 117.613 128.672 cv
117.438 128.672 117.277 128.714 117.137 128.784 cv
116.997 128.861 116.871 128.959 116.766 129.085 cv
116.654 129.211 116.556 129.358 116.472 129.526 cv
115.996 131.43 li
115.982 131.5 115.947 131.549 115.892 131.591 cv
115.835 131.632 115.772 131.654 115.702 131.654 cv
115.646 131.654 115.598 131.632 115.555 131.605 cv
115.514 131.577 115.492 131.528 115.492 131.465 cv
f
119.713 126.272 mo
120.258 126.272 li
120.595 126.811 120.854 127.335 121.021 127.854 cv
121.189 128.372 121.281 128.882 121.281 129.386 cv
121.281 129.897 121.189 130.408 121.021 130.926 cv
120.854 131.444 120.595 131.961 120.258 132.5 cv
119.713 132.5 li
120.014 131.976 120.238 131.465 120.392 130.947 cv
120.539 130.436 120.615 129.918 120.615 129.386 cv
120.615 128.861 120.539 128.344 120.392 127.833 cv
120.238 127.321 120.014 126.804 119.713 126.272 cv
f
26.1064 112.589 mo
27.4565 112.589 li
f
26.1064 112.589 mo
27.4565 112.589 li
@
171.907 112.589 mo
170.557 112.589 li
f
171.907 112.589 mo
170.557 112.589 li
@
23.4541 109.896 mo
23.0972 109.896 22.8311 110.071 22.6494 110.42 cv
22.4673 110.771 22.3833 111.295 22.3833 111.995 cv
22.3833 112.695 22.4673 113.22 22.6494 113.57 cv
22.8311 113.92 23.0972 114.095 23.4541 114.095 cv
23.8115 114.095 24.0771 113.92 24.2593 113.57 cv
24.4341 113.22 24.5249 112.695 24.5249 111.995 cv
24.5249 111.295 24.4341 110.771 24.2593 110.42 cv
24.0771 110.071 23.8115 109.896 23.4541 109.896 cv
23.4541 109.35 mo
24.0215 109.35 24.4551 109.581 24.7627 110.029 cv
25.064 110.483 25.2183 111.141 25.2183 111.995 cv
25.2183 112.856 25.064 113.514 24.7627 113.961 cv
24.4551 114.41 24.0215 114.633 23.4541 114.633 cv
22.8804 114.633 22.4395 114.41 22.1387 113.961 cv
21.8374 113.514 21.6904 112.856 21.6904 111.995 cv
21.6904 111.141 21.8374 110.483 22.1387 110.029 cv
22.4395 109.581 22.8804 109.35 23.4541 109.35 cv
f
26.1064 100.439 mo
27.4565 100.439 li
f
26.1064 100.439 mo
27.4565 100.439 li
@
171.907 100.439 mo
170.557 100.439 li
f
171.907 100.439 mo
170.557 100.439 li
@
17.6079 97.2905 mo
20.3159 97.2905 li
20.3159 97.8716 li
18.2373 97.8716 li
18.2373 99.1245 li
18.3354 99.0894 18.4404 99.0615 18.5386 99.0474 cv
18.6362 99.0337 18.7412 99.019 18.8394 99.019 cv
19.4063 99.019 19.854 99.1807 20.1899 99.4883 cv
20.5259 99.8027 20.6943 100.223 20.6943 100.755 cv
20.6943 101.308 20.519 101.735 20.1763 102.036 cv
19.833 102.336 19.3501 102.484 18.7344 102.484 cv
18.5171 102.484 18.3008 102.462 18.0767 102.435 cv
17.8525 102.4 17.6284 102.351 17.3906 102.274 cv
17.3906 101.581 li
17.5938 101.692 17.8037 101.777 18.0273 101.833 cv
18.2446 101.889 18.4756 101.91 18.7202 101.91 cv
19.1123 101.91 19.4272 101.812 19.6582 101.602 cv
19.8823 101.392 20.0015 101.112 20.0015 100.755 cv
20.0015 100.405 19.8823 100.125 19.6582 99.915 cv
19.4272 99.7051 19.1123 99.6006 18.7202 99.6006 cv
18.5386 99.6006 18.3496 99.6211 18.1675 99.6631 cv
17.9858 99.7051 17.7969 99.7681 17.6079 99.8521 cv
17.6079 97.2905 li
f
23.5283 97.7456 mo
23.1714 97.7456 22.9058 97.9204 22.7231 98.2705 cv
22.5415 98.6206 22.4575 99.145 22.4575 99.8452 cv
22.4575 100.545 22.5415 101.07 22.7231 101.42 cv
22.9058 101.77 23.1714 101.945 23.5283 101.945 cv
23.8853 101.945 24.1514 101.77 24.333 101.42 cv
24.5078 101.07 24.5991 100.545 24.5991 99.8452 cv
24.5991 99.145 24.5078 98.6206 24.333 98.2705 cv
24.1514 97.9204 23.8853 97.7456 23.5283 97.7456 cv
23.5283 97.1997 mo
24.0952 97.1997 24.5288 97.4307 24.8369 97.8789 cv
25.1382 98.3335 25.292 98.9912 25.292 99.8452 cv
25.292 100.706 25.1382 101.364 24.8369 101.812 cv
24.5288 102.259 24.0952 102.483 23.5283 102.483 cv
22.9546 102.483 22.5132 102.259 22.2129 101.812 cv
21.9116 101.364 21.7646 100.706 21.7646 99.8452 cv
21.7646 98.9912 21.9116 98.3335 22.2129 97.8789 cv
22.5132 97.4307 22.9546 97.1997 23.5283 97.1997 cv
f
26.1064 88.2886 mo
27.4565 88.2886 li
f
26.1064 88.2886 mo
27.4565 88.2886 li
@
171.907 88.2886 mo
170.557 88.2886 li
f
171.907 88.2886 mo
170.557 88.2886 li
@
13.4902 89.6616 mo
14.6167 89.6616 li
14.6167 85.7705 li
13.3926 86.0156 li
13.3926 85.3857 li
14.6104 85.1401 li
15.3032 85.1401 li
15.3032 89.6616 li
16.4297 89.6616 li
16.4297 90.2427 li
13.4902 90.2427 li
13.4902 89.6616 li
cp
f
19.2988 85.5957 mo
18.9419 85.5957 18.6763 85.7705 18.4941 86.1206 cv
18.312 86.4707 18.2285 86.9951 18.2285 87.6953 cv
18.2285 88.395 18.312 88.9199 18.4941 89.27 cv
18.6763 89.6196 18.9419 89.7944 19.2988 89.7944 cv
19.6563 89.7944 19.9219 89.6196 20.104 89.27 cv
20.2788 88.9199 20.3696 88.395 20.3696 87.6953 cv
20.3696 86.9951 20.2788 86.4707 20.104 86.1206 cv
19.9219 85.7705 19.6563 85.5957 19.2988 85.5957 cv
19.2988 85.0498 mo
19.8662 85.0498 20.2998 85.2808 20.6074 85.7285 cv
20.9087 86.1831 21.0625 86.8413 21.0625 87.6953 cv
21.0625 88.5562 20.9087 89.2139 20.6074 89.6616 cv
20.2998 90.1094 19.8662 90.3335 19.2988 90.3335 cv
18.7251 90.3335 18.2842 90.1094 17.9834 89.6616 cv
17.6821 89.2139 17.5352 88.5562 17.5352 87.6953 cv
17.5352 86.8413 17.6821 86.1831 17.9834 85.7285 cv
18.2842 85.2808 18.7251 85.0498 19.2988 85.0498 cv
f
23.75 85.5957 mo
23.3931 85.5957 23.1274 85.7705 22.9453 86.1206 cv
22.7632 86.4707 22.6792 86.9951 22.6792 87.6953 cv
22.6792 88.395 22.7632 88.9199 22.9453 89.27 cv
23.1274 89.6196 23.3931 89.7944 23.75 89.7944 cv
24.1069 89.7944 24.373 89.6196 24.5547 89.27 cv
24.7295 88.9199 24.8208 88.395 24.8208 87.6953 cv
24.8208 86.9951 24.7295 86.4707 24.5547 86.1206 cv
24.373 85.7705 24.1069 85.5957 23.75 85.5957 cv
23.75 85.0498 mo
24.3169 85.0498 24.7505 85.2808 25.0586 85.7285 cv
25.3599 86.1831 25.5137 86.8413 25.5137 87.6953 cv
25.5137 88.5562 25.3599 89.2139 25.0586 89.6616 cv
24.7505 90.1094 24.3169 90.3335 23.75 90.3335 cv
23.1763 90.3335 22.7354 90.1094 22.4346 89.6616 cv
22.1333 89.2139 21.9863 88.5562 21.9863 87.6953 cv
21.9863 86.8413 22.1333 86.1831 22.4346 85.7285 cv
22.7354 85.2808 23.1763 85.0498 23.75 85.0498 cv
f
26.1064 76.1387 mo
27.4565 76.1387 li
f
26.1064 76.1387 mo
27.4565 76.1387 li
@
171.907 76.1387 mo
170.557 76.1387 li
f
171.907 76.1387 mo
170.557 76.1387 li
@
13.4902 77.5117 mo
14.6167 77.5117 li
14.6167 73.6206 li
13.3926 73.8657 li
13.3926 73.2358 li
14.6104 72.9902 li
15.3032 72.9902 li
15.3032 77.5117 li
16.4297 77.5117 li
16.4297 78.0928 li
13.4902 78.0928 li
13.4902 77.5117 li
cp
f
17.8291 72.9907 mo
20.5376 72.9907 li
20.5376 73.5718 li
18.459 73.5718 li
18.459 74.8247 li
18.5571 74.7891 18.6621 74.7612 18.7603 74.7471 cv
18.8579 74.7334 18.9629 74.7192 19.061 74.7192 cv
19.6279 74.7192 20.0757 74.8804 20.4116 75.1885 cv
20.7476 75.5029 20.9155 75.9229 20.9155 76.4551 cv
20.9155 77.0078 20.7407 77.4346 20.3975 77.7358 cv
20.0547 78.0366 19.5718 78.1836 18.9561 78.1836 cv
18.7393 78.1836 18.522 78.1626 18.2983 78.1343 cv
18.0742 78.0996 17.8501 78.0503 17.6123 77.9736 cv
17.6123 77.2808 li
17.8149 77.3926 18.0254 77.4766 18.249 77.5327 cv
18.4663 77.5889 18.6973 77.6099 18.9419 77.6099 cv
19.334 77.6099 19.6489 77.5117 19.8799 77.3013 cv
20.1035 77.0913 20.2227 76.812 20.2227 76.4551 cv
20.2227 76.105 20.1035 75.8247 19.8799 75.6147 cv
19.6489 75.4048 19.334 75.3003 18.9419 75.3003 cv
18.7603 75.3003 18.5713 75.3208 18.3892 75.3633 cv
18.2075 75.4048 18.0186 75.4683 17.8291 75.5522 cv
17.8291 72.9907 li
f
23.75 73.4458 mo
23.3931 73.4458 23.1274 73.6206 22.9453 73.9707 cv
22.7632 74.3208 22.6792 74.8452 22.6792 75.5454 cv
22.6792 76.2451 22.7632 76.77 22.9453 77.1196 cv
23.1274 77.4697 23.3931 77.6445 23.75 77.6445 cv
24.1069 77.6445 24.373 77.4697 24.5547 77.1196 cv
24.7295 76.77 24.8208 76.2451 24.8208 75.5454 cv
24.8208 74.8452 24.7295 74.3208 24.5547 73.9707 cv
24.373 73.6206 24.1069 73.4458 23.75 73.4458 cv
23.75 72.8999 mo
24.3169 72.8999 24.7505 73.1304 25.0586 73.5786 cv
25.3599 74.0332 25.5137 74.6909 25.5137 75.5454 cv
25.5137 76.4058 25.3599 77.064 25.0586 77.5117 cv
24.7505 77.9595 24.3169 78.1836 23.75 78.1836 cv
23.1763 78.1836 22.7354 77.9595 22.4346 77.5117 cv
22.1333 77.064 21.9863 76.4058 21.9863 75.5454 cv
21.9863 74.6909 22.1333 74.0332 22.4346 73.5786 cv
22.7354 73.1304 23.1763 72.8999 23.75 72.8999 cv
f
26.1064 63.9888 mo
27.4565 63.9888 li
f
26.1064 63.9888 mo
27.4565 63.9888 li
@
171.907 63.9888 mo
170.557 63.9888 li
f
171.907 63.9888 mo
170.557 63.9888 li
@
13.708 65.3618 mo
16.1152 65.3618 li
16.1152 65.9429 li
12.875 65.9429 li
12.875 65.3618 li
13.1343 65.0962 13.4907 64.7319 13.9458 64.27 cv
14.3936 63.8149 14.6807 63.521 14.7998 63.3882 cv
15.0234 63.1431 15.1772 62.9331 15.2617 62.7583 cv
15.3452 62.5903 15.3945 62.4155 15.3945 62.2471 cv
15.3945 61.9814 15.2964 61.7573 15.1074 61.5898 cv
14.9185 61.4214 14.6733 61.3306 14.3657 61.3306 cv
14.1484 61.3306 13.918 61.3726 13.6797 61.4424 cv
13.4419 61.5195 13.1831 61.6313 12.9102 61.7856 cv
12.9102 61.0859 li
13.1899 60.9736 13.4487 60.8896 13.687 60.8335 cv
13.9248 60.7778 14.1484 60.7495 14.3516 60.7495 cv
14.8765 60.7495 15.2964 60.8823 15.6113 61.1484 cv
15.9263 61.4146 16.0874 61.7646 16.0874 62.2051 cv
16.0874 62.4155 16.0454 62.6182 15.9683 62.8003 cv
15.8916 62.9893 15.7515 63.2134 15.5415 63.4653 cv
15.4854 63.5352 15.3037 63.7241 14.9956 64.0391 cv
14.6875 64.354 14.2607 64.7944 13.708 65.3618 cv
f
19.0405 61.2954 mo
18.6836 61.2954 18.418 61.4707 18.2358 61.8203 cv
18.0537 62.1704 17.9702 62.6953 17.9702 63.395 cv
17.9702 64.0947 18.0537 64.6201 18.2358 64.9697 cv
18.418 65.3198 18.6836 65.4946 19.0405 65.4946 cv
19.3975 65.4946 19.6636 65.3198 19.8457 64.9697 cv
20.0205 64.6201 20.1113 64.0947 20.1113 63.395 cv
20.1113 62.6953 20.0205 62.1704 19.8457 61.8203 cv
19.6636 61.4707 19.3975 61.2954 19.0405 61.2954 cv
19.0405 60.75 mo
19.6074 60.75 20.041 60.9805 20.3491 61.4287 cv
20.6504 61.8833 20.8042 62.5415 20.8042 63.395 cv
20.8042 64.2559 20.6504 64.9136 20.3491 65.3613 cv
20.041 65.8096 19.6074 66.0337 19.0405 66.0337 cv
18.4668 66.0337 18.0259 65.8096 17.7251 65.3613 cv
17.4238 64.9136 17.2769 64.2559 17.2769 63.395 cv
17.2769 62.5415 17.4238 61.8833 17.7251 61.4287 cv
18.0259 60.9805 18.4668 60.75 19.0405 60.75 cv
f
23.4917 61.2954 mo
23.1348 61.2954 22.8687 61.4707 22.687 61.8203 cv
22.5049 62.1704 22.4209 62.6953 22.4209 63.395 cv
22.4209 64.0947 22.5049 64.6201 22.687 64.9697 cv
22.8687 65.3198 23.1348 65.4946 23.4917 65.4946 cv
23.8486 65.4946 24.1147 65.3198 24.2964 64.9697 cv
24.4712 64.6201 24.5625 64.0947 24.5625 63.395 cv
24.5625 62.6953 24.4712 62.1704 24.2964 61.8203 cv
24.1147 61.4707 23.8486 61.2954 23.4917 61.2954 cv
23.4917 60.75 mo
24.0586 60.75 24.4922 60.9805 24.8003 61.4287 cv
25.1016 61.8833 25.2554 62.5415 25.2554 63.395 cv
25.2554 64.2559 25.1016 64.9136 24.8003 65.3613 cv
24.4922 65.8096 24.0586 66.0337 23.4917 66.0337 cv
22.918 66.0337 22.4771 65.8096 22.1758 65.3613 cv
21.875 64.9136 21.728 64.2559 21.728 63.395 cv
21.728 62.5415 21.875 61.8833 22.1758 61.4287 cv
22.4771 60.9805 22.918 60.75 23.4917 60.75 cv
f
26.1064 51.8389 mo
27.4565 51.8389 li
f
26.1064 51.8389 mo
27.4565 51.8389 li
@
171.907 51.8389 mo
170.557 51.8389 li
f
171.907 51.8389 mo
170.557 51.8389 li
@
13.708 53.2119 mo
16.1152 53.2119 li
16.1152 53.7925 li
12.875 53.7925 li
12.875 53.2119 li
13.1343 52.9458 13.4907 52.582 13.9458 52.1201 cv
14.3936 51.665 14.6807 51.3711 14.7998 51.2378 cv
15.0234 50.9932 15.1772 50.7832 15.2617 50.6084 cv
15.3452 50.4404 15.3945 50.2651 15.3945 50.0972 cv
15.3945 49.8315 15.2964 49.6074 15.1074 49.4395 cv
14.9185 49.272 14.6733 49.1807 14.3657 49.1807 cv
14.1484 49.1807 13.918 49.2227 13.6797 49.2925 cv
13.4419 49.3696 13.1831 49.4819 12.9102 49.6357 cv
12.9102 48.9355 li
13.1899 48.8237 13.4487 48.7397 13.687 48.6836 cv
13.9248 48.6279 14.1484 48.5996 14.3516 48.5996 cv
14.8765 48.5996 15.2964 48.7329 15.6113 48.9985 cv
15.9263 49.2646 16.0874 49.6147 16.0874 50.0552 cv
16.0874 50.2651 16.0454 50.4683 15.9683 50.6504 cv
15.8916 50.8394 15.7515 51.063 15.5415 51.3149 cv
15.4854 51.3853 15.3037 51.5737 14.9956 51.8892 cv
14.6875 52.2041 14.2607 52.6445 13.708 53.2119 cv
f
17.5708 48.6909 mo
20.2793 48.6909 li
20.2793 49.2715 li
18.2007 49.2715 li
18.2007 50.5244 li
18.2988 50.4893 18.4038 50.4614 18.502 50.4473 cv
18.5996 50.4331 18.7046 50.4194 18.8022 50.4194 cv
19.3696 50.4194 19.8174 50.5806 20.1533 50.8882 cv
20.4893 51.2031 20.6572 51.623 20.6572 52.1548 cv
20.6572 52.7075 20.4824 53.1348 20.1392 53.4355 cv
19.7964 53.7368 19.3135 53.8833 18.6973 53.8833 cv
18.481 53.8833 18.2637 53.8628 18.0396 53.8345 cv
17.8159 53.7993 17.5918 53.7505 17.354 53.6733 cv
17.354 52.981 li
17.5566 53.0928 17.7671 53.1768 17.9907 53.2329 cv
18.208 53.2886 18.4385 53.3096 18.6836 53.3096 cv
19.0757 53.3096 19.3906 53.2119 19.6216 53.0015 cv
19.8452 52.7915 19.9644 52.5117 19.9644 52.1548 cv
19.9644 51.8052 19.8452 51.5249 19.6216 51.3149 cv
19.3906 51.105 19.0757 51.0005 18.6836 51.0005 cv
18.502 51.0005 18.313 51.021 18.1309 51.063 cv
17.9487 51.105 17.7598 51.168 17.5708 51.252 cv
17.5708 48.6909 li
f
23.4917 49.1455 mo
23.1348 49.1455 22.8687 49.3208 22.687 49.6704 cv
22.5049 50.0205 22.4209 50.5454 22.4209 51.2451 cv
22.4209 51.9448 22.5049 52.4697 22.687 52.8198 cv
22.8687 53.1694 23.1348 53.3447 23.4917 53.3447 cv
23.8486 53.3447 24.1147 53.1694 24.2964 52.8198 cv
24.4712 52.4697 24.5625 51.9448 24.5625 51.2451 cv
24.5625 50.5454 24.4712 50.0205 24.2964 49.6704 cv
24.1147 49.3208 23.8486 49.1455 23.4917 49.1455 cv
23.4917 48.6001 mo
24.0586 48.6001 24.4922 48.8306 24.8003 49.2788 cv
25.1016 49.7334 25.2554 50.3911 25.2554 51.2451 cv
25.2554 52.106 25.1016 52.7642 24.8003 53.2119 cv
24.4922 53.6597 24.0586 53.8838 23.4917 53.8838 cv
22.918 53.8838 22.4771 53.6597 22.1758 53.2119 cv
21.875 52.7642 21.728 52.106 21.728 51.2451 cv
21.728 50.3911 21.875 49.7334 22.1758 49.2788 cv
22.4771 48.8306 22.918 48.6001 23.4917 48.6001 cv
f
26.1064 39.689 mo
27.4565 39.689 li
f
26.1064 39.689 mo
27.4565 39.689 li
@
171.907 39.689 mo
170.557 39.689 li
f
171.907 39.689 mo
170.557 39.689 li
@
15.2266 38.8921 mo
15.5557 38.9624 15.8145 39.1094 15.9966 39.333 cv
16.1782 39.5571 16.2764 39.8369 16.2764 40.1587 cv
16.2764 40.6626 16.1016 41.0547 15.7583 41.3276 cv
15.4087 41.6006 14.9185 41.7334 14.2817 41.7334 cv
14.0649 41.7334 13.8408 41.7124 13.6167 41.6704 cv
13.3931 41.6353 13.1548 41.5728 12.917 41.4888 cv
12.917 40.8237 li
13.106 40.9355 13.3159 41.02 13.5469 41.0757 cv
13.771 41.1318 14.0088 41.1597 14.2607 41.1597 cv
14.6948 41.1597 15.0234 41.0757 15.2476 40.9077 cv
15.4717 40.7397 15.5903 40.4878 15.5903 40.1587 cv
15.5903 39.8647 15.4854 39.627 15.2754 39.459 cv
15.0654 39.291 14.7715 39.1997 14.3936 39.1997 cv
13.7988 39.1997 li
13.7988 38.6333 li
14.4214 38.6333 li
14.7578 38.6333 15.0166 38.5703 15.1987 38.4302 cv
15.3804 38.2974 15.4717 38.1016 15.4717 37.8423 cv
15.4717 37.5835 15.3735 37.3804 15.1914 37.2407 cv
15.0024 37.1006 14.7363 37.0308 14.3936 37.0308 cv
14.2051 37.0308 14.002 37.0513 13.7852 37.0938 cv
13.5679 37.1353 13.3296 37.1987 13.0708 37.2822 cv
13.0708 36.6665 li
13.3296 36.5967 13.5747 36.541 13.8062 36.5059 cv
14.0298 36.4707 14.2466 36.4497 14.4565 36.4497 cv
14.9746 36.4497 15.3877 36.5688 15.6953 36.8066 cv
16.0034 37.0444 16.1572 37.3662 16.1572 37.7725 cv
16.1572 38.0522 16.0732 38.2905 15.9121 38.4863 cv
15.7515 38.6821 15.5205 38.8218 15.2266 38.8921 cv
f
19.0615 36.9956 mo
18.7046 36.9956 18.439 37.1709 18.2568 37.5205 cv
18.0747 37.8706 17.9912 38.395 17.9912 39.0952 cv
17.9912 39.7949 18.0747 40.3198 18.2568 40.6699 cv
18.439 41.0195 18.7046 41.1948 19.0615 41.1948 cv
19.4189 41.1948 19.6846 41.0195 19.8667 40.6699 cv
20.0415 40.3198 20.1323 39.7949 20.1323 39.0952 cv
20.1323 38.395 20.0415 37.8706 19.8667 37.5205 cv
19.6846 37.1709 19.4189 36.9956 19.0615 36.9956 cv
19.0615 36.4497 mo
19.6289 36.4497 20.0625 36.6807 20.3701 37.1284 cv
20.6714 37.5835 20.8257 38.2412 20.8257 39.0952 cv
20.8257 39.9556 20.6714 40.6138 20.3701 41.062 cv
20.0625 41.5098 19.6289 41.7339 19.0615 41.7339 cv
18.4878 41.7339 18.0469 41.5098 17.7461 41.062 cv
17.4448 40.6138 17.2979 39.9556 17.2979 39.0952 cv
17.2979 38.2412 17.4448 37.5835 17.7461 37.1284 cv
18.0469 36.6807 18.4878 36.4497 19.0615 36.4497 cv
f
23.5127 36.9956 mo
23.1558 36.9956 22.8901 37.1709 22.708 37.5205 cv
22.5259 37.8706 22.4419 38.395 22.4419 39.0952 cv
22.4419 39.7949 22.5259 40.3198 22.708 40.6699 cv
22.8901 41.0195 23.1558 41.1948 23.5127 41.1948 cv
23.8696 41.1948 24.1357 41.0195 24.3174 40.6699 cv
24.4922 40.3198 24.5835 39.7949 24.5835 39.0952 cv
24.5835 38.395 24.4922 37.8706 24.3174 37.5205 cv
24.1357 37.1709 23.8696 36.9956 23.5127 36.9956 cv
23.5127 36.4497 mo
24.0796 36.4497 24.5132 36.6807 24.8213 37.1284 cv
25.1226 37.5835 25.2764 38.2412 25.2764 39.0952 cv
25.2764 39.9556 25.1226 40.6138 24.8213 41.062 cv
24.5132 41.5098 24.0796 41.7339 23.5127 41.7339 cv
22.939 41.7339 22.498 41.5098 22.1973 41.062 cv
21.896 40.6138 21.749 39.9556 21.749 39.0952 cv
21.749 38.2412 21.896 37.5835 22.1973 37.1284 cv
22.498 36.6807 22.939 36.4497 23.5127 36.4497 cv
f
26.1064 27.5386 mo
27.4565 27.5386 li
f
26.1064 27.5386 mo
27.4565 27.5386 li
@
171.907 27.5386 mo
170.557 27.5386 li
f
171.907 27.5386 mo
170.557 27.5386 li
@
15.2266 26.7422 mo
15.5557 26.8125 15.8145 26.959 15.9966 27.1831 cv
16.1782 27.4072 16.2764 27.687 16.2764 28.0088 cv
16.2764 28.5127 16.1016 28.9048 15.7583 29.1777 cv
15.4087 29.4507 14.9185 29.5835 14.2817 29.5835 cv
14.0649 29.5835 13.8408 29.5625 13.6167 29.5205 cv
13.3931 29.4854 13.1548 29.4224 12.917 29.3384 cv
12.917 28.6738 li
13.106 28.7856 13.3159 28.8696 13.5469 28.9258 cv
13.771 28.9819 14.0088 29.0093 14.2607 29.0093 cv
14.6948 29.0093 15.0234 28.9258 15.2476 28.7578 cv
15.4717 28.5898 15.5903 28.3379 15.5903 28.0088 cv
15.5903 27.7148 15.4854 27.4771 15.2754 27.3091 cv
15.0654 27.1411 14.7715 27.0498 14.3936 27.0498 cv
13.7988 27.0498 li
13.7988 26.4834 li
14.4214 26.4834 li
14.7578 26.4834 15.0166 26.4204 15.1987 26.2803 cv
15.3804 26.147 15.4717 25.9517 15.4717 25.6924 cv
15.4717 25.4336 15.3735 25.2305 15.1914 25.0903 cv
15.0024 24.9502 14.7363 24.8804 14.3936 24.8804 cv
14.2051 24.8804 14.002 24.9014 13.7852 24.9438 cv
13.5679 24.9854 13.3296 25.0483 13.0708 25.1323 cv
13.0708 24.5166 li
13.3296 24.4468 13.5747 24.3906 13.8062 24.356 cv
14.0298 24.3208 14.2466 24.2998 14.4565 24.2998 cv
14.9746 24.2998 15.3877 24.4189 15.6953 24.6567 cv
16.0034 24.8945 16.1572 25.2163 16.1572 25.6226 cv
16.1572 25.9023 16.0732 26.1406 15.9121 26.3364 cv
15.7515 26.5322 15.5205 26.6719 15.2266 26.7422 cv
f
17.5918 24.3906 mo
20.3003 24.3906 li
20.3003 24.9717 li
18.2217 24.9717 li
18.2217 26.2241 li
18.3198 26.1895 18.4248 26.1611 18.5229 26.1475 cv
18.6206 26.1333 18.7256 26.1196 18.8237 26.1196 cv
19.3906 26.1196 19.8384 26.2803 20.1743 26.5884 cv
20.5103 26.9028 20.6787 27.3228 20.6787 27.855 cv
20.6787 28.4077 20.5034 28.8345 20.1602 29.1357 cv
19.8174 29.4365 19.3345 29.5835 18.7188 29.5835 cv
18.502 29.5835 18.2852 29.5625 18.061 29.5347 cv
17.8369 29.4995 17.6128 29.4507 17.375 29.3735 cv
17.375 28.6807 li
17.5776 28.793 17.7881 28.877 18.0117 28.9326 cv
18.229 28.9888 18.46 29.0098 18.7046 29.0098 cv
19.0967 29.0098 19.4116 28.9116 19.6426 28.7017 cv
19.8662 28.4917 19.9854 28.2119 19.9854 27.855 cv
19.9854 27.5054 19.8662 27.2251 19.6426 27.0151 cv
19.4116 26.8052 19.0967 26.7002 18.7046 26.7002 cv
18.5229 26.7002 18.334 26.7212 18.1519 26.7632 cv
17.9702 26.8052 17.7813 26.8682 17.5918 26.9521 cv
17.5918 24.3906 li
f
23.5127 24.8457 mo
23.1558 24.8457 22.8901 25.021 22.708 25.3706 cv
22.5259 25.7202 22.4419 26.2451 22.4419 26.9453 cv
22.4419 27.645 22.5259 28.1699 22.708 28.52 cv
22.8901 28.8696 23.1558 29.0449 23.5127 29.0449 cv
23.8696 29.0449 24.1357 28.8696 24.3174 28.52 cv
24.4922 28.1699 24.5835 27.645 24.5835 26.9453 cv
24.5835 26.2451 24.4922 25.7202 24.3174 25.3706 cv
24.1357 25.021 23.8696 24.8457 23.5127 24.8457 cv
23.5127 24.2998 mo
24.0796 24.2998 24.5132 24.5308 24.8213 24.9785 cv
25.1226 25.4336 25.2764 26.0913 25.2764 26.9453 cv
25.2764 27.8057 25.1226 28.4639 24.8213 28.9116 cv
24.5132 29.3599 24.0796 29.5835 23.5127 29.5835 cv
22.939 29.5835 22.498 29.3599 22.1973 28.9116 cv
21.896 28.4639 21.749 27.8057 21.749 26.9453 cv
21.749 26.0913 21.896 25.4336 22.1973 24.9785 cv
22.498 24.5308 22.939 24.2998 23.5127 24.2998 cv
f
26.1064 15.3887 mo
27.4565 15.3887 li
f
26.1064 15.3887 mo
27.4565 15.3887 li
@
171.907 15.3887 mo
170.557 15.3887 li
f
171.907 15.3887 mo
170.557 15.3887 li
@
14.8408 12.8428 mo
13.0981 15.5649 li
14.8408 15.5649 li
14.8408 12.8428 li
14.6587 12.2407 mo
15.5264 12.2407 li
15.5264 15.5649 li
16.2544 15.5649 li
16.2544 16.1392 li
15.5264 16.1392 li
15.5264 17.3423 li
14.8408 17.3423 li
14.8408 16.1392 li
12.5381 16.1392 li
12.5381 15.4741 li
14.6587 12.2407 li
cp
f
18.8721 12.6958 mo
18.5146 12.6958 18.249 12.8706 18.0669 13.2202 cv
17.8848 13.5703 17.8013 14.0952 17.8013 14.7954 cv
17.8013 15.4946 17.8848 16.02 18.0669 16.3701 cv
18.249 16.7197 18.5146 16.895 18.8721 16.895 cv
19.229 16.895 19.4946 16.7197 19.6768 16.3701 cv
19.8516 16.02 19.9429 15.4946 19.9429 14.7954 cv
19.9429 14.0952 19.8516 13.5703 19.6768 13.2202 cv
19.4946 12.8706 19.229 12.6958 18.8721 12.6958 cv
18.8721 12.1499 mo
19.439 12.1499 19.8726 12.3809 20.1802 12.8286 cv
20.4819 13.2837 20.6357 13.9414 20.6357 14.7954 cv
20.6357 15.6558 20.4819 16.314 20.1802 16.7617 cv
19.8726 17.2095 19.439 17.4336 18.8721 17.4336 cv
18.2979 17.4336 17.8569 17.2095 17.5562 16.7617 cv
17.2554 16.314 17.1079 15.6558 17.1079 14.7954 cv
17.1079 13.9414 17.2554 13.2837 17.5562 12.8286 cv
17.8569 12.3809 18.2979 12.1499 18.8721 12.1499 cv
f
23.3228 12.6958 mo
22.9658 12.6958 22.7002 12.8706 22.5181 13.2202 cv
22.3359 13.5703 22.2524 14.0952 22.2524 14.7954 cv
22.2524 15.4946 22.3359 16.02 22.5181 16.3701 cv
22.7002 16.7197 22.9658 16.895 23.3228 16.895 cv
23.6797 16.895 23.9458 16.7197 24.1279 16.3701 cv
24.3027 16.02 24.3936 15.4946 24.3936 14.7954 cv
24.3936 14.0952 24.3027 13.5703 24.1279 13.2202 cv
23.9458 12.8706 23.6797 12.6958 23.3228 12.6958 cv
23.3228 12.1499 mo
23.8896 12.1499 24.3232 12.3809 24.6318 12.8286 cv
24.9326 13.2837 25.0864 13.9414 25.0864 14.7954 cv
25.0864 15.6558 24.9326 16.314 24.6318 16.7617 cv
24.3232 17.2095 23.8896 17.4336 23.3228 17.4336 cv
22.749 17.4336 22.3081 17.2095 22.0073 16.7617 cv
21.7061 16.314 21.5596 15.6558 21.5596 14.7954 cv
21.5596 13.9414 21.7061 13.2837 22.0073 12.8286 cv
22.3081 12.3809 22.749 12.1499 23.3228 12.1499 cv
f
26.1064 3.23877 mo
27.4565 3.23877 li
f
26.1064 3.23877 mo
27.4565 3.23877 li
@
171.907 3.23877 mo
170.557 3.23877 li
f
171.907 3.23877 mo
170.557 3.23877 li
@
14.8408 .692383 mo
13.0981 3.41504 li
14.8408 3.41504 li
14.8408 .692383 li
14.6587 .0908203 mo
15.5264 .0908203 li
15.5264 3.41504 li
16.2544 3.41504 li
16.2544 3.98877 li
15.5264 3.98877 li
15.5264 5.19238 li
14.8408 5.19238 li
14.8408 3.98877 li
12.5381 3.98877 li
12.5381 3.32422 li
14.6587 .0908203 li
cp
f
17.4023 .0908203 mo
20.1108 .0908203 li
20.1108 .671387 li
18.0317 .671387 li
18.0317 1.92432 li
18.1304 1.88916 18.2354 1.86133 18.333 1.84717 cv
18.4307 1.8335 18.5356 1.81934 18.6338 1.81934 cv
19.2007 1.81934 19.6484 1.98047 19.9844 2.28809 cv
20.3203 2.60303 20.4888 3.02295 20.4888 3.55469 cv
20.4888 4.10791 20.3135 4.53467 19.9707 4.83545 cv
19.6274 5.13672 19.1445 5.28369 18.5288 5.28369 cv
18.312 5.28369 18.0952 5.2627 17.8711 5.23486 cv
17.647 5.19971 17.4233 5.15039 17.1851 5.07373 cv
17.1851 4.38086 li
17.3882 4.49268 17.5981 4.57666 17.8223 4.63281 cv
18.0391 4.68896 18.27 4.70996 18.5151 4.70996 cv
18.9067 4.70996 19.2217 4.61182 19.4526 4.40186 cv
19.6768 4.19189 19.7959 3.91211 19.7959 3.55469 cv
19.7959 3.20508 19.6768 2.92529 19.4526 2.71533 cv
19.2217 2.50537 18.9067 2.40039 18.5151 2.40039 cv
18.333 2.40039 18.144 2.42139 17.9619 2.46289 cv
17.7803 2.50537 17.5913 2.56787 17.4023 2.65186 cv
17.4023 .0908203 li
f
23.3228 .54541 mo
22.9658 .54541 22.7002 .720703 22.5181 1.07031 cv
22.3359 1.42041 22.2524 1.94531 22.2524 2.64502 cv
22.2524 3.34473 22.3359 3.87012 22.5181 4.21973 cv
22.7002 4.56982 22.9658 4.74463 23.3228 4.74463 cv
23.6797 4.74463 23.9458 4.56982 24.1279 4.21973 cv
24.3027 3.87012 24.3936 3.34473 24.3936 2.64502 cv
24.3936 1.94531 24.3027 1.42041 24.1279 1.07031 cv
23.9458 .720703 23.6797 .54541 23.3228 .54541 cv
23.3228 0 mo
23.8896 0 24.3232 .230957 24.6318 .678711 cv
24.9326 1.1333 25.0864 1.7915 25.0864 2.64502 cv
25.0864 3.50586 24.9326 4.16406 24.6318 4.61182 cv
24.3232 5.05957 23.8896 5.28369 23.3228 5.28369 cv
22.749 5.28369 22.3081 5.05957 22.0073 4.61182 cv
21.7061 4.16406 21.5596 3.50586 21.5596 2.64502 cv
21.5596 1.7915 21.7061 1.1333 22.0073 .678711 cv
22.3081 .230957 22.749 0 23.3228 0 cv
f
.216797 87.7271 mo
.216797 84.5005 li
.797852 84.5005 li
.797852 87.0342 li
2.30957 87.0342 li
2.30957 84.6055 li
2.89014 84.6055 li
2.89014 87.0342 li
4.73779 87.0342 li
4.73779 84.4375 li
5.31885 84.4375 li
5.31885 87.7271 li
.216797 87.7271 li
cp
f
0 82.7017 mo
5.31885 82.7017 li
5.31885 83.3315 li
0 83.3315 li
0 82.7017 li
cp
f
3.24707 78.1108 mo
3.55518 78.1108 li
3.55518 81.001 li
3.98926 80.9731 4.32471 80.8472 4.54883 80.6094 cv
4.77295 80.3784 4.88477 80.0566 4.88477 79.6367 cv
4.88477 79.3984 4.85693 79.1606 4.80127 78.9365 cv
4.74512 78.7129 4.65381 78.4819 4.52783 78.2583 cv
5.12256 78.2583 li
5.22119 78.4819 5.29785 78.7129 5.33984 78.9507 cv
5.38184 79.189 5.40967 79.4336 5.40967 79.6714 cv
5.40967 80.2871 5.23486 80.7705 4.88477 81.1274 cv
4.53467 81.4839 4.05225 81.6592 3.44336 81.6592 cv
2.82031 81.6592 2.32373 81.4917 1.95264 81.1553 cv
1.58838 80.8193 1.39941 80.3574 1.39941 79.7837 cv
1.39941 79.2656 1.56738 78.8599 1.89648 78.5591 cv
2.23242 78.2651 2.68018 78.1108 3.24707 78.1108 cv
3.06543 78.7407 mo
2.72266 78.748 2.44922 78.8457 2.23975 79.0278 cv
2.03662 79.2168 1.93164 79.4683 1.93164 79.7769 cv
1.93164 80.1265 2.03662 80.4063 2.23242 80.6162 cv
2.42871 80.8262 2.7085 80.9526 3.06543 80.9805 cv
3.06543 78.7407 li
f
2.22559 74.1011 mo
1.94531 73.9468 1.74268 73.7578 1.60254 73.541 cv
1.46973 73.3242 1.3999 73.0649 1.3999 72.7642 cv
1.3999 72.3721 1.53955 72.0645 1.81934 71.8477 cv
2.09912 71.6304 2.49854 71.5186 3.00928 71.5186 cv
5.31885 71.5186 li
5.31885 72.1484 li
3.03027 72.1484 li
2.6665 72.1484 2.39355 72.2183 2.21143 72.3442 cv
2.03662 72.4771 1.94531 72.6733 1.94531 72.9395 cv
1.94531 73.2681 2.05762 73.5273 2.27441 73.7158 cv
2.4917 73.9048 2.78564 73.9956 3.15625 73.9956 cv
5.31885 73.9956 li
5.31885 74.6255 li
3.03027 74.6255 li
2.6665 74.6255 2.39355 74.6958 2.21143 74.8218 cv
2.03662 74.9546 1.94531 75.1577 1.94531 75.4233 cv
1.94531 75.7456 2.05762 76.0044 2.27441 76.1934 cv
2.4917 76.3823 2.78564 76.4731 3.15625 76.4731 cv
5.31885 76.4731 li
5.31885 77.1035 li
1.49072 77.1035 li
1.49072 76.4731 li
2.08545 76.4731 li
1.85449 76.333 1.67969 76.1582 1.56787 75.9556 cv
1.45557 75.7593 1.3999 75.5215 1.3999 75.2417 cv
1.3999 74.9619 1.46973 74.731 1.60938 74.5347 cv
1.74951 74.3389 1.95947 74.1987 2.22559 74.1011 cv
f
3.24707 66.9902 mo
3.55518 66.9902 li
3.55518 69.8809 li
3.98926 69.8525 4.32471 69.7271 4.54883 69.4888 cv
4.77295 69.2583 4.88477 68.936 4.88477 68.5161 cv
4.88477 68.2778 4.85693 68.04 4.80127 67.8164 cv
4.74512 67.5923 4.65381 67.3618 4.52783 67.1377 cv
5.12256 67.1377 li
5.22119 67.3618 5.29785 67.5923 5.33984 67.8301 cv
5.38184 68.0679 5.40967 68.3135 5.40967 68.5508 cv
5.40967 69.167 5.23486 69.6499 4.88477 70.0068 cv
4.53467 70.3638 4.05225 70.5386 3.44336 70.5386 cv
2.82031 70.5386 2.32373 70.3706 1.95264 70.0352 cv
1.58838 69.6987 1.39941 69.2368 1.39941 68.6631 cv
1.39941 68.145 1.56738 67.7393 1.89648 67.438 cv
2.23242 67.1445 2.68018 66.9902 3.24707 66.9902 cv
3.06543 67.6201 mo
2.72266 67.6274 2.44922 67.7256 2.23975 67.9072 cv
2.03662 68.0962 1.93164 68.3481 1.93164 68.6563 cv
1.93164 69.0063 2.03662 69.2861 2.23242 69.4961 cv
2.42871 69.7061 2.7085 69.8315 3.06543 69.8599 cv
3.06543 67.6201 li
f
3.00928 62.7773 mo
5.31885 62.7773 li
5.31885 63.4072 li
3.03027 63.4072 li
2.6665 63.4072 2.40039 63.4844 2.21875 63.6245 cv
2.03662 63.7642 1.94531 63.9741 1.94531 64.2539 cv
1.94531 64.5972 2.05762 64.8628 2.27441 65.0591 cv
2.49121 65.2549 2.78516 65.353 3.15625 65.353 cv
5.31885 65.353 li
5.31885 65.9829 li
1.49072 65.9829 li
1.49072 65.353 li
2.08545 65.353 li
1.86133 65.2061 1.68652 65.0308 1.57471 64.8213 cv
1.4624 64.6177 1.39941 64.3799 1.39941 64.1143 cv
1.39941 63.6802 1.54004 63.3447 1.8125 63.1206 cv
2.08545 62.8965 2.48438 62.7773 3.00928 62.7773 cv
f
.405762 60.9019 mo
1.49072 60.9019 li
1.49072 59.6069 li
1.98047 59.6069 li
1.98047 60.9019 li
4.05908 60.9019 li
4.37402 60.9019 4.57715 60.8599 4.66064 60.7759 cv
4.75195 60.6919 4.79395 60.5166 4.79395 60.251 cv
4.79395 59.6069 li
5.31885 59.6069 li
5.31885 60.251 li
5.31885 60.7407 5.22754 61.0771 5.0459 61.2588 cv
4.86377 61.4409 4.53467 61.5317 4.05908 61.5317 cv
1.98047 61.5317 li
1.98047 61.9932 li
1.49072 61.9932 li
1.49072 61.5317 li
.405762 61.5317 li
.405762 60.9019 li
f
3.39404 57.0386 mo
3.39404 57.5498 3.45752 57.8994 3.56934 58.0952 cv
3.68848 58.2915 3.88379 58.3892 4.16406 58.3892 cv
4.3877 58.3892 4.56982 58.3193 4.6958 58.1724 cv
4.82861 58.0254 4.89209 57.8223 4.89209 57.5708 cv
4.89209 57.2207 4.77295 56.9404 4.521 56.7305 cv
4.27637 56.5205 3.94727 56.4155 3.53418 56.4155 cv
3.39404 56.4155 li
3.39404 57.0386 li
3.13525 55.7861 mo
5.31885 55.7861 li
5.31885 56.4155 li
4.73779 56.4155 li
4.97559 56.563 5.14404 56.7446 5.24902 56.9546 cv
5.354 57.1646 5.40967 57.4307 5.40967 57.7388 cv
5.40967 58.1304 5.30469 58.4453 5.08789 58.6763 cv
4.87061 58.9077 4.57666 59.019 4.20605 59.019 cv
3.77881 59.019 3.45752 58.8794 3.2334 58.5854 cv
3.01611 58.2983 2.9043 57.8716 2.9043 57.2974 cv
2.9043 56.4155 li
2.84131 56.4155 li
2.55469 56.4155 2.33057 56.5142 2.16943 56.7031 cv
2.01563 56.8916 1.93164 57.1577 1.93164 57.501 cv
1.93164 57.7246 1.95947 57.9346 2.01563 58.1445 cv
2.07178 58.3545 2.14844 58.5503 2.24658 58.7393 cv
1.66553 58.7393 li
1.58154 58.5151 1.51172 58.2915 1.46973 58.0747 cv
1.42773 57.8574 1.39941 57.6475 1.39941 57.4375 cv
1.39941 56.8848 1.54639 56.4717 1.8335 56.1992 cv
2.12061 55.9263 2.55469 55.7861 3.13525 55.7861 cv
f
2.07861 52.2729 mo
2.03613 52.3428 2.0083 52.4199 1.9873 52.5039 cv
1.97363 52.5874 1.95947 52.6787 1.95947 52.7769 cv
1.95947 53.1338 2.07861 53.4063 2.30957 53.5952 cv
2.54053 53.7915 2.86914 53.8823 3.30322 53.8823 cv
5.31885 53.8823 li
5.31885 54.5122 li
1.49072 54.5122 li
1.49072 53.8823 li
2.08545 53.8823 li
1.85449 53.7563 1.67969 53.5815 1.56738 53.3716 cv
1.45557 53.1616 1.39941 52.9028 1.39941 52.5947 cv
1.39941 52.5527 1.40674 52.5039 1.40674 52.4478 cv
1.41357 52.3989 1.4209 52.3428 1.43457 52.2729 cv
2.07861 52.2729 li
f
5.66895 50.019 mo
6.1167 50.2012 6.41748 50.3765 6.55762 50.5439 cv
6.69727 50.7124 6.76758 50.936 6.76758 51.2163 cv
6.76758 51.7202 li
6.24268 51.7202 li
6.24268 51.3491 li
6.24268 51.1812 6.20068 51.0479 6.1167 50.9502 cv
6.03271 50.8521 5.84375 50.7476 5.53564 50.6284 cv
5.25586 50.5161 li
1.49072 52.063 li
1.49072 51.3979 li
4.48633 50.2012 li
1.49072 49.0044 li
1.49072 48.3394 li
5.66895 50.019 li
f
1.60254 42.8042 mo
2.19775 42.8042 li
2.11377 42.9858 2.04346 43.168 1.99463 43.3569 cv
1.95264 43.5532 1.9248 43.7485 1.9248 43.9517 cv
1.9248 44.2666 1.97363 44.5049 2.07129 44.6587 cv
2.16943 44.8125 2.30957 44.8896 2.49854 44.8896 cv
2.64551 44.8896 2.75732 44.8335 2.84131 44.7217 cv
2.92529 44.6099 3.00928 44.3857 3.0791 44.0498 cv
3.12842 43.833 li
3.22656 43.3848 3.36621 43.0698 3.53418 42.8809 cv
3.70947 42.6992 3.9541 42.6011 4.26221 42.6011 cv
4.61865 42.6011 4.89893 42.7407 5.10205 43.021 cv
5.31152 43.3008 5.40967 43.6929 5.40967 44.1826 cv
5.40967 44.3926 5.38867 44.6025 5.354 44.8267 cv
5.31885 45.0503 5.2627 45.2813 5.17871 45.5264 cv
4.52783 45.5264 li
4.65381 45.2954 4.74512 45.0649 4.80127 44.8403 cv
4.86377 44.6167 4.89209 44.3926 4.89209 44.1685 cv
4.89209 43.8745 4.84277 43.644 4.74512 43.4829 cv
4.64697 43.3291 4.5 43.2446 4.31104 43.2446 cv
4.14307 43.2446 4.00977 43.3081 3.91943 43.4199 cv
3.82813 43.5317 3.7373 43.7837 3.65332 44.1758 cv
3.60449 44.3926 li
3.52051 44.7847 3.39453 45.0713 3.22656 45.2397 cv
3.05811 45.4146 2.82764 45.4985 2.52637 45.4985 cv
2.16943 45.4985 1.88965 45.3726 1.69385 45.1206 cv
1.49756 44.8687 1.39941 44.5049 1.39941 44.0288 cv
1.39941 43.7979 1.4209 43.5811 1.45557 43.3711 cv
1.49072 43.168 1.53955 42.979 1.60254 42.8042 cv
f
.405762 40.9775 mo
1.49072 40.9775 li
1.49072 39.6831 li
1.98047 39.6831 li
1.98047 40.9775 li
4.05908 40.9775 li
4.37402 40.9775 4.57715 40.9351 4.66064 40.8516 cv
4.75195 40.7676 4.79395 40.5923 4.79395 40.3267 cv
4.79395 39.6831 li
5.31885 39.6831 li
5.31885 40.3267 li
5.31885 40.8164 5.22754 41.1528 5.0459 41.3345 cv
4.86377 41.5166 4.53467 41.6074 4.05908 41.6074 cv
1.98047 41.6074 li
1.98047 42.0693 li
1.49072 42.0693 li
1.49072 41.6074 li
.405762 41.6074 li
.405762 40.9775 li
f
3.24707 35.5815 mo
3.55518 35.5815 li
3.55518 38.4722 li
3.98926 38.4438 4.32471 38.3179 4.54883 38.0801 cv
4.77295 37.8491 4.88477 37.5273 4.88477 37.1074 cv
4.88477 36.8691 4.85693 36.6313 4.80127 36.4077 cv
4.74512 36.1836 4.65381 35.9526 4.52783 35.729 cv
5.12256 35.729 li
5.22119 35.9526 5.29785 36.1836 5.33984 36.4214 cv
5.38184 36.6597 5.40967 36.9043 5.40967 37.1426 cv
5.40967 37.7583 5.23486 38.2407 4.88477 38.5981 cv
4.53467 38.9551 4.05225 39.1299 3.44336 39.1299 cv
2.82031 39.1299 2.32373 38.9619 1.95264 38.626 cv
1.58838 38.29 1.39941 37.8281 1.39941 37.2544 cv
1.39941 36.7363 1.56738 36.3306 1.89648 36.0298 cv
2.23242 35.7358 2.68018 35.5815 3.24707 35.5815 cv
3.06543 36.2114 mo
2.72266 36.2188 2.44922 36.3164 2.23975 36.4985 cv
2.03662 36.6875 1.93164 36.939 1.93164 37.2476 cv
1.93164 37.5972 2.03662 37.877 2.23242 38.0869 cv
2.42871 38.2969 2.7085 38.4233 3.06543 38.4507 cv
3.06543 36.2114 li
f
4.74512 33.9438 mo
6.76758 33.9438 li
6.76758 34.5737 li
1.49072 34.5737 li
1.49072 33.9438 li
2.07178 33.9438 li
1.84766 33.8184 1.67969 33.6499 1.56787 33.4473 cv
1.45557 33.2441 1.39941 32.9995 1.39941 32.7192 cv
1.39941 32.2573 1.58887 31.8794 1.95264 31.5854 cv
2.32324 31.2988 2.80615 31.1519 3.40869 31.1519 cv
4.01025 31.1519 4.5 31.2988 4.86426 31.5854 cv
5.22803 31.8794 5.40967 32.2573 5.40967 32.7192 cv
5.40967 32.9995 5.354 33.2441 5.24902 33.4473 cv
5.14404 33.6499 4.97559 33.8184 4.74512 33.9438 cv
3.40869 31.8027 mo
2.94629 31.8027 2.58936 31.9004 2.32324 32.0894 cv
2.05762 32.2852 1.9248 32.5444 1.9248 32.8735 cv
1.9248 33.2095 2.05762 33.4683 2.32324 33.6572 cv
2.58936 33.853 2.94629 33.9438 3.40869 33.9438 cv
3.87012 33.9438 4.23389 33.853 4.5 33.6572 cv
4.76611 33.4683 4.89209 33.2095 4.89209 32.8735 cv
4.89209 32.5444 4.76611 32.2852 4.5 32.0894 cv
4.23389 31.9004 3.87012 31.8027 3.40869 31.8027 cv
f
1.60254 27.6665 mo
2.19775 27.6665 li
2.11377 27.8486 2.04346 28.0308 1.99463 28.2192 cv
1.95264 28.4155 1.9248 28.6113 1.9248 28.8145 cv
1.9248 29.1294 1.97363 29.3672 2.07129 29.521 cv
2.16943 29.6748 2.30957 29.752 2.49854 29.752 cv
2.64551 29.752 2.75732 29.6963 2.84131 29.5845 cv
2.92529 29.4722 3.00928 29.2485 3.0791 28.9121 cv
3.12842 28.6953 li
3.22656 28.2476 3.36621 27.9326 3.53418 27.7437 cv
3.70947 27.5615 3.9541 27.4639 4.26221 27.4639 cv
4.61865 27.4639 4.89893 27.6035 5.10205 27.8833 cv
5.31152 28.1636 5.40967 28.5557 5.40967 29.0454 cv
5.40967 29.2554 5.38867 29.4653 5.354 29.689 cv
5.31885 29.9131 5.2627 30.144 5.17871 30.3887 cv
4.52783 30.3887 li
4.65381 30.1577 4.74512 29.9272 4.80127 29.7031 cv
4.86377 29.479 4.89209 29.2554 4.89209 29.0313 cv
4.89209 28.7373 4.84277 28.5063 4.74512 28.3457 cv
4.64697 28.1914 4.5 28.1079 4.31104 28.1079 cv
4.14307 28.1079 4.00977 28.1704 3.91943 28.2827 cv
3.82813 28.3945 3.7373 28.6465 3.65332 29.0381 cv
3.60449 29.2554 li
3.52051 29.6475 3.39453 29.9341 3.22656 30.1021 cv
3.05811 30.2769 2.82764 30.3608 2.52637 30.3608 cv
2.16943 30.3608 1.88965 30.2349 1.69385 29.9829 cv
1.49756 29.731 1.39941 29.3672 1.39941 28.8911 cv
1.39941 28.6606 1.4209 28.4434 1.45557 28.2334 cv
1.49072 28.0308 1.53955 27.8418 1.60254 27.6665 cv
f
.3375 lw
171.907 112.589 mo
171.907 3.23877 li
@
26.1064 112.589 mo
171.907 112.589 li
@
26.1064 112.589 mo
26.1064 3.23877 li
@
26.1064 3.23877 mo
171.907 3.23877 li
@
90.772 150.639 mo
90.772 150.606 90.772 150.584 90.5859 150.398 cv
89.2158 149.017 88.8652 146.946 88.8652 145.269 cv
88.8652 143.362 89.2817 141.456 90.6294 140.085 cv
90.772 139.954 90.772 139.932 90.772 139.899 cv
90.772 139.822 90.728 139.79 90.6626 139.79 cv
90.5527 139.79 89.5664 140.535 88.9199 141.926 cv
88.3613 143.132 88.2295 144.349 88.2295 145.269 cv
88.2295 146.124 88.3501 147.45 88.9531 148.688 cv
89.6104 150.036 90.5527 150.749 90.6626 150.749 cv
90.728 150.749 90.772 150.715 90.772 150.639 cv
cp
f
95.0557 147.176 mo
95.0996 147.614 95.3955 148.075 95.9106 148.075 cv
96.1406 148.075 96.8096 147.921 96.8096 147.033 cv
96.8096 146.419 li
96.5352 146.419 li
96.5352 147.033 li
96.5352 147.669 96.2612 147.735 96.1406 147.735 cv
95.7793 147.735 95.7354 147.242 95.7354 147.187 cv
95.7354 144.995 li
95.7354 144.535 95.7354 144.107 95.3408 143.702 cv
94.9136 143.274 94.3657 143.099 93.8394 143.099 cv
92.9409 143.099 92.1846 143.614 92.1846 144.337 cv
92.1846 144.667 92.4038 144.853 92.689 144.853 cv
92.9956 144.853 93.1929 144.633 93.1929 144.349 cv
93.1929 144.217 93.1382 143.855 92.6338 143.844 cv
92.9297 143.461 93.4668 143.34 93.8174 143.34 cv
94.3545 143.34 94.979 143.768 94.979 144.743 cv
94.979 145.148 li
94.4204 145.181 93.6533 145.214 92.9629 145.543 cv
92.1406 145.916 91.8667 146.485 91.8667 146.968 cv
91.8667 147.847 92.9297 148.118 93.6201 148.118 cv
94.3438 148.118 94.8477 147.685 95.0557 147.176 cv
cp
94.979 145.378 mo
94.979 146.475 li
94.979 147.516 94.1899 147.888 93.6968 147.888 cv
93.1602 147.888 92.7109 147.504 92.7109 146.957 cv
92.7109 146.354 93.1709 145.444 94.979 145.378 cv
cp
f
100.053 145.269 mo
100.053 144.414 99.9326 143.088 99.3301 141.85 cv
98.6724 140.502 97.73 139.79 97.6201 139.79 cv
97.5547 139.79 97.5107 139.833 97.5107 139.899 cv
97.5107 139.932 97.5107 139.954 97.7188 140.151 cv
98.793 141.236 99.4175 142.979 99.4175 145.269 cv
99.4175 147.143 99.0122 149.072 97.6533 150.453 cv
97.5107 150.584 97.5107 150.606 97.5107 150.639 cv
97.5107 150.705 97.5547 150.749 97.6201 150.749 cv
97.73 150.749 98.7163 150.003 99.3628 148.611 cv
99.9219 147.406 100.053 146.189 100.053 145.269 cv
cp
f
236.262 112.589 mo
372.342 112.589 li
372.342 3.23877 li
236.262 3.23877 li
236.262 112.589 li
cp
0 0 0 0 cmyk
f
gsave
236.262 112.589 mo
372.342 112.589 li
372.342 3.23877 li
236.262 3.23877 li
236.262 112.589 li
cp
clp
2 lc
236.262 112.586 mo
372.342 112.103 li
0 .994 1 0 cmyk
@
236.262 112.577 mo
238.997 112.499 li
241.732 112.343 li
244.468 112.11 li
247.203 111.799 li
249.938 111.41 li
252.674 110.943 li
255.408 110.399 li
258.144 109.777 li
260.879 109.078 li
263.614 108.3 li
266.35 107.445 li
269.085 106.511 li
271.82 105.5 li
274.556 104.412 li
277.291 103.246 li
280.026 102.001 li
282.762 100.679 li
285.497 99.2798 li
288.232 97.8022 li
290.967 96.2471 li
293.702 94.6138 li
296.438 92.9033 li
299.173 91.1147 li
301.908 89.2485 li
304.644 87.3047 li
307.379 85.2832 li
310.114 83.1836 li
312.85 81.0063 li
315.585 78.751 li
319.004 75.8228 li
322.423 72.7729 li
325.842 69.6021 li
329.261 66.3096 li
332.681 62.895 li
336.099 59.3599 li
339.519 55.7026 li
342.938 51.9238 li
346.356 48.0239 li
349.775 44.002 li
353.194 39.8589 li
356.614 35.5942 li
360.033 31.208 li
363.452 26.7007 li
366.871 22.0713 li
370.29 17.3208 li
372.342 14.4121 li
.884 .769 0 0 cmyk
@
236.262 112.586 mo
238.997 112.528 li
241.732 112.392 li
244.468 112.178 li
247.203 111.887 li
249.938 111.517 li
252.674 111.07 li
255.408 110.545 li
258.144 109.942 li
260.879 109.262 li
263.614 108.504 li
266.35 107.668 li
269.085 106.754 li
271.82 105.763 li
274.556 104.694 li
277.291 103.547 li
280.026 102.322 li
282.762 101.02 li
285.497 99.6392 li
288.232 98.1812 li
290.967 96.6455 li
293.702 95.0317 li
296.438 93.3408 li
299.173 91.5713 li
301.908 89.7251 li
304.644 87.8003 li
307.379 85.7983 li
310.114 83.7183 li
312.85 81.5601 li
315.585 79.3247 li
319.004 76.4209 li
322.423 73.3955 li
325.842 70.2485 li
329.261 66.98 li
332.681 63.5903 li
336.099 60.0791 li
339.519 56.4463 li
342.938 52.6919 li
346.356 48.8159 li
349.775 44.8184 li
353.194 40.6997 li
356.614 36.4595 li
360.033 32.0977 li
363.452 27.6143 li
366.871 23.0093 li
370.29 18.2827 li
372.342 15.3887 li
.873 .242 1 .129 cmyk
@
grestore
269.769 112.589 mo
269.769 111.239 li
269.769 112.589 li
cp
0 0 0 1 cmyk
f
.16875 lw
269.769 112.589 mo
269.769 111.239 li
@
269.769 4.58887 mo
269.769 3.23877 li
269.769 4.58887 li
cp
f
269.769 3.23877 mo
269.769 4.58887 li
@
266.572 114.221 mo
269.28 114.221 li
269.28 114.802 li
267.202 114.802 li
267.202 116.055 li
267.3 116.02 267.405 115.992 267.503 115.978 cv
267.601 115.964 267.706 115.95 267.804 115.95 cv
268.371 115.95 268.818 116.111 269.154 116.418 cv
269.49 116.733 269.658 117.153 269.658 117.686 cv
269.658 118.238 269.483 118.665 269.141 118.966 cv
268.798 119.267 268.315 119.414 267.699 119.414 cv
267.482 119.414 267.265 119.393 267.041 119.365 cv
266.817 119.33 266.594 119.281 266.355 119.204 cv
266.355 118.511 li
266.558 118.623 266.769 118.707 266.992 118.763 cv
267.209 118.819 267.439 118.84 267.685 118.84 cv
268.077 118.84 268.392 118.742 268.623 118.532 cv
268.847 118.322 268.966 118.042 268.966 117.686 cv
268.966 117.335 268.847 117.055 268.623 116.845 cv
268.392 116.635 268.077 116.531 267.685 116.531 cv
267.503 116.531 267.313 116.551 267.132 116.594 cv
266.95 116.635 266.761 116.699 266.572 116.783 cv
266.572 114.221 li
f
272.493 114.676 mo
272.136 114.676 271.87 114.851 271.688 115.201 cv
271.506 115.551 271.422 116.075 271.422 116.776 cv
271.422 117.475 271.506 118 271.688 118.35 cv
271.87 118.7 272.136 118.875 272.493 118.875 cv
272.85 118.875 273.115 118.7 273.298 118.35 cv
273.473 118 273.563 117.475 273.563 116.776 cv
273.563 116.075 273.473 115.551 273.298 115.201 cv
273.115 114.851 272.85 114.676 272.493 114.676 cv
272.493 114.13 mo
273.06 114.13 273.493 114.361 273.802 114.809 cv
274.103 115.264 274.257 115.921 274.257 116.776 cv
274.257 117.636 274.103 118.294 273.802 118.742 cv
273.493 119.19 273.06 119.414 272.493 119.414 cv
271.919 119.414 271.479 119.19 271.178 118.742 cv
270.876 118.294 270.729 117.636 270.729 116.776 cv
270.729 115.921 270.876 115.264 271.178 114.809 cv
271.479 114.361 271.919 114.13 272.493 114.13 cv
f
303.96 112.589 mo
303.96 111.239 li
f
303.96 112.589 mo
303.96 111.239 li
@
303.96 3.23877 mo
303.96 4.58887 li
f
303.96 3.23877 mo
303.96 4.58887 li
@
298.761 118.742 mo
299.887 118.742 li
299.887 114.851 li
298.663 115.096 li
298.663 114.466 li
299.88 114.221 li
300.573 114.221 li
300.573 118.742 li
301.7 118.742 li
301.7 119.323 li
298.761 119.323 li
298.761 118.742 li
cp
f
304.569 114.676 mo
304.212 114.676 303.946 114.851 303.765 115.201 cv
303.582 115.551 303.498 116.075 303.498 116.776 cv
303.498 117.475 303.582 118 303.765 118.35 cv
303.946 118.7 304.212 118.875 304.569 118.875 cv
304.927 118.875 305.192 118.7 305.374 118.35 cv
305.549 118 305.64 117.475 305.64 116.776 cv
305.64 116.075 305.549 115.551 305.374 115.201 cv
305.192 114.851 304.927 114.676 304.569 114.676 cv
304.569 114.13 mo
305.137 114.13 305.57 114.361 305.878 114.809 cv
306.179 115.264 306.333 115.921 306.333 116.776 cv
306.333 117.636 306.179 118.294 305.878 118.742 cv
305.57 119.19 305.137 119.414 304.569 119.414 cv
303.995 119.414 303.555 119.19 303.254 118.742 cv
302.952 118.294 302.806 117.636 302.806 116.776 cv
302.806 115.921 302.952 115.264 303.254 114.809 cv
303.555 114.361 303.995 114.13 304.569 114.13 cv
f
309.021 114.676 mo
308.663 114.676 308.397 114.851 308.216 115.201 cv
308.033 115.551 307.949 116.075 307.949 116.776 cv
307.949 117.475 308.033 118 308.216 118.35 cv
308.397 118.7 308.663 118.875 309.021 118.875 cv
309.377 118.875 309.644 118.7 309.825 118.35 cv
310 118 310.091 117.475 310.091 116.776 cv
310.091 116.075 310 115.551 309.825 115.201 cv
309.644 114.851 309.377 114.676 309.021 114.676 cv
309.021 114.13 mo
309.587 114.13 310.021 114.361 310.329 114.809 cv
310.63 115.264 310.784 115.921 310.784 116.776 cv
310.784 117.636 310.63 118.294 310.329 118.742 cv
310.021 119.19 309.587 119.414 309.021 119.414 cv
308.446 119.414 308.006 119.19 307.704 118.742 cv
307.403 118.294 307.256 117.636 307.256 116.776 cv
307.256 115.921 307.403 115.264 307.704 114.809 cv
308.006 114.361 308.446 114.13 309.021 114.13 cv
f
338.15 112.589 mo
338.15 111.239 li
f
338.15 112.589 mo
338.15 111.239 li
@
338.15 3.23877 mo
338.15 4.58887 li
f
338.15 3.23877 mo
338.15 4.58887 li
@
332.951 118.742 mo
334.078 118.742 li
334.078 114.851 li
332.854 115.096 li
332.854 114.466 li
334.071 114.221 li
334.764 114.221 li
334.764 118.742 li
335.891 118.742 li
335.891 119.323 li
332.951 119.323 li
332.951 118.742 li
cp
f
337.291 114.221 mo
339.999 114.221 li
339.999 114.802 li
337.92 114.802 li
337.92 116.055 li
338.019 116.02 338.123 115.992 338.222 115.978 cv
338.319 115.964 338.424 115.95 338.522 115.95 cv
339.089 115.95 339.537 116.111 339.873 116.418 cv
340.209 116.733 340.377 117.153 340.377 117.686 cv
340.377 118.238 340.202 118.665 339.858 118.966 cv
339.516 119.267 339.033 119.414 338.417 119.414 cv
338.2 119.414 337.983 119.393 337.76 119.365 cv
337.535 119.33 337.312 119.281 337.073 119.204 cv
337.073 118.511 li
337.276 118.623 337.486 118.707 337.71 118.763 cv
337.928 118.819 338.158 118.84 338.403 118.84 cv
338.795 118.84 339.11 118.742 339.341 118.532 cv
339.565 118.322 339.685 118.042 339.685 117.686 cv
339.685 117.335 339.565 117.055 339.341 116.845 cv
339.11 116.635 338.795 116.531 338.403 116.531 cv
338.222 116.531 338.032 116.551 337.851 116.594 cv
337.668 116.635 337.479 116.699 337.291 116.783 cv
337.291 114.221 li
f
343.211 114.676 mo
342.854 114.676 342.588 114.851 342.406 115.201 cv
342.225 115.551 342.141 116.075 342.141 116.776 cv
342.141 117.475 342.225 118 342.406 118.35 cv
342.588 118.7 342.854 118.875 343.211 118.875 cv
343.568 118.875 343.834 118.7 344.016 118.35 cv
344.19 118 344.282 117.475 344.282 116.776 cv
344.282 116.075 344.19 115.551 344.016 115.201 cv
343.834 114.851 343.568 114.676 343.211 114.676 cv
343.211 114.13 mo
343.778 114.13 344.212 114.361 344.52 114.809 cv
344.821 115.264 344.975 115.921 344.975 116.776 cv
344.975 117.636 344.821 118.294 344.52 118.742 cv
344.212 119.19 343.778 119.414 343.211 119.414 cv
342.638 119.414 342.196 119.19 341.896 118.742 cv
341.595 118.294 341.447 117.636 341.447 116.776 cv
341.447 115.921 341.595 115.264 341.896 114.809 cv
342.196 114.361 342.638 114.13 343.211 114.13 cv
f
372.342 112.589 mo
372.342 111.239 li
f
372.342 112.589 mo
372.342 111.239 li
@
372.342 3.23877 mo
372.342 4.58887 li
f
372.342 3.23877 mo
372.342 4.58887 li
@
367.489 118.742 mo
369.896 118.742 li
369.896 119.323 li
366.656 119.323 li
366.656 118.742 li
366.915 118.476 367.271 118.112 367.727 117.65 cv
368.175 117.195 368.462 116.901 368.581 116.769 cv
368.805 116.523 368.959 116.313 369.043 116.138 cv
369.127 115.971 369.176 115.796 369.176 115.627 cv
369.176 115.362 369.077 115.138 368.889 114.97 cv
368.7 114.802 368.455 114.711 368.146 114.711 cv
367.93 114.711 367.699 114.753 367.461 114.823 cv
367.224 114.9 366.964 115.012 366.691 115.166 cv
366.691 114.466 li
366.972 114.354 367.23 114.27 367.468 114.214 cv
367.706 114.158 367.93 114.13 368.133 114.13 cv
368.657 114.13 369.077 114.263 369.393 114.529 cv
369.708 114.795 369.868 115.145 369.868 115.585 cv
369.868 115.796 369.826 115.999 369.749 116.181 cv
369.673 116.37 369.533 116.594 369.323 116.846 cv
369.267 116.916 369.085 117.104 368.776 117.419 cv
368.469 117.734 368.042 118.175 367.489 118.742 cv
f
372.822 114.676 mo
372.465 114.676 372.199 114.851 372.017 115.201 cv
371.835 115.551 371.751 116.075 371.751 116.776 cv
371.751 117.475 371.835 118 372.017 118.35 cv
372.199 118.7 372.465 118.875 372.822 118.875 cv
373.179 118.875 373.444 118.7 373.627 118.35 cv
373.802 118 373.893 117.475 373.893 116.776 cv
373.893 116.075 373.802 115.551 373.627 115.201 cv
373.444 114.851 373.179 114.676 372.822 114.676 cv
372.822 114.13 mo
373.389 114.13 373.822 114.361 374.131 114.809 cv
374.432 115.264 374.585 115.921 374.585 116.776 cv
374.585 117.636 374.432 118.294 374.131 118.742 cv
373.822 119.19 373.389 119.414 372.822 119.414 cv
372.248 119.414 371.808 119.19 371.507 118.742 cv
371.205 118.294 371.059 117.636 371.059 116.776 cv
371.059 115.921 371.205 115.264 371.507 114.809 cv
371.808 114.361 372.248 114.13 372.822 114.13 cv
f
377.272 114.676 mo
376.916 114.676 376.649 114.851 376.468 115.201 cv
376.286 115.551 376.202 116.075 376.202 116.776 cv
376.202 117.475 376.286 118 376.468 118.35 cv
376.649 118.7 376.916 118.875 377.272 118.875 cv
377.63 118.875 377.896 118.7 378.078 118.35 cv
378.253 118 378.344 117.475 378.344 116.776 cv
378.344 116.075 378.253 115.551 378.078 115.201 cv
377.896 114.851 377.63 114.676 377.272 114.676 cv
377.272 114.13 mo
377.84 114.13 378.273 114.361 378.582 114.809 cv
378.883 115.264 379.036 115.921 379.036 116.776 cv
379.036 117.636 378.883 118.294 378.582 118.742 cv
378.273 119.19 377.84 119.414 377.272 119.414 cv
376.699 119.414 376.258 119.19 375.957 118.742 cv
375.656 118.294 375.509 117.636 375.509 116.776 cv
375.509 115.921 375.656 115.264 375.957 114.809 cv
376.258 114.361 376.699 114.13 377.272 114.13 cv
f
282.037 126.481 mo
282.73 126.481 li
282.73 131.583 li
282.037 131.583 li
282.037 126.481 li
cp
f
287.259 129.274 mo
287.259 131.584 li
286.63 131.584 li
286.63 129.295 li
286.63 128.931 286.553 128.665 286.412 128.483 cv
286.272 128.301 286.063 128.21 285.782 128.21 cv
285.439 128.21 285.174 128.323 284.978 128.539 cv
284.782 128.756 284.684 129.05 284.684 129.421 cv
284.684 131.584 li
284.054 131.584 li
284.054 127.755 li
284.684 127.755 li
284.684 128.351 li
284.831 128.126 285.006 127.952 285.216 127.839 cv
285.419 127.728 285.656 127.665 285.923 127.665 cv
286.356 127.665 286.692 127.805 286.916 128.078 cv
287.14 128.351 287.259 128.749 287.259 129.274 cv
f
289.122 131.01 mo
289.122 133.032 li
288.492 133.032 li
288.492 127.755 li
289.122 127.755 li
289.122 128.336 li
289.248 128.112 289.416 127.944 289.619 127.833 cv
289.822 127.721 290.067 127.665 290.347 127.665 cv
290.809 127.665 291.187 127.853 291.48 128.217 cv
291.768 128.588 291.915 129.071 291.915 129.673 cv
291.915 130.275 291.768 130.765 291.48 131.129 cv
291.187 131.493 290.809 131.675 290.347 131.675 cv
290.067 131.675 289.822 131.619 289.619 131.513 cv
289.416 131.409 289.248 131.241 289.122 131.01 cv
291.264 129.673 mo
291.264 129.211 291.166 128.854 290.977 128.588 cv
290.781 128.322 290.521 128.189 290.193 128.189 cv
289.856 128.189 289.598 128.322 289.409 128.588 cv
289.213 128.854 289.122 129.211 289.122 129.673 cv
289.122 130.135 289.213 130.499 289.409 130.765 cv
289.598 131.031 289.856 131.157 290.193 131.157 cv
290.521 131.157 290.781 131.031 290.977 130.765 cv
291.166 130.499 291.264 130.135 291.264 129.673 cv
f
292.896 130.072 mo
292.896 127.756 li
293.525 127.756 li
293.525 130.051 li
293.525 130.415 293.596 130.681 293.735 130.863 cv
293.876 131.045 294.086 131.136 294.372 131.136 cv
294.708 131.136 294.981 131.031 295.178 130.814 cv
295.373 130.597 295.472 130.303 295.472 129.925 cv
295.472 127.756 li
296.101 127.756 li
296.101 131.583 li
295.472 131.583 li
295.472 130.996 li
295.317 131.233 295.136 131.402 294.939 131.513 cv
294.736 131.619 294.505 131.675 294.239 131.675 cv
293.799 131.675 293.463 131.542 293.238 131.269 cv
293.008 131.003 292.896 130.604 292.896 130.072 cv
f
298.02 126.671 mo
298.02 127.755 li
299.315 127.755 li
299.315 128.245 li
298.02 128.245 li
298.02 130.324 li
298.02 130.639 298.063 130.842 298.146 130.926 cv
298.229 131.017 298.405 131.059 298.671 131.059 cv
299.315 131.059 li
299.315 131.584 li
298.671 131.584 li
298.182 131.584 297.845 131.493 297.663 131.311 cv
297.481 131.129 297.391 130.8 297.391 130.324 cv
297.391 128.245 li
296.929 128.245 li
296.929 127.755 li
297.391 127.755 li
297.391 126.671 li
298.02 126.671 li
f
304.812 127.868 mo
304.812 128.462 li
304.63 128.378 304.447 128.308 304.259 128.259 cv
304.063 128.217 303.867 128.189 303.664 128.189 cv
303.349 128.189 303.111 128.239 302.957 128.336 cv
302.803 128.435 302.726 128.574 302.726 128.763 cv
302.726 128.911 302.782 129.022 302.894 129.106 cv
303.006 129.19 303.229 129.274 303.566 129.344 cv
303.783 129.394 li
304.23 129.491 304.546 129.631 304.734 129.799 cv
304.917 129.974 305.015 130.219 305.015 130.527 cv
305.015 130.884 304.875 131.164 304.595 131.367 cv
304.314 131.577 303.923 131.675 303.433 131.675 cv
303.223 131.675 303.013 131.654 302.789 131.619 cv
302.565 131.584 302.334 131.528 302.09 131.444 cv
302.09 130.792 li
302.32 130.919 302.551 131.01 302.775 131.066 cv
302.999 131.129 303.223 131.157 303.447 131.157 cv
303.741 131.157 303.972 131.108 304.133 131.01 cv
304.287 130.912 304.371 130.765 304.371 130.576 cv
304.371 130.408 304.308 130.275 304.196 130.184 cv
304.084 130.093 303.832 130.002 303.44 129.918 cv
303.223 129.869 li
302.831 129.785 302.544 129.659 302.376 129.491 cv
302.201 129.323 302.117 129.092 302.117 128.792 cv
302.117 128.435 302.243 128.154 302.495 127.958 cv
302.747 127.762 303.111 127.665 303.587 127.665 cv
303.817 127.665 304.035 127.686 304.245 127.72 cv
304.447 127.755 304.637 127.805 304.812 127.868 cv
f
306.018 127.756 mo
306.647 127.756 li
306.647 131.584 li
306.018 131.584 li
306.018 127.756 li
cp
306.018 126.265 mo
306.647 126.265 li
306.647 127.063 li
306.018 127.063 li
306.018 126.265 li
cp
f
307.69 127.755 mo
310.679 127.755 li
310.679 128.329 li
308.313 131.08 li
310.679 131.08 li
310.679 131.584 li
307.606 131.584 li
307.606 131.01 li
309.972 128.259 li
307.69 128.259 li
307.69 127.755 li
cp
f
314.915 129.512 mo
314.915 129.82 li
312.024 129.82 li
312.053 130.254 312.179 130.59 312.416 130.813 cv
312.647 131.038 312.969 131.15 313.389 131.15 cv
313.627 131.15 313.865 131.122 314.089 131.066 cv
314.313 131.01 314.544 130.919 314.768 130.792 cv
314.768 131.388 li
314.544 131.486 314.313 131.563 314.075 131.605 cv
313.837 131.646 313.592 131.675 313.354 131.675 cv
312.738 131.675 312.255 131.5 311.898 131.15 cv
311.541 130.8 311.366 130.317 311.366 129.708 cv
311.366 129.085 311.534 128.588 311.87 128.217 cv
312.206 127.854 312.668 127.665 313.242 127.665 cv
313.76 127.665 314.166 127.833 314.467 128.162 cv
314.761 128.498 314.915 128.945 314.915 129.512 cv
314.285 129.331 mo
314.278 128.987 314.18 128.714 313.998 128.504 cv
313.81 128.301 313.558 128.197 313.249 128.197 cv
312.899 128.197 312.619 128.301 312.409 128.498 cv
312.199 128.693 312.073 128.973 312.045 129.331 cv
314.285 129.331 li
f
319.686 126.272 mo
319.378 126.804 319.154 127.321 319.007 127.833 cv
318.853 128.344 318.782 128.861 318.782 129.386 cv
318.782 129.918 318.853 130.436 319.007 130.947 cv
319.154 131.465 319.378 131.976 319.686 132.5 cv
319.14 132.5 li
318.797 131.961 318.538 131.444 318.37 130.926 cv
318.202 130.408 318.118 129.897 318.118 129.386 cv
318.118 128.882 318.202 128.372 318.37 127.854 cv
318.538 127.335 318.79 126.811 319.14 126.272 cv
319.686 126.272 li
f
320.787 131.465 mo
320.787 131.437 320.787 131.416 320.795 131.402 cv
321.319 129.316 li
321.347 129.19 321.368 129.071 321.368 128.973 cv
321.368 128.777 321.298 128.672 321.165 128.672 cv
321.019 128.672 320.906 128.763 320.836 128.938 cv
320.767 129.113 320.696 129.331 320.634 129.596 cv
320.634 129.61 320.626 129.624 320.612 129.631 cv
320.598 129.638 320.584 129.638 320.577 129.638 cv
320.493 129.638 li
320.479 129.638 320.466 129.631 320.451 129.617 cv
320.438 129.603 320.438 129.582 320.438 129.568 cv
320.486 129.365 320.535 129.19 320.584 129.05 cv
320.626 128.911 320.703 128.784 320.801 128.665 cv
320.899 128.553 321.019 128.49 321.173 128.49 cv
321.34 128.49 321.494 128.546 321.634 128.659 cv
321.768 128.771 321.837 128.911 321.837 129.078 cv
321.978 128.896 322.138 128.756 322.327 128.651 cv
322.509 128.546 322.712 128.49 322.922 128.49 cv
323.083 128.49 323.223 128.525 323.349 128.582 cv
323.468 128.637 323.559 128.728 323.629 128.84 cv
323.698 128.953 323.733 129.092 323.733 129.247 cv
323.733 129.442 323.685 129.673 323.601 129.939 cv
323.517 130.212 323.411 130.513 323.285 130.849 cv
323.216 131.002 323.188 131.143 323.188 131.269 cv
323.188 131.409 323.237 131.479 323.349 131.479 cv
323.53 131.479 323.678 131.381 323.804 131.185 cv
323.923 130.989 324.007 130.779 324.063 130.555 cv
324.069 130.527 324.091 130.513 324.118 130.513 cv
324.202 130.513 li
324.217 130.513 324.23 130.52 324.244 130.534 cv
324.259 130.548 324.266 130.562 324.266 130.576 cv
324.266 130.583 324.259 130.59 324.259 130.597 cv
324.196 130.863 324.084 131.108 323.93 131.325 cv
323.769 131.549 323.573 131.654 323.335 131.654 cv
323.167 131.654 323.027 131.598 322.915 131.493 cv
322.796 131.381 322.74 131.248 322.74 131.08 cv
322.74 130.996 322.754 130.905 322.796 130.807 cv
322.852 130.653 322.915 130.471 322.991 130.261 cv
323.069 130.051 323.132 129.855 323.181 129.659 cv
323.229 129.463 323.258 129.295 323.258 129.141 cv
323.258 129.015 323.229 128.903 323.174 128.813 cv
323.118 128.721 323.034 128.672 322.908 128.672 cv
322.733 128.672 322.571 128.714 322.432 128.784 cv
322.292 128.861 322.166 128.959 322.061 129.085 cv
321.949 129.211 321.851 129.358 321.768 129.526 cv
321.291 131.43 li
321.277 131.5 321.242 131.549 321.187 131.591 cv
321.13 131.632 321.067 131.654 320.997 131.654 cv
320.941 131.654 320.893 131.632 320.851 131.605 cv
320.809 131.577 320.787 131.528 320.787 131.465 cv
f
325.008 126.272 mo
325.554 126.272 li
325.89 126.811 326.148 127.335 326.316 127.854 cv
326.484 128.372 326.575 128.882 326.575 129.386 cv
326.575 129.897 326.484 130.408 326.316 130.926 cv
326.148 131.444 325.89 131.961 325.554 132.5 cv
325.008 132.5 li
325.309 131.976 325.532 131.465 325.687 130.947 cv
325.833 130.436 325.91 129.918 325.91 129.386 cv
325.91 128.861 325.833 128.344 325.687 127.833 cv
325.532 127.321 325.309 126.804 325.008 126.272 cv
f
236.262 112.589 mo
237.611 112.589 li
f
236.262 112.589 mo
237.611 112.589 li
@
372.342 112.589 mo
370.992 112.589 li
f
372.342 112.589 mo
370.992 112.589 li
@
233.609 109.896 mo
233.252 109.896 232.986 110.071 232.805 110.42 cv
232.622 110.771 232.539 111.295 232.539 111.995 cv
232.539 112.695 232.622 113.22 232.805 113.57 cv
232.986 113.92 233.252 114.095 233.609 114.095 cv
233.966 114.095 234.232 113.92 234.414 113.57 cv
234.589 113.22 234.68 112.695 234.68 111.995 cv
234.68 111.295 234.589 110.771 234.414 110.42 cv
234.232 110.071 233.966 109.896 233.609 109.896 cv
233.609 109.35 mo
234.176 109.35 234.61 109.581 234.918 110.029 cv
235.219 110.483 235.373 111.141 235.373 111.995 cv
235.373 112.856 235.219 113.514 234.918 113.961 cv
234.61 114.41 234.176 114.633 233.609 114.633 cv
233.035 114.633 232.595 114.41 232.294 113.961 cv
231.992 113.514 231.846 112.856 231.846 111.995 cv
231.846 111.141 231.992 110.483 232.294 110.029 cv
232.595 109.581 233.035 109.35 233.609 109.35 cv
f
236.262 100.439 mo
237.611 100.439 li
f
236.262 100.439 mo
237.611 100.439 li
@
372.342 100.439 mo
370.992 100.439 li
f
372.342 100.439 mo
370.992 100.439 li
@
218.851 97.2905 mo
221.559 97.2905 li
221.559 97.8716 li
219.48 97.8716 li
219.48 99.1245 li
219.578 99.0894 219.684 99.0615 219.781 99.0474 cv
219.879 99.0337 219.984 99.019 220.082 99.019 cv
220.649 99.019 221.097 99.1807 221.433 99.4883 cv
221.769 99.8027 221.937 100.223 221.937 100.755 cv
221.937 101.308 221.762 101.735 221.419 102.036 cv
221.076 102.336 220.593 102.484 219.978 102.484 cv
219.761 102.484 219.543 102.462 219.319 102.435 cv
219.096 102.4 218.871 102.351 218.634 102.274 cv
218.634 101.581 li
218.836 101.692 219.047 101.777 219.271 101.833 cv
219.487 101.889 219.718 101.91 219.963 101.91 cv
220.355 101.91 220.67 101.812 220.901 101.602 cv
221.125 101.392 221.244 101.112 221.244 100.755 cv
221.244 100.405 221.125 100.125 220.901 99.915 cv
220.67 99.7051 220.355 99.6006 219.963 99.6006 cv
219.781 99.6006 219.593 99.6211 219.41 99.6631 cv
219.229 99.7051 219.039 99.7681 218.851 99.8521 cv
218.851 97.2905 li
f
224.771 97.7456 mo
224.414 97.7456 224.148 97.9204 223.966 98.2705 cv
223.784 98.6206 223.7 99.145 223.7 99.8452 cv
223.7 100.545 223.784 101.07 223.966 101.42 cv
224.148 101.77 224.414 101.945 224.771 101.945 cv
225.128 101.945 225.394 101.77 225.576 101.42 cv
225.751 101.07 225.842 100.545 225.842 99.8452 cv
225.842 99.145 225.751 98.6206 225.576 98.2705 cv
225.394 97.9204 225.128 97.7456 224.771 97.7456 cv
224.771 97.1997 mo
225.338 97.1997 225.771 97.4307 226.08 97.8789 cv
226.381 98.3335 226.535 98.9912 226.535 99.8452 cv
226.535 100.706 226.381 101.364 226.08 101.812 cv
225.771 102.259 225.338 102.483 224.771 102.483 cv
224.197 102.483 223.757 102.259 223.456 101.812 cv
223.154 101.364 223.008 100.706 223.008 99.8452 cv
223.008 98.9912 223.154 98.3335 223.456 97.8789 cv
223.757 97.4307 224.197 97.1997 224.771 97.1997 cv
f
229.223 97.7456 mo
228.865 97.7456 228.6 97.9204 228.417 98.2705 cv
228.235 98.6206 228.151 99.145 228.151 99.8452 cv
228.151 100.545 228.235 101.07 228.417 101.42 cv
228.6 101.77 228.865 101.945 229.223 101.945 cv
229.579 101.945 229.845 101.77 230.027 101.42 cv
230.202 101.07 230.293 100.545 230.293 99.8452 cv
230.293 99.145 230.202 98.6206 230.027 98.2705 cv
229.845 97.9204 229.579 97.7456 229.223 97.7456 cv
229.223 97.1997 mo
229.789 97.1997 230.223 97.4307 230.53 97.8789 cv
230.832 98.3335 230.986 98.9912 230.986 99.8452 cv
230.986 100.706 230.832 101.364 230.53 101.812 cv
230.223 102.259 229.789 102.483 229.223 102.483 cv
228.648 102.483 228.207 102.259 227.906 101.812 cv
227.605 101.364 227.458 100.706 227.458 99.8452 cv
227.458 98.9912 227.605 98.3335 227.906 97.8789 cv
228.207 97.4307 228.648 97.1997 229.223 97.1997 cv
f
233.673 97.7456 mo
233.316 97.7456 233.05 97.9204 232.868 98.2705 cv
232.687 98.6206 232.603 99.145 232.603 99.8452 cv
232.603 100.545 232.687 101.07 232.868 101.42 cv
233.05 101.77 233.316 101.945 233.673 101.945 cv
234.03 101.945 234.296 101.77 234.479 101.42 cv
234.653 101.07 234.744 100.545 234.744 99.8452 cv
234.744 99.145 234.653 98.6206 234.479 98.2705 cv
234.296 97.9204 234.03 97.7456 233.673 97.7456 cv
233.673 97.1997 mo
234.24 97.1997 234.674 97.4307 234.981 97.8789 cv
235.283 98.3335 235.437 98.9912 235.437 99.8452 cv
235.437 100.706 235.283 101.364 234.981 101.812 cv
234.674 102.259 234.24 102.483 233.673 102.483 cv
233.1 102.483 232.658 102.259 232.357 101.812 cv
232.057 101.364 231.909 100.706 231.909 99.8452 cv
231.909 98.9912 232.057 98.3335 232.357 97.8789 cv
232.658 97.4307 233.1 97.1997 233.673 97.1997 cv
f
236.262 88.2886 mo
237.611 88.2886 li
f
236.262 88.2886 mo
237.611 88.2886 li
@
372.342 88.2886 mo
370.992 88.2886 li
f
372.342 88.2886 mo
370.992 88.2886 li
@
214.733 89.6616 mo
215.859 89.6616 li
215.859 85.7705 li
214.635 86.0156 li
214.635 85.3857 li
215.853 85.1401 li
216.546 85.1401 li
216.546 89.6616 li
217.673 89.6616 li
217.673 90.2427 li
214.733 90.2427 li
214.733 89.6616 li
cp
f
220.542 85.5957 mo
220.185 85.5957 219.919 85.7705 219.737 86.1206 cv
219.555 86.4707 219.471 86.9951 219.471 87.6953 cv
219.471 88.395 219.555 88.9199 219.737 89.27 cv
219.919 89.6196 220.185 89.7944 220.542 89.7944 cv
220.898 89.7944 221.165 89.6196 221.347 89.27 cv
221.521 88.9199 221.612 88.395 221.612 87.6953 cv
221.612 86.9951 221.521 86.4707 221.347 86.1206 cv
221.165 85.7705 220.898 85.5957 220.542 85.5957 cv
220.542 85.0498 mo
221.108 85.0498 221.543 85.2808 221.851 85.7285 cv
222.151 86.1831 222.306 86.8413 222.306 87.6953 cv
222.306 88.5562 222.151 89.2139 221.851 89.6616 cv
221.543 90.1094 221.108 90.3335 220.542 90.3335 cv
219.968 90.3335 219.527 90.1094 219.227 89.6616 cv
218.926 89.2139 218.778 88.5562 218.778 87.6953 cv
218.778 86.8413 218.926 86.1831 219.227 85.7285 cv
219.527 85.2808 219.968 85.0498 220.542 85.0498 cv
f
224.993 85.5957 mo
224.636 85.5957 224.37 85.7705 224.188 86.1206 cv
224.006 86.4707 223.922 86.9951 223.922 87.6953 cv
223.922 88.395 224.006 88.9199 224.188 89.27 cv
224.37 89.6196 224.636 89.7944 224.993 89.7944 cv
225.35 89.7944 225.615 89.6196 225.798 89.27 cv
225.973 88.9199 226.063 88.395 226.063 87.6953 cv
226.063 86.9951 225.973 86.4707 225.798 86.1206 cv
225.615 85.7705 225.35 85.5957 224.993 85.5957 cv
224.993 85.0498 mo
225.56 85.0498 225.993 85.2808 226.302 85.7285 cv
226.603 86.1831 226.757 86.8413 226.757 87.6953 cv
226.757 88.5562 226.603 89.2139 226.302 89.6616 cv
225.993 90.1094 225.56 90.3335 224.993 90.3335 cv
224.419 90.3335 223.978 90.1094 223.678 89.6616 cv
223.376 89.2139 223.229 88.5562 223.229 87.6953 cv
223.229 86.8413 223.376 86.1831 223.678 85.7285 cv
223.978 85.2808 224.419 85.0498 224.993 85.0498 cv
f
229.444 85.5957 mo
229.087 85.5957 228.821 85.7705 228.639 86.1206 cv
228.457 86.4707 228.373 86.9951 228.373 87.6953 cv
228.373 88.395 228.457 88.9199 228.639 89.27 cv
228.821 89.6196 229.087 89.7944 229.444 89.7944 cv
229.801 89.7944 230.066 89.6196 230.249 89.27 cv
230.424 88.9199 230.515 88.395 230.515 87.6953 cv
230.515 86.9951 230.424 86.4707 230.249 86.1206 cv
230.066 85.7705 229.801 85.5957 229.444 85.5957 cv
229.444 85.0498 mo
230.011 85.0498 230.444 85.2808 230.752 85.7285 cv
231.054 86.1831 231.208 86.8413 231.208 87.6953 cv
231.208 88.5562 231.054 89.2139 230.752 89.6616 cv
230.444 90.1094 230.011 90.3335 229.444 90.3335 cv
228.87 90.3335 228.429 90.1094 228.128 89.6616 cv
227.827 89.2139 227.68 88.5562 227.68 87.6953 cv
227.68 86.8413 227.827 86.1831 228.128 85.7285 cv
228.429 85.2808 228.87 85.0498 229.444 85.0498 cv
f
233.895 85.5957 mo
233.538 85.5957 233.272 85.7705 233.09 86.1206 cv
232.908 86.4707 232.824 86.9951 232.824 87.6953 cv
232.824 88.395 232.908 88.9199 233.09 89.27 cv
233.272 89.6196 233.538 89.7944 233.895 89.7944 cv
234.252 89.7944 234.518 89.6196 234.7 89.27 cv
234.875 88.9199 234.966 88.395 234.966 87.6953 cv
234.966 86.9951 234.875 86.4707 234.7 86.1206 cv
234.518 85.7705 234.252 85.5957 233.895 85.5957 cv
233.895 85.0498 mo
234.462 85.0498 234.896 85.2808 235.204 85.7285 cv
235.505 86.1831 235.658 86.8413 235.658 87.6953 cv
235.658 88.5562 235.505 89.2139 235.204 89.6616 cv
234.896 90.1094 234.462 90.3335 233.895 90.3335 cv
233.321 90.3335 232.88 90.1094 232.579 89.6616 cv
232.278 89.2139 232.132 88.5562 232.132 87.6953 cv
232.132 86.8413 232.278 86.1831 232.579 85.7285 cv
232.88 85.2808 233.321 85.0498 233.895 85.0498 cv
f
236.262 76.1387 mo
237.611 76.1387 li
f
236.262 76.1387 mo
237.611 76.1387 li
@
372.342 76.1387 mo
370.992 76.1387 li
f
372.342 76.1387 mo
370.992 76.1387 li
@
214.733 77.5117 mo
215.859 77.5117 li
215.859 73.6206 li
214.635 73.8657 li
214.635 73.2358 li
215.853 72.9902 li
216.546 72.9902 li
216.546 77.5117 li
217.673 77.5117 li
217.673 78.0928 li
214.733 78.0928 li
214.733 77.5117 li
cp
f
219.072 72.9907 mo
221.78 72.9907 li
221.78 73.5718 li
219.702 73.5718 li
219.702 74.8247 li
219.8 74.7891 219.905 74.7612 220.003 74.7471 cv
220.101 74.7334 220.206 74.7192 220.304 74.7192 cv
220.871 74.7192 221.318 74.8804 221.654 75.1885 cv
221.99 75.5029 222.158 75.9229 222.158 76.4551 cv
222.158 77.0078 221.983 77.4346 221.641 77.7358 cv
221.298 78.0366 220.815 78.1836 220.199 78.1836 cv
219.982 78.1836 219.765 78.1626 219.541 78.1343 cv
219.317 78.0996 219.094 78.0503 218.855 77.9736 cv
218.855 77.2808 li
219.058 77.3926 219.269 77.4766 219.492 77.5327 cv
219.709 77.5889 219.939 77.6099 220.185 77.6099 cv
220.577 77.6099 220.892 77.5117 221.123 77.3013 cv
221.347 77.0913 221.466 76.812 221.466 76.4551 cv
221.466 76.105 221.347 75.8247 221.123 75.6147 cv
220.892 75.4048 220.577 75.3003 220.185 75.3003 cv
220.003 75.3003 219.814 75.3208 219.632 75.3633 cv
219.45 75.4048 219.261 75.4683 219.072 75.5522 cv
219.072 72.9907 li
f
224.993 73.4458 mo
224.636 73.4458 224.37 73.6206 224.188 73.9707 cv
224.006 74.3208 223.922 74.8452 223.922 75.5454 cv
223.922 76.2451 224.006 76.77 224.188 77.1196 cv
224.37 77.4697 224.636 77.6445 224.993 77.6445 cv
225.35 77.6445 225.615 77.4697 225.798 77.1196 cv
225.973 76.77 226.063 76.2451 226.063 75.5454 cv
226.063 74.8452 225.973 74.3208 225.798 73.9707 cv
225.615 73.6206 225.35 73.4458 224.993 73.4458 cv
224.993 72.8999 mo
225.56 72.8999 225.993 73.1304 226.302 73.5786 cv
226.603 74.0332 226.757 74.6909 226.757 75.5454 cv
226.757 76.4058 226.603 77.064 226.302 77.5117 cv
225.993 77.9595 225.56 78.1836 224.993 78.1836 cv
224.419 78.1836 223.978 77.9595 223.678 77.5117 cv
223.376 77.064 223.229 76.4058 223.229 75.5454 cv
223.229 74.6909 223.376 74.0332 223.678 73.5786 cv
223.978 73.1304 224.419 72.8999 224.993 72.8999 cv
f
229.444 73.4458 mo
229.087 73.4458 228.821 73.6206 228.639 73.9707 cv
228.457 74.3208 228.373 74.8452 228.373 75.5454 cv
228.373 76.2451 228.457 76.77 228.639 77.1196 cv
228.821 77.4697 229.087 77.6445 229.444 77.6445 cv
229.801 77.6445 230.066 77.4697 230.249 77.1196 cv
230.424 76.77 230.515 76.2451 230.515 75.5454 cv
230.515 74.8452 230.424 74.3208 230.249 73.9707 cv
230.066 73.6206 229.801 73.4458 229.444 73.4458 cv
229.444 72.8999 mo
230.011 72.8999 230.444 73.1304 230.752 73.5786 cv
231.054 74.0332 231.208 74.6909 231.208 75.5454 cv
231.208 76.4058 231.054 77.064 230.752 77.5117 cv
230.444 77.9595 230.011 78.1836 229.444 78.1836 cv
228.87 78.1836 228.429 77.9595 228.128 77.5117 cv
227.827 77.064 227.68 76.4058 227.68 75.5454 cv
227.68 74.6909 227.827 74.0332 228.128 73.5786 cv
228.429 73.1304 228.87 72.8999 229.444 72.8999 cv
f
233.895 73.4458 mo
233.538 73.4458 233.272 73.6206 233.09 73.9707 cv
232.908 74.3208 232.824 74.8452 232.824 75.5454 cv
232.824 76.2451 232.908 76.77 233.09 77.1196 cv
233.272 77.4697 233.538 77.6445 233.895 77.6445 cv
234.252 77.6445 234.518 77.4697 234.7 77.1196 cv
234.875 76.77 234.966 76.2451 234.966 75.5454 cv
234.966 74.8452 234.875 74.3208 234.7 73.9707 cv
234.518 73.6206 234.252 73.4458 233.895 73.4458 cv
233.895 72.8999 mo
234.462 72.8999 234.896 73.1304 235.204 73.5786 cv
235.505 74.0332 235.658 74.6909 235.658 75.5454 cv
235.658 76.4058 235.505 77.064 235.204 77.5117 cv
234.896 77.9595 234.462 78.1836 233.895 78.1836 cv
233.321 78.1836 232.88 77.9595 232.579 77.5117 cv
232.278 77.064 232.132 76.4058 232.132 75.5454 cv
232.132 74.6909 232.278 74.0332 232.579 73.5786 cv
232.88 73.1304 233.321 72.8999 233.895 72.8999 cv
f
236.262 63.9888 mo
237.611 63.9888 li
f
236.262 63.9888 mo
237.611 63.9888 li
@
372.342 63.9888 mo
370.992 63.9888 li
f
372.342 63.9888 mo
370.992 63.9888 li
@
214.95 65.3618 mo
217.358 65.3618 li
217.358 65.9429 li
214.118 65.9429 li
214.118 65.3618 li
214.377 65.0962 214.733 64.7319 215.188 64.27 cv
215.637 63.8149 215.923 63.521 216.042 63.3882 cv
216.267 63.1431 216.42 62.9331 216.505 62.7583 cv
216.589 62.5903 216.638 62.4155 216.638 62.2471 cv
216.638 61.9814 216.539 61.7573 216.351 61.5898 cv
216.161 61.4214 215.917 61.3306 215.608 61.3306 cv
215.392 61.3306 215.16 61.3726 214.923 61.4424 cv
214.685 61.5195 214.426 61.6313 214.152 61.7856 cv
214.152 61.0859 li
214.433 60.9736 214.691 60.8896 214.93 60.8335 cv
215.168 60.7778 215.392 60.7495 215.595 60.7495 cv
216.119 60.7495 216.539 60.8823 216.854 61.1484 cv
217.169 61.4146 217.33 61.7646 217.33 62.2051 cv
217.33 62.4155 217.288 62.6182 217.211 62.8003 cv
217.134 62.9893 216.994 63.2134 216.784 63.4653 cv
216.729 63.5352 216.546 63.7241 216.238 64.0391 cv
215.931 64.354 215.504 64.7944 214.95 65.3618 cv
f
220.283 61.2954 mo
219.927 61.2954 219.66 61.4707 219.479 61.8203 cv
219.297 62.1704 219.213 62.6953 219.213 63.395 cv
219.213 64.0947 219.297 64.6201 219.479 64.9697 cv
219.66 65.3198 219.927 65.4946 220.283 65.4946 cv
220.641 65.4946 220.906 65.3198 221.088 64.9697 cv
221.264 64.6201 221.354 64.0947 221.354 63.395 cv
221.354 62.6953 221.264 62.1704 221.088 61.8203 cv
220.906 61.4707 220.641 61.2954 220.283 61.2954 cv
220.283 60.75 mo
220.851 60.75 221.284 60.9805 221.592 61.4287 cv
221.894 61.8833 222.047 62.5415 222.047 63.395 cv
222.047 64.2559 221.894 64.9136 221.592 65.3613 cv
221.284 65.8096 220.851 66.0337 220.283 66.0337 cv
219.71 66.0337 219.269 65.8096 218.968 65.3613 cv
218.667 64.9136 218.52 64.2559 218.52 63.395 cv
218.52 62.5415 218.667 61.8833 218.968 61.4287 cv
219.269 60.9805 219.71 60.75 220.283 60.75 cv
f
224.734 61.2954 mo
224.378 61.2954 224.111 61.4707 223.93 61.8203 cv
223.748 62.1704 223.664 62.6953 223.664 63.395 cv
223.664 64.0947 223.748 64.6201 223.93 64.9697 cv
224.111 65.3198 224.378 65.4946 224.734 65.4946 cv
225.092 65.4946 225.357 65.3198 225.539 64.9697 cv
225.714 64.6201 225.805 64.0947 225.805 63.395 cv
225.805 62.6953 225.714 62.1704 225.539 61.8203 cv
225.357 61.4707 225.092 61.2954 224.734 61.2954 cv
224.734 60.75 mo
225.302 60.75 225.735 60.9805 226.043 61.4287 cv
226.344 61.8833 226.498 62.5415 226.498 63.395 cv
226.498 64.2559 226.344 64.9136 226.043 65.3613 cv
225.735 65.8096 225.302 66.0337 224.734 66.0337 cv
224.16 66.0337 223.72 65.8096 223.419 65.3613 cv
223.118 64.9136 222.971 64.2559 222.971 63.395 cv
222.971 62.5415 223.118 61.8833 223.419 61.4287 cv
223.72 60.9805 224.16 60.75 224.734 60.75 cv
f
229.186 61.2954 mo
228.828 61.2954 228.563 61.4707 228.381 61.8203 cv
228.198 62.1704 228.115 62.6953 228.115 63.395 cv
228.115 64.0947 228.198 64.6201 228.381 64.9697 cv
228.563 65.3198 228.828 65.4946 229.186 65.4946 cv
229.543 65.4946 229.809 65.3198 229.99 64.9697 cv
230.165 64.6201 230.257 64.0947 230.257 63.395 cv
230.257 62.6953 230.165 62.1704 229.99 61.8203 cv
229.809 61.4707 229.543 61.2954 229.186 61.2954 cv
229.186 60.75 mo
229.753 60.75 230.187 60.9805 230.494 61.4287 cv
230.795 61.8833 230.949 62.5415 230.949 63.395 cv
230.949 64.2559 230.795 64.9136 230.494 65.3613 cv
230.187 65.8096 229.753 66.0337 229.186 66.0337 cv
228.611 66.0337 228.171 65.8096 227.87 65.3613 cv
227.568 64.9136 227.422 64.2559 227.422 63.395 cv
227.422 62.5415 227.568 61.8833 227.87 61.4287 cv
228.171 60.9805 228.611 60.75 229.186 60.75 cv
f
233.637 61.2954 mo
233.279 61.2954 233.014 61.4707 232.832 61.8203 cv
232.649 62.1704 232.565 62.6953 232.565 63.395 cv
232.565 64.0947 232.649 64.6201 232.832 64.9697 cv
233.014 65.3198 233.279 65.4946 233.637 65.4946 cv
233.993 65.4946 234.26 65.3198 234.441 64.9697 cv
234.616 64.6201 234.707 64.0947 234.707 63.395 cv
234.707 62.6953 234.616 62.1704 234.441 61.8203 cv
234.26 61.4707 233.993 61.2954 233.637 61.2954 cv
233.637 60.75 mo
234.203 60.75 234.637 60.9805 234.945 61.4287 cv
235.246 61.8833 235.4 62.5415 235.4 63.395 cv
235.4 64.2559 235.246 64.9136 234.945 65.3613 cv
234.637 65.8096 234.203 66.0337 233.637 66.0337 cv
233.063 66.0337 232.622 65.8096 232.321 65.3613 cv
232.02 64.9136 231.873 64.2559 231.873 63.395 cv
231.873 62.5415 232.02 61.8833 232.321 61.4287 cv
232.622 60.9805 233.063 60.75 233.637 60.75 cv
f
236.262 51.8389 mo
237.611 51.8389 li
f
236.262 51.8389 mo
237.611 51.8389 li
@
372.342 51.8389 mo
370.992 51.8389 li
f
372.342 51.8389 mo
370.992 51.8389 li
@
214.95 53.2119 mo
217.358 53.2119 li
217.358 53.7925 li
214.118 53.7925 li
214.118 53.2119 li
214.377 52.9458 214.733 52.582 215.188 52.1201 cv
215.637 51.665 215.923 51.3711 216.042 51.2378 cv
216.267 50.9932 216.42 50.7832 216.505 50.6084 cv
216.589 50.4404 216.638 50.2651 216.638 50.0972 cv
216.638 49.8315 216.539 49.6074 216.351 49.4395 cv
216.161 49.272 215.917 49.1807 215.608 49.1807 cv
215.392 49.1807 215.16 49.2227 214.923 49.2925 cv
214.685 49.3696 214.426 49.4819 214.152 49.6357 cv
214.152 48.9355 li
214.433 48.8237 214.691 48.7397 214.93 48.6836 cv
215.168 48.6279 215.392 48.5996 215.595 48.5996 cv
216.119 48.5996 216.539 48.7329 216.854 48.9985 cv
217.169 49.2646 217.33 49.6147 217.33 50.0552 cv
217.33 50.2651 217.288 50.4683 217.211 50.6504 cv
217.134 50.8394 216.994 51.063 216.784 51.3149 cv
216.729 51.3853 216.546 51.5737 216.238 51.8892 cv
215.931 52.2041 215.504 52.6445 214.95 53.2119 cv
f
218.813 48.6909 mo
221.522 48.6909 li
221.522 49.2715 li
219.443 49.2715 li
219.443 50.5244 li
219.542 50.4893 219.646 50.4614 219.744 50.4473 cv
219.843 50.4331 219.947 50.4194 220.046 50.4194 cv
220.612 50.4194 221.061 50.5806 221.396 50.8882 cv
221.732 51.2031 221.9 51.623 221.9 52.1548 cv
221.9 52.7075 221.725 53.1348 221.382 53.4355 cv
221.039 53.7368 220.557 53.8833 219.94 53.8833 cv
219.724 53.8833 219.507 53.8628 219.283 53.8345 cv
219.059 53.7993 218.835 53.7505 218.597 53.6733 cv
218.597 52.981 li
218.8 53.0928 219.01 53.1768 219.233 53.2329 cv
219.45 53.2886 219.682 53.3096 219.927 53.3096 cv
220.318 53.3096 220.634 53.2119 220.864 53.0015 cv
221.088 52.7915 221.207 52.5117 221.207 52.1548 cv
221.207 51.8052 221.088 51.5249 220.864 51.3149 cv
220.634 51.105 220.318 51.0005 219.927 51.0005 cv
219.744 51.0005 219.556 51.021 219.374 51.063 cv
219.191 51.105 219.003 51.168 218.813 51.252 cv
218.813 48.6909 li
f
224.734 49.1455 mo
224.378 49.1455 224.111 49.3208 223.93 49.6704 cv
223.748 50.0205 223.664 50.5454 223.664 51.2451 cv
223.664 51.9448 223.748 52.4697 223.93 52.8198 cv
224.111 53.1694 224.378 53.3447 224.734 53.3447 cv
225.092 53.3447 225.357 53.1694 225.539 52.8198 cv
225.714 52.4697 225.805 51.9448 225.805 51.2451 cv
225.805 50.5454 225.714 50.0205 225.539 49.6704 cv
225.357 49.3208 225.092 49.1455 224.734 49.1455 cv
224.734 48.6001 mo
225.302 48.6001 225.735 48.8306 226.043 49.2788 cv
226.344 49.7334 226.498 50.3911 226.498 51.2451 cv
226.498 52.106 226.344 52.7642 226.043 53.2119 cv
225.735 53.6597 225.302 53.8838 224.734 53.8838 cv
224.16 53.8838 223.72 53.6597 223.419 53.2119 cv
223.118 52.7642 222.971 52.106 222.971 51.2451 cv
222.971 50.3911 223.118 49.7334 223.419 49.2788 cv
223.72 48.8306 224.16 48.6001 224.734 48.6001 cv
f
229.186 49.1455 mo
228.828 49.1455 228.563 49.3208 228.381 49.6704 cv
228.198 50.0205 228.115 50.5454 228.115 51.2451 cv
228.115 51.9448 228.198 52.4697 228.381 52.8198 cv
228.563 53.1694 228.828 53.3447 229.186 53.3447 cv
229.543 53.3447 229.809 53.1694 229.99 52.8198 cv
230.165 52.4697 230.257 51.9448 230.257 51.2451 cv
230.257 50.5454 230.165 50.0205 229.99 49.6704 cv
229.809 49.3208 229.543 49.1455 229.186 49.1455 cv
229.186 48.6001 mo
229.753 48.6001 230.187 48.8306 230.494 49.2788 cv
230.795 49.7334 230.949 50.3911 230.949 51.2451 cv
230.949 52.106 230.795 52.7642 230.494 53.2119 cv
230.187 53.6597 229.753 53.8838 229.186 53.8838 cv
228.611 53.8838 228.171 53.6597 227.87 53.2119 cv
227.568 52.7642 227.422 52.106 227.422 51.2451 cv
227.422 50.3911 227.568 49.7334 227.87 49.2788 cv
228.171 48.8306 228.611 48.6001 229.186 48.6001 cv
f
233.637 49.1455 mo
233.279 49.1455 233.014 49.3208 232.832 49.6704 cv
232.649 50.0205 232.565 50.5454 232.565 51.2451 cv
232.565 51.9448 232.649 52.4697 232.832 52.8198 cv
233.014 53.1694 233.279 53.3447 233.637 53.3447 cv
233.993 53.3447 234.26 53.1694 234.441 52.8198 cv
234.616 52.4697 234.707 51.9448 234.707 51.2451 cv
234.707 50.5454 234.616 50.0205 234.441 49.6704 cv
234.26 49.3208 233.993 49.1455 233.637 49.1455 cv
233.637 48.6001 mo
234.203 48.6001 234.637 48.8306 234.945 49.2788 cv
235.246 49.7334 235.4 50.3911 235.4 51.2451 cv
235.4 52.106 235.246 52.7642 234.945 53.2119 cv
234.637 53.6597 234.203 53.8838 233.637 53.8838 cv
233.063 53.8838 232.622 53.6597 232.321 53.2119 cv
232.02 52.7642 231.873 52.106 231.873 51.2451 cv
231.873 50.3911 232.02 49.7334 232.321 49.2788 cv
232.622 48.8306 233.063 48.6001 233.637 48.6001 cv
f
236.262 39.689 mo
237.611 39.689 li
f
236.262 39.689 mo
237.611 39.689 li
@
372.342 39.689 mo
370.992 39.689 li
f
372.342 39.689 mo
370.992 39.689 li
@
216.47 38.8921 mo
216.799 38.9624 217.058 39.1094 217.239 39.333 cv
217.421 39.5571 217.519 39.8369 217.519 40.1587 cv
217.519 40.6626 217.344 41.0547 217.001 41.3276 cv
216.651 41.6006 216.161 41.7334 215.524 41.7334 cv
215.308 41.7334 215.084 41.7124 214.86 41.6704 cv
214.636 41.6353 214.397 41.5728 214.16 41.4888 cv
214.16 40.8237 li
214.349 40.9355 214.559 41.02 214.79 41.0757 cv
215.014 41.1318 215.252 41.1597 215.504 41.1597 cv
215.938 41.1597 216.267 41.0757 216.49 40.9077 cv
216.715 40.7397 216.834 40.4878 216.834 40.1587 cv
216.834 39.8647 216.729 39.627 216.519 39.459 cv
216.309 39.291 216.015 39.1997 215.637 39.1997 cv
215.042 39.1997 li
215.042 38.6333 li
215.665 38.6333 li
216.001 38.6333 216.26 38.5703 216.441 38.4302 cv
216.624 38.2974 216.715 38.1016 216.715 37.8423 cv
216.715 37.5835 216.616 37.3804 216.435 37.2407 cv
216.245 37.1006 215.979 37.0308 215.637 37.0308 cv
215.448 37.0308 215.245 37.0513 215.028 37.0938 cv
214.811 37.1353 214.573 37.1987 214.313 37.2822 cv
214.313 36.6665 li
214.573 36.5967 214.817 36.541 215.049 36.5059 cv
215.272 36.4707 215.489 36.4497 215.699 36.4497 cv
216.218 36.4497 216.63 36.5688 216.938 36.8066 cv
217.246 37.0444 217.4 37.3662 217.4 37.7725 cv
217.4 38.0522 217.316 38.2905 217.155 38.4863 cv
216.994 38.6821 216.764 38.8218 216.47 38.8921 cv
f
220.305 36.9956 mo
219.947 36.9956 219.682 37.1709 219.5 37.5205 cv
219.317 37.8706 219.233 38.395 219.233 39.0952 cv
219.233 39.7949 219.317 40.3198 219.5 40.6699 cv
219.682 41.0195 219.947 41.1948 220.305 41.1948 cv
220.661 41.1948 220.928 41.0195 221.109 40.6699 cv
221.284 40.3198 221.375 39.7949 221.375 39.0952 cv
221.375 38.395 221.284 37.8706 221.109 37.5205 cv
220.928 37.1709 220.661 36.9956 220.305 36.9956 cv
220.305 36.4497 mo
220.871 36.4497 221.306 36.6807 221.613 37.1284 cv
221.914 37.5835 222.068 38.2412 222.068 39.0952 cv
222.068 39.9556 221.914 40.6138 221.613 41.062 cv
221.306 41.5098 220.871 41.7339 220.305 41.7339 cv
219.73 41.7339 219.29 41.5098 218.989 41.062 cv
218.688 40.6138 218.541 39.9556 218.541 39.0952 cv
218.541 38.2412 218.688 37.5835 218.989 37.1284 cv
219.29 36.6807 219.73 36.4497 220.305 36.4497 cv
f
224.756 36.9956 mo
224.398 36.9956 224.133 37.1709 223.95 37.5205 cv
223.769 37.8706 223.685 38.395 223.685 39.0952 cv
223.685 39.7949 223.769 40.3198 223.95 40.6699 cv
224.133 41.0195 224.398 41.1948 224.756 41.1948 cv
225.112 41.1948 225.378 41.0195 225.561 40.6699 cv
225.735 40.3198 225.826 39.7949 225.826 39.0952 cv
225.826 38.395 225.735 37.8706 225.561 37.5205 cv
225.378 37.1709 225.112 36.9956 224.756 36.9956 cv
224.756 36.4497 mo
225.322 36.4497 225.756 36.6807 226.064 37.1284 cv
226.365 37.5835 226.52 38.2412 226.52 39.0952 cv
226.52 39.9556 226.365 40.6138 226.064 41.062 cv
225.756 41.5098 225.322 41.7339 224.756 41.7339 cv
224.182 41.7339 223.741 41.5098 223.44 41.062 cv
223.139 40.6138 222.992 39.9556 222.992 39.0952 cv
222.992 38.2412 223.139 37.5835 223.44 37.1284 cv
223.741 36.6807 224.182 36.4497 224.756 36.4497 cv
f
229.206 36.9956 mo
228.85 36.9956 228.584 37.1709 228.401 37.5205 cv
228.22 37.8706 228.136 38.395 228.136 39.0952 cv
228.136 39.7949 228.22 40.3198 228.401 40.6699 cv
228.584 41.0195 228.85 41.1948 229.206 41.1948 cv
229.563 41.1948 229.829 41.0195 230.012 40.6699 cv
230.187 40.3198 230.277 39.7949 230.277 39.0952 cv
230.277 38.395 230.187 37.8706 230.012 37.5205 cv
229.829 37.1709 229.563 36.9956 229.206 36.9956 cv
229.206 36.4497 mo
229.773 36.4497 230.207 36.6807 230.515 37.1284 cv
230.816 37.5835 230.971 38.2412 230.971 39.0952 cv
230.971 39.9556 230.816 40.6138 230.515 41.062 cv
230.207 41.5098 229.773 41.7339 229.206 41.7339 cv
228.633 41.7339 228.191 41.5098 227.891 41.062 cv
227.59 40.6138 227.442 39.9556 227.442 39.0952 cv
227.442 38.2412 227.59 37.5835 227.891 37.1284 cv
228.191 36.6807 228.633 36.4497 229.206 36.4497 cv
f
233.657 36.9956 mo
233.301 36.9956 233.035 37.1709 232.853 37.5205 cv
232.671 37.8706 232.587 38.395 232.587 39.0952 cv
232.587 39.7949 232.671 40.3198 232.853 40.6699 cv
233.035 41.0195 233.301 41.1948 233.657 41.1948 cv
234.015 41.1948 234.28 41.0195 234.463 40.6699 cv
234.638 40.3198 234.729 39.7949 234.729 39.0952 cv
234.729 38.395 234.638 37.8706 234.463 37.5205 cv
234.28 37.1709 234.015 36.9956 233.657 36.9956 cv
233.657 36.4497 mo
234.225 36.4497 234.658 36.6807 234.966 37.1284 cv
235.268 37.5835 235.421 38.2412 235.421 39.0952 cv
235.421 39.9556 235.268 40.6138 234.966 41.062 cv
234.658 41.5098 234.225 41.7339 233.657 41.7339 cv
233.084 41.7339 232.643 41.5098 232.342 41.062 cv
232.041 40.6138 231.895 39.9556 231.895 39.0952 cv
231.895 38.2412 232.041 37.5835 232.342 37.1284 cv
232.643 36.6807 233.084 36.4497 233.657 36.4497 cv
f
236.262 27.5386 mo
237.611 27.5386 li
f
236.262 27.5386 mo
237.611 27.5386 li
@
372.342 27.5386 mo
370.992 27.5386 li
f
372.342 27.5386 mo
370.992 27.5386 li
@
216.47 26.7422 mo
216.799 26.8125 217.058 26.959 217.239 27.1831 cv
217.421 27.4072 217.519 27.687 217.519 28.0088 cv
217.519 28.5127 217.344 28.9048 217.001 29.1777 cv
216.651 29.4507 216.161 29.5835 215.524 29.5835 cv
215.308 29.5835 215.084 29.5625 214.86 29.5205 cv
214.636 29.4854 214.397 29.4224 214.16 29.3384 cv
214.16 28.6738 li
214.349 28.7856 214.559 28.8696 214.79 28.9258 cv
215.014 28.9819 215.252 29.0093 215.504 29.0093 cv
215.938 29.0093 216.267 28.9258 216.49 28.7578 cv
216.715 28.5898 216.834 28.3379 216.834 28.0088 cv
216.834 27.7148 216.729 27.4771 216.519 27.3091 cv
216.309 27.1411 216.015 27.0498 215.637 27.0498 cv
215.042 27.0498 li
215.042 26.4834 li
215.665 26.4834 li
216.001 26.4834 216.26 26.4204 216.441 26.2803 cv
216.624 26.147 216.715 25.9517 216.715 25.6924 cv
216.715 25.4336 216.616 25.2305 216.435 25.0903 cv
216.245 24.9502 215.979 24.8804 215.637 24.8804 cv
215.448 24.8804 215.245 24.9014 215.028 24.9438 cv
214.811 24.9854 214.573 25.0483 214.313 25.1323 cv
214.313 24.5166 li
214.573 24.4468 214.817 24.3906 215.049 24.356 cv
215.272 24.3208 215.489 24.2998 215.699 24.2998 cv
216.218 24.2998 216.63 24.4189 216.938 24.6567 cv
217.246 24.8945 217.4 25.2163 217.4 25.6226 cv
217.4 25.9023 217.316 26.1406 217.155 26.3364 cv
216.994 26.5322 216.764 26.6719 216.47 26.7422 cv
f
218.835 24.3906 mo
221.543 24.3906 li
221.543 24.9717 li
219.465 24.9717 li
219.465 26.2241 li
219.563 26.1895 219.668 26.1611 219.766 26.1475 cv
219.863 26.1333 219.969 26.1196 220.066 26.1196 cv
220.634 26.1196 221.081 26.2803 221.417 26.5884 cv
221.753 26.9028 221.921 27.3228 221.921 27.855 cv
221.921 28.4077 221.746 28.8345 221.403 29.1357 cv
221.061 29.4365 220.578 29.5835 219.962 29.5835 cv
219.745 29.5835 219.527 29.5625 219.304 29.5347 cv
219.08 29.4995 218.856 29.4507 218.618 29.3735 cv
218.618 28.6807 li
218.82 28.793 219.031 28.877 219.255 28.9326 cv
219.472 28.9888 219.702 29.0098 219.947 29.0098 cv
220.34 29.0098 220.654 28.9116 220.886 28.7017 cv
221.109 28.4917 221.229 28.2119 221.229 27.855 cv
221.229 27.5054 221.109 27.2251 220.886 27.0151 cv
220.654 26.8052 220.34 26.7002 219.947 26.7002 cv
219.766 26.7002 219.577 26.7212 219.395 26.7632 cv
219.213 26.8052 219.023 26.8682 218.835 26.9521 cv
218.835 24.3906 li
f
224.756 24.8457 mo
224.398 24.8457 224.133 25.021 223.95 25.3706 cv
223.769 25.7202 223.685 26.2451 223.685 26.9453 cv
223.685 27.645 223.769 28.1699 223.95 28.52 cv
224.133 28.8696 224.398 29.0449 224.756 29.0449 cv
225.112 29.0449 225.378 28.8696 225.561 28.52 cv
225.735 28.1699 225.826 27.645 225.826 26.9453 cv
225.826 26.2451 225.735 25.7202 225.561 25.3706 cv
225.378 25.021 225.112 24.8457 224.756 24.8457 cv
224.756 24.2998 mo
225.322 24.2998 225.756 24.5308 226.064 24.9785 cv
226.365 25.4336 226.52 26.0913 226.52 26.9453 cv
226.52 27.8057 226.365 28.4639 226.064 28.9116 cv
225.756 29.3599 225.322 29.5835 224.756 29.5835 cv
224.182 29.5835 223.741 29.3599 223.44 28.9116 cv
223.139 28.4639 222.992 27.8057 222.992 26.9453 cv
222.992 26.0913 223.139 25.4336 223.44 24.9785 cv
223.741 24.5308 224.182 24.2998 224.756 24.2998 cv
f
229.206 24.8457 mo
228.85 24.8457 228.584 25.021 228.401 25.3706 cv
228.22 25.7202 228.136 26.2451 228.136 26.9453 cv
228.136 27.645 228.22 28.1699 228.401 28.52 cv
228.584 28.8696 228.85 29.0449 229.206 29.0449 cv
229.563 29.0449 229.829 28.8696 230.012 28.52 cv
230.187 28.1699 230.277 27.645 230.277 26.9453 cv
230.277 26.2451 230.187 25.7202 230.012 25.3706 cv
229.829 25.021 229.563 24.8457 229.206 24.8457 cv
229.206 24.2998 mo
229.773 24.2998 230.207 24.5308 230.515 24.9785 cv
230.816 25.4336 230.971 26.0913 230.971 26.9453 cv
230.971 27.8057 230.816 28.4639 230.515 28.9116 cv
230.207 29.3599 229.773 29.5835 229.206 29.5835 cv
228.633 29.5835 228.191 29.3599 227.891 28.9116 cv
227.59 28.4639 227.442 27.8057 227.442 26.9453 cv
227.442 26.0913 227.59 25.4336 227.891 24.9785 cv
228.191 24.5308 228.633 24.2998 229.206 24.2998 cv
f
233.657 24.8457 mo
233.301 24.8457 233.035 25.021 232.853 25.3706 cv
232.671 25.7202 232.587 26.2451 232.587 26.9453 cv
232.587 27.645 232.671 28.1699 232.853 28.52 cv
233.035 28.8696 233.301 29.0449 233.657 29.0449 cv
234.015 29.0449 234.28 28.8696 234.463 28.52 cv
234.638 28.1699 234.729 27.645 234.729 26.9453 cv
234.729 26.2451 234.638 25.7202 234.463 25.3706 cv
234.28 25.021 234.015 24.8457 233.657 24.8457 cv
233.657 24.2998 mo
234.225 24.2998 234.658 24.5308 234.966 24.9785 cv
235.268 25.4336 235.421 26.0913 235.421 26.9453 cv
235.421 27.8057 235.268 28.4639 234.966 28.9116 cv
234.658 29.3599 234.225 29.5835 233.657 29.5835 cv
233.084 29.5835 232.643 29.3599 232.342 28.9116 cv
232.041 28.4639 231.895 27.8057 231.895 26.9453 cv
231.895 26.0913 232.041 25.4336 232.342 24.9785 cv
232.643 24.5308 233.084 24.2998 233.657 24.2998 cv
f
236.262 15.3887 mo
237.611 15.3887 li
f
236.262 15.3887 mo
237.611 15.3887 li
@
372.342 15.3887 mo
370.992 15.3887 li
f
372.342 15.3887 mo
370.992 15.3887 li
@
216.084 12.8428 mo
214.341 15.5649 li
216.084 15.5649 li
216.084 12.8428 li
215.901 12.2407 mo
216.77 12.2407 li
216.77 15.5649 li
217.497 15.5649 li
217.497 16.1392 li
216.77 16.1392 li
216.77 17.3423 li
216.084 17.3423 li
216.084 16.1392 li
213.781 16.1392 li
213.781 15.4741 li
215.901 12.2407 li
cp
f
220.115 12.6958 mo
219.758 12.6958 219.492 12.8706 219.31 13.2202 cv
219.128 13.5703 219.044 14.0952 219.044 14.7954 cv
219.044 15.4946 219.128 16.02 219.31 16.3701 cv
219.492 16.7197 219.758 16.895 220.115 16.895 cv
220.472 16.895 220.737 16.7197 220.919 16.3701 cv
221.095 16.02 221.186 15.4946 221.186 14.7954 cv
221.186 14.0952 221.095 13.5703 220.919 13.2202 cv
220.737 12.8706 220.472 12.6958 220.115 12.6958 cv
220.115 12.1499 mo
220.682 12.1499 221.115 12.3809 221.423 12.8286 cv
221.725 13.2837 221.878 13.9414 221.878 14.7954 cv
221.878 15.6558 221.725 16.314 221.423 16.7617 cv
221.115 17.2095 220.682 17.4336 220.115 17.4336 cv
219.541 17.4336 219.1 17.2095 218.799 16.7617 cv
218.498 16.314 218.351 15.6558 218.351 14.7954 cv
218.351 13.9414 218.498 13.2837 218.799 12.8286 cv
219.1 12.3809 219.541 12.1499 220.115 12.1499 cv
f
224.565 12.6958 mo
224.209 12.6958 223.942 12.8706 223.761 13.2202 cv
223.579 13.5703 223.495 14.0952 223.495 14.7954 cv
223.495 15.4946 223.579 16.02 223.761 16.3701 cv
223.942 16.7197 224.209 16.895 224.565 16.895 cv
224.923 16.895 225.188 16.7197 225.371 16.3701 cv
225.546 16.02 225.637 15.4946 225.637 14.7954 cv
225.637 14.0952 225.546 13.5703 225.371 13.2202 cv
225.188 12.8706 224.923 12.6958 224.565 12.6958 cv
224.565 12.1499 mo
225.133 12.1499 225.566 12.3809 225.874 12.8286 cv
226.175 13.2837 226.329 13.9414 226.329 14.7954 cv
226.329 15.6558 226.175 16.314 225.874 16.7617 cv
225.566 17.2095 225.133 17.4336 224.565 17.4336 cv
223.991 17.4336 223.551 17.2095 223.25 16.7617 cv
222.949 16.314 222.802 15.6558 222.802 14.7954 cv
222.802 13.9414 222.949 13.2837 223.25 12.8286 cv
223.551 12.3809 223.991 12.1499 224.565 12.1499 cv
f
229.017 12.6958 mo
228.659 12.6958 228.394 12.8706 228.212 13.2202 cv
228.03 13.5703 227.946 14.0952 227.946 14.7954 cv
227.946 15.4946 228.03 16.02 228.212 16.3701 cv
228.394 16.7197 228.659 16.895 229.017 16.895 cv
229.374 16.895 229.64 16.7197 229.821 16.3701 cv
229.996 16.02 230.088 15.4946 230.088 14.7954 cv
230.088 14.0952 229.996 13.5703 229.821 13.2202 cv
229.64 12.8706 229.374 12.6958 229.017 12.6958 cv
229.017 12.1499 mo
229.584 12.1499 230.018 12.3809 230.325 12.8286 cv
230.627 13.2837 230.78 13.9414 230.78 14.7954 cv
230.78 15.6558 230.627 16.314 230.325 16.7617 cv
230.018 17.2095 229.584 17.4336 229.017 17.4336 cv
228.443 17.4336 228.002 17.2095 227.701 16.7617 cv
227.4 16.314 227.253 15.6558 227.253 14.7954 cv
227.253 13.9414 227.4 13.2837 227.701 12.8286 cv
228.002 12.3809 228.443 12.1499 229.017 12.1499 cv
f
233.468 12.6958 mo
233.111 12.6958 232.845 12.8706 232.663 13.2202 cv
232.48 13.5703 232.397 14.0952 232.397 14.7954 cv
232.397 15.4946 232.48 16.02 232.663 16.3701 cv
232.845 16.7197 233.111 16.895 233.468 16.895 cv
233.825 16.895 234.091 16.7197 234.272 16.3701 cv
234.447 16.02 234.538 15.4946 234.538 14.7954 cv
234.538 14.0952 234.447 13.5703 234.272 13.2202 cv
234.091 12.8706 233.825 12.6958 233.468 12.6958 cv
233.468 12.1499 mo
234.034 12.1499 234.469 12.3809 234.776 12.8286 cv
235.077 13.2837 235.231 13.9414 235.231 14.7954 cv
235.231 15.6558 235.077 16.314 234.776 16.7617 cv
234.469 17.2095 234.034 17.4336 233.468 17.4336 cv
232.894 17.4336 232.453 17.2095 232.152 16.7617 cv
231.851 16.314 231.704 15.6558 231.704 14.7954 cv
231.704 13.9414 231.851 13.2837 232.152 12.8286 cv
232.453 12.3809 232.894 12.1499 233.468 12.1499 cv
f
236.262 3.23877 mo
237.611 3.23877 li
f
236.262 3.23877 mo
237.611 3.23877 li
@
372.342 3.23877 mo
370.992 3.23877 li
f
372.342 3.23877 mo
370.992 3.23877 li
@
216.084 .692383 mo
214.341 3.41504 li
216.084 3.41504 li
216.084 .692383 li
215.901 .0908203 mo
216.77 .0908203 li
216.77 3.41504 li
217.497 3.41504 li
217.497 3.98877 li
216.77 3.98877 li
216.77 5.19238 li
216.084 5.19238 li
216.084 3.98877 li
213.781 3.98877 li
213.781 3.32422 li
215.901 .0908203 li
cp
f
218.645 .0908203 mo
221.354 .0908203 li
221.354 .671387 li
219.274 .671387 li
219.274 1.92432 li
219.373 1.88916 219.478 1.86133 219.576 1.84717 cv
219.674 1.8335 219.778 1.81934 219.877 1.81934 cv
220.443 1.81934 220.892 1.98047 221.228 2.28809 cv
221.563 2.60303 221.731 3.02295 221.731 3.55469 cv
221.731 4.10791 221.557 4.53467 221.214 4.83545 cv
220.87 5.13672 220.388 5.28369 219.771 5.28369 cv
219.555 5.28369 219.338 5.2627 219.114 5.23486 cv
218.89 5.19971 218.666 5.15039 218.428 5.07373 cv
218.428 4.38086 li
218.631 4.49268 218.841 4.57666 219.064 4.63281 cv
219.282 4.68896 219.513 4.70996 219.758 4.70996 cv
220.149 4.70996 220.465 4.61182 220.695 4.40186 cv
220.919 4.19189 221.038 3.91211 221.038 3.55469 cv
221.038 3.20508 220.919 2.92529 220.695 2.71533 cv
220.465 2.50537 220.149 2.40039 219.758 2.40039 cv
219.576 2.40039 219.387 2.42139 219.205 2.46289 cv
219.023 2.50537 218.834 2.56787 218.645 2.65186 cv
218.645 .0908203 li
f
224.565 .54541 mo
224.209 .54541 223.942 .720703 223.761 1.07031 cv
223.579 1.42041 223.495 1.94531 223.495 2.64502 cv
223.495 3.34473 223.579 3.87012 223.761 4.21973 cv
223.942 4.56982 224.209 4.74463 224.565 4.74463 cv
224.923 4.74463 225.188 4.56982 225.371 4.21973 cv
225.546 3.87012 225.637 3.34473 225.637 2.64502 cv
225.637 1.94531 225.546 1.42041 225.371 1.07031 cv
225.188 .720703 224.923 .54541 224.565 .54541 cv
224.565 0 mo
225.133 0 225.566 .230957 225.874 .678711 cv
226.175 1.1333 226.329 1.7915 226.329 2.64502 cv
226.329 3.50586 226.175 4.16406 225.874 4.61182 cv
225.566 5.05957 225.133 5.28369 224.565 5.28369 cv
223.991 5.28369 223.551 5.05957 223.25 4.61182 cv
222.949 4.16406 222.802 3.50586 222.802 2.64502 cv
222.802 1.7915 222.949 1.1333 223.25 .678711 cv
223.551 .230957 223.991 0 224.565 0 cv
f
229.017 .54541 mo
228.659 .54541 228.394 .720703 228.212 1.07031 cv
228.03 1.42041 227.946 1.94531 227.946 2.64502 cv
227.946 3.34473 228.03 3.87012 228.212 4.21973 cv
228.394 4.56982 228.659 4.74463 229.017 4.74463 cv
229.374 4.74463 229.64 4.56982 229.821 4.21973 cv
229.996 3.87012 230.088 3.34473 230.088 2.64502 cv
230.088 1.94531 229.996 1.42041 229.821 1.07031 cv
229.64 .720703 229.374 .54541 229.017 .54541 cv
229.017 0 mo
229.584 0 230.018 .230957 230.325 .678711 cv
230.627 1.1333 230.78 1.7915 230.78 2.64502 cv
230.78 3.50586 230.627 4.16406 230.325 4.61182 cv
230.018 5.05957 229.584 5.28369 229.017 5.28369 cv
228.443 5.28369 228.002 5.05957 227.701 4.61182 cv
227.4 4.16406 227.253 3.50586 227.253 2.64502 cv
227.253 1.7915 227.4 1.1333 227.701 .678711 cv
228.002 .230957 228.443 0 229.017 0 cv
f
233.468 .54541 mo
233.111 .54541 232.845 .720703 232.663 1.07031 cv
232.48 1.42041 232.397 1.94531 232.397 2.64502 cv
232.397 3.34473 232.48 3.87012 232.663 4.21973 cv
232.845 4.56982 233.111 4.74463 233.468 4.74463 cv
233.825 4.74463 234.091 4.56982 234.272 4.21973 cv
234.447 3.87012 234.538 3.34473 234.538 2.64502 cv
234.538 1.94531 234.447 1.42041 234.272 1.07031 cv
234.091 .720703 233.825 .54541 233.468 .54541 cv
233.468 0 mo
234.034 0 234.469 .230957 234.776 .678711 cv
235.077 1.1333 235.231 1.7915 235.231 2.64502 cv
235.231 3.50586 235.077 4.16406 234.776 4.61182 cv
234.469 5.05957 234.034 5.28369 233.468 5.28369 cv
232.894 5.28369 232.453 5.05957 232.152 4.61182 cv
231.851 4.16406 231.704 3.50586 231.704 2.64502 cv
231.704 1.7915 231.851 1.1333 232.152 .678711 cv
232.453 .230957 232.894 0 233.468 0 cv
f
201.46 87.7271 mo
201.46 84.5005 li
202.041 84.5005 li
202.041 87.0342 li
203.553 87.0342 li
203.553 84.6055 li
204.133 84.6055 li
204.133 87.0342 li
205.981 87.0342 li
205.981 84.4375 li
206.562 84.4375 li
206.562 87.7271 li
201.46 87.7271 li
cp
f
201.243 82.7017 mo
206.562 82.7017 li
206.562 83.3315 li
201.243 83.3315 li
201.243 82.7017 li
cp
f
204.49 78.1108 mo
204.798 78.1108 li
204.798 81.001 li
205.231 80.9731 205.567 80.8472 205.792 80.6094 cv
206.016 80.3784 206.128 80.0566 206.128 79.6367 cv
206.128 79.3984 206.1 79.1606 206.044 78.9365 cv
205.988 78.7129 205.896 78.4819 205.771 78.2583 cv
206.366 78.2583 li
206.464 78.4819 206.541 78.7129 206.583 78.9507 cv
206.625 79.189 206.652 79.4336 206.652 79.6714 cv
206.652 80.2871 206.478 80.7705 206.128 81.1274 cv
205.777 81.4839 205.295 81.6592 204.687 81.6592 cv
204.063 81.6592 203.566 81.4917 203.195 81.1553 cv
202.832 80.8193 202.643 80.3574 202.643 79.7837 cv
202.643 79.2656 202.811 78.8599 203.14 78.5591 cv
203.476 78.2651 203.923 78.1108 204.49 78.1108 cv
204.309 78.7407 mo
203.965 78.748 203.692 78.8457 203.482 79.0278 cv
203.279 79.2168 203.175 79.4683 203.175 79.7769 cv
203.175 80.1265 203.279 80.4063 203.476 80.6162 cv
203.671 80.8262 203.951 80.9526 204.309 80.9805 cv
204.309 78.7407 li
f
203.469 74.1011 mo
203.188 73.9468 202.985 73.7578 202.846 73.541 cv
202.713 73.3242 202.643 73.0649 202.643 72.7642 cv
202.643 72.3721 202.782 72.0645 203.063 71.8477 cv
203.343 71.6304 203.741 71.5186 204.252 71.5186 cv
206.562 71.5186 li
206.562 72.1484 li
204.273 72.1484 li
203.909 72.1484 203.637 72.2183 203.454 72.3442 cv
203.279 72.4771 203.188 72.6733 203.188 72.9395 cv
203.188 73.2681 203.301 73.5273 203.518 73.7158 cv
203.734 73.9048 204.028 73.9956 204.399 73.9956 cv
206.562 73.9956 li
206.562 74.6255 li
204.273 74.6255 li
203.909 74.6255 203.637 74.6958 203.454 74.8218 cv
203.279 74.9546 203.188 75.1577 203.188 75.4233 cv
203.188 75.7456 203.301 76.0044 203.518 76.1934 cv
203.734 76.3823 204.028 76.4731 204.399 76.4731 cv
206.562 76.4731 li
206.562 77.1035 li
202.733 77.1035 li
202.733 76.4731 li
203.328 76.4731 li
203.098 76.333 202.923 76.1582 202.811 75.9556 cv
202.698 75.7593 202.643 75.5215 202.643 75.2417 cv
202.643 74.9619 202.713 74.731 202.853 74.5347 cv
202.992 74.3389 203.202 74.1987 203.469 74.1011 cv
f
204.49 66.9902 mo
204.798 66.9902 li
204.798 69.8809 li
205.231 69.8525 205.567 69.7271 205.792 69.4888 cv
206.016 69.2583 206.128 68.936 206.128 68.5161 cv
206.128 68.2778 206.1 68.04 206.044 67.8164 cv
205.988 67.5923 205.896 67.3618 205.771 67.1377 cv
206.366 67.1377 li
206.464 67.3618 206.541 67.5923 206.583 67.8301 cv
206.625 68.0679 206.652 68.3135 206.652 68.5508 cv
206.652 69.167 206.478 69.6499 206.128 70.0068 cv
205.777 70.3638 205.295 70.5386 204.687 70.5386 cv
204.063 70.5386 203.566 70.3706 203.195 70.0352 cv
202.832 69.6987 202.643 69.2368 202.643 68.6631 cv
202.643 68.145 202.811 67.7393 203.14 67.438 cv
203.476 67.1445 203.923 66.9902 204.49 66.9902 cv
204.309 67.6201 mo
203.965 67.6274 203.692 67.7256 203.482 67.9072 cv
203.279 68.0962 203.175 68.3481 203.175 68.6563 cv
203.175 69.0063 203.279 69.2861 203.476 69.4961 cv
203.671 69.7061 203.951 69.8315 204.309 69.8599 cv
204.309 67.6201 li
f
204.252 62.7773 mo
206.562 62.7773 li
206.562 63.4072 li
204.273 63.4072 li
203.909 63.4072 203.644 63.4844 203.461 63.6245 cv
203.279 63.7642 203.188 63.9741 203.188 64.2539 cv
203.188 64.5972 203.301 64.8628 203.518 65.0591 cv
203.734 65.2549 204.028 65.353 204.399 65.353 cv
206.562 65.353 li
206.562 65.9829 li
202.733 65.9829 li
202.733 65.353 li
203.328 65.353 li
203.104 65.2061 202.93 65.0308 202.817 64.8213 cv
202.705 64.6177 202.643 64.3799 202.643 64.1143 cv
202.643 63.6802 202.782 63.3447 203.056 63.1206 cv
203.328 62.8965 203.728 62.7773 204.252 62.7773 cv
f
201.648 60.9019 mo
202.733 60.9019 li
202.733 59.6069 li
203.224 59.6069 li
203.224 60.9019 li
205.302 60.9019 li
205.617 60.9019 205.819 60.8599 205.903 60.7759 cv
205.995 60.6919 206.037 60.5166 206.037 60.251 cv
206.037 59.6069 li
206.562 59.6069 li
206.562 60.251 li
206.562 60.7407 206.471 61.0771 206.289 61.2588 cv
206.106 61.4409 205.778 61.5317 205.302 61.5317 cv
203.224 61.5317 li
203.224 61.9932 li
202.733 61.9932 li
202.733 61.5317 li
201.648 61.5317 li
201.648 60.9019 li
f
204.637 57.0386 mo
204.637 57.5498 204.7 57.8994 204.813 58.0952 cv
204.931 58.2915 205.127 58.3892 205.407 58.3892 cv
205.631 58.3892 205.813 58.3193 205.938 58.1724 cv
206.072 58.0254 206.135 57.8223 206.135 57.5708 cv
206.135 57.2207 206.016 56.9404 205.764 56.7305 cv
205.519 56.5205 205.19 56.4155 204.777 56.4155 cv
204.637 56.4155 li
204.637 57.0386 li
204.378 55.7861 mo
206.562 55.7861 li
206.562 56.4155 li
205.98 56.4155 li
206.219 56.563 206.387 56.7446 206.491 56.9546 cv
206.597 57.1646 206.652 57.4307 206.652 57.7388 cv
206.652 58.1304 206.548 58.4453 206.331 58.6763 cv
206.113 58.9077 205.819 59.019 205.449 59.019 cv
205.022 59.019 204.7 58.8794 204.477 58.5854 cv
204.259 58.2983 204.147 57.8716 204.147 57.2974 cv
204.147 56.4155 li
204.084 56.4155 li
203.798 56.4155 203.573 56.5142 203.412 56.7031 cv
203.259 56.8916 203.175 57.1577 203.175 57.501 cv
203.175 57.7246 203.202 57.9346 203.259 58.1445 cv
203.314 58.3545 203.392 58.5503 203.489 58.7393 cv
202.908 58.7393 li
202.824 58.5151 202.755 58.2915 202.713 58.0747 cv
202.671 57.8574 202.643 57.6475 202.643 57.4375 cv
202.643 56.8848 202.79 56.4717 203.076 56.1992 cv
203.363 55.9263 203.798 55.7861 204.378 55.7861 cv
f
203.321 52.2729 mo
203.279 52.3428 203.252 52.4199 203.23 52.5039 cv
203.217 52.5874 203.202 52.6787 203.202 52.7769 cv
203.202 53.1338 203.321 53.4063 203.553 53.5952 cv
203.783 53.7915 204.112 53.8823 204.546 53.8823 cv
206.562 53.8823 li
206.562 54.5122 li
202.733 54.5122 li
202.733 53.8823 li
203.328 53.8823 li
203.098 53.7563 202.923 53.5815 202.811 53.3716 cv
202.698 53.1616 202.643 52.9028 202.643 52.5947 cv
202.643 52.5527 202.649 52.5039 202.649 52.4478 cv
202.656 52.3989 202.664 52.3428 202.678 52.2729 cv
203.321 52.2729 li
f
206.911 50.019 mo
207.359 50.2012 207.66 50.3765 207.8 50.5439 cv
207.94 50.7124 208.01 50.936 208.01 51.2163 cv
208.01 51.7202 li
207.485 51.7202 li
207.485 51.3491 li
207.485 51.1812 207.443 51.0479 207.359 50.9502 cv
207.275 50.8521 207.087 50.7476 206.778 50.6284 cv
206.498 50.5161 li
202.733 52.063 li
202.733 51.3979 li
205.729 50.2012 li
202.733 49.0044 li
202.733 48.3394 li
206.911 50.019 li
f
202.846 42.8042 mo
203.44 42.8042 li
203.356 42.9858 203.286 43.168 203.237 43.3569 cv
203.195 43.5532 203.167 43.7485 203.167 43.9517 cv
203.167 44.2666 203.217 44.5049 203.314 44.6587 cv
203.412 44.8125 203.553 44.8896 203.741 44.8896 cv
203.889 44.8896 204 44.8335 204.084 44.7217 cv
204.168 44.6099 204.252 44.3857 204.322 44.0498 cv
204.371 43.833 li
204.469 43.3848 204.609 43.0698 204.777 42.8809 cv
204.952 42.6992 205.197 42.6011 205.505 42.6011 cv
205.862 42.6011 206.142 42.7407 206.345 43.021 cv
206.555 43.3008 206.652 43.6929 206.652 44.1826 cv
206.652 44.3926 206.632 44.6025 206.597 44.8267 cv
206.562 45.0503 206.506 45.2813 206.422 45.5264 cv
205.771 45.5264 li
205.896 45.2954 205.988 45.0649 206.044 44.8403 cv
206.106 44.6167 206.135 44.3926 206.135 44.1685 cv
206.135 43.8745 206.086 43.644 205.988 43.4829 cv
205.89 43.3291 205.743 43.2446 205.554 43.2446 cv
205.386 43.2446 205.253 43.3081 205.162 43.4199 cv
205.071 43.5317 204.98 43.7837 204.896 44.1758 cv
204.847 44.3926 li
204.763 44.7847 204.638 45.0713 204.469 45.2397 cv
204.301 45.4146 204.07 45.4985 203.77 45.4985 cv
203.412 45.4985 203.133 45.3726 202.937 45.1206 cv
202.74 44.8687 202.643 44.5049 202.643 44.0288 cv
202.643 43.7979 202.663 43.5811 202.698 43.3711 cv
202.733 43.168 202.782 42.979 202.846 42.8042 cv
f
201.648 40.9775 mo
202.733 40.9775 li
202.733 39.6831 li
203.224 39.6831 li
203.224 40.9775 li
205.302 40.9775 li
205.617 40.9775 205.819 40.9351 205.903 40.8516 cv
205.995 40.7676 206.037 40.5923 206.037 40.3267 cv
206.037 39.6831 li
206.562 39.6831 li
206.562 40.3267 li
206.562 40.8164 206.471 41.1528 206.289 41.3345 cv
206.106 41.5166 205.778 41.6074 205.302 41.6074 cv
203.224 41.6074 li
203.224 42.0693 li
202.733 42.0693 li
202.733 41.6074 li
201.648 41.6074 li
201.648 40.9775 li
f
204.49 35.5815 mo
204.798 35.5815 li
204.798 38.4722 li
205.231 38.4438 205.567 38.3179 205.792 38.0801 cv
206.016 37.8491 206.128 37.5273 206.128 37.1074 cv
206.128 36.8691 206.1 36.6313 206.044 36.4077 cv
205.988 36.1836 205.896 35.9526 205.771 35.729 cv
206.366 35.729 li
206.464 35.9526 206.541 36.1836 206.583 36.4214 cv
206.625 36.6597 206.652 36.9043 206.652 37.1426 cv
206.652 37.7583 206.478 38.2407 206.128 38.5981 cv
205.777 38.9551 205.295 39.1299 204.687 39.1299 cv
204.063 39.1299 203.566 38.9619 203.195 38.626 cv
202.832 38.29 202.643 37.8281 202.643 37.2544 cv
202.643 36.7363 202.811 36.3306 203.14 36.0298 cv
203.476 35.7358 203.923 35.5815 204.49 35.5815 cv
204.309 36.2114 mo
203.965 36.2188 203.692 36.3164 203.482 36.4985 cv
203.279 36.6875 203.175 36.939 203.175 37.2476 cv
203.175 37.5972 203.279 37.877 203.476 38.0869 cv
203.671 38.2969 203.951 38.4233 204.309 38.4507 cv
204.309 36.2114 li
f
205.987 33.9438 mo
208.011 33.9438 li
208.011 34.5737 li
202.733 34.5737 li
202.733 33.9438 li
203.314 33.9438 li
203.091 33.8184 202.923 33.6499 202.811 33.4473 cv
202.698 33.2441 202.643 32.9995 202.643 32.7192 cv
202.643 32.2573 202.831 31.8794 203.195 31.5854 cv
203.566 31.2988 204.049 31.1519 204.651 31.1519 cv
205.253 31.1519 205.743 31.2988 206.106 31.5854 cv
206.471 31.8794 206.652 32.2573 206.652 32.7192 cv
206.652 32.9995 206.597 33.2441 206.491 33.4473 cv
206.387 33.6499 206.219 33.8184 205.987 33.9438 cv
204.651 31.8027 mo
204.189 31.8027 203.832 31.9004 203.566 32.0894 cv
203.301 32.2852 203.168 32.5444 203.168 32.8735 cv
203.168 33.2095 203.301 33.4683 203.566 33.6572 cv
203.832 33.853 204.189 33.9438 204.651 33.9438 cv
205.113 33.9438 205.477 33.853 205.743 33.6572 cv
206.009 33.4683 206.135 33.2095 206.135 32.8735 cv
206.135 32.5444 206.009 32.2852 205.743 32.0894 cv
205.477 31.9004 205.113 31.8027 204.651 31.8027 cv
f
202.846 27.6665 mo
203.44 27.6665 li
203.356 27.8486 203.286 28.0308 203.237 28.2192 cv
203.195 28.4155 203.167 28.6113 203.167 28.8145 cv
203.167 29.1294 203.217 29.3672 203.314 29.521 cv
203.412 29.6748 203.553 29.752 203.741 29.752 cv
203.889 29.752 204 29.6963 204.084 29.5845 cv
204.168 29.4722 204.252 29.2485 204.322 28.9121 cv
204.371 28.6953 li
204.469 28.2476 204.609 27.9326 204.777 27.7437 cv
204.952 27.5615 205.197 27.4639 205.505 27.4639 cv
205.862 27.4639 206.142 27.6035 206.345 27.8833 cv
206.555 28.1636 206.652 28.5557 206.652 29.0454 cv
206.652 29.2554 206.632 29.4653 206.597 29.689 cv
206.562 29.9131 206.506 30.144 206.422 30.3887 cv
205.771 30.3887 li
205.896 30.1577 205.988 29.9272 206.044 29.7031 cv
206.106 29.479 206.135 29.2554 206.135 29.0313 cv
206.135 28.7373 206.086 28.5063 205.988 28.3457 cv
205.89 28.1914 205.743 28.1079 205.554 28.1079 cv
205.386 28.1079 205.253 28.1704 205.162 28.2827 cv
205.071 28.3945 204.98 28.6465 204.896 29.0381 cv
204.847 29.2554 li
204.763 29.6475 204.638 29.9341 204.469 30.1021 cv
204.301 30.2769 204.07 30.3608 203.77 30.3608 cv
203.412 30.3608 203.133 30.2349 202.937 29.9829 cv
202.74 29.731 202.643 29.3672 202.643 28.8911 cv
202.643 28.6606 202.663 28.4434 202.698 28.2334 cv
202.733 28.0308 202.782 27.8418 202.846 27.6665 cv
f
.3375 lw
372.342 112.589 mo
372.342 3.23877 li
@
236.262 112.589 mo
236.262 3.23877 li
@
236.262 112.589 mo
372.342 112.589 li
@
236.262 3.23877 mo
372.342 3.23877 li
@
290.903 150.639 mo
290.903 150.606 290.903 150.584 290.717 150.398 cv
289.347 149.017 288.996 146.946 288.996 145.269 cv
288.996 143.362 289.413 141.456 290.761 140.085 cv
290.903 139.954 290.903 139.932 290.903 139.899 cv
290.903 139.822 290.859 139.79 290.794 139.79 cv
290.684 139.79 289.697 140.535 289.051 141.926 cv
288.492 143.132 288.36 144.349 288.36 145.269 cv
288.36 146.124 288.481 147.45 289.084 148.688 cv
289.741 150.036 290.684 150.749 290.794 150.749 cv
290.859 150.749 290.903 150.715 290.903 150.639 cv
cp
f
293.423 143.877 mo
293.423 140.403 li
291.845 140.524 li
291.845 140.864 li
292.611 140.864 292.699 140.94 292.699 141.477 cv
292.699 148.009 li
292.974 148.009 li
292.984 147.998 293.072 147.844 293.368 147.329 cv
293.532 147.578 293.992 148.118 294.804 148.118 cv
296.107 148.118 297.247 147.049 297.247 145.642 cv
297.247 144.25 296.173 143.165 294.924 143.165 cv
294.069 143.165 293.598 143.68 293.423 143.877 cv
cp
293.455 146.759 mo
293.455 144.502 li
293.455 144.293 293.455 144.283 293.576 144.107 cv
294.003 143.494 294.606 143.406 294.869 143.406 cv
295.362 143.406 295.757 143.691 296.02 144.107 cv
296.305 144.557 296.338 145.181 296.338 145.631 cv
296.338 146.036 296.315 146.694 295.998 147.187 cv
295.768 147.526 295.352 147.888 294.76 147.888 cv
294.267 147.888 293.872 147.625 293.608 147.22 cv
293.455 146.99 293.455 146.957 293.455 146.759 cv
cp
f
300.794 145.269 mo
300.794 144.414 300.673 143.088 300.07 141.85 cv
299.413 140.502 298.47 139.79 298.36 139.79 cv
298.295 139.79 298.251 139.833 298.251 139.899 cv
298.251 139.932 298.251 139.954 298.459 140.151 cv
299.533 141.236 300.158 142.979 300.158 145.269 cv
300.158 147.143 299.752 149.072 298.394 150.453 cv
298.251 150.584 298.251 150.606 298.251 150.639 cv
298.251 150.705 298.295 150.749 298.36 150.749 cv
298.47 150.749 299.456 150.003 300.104 148.611 cv
300.662 147.406 300.794 146.189 300.794 145.269 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (006x004.eps)%%CreationDate: 26/05/15 5:52 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6kB\mDdkJ9Z^c?p^Cp5X9%aLI"S9$SHf]G'r9UP"2pW%LEX&A.^2][HpGBU1'k8FcZC8k04.TMa5;EDMI)7JkUp?-V^^FMlQ%:m6cE-5AmBWg];GVg"WnNP<"u?;kDQ$K_dr(/\clY8J\",31UMeBiR(cMR+/d2nhO3q&&W^XQt?HMs+>l0he;GuXZ/:MS"`7]Y)8%:NF'IHiHj:MgO_^[Fo:o42%9?+=W1n!J$p:Z9<$4lGpf7[mk9^.@VZ7jVM1`<?KbFWeKmE][qUN%I9!P<,&,ApOaO]iIUu[^L&f%%"4Rp9$$<=lFEbMFLnOCTben_dZe6GmC4g,rrKO-Qp,_$%>43ED/ti5$;+g,N7%R[BI_)Z8TRgf&,9!Ne<W$Q\V^51fE@FIH%n&"K%)Gib5*OA>hpoE*CcUr5e;6)X%KL3Z7i1g$3W6:p0#QjfI:X4`t7dmA5*$FTY!1AL.8"Ft$Kc7;SYI82<Zj3N2qi_`(XS"ar"2sh,%CC#>q8K+Z6`.Gn\hi/\N*].iaD6trXf,2\B`-g#Joq\H(Gu9ofUm.3W6V304?mO]\8L%b=MR$\K0A<%o'rVd\A52<E;5]4m-b\YT%Zb9fnQR.o9FJm`lgC2W/Ud71`Dt4,,^WHI&BHmim#)tP.#*Q4=O^4"jjGtoa".*@ckh<Ek,+g8$8JP6cOP**dd4X#T[?[Pf#SLUm%J!8W:%m\DCoM:e3;q'[R1uYc?@Sg3^^Tn8DAJq)^13m'*_V=-'9nQ?4#/;u(8nf3.d^3bSeS1IK`\aBJBnGQa?RTKS:^XqQ-^6*G%TN%lnDjF#bUf;q$eLE\`<](?CY#aM,[7]:!(__9'5,:X<']*BHAL)*]$)O:jn-Pqa:TUJT)>"1uTa^Q!5,$km''*?^'7@YMkRi2/%9nZ9;B'9hS6GMJ45bV!#-D;c#+%ei6i"O74WrQZ-!R(k0#o*c3i01fFH;:[l\.dXgl[V"U&M$0H5q2">HpUP\K;@,[);uG1Ki68^%`aM1Knh0PF52d=MNpn,S$0D5=:FHDFK29?Q+shoFUjZp=aT,_ojG38ai('^UV$Plo>tE9Jp4,0>MmQ,lB)Ei!fKUbd]jm33]n<dc%YK9`,++-C(,2^a365/oBHpS_7>p@N=RuJFT3RRtkDC37p<g^5pk!W+'/?j-1GY70pYTm*pm1Qu2k):OdDZk84`EFXsPP<1?nrI0R%7OF70_K/$_;F;3!,P#W2G4JBPbsn`sZ5B-KfdG4mjPH1eGh\N-2UZFp1Fh.,!/qa@iGG&&$s/0:CR<ODh@rBZs+A'S.uNtk,`sJJ%?h+`i1&,D]-3"Tl<@&4R0DVO3jL>)Sr%ecPgFuaa#5qUSOsfs1no&lEr3lWgIu/9X9Ha%9nukq7^[8esT4%UBqAa_bT7jE/2u?&C%UAd_V8PuO"6)dnCL0fW7MFOu^ACW31N1O^/)?!%Ni<^q6A`7M$[/Yp]ptro,p3,@uAYI>WX&g]u,AkJ:hs5,l]5eM`/rM4T/!3#^%"odnp<41R6$W[&TrJ#&c<j,KGB[3OhLnVU_TWV91jOad>&tB4Ri,.D-C>'sbCb$L6BQOrj)G)OM(QB^gcErR?Q,C4)CNX$'-ou)^%0U=2Q1'2a<s,WahgU%(i!a3?f6=U>\/\+O$<_VGW>o&]i8M;ef-DS+G&ZA8:d5R9?J?UdCJ-lu7R<BP9D5c(&,EnmVlGSC)Vc;+s%4t,b<<N9)F)PBt4`i(F\p2anoKM#(1M5dX[[%dMS^T%F(693DA(5A93KBZ7)rf>pAartIr))lP\9@?4^6"n"b?BDXi2:f4d.X`M?%*)7j\(Or2)-]s]/$`;[lUbo-VObQL0bqr*-K1RQ>$N;gq-uH@alDh.]Z^tTN!U5ara'^6mg=U@LoqIgi@;>;;`is$C!L8lT[K7DQ%7<^bIDP8plFRkS\dF(-Z3s[,s3CIE^CKt)=a;QocPuN=_Zfi6)#1o16[Sr&k2BYs5Go]b=-?Y.%!e$hSdu;<WeQ\^l[R0Ji.0ig&%nsYs)@-K(4?E"WrA\2b&/W*<'fpiirVlDA,iR(0QAid'45:?#'[,qK]9i[Ztj;Vc'9"cG2''5N0].g;V&kfSUiNgN]0@d1jVK6,q%&fkKJ27nR:X1W?#8h^jJP_?T#ii#qLZr_[T8Mlc"A<"$6b8HLSK8jN\CD\qS1<rb6C*e1_i(0hF"hIlXWK;."1D*emZ:X3e4R4t<%;m\A*oF/p34kgUL8iB]&bQ&rF^1R!;4:07aH<?rO7"0&9.7e%PQo@HL/eJN[>rK"U&]`EpEAjk.L;s1(ZlnD'BYVC'99kd9P#\>g%fS'&>IPDfG3i@N]-9Wh5X]",""W[n;,I88H[dG+O77Y$<H!Xr)'Jsimr9oq+90]XE<%LUMDl`Td+og:SdohuU9QH(Z<?ci?U+oO[%91=L]r/]]Ys$`MXOn=8':S(\eE4!p.R9h,5KZGL.bqRE40<!'pbn@.8[I&A$onM9YMrre3KBIR6+^rt%PbTIB1.k)c?>g_T\=rBG%/[H$]jtB19VAkmB3U=&c&*UL_M2:&ffWF\tNbKm+R33u`[cuGJOR[jnkmT('L31jnr]-GOn[hJ,[V]^p/1jSi<GQ3A>*7K)0Es'W%A8gd7:&$l8fhX)](7C-_b@\&f!jS<ld>`:>9]VV$:fI\-g-P"');2tUH])Q;7Or3-jp9Lp<$U,'Suar_`pbo$#-X>n3'omC7!f,7%"Cgg33lnm4*qr++g:t`8[7a?\.*E@"4g!V-hdG%9Dd*cF-\_+c/<O'j?"qn6AkKe&3^427m^$TlBs6"NI$/-nGPpNr0c5(*?l8om%3UWQgbr,]?'?Bm)nT*>%U.7;YcEOq4robU_`Hp^LOhC&2hGLQ=akNH-q]MBP:k8N3@b;YWo!N'g)d#tF<U2N*j<8ges($Vsh_$iO%3kZX4FTS\Ps(\o%?*7?=;JXmJ2mlsN]^!sHX^16=1#/f)Yk])];F<:HlaC46.W+hS>spCE$81=Q+J8`/-pg;/_,kZheS*S3<o)i7%'6+']YOCHk_YUt,G&Q%58mZ[%/ZW(<,HGtp`_\)`mqC_q^X,/Y'*=0%6jpM/.eX)H\lMXArt`u!Irk"R>-$3Om+&[Sc$->q4J#b/%O_8Y:lgLIT:93(JZ/pgpSCW"=k'O.KnTTK0p^*r0W:A8Of9%1bm:Kk_q<>aWDXuefens>+#@CJ9o"qD'I6ed=f<NNB_91@T:LI=G%n9:q\:D=;mSc?(eO5rnWo742TD:fahAWqi.g.rr]9,'"I5@)bR>!toQ,Qt[upl3"Y-eQl*6%Z47$H_&;d>r_JjUVFk-RfDEUZB=V%OK9\rm<Jb6&9$lk!`=<FM.?XpMuI/o;3u+s69BHrCGh43@k:C4&q2@JJ5\ZeZ;,fDSiGQ7)I[d-+lOTENi1W&+)ldNGU3^X&J6Rm%k5V/`<07RP;`Vg^/Q%]LrM@;Y,Bgr-juZD7f)$Ed(=csS]MWH)Ad;GMI47$WXV-dg1cOSo6,Ba0[FOO6:-Ll<%9g&VHZXMfWAeep%RFsW<*m*'RTEeDEk.a-_2Cbp>+)N9Ij?;tpJ(7^i>/3fIp/![fNsC/Yl-hu(f;k$/3AL;C$u0oQMocPBa$\dg>-D(UCVg")rkAJj%s2T-Shk\,h?0;*dfrFcbD-Fq:'"EO,DXB==L''[tLEDMuoj96J)JD_[AcKr4NSGg-`pc`Qjf_KK1\:#5$Y!+ceYagNZh2#U#.kD@%%)J"!Fma\1+*;u2Xke'rne]>$V4c@as)-?(l.#..)ui)'1$h'CA$(N@iA'ac=Pqu(GfQ?Ln*;(QMgnV3@LSQPZR1K!,\Q$3+92.d%C^078Rd^9KR/V%p/ipo,HNS1OrE&^7M=O`Cq=tbCr.qA7f3s^l[<MWso$4H]A]9.fota^C[q+==$aM,YbIU-)+77V9Tfo]i3<-U:%oXC`<&h\?DkOuZk2uiR9c!+h2m&.b@a+3OR%I[Q-YheRAH[7R'JUbdPMrpo:Qd<(gRrG6X4;WO`U8Z1g9^,X6A$M.oXo2>'&"E<q%BEp+4MFf=KK%E)ILUHj=YkHa@Sp%[V=*Fp0Ic7ZckVmg;23O;crsk3WH?2o0CUT[a^R^WW`^6r^W"j;+A^ka>Fd'L>DYC]Eg>>E.%hRBQU]md4FGjEk*FW-pY%7pS`+c("rm53RMo1&&OF&&MQ-KiTeVr*0Yn5GI^U`5&Se9+^O?GqP;3WhTg+PT5=>eNNOSme)k9DkgG%Hq,_uU4:B;%iT^CT"F'9<IfoaapB6e6';Nm]k!K"V"7Z_f7g^P'bT+XZ3:go>9kKE\);/%fDM79H^C4r,u#!eatS$ZcoX>&"qtYL%H:_eP>C3hI8!\6kpSepp5%i_LBZY*aSLCM3qr*Ejo#M``fL!%sruG2d/YM;f&;i+kpbWL11Q8N3>702?0A^Irg*L#p!bmI&kW==e%FfjKdIj(f/`CL0r>uZBL7&g5fqN)R'F,IR:h2G4MAZ*_bmme%lpiWq#,^SQ]:`D6Chnk>2ru*iEpY,;[J#gh#56O4F.i43>:7Fj%%dNs^NZD^3h#n0.,;@H9\``Xj&'<r>)0HkB%3h4ERN!/X+ktO3DrPoYKAtdME).HEX^K\T;BZ*qemu:fRZP?X\pV^(c<s5U2HO?79%aO-g!Y/`*u6?63DK[BH48H5G,=STR?_-crrVB*6L;cQs0lEI+3"3G$<h&mGlMfO+[)@t1"<n"'W)Ibrt]64.VA%S,sGt(d)6=/RY%e*l:&FkCF`bNKkpJ:nV"%A&71>Kq'V]`W9Gs!E)P:\7E>C!sS4\[9RaT)?Pj1Ke5-_`K,AU=nMSVNrWL"rr[hYLXdPHHUf3(=5-]%[?`sL"<1u0fr]Bol$i5:fYYOedc'/`;/ZqoP'.&le#;BfAM[@=%'XS.8D<3c/6Ij]Q;<6fmVn7Ma+uYR#Ii!d7sQI2P2T1EM5Q'c%_i)fZct^!.ao7sbq.B>@BZ4n5\41W!IFRJ1Kja:+BGia+h,J96-3j-\1[dZFenXnadadf0#-Lig[6D!UAW<D8Xjua'4&F^*(5IO&%L$C)\4fL8'Q@)(5of+hE3<dV98Ue-1n)('M`2!n7+$t\9W`7tM%=5F*^KX'cdJMh"[UpOOm/P^=ZVPFha>FRQOIephDVu@W7.b<#%=9Y_>GC&pOI?a!<_Js3"k:u9k_05/PIl_LnCr"Y+/VXOrN6LL!FMGrS5c":!c!p+8]`rKlq@16;(L.T8Tk2JdIQ7):S)$$!E5$s_%Z*'3e[`TU>LKmZY'<@Gf$(EL>4)_@`,RMun(jr*3cBLAg"8-3tAEUTRS&r^phSi&aPVbg9Q<#7s:`csZ`-qYOW-:FoQ3f0h;<tns%cQd?7NYnu8K4i#$05nC9Df?%LE*6^]U='-?$2reF5H"Zb$)/S40LSpKC>Jeh5Y\30!#[\2Lj60<b4OTKgMVppZqRt%cMUb[(TTap%2gN"0WHjcoIf=`XnKA1/O,lD[E^_V;Zb=rrV$EQ/jK^@J:]sT7(Ieb0;0QO;8^niBKAOKJNUD7e/FrWN^>$uC)kSuLo\rg5XU/Kl%c7.U=>"DMtr%%SV&+]\X>EBOaOa=(_qrh.%$*V(,@WqLZb5A`<#;[m?!$*V8lM&?A/nn+2GhVmAM+eEBFRN/2e#a-J$M8sjl?(oF%!<W]$&;g(%#%*@]59[8dJJrAL<>e^$^"3Q5W@bq#YIp\-8p\2@!@@uZo&2O0]JTpY[B?"%Nbs,/$5lQ1%BT.AZ*XMl@JC</%:m(g%_p8<Gg?nSR""\!Bm13C-GdgoO`rq:M8`-Ui&SadH@7[c8=F,Xe?s[R>g4?'Y&L-=N=i6H8LaYtWaMq8@@0LMmBIK$N;1@b*28'/$%(#oG>PKg$3m7X*mAV91EkO3>ealt8\oG@m8\OF$bkVk`\@<4TiL5jlZGo;g?_eh7&0D;#O`H]6hR$i9*8m=%^Tr_aUoMIk]Btr2E%6%]fmoscTWS:g(&7sf-uU9!,S*Ib<Xfq!R5I&;(^+,!ucO-h\#cB!ah3+n>i6Q3;&I/?!.m\'s!(HfFjFaIL8JiCj'+QP*a<S)j2%F$^FQWdP'D&KATZba]%l6gO:%%M\0U[?Y,E'2:ODY>4P9,&'S!8ne,4RY+WtSP"PLlZh.hn<MEcm$/'KOrA2i.p<IY%lMo;MA)_(%a`lg&"#O2N>>kq#i;.!XN_ks]R_2V%<UPia[#';][X`/\G%V@?BQ512lKIt&D;dLjqd4<j=X/0A[mUMjeUk/2+,n>ChHh%$jp,Lm%I\9r0*Xpfl+[mBFjRe[pX=36^o<AnX%cs6>s4_4X2L6I)GFP\0i(2A3c#MU<aB.Oh]?U1cr99sL=5sS2d`l[1;09f:*&0D%L!&XK%Ei3!>K0P>Odmt1u:T[jiOPj4!RY3u9H1gS27uC3M\<f=2!#R!J5RVg.gYIGp0Dn^1[.#RH=RdBIAPZuEma?8Pr/+bK!R?g*,m[)/%BLqui%nZYs&h_Cd.gQFJL=\]C&Q"2FU="g5oigFOf'SL2\t*ZGEMOW;##Eg5VBbT]/NdnbS<63E,*4h11;;Ne`VeDq3Z>rB;i7)*%0Mi_1N<,!jZU=iP49P^q`J`1$StVGhTN\&?V%*)t?eW/A.gUj*UYO;[f0G(/P-T8>,$PT'XDdmMWk<U;fIhZ@45[ZVkNfPHLN'_2%4dD>acaBrU<o.+X/Jf2J'C"#p`qNXdH[Kb/EaMQ5kk-0m=rOPKUiJu7jj^ST,RK1t]*rR`9pN"s8mgj*+lpf'b3$h3L:hBEL3Bd!%goi<E<]g/;/Ca'b_X:'lPXtOp)s_F]>k`JmlbMk*(qXQBq.f)!\ZYQGmtL=\p$T,s?<hsr(Q3U/[Na&:lPcK7l!1EiUiP)5H`:Rd%fgm^.k:`K0#/D^fge1pIAXhSZ<-GM%KW\n^Xspo&TqGY\>:l&!e%WJl>DY2$lr%`&h^O5[gR\<uq*n^Rlm"@0W.E]Ah-C01loio@%Pe;BW%$rkq;Y)eDo7ao`P=S?a]@StEfP(Zbq7AChm:u[0pQR6O!MU(r&?4'h9D?Sf['GKo'/:q3\43*n['JM$,40,G4d3X-IZ;)8%SpgoG5)klb[.E"WjOG[<Ic%XIrVF++R-EV>GGAq0oDOBR:=lPohXEBeQ[,&^J&I<Z^2V=(<FKsnVbq;Sc<1$!]c0u>*ein@p6f!W%M0+6Eg0I:B1loqqqC:jUFq/p>?._A@Nr6tFeU)\1p7]kbP2m2VceQTUFg-C&<&u7/?('H?NLhaR\9P#Yl8pTQ-lQ?/'t[<[Q)jk]%hUD-:QMKl\UFS"_<W08^g$&%ujfra!HK!mn!B6H<]:)/n774GsZIJVdoMg<@DSH[&?B+Xp2XWu:7MBLcXSS2ffP^&#obFu_-WEh!%fX&tnlDHgirZdtY2(DRtSuT:td)k^iC:!0np//r8d@.;'HbK,jF@R`31c"ouX&5n;H@so+-LL-TElKtM2NO-r8())4n[n("oR9Lo%e<`U;FE+,(h*qX1e3k34X*<BJ4aacCq)#+rlJM:"ZX9J=iFqc'F>\qZ+jKHRY&+($*M7[:HEk%(q_icI\<$ld7N[qMMjNc=C;mN_%#J5uUL\ko-ZdJ)mp8;i((LLfSqq@#r/%!tMiVK4Zk2#6pSA)"@XfZq/g>/CkD=m[9B4c\WIF#X!#WJ4XAa`*L2C^B+B2;<pNBWn\%n$s@UXjC\[go9tH:SWu*nC2A.HT-9KVu(OE)R="N071l5-i<VFQbHQoq)!DA,ug<tqjrcca3-9<Xf(7fC38PR2i;3%>:U.ioG?6F%S"+U1RdBu]D%S]V/Sns@SNT+M?5H\#ctI<-VKr"/Rn1k`q_+;7g%Cq@(%s`\la5'Uk)udC.5]Fb8Yb$aigs'\k'I!,N>+4<a,Qh-%n60OERJ!sEE&G56\iZ[L7Q8;=AOiN\=0ASD^Z%`E\WtToZdCe[r3a!l1b6*5g+,'B9Rc_7DZ-X8=kT[3Y+4TZjIPNl?8'Fmeu68q%0'bj[]paH=XOtj):[cTIT523>?XS3i]q/-HO&U%ChWJaoKDD?ARQg]!cs9F)6[W<epV.13e+VD;D'JBE>X.%KH1ZN"8;lZ7r_L:D%cO9GF(WEc7U,7B"mec_:;L;@5J,4?ZZ0Lur;bWZDR<a;:om,<ES_m_blBA+f$brR>m]32Hl6#k%S69hrIG;MM1Q$H?^Fh/o/(<PC%:&:uRnpgL<?<Ob0N_o("rN+?@^AV\`g>2FMqL'r4T6WSr'`7^/DERg0NOjJFWqnp8Q^!J6hl#r1[u3V'MTr']pDt-!T2ph>D[kU%%qpOVckYJHm8t*r+pq3`s$C19Qf&r=BWpAotj]R(s4tYmJgnSoano\TMkk,pVfu:KrAe'/Nh7VW+iL_=GN:RHNbDR[N@29nV[WBI#%B%7\T^bq;[F5Zk[;Tnt"*V+UX>f&uP@+A5ZHsVDc)l2cC3O$N&1Is>2D6J,sc1GUd7TrnY?)FrZR-&%;NEI-Rq#1eDG*$LZNMaRT%d9](UjR!M#13.S8M]Z_8HaAFgqHFa"[[@K443J+Fbr<5@-@MK]1oegG??KH_r4Hr,$e+LVDkgtQqBPhp.TAWm0>&4"irpdRGH\_I%UNO:Jj^O6ce2Z=!i#8`Dcd1=)p1M,YkM3^']*Q(>488?^)Vo*f)U7.72N#Sf/pT<HX`<\h=FHH?":!cBfr*60-i]d`<;VP_hKSZ.%q[U?"K(&3jh<8#ln'ri[`Gi/=$bcb`(5Zt)@#nPRGhOiSoCs9d4u0Q=p[t0:P,-n)n>@:1:7M31Y2#W<)TJ\NqF0M+lAKN/kJuQp%(Ql!.mVCt*)=9`T^H1^ijatQoYsif@rF2H\]99Kb2S,=Q-$Am#]F#6nURPQTEq(BQ@)Lcjqh&n@0R"S\88Zm,d'CkX4q<.'8t(4i%N]ONJCd><2Chur"f"7`6,>s8]hKIkY;,1=;k>'?TL:g9_iale7L[XZsr[(#.l4j2e#A7qaaJ_IBITN31%/\-;*!oo8(\ZC$)Lm9.%hLqTpD=2\CPXn`K?A8hYFH:Ij_PXPM7r2F]8ka?kBt/S!'A]/=n3KoQ3[CT`mNKLK;A&b\5=50iJ\9TR%aJ8V>P.;)(qs(cqu]_W%)@(hC*LDG6&rTcof#;<6io9[(C05%EKRJ!rReJ1qXI[Dh@(I_[;]_>rpLB4'kL`;CP.'i(r@s/j<'=Agp!@t+iU^;oZ;r$5)jSIW%*`#%#+7mDkU-"F$Nt:WL.i*DYYfTmcjFbm@7=%J#p28PD.XAGh4XtG&ca.D2Y#/nQ,>QkOc0NQJ?pXs&Fq3X8mrKRMb"GTXeMth"%;so\PHNgm!h3kc?i!S=]3*:g[WF9,>o*E%aZ4EFF?*Q;sYT"p?5%K4F-t*6c_A'^F9C#8p/4mh^+`A9WY,\Q_9XMs4j)/jYb-+gY%7NIL;`Z992RG2-m-YLERQ'd2b#ML!*g+X]f82Fj-#JLUXm">nf:-47p.N:7TfZ'`kq8uIX/>P8L:gXDgSp5,=]_/s!M'Ns%h\$i[%X29Z-(;Q*0;3o^UI-8"-g/n)pbOi9kpGE5(/OjNYFRU)L1Co,RM94"L5ORq>7<Y4;XD;:&Cd$<mS9imP/L?5:g(SB);M35B+-]OG%.5j@<nZ`IRPeTe&Yq?[hbW2$75@R^tg\_Q\[=\oL_E[+>7H*1Ml-CWl^s0qsfgU6kP3&'+L`W%YZFaKl-6C,mm(.EUHg+7a@_>/L%K48-,7KgC`ij]IVge*Bp`St"?]5_)lF!!QRIJ]:elI^?Bb/*5ae4/QnmI+9_8"&$-k=aTFXp9)-`Il(,eFCC&Od<HEB'(J:c:6][%Q@3n]D,Y\KL:cD:+TrBj"ecRb`UcSF5RSjc;/,$s/`S!@XGbp(@INaqQ[EDicWpf^5Ia,#p;O[l6aEY)#J&1J)PsA2>Fl48UMkK%%nWglqM7WeoeR4&Ra:aFEeDQPr$kKpJ`Q?:dCj<nfL]()=%J0<=.tFN`3[E"fa]PbKfScL)h#2<hql#8XnVQ[.EegLL3PW)"f$BZ^%ZNgki2\GnQ8;D5i4:j#=rLN0BN)?4;H@/9[^Z;@+CLhsB`\&GIb@?A*$3QT)#I0dd>b3ad$dKp0miLJ[:7<E=j:`\&;EH[K/7IEG%akCMG:4+6I'gMRjqqX1tiX!^'F_tQMXqApn&%`a?6N,l9nA_?85BKZDZ?*/W%<,^>OW=9k@s3ZljSb3DFc<iVcTWlghmphf0oL_u%-7ma2;?b.6pU2Z)3a)[OE2p\cBlKNh>=5]GN&RVr*(1)[L7?Tr[OLT&?6[a6jX_F2NBI`V\>A(N-uWGV$fM^11(BE:Eo<Mpa6HjZ%[qghB7'1Pbi[Dj/F'Fg>#O\!uX:D(s;k@p/02M[c?DZ3I$G`nSRM+c%*Msq%Q:80c-FuH6Nb6JO@atOpHNSSJ?s/i:2t"1++`-^H%,2UQ(oBu;=KmO,H]\*d!j/B7t`ET%9d@h@X-c;U6YXm`9<9N[k`])dH0<2tN>&6-\mHtgt*fgos<=?'>"6u:^V8BA=q>7F052XMQ%l[uq&7AQ1U812JiSG$P$DfPFj3HS7X@be#;\$!`CDERkiW(b@S>iYE%je'O:`*n%Ll*JSSW6tJ!fb'4ps'A<NbhZ,R)C!DVD[9^e%Xh!2e8Mlkd!fnh#RRXop2;7hk'#^WAC:(d]O8(U:NJ>"4%#p6N:U!;]7'C7o[9$U/^j8gp4(GDQ'KemGP@6'S)QtB,MaH4ITsp:R%2gV`7LreToM2_V]\H"_bSh!nGO/.HE1';=IgLMn0EIJP%)'^Y7\1%=G3]40Bcg\N8nR$X&kVV.&O6K;!q#YqbD/1%[.6oHp_k)o;%`iCJ+$\YPr^RZjaSl(i#*,JY2pOOj-JL7q>ZCjIKfD`%Jfb!gpaZURefQ-K&8OT0[CGY.F>6JD\I()&`Z0t7acFM;'`hL\32c3lH%6omk,*e35)pETMEE@m<EHo?Y(K'1!aZP]hmU4"+?MrAt/[dTn*YIW$NpZ'MQO2!uuE+CRHOfQ:Nn7?^<(gq>A!<QVUB>^!.`-kb]%2@T'2j'?CQ]`=AfV"Cnqpb?mV27B&>EqIb-)p?YUI.865[uj.(W7n*_M_rAiSP-oC][nS+gSO%Bf-#BG(SXJhGbc-#'i?0f#FBL8%JmE,fr:7qI<6G*5*6Up;[VtJ!s1P1)G-3jqnm;P#O"\NB_E1Sk\(_ZJ$X^T(Z??=M-.;A>lG;EnKXd8u,K5lFecqYWI#2=sPH'"Y%jL`4P[gn7NKTbD"'9B]oPmgoE52/npg7Fmi2>2%(>lQUfgcg'.LSua?j_)Z)X$k4+Ze4N16&/5BQpM9gE!BSl4e3S(O[^?/F@9>.%SjO<a5mQ(pe&\4-A'HZZNd;HSkKjBFd*Z[GM0%lC)mqHb]Wq^]ae9*fTOVVY9U\<bS3^fN^.jn\(S!brH>FK[FD_iTg^iec?5Yt_%DKIAg[j0o=M-hUVks@8OKB@S?s#_E;-$ZbS"/u9bK(_tdW+d(tA#e5nh"9YL@WJXtQJM7Q.%U:;hhSL#f<`-tA(&I6@N+(Z:8jB_%:W$CBF9ntg5-spk9Q2Hu?K6Yp]K_DAl,](?4tO2C&lB->QXf]L>CRMbG&p-Ur.lDS;Sfar1(M\\8n!j_+JaCKk#`AW.<AV2_?IC-%hH(^ZlA%Omg`YloOPm5`^-Q7QUc1Wm\.X9ALe"W3h=BpNa_i.]+id6!MmF/:2^^?3SKq0GjeigpD#P9)n_X\j\KQe8^/;j.6S"m,%drk(&GSNa#Cu1uF0KG2kPAA_DDQbu\hdk%BPUrOG/'5.VF6(V-$kAe9mechRLfa[nfb"9u/8WC>jGe)QlO&iK\$)Zn%RX">o/""q%o"\L5@(o+^(jUMHYSelZ*oC1@rl_AfB]YkT2A<;"5/M:R%[=\>rD;5-Ei^H21kk:IO0OV9^>k/[HC0>Iq:DqtR(g"?N69"bN!_bH%2d0d$.5F263EJYCZ7ncnH7/+Ll4bW^S0f/<@UVbMKM]mX4gTQ`\*Vo8[-O2E'@iC[\Hri?NB#QRkP3tO3U7rJO=ItW6?%17SjiF!%obuT?^@C$Y3I@C1cG6U7=Z;YQk?CBBH5NWsV-uQ3K+CK23?9>AcCHa(cCl$tWlO-Yp*%C,C668mSmF%>T3phYNj.#8Y;I1.Ricc$%FIYFe!<HF#=7DWpkH5f*nfWs^l(@5#U3htILSQ!qVoLg)NcjKg=&)tLi&dROZH)[302ieZJ+d+lhTHsu7]2($*LEH_Z9K3^`sU9-%!S]'1EiYrYjaiR/!@;XHE)6aBXGBPXL7L(G3ec_0"sN)eaQ,i91-bZM&K)Z.o81QTNu=("C)HJKDE8@IH#=om+!l(B+X46WN?(Ec%MTcc4#'Wgl-9b33nN8oXPDGBV2K;+h<iaJPAK$4.8Br*pGn8Wq!_I^`+W#,k$(I&_H)R4!"2S\&+,&aL"rYV^8JLaXe^Ef;_U(I8%$L'NoW^QJ_cm08RFjpc_"O+rcCFbg0]8"R9DX<E-To_J#+'l06PR,U9S+tdCmK)[cM6UpKO%lV3h0P3,%g$/d8KHp+Uk?H*BP;FW%H_]FH[uP2p1-i_n+3)N[Mgo'j3;IO-CIqILLP&VS9h#T<LPqO40k!89Q"T'sL`8F&`$ZWZAk)'Qq/G3DK%&##$eL]naG7+'^@>,Z%,36X15)3[CHoMYNr+R]W4!2an69E@2RWqtjk-7XP=V&tceAWSX[G!9E$'e5r-dpTDf:>HZ,/Z1MA1q\YY#kjq!N"0Q&n>LJj*Ga0%Ra!/1G(tN0naLk%P0!lS)1;DF=D*bJ4U0#NrW0:64.a:Z>'(3?@ZQ3s,2t;hp@Y)L-W#NZ16&h6lOd!Ib,2R(q6#V\iFLM!:cjQD%(h/JkVK*S/aVHF_,[s1[5,]7si=l%RNfq)j+[.fS"^;<t&ieIfDqC,ehIdA=3+=5()i\8llC#P`p;e&.[[.?\Iut$SUrQpd/KC";%>+9g-9HtQ&,IKH$jr#k/Q]ZSMSW)(=he?Vs67p[-8;2GrBk4#+4d0NS67qVa<52q9_t1?T7f7&BL'>qiU"bNr_f4:=(u>J;[A*,u%SKnrqCDNCg.\&/!VO@j)T*$1SE?@+ScC8:l:5+Vi=&,+iQ\^UM,cP`-4!M[<KaTdI\_QJ^TZ*1@-c23T)^O2h,OtBj4P_45MG598%@Ef!+Mf_j`hk!*R.F"fsM8GH=`>hAVql_<"0.u/s[OC=>c-l8WTBY=:+1-\7I<$I.C#+c=oc85e.N\]f,'V&g]_@La*oID]2bq)1%>1^0Knn`_VWL@m4cdg3ue&k^"YY_?+DX)H@3qMojV70I[eLpShg\LSABtJ<aQOmDDfjp=b\RVj#k2ab+$HP;590N(-gh*(YS2qmP%c=FE7pQHgcr6.$uIP%GK;B<M_\(cEA]DbL3?Jl'E/(s<1gHWRc0%I-#2>S5Y@CNRZEfI[!1L"#I>E-4Xh;G;IlW-A:!K>gSQO-9-%'D&qt0!28Tpgr)lZa7F#nBj24md;5Hn*DDM_le'+l.%2oO70=C<VO\@CBW`3T&'6%=uh&aiI!@=J`kbXlAK#EB-X.(L+@*^J"q%u%ik^'3P,j^[<#uR&b<[X8hslqqUf6HMk$a.QJQj/'gs]ua=__0rDVKufr\(ZL[`P/eGCoR*,U2F!6or8WMjae)A+^e"<+M5`a16un%\Vbg!S<rnAk/qDp,j.$.P',iI6eA*]a`iYR]_sPG#WIc'%*ZM6ho<;scDrEGRLU9K>WE)'C]nRAd2mTX'lqnk&5(`j?]Mad1&rV%%jEQ:HZI9)iL</6<b%Et5-_&Bh6hb?4jOnW]\TB'?VG*LSk8!JqGB$A2S'EON0%.k*Z*NWlf.3be:$8E+VjgC>;:IXI2P$3+i??;V%B%&c!"I`!H*;e4+VXqs,o?o=VA^br#c&&E4ds:''=_k3>bGM%hTd,namC&Ql2P!o%SK3KR<]6KbGB),YWnDLNX.n(gVXm,'_;R2@%CcX6KH(Jh7;)XtH/mY]X1eos"=&k*EQ%`l"79nfB0Up?n'hJ80-l-V4`hZ^iCqAgERj=KK/!l9t^.gDQc7>7,qkh"tZK]"O(sNqd%1n0LMMmZaJQSUCG2P$3%S8]Q@2K:XG="[e"]qT"Ids5p]i/I(YZg%8QZ<XtSI\e\X,,X8mYIopc:$:%MpR1`[ZK[l-"ZV#5)6$@9%cst&fcX,+rRmOc`]s)9%UZGr.MEUW^_Zi1uril:b]WI*+hcCWihLs8QlD!FB%@.d"qd@I@;gApj=H&iM'6'5+1I30:9$HFYE`HDp%oZki7B`0`@6g,5!!Otlb$UDja.n)Rb@(ZW_5J:$ndj*Q\p\V*i\NFMJ?1\'ZrhClMYW17iq<R,?W>uEHZgXdDf_Z6_YITQ2]9qfN%4);J3?$$lC:!)jm]6O4:a1^W\F\72Y7<e:=DB@EbL#4`GZV;Uo20Wl>%(tfL]m(6?c!Ah?iOT7-8*8mW.l$F]?cLrQGRu%)-kXkj%mN,'-&"cHLlJ-]/i^>ibSVJrn>2r#^nWJc7=e+`51LLa+[W'128qXb?<\jDX"4sf7bjUQk7%Hk?0[]HJY`-gZ\20$#d+%!5[ZT-f%G#!PBrl^Z8@NiA"A*eq:PssDb*,.>GW[u;Qmbn'*=S#65o.fYRPEq0<l^9`1(=tmN4F_2cYo`p><3bj_SAn!]m%2.p-IuM52bi4W%'/&"f3Y`4+o!%RFnggJGS02XC-o:$\'>?R&/gHOBG9f=F#Wm'l>o`P$+W#(pZN8k7:K,>.EM%UEENVXh<!H=T@;o78N#N2QUXKL,%`*kV"=n_`'R?(2Y)1q;oJpJcW2&C"q`[LrL3k6@XhVOeE?B9.E`jq=OoUa":</0%^$qli^c=(r\SRL`niGSSkauD?8d8p1#iDa^)%,AS(oGML.TLAj-e`QW]L1S;bKVS($+iQ)IP'ASfg_j:kG.F3J\`k:8jh#?>`;Kt`Dmd(7P)t(Rdh*ar<]a<QP'NL2Wr_?qbN9%]I%/[>$>f6n%BR('7f^*Pp%oC6K$H0M8nr8`4-E'5@.<$H'?'=gn4>E3O&)*>U(>aH867koIAqar1o1(75>m`]4&I=764iGGYA-I4*1%1F)8>f9hMe`+7\3\<?Bs*\>l_'3+(Rk)<+flI"`j=d2eJ+1H>iX<$9`\4D)1D:CD>THpD$T'ne">D\^,H5f)*$0P@dRt`!)-/qn'%R"h<lI=.mhjSS9\.H0-ml/fG3q6&@Pp/pr,f=UfJ;u*&,FZ5lW*na85;p')3jU8d13/R8uAUZYB,MOo"-"7"Rd5-RYW@;*H80^C8%L-m!Xi^Eu^qE`-UmeUMj>:aV-p2A*[NW"e+k0h61HKTEB6f3&^8T*GQA$mp@Cs8-c`.J0(4N5rs7iL7SjuM=t,9O'QH[U+\LT6m=%YcX-2mTfR,>[ESC)I@@W\g$u/.TD*j^W\oZG"t9J54RL11L]Us5N-RYg6MUUh3kskE]&_35J)\fmk+S(G7Rn9+>rOcp!8EZ0Bi!j%DQgJ7b&Y^<2BQ*dWG1&$)s:u(bWia-eKXM!g8RlCg2'qQ0#.8E_n?10\hg6E`f'_g]<g1;T14fG7r"m4d;rBaAD`(e^B`BiNE.N1%<@:l2i+^L57T2!rMsCOJ3C:!uP&a-M:o!Nk\5J8^%T.&=1T8sT,jP&ninh(N/_>5@SYZ>\M)uS+il4PX<&NuH%4Xm(2AtHhZh<8+%VND.@8+mIuq9(M%<r&Lio%_j:S_Oi8[Ab6t0=eP$1D8&o[^F769+'hSLcZbIk]@EB!A/Uu>(j"X;7"\;p1QpX-WUtsj;"tu2_=8I%i[uhF=Tfj)Z;2u78iV`M^(Y:S<Y.m[;;s=M9.+,6(<+;RV?rU#W]Y/M3n75AiYXKE?;]O*&JbdBo#c?fF6pN2mZp5K_K`W+4rS#?%iT96[D<Hs#+,b8LS:>pf16!UGk6d5##G+3q.:]\'i=O^2"N$,`[<P8`3MKFlA^cH^JX,)#2jImGX&JYQCXr3r@)"Zc,hrRU=g8#/%[H_Fq5OQW\cBsL[4*'W'\'YSu]ejaRfko(bBAmJk3)Tdplo%Z-HL4\2mtBi48'PR";g,TWP]I?4ZeL(,7ZCf84-9$jX</StOH5DG%MLNlG.@&AmVMJ<!`_H[G^\!C_`SE9_<*A_(`h@Y1)6$Hckfq--G&h-,Eh^^nEd?Y@/7dit*lUHH/n9%p:jM]0fLWTXY;7-`7QkX<%)']MCC(?nH<6!2b*6#`U#LHn=a3F_p=F#oB:QCYC(c;OPoEKKR.Uq54kIDN]EY`'4*'it6HD>'Q7]!$7>T#[40PV)*"<TWH$SZ<*%@*%V;E#.@I_.L&UmS!As*^rTY_*;lf?`56*A8OcIPV;AKMWnBg7l8HH5C=oPlb90EkYaU:qiRe(.:8Snh"[6,\^+1NB.i:eb[UV)%V0nl#;H,\k!Oaf(-N%\YGk_'R3u_qiHi81(20u=\fOmR^me$tE]GQh)*;NpU^oh5qhl!hGS[5"6h<Pl'2Uk^ooaALa01LEP"M#'b%3Jh8%lfVi`gUI$iDD@WtVI?Z4rPlt?MSEBC5EdVS]mdf,qFu?e-,%oKZFFJqHi8Q&mVj[T\CWBY^OEO1Wo<^K7Er$+ls;osGSnPi%nW`)hme*n"pUhia+F>Zb]mdefoZKjr;S"s'eLs7Z5LR5o_6[Fs?-m$SqF//[DrR:2hcp'!\rSN<PimH:h]sGnY/SuJJLabUme$t>%QIE@q0/u+K7,TH-f.VAI!Ip;q0YtGO,G]G:l5.MXDP\]H?GGE&rOaq@ins&<C^u22V+i>NPKoFlbBr`meM$XKpUSm/fF78^O)Ku(%rB+i:KlK?V]mdf*K\XTaq-Lho>Q"WSpu:Bu1kKW<_g6,+p\G'NlBb&^)2A.bqSgZNRp)+8J#cpU4Vi4Ehdk;_e9h.ggrDAL]mdf,%qSg(-Dqs=3^5m3fHi9JB\<$IWc:j(EYFelM/_5b>Om_lMG,XrAel0*10DJS_&FVK&148#^Ib`2e'A_sjldVf:n+Cau,J)I4`kRQf%:,FKj5/,.&iT[InPO>tjp\O]=Zg!2_\l32"Hi9\/SNck_I_g"UkFGl<hs9Hj5%a[q*jaL$p\G'*m:>DLjS/KS]C##`3UXS0?5/=-%'/IS@IM)P$$1IPF[!QcOHi6DB6cZ<X<\"j?lXqs'o2\*D[/#RHoa=NN9nYO=&b#B#?ErH;2UT3e:;#Auag#\"f=cXLM[L]+"%BrU%0DJR4Ec04ap\HV/]G"brRX"b:;@4J/_nGO"5]V+QU)[XRZ1BhnU*>?fY@4_rpS7I.H6b,SjGD7%NaZe+G<)3e9fC^)`]8sjjuYJ0%KYg;JZ^?.,n3mlb]q3aR8tfs15IL-&4=:h\^NEEWnu5N.7iQf#+k'1$hB0=dh##g/,)We"bd4@hbjnPQ@Jb7Qf_mobcMe<_[FA]g%/u*?g>B@gLYVL]Mnp@P=Ic!<PC0l0ENiKSaK7#>K*ptG[gZRHqS+V[amH3`?ENK.GB,Vk52oVjrr\JV@IZR*MYI)ku4,qKYqtEPZ%:%u*Mg2ZE?G]R:gcKo6/O,(E^m-nfa60UKi<\S</B'71aji)?l^\#1(P!4B!Qe(5O/YTb(YUrg=hY2^ED>q3"HSmUm^2\eF97QY<%Hg@_N&#WGXi8rC5@JM6'+.=u:mHm]Cf73/&ATR"8pStDA]6*`FnAQrmT63Fo??@d5^jVB`=#%BjgcF6b+r2L1lL&&of9>AqJN`tS%e.rt#Ze+r<)ftCQ!V'`-;EflBXa6uW\YT*R3A`V;Fd6IhYBJF83Jj_Ep$sjibVeYkG1ppSls8646!ZQ(fo]8Q:F:-/GJ>G%CL37X%d*eb!q7bRm`ReagSp&Ct[Gt/5AudUfgYXLQl`4$,pA;4;ZR%g\ZF)W7>1^6EM0*`=9>.$FY('T^j9!Sb\Fcmj1?73^f'6\DLO3&!%koBDT#<+Rp99nht?20/cHeQV0dVb()oc*1%%sq&<@??&R#VQ;B,8\l-!rF<VE9nFh6uSimqBF5^71*\2Mghhln4tm!4nR+I;P(R&%/Q=7KOb'Og'pd"QoWXe;h:iTa$XYQD1dgmXb<I`e2=&'ks57k\h0Q<L5Bt`ueq4&(TNh9R=qS;8457N3?Z<[!_lbb5XRL4iJ+0Ge%XTs-!^S//![jAhS0IQ9@=(OM_+,e'+.-t215Rp2Vg;#6sCB[Q`+Ba8k`uHD`l/"1ZrS\r#8#M,f>Qetu7mG<'l)F\0U5qA5]TpPe%RZ$b!-'D>C>KY7QZ]o`ZH^G&:Q'/XL)ne>Tj&Y5X6T.sace4B-QW?9&DAfbbkA>%*cMq9FM+/1bPIer@7b+(Hi`A3^PL4'O=+X_[%G.#%^.ULB'^6ZM*K5U4bfY2pi^m)8L(8%W\fnTYYqgR:1I(>JY&P%"bG8l_Gk5Dd,S2Cdk8;Qk%#^/st!!GWojBHK`H5V3"jM+eB%hmW"8?'oNtUo32**r[M4R6LdQ_5@W/QLXa&<kbc!nN+!$+q>M!p^sO<Qm(@%F/=$%P4+iM@Io3l\CtI(4r#tTmT$;@Dt<$j(&$\$%)B`PDrGoGF>FT!qCbK$nf.+q8Oegg(gGA-8P)jn/npkhl`_5FOT`>p]g_Fh$o/I)d^I4_7hLeTA_iWQZ<5J@^fP("D]<1Wo\pq8u%[X"nf%rR)(Qau%]&*@0OdSa[3[,oHZ8LIHIffn-IcF/%<1kE*I>nQXo?J<hUh=(I`\r9]nlLQ-p:DMLKpC\?PgUGLBn9rXD$dG*g%H,=tQPODT0^OJtZ+lT;TgUh#:AOQSFMj'VB't<,aaq@SeIl9Omjt*Z!U,T4YJE=$f#9.ROQso""Eus<K]*6f<=i-%AmGb5u,qC5t%cQ4':@*e/BQkS2WQI8-(DS>Wnk"=kj7<rAN.gkdCcB5EdfII6mgAt.J!)@BOW)',"^X`unTbGh:g1S8B11ka](KpcuQS<o?kM+>m%#Y#dePNI)#.q!fIUC[<L2j#`+IMWr&Z0e'&FX(m%%@uWhM3%'Lrc&\n@`5:M"U?t&9*6c24h`jR9CM[.pt/@'V!9]1R9_m\8`d+I%pJT1gL%EgBfuuQ@]gs^kjUM!`VfG;:];]VMQV6F<Y6uHgf<u5hrrqYlod,uMl$3;pa6Kj>0!<&tUTI/U[IV#]r[kd#>q_`*'e`Yg%ABK60g4&R$R$g6mVOFuIrRWs\$=E$mcFoZ3RZ5[-WEGe\U%WAR[lV.7]BW%,GIDbe\TV)f/1Yf'O0egG[_2I9VhMEQ:UeM4Z1[us%CcY,KpQJ=LP7t@cZgu.aGBQD-Q/>EYhd9XE75JsLLYFskj+ZLdpcs^E3I$+FBg@`%3,6?5>:(0off;D2qW7GEam%AT,$ce$l>$f+%j-Ce3==l>Ci3oKVQc6)Wa01hMrqs0*qH.[N73K09Ek0gqQ+]`f:Wh>0e]VE5,]Z<`F[>^E*3d!R6P%><^2R/_P?E3Tjm[Y5V:'$p%IqLNLQ/0od\Fj&W'[(hfc$m(U'"=i!V3IH?nX^94W*ICo]>^D!3#tP,V"suR]t&/QS=#;pI*1Psa6GXIj>^FhF?I.-iS.&#G<JR=%2chs#q74'0]0)OM_RmZNC34H(FtK!Vm2git4Tq,I!'OHPJb$HEjg&)]dk5P$;Tm)NF!@0t2Hr__[a-#RD#oN4!`F(LO$;]6G7A]5%rCDQh&iFad5hs+<=Pp0n$nbJD=7,'!nmEPD_t\A!@bo&Lm0W,ueF%p]_/8_^OMja,5Ps]mI2A)&fqZkaR9e.$PJG3[D,J=lP-IU/%H3C()/>_"*Gl0QAg\fMZ>/luL-L!-0[/8.haJ=jF?"Cc\;0*#sp;31Kqt>;G(@rMK'?V/\pOhk@3-p9<F*?KcG38#2#_'%cSJNR4%]%nACF'W4TpjRBk/T38@qo)fQAHDUPK.#`i]cM*?>]s1!]r/=Q[Is5U=!#pf:UUVD_;+bMZ#ii#B@W!A3Hnd_4mgS`Xq!ZTEf'F3%?Kk`g$_*&9Y4rhqbc?8T`QI6)"?XR440u9lb#7j1X*Ao<dp$[V]l2Ete<g0HH[](reJ@_@qteMQ4\^jp6+ZYe!Xh:\T!>fgk]PC@%kN7jHnbWS35f><=5@S+(bqEMf7/rXG=Z/aE2c;Z.?b8UIo#or_gfiP65*'<ni's8,7&]dC85F%]7aU=CY<o%qH^pLn=AL#ScCMjm%koH&Ce"+He=\?<$\o"b8;.$2056SHc8B:H<ip53GdM#-ql_ej-,`MMhq`11.nH!b+RU7HE<q?h8`rHb:n6#o:o"!'NgA8@,;M-Y7%4po-&E:!6Bn1-F^op)H(,83cmg(sNegI;jqlnSLM[^J;#6Slg/+e!X.%^udtc%G#YHBh"Lc1M8:.9'C246;auCg@_ROng<7!eA"0%.,7DM<L::V3knA>E[%X1G"\\!mtLIF3Nk+.K;Vc%`;751^P'jJA05V9WFL#dBpe=Y.i:(*QSeYK$rZAIoQ#<3BE^d.i\nPt0NW]S%n*I-*,HW0iif<'p,nd+'0qn*Z8Bgle^5+/b;[e<S[S6)LkWBr&E$`r;L=_gKp!I7_aI$%Q"(]VkGYOjO@LTFp#?QG7Gn$r3#8c&X%G/s%nF)F4]0BUF?&qon;;bQkQXjg6AWMX\homQVGONN"MH%H=Y0s$kG6?)B=Q$rTb?pUUjj\RJ,jaHaG%fT0YoOh<LaEsIu[,&p8%8Yi7)V\h?Z'!f"[*9Y@_!:,p1HE(KOaA[poG]b!G5;3j4*@D'hQa&l>Z'l2__2]Q0kO%N=j(#>>*^"F,>CLnAM*Bd3YUf5S`aCsb%VaIZ_(`H;?h=9K7m;B+R\Z+@nQ_\BA%!>oa`QM1'qd@=^q*Lt.9Kcp]:,;O7^nnH9G!df_30gR'(rKu$(E.qSQi>J?enm75KBYD/%LJRlZH+9BZJ:0%#FPCJF'4^W]nZd=ap#e?0Q\<+R?W-+BC6$6m\0,HABd<NNZ+LgP0AinNC9^e9'4H"CDlB8(C-T-*`-,&/Ie-n2%h7h:p+(@?E45LM>:GSN"OSj`ia)$P,jWA%rAindZo8bYuXn)CrN5o`VCQ0tWj6a,O:GNut*VPTmUQ!60LC!h-(f(V<_<-nrs-12%%T'W,Up?ohiD=1R;Xp8*b.#D7/[;U-6\P$9M4g!,F1Qh'p`cKq`qF.7+%-.)-^*u1.XrZ<M1T=?bHrKfEbV4/4<uW3c.ULTl.Y_l>%^RP`oIkU214i";OqV@4oSR+>EoV(.-*?Pc_=$'E+(%U46?,ZuHJgMZbRc)G/AB/W]AO4K<D!R1+O:c].56[,N1b'r]p:Ekhh_Rp0%n^lV#=s%aGT[3CV,O5u7`N>WK)AW_Q!:RT_mF\oF,b,_b\I9LiX$>d-Rss"W?>Wsg"/7U@i6HW$;9%bAD5pO5OR;\RmCNU@<.8E8%k0>'fg5N<>48YRP.GnPJ)lB:U'Hs=$J!am/$=E+0cJ$q'FN=,X8KC9R/X[hMH7eg4LnGGu+ojOYgki`>MB"s7ErX!#_4s^+eB7(G%iPZpll^FfC0+i"5aBN;F$me2Vo>EqHQ+jXFMDgs`=V==039[J?AUcdg@$+jk.6mFeas@:']K#A*@],k2+kBH'.1rALaNMEsacW28%/.hbPYa.K!\3%6m,$2V&,,uhR"k^$>WutIM`Mp^[!P[@,3?AH5U5fLMK@j=aNrukW[(qU\=PY*t:jWUd9X..E!3MG,'*k9-(Z[UJ%].f(<"\U/9=D/Ee?7pXqGMq-!i,rR'0#suDQcehT9SSm,^5Aj%Ohjr;.-=k?O+Y%O>:TU)\[h:e#4@[)(=V\$34U#!YVW^eU:uRf%Ke8PjFC6>GN;\kg/@cI<b85*JX`82j\Z@B16M5BR_Y*?=<A(#)"nX8`61]Yd"]jS,@o;>MbKJO_,<d&Ho@YlW=p69`@s*EjYq`lL%-Y&`-&/fP!&Re.(/X.@'-k9/Tfic.c9Cm-ZE`>X^g/8e'#PX1i(d[m"j1n;6P6d3e3Ii',p5Bum\6Nd,RunN-SWU2#ebITA:tNq&%BT[SX9-fj:NmH4U^:^\7S^S(l"2!cS\^/S2ls.si5=e1oGHF9/!r`L][UeU257P\MgkC(gE/PeG^YnYM0%$:A)6aHlQg)g`Ki[_`%[5),m9m_JWP4QWTMf%Z\qZ4\YU8-esq@`OYb8f7b/_^g2N44e[K)Is+>Q$+Y#Hhkf'"?Y!?aQLhm<2)^mK(r1c<_R1GnI$28"@s2%j8@47V]<O(0MCEnjuKp^B-[p#H/^gRl0WNuU(1frikN1Qkpr!N\YBYVDgGbs#NtESJ0QN&qrSqRlqF3nS6b)giVq64=e(ca(Vp`m%K?(I&!"U]m/6443\[?/U"jXS]q9R%>l2/M0q-Yju@HYOj+mql$Zd/d.QEn-Q2(ka_IQ_>!lP;D5lJQceZ1E'UHknAiF3VjUr=lQh%/k%$q<n=,>1jn.hM5SZT'B2Z=lXY9>[rQ_3L]g?3ZP%Lt2[,M.I"U^5Hcj2ad5m%N]tm9H*V^sch\8sWAbAP\5OW<G0CMm`s*]Hp%p"^#,2_GCRDC`!_8+1"QpJ#rcJ'ZNYnGPkb&i2Co3Mpq]Y2mgno@Bp\4h&@H7s`G,UM`YYljqM\q\Z^ModOf<.aMa'J?2Q1j6d-,%lmL3W-Lp2X4r&Ss*nZu_?a&ojM0+$baB#@,UMId0.akAWD*BdGBX7Y*P9-bX=e_9u1],gd=^jg]r]pW8&)@5%*rGH6^iBAd!V@GY%'.<%*E!`Qi:]*PQC1\d`bLFbe16.6C'"UScl^B/p2bnLq7ZgGlE8JEJ*GY?=]_1J80Kam@Ef_Ym;E<sVK-^oa-^qW,ZkL`>7&(CJ%!8lP5R<I,K;(gds7EAT4gPNm?LTG$;h+.6r$:Gn%,dc=:ar"gQI%DnJ/96pQpo/d13R1Qo%,'YERTd7C,%/s>.mT7_%`\s)p&E?-%68o<)BrHcX/=[5TNS[71q:TR3F,AF8TsuJ-=7(=3g1rMt)ugqC47C(Z7XL5%8J[1"V7f#Z/N;NJogTR$#c>?$>RZ6Y:c)S#+40!!%%mY5%q8;"`hOQf:YE_>*]++LPJZQMrNq4Z]!O]<)]ghRHEaR'EfG9QE/Ibc6+=!hT=r*,DQk_d1?fIfcpY*slg@B$eUYj-ZSKD3\%]ALX)>;=_mhVU@Jq]!QCg.f<8\Q>pa]uPJnHsaS!XKEAkhf8ECE^m$VbQiV[]H\/+*YLsXkj(+u[%*R8)[2DfKOF\]+6&[SN'In3%\NJ<Zhq9'hq2G@2*;K8r"*b)<o!)"Nh'+^(deN#7Rb3$l`G*eZ[Lrc"A\ddoO=iOZX?A]qO96K2Dh$rscRY-Jf0G?)3.6kr7i1&:%1L2WdL&lH#iCnj86^od5X;*qD4uDN]3gOS-l/,11&WZ8,'Phfl*bG)*1XjuB#1V3jj0H=!?Vdpo*H"<h&s.?ZVtDf<`Ts\(E!J4=%iq7I]:1U"0oXCk&4.r>;Ft8AeLO31rm6RPsfA!X=@I?^C=)TsaIB+m.$Hh)ko4;rY!ur>9Ibkk(]AF,#qt;R]gjbM'2@hb!&IilN%41jH3-,5O_-shs`e'(qhd39Tj;'!+/Z4*5nfEXE+b<?YNE1=<TIA`epGS\4<E@Z[UeO9,5DBCG":36:;Ih[3n(QXV<\?7Gr2cfV;%jdDn/lVZBs:UK[U@>V/\CpOcthukL;UgkD^7X%-LXNYl6V/ip@HbEDr/=)Vr<EWg%gN5CEYmi[`#<c2HZo9Vq/JCg`]Zl\Z(ktY1%1BjpVNGGK22cK4)*7I`@Dl/Vm^NbK*>Vj>_OOEHZ,i7N$3B>Q*1cp`Ug2\d[3L6!dFJ`$-Ynl9#?#+ZbbOSZoRMAm-9;T2D$FeNP%1%/Y%\I:i<Ai;PkfMZ3ldC%KVT;blYbp^1j@n&&[._*/T/QrlG1Y+HXErO0U$aZ-1^%/\E/C1L`LktT_*1Wfjc90$!3&i0Z?r-_;%)2gK'Y:ft_h.\-Jgn<n`eKMN485IK6Qg>G>=AaC].pU.:)d2<-C/;.Z#?P0>>q90%iR_k)bA2fi?^?N\LuO"O9,nNbHL`""!a^.`%6n$mCT@lga_M0E=kSbNU&3U4c=IeE-YZ^hinB63IE\IE40>CIMl&&.X_FeGb*OOUkc#?Y#/$p@l'NdYEaklSEAeg5$EPRm'B,+(E%7YF88p7a:9fQc4SN^ZRD;45[)g5U[l#J@;i?8mNC6KP5_Q$/Q1j&b3<+IDa>gR)GI7sAij9_De3`lUrT@<+B#$J)&PgG*`l^/asd%^fQ$sV9@sFE$K$\7*[A`/fa*-&+##^CM\5p+EC[Y""4a82KBG25b#.d=+=iFT]DhL@F6\ff9TK6C!#Y$jJ]<p76nM3A]n1!2^)T:%IKHf!nhLt+VM-E"iemo4=GVcdG=)W_-/0a[e;[&-:-nH9Z)An]+G]!]Mn$NN<*CJGoJT\%;2$j+erb".N9lTo+:eB;jhej*Okj.#%-^4mn1N!iiYnWN=:[@L+13U!d6akMmdJ:c@A!(t^GA]1S/[4'Kb4EaoFhUThD<d\KIP4>I]Cd.-a,)B&4nZRo^IUIIH1PbTT6Ro^%i]4=Qpl65>?m5&gXTJt$:DuMaShKp8e8LF)?KJ`*[9"@B!$D#^ldPDiGskqN&98:RC$Ul2"9+D4gm)OnZ?j<gMSO?ATBdShT523J%4Lb&r*R'tK0'qPUFai[3IsrqhR]NopA,cDYSaMA#%WJfkN/e(IY.(GP!ZR1lZrVR$:0Vk5/Wh5q>nJ@XCtZ+]k=C%,K&u7^TN6YJ%cCbn+kf*;P'+CPa^>D/2lkJ(:Oqf5f5.Qp.<\2*mjs)EB@;Y76Jf4qh=RPrq@@SVq\gZ`IUVQ?b0$O%@QEF88g;]Cu>h#D2)7mV.%J!"41^BZi@okKDOPTA>imGiP3Er7uXmQ-=*RljtC]\ar"%63lKV;GHX')a_9GU=dD<3inJqG$fcT`UK#*$W)ODaBBWH+^[eH>+C_%j*dbjiAn%;21'+1gH?Y%HsNlSYoY=Kfr]F)?>i^f0$,>G?'a<nk;qNWm963Ke&+=!q"%H-UO6CZ;Wqis6jlujX^&2u3M0hco(o9J%`oa(=q,ArTB&8I/Q]DN>\)j_2`m^]klhj^tc!hS=W;<*X$9n%1:/LUH5Lhr$FUBLpqOX=J85JaY<T!CH@G0O!6+-<62A3'hh*"V_%WO2!hnmEZ47Z`PJ@+^/7lH=A2Ze7ODrS?Z``$G.S5l\ZuDC.fo84on>I]*60HqS!hfqb!0*[8MdV,6Lfb0BZHZdZ)Mr_BTrkk=60%C9O.48WpA4W9e7SK<Pqo:hfPM$YtnY#fE!^O=[.+DuZ"<U-C"3+\D\1:'_OGo^Hek@ip-pK0]H.MF-k^q=#XTlgWnZ6BoI%Y*qgX%;2i/\8p^%U+mF;ZeHF9S*SN2IeanZK3d,2OCVa0qoc5AC'#1BMF$MBsRL2OO+<_o07"gheQXsGsrl=i7A?$tC7?l'0,0LmZWNms>%Z\k=j"^Squh%67d;,ttE!T#^*Ju"b6e"jXN.N4%5RXsAHKfn@PJmkZ-8f4GgOV4!79NPd/@"t+OFHsLSR[OF7;pL:._I$/o]S-+h%A.aL-+ebJ09JIe+_i26;l6:uIOp^YMU6\;dPBTaG`:$<=hG=p9Xt&Q[;8hoI)Q9AR@MhQU?tN_%70URc;[:`DMO$1XQ+Ul^!e(s5%!0]rNV7^IicsI+,5S=Z4!)jF@0[.`[L*g>rVO8dW?@\H"'*rcD5^c"q6ClIs/5$41O!m_J*n`BSH">rEo*Bc,F[:*<#`4Y9aJOS[%)PXP\Bau1u5Vubjn4;%"Lb,QY8%Opd9iZE,#Z[UeL@3u^+m1-RbD+7d_p$:B(3,g6VOBFig#..O$A__DQ6D/VW[Qq.!R$SD,?-Y+%8s4fsBOi5G-+mbN;IqF5&2@QD;AI\O;\P]H&A_>0ECcF[+H@'CX#s@&&2o^<&Roh'P%]kKQ=Ou?;G\%<io#uW\g[o>K1d[424B_!%EaBCn-]\hrFBLJk4Hf9@.]En!TkY=m23&7*"9nP:jq6UB-jcVX*$N%1L7gVQK_VE;]'A>gU4>^XC%2K!:!u``O!G0s8!P&fP1@4J%X,_0&N0@44+^D;fnGeB_rCYijg53.hRET3*[l<*t+JQDtdu+tG%UI1k*[q>oS18Pa(QpVV^dZKj)E^pBKH`NJ(2[/V`9`W\q*'k(%Mi='(bE$9f(QOp5M4;S2U`iHi6kF*05RD0`m#["%GsaJ)3dsI!.9^X,&iTo,=OJkEcnu6\OK9f1,+Gl/+:9TYYr7_0@u,jrlT9Pk%2%3BLVBbI6&C$FK!\m.7So0Fc%>"7a1t_;6BU(no8^I_IWf0D)oLDk+JcQd)Ucem@C'3aao;5nd\<Nk("JQ`fbX7JX<&OB@"]GPl%PYsc#.LOT^\u(V`a:+&?4#@sV4Ag/<L<2L)+rGBs5;>QXZ&F$Gi4:@jcp^5VVR$sTQ6q/2KIfY6$j(s9mN&Xf&6+7G/;ip8@_O"C%"JT>1TJ)0jhG_4?.4$qjiiS0XTgcm(Zo,W%dEqBP\uHAW9N`MMPLO.,W94;'dF9QQoHN]1dKp%#Lbe5!::l*$KM[8tW-g$^.,?00%1pHWVRTL7PQ@d3]_2oDK(g/[)>fp%9F9*&SWAu+;6S0/E6^*[<9eqO4UHQOa;cB(A&Zh50+D:mRME0\2-l@@3."j@?$,9J47W]q6%R0'&iScpf9d2>I-BV<Tn-7C2Q?pui7h!dcR:siApGmsMd7$UMIZK+j?2U#'>eNeg&[2(u,BpIco)@*S_>!so.C@P<V-CXF(8S$8'%%1Uc/esHV&jC)`%1^.=mk[86@V5P#ZL4d<)Ns7gq=4A*(83%?*TB66^g4d9)VW\8JO_%-h[<dC4/WZL>'XKbemiui'"O]-t+:.!A%U0]Af5Vu1\V'Iam!.kZ01'^@CT-OFT$+`CC,3qd!!MW,BN$VIo`\.jb_,ShHHPT9d<$fZ:KZ4,Ha'<tu"7HO+/+>/>SeQ7G+h@ST%H5'`g9Mo%D1cUUl`n(>&/%W&MM&>n*<q)3r',5Kt@eJ'!=]DV?Z7':la3iAQb+cJ$\]#FFs%6sdLrhEu=_-i68GIWf9GV0\L>a%^%?*cs;=uB9EE)?XoR:;n#NMD)/12n\<<eq5`OeD7VY3-cue20d3;A4-^bs>T]BJP2hST9No"]i76,WX)2Wmf>=lJO4J&;^rd?/nR$%M(iJ2Y6iJ$cuhj*0U$"sBOQTs-%hP!A'RBAr`Lq5$<Bk:V6'AMH<OER<4=RE390'AE-CaYBra#P7!&4UL.0YH&Sppeg6N,`l!#)B%<GP++`?,IE3_\5f[C.@H7$7&?dY:n.)r=#LM9KaP%VBElr2qG01c06FOhm_?4ts-F1G?kU5E+lE7mEs/*pjp1D<0I62-H6/SFJ4_%ab!@MB6Oht)<qju4AD,h@$^=81"4K)h>s?a)H#YLGR'&);1"ebmJtZlC0tK*?,As+V\$)T!J3uo4iuCF&t%%OW:?^G?=65;[b[W=%P,JurW9k'K<>EX2JSfU]kT[HuWU7ts/5sjq_mVY0$.YQQCj4[++;3KrD0Lr(C/?7.m1'])WlS_F=>$[<jT).H%*'*G-&q+EYhT7%%$5/o@Luf+o`[8'(\RWpkMD0AWU9HY>)"'<'ZJ4nrU.H%=[bGfX'"&^`h$t8-.TNb'ElX>/-UFukEBaS@7Y!db40*$7K[<8SH/fre%=-YB/6bs>YT]S0jgB!&1@DW[o[K?a;8L$#D2VT5`NgCGLc$$6:C:83N=_9aN't'esbc*nRp!5DJH*OgcaZ>jIZ-eT"C!+pK+@\F>%Y=OY$g)>ta;:u,ZSK$4IffhILZ.V;R@r]FmU.t\#C[kE<,>k!R*Yrl"LffR"(<ACu<JT6;mop8R;n>)M.:)SK2=.t`ptZ^?adPc%%##RbM$:&^\+;!Ud,C\o-RP/1Q0hkLHXs4c]LVscl*$hAbU;E'!;+`\!D>Akc.(k<,^<37s+Cu7<l98?+6io):!l6TpnsZRW7BYlg%8cjeq;137/aD0ZVa?gIRM8!W=E/Y@[,VaL4O@`0P9[#i!c;"/(W*$;JKD#`n&*Sp&kSU%_Z>;l69p!@oSY\`.!"?cl0lcFX7M(^G%+rt85P>n\8+t9@Ee3q_1R#uoA14;sGdC:bS3#J44#s1unbd9k))qV7A=^T`K!\m-e/(5C$U+4R,BOJ,JSREj*FIDo7'LF5p."!1r%^<dkb+@$@gT['8[&M_X0F4BV9'[UY=_kKKmU;0B]"!X\47,OanMsEE5/.FgWBVr`[d8\3jY@tj,"dis7*JKA\UeKUOob[[N.]PO_%i^r$L;'q%&/nm^1O^9>K9LZn<&4r%@6:P>7cl`o_XK3^A3':X03EagijQO\)2DB/U%D`NS1:J"7%%1a]!G7=Z[,!)4:m!>mjIIh(%-9IcB`=+Rlas%u1ES##_D>NiXiqh=c1&'%4cZUKaUmS&oU!675]5P.VTUX"PEYo>n,,s(D,SfPJRLpjjd2IUNWlX4R+KD(_*8Wf2%p!/:H)V?o%3n`oRe?lJi1q,3Kf])%ajg*T9CmPmMDi19&_f1Tmb!fY;JlF8J%*ZZl9FR'QRQ+b;p_5bhR+PQJ+^E>R(ifK?R[A/0%[qE=72HJ&LZnZ4=.*l&YZ6GY_dJ'_?L.U8I2'JAR"2o/c#BHX0IP_,I7"6o/H&*cT(5rjAWef'EDU#&UN>&(tNAon@#kp<6(!U04%);/qcN0LT%jQQo#+IE2.0\@NRP>%dra<EQiQ%<,6[=MD4oG4`P6-m_^)sa:/#/`+[A.]@:1h>Ki_r+fsZn3Y!#ORKoGeT;CGTT4n%*2o$_=eH\+f)V\ii+L1djrfCo:^7RTkZnK^7,XL;H,ki$3``\4.5[70YQ+teM2$R)BG)Y'Y`2!+'62(o@:^:UN(XJ]JdBPSVW\.R%0UbW@$cE\Z-:P-?]O7[(]KCFP^Zl70VkQVa1/("P<CAkfj0!q[OMM]f`?4<9c>!t;M[F]`O^[K\&M^Bj4:_N^f*MROWGFp-eTDJb%fIj"q?3g[c9Rd^Cd$179S4MibJJ?R0/^,55A=/OG*0i$8$%^5c4r(JqACq2si0?8@#!NnK2aGH#&#*S7Ei)C/.F]nl]&)smU22T&%,Kih=_>c<j6pUM_+N3)I&9q!DDR!3a0Yo\G\XF'49gkGF4Tn]+dGU*Q&B2H5bRh6,[!Ujs$`49"OlU6i@!,3(g-_TF@+34e$A%[R%MN,+K2'Tceh.%#E4[K:`'I/iJ';_S^RS@dV'$i"Yp'C+ZfMa5??%a!?aMY$rJg#CNaJu.H+?'`DJes@f*Yul1@5=q1[4k8fW:4;h%!Y^`RX9S8/VPC<C\ce4RJ-am2Yjd:B!Jhr!g^jJldSurNci>@L=r/aoJI7*=J<-3##dI#g]HBlYn%k_4-VXR`js?rG*H[k^YpG0\%aVlpnXGSFdm)C='cm2bq`$ccG)W>;V7U&2+Lo)%pk88j`Kogg<7E>T=%^rUo`.Y]JZ<Ct)>_4(=/Oe:n+t*_/E`><f>R.l,,aHNC%WgQ6s=>8YshSfRNAEk's0_?tk`@WH2P$lEe@?FG2>2%J6=u%8f+Hm++f.![6#V].CR[DSqP:O#).]=\KkVDN.L;8.,O__>)ZkQ1o%VSS<OR$L^o2.YFipIHPLi@-1"Pc>:&dKm0j_Z`=I((cIXEHKQ88!*!FisZ%U>osn7T=$?Y$&_*[#KuukpeJ+i3Gdst,+6%%O96VZ%WUS>f#\Ib;KU,"L/'>g("XeN8-rDjm085cA#m:?-&4?rC>QKY^P;+B$R%RVW2Y<e4QLJq9W,uIsfeeKmWQ7UeF?uhJQ5!qH**?+W%nHg;)%#\)?c?DceLmt-!pNQ*\6,3UY8;IUGU'V4r-?CF4Jh/2&;Zl`;&==f\rW`SRE<$oQ%^oT/5]Tf3!$r+R$9E9\R)-YSM.$Na%eM\R*+cX,[a<Ifd%.p,^"AG*b,1JX[O^$NFYNRG?SS8eci#mt4V$%%`#`*:-6dpEk(.5TU7q%XuLE9,:X80j%d\t-XlS8s(nM#V=%9JguS't`1-p&O1T@R08ois1bs?HNm<19&>!#tVj@Q=\1TA3cGcl*R184,B6/,Y>BeA3j"ho+N]$_d4,,*00jR'g>Jpm.laU-K5bH%5Z?%o![oKBBY)%]m$KX8dNQs<Pq`);'2?n7hT^df/'qhf/S^hcIp0^c<'rT]]+6$]7*At\;8O$@Q9=]4#][uc,m4jCoTRg@5piIp%+@:``!9GC:]l#6_\.F$daQV23]Ip<qm/R,TOq\-d'G\'&N^5A7<8A[Tk:ga]IAcCaPGUsK*Oe;#4EXh"csR"Y01q,WI#5Cg6Su5p%,?3W1QuW`l_[o0o.)kGPMDZba$H>/&XYGWuJk_*e>Yui+b)/MK1D.&"QP'dqTjZc0/0Z$$Hg2/C_R0cq,_XMX`^+5%6Dr#7YX(tG%`\Z3cCg<DG6?Z!V#[LIh9p%**J<D#d<L1bX"1"8K@DJ1o8`_uN.ZE?kh:'0@+[K%09+6KODmIDLZRmLT>UoH8OA)T6>J=,PM'uh5%0h>6ag*%#%VD>?E"q_k]Ou5p;epDr3BZRX'O<]2n&knQCm$iSphD>[u5]g.+C]UG,rMiG:@iS%[SAUh-@?`2P+QjmPX<Wl%.#\UT%`*@kRH,\-A\jM!/9:A/tr;]PXV.pX/#osofgTl(6.]UB\`.Ys8?FuFgpE[n'71%FJTLC,'Ts%VQ&Skr?VG-9?@de>:pTe2'TTKsU%=WsJJd)e<Ohb4u4aMSQnF9?Fm[U,f'enAoF7G%Z>MojA"AOY9+Hc!-r[HG_qg@/^J/%gR=:^k7=!bt1=_)?99#TPO$['i3ZAHP&(%1f8C[o7:$ml:BGRL+`sr2gACH;n"Vo*BJ2[Ya.dDk\_dgKG8-NS-ZEVqhRMC7cGd6)IQ-eW3S\rR5e*)+>R7<PjoY9T"[V3G->j1%8.oKiH.0<$_)9&(Ea>pnn/feL]$-M(Co<?F,hX6PLco;LWN&_2;[P(NLhp'3&D*!IJK]Ur>J2PHG5./F_8mP#SN9V'nMUIg#)efl%hG#V3ar31>Kjb;uIY-Rrg((?NW@C9<)X3Kh;od162(d7!*0nN['u15D&6Y_/Jb6^;+hGNXaEsdMhkR%3-35Z&KL'8qED?edF^7tV%Bg[QARYiP^>#:83(DZ));M#-^F1dcW]S@=t7)Z*0JFt%DJP7d2A.nkF&M]];C8rHi&QOq&#o<@fiec*TL4N)HmplDU23CY<G`+@C%,ZQXjFJ<OQQ2q@)>uKl#".9r8L^?Wgj?3i;b$9WS[7K=f<Y,8?-W/?X7LCj$2*7BpqBngUTF_QkLOe<=9OPHI_C&DW@1aLupAg!m%WRQYJ<'cJZgDoFME/:_&RsIPXRX4Cb,g\]"TNG&o/F>-2j4OM-!Q1XeLb/i<6Y$K66qFLY,oa%3r#Sa*"BW^@moa7sDUA,o_\#W-%oK<PVP;H>SA.PXXf:GB3<lfUj/)\+$V1E'8j9)S8=PZ=EgdVUb7Y76@eflN@<$4%#<dmGhDI6pT)*i;#H9p&[".6+9W$'sN";"#"%"(#&:LPZK!]$/!4's%PM-3tE-XYCD3D\8LM[cIUTNqu*IW%ko.N1hO.-=a5N&n1T=[E81'KLl_YE^K7V-U:YQYi?!8r18XZ.ABN_%*7b4Z/l908p_EjlBWlEgbQ5P[qE<ef);q%Cg2Up0<'48E!("LhYp&0k=a(UD1cfrfRtOWt'cQuba;>.!\DnDTa<CV?T[JMr9N)7<%*^ru7TF_So?s&6e`1ZfIhURE*\ffZ9&:KU-W=]Os0OT]'rA#<9X'?OZ6UR]6)MYX*9W#Omod6-pFjB(MLd3OkS2*QQ^rt@5GCs:<%6bo@;6?HA)mhpA^Y)IR?dIp8e_.0W,GSu80R8F/MVa+Zb<2iHj;pM<gjdrV0c:Fs1$l6[Pr$*bIFXN:On1H^/6=.PIJrW``8ptcs%</G:UVF6n0Lp&-k<0gG<cnXE(3_`b%Er]4(<Vi.8X0cr*8kS&i5AOs?+@s"6eL#;ek^/%R4%#-^oEj")&XUVZ'M%n*99#l099I..%J;>,CM$4q'NHcG)?mefU?@^ZB5aVP@Yfd[^%#p2U[]<,#@!`%tTZFac!0aRX&H@K?aJR,:@Na&dCrHs>H;b_'A2)sU%Bg-b>QQ>=%7$f+RU6BKYpc"4._JbE&eP)CFJkSYrJ"!2!,Zb4Hs/$GpJrU<P%N8`28Z*A%qnHkBH6kXnR(F`uG>Ms#>M]3iXN[9Sop*_GPrOk1%jhU?R4pSj8F!XQ?BNJjCOrt$l!!n1HC1X(>9&J@C7h$f)L)@oVj1L/=-8mTf8s?%NdYNSj80&UY>sf3`0O9k-0#)bA,Op'J]*YB>%>6dZ%lo%8Go67nr&c4$0CbNQQE".mQK+S@X_M(l46%`U4"P\d3ci&5I:-dY2%/$ISGV_1.&#>%*?d-R"JA-uo]I1]<aNGmrI8#%S%%T*\hQb020i?UEM1D$'^Fs&7;V76&s](BNnqk`L`8V]"j43:6T3JUUL7.#.!R[]Nblq)!tq+_PL):H2Wbj/@$1DQe#<,:8$i>l)7%c/_j8*1&;jAW#PjVIfn_QQU>Yl!H'3>C8e@@^3ZeTdDP_<ZeQSnUgDRC!kfu2@>U$E_EaAWr3\.L+0W)k8`V[g1[o9,3pTTN-L;7%(c1WL^FI=(/)S3"/\!8J)iQ>X9]-Cj[,ASopSG,+TZ,?-mhQ,B0(@Id#MVKbAX2AI2]@^ij1`.[6qu_*/.E^[dBd]RZ@[10,1e]X%pnj6>*p(S:efXt2Xt;P/.t)"!IAVg%9!XO'A@q1''a*'uTlR,8C]7Jq;.GKH*k!8fQCk8!n$FOU*p4emU*/L`*eAkQ6dfo.Cjc:)%:PWZ]+Cf/$K,MH8[[>7<7e60>?/(pok_tn6*LN8Ud>jX^hHMc'SL/O]N,85$Hu-p>E#p;)ik^BGXl>[hbq*nej_=Rs=Z6S`i(h:_%h&m9ECa4.h!]^JOQqFs!A?M?pQQ.u_b2#1TgHEAK'?mem2tu;"=s_-Nh)t^Y7eBbdq.j=1Ok2b+J:<c<YI3mB#b1eT2C/kqV\JtU%S*=%B;9G1k2g<n#h`Q'9!T%,G\?JeS>fbB'"E#9>3EAB\:E34)"=nCWQJBTJh^LJF^3-f98eD4QD61?-7#^5?65!05.rLJ2eIQ\+%31fc9)=m^./D6H?=%gkaU8<VX?=Jl]b-X7G7T2UA3g5#PmQb6'JJf!2-0LJ7Q^I"o)8i"]S!)B;Zg>p.#:ppEE'bZ(]YhTA$ja1]%J39Fj+sNB.;3mtJXrA.0Elea<_]W@r%mC9nf7]qs4#S2DC.R[E'!?FA:-eIG+;`IhjEEr@_tdGQBjE,W(2=fcS5^[s39E,@lMW5)%RY[8kk?5gP+,s@1AQ7&N@G8In*loM2MA[5)-0LNcQhb>p"kSb)R$lS%bP@R?i`MJ7]])?@R]ikuIr=B:lW3r?esrqln?k0'HNfp/%eh*/4C1m>A`n&.n-,Vo%L*/C:B4KR*`&@tE[nNYfd^+W&!j!4%Rq;&m.Kbi$@)d8G!j\:h0[0JID2jIs"O=+\XVjfB)akTMGsd%B%:.?td=1HV.7<%%FpCCfB.`c+DbA&p\<rb?m7MZPIO994kJTR3<RJK"cQpr2M_$TCfiH8#&/P"ti`ar\hKlCU1EqiGI&]b"DR#t;O%]\'S8_A4^kj^2/:'TgE?Xo:DYj`8J(Wh_NbC:F+3;S7Q'$P[bAj+O'1Z&.rL,Rh->eTEn\O!69fVS0h#"i*ck!*HO^M!"##18Zlm%;8@ed.8(9+.r`4X;bobk\9%;)^O"P>/jWO7oQ7Vo82?Yi=7Wa[c7AYn:U0EXVt5$T5*L^eC[."bUn%bTpDBm5ECls(-&rZK`9p+p%(/teI%IZ,1"`tq_k3X,M'G2bKh^jZm%F<RiOUQE/cG9HQ"a=!5<2JRDd89_Ajr^&@Ma_[&+rF<BDR!@jrPgNDdu,_KQ1-mF$+cDK%rZR,Vp!WI=<qTR(h8kF0Zk3Q+$+[^=Lh!AFL$30VKGg;$V>b;fFn6_U&6^&r#3AgFV7Sh0B8CAa>Z0!O9<Ji%QKBF;j6WsC4kjtV%@"R/a&T0iPSO:BuDoUJkSL%l/8^;?(gSa/^j;k[er2&?05Y[Tcfq/c%''b8TTNCK\Zm9n*$^>)g<B:sVB;ln+>^-X@lffH8,AGX6%j2#"Xe<rI*;g7/4\S]tc'_jl"5G9$sk8rrZ;^,Z^FMtMHYL]Pbe!:P<)>32(1,Rqa3*#IXQn7?`B-bU#@`ARiaVe[GASrD`_/gjV%Vr_LThHDM4ZW7TX6_U^</:VEpmhUi]g5M"EpA^BnIVZ(TcjPU=';6pKou.<no'_Y7G8'$,K>4r6o#6SY.7Y3db.L=5)Z4Qi0>M_M%Mn'_7T@gfq]M"bleFu5aCMSu+33f*J#%KY2"j(Oj#Hj4^/j=HQHhY<hO"nT_pG#h!MQZt*@qQ6AYtbja"SAXD(ak8^[#).CjK/Yb%@&KJKjOf/;K4sJ7X.cLO&hj-T;KPLC02[/N6K_iW7!:mgm#8+Z`LT0$KPbWI]i@4B$&XhcKsa.$:5BG*0kZ$Gj@o.$&gs4skI8q-%F7MA5YoK[V;"B&IPCj+XfHT]NP?qE!9Iu])#&ln2?=hP!ggVY4>NV0!<C2^s4'!8dD/\Yscd'/7-,i`Z7u2b&,5/XsNAJCRc<2G;%dSP5a(gl7m;_P,DNWdXRp4aO7Cs$H1P#@_3:.UOM`LI1iP4Qfm$YDFoc>faDc,r%j\f`d?,[7B](hJ-OHMm*7!W.QgYqA6LcJ8;Y%17m=QXKY^bYqE0h`8D:SJfi7)E^XQ;5XCJ^R1ntFkX/#.]%!.)Y@'/gR9NkaiH&pnbV8WMe9+BXAl@66pq/ZMlKTt3\pA9d?(E<D%=/Xg'ol]9"p#LUBFiBq,=r*'nV,fs.*ogh8ECe_K^o_6(Hq;0Bi?YF`Uk'me`SOh1,G_*j,mA=`9ZrrD=2ZqrY-,:LFsW)e(oAlf%6]=F:UGErRQ'Fml<6]S6Z8:JAl^4q"=u&!]GL"@(W't5fWV/>tS[l5\dm=4pZ4GF)YcleWIr=B:(0(4g%%sfPn?k1RDFL[bPd$_F%-ptk7_QD7,)H+3Nh"QZ!PY#5;-&%8Q85mT1dp"AGWi"6,W$']=*S-H`5Mlm,GGO1<j+pY1]k"'$&\3'm+",'%N"9pUGu"5P6_+]9%qhe2bMd6>K703I0[0+LEce#Oq(6I@`m]<Ku%SY$Lb1X9K\Gs?@!YYAMO\JL:/]:^rZKQ:pGgNE,Ed@tD-%BH`jBXrW2t'tuW*:If%PLlomE\@kf3sN$ib#c5%K]:aQDUH+A]T>/2bo3)ZND$]i\Mgd5,=[V<hB4[@9at]:VJfSPKYZ@]lpBJ7'7W_4Cfh0NKL(PceqYEa%lem_NFD6!@4hQ<FC_.67C."hYeR`.po%jO\8e!;])?A]!(8JH\bD%mVED"/hn4"sjWeQek9SUXW2U_QQ=0Oh[#n`I/<#((#d)oL'%\Ls*Jj-KJ]e<KC2`<D?80d('SVe2AgEpB`!I3(3)MI7>:F0`Cl>>'TI6jDiFmU$\Ue,h(65[Ot)*87"-X]/>0MuKa=d4_U[P]Rh+%2eKFGf(0U5Optho.AE$.1W.'HH4]@P(edp.H5L9CG^pG`2nYf>*L`(?a+u;"3*Wnc$DEJlOMNbDmRu_+RqE;cA`3ccg9ebQ()g^Q%NdkP^:c)\5;X2JC.OW@*/gi`B(gG"5!R[)#./J!S##WD-T\F)>e%C)ecB]7<ai9`W@0c&r'ugk7S(Bi_ZNjEs1p`+Z.7QB2+1G`S%mP^r.WZ8mQrfCtr%bhDnT,PLD\ktb/hWL[Iai9`ujee-KAEHe^jsH@WjCXaB*CpgqKF&$\-"E/5(;('=VMDpNC7g^AR<r_>m30#\%frQsqlc.VM>PYmN(;DfGlDlahXc5O_B2WtkCM>P[2bN0sQ43Z3=L2WpDSB)$%I>[D^\p`?E];XP!r>SFXf!N7A6cVeNXU8@!SeoI%$Y8T5@H8nsl/DaWIQ$:a)M"%h`)Y]$S,R4Hd01@#e8JqP@tV]ghb+R$qf)^`l%pD.X:_GJ:$'YPjHcNF5a[X^+P"]9KFJX=@7q%I%`Xf@UX$e;0=1CELouR'ZU)nYSd27lR_ZWm%Dd7\K_uBUeZaDFa&O3f`N6G>,X55rTjM10.,W6Rcgb=:&!>?-P.[121+F0I*L,<Dg%bd6U<4alrdFXH2uPNB-;9]SW>_tDY+rPNXUYgeFUO\7mt"oi'PCDS#WeTN(XU9\.?;V#_W_n&#(INo5%.^'tu%4S'hg*m[ogSIic%E'OJ.*B'+Aq0Yhe2fGnO-4$WZ;KC"VYV`p#A"X*)m:n,&Kr2<7#Cu$`@DARG9^Lcu%i8eTi&AgA;3m=R8kml_6kGQ*adU-$HJg,C%q*:LhS,T56<`9680MfU.dX,Z7\!V7Mj4P]9MK,(6MFb<-+u+K!7*hU2.bpFC.fc%\G@lCs+bi7Z39]WF#W@bK.i,h,"OCQ=mbiK&%+f[pfe3j,!k\bBPYG5#am:@(.O0;sNiD@uBWZ#'c]ffCOmR7:NQM;=s4-IVGQug%^E\;W]M3gu$F56$R=a?RM*:NR8Ye6:?HYXW`%0H.a8<hrR[(2=q,c2AS[N-T1m]Mt:c7T9l9#O[slnlS7H.R0`c]YnBU$"gb<[?YXZh3rWA!a+$m[F.!>P-e.DSOrWI?X7HB#=WT>%\Tg*]Nhi?p9Gub?3KpPV`(6e?7mpJ$:/c1.gui&u$[63"h.jX8>d+?0mn%\IGJ0#(_I3'2[Z_]j*;n789k6,C(k#d=pX,/(7W]IC%'1A7O3Sgin2RoQabI05,BM"?JBP2'gjfGO>N"/_9q9[9->Zi(='C2#9X#K+^lJ3atFdcQ<=)>dSX=lAR*0oh3>ZI-O*@JDU)dlfj%Q>NZo^bhT)8`@!MZ/AhWC-m=#Nk*Yd9<K/h?d^#@b&tqm2DqkHKr-&@Z5d5qTg-po[Vb9V'5rc8T'3/TA[W5rJK1u\R#F75EZXUY%SJ`fG.d+:gm5+;gD=;k/8%2?.mmngLm*!,]?X!8PZ0:trq>js#iG3<.eX(McF1GA;HjRhW1,e4=GOc^0A,=s@9)ooQo@0*,JP=%(%?NNbO[i%p4-%JR$8bFD+[H/tSpEb>D(6X%O@&'h>^''PJ'nJ#h2rUp>#,qA2Hme?n96^q3R"TK&>qRHEfXe7sn93B"BI/$4+QWqt%)865-k/t:h!CX7*`L1ZfGn]_1\J%AuKW+kQ>Ai3>H282MJC^U/'**9ddX;@`IIUS'^a=)sP<T(aTt6FL'L6p'h`V;j&pH*dU>IB.%?g"mTPep%\mS=[]gkkrg1REHYHP8YHZls].A3oo03&is)JQu(`5C!p_N746rU7k$K-6PucdG2DA$CDg4WAaj2<D)&9!5`GFh?4"n%O6YR)J8<@Lh?9'Np0ul6]a8(oi5!#4BUFI&53Xp`1PE,.e!]K!(/7Q?7pmDd<p+U0l>CP/+l#AR`KGL.A`8fXi%u5l!>T-N@R9NJ%4V>6L_UpNI5"5F9Sre%o/CqjR`#,[G3hg4t.E>L<F0:]Tl24gn]E;*1"WW8]^uW@02=76sc^I2Oo,5#&O=@@nA<'Bp2T1n2Veg)W%:"Z&La>`3!Q:9.K[a.j^+W(WN%k^eubSE>TE'uj_g1pUZ0'3e69;CCS^;s=LR[*uk_EY=](HpZkrF7&K<[S.8,:$to6+Oe.]X4I0%]HUK@7q:;`N^q209ds`_5UA!QYMt=jXkPK,&u[+("p8D?Zg@<UQgA1J@ChN+$,SWTPdOc+Y:13NB^2?R/LJaR8K@9"9Gj,5e.V2S%NMF7aZqf/[EtY6p9AShh2FV^7.J3-FP&#dr&fSY<LonUqThZLBfBBBsi']N;=ToDF#+6p2pJCOQcJ,q5W-?SeM.>r\a<I83'A9PJ%(/f(FHZD/]NX)tslRaAJ5hboN*JuGjSrT*jLNBoRT?VfT:FNJ@KB#9XeRL5@q&Dp89);)LJ^fdm%(SH@/:o9k5(`8h@X*nn'>,W(%PkUNsku8PHST(3ef=?8$:hTs(\j5g_*&D5XIJQfqCt"``F.>?,@!nihI1Is/HR,6F(q!kF?#)#X%HT.Yq?'6G?UH#7@/SNu+JBat%k8l_0W<2%R*8f*`8F<A)O?58M,"OK`,KLAUOBB>h"l<.]anj3)1oc/h8pF%PbKRYB;J6i9GD@18\s)^J<rVN_`:(sepaQ_[CZG.J%OL3keVh):g3[q"acrjUcX3!6],,.)0\(p3P;D2<N;,%q*5OA*o`5LEWps*=sD4X:&)F#naVUe`D;&6nu%tp&F>k\D"Dg)]\IPc+R%`&1AdJ*B:=DgBXG&M]RHN6^rngJ,HBPsc<PRdtB^[9F.KfbpDIKr'5qqI!$,mtNtiWUO-7oVdaff[;O`nCS;P#=c<I#VUB&Ob\i\%_0$(4V76Wl7$T93f+q/CO.QGe976oI<=L[@G3,p_MmLuK)C%7r1nbJV)UP^qcmBbD8B#'OF6Zj\iBYh%3l]>=@>SL6:g'FH'h.Oj%lu\.W0GLI'LKV.Z%7DjSR+H)oG@:l=@`(Ab<oe/"UcVj1`8T?E@]UL2(g/XCejTYFe.6?\=c6PWC6c5BCO2QQAtcFp48q87Y*kh7%"8gNaZbjQBje1A.quC0.OF#]\n((W&7Dt^.82'fpE8la!lH6s_O09ZW[#nI1KkFY*SkIP]KT(+;M4($C:(N1r\3%\3=V*>h^lS\\%N:#<CRFPY&\a_;S0*4()0??QK/kBR(((uM)S%VoV+pPB_1rNU&(pYd!MC>BATfINIGIuMBKL+S(0B(`eG0%W0=2L7P;n;+HYiLSb%VBVrY[*8u%X<S,8[d%!0MLN_W5O-dTcp!`PM=ZTn%n!7&+F)brjH^*8QfN6l`CD;'LjE74YfXqi]3HH9>Y(r+aDi4*H)j;_A-*K(%(!+3B02VO:?V:B(n6s&%5Sr8bs-?hSrkVj=0*W`2T,>Wbs"'.0O!B<m0#N"k;T<=)g@[/_doSLsd=kG%6K+++d\#*<8Q;D9.co@i%G9@@?1$='Gj@llI1+S?_@(6diPO^bWq63Kk_JEI=X.jsDOEc"=Pa;li\>n9G?#K7--e/S`JoC6$77R7$JKegXNa_`$b2aa)NQ.cr%1N(R25:7^rdjfPO.Vua\\+6%=U+Y<Phs"4@pohH]QMSApV)KH=*]/#=<fkCG,Rr$RB7[O&>a!Af+,urO[Lo&WjI!;5k>Y[nP+H,q%/U;X$NO@/tfLYGV3/!3tP5@uu#T$91-kk&p@cW*>`(*1l']*+n*@E<NbQn_*eBqi%7ClKuq4f6)dS`G2?7IrlF\46lUoAa+YpN1f%+AJnHY,U9>CT;ND2:[Ki9f9dT;d\\Tn,p]joMi"rLKH+?]@sUP/<(BVq9l>'+bE?3a<fY#:a?M(0pd-'k_^T5kq;:^&Jb.RFGC@[%PU8i<D=+XTO64l_BgZ)G"3B;D,f,>;HD<P-&*+:(`R<QGD9;Q`h.:1:;8I8tgh5`=\@5ceS[RQ:VEnS`!WUZhh`X7)[5i/4m/JRf%r8%6;SY=;sbO5>Z.WL^Brb@^5?/bb4.^sr6p\/&!jk@VUA#]&X:1R<5bp86*$,ZXN%C<=&qhIdO_u18FJ#maj-T^5eZBXL_P65Jh%Fo_,8iW-:Bk.]XPABA.R1_U+U-0PjE&ETPP?'5;GP&5G+5!+9GQo<RT!4##H8H'^NX6E79rW0P-N(;Yf('W;06#lpTe5DM-B1R4G%r%!!kXS$Q4=?!S?[*W/g\`Gn7H[INBc4`dUl.@ULGN/Tf)TUh9U"WN>/1trB:jW,Ho1-BA5ifqP3BDn*pWp)1ro(OS7*2b3B39?W%$k)g52XuF:rN#c=Dg).1.\N_F$aZ9c24"<ol,X;#s%9Z@r4`IZ)<(TY#i?rOra1B8Ejt*0<kiP3Hr2.NJGtfqJ3`T8E&`AaH^^=Y%!sktM%UdhrFi2l7Jl6dF!Q9'QI+fbBE6.R>qgVV;)\2TQ^uE6[iVlj#G'<Tj85hh$j].H0rl%t(r`+@T2Vc'&mO`?oK`=QFBPsVj%G*nWEl\SlUrCe@sC8HcRir7L%YFLiEpBSg&#A1jMK>_'\22_-`GBLosh``^8I_*TV-KUd>/i&Bhcpri%#dPKscMem5B8Q:tEE83C%H.@s^o29+)Eb`[#9pL&eH7=)d6AB>ID0%.87uQ$6%ER]pr_8`BnZHJ%[:]h2m0Q(K#7_4S20SW3'TTN0P2$:=j<fP+\dIti'/h(V%I`n]341eoFZ*n8RoJeks_uc!Wgj8]AD_N/H3B%d>N/FfXH%#@m_8*rtOp8@YCKS_(9<8\?7D<47cEtQaR([BD"i5+?=#>joXe%%D%q;H']ca?T]QtsDe_TuOPKI4<kJUGCF4&"$0@!>VH=uIRQ4@AaSZ0-&:gjYIS>C:iu*%$5Z)fo/OJ=D"o@mnus8fUA_icF?$hV/pI%aoP5!>HaW6IoVB#Wk\p8eIEjil7.kOVNE=%;^he:?WFXc7AOUQJ.MFZAU+p2P<Vua%ro"VjN]62.Q!)6#'iB]Gs57K,F5e):AT"o%Sf=!Mqo\mY<PR6>?L\)6)fe.TWlY'RJQ-p5+FB<"I\uSp:@agV3HKD7pZtSZ>cZ^3;R0RgChu[qbU8=0b\rDobe*Jlg]MYMge2a`%",W]TAdjK]Cod9TJrr?^Yrg&#*U%(k5.Qj/FLGLp2kS<unCu<jS7.n2#K#Wf9>],]HA(9)eoWuGOYggnE2gt%#Y@\!m<N@%Q'Ssf%E*&d`<XlWYIJGVB."U_Xk)[Gto6/?e9:`TqkTm^&k[Xp=8?64aVNnUND"@RWQVN`#h!+N(H'u4Pc=H7(E0EFN_nPP6rje</4-]8^%o*<$&_q3W;@kh#s:ADn.>B5lMDWN*M1U)q!+i#ue)j1f/pDC*c\+@)tYU\b$`UXi>mO]3h]hom[$N1b+o!HikcU6_]G:L!ZME7^,%2D]bE35p.srnTY0J,AaK:i'#cS\=IGP05*PCRBc1YpM[@YCb-*6!6U_]5B:0LpS<jh!nK?LiSOpUXrL$Jf?PaN%`.X#'I2YZm?Ec%R3QoW`JE'H?AQH>W8V#.]`)\JO`baIa;-81GlItF]W:1,WY>P"3\-Zu&gS4^IhLFpUqo(R/F\sq:#97HdYW"!45E(LY>^c4s8!P-%BBrQ$4CbSsniQ<)%#sOJglLc%lW*2bqd<]E_Wi^iKNu)fP&2(._bSjdeK_JqVFT%]*A%0Dari0.Y_)Ll6cd8O=dlh];`ZMX^8ZZ$%?a8@V)s["BiR&\$9Gh\6'O9$_'&<l`_)^X/n:mH-hHaTf'4i/-\p[I_BC7YVc`HF/<7d,#1CM3geE[Yels$NW/7Eco@.g)/&;F9J%)J>c_8.7[9'DlIb<$StI$KOUcRMjqYLd&7Detj^XItQADmZq))UrT76.He`C=f5LS8]p<hRTRU8=hQ+_<pq]+eVS<XFh2ur?7.@i%ec1esFlA&+3t'%p8nLl)_do]h$J=tCg,4fIPfb"<<#n!=m?gGX2rokTh'M`6RU!t)DHFb5WNNCml5h&#7=o1Y(=QR8m^BcD)+7J_%:Dqt+8-5iZZbRN#2L0M'R829(6NSDmc,hteDf)pHj^I(`D&N%iS*eP(r7ttChj_=P<>rU&``Ht7PhX0b]POnlQ>N_$<B_"emBa9h%hmuUuI>9P<],]t[>:b6hp=WYdie?`bD71;$X3K5)"DY9fQ3ZI-]u0KO+%`V[%,'gc9jX>@-T;M#>$j\7F(=n?2qX9`"XM5HnH_bU%H@J4I3(oC1jV:o%Q,mhYej+)6hXq/,]/LpW!/fV`-u7[jkjI82rWpJWE8H28Y=#AbNB3n_/ig5,DBr*^j-+,%5<sHRDQSTQLd&\?%YTYY(YU*oS56umRm&r6<$(oD+meGoX0^eTBoH:1GM!b^H$5Ydu-4Qt0VQ[!61F=lD+FLSO;L&^E`igeL-^&dkN"/lOOaW-:\a#@8%oc\7^#H!bKANlN-bQ0WhZ#iDO^S8]%pPXl5bA:b(ClS.Vm`Ek@.TGf8Q_j/EUELg;W[gR8MLf1mDO%g%97#WVK9dNtai*]*KjMPC%6tY+8,ABIXeuAr>[&%F"^@`\TF>n2ajC1WBQ3I2VC6hdOH#/B%I%&jV=*TjRM?%FC$09+BraG2;^Kf0dMQ?H+TNkCrSlL_[dI#6X%f;l;$qX1UMgO09D)u6%9RT'KFe\u"l=16AX"q88P//B4_-!tt0=fa_6A_/HUMG+><A6\Q>Qt;Uf)Y.Kel;+<AgObMkXl`?h6Uts3%=d.(.MQb7nnoi5:bFP%-k9RU+k@A5D"rEZ3+BgNY7=W-I-d#T[KZCI4cJ<,KE+m[G[K]7EjVQ)Jr>&*d&c9f;?"\5_D``%t6Vj^r%B*7ZD\RV),mk*K"PMTNprWXpNIFs21rm\"]Tc=I)T'*bh4gR$0T:"FLXdF6sq_B,9.<7MrWQn$I=iHm5hNDs%qb+SDWgr*AGFk%?%lEWEpTh_(Xa54:9q#iT$X7+`%Y9C)e^;ol*D.$9FmQEJh&OTqE<dg%JDfL&c%n41NSjaPFSq:h7e9I&=fRCOP0.iq,B>6"X3T\3A%=8oU:+"(*-\[RrU9C1i2p<j',(a`&XgU\[=i>45_#et8&jV5LYZ/jN=JQU\ifdM"8+FK"A#<BufG@8W8!.shW!-6'.JP4kCOC&mt%m'ZSse-t?Xa8e\B.%:4t.X^Oi,iS_fRn2r07gt_;,'^@K7Q.Y,_Y6!a[HGm+Q[N.C2mJ7ZLqB^8,0mERKV?pCpBZ'5%Ab#s'<YU"%#47YXC%gAqqoK2A\<eefYW#H2:a1CoAn^.)o$I<o%Zu<H/eH4P*%T9_G-fg<T$+_P0X/Lk_Vs_iPuH1X_9e>E6%fdHX^W*CEKBdY%.XMnqW4qkI4DAj&-a>O55C^ejgX5lS<KOKYMDnEl\mUMp&s+9$9=BEM>FuJX+"?hQK.uCAZZY\=$J/E9nMGDFmb7$N>;<W4bBKB;%P*[8AaKt/dLg9K4@JX`]S)eCBLS^*Z9;\3IfSC75E>d1mqtr`^&<jGYX,dLkFLr%LVTuFie.q)pnZ7`%;n!H.Hpk^7cVu-H?K[(<%,PLH/qH9P8V<*bH;58YID\qj^TbB'j\5daL]&AaH,Z<4$g+Db(#TZqkQHl(\Vb2*R%QjSRGh:;39an9LR&jtW09n/cCe\%:Sn2mS%RCaBHk\332q7d_]-XJn?gdH%c*Sq@NW!`#WXcj+RV/n5fdj5D$=KL5UfM>WVDt73hXue0:#GgRP`jLbXffhZ,_j4n?"bW`.8Nr68%V%YW(7rpZN>ANj$2-e9KMMPbSG*2DRYb=W;7nMCorHXf?l$hl<fErU7&a88.Y1r\:AW("&>80_Hko0:&[WK&^ENnQXP1Ii>^lqT;%T1HLo4h9#%Q&oBGK?IIS;tsC43LGC+pq%lMW5k(2U<(.d`=BUqJ6qRJWD39pMI1t`C,L]rrKQ8G;_VP7UTUjY,]\<JdoG<A,0"Y'%]9Z:>G^.Z20#b@2V!bol>sh&M/PNW'cC:[iH5f9ub48sn%9g%',q?$9nnpnW.ak5K`,<^;L;g;n2('7WJF6I$@Bj5@NFZ*Q^oZp&%VHpQ:UY-%pYBm47#_6R4HcpTOk0pXofbI^5N/^hZl_CW)Y1WRdIFo:hWh@;O/m4p`^DZEO_rCJ"MgoBW_Q[iYCb;WL%1Dl_e0Qn%%5TVTM\RC%DFNFT,_ZD&gbSdbsEo4//-:FKqc'H>$<N1pjQGl<>l['o+i^'0\W#VZ<#*78n0J0`Ij;t2;AqB5qQkkEfdj"fi9T.];%Qkl@RQFODn((_+u$-[;&?ja$1!3WF?oaJDXGp[>80UQJc_3DtJX_hY(@UJsGQJ32P@a91b((+Tq_S7hCK$E(Z=.lI,[)9$H4f3=1%0l5*H4:lih/[1s&1q@#q<P*AO&AnRNIb^O4Yh7$PRs-V=9NFANZl9dhpMR/4ol+.Eq`$=mWon6=Ye83t7d]PBMc=k*q"_W=OR&M4%\R5gtDr<\_.T[gXi'@(a@,>PiOOr/qUHp=feg0dFAi#n(IA>1^@s-2_=d%MiA`6\HJ.9V)NF<'1Ss@&`'jKEohEg[)heESKXlaNL%CTG&/e[jim\XH.,&7CdH2I*uY/JZUs+a"'XhXa.,s41-6L4jchY1"T*&oV/p's3AEh<Ik[;=;#Rd+riiOIFM$`F.&HiqlmiO$U3]%M)>VD\,+(L<<f_"s#]TB.5!09e=<U;(Ima.=(/ha]!kl1=93@9fc#1E(0/Vkr/C:_LbomD\X9gR!#;\oMNfM)Pa[iLa7Qi*ZSZOh%G@c?;UgR[Sl;!>@`BIGh>'GRFC7W3,1=o?)_fN5<0graJ$m^!MF\0ud/A5tpoZK)%mkC:V0f^l;ej*4M*0g)ef,hsr:5ib,;[CDu%iS5i_:;oV;fbu,fI8u-?Z/c38Q<0n?X8@`Q)6/jBD*&.+H-">50#MrN![JN>\`GCE2oBRt)e!j42\/N&NXDi[gep!pUlbVBa'Vs`%DRVl[:nF'fE.#V59"$O5=Cljr'`DBeQn^`.gVTfa.N6u%CZ"Xgh":%bfCHm3;Co>;[1V"K1:OGUpYR,HZ`=H1n"NJMiq8!uo=9";%+.T/'mgM"6gim['J\/J9.SsQ].5u$&N(X1c[)a#].o]r:W?OiR,_sEYi"=l"T]s%!4t%5A&58%,9\/9;1R%P$1=Z+?6;m2ca59;h%@^nRMX]m3@7lZ&E_+A<,We;DAOt8.&9:'0iO+BrunI1_D!qK$T)'3ka"O+L$I+oXCY*SUWEZUj.p!Zl?L>9no&BeW2\U-fq.!Jmu%MK%?s0+k$qRdsULK5+7^kFu`3BAKlt,20m!-iO^YW)Z,5,;`6o[KU)60jUR+/X+*(BW,N^3e0>BW>WNTj5gZG@BJ`[9-]sc^Jq6U%.L"M7gh_U+?YhK"C^2luFX?]'UNd&WaS3p(Uf]9TcNiIb@W*^(=0Ym+1,DKo#*l=1bo!M^\E&WG,4-"r40iU,OW%;&=%Q@+db+DI%Ud2+noR@NO1EsMK!6A^aJ;f(0jlGKYM3ToUQ,6GFT!'S'nia2KMLD#I?$8;gK=?s@dVKW<Os<cFQMQt2mK!&M247K(LM1Ls+4"t&%.k@aqO:Vl$*,5o^FK%]@`DJWO-aGl^IgrM:>+3%m?HpW*SWB#FCj^^W0+b"M[@U"@dSNh[$2$*N1fS8#Ob!R?:^YbZ)n]faAF#El%;^+SQZ&4(db5N)PS8Q'jJab/ApO<ga,a8.Y'_"TK46TgE[bccIW!sAc91B*9P?fL.4JePeYPQA\/<sYQ]Hr!4PSMdkgkq:bR(IpC%h0S<"B#0e-@e?b.5V8saQ_?!42FT[q\jnG1I0NR\l,lhbkD;CZ9FRibdYR:#b5Js;Co[-.Z`&Xg,0+au_0Fdu]"2%>BPJ\S/d,,,%.P!?E'a5^F9AM.uKK:B;F!1+sF9a_*lF+q@j[M_G`f+P=BnS+*(tCG(rdT.*)"!7#h;u$L$O.OmM[+quJ&Cki2T,/+[n"fuXX*0o%JL#N4b5;bmA1G('MS+uTZ2:c\&oSZ1]$pshHD;%AP8tLfCFm-mPWR@!`8=LF5J$HG,'0uXmW1L57%&f<nMY8,2iAP',$PZEi5S:>%S"r+%$n#G+Q8b@TeO"_n8!E@CK@S5pB.UZsGlXu8Cq5-H9oWB.df\@5R_L\8_=$%gY[e?[]09'rjH^[^U72tBWroko,P(dT%j3kZ%7QSF\r*e(1R\;.<c1;/J=NQ6RDE?ZR,k)G`D?'<l,bWD.+.N1\;.8*:9&#IuH]Cc"+r&3?5KQe)CX(2;HW=V"iRDJ9;$CM0q#XFm%L=`%'e1/r)Vi$;Dl$]h^QkEeu)Z;r/,u[-\Y\kur2u6F1U7d18EBqC%E]Y&<lU--"-)%s+XA@9(XK:0`BAU*kK"Q?FihS>*GH:#e%1[WPN(Cf!"VI[?4*K;)h2H=c[G&[1KFaiHQfs.&,65(V_W*i6Ho.;NuaaI.UEc0E8n%?m+\94Bj@H>NFF_MPLZlR?X&ZT77Nm[8/%Wc0@<m]7GmB*]-MG_bCQW^lJZ$<9(JTaEB%f0*)!^_E#a$J*Ik/VPKqf3N6$7k4-l#:^@WY3Wj=ptMEd:"U(Zp-=<Gc<De#'s'a#%ja]^^[ms9YE1peF/!O\L&G^cqO4_9GXSnt:47*t8rA)Xa4&"i#o?di$gbc[i&k=1"9%e2@deO)i06&neg,Pc^gf@QUVlLK`[B//r%<#c@__j/=IB#^U#3OP-HpQI7i"1,dHfBln)7^VO=N2$t6cF<)J1pS<LVSBk`mAH_AcMPH0SW?5[qoDlja4g+3M"IJtpcYJ>>3_'A%&WU;T[Q04H`nGqhV-'t%%1cPsd]7!o3;+mZ4cW!6hbIL[ZCM3q]3<5%[f]\+??%_%J8$LIYMjs->t.!pE@`,hj<&-MZtPoK,4*'4%njM"0>>c!a[VQAJiduCVg-0\&ABEQq&Pkj&i7#t66G;5j]X8B8@uVP-,-3SBh_U9]*(f<;kpnn6d0ci$:Ia!kh(=Z)P7]DA2psGl%\o0_I<2:_Z?]Ki4f;R25'-E2ef@m[>7:O;cgO>h'd3S2,%n9f%5Ke-'9Cf:mDFEI3DI&QCeMlec.X%;V#)"]q@E4IJ\s@<FoO+CL%ST&,oRs0e`BLIt3[<f1HNI09i)AFdJ8CGrc:d_g^'<Y:D$2PpiLQjHKi=2u'!Wtk`+/Y)7Ag/.6>:=V!<Ou>rc\QVrb6cLN%50DF%6F:9^MZ+5MSLS9`;sk=j14.nq)%.J:62jK*WaQts`[;>gG5i>`?[DLp0FL&MZq;n^HN5!:ZDlABVa!Z/-;C12H0>Mr]Q0X#4hD[N%ShJVNPgYGp9Z"fHUcY<j/kQE0'hqAaR\SNdeZ9M".Nm1p=D>]<MFk./AEQ1hj#V>77$B987^`CR[KHm=ghCaTH)Ns4da&#ciI5Cs%F7MmZ;@]#FLq$#@qgH!:L1SsV<B,.rSiNf7g%h1`jt,?Ie&A:Od1qS;Mr(5%<7TH17;e?93EHG"$FjqJ[2;u5Fs:+sbf!dLUb7B`%l;S1O0oKgR0dD#jhqX=[SEI)o4%Dq<UX%kiZPnO\C#1kB(Z$`hk:$>;e\Mgc*1+R#'_lY9*2QL$+B/!Z;-.PBjICk_f1s%?l<%js%gG@a"4sndj/8P].^r<XZq1dmu)j5Sis2]V01fQ>V;g`ZYYA\!^DpCr`aYh+Ti[-qk\(nPh@L\X);8P<ufB0#'cDq^1cd"PR/JQGq%V/qXu,Ne"63QIs"e0;uZ\RF/O`t+N.:Ph"!c"Bb/'pAq<kb4$+oUO_mdRkTK8]\^=o6K`Dls=GJM0FuS(<cdd$Aqf^akf%FgTQbU%Rp,ITPIp"4AH+cA,n@L#bUCS!LNN3#Z6Ki?BOK(8GL/YOmWW]u0tt\Y3uiA&6MAdB5</g$%imdHAksI/Y+8PD4Rpeg](&U$?L$$G%Ee>l)F@0@K?,'8JSM,/eY:VAQ]d-`(qrj^$1<sDlam4g/ZX638$i.*rjJ$-NpF=9R#KsNr]PX<eKbP>oMs*pHXM325s3:Mf>$mjY%DG+[>p#aCE/pPA\b\t4;luufc^<1bLH!DtMfDC'tB7KeSs7tFLr#b2'IWOCg%gf6pKEs1ZFE1c:"lqpfOpe(Yj;JR6Xri\a2+1F+%DMV3Nm0FgT:CX_DlGI:di'O%e2M!$eK'hqk=>R8!T3p=.6:qRL9BnG(7'T97A3;(M<?b26ajEc$j=$)25IVi<]*@=c:7<?s42,m&%^-Zl*(96FN,_e(:PD8t8\"(h6-5H804F&_jZcL`SjTr/S!!a-<*$]fJ2ZBdSNSKaR\U9MPD^P&b*6I"<;$4p;YX>QG9G#'d>Z(+^%%$BKT'Co5A.%\_CqX(VrI$Zo?jgq7jARg\%,*n?FS1l1!-:+RNMg=.TG4T##kpdf<i,o0u/b.oM=,8jnD2>1+);ulIq41th?R=k3%MKi_G_8Z@hHClYdY1Jj,([V'5OO6oCd_rj(Mug><bT"25"k%Wd&#=8=r6uc!F4\l23,:-u9R**7_6NAo\1h>chZ!?op:/`Q2jjU<%B?%0aPtAj$a<>S!L*07CQFjN>)I>lp^8e]hN7OClHm%4S^]0M%N]cl-)B@4biWEUc"YAc$"[iaI!@+),0m-1cMQ`%-Kc8r'Hs%Br%Jfuo*I<0H-.u%BlGFYji+JDr43e;G,#&ZW6Nl3;uPF6Cu;/.R-7&3%m#WmOT;@7)ChQk3nO[gfT,T!9GYUc>pa,.YOdL['cM!/[W%$kL\",,2i6U;EhWW@ARJ^oMF.mi*2ibe0<UDHIPI_8,K4")Ft(,u!bnYc1c:NofnTX+`m9W#d^(!m%bqBcRM.,%l-kN8m:VT<&I&%Def<TnqOFIL.K^m;a1%%*]^eaZaN-gUFiYO3^uupeV'n&T<t%;R&!6:X%P#!Qf29h6Ntqq(:r;UV3iF(^0E(N6;hnL_03h6F`2fD%<KIcG31B:X5\(/*b7MR4bk\"QTjo9+W]UjKe4pEVhgo`n,QUT%A^LWM"q,L#OSb"33oXNa*`)2C:GV4+&`9,l<om%9Znqt.=2(p>%52.(S'B-HG4J'YO6fLLACn/RHcJN%\Wq2^daYp3XASc(snbB-+>GU$olRFYLgg,Jacm>!oor7La*eXDqOohc0qH6iA8H2acXQqUG%C:j9GCU38Nob*R=Z2bn<(7b?QTq@r]_sP_KA&^!ad)V`i*eUkJq_-h:U\4Or0<]Kib(jj6iu`O'm2N2KC_#F=Sj,[*K3o.Blsli>%[j<\$K%qdc=p'+VH(9sYHamTA8Jh+H<cER;^KjQgMX0Is_f'Ce>\YLl:l=H`2E#>@f)\)O[.I!8:;B\#!;f19Mkn.C4H@t'm)+@F%Q3T%4oHIFK%lT?e<pQudL0uDSN&@IkH)M4?*q6Som>c2*<B_rWXN*Ta=^2m3N%VU$!9lA1L:bq%P2@FaJJ%AQ4IbMV%<-CDEejdu%C@_<gH&=32%@kd0*#U0%fK-8h(KfB.nnc2g9Tk/*E-"\j$a@Z&03F>AJsg*^RrT;831^a3Gq`@kjQ<Q7\g+F/pJfm8*<G<dEjm8T%_4/_fEAC"$ip&%!lj#liEcRB<LT`uP_DC:?e%/[jYOPo3Tf3'"a/G]K4QUYEi.;qc-lRrRlH"IY]W9ZLicE5)0[=tuXkc\?5c,iC%PQL.@'HWFuYR:J8,'83Sp(l5%8;+^qbBGan@96ZZA?9mG`'Kmh[al'3IV+HM`fP]1NUUS%On0)Q02]sq(fHa5<P7G4@pJkrJgOL@%e-!V]\LOGf=FWE9'+Go.m\[=O<C;arrZcRQ<Gt=f:VF_Im8pu<D">s-B4GVYHHSeZ?M'No"hs1PMZLKS/J!89oTj.#07$hMe%?41%ATHP!\4(/d*/[rHJ:AtbPEN^aEPYu,qOtLPQ6dgBDS:7Bd9XJtnY3YIV>?^(QPS#C]+q.WmSe>%^*K]Vd+s#iUhAMs<&d3g)3X<`%mQOS"aSDXD9q8:PGD?m1Gu<G=^?DcC>AmXPZL[R^lpZ1mj4KOc?G<k$nlEja4gk%L6F(A[*.ZIE[J03.l`%TsY#$,'Ma2H8;;X!g%poM2SVa6oS9BrQHM%92i"c3,W^2t_4opoPG+6oos^-d=0lEUBNRtY>N^Y9.rl_"4Ici="-^\oK'oG@s60I6=`YjDmLq@8h4T8K@k%Xl\FVB(KqDjlGOtH,uVlq_D_3U@taTs7kc$p"HViQ%CN9D9/d*^UP8#/GP6RA?>[*%UJ0?n.og1lK1lOO5Sp6=NmsD^99?r_/VUL%H;[-8PQ$,u%^uf_c5D/:.M!+ZOFT1U!"/WHW>?g@IFP(`1PnF-!?dF2.KhGtrWa<b2\*+8X.DTA9d.GLN+Y.B8<HM"niOnG<TPa.%CgfKb_')m)HB8TH!0!t@.c(GJfJ/s<#_UfT"r%>k2&S)c()nH6@3q]@'eY($ce@Nr#EJNabTU4?l<9rAONXVAh!JL]OXilCJH=`A%p##d@=:q<+-BtLV_"\U*>8MEIH2]/3BO*%<P4fTM;1pPki$erD8<6G[jG4\t0LSAmGqUb`daoUu^j,qN%(-D4f/?3^C#T"`r0%kQ%JFLqc5^YU5U\e-,=YgcoIIpM#kX8uWk\9UrCSJA]"d(Vs7<C.Vm.ID'LQ?6X:M^*#W2`9ST%G<4EM/KkHY.di'VlOHCm/U84QE_i%2G\JIKW[Ap%Da&QjimUf2%%>L2HI^FCPV+T4?3H5bjqlO5S4%Q3;_IK*]n!*/&(reE`iZ-+k:HG*nYW.p+<ZTcY(PYh_"SejEF32%lEQFGVqb9_`Aaqj;tAnq=&Y]Y9.^T88G1CQY);6*+K-3!k:fc)&0INSc38..3T^2cIQCKSFf4#-k&p[i(/t'&QV2P;fHLEHNj2"U%S:Jh3#qtLY!bq&U7S1WH92lqh9$&qj3;]@p30Hb&0L"W\>/E>j$omp86d=@u8>s,]m>OFnY5*'O9f#H'#KJAB@K(!OmPs(OdL5l]%^Wj!3,3lGkn$+Y,#t]`LQnuPsE^"beM478(oA&U(H$Pso<+l\KTn0+AZH3j6r`[RuYI=!`o>\O>7S(DO#l,YZIqe$=<&@hZ<)N2_%Ne`i>q$9A+/fr0q+:-P<+5jrSA%[`ENaKY?f9K:K)cF`L4dLDb;Cq9\fV@4rqt2ZTqtXi/>5!n-'<W4M'tZ2g-P1qd+7!OWb/*"J%]k^q]J?<!a&`RN[dTq\;<C0sU%ucEQ1o0GHlHNDV7$FdY::77ABk4qY;\X2k3kgc!g=-Q&(2#Wg6Uo>NHQl$:[h@'pY`UqV_iJDg%7F>9-d4$h_#LP^YYENSAFS^nKdgZ,6?34oTjgER#!T[gW-66+*S?!/3^,+dW<'o$;'?8!D[A41>FQ\QoU.L^&7(4e`a->j5%BQc!%5/18q/R)oq\NR#kOSXS0YuZes"_?4QG63r7$=k-4ArKC1=n"1;156%e2CY8qmO[F[Qoe)t%S_Aak]W4B)Mm+S/3\)kXIZq[5G$"Y%`)][Vl:;hB_Gj[O-.c2d057IcjkB!a]>".:6=4Y5Y::7_(!<WEP$<NZ1LL!2B/iAXWlRWI7!V+HI#^3']Hua*pQt[><&rR$EhAcO%q$X%l^P(%lBgYbn^uKLfatcpRdj.RiQ%2Sl8">=#Sn6K82"H=!oQs66+PpI',H&\Lbpdjj9Jc!LgZ=qSIFU3"(G4V!]@G7,XF=eY%L"?sfAPpS`io>+(\_o&"VnBd_:T)@GmZaW;3Ti&"=.fRiP\.NUYch53?Yni5G)^p>m@qD1C0c7mQ/>J:YlV:D_*#K9W*OG9p/PL/%@GtJL)XFW3!XfAD^I:n8[\au6hWK56H>U-E3.H^OI?d<2p=6('_7jA@J78*VMh1e=;bPb5`]OCD5f'P`2jfB>J;nhiGRIq7"r&>g%TOBS#Ofn'i'r-9)MNS_i@gml&\1HRWBYs-%>7-:.@Do]dq?f5NQWaPm(T:Z)!"Fj+'G@e#YSbB`HDFuSKQnKu^_dhs93jnO%#_C*%>:3@e@\a>iK01\SJlh[%A].[@gk@E)$u5b+@BbIE8eZ)+9;,H-)AhGf_`T0%MfB.m[lh[LJ5!<62(k1KO,NOp."gJu0t(E52QBK5%3i\Xe&f6bYOp)_\71FneNHfHah>@V:MZI=QaQ'>Cj>i-V!Km;ULl6i'jjofjPU=9h.C#ib#,WV/V2f8'/@D;$Z.,C9`tDAjX\+gn%gaeB1ULRI'ocrV=W;p`L6.Xga_(ehhN+\K'.!J\*1,tR6gk0+/Q!T)Q4RO:CKj1c"i)K?oAjUR>f1ZL@78A!gc/@g^^h&lZ>ot's%dj:+."u@T<:pac1;Y1b0<D0d1QsE"g.uKB@W=r/QmekI[/E*/u[Y?Ur%2XA83(I20VP[pJKC4]NkQ3O]GXKKJkUi/>1`=K-CnI!E%\T?d_rY!4T97)qk#Ygq?#W%&O\Z1H')i[jKAZ!ElBpLR;AkO8e\/c4r-sAA^.JaE^.]>+d.k!?_/C1=6Df*Z,qt(Woph.i'D5eLt%oXEq.H(o%HA^Nnk6@=0@3>]=SkEP_-puta<f:DIh1["[Ij6b=;j)H"5<TEJ)Xo-adqK1<a.q;pDhS.Xbn#<7Kl'.1:fsPR,179n0%-IYA*(=i8*(k;E]NfhB1itnT?i?6%(!XWo-!+]tQHoI["!ObhUP^>2"q.>i-(u.C?B]?h(2N:_@6t;^,=]fj%-/T,s"6MCY/>D"^%d0GQc`V`>9I*kK$-_+T'+A`i4VN-*J?-<&emi5gt=10Bp4'acfS.[\^-YV)QcSWX392L(\?V?s-MW6[d'5cQWM$R%I/"/]NA&'^8%1N?0.(&i?6)1ghUWM'Zuim(4?V5\9&YMc7$lIob\Y(Wc+0%2h<Sb"PmU.G6)+E_/f!!SO!KACPdiHd[LjK__n`R\OX(Fd4].%fq.%kHCDhkRJ#ja@tk3gq<)";UFNBiFYm$;2!,pNZ\\K*f+.,9UJU:fWiuX6r="0QO6\2Z7;P4B!_!'3pH&Jb>bSS&?_mIPrC%#Gc\tR%%-b[S'7O?'e1!p%e$2MK]_q1M)X*>lj5`'3[AeFDpdqs&GVoj.o8TYaZQMQ2jd6]Ve*J=45B5\kg)8M\@h1'p5P_+ob44FU@dVL/%m/5_%)$ePn=:dc^fbmPnR3FAoYZJ%O??Zkj,D0`94#_g"L"AtAW$\8IQP)/pX"7IY)6qQmAitm8N).i.0JfYJQ941l/['6Y2G<ro%C_e!&E=MQ2ET.>./f1g?:?4b1F,pJNCZR5WOK7IcBcq-N$'UoE=u,Cdq?n5dW%q!j-oYoec`GeNF6TZUJ$c$P>A@i(QY2[F:5YU@%/b+TaGX?e&N]@d$)7MBDqb-9tWgr=scW,'n?>&^Q:lJr!da(2KWcEM2Ugr@h[ZL[288,>[^FLm`qJg/MD,Mc:BrrUOCD3RKlReNZ%7":n#6'Z.g:i70hisWQ>diV)7$f>:$eJm)*oQolOhebi=;oO['GG[JG5!I#W$f7%fb54j0FK1ks::\]plhn<M`a;&NnY""V3?5Se%4Al_7[#/_++_[OEmMmWEL2oM[lp-Sn4!rr//X_JaJ"]D!Q)RtaDCV&ef(A[(s)KSA*gn^;;-U%9022<fc8>*,!ef07K(=Tip`+?-%GY?>])Y$D^B+;mZ\R+<X`Fn>'^Z91[Kjk5tQeGu`s2BB?8pe[aO+adh_igO9qlO9khmA0#AEDPY&6rJ1`hftJ$0/3:PDSgu"GqV`%iO=f5Xq,>8g55<jA[Sm&]J2+58[tbTGqU%L_nlac#&d%/_J9Rh+q7>D!b%XC8*"lWl4mZ3;R1j*+c97p2utp-oQNn#bCaM5\!/6D%_YjDQ1'.+W_O<dJrs:7H@;QcMIKuPt!j8;JUgO**K.$.e#Xb:%5^`0]jRY&3GICA*MF6I@$_"Ya1P3_1[7F1M&6XR/O*_5^R?qa2%%o*rtK[X"iJZcqD3Zt/bTLi&1[ZoQ$_@JY1c]\7oZXfm;:ltX8WZ[9i0buQ=*P/'[('%Z/VC4#o2Up\NBa<EJqn\m^L-RcT]CN"l%LPr6:;"-ObnhUjTY0465j"&WA8I_@k;<__;\BR0/-E<a\<Qg%WU8*q03Q?kIC?Z@@48LK)?[6e1Be!>ilNc+ErmFsgS0>``@6o9P%Cl4O;RAi..\<@WuUf>*&S/(mW!MT\WQ2SiB9!7BKSL2\)]Z%0k35aT_Nuo_W:/a6`C-Y&:W3SF&S!dNO3g&a^2ZI5D61/^u"GE,%%P9qR:;,J;,5!DdR*5rRfYc6XL%9E+6_&4$+!QJUrQQmUcf>(QG\_9',A0t`-4B!4Ol't1dG[9km5)WE0KQ$MfiHSaNa>Cn$KGcQ;%pqYO771D-KJr+0L8F!=`\fdi%?eKNdnucbXq^`Sqa]7,%jUMUU_UZ_7)(T`=6uI_J$/G:--'o[%Sf!ZfJFJ3r%s/<L79_EKj+5LT%>i$AiiWGb417q?=jC1CTI9Y)2,cFrd-HKQa&KKCW+Hgr*q'qR4%.;.,1lMs%@\phWQ=o88j5K).9On-Ps!JrP!MIP&p30UU"9-dD%d,8]/TQJp8``aNN,U\arM]`)hT5^tC#p:&8:3$DhRsL6o/R-(8EEcK"j/\YNUs]$]6+\16#M!sIe1%Dnms0gFXnh@GU'jsF5KacE%Y+b8F:GHh1$mY_90jeFP)(4,.^VLuAOUT"sgWp^oG><lH1F?21;"L95%>9g/]$$gj5]4;>#>>J1@&1;("tJ\[!sB*_0eZJ7ikY:V%WBq[SUuoeh94C6OW]_I)/MA=K,a3ikf3Uhd]M7P!!!0X!MVqrEQQsM9n,FXaZ*3X+k2/Ef)<mK[0qI*\2\V4-33oR<:ud(E3;bhB%LHKB'be=]O[R^E-?J"=J'$0+.:FosTe7)Mm4M5jC>-\&_Of_mE%#mQ+%mi<$^UpY35?^s%PR&A#6b4E=8)*tnVf2nJ>ejJlFm33g%B$3^b%;-+BS(Wgi_p;($rV'pdE:(R6*lSc*oo]Vg6_X=X7NRcj=T&Cmo4EP\VYB%PF^f2bg9sJ"X5+QpJ%%>]R\<"Aq@r"&2;p4Z%jEO.T&kYO_3Z57lPpKCSbJ8P8WP9V[rT^K\JG3K</Dbd&>:T?f-Y53ZG^T2eeJqidk$6>b[T/7W`j,iS[ZN"[jH$N[.BoZLHqVCZ%:&1%oHA;R]SX1cnno?4Ag!gDAV.AG6X[X[i^Z77J%%'V>I%[:g_T@Bf9<J:nF/Pq79&`EUZ]0ZnUp*,6^^sogY?rAYR3g&I?doGf%kcK?rDc8<3b'_AI/%'6r^tLf[V+s(k6F&@@f+'Tn_SlU^a@,c%?^>fqY0`I_Am9#5o,9D4F&rsEM/;2?0q!P=?V;O)QBE@LJGH-s%2D3+3W!?SWH(fWci2eIldS"/^\^BF\R7iX%g<g/B#<h-lMOBX&f^[<7KbD7(elG]k;,V3qk,%C_R_,,+MS-+4#8XJ[,:$W.[Y$T0%b\!iC[3;@kZp28T+Z&-d,St('IiEjtkJc&5'i5g,#A:HdPJ+_uHcc0!NdYH>g050R[u1-3diQuA!`am;kTu09a3p"4^J-fPVtN<M%C'mm+>>7#o0;cnCHL>;M@c_sIS\/g9icXDUfmCdH`3mUuIZ%(fjK>ib[+quO:3)3iHo$HJ/ip#,YTTVFo$-+oJusb:UgoE^XLsDl%C`[Acg36UoNRb"Wn7PYBahg5,j;&kK]<S%UogKns+h+fRQsTd7I6;@\L&6<X&Q(V@@$/VY-%R?#$?QeZL72"G_Zol6o6@B.2s[W7%+34+qIUrq=W*:`;9MMNClmK%eEA?51=;"sB!a!.'N^+TsSnH6f>r^rOhLk=g4]buOkI2LL)'Fm(Z\A=>e<beman/+N?eQ#EE"bap%2,Lbpl^f@`$d.VA:Q#,6q`b>*bI0Y83IZ86+dJhqCMkS;a1@^-Wb)HR.EfWbF)1T`dX(I)3+,d.9"Qbo-/O9(2)WpG(2^Ui<meTU%:2(HtY[:6S$WTt_;aj>n3Pl0JniOg.']U-9P%plh&c:V5Z\T*I9^ZLIKUWW)R:a/5hsc:U5[qnnpqjDUphF%.7`-5,3K#G-UVO&e%1VELX8o]ZkA2\fJC3A056)*5a<>G1YIM'1?(q"+hY[Wrl/$!bk,%Kg`UZ!"si\WHAW5!Be<733N;EA/;:7,qHW?p'!kTfa*WKi(R%5o&O2;Ws)1@b-qVY:M,;o:8*UR+%_#6:"[u*/jiL)@RPUTN)3Wi]JTDY#IP4&]4d%6t5Sd@qc@s3Kck%0KuY)=t9PM"0FMG+;qB0%<%Y'^FLTtGVW^D5i+tHh^R8Ol9kDD09?t1W-habbc"2P7#t.bO(de#ChasOsf$_DP?IOC]92VQK'()s/"5t/XnKgm"[EpTH^tOeb%l[U[G`K;8/?IGV?=.P1ejr]`PAV"K>qj//+/O3=0R6L+,hXF5?J5iG!"4MA_1+(F-Ume3k3L!(I)V[bA55Mmo5@\\+!+NY`Lg#[(%KXl-,e$,Hr<HZ^eQT+B-];Ghn;Tk;CrWigN\jb&6&/kgWFs++0LF"sKj_KYF[rhMs3DQ@.=c3dC(djo0%&S/A;g@TGoTkN#jC`?:%n=cs@`C4^:Z/iEdHOu=saZJ2G'h[N?EkT)@U<fDp[096V\I]S&qpZ(t#u<f.e`9`VTPf%p(Wb)thuOOB]lZTM'VaX!1Gm%C1nf5.%5NlEWQS"7.'u!1$^Cic.7$u4C%Xa<<^Y4!/$g^beXPB[*[sF9M'cENQN$BCnc1kMKmIRICn7se2_dWM/6%!cQi_!.8EfX?pYmsfN%Q;@mdA/5G6If8([ROk6C9QJI_C.QQSPpLHa7U'I4.p'?!pYR>@!QP:OKU^%`#P]A5%Sdq81p6]G;705>)&?rRnR)*WL)45I>O]tI%Z8G5]&^j9VEneBH0aW-(FiN`A_3#b-%?^,WSSq*<IL8!:QX=L+k0hI.+FEDBY%]_+0^M[bR`NpukL:>g+R78pR"[Jo-*tkuBk#4$%oC4Ds02Vj00I>pjJPu":G#h1+&PSVsZfPr07q_T]Ws5;=+N@+OC+MI?Q%8$q_oX+"o"3IrajUa3<(-o`GRcu;#r=u)*R-9>O+SG#%]f3T=lh[r:fn%1I/!5LQR[<Y)Rd*LNQ`h/O5CMiGV)enSDCKd3bgRaUaqG0^aiOpX_fQ[9#^AZ3FW$U-%6X3.Zm7)ZjL6bT9TiC2%bnAaL"sXnln)d9dJE8qD`BrTl'j_5gk7f5SQA&UVdj:L0/0oji`ej=i4OLqH0m/9!Y=nhj:*pL)JOh[P[_tVV9Y1R;P?5r+WUb)W%Q-ENRFX^4tCq8O4KE.qA52Nu;h/.JL`jKB9O!?h#i1[RIZC'[_`qJtg,d-6pA2MD".t5?KU!ghjAFT/R(!1M7`c3F9iDb>%$pZ96%o,lXVbfru;i>^6Si6(E3_[N\O,0rqor26W49P;:;m_I%#O*8`lpYM'imkhR"?t?mQ?pdRNL3"It);G5b`-,g=ia+\5ikIatCtd.W%J]+g<K)7lHJqUlQ8/cHa7+@tXo?Y(ajMa,ZmcumlmLOc8?qgHeZ>LC;b$=;-K\E'%0RU-f^YY_FmU6MS0_IjY^=p_Z83Z1jEbQ88%"2qP+b_.uYFmIi`Kke6,J:2(p8-5k>aZEbuE$MU+>/jhY@DO-JD+=%eXM5'E;Ngsu57'\#S4@Ik-/>32%C,-#%?Y5d:P_@6,+_14%\sq:INklV(r!q=gja*_P[Idpo2h]_*T&$*-TWlt&W`(H-VqZb>S3t9sDoT?KSL%S\7E08Dfk0;ff"<n=quOu2+.UY'&#qY0p?3lH%*bd2M]RGH9^.$K)5Qm8uE5;k;#*=0J6+Fl\,`UJ3N,2&Fg(Lh8PUa!,)TjJa2J/Y^@CNbCEM4>nV`52Lk-N5=gq^;.=o(`_IX4ZS%dK@V@?dl$o5ubJk:fl$25a#0#N!%IdEQL;c]JPe'iC7uab3RR=N(dGn#2`/qa)Y\BQe/<'2tH]#.t/S@bu]bsC+I'$4is'19Rq\p%3BR>@E0f`<)YT:J*;C*0R]uDg\`I\'T>Xk)RM_WHWXMS[$jd1HV#ZX:2B\JJWdm[OgjuASYWt=li5Q3/O+.8"9J\U1^DiW#*+.YN%HiBN/.PMJqk8h%EJ+SAg'453Ro'.6W^9C*;KNSh]6i-SF`.9Y,J1\$dmZQ0JfH%:Y;(2;s)YmDMlgNj.*sepj!dSV'WM=#V?U]Vq%'(O4Rh2M""-2A%<:C52:7J#RFV\mJ46u_OOF3]Ei/sfuI89=t;N<pO^@9_Rpr^ff#Bc(.)mNt*Z^8+(U#q->d+I\u/1)h5#^>s\S%$3<LH5e'Hp^l2kB,)h]=P4@)<X/FZYV=4n=\Wq7pA+*s9A:trtL%r0Kq-iSWHn#SXd_IMoFp=Q')C+o4/id]FJKmSc#7*]n'<4ng%\_Ut5$KtHXaP/Wt!<A3l;Ydn9'nZ-iX;&m,bi+gK__">o%tg^a"]:7kg=O]n4LNte3\p2V]lDtVjin/-Ht3Vi4i8aC8Ge97HBm>-%N+XR=ODI@=RdfAEY_n2UJ4R0]ap84u+d^g#FKFe>i+NEQprl%hcfQ7_1TDS*3:%'rW?=#&Y5$!Le/9c6Bp>e49"7lYV'XdV886?I%_3*iqK2Yc$LWq8l,`OH2j+=c$SFZXl5Fj:e\l0Y+o/_A0](fY%T&7nOQ*""/[RVtU]jbm`,5Wc:K7YQn/.M8[.#:k@,cnSSmP-J[%L7L"67ZW;8Q;<S0qR2aHK.*rFL25.q-$7T=9%-Dn#=g`K^/KC_h&8AaFA$?Dg`OIjf@?CkC'D>Bnr1*23bDXdQAe\t?/h^pjZIb(%D-C8Dm^r_sW.Dm:Zc[I9641QmrfLs^co>XgfV*RHTs=G(5gib)da/F2NO>'=A$*MIYt@tDXO/$qg\_`6=*U2]&Gctkois(-<;#H&%pP,2p[5(Id'ReS,[ip$=N]@WOV;RR1Qapg0"j`2!R$O)L$[&jAKXTU8E@r#$$EGPrYqe7@^8g#iG9K?lV`(lO3cYY_0pR$"..kBf%bM$GoKoR&,TnbA#Y,j;bbG!?iE`Ag)Y#3m-RoK_$R_$.ORcmM&O3TKCJ[OQTZL0J$Q)7s!Oe(V[:YVqIDS6RP<L$AQj>@oP&-J^\%2pKdsPB8\<nO!N>lALL6EZ.IWh(b7ADoq[hqb,Z'</$>Mje7Gf^9"GOih`iE(/BaQ(/?CCWNCukAmLtu6pf=%6h8/Vk.3&0KVhp[%=]:<Scr?c$2"c"ZE_o%$'"YY2K]mH]E8GtTd90XO+NrBb5b&5@Op=(4S2uf;SM6=SCFJhl]$&f;7"pX=h4]R;8mPS^1g%fo(%)$7%WEi\[3qW^iiqlhQ'bE1,L%:24a?!p<n<T#1hHf9@&J[De_L5ToVX@_`!9Gi/$FY<Q$@OoYn>@W4*Y7aILElgf!l!7*mpcBbT!%#1%'jflK[jDUnnr]%]!LaPuXt2*&+tmO3e4!F2VbHPFH&[aHO,o("WT%hNn$MAe]gX!YhqFul:[I8B+_g3d>Vs1&_JZhfEJ(k^mMT-g%/*K@7Op;QrpkL.WjB2a.-#r+4RPPQYfGl:4<*T`NTZB#:^G>#)iKTeAV-HXXN3pchPb:[D,DkX-4:**u,3!GLAcotQ?/A[W/N%f<%3VA-9?=B?/785:b"k<qLTfM8qpQh=<hHOHbe)]k=\p[1W-dGfTr"g-#q8F-2jMEU*Po,K8nRWtt8H>^8;iD:=Bh!N9H-*7-m.r-6%dRI"t)Ke<A%>dhO/%:7-USh<gjCjoRk^hJAd4lpb2^N&r-^9Di*@0AoIjGt1hU"AHRX1#OaI/Ku'GMo?af/`5G&PLU1Crn6--ftt%eu.JLZ<e!<9018m$"o-62RkI!m+/l`J\b2).rci>_Qao$9,Bdf:suUl!=^;DShUiNBZUr4qD4rSRS9u<DH"7d?)T/-.nW]DqSnHo%L5K0o8Z:k(]*Y1*G5`O4RLl)ka';'H-!*t4/ZG\tj;`BTI9'\;/r(_M0;bIk@X[-*2UEXh+@CUdB'pofgNn>uKQ(_p<!]KKC#B:r%U%ajX0tb+pT--bV/*Jl#bd2&1b!`q+[2IE.2]]OSbG<=p0q0ALK^]d"ODqK]iY(REZ+q;6/k'^(b+QiN*E8ps3G7b[?b=mtanj_f%,]/^'&RVO0%!e*1d+9EE(IDE""bkQL6X:^(K27l7X#8tllFja:3^p3R::4kQO)J9-Rq@/j=-%:48oCSB<$s^o2-e`2EIt21Ig*pp%pp^b'_0[u`+R^e"dHGRN439Z,YEK`ZRf;<(g8s#"$UrP@U*2LUa/<(M=IHR.$#FoQ*CB$^)Kinri4UF<$L98mNg"#-j]&hnVWi1[%m@'$'^RDh4kRD[J\rqCZ>$!^T)ZROMB`L_$?^0'0E?9C<_+5rpRI*E>KY1(7kAWh-1[UjMk\EaI72Ll*l(r/3*Fo^8CH'@:]Cg'O%9;0s-G"E,g7\;Dtq.Rn",5O+G$(=Q$Jo91*+'m=Da1i@7\0;n8ca8A"/rf+KU/&B&'oG%0M(UVB+[35m\ZU6OY,gD`dT*3eQ.>,B%AUU,]*00O'\?^"c1D$jsZmnkmcdLRF8]WIE/gPH$V:q#38(,0dVK2,Wh3!/Zh'E5FU.ib#DHFb5X0/U01E$+kFpYk=&-<%uHq:q.%].*)'+n!>0#H'X.0!^KT&#(B1;tT7s%%<^H::JQlleK/]8>*[8[c8?&0^Qt+M*EripRjqP4sC>@-/tu-r&la=:fDK),;`h2%SeS3%.6.GA$`CO`T,9$mp2pKc:gC'E1Yj+.G`/D9/K"!n/$a9Y!/4iGh[GLP]PsstBDC-N[5BIecR_0OEFRPHcq)cdGMcl."tQlpiWu!V%D?B,m]\:ZDD'4`AQ$C"C!='aZF`gi`0ZiVV$mp@&hKo?VMu,atnoG49Q^(,InIb1"h=B)94FP/c^f(L]D;p'U^:Lk:?*_CgQ.ktn%j@kjCb6[F9C03qZ<;E`gQ'D/9q6ipZ?l%?`osUnS,ua4Q/\I`)Vtl;g(fk(.Q&HJ%B*C-+_A>/[2nX'bIr"J0gdK*)?dlk;;Q#5s%TXbbaD\E,oQLWU6q]8G;9i.+g6IIV90A9lCGi+]F(q0LS`@F@0.d@C[-+`['L/fP+On6m]A0=l>((uT\6oZI$Q/X<iMR=H[/?':d%@?4K73?_;YYA6O"/hSa*GMXPh`uI.kX+VnnD=qo@dU=_2b)"Ko,E5(Tm<Cn#k#!S%;eV?^?T$Dn!)bWn<Off=mC>@G_n3P.T03>e%JXof<;73sp/>hYoSf41U1;q^H;lV\;d"c$AApBDdh^*t#W:h"COEeaNp'judNgL$8YX8XNEpZ_aaG8:8>Uf5p$(Q(tmW?`qliZ7Y%li:8r=2g!C\ajtJ_3N&m%,Qqu,#W%pY],afW8V7l&qeApYTR+)2FW,@b94qFmWA?%]M@;GaN$UM\$%%I@9<XMFSgqd"=Tb+NEbBW%CRA4-9EXT/N_g5(a6cumRQRPqPYJn_mdK,6'I+$TWk;9%kUob/o9`K$3V!bh=e$X=Z=$)c:'28,P/fDLlp-`P-;7P"%2kM,Zf#DV%1d,87WD7MTcJ7k4+'Dl$L(KM&i[^98Ma\n6eTaMrX+`As>8-"+GKdJF)KKE^cB>Io8Zo-i[OH!Q:J=nCMW!B*S0;(@?psG+65DkL%7Q#d0"4Fsdda<Ctc6;X-\7c"*Vk%@jNRp2f*;IU$C*A7l$&^RKfOuNSMjB&I63&U5&Mfdd+1,N1n(s5nKQS)GitT%A3Rt9^Bf96i%/V]A%OuPh9AAO)OSOG)],RnJkeHR"FqP'bAN:Y-f8t:!\VIsWld68_We+UDh7oE4q+LkNuOMOB+!tc\_*j'B!oSA7FBguq.JXOGH%9;WEN?)UL0AI93+RgT#U6;9%\i87Xm+nX7c&Qqm]>S29s+cT;t8(,U.9NBVIE`Mf36<0R)f2\a'FnKnB50#glY$1`G7)M>"/j0u*%a<G6DM@`16BS<T:`5h84MnQU\Rc44!qD_3P@nsN!@@C0I<f8'p<utl@Q95]jh0HBEC%@(7diCslfn9YBU*\huF;N^@U5\2/\'N4_%gqAVmTWDu`lNgW1p>rg)T,[TQg`q7i&W<h*n^U\>'_d^+5[0kGq8L.d`FACmI:Nc>i/<pVDS%4o(=V/5!(*:9gO+D]et[pE2HJj$%M+IT84lSa&AjrrKJdhFo.T3%'D7Ki_H&UfM9!:s=,u:))rpAi&A!)'N5j"o!/;t+FQ<qodH7rsl)BR]j.9?t/,t]ph/Q<;nn(p_0%#)a$"P--.V>YMHU>HXn4OmC$+C/g`Ur1+QV6.oB^8]#Kn`s%Q3?1^8XRtkd'eRn$K?H/]k6)5S8s.M(QX;(JuPY_EMW9JkIHd&'1%<:_G8Jf[YOci<3&nm]f)K39slI(0DmE-]^hP$@Q,j(bP:/7YO/@$i4!A*p"C`IYc)10E,S9-600\(o"-dTO^!'k4Wdh0uS.8laG;%q;(1UF:=0WfEkrf8bnca525Wp!!EAc*Lg[:(l4/sogMK""(O>Z+G6LV=Fb[R9Lr2F"Et@Q?0+3W@+T)L,46giZTG]A2/T&.>)OGB%K%,RXcQWD"4)Un$[eH"H3-ACTk:pSgZqRdt*h&;B9fe+c4se]r\Q-En(<_eiV0CT230BAr)gRE9!\SLjk<YmjD]hu1hsrkJ*_"*Y%]@7H#9<[,VQTAXq1_ZT%l^fE6>MS)`d4&N:-s697Pm+>'Tr&\m\[SFpPb"VIcPd#<Nhip?jrElFS4h^Eihb,b*-\uB<aOrAdZW$c%pp,LI--6PRL9X0O.O*u1$'%i?EdPa/lQ!?YCXUe\7@2%0#EhQZR,."cQA-)\9)\SWA;Md(^i#!Z.HLg`c9-%H1d9!ZWdeMiRA-)M%>HXKeBfZ$_BPJj'T\>Mq@NAAW=@:@Zmk(fmBl\qifkF@0WV`3],h;mW_Vtbt=(N)n^h%kidC]0Q/'jN7N.llGSOClKrOB?A'#P7(%6pFjQm>10sKn:`'Z_6&P0h.KDG2&&>$7k4\6=72+`Nm4\YW>0Z;<BR]lp."@K3VQm'j"H).k.OHj1;g3'@mJ8S[KN7o=pZqZ51"=%O"(oL9<X*6BQ9Il?`:Z@Z_p]7V4p=R'B6oQb_=nXElG9NP4CS,VIDj#C1.Or23g$RHI?E)+uXKu\*`J.=g\=Y:(^uO=]6>3OrBDj%5FO;B7;'HX+N_,6<83@ZR^Y3lVH=0Y.k7.Z)gMmrp',"TlHh:q=]):4?7;gks%-'.8],br("HMD7J6)3U,l/KW(sfPWfJbH'bMXP%#QG.o/@\UB%93jqjkd#OU$<mdNWk'T6+%qOClUL\]HQI$GF*R=1c`UIDP*3G\N=\&fj@ugEC'D<=Z2ie=_'&DVs3<k/7kct86aAN%Ys'([cu@'A6INpiF340B>WKI3Ud@hA/"0CS]'.$>IC7hdr_;!J4jcsTe'd$>^&XTmH?Qaoap(-SBlFAW(3iKt-LWTBe#D&`cZIp%%kL4HHhWK]#Gu<4r'tR[-g1B/tn/scsf/Q/,+Z2H)mXg8l:qb."XF\=B"#IcSQ;ff;]20Upa`Pa@FuA(KJZJ(a.WFp;ebAQFVFJP1%W_RsU_,V3RBuaWg30NFR0iq@naApd&9<.86\Z.^HY,^ZT*CWq6e.ae=b/j,R&,fVlQX2)bK!hto6\q@7g(+ciL_&2o(O'f><PnW+%MIT&bFueBUJ3(&6dB1GXkmOA673a3o_STQW-W]-X4jent)D@:8c%.,p9pgl(=u%-fIu0@aQ1N`:pF/,#m7i8:US@a1<blaBWtDqX%2"LC=ZfCd$>Pg/f?Z"o.&\<EcWF2,<FH1c[Ce/:-'TII#l#0LR%bP1ae09"-OQB\063i2<r]ELP6lt[##[PJL!V>RgT```GC;DPm%k^\Z$>"%S)n,ZaScuhJ0:d),%#T^-ih8KJ:!*Hcr"'oY+An^"%$7#6@Q>P(qF?n"1i?q+YJ?]`T8*GJ:SJMa_3Kdinkpm4k&Wo+-%)PpruD-N6`;**-u;&ff)!8JSL;N&VYn;F8n#K@,@.7sh]h/c)R%`lBPm;Y/gRUN"#\pcm!\Ej'YL/M+thP,,cmhDRU:D.aC[:[A@%JFHk1'VclTE^YpTP=VPqTQJgc3p-%Y(`a14K[CVW6qLa1pD=pi9<Km]N3;c7(;.Uu0fgGbBYbIDd8?G2W"Gd,EfIUS7L(5a/6!!C%6\mfGb0`Hq@s$'N3EGsOeLYftHYnS>b-YDPPOe-Sf*q$+`$u+u8cg(&]=u=)U,RuWjmcdo0aUrGHTkc#,-ig1(?'Qj&LeO;A>MG,%e\3=1SUi^^L_RO+2TQq,1g#Cr?0SC5FYKfL6fNb8DS^t+e&(lYC^_p9<UW%n(ej#h]gbJq[19gaW#3ebS$^I"Fb.WGK]oU_R1;D>%.V,j-%@5.b29kEtq/6]H+Esrj5W!pIkP5_I9-l?[->OdE__q4P@lC45h-8Lm,!e*#?VP(g=trTt[0PUTEWcnW?c/li+c2=KCYIM[%MX^EU.HiR0YCK+ALm0Z&\?RP!Zh3._6kmoHq$hBoiu9ROmNTl:(TN^``-*#*)&hggcpl2-Z%rQqc#`\#nTdg\WhXu8/b/A?UVEV2%:=Ze+4sta$A%lZ!MWd`OeURT+<EBLJBbPLeB8o>I".rh$UUqjeIM?&"Wt\_H18A+&WTbilO-'WL;=C)DIZA\q9pYPgnWW@?fL8(Y%2UF6OUU=2FFg5::+afSIlN'&Tj>F,S$'R>]9E!Q)ViW!3G%i.e&5N1k.fq/[UmPM:V(oDla9$@l3t'XD;&[gi\fHUC)<;e,At2NN%=lQ8TAGgV>@nL&TmShJn"ost9'_HIj")R>SZgO,1e9g&<@`M:c0HMH`300!^*[qMBN7p"eYM^uu$g/Nb7^BAU2JSolCnH#&;<Z$J%\];uOW^mKoV6;_sQ<M^5>jfo>G!VA4oR^rcP.W:**:RR19AWh2V3BsKGHuWp5#'jOidQZkCA]W>L5+>I>;Zn7BWD@'P.#*j057I1%H1[--[TZ=tXk$k1<[0*$eHc\&[G`EK[/aD,8qUrZ,n7g6rFs&";5HRl7(FOVI"he@XJOj>op>Jg<&rEen<fQog%uKZ4&f8@B1Y-@%`g.l@,B8L/BtQ&iUW2qh`#<Y+>VVRnCFRcNqTDKA</%=ije7\uYt8XeKU0@#0O&9`K5jD2)R<"8Bim#cmRS7g@DN+_.6(o;AUYOt%_0)M8cceD!DhEOpenQ<ZUdH>C/j:&0b;*ZA]9#F=l@lT+P(k$F8\V[pg>VuV*E&%ec]%)7`GJtl^1n?6IA;q5e;hQ/%Xlm+?.)f6%lm7(&,Yb=JTs*$Fkc=BCp!p!]I5Sl/?dDl%$3)$WWaW7[&JAeN6DNML6aS[`QNU+eHV$a;a^]M<"l<DiV6Ks)l6oN'?Uf8'TMB1K%;iROmh_<Usm8ub/G@kj,+N\)>6$=AB=:K<eGY?=/mk6KGW!\h0jY8:Kbe8o7(>+^]m:42N*!,tY,CbaS`pY-qpJiEOg</k/J<)i'%EtlHV[^fS,+tmC-)cDs1a:0^D>0E\^9A2YrV="[K;sY<VmApN`=492r#ce%J86^E(D&Al'Ri7k1hZ?iR#&FL80*"mgMq?I:;R*V4%XU!CBg"LZ[KEd_d&rGTeXm)lZ?>C_$HKp;nh,Sr;`j&hh@<WO*24$FG5m19U(bZQ7*=iODAMH$ZQFt/\?ZL)=&lrN&[rUDhGmT;t%NARq+*iNLLB?5TF'p:O+'2sH=EFg[:A;CGK[aODI8W;.;V\I3QLf[mI2?o3gD/!6N+*kidh4;Z2$1[7RfUP!L''b'Vge@iZ.L(.,%Tiac2+)IT@Fj%Q?nhV_0V]fLGpNPR&"&=T!A?8<rJ%6ZELMe.08PFf[0OYAj'ul1i9iKUa7!`d<]J?D_Xu6__$EF`!D!/RrhXt8(%e>+bBpuG%KY\Ijmq-&S$4\31Ik0"!IJT[7LJS3I4N;Hep(B(`?ke:HK`A^k5AmZasA*GqrAektoUInbHUn!JYOed`cfCi;nOP8eW%@)hp,(+IgA2@9&^Fkl<a_?YCdHP`$;#H<-?L*F=$f[Namh28R]D\[q_9<=.%UMs!lI9#@mFAa6\4%6.[JBh.H2cGY[15<X8WWj1"%ATBsT.IqSIY',PBgkt0uKkc:*MgihX0.`-S-P"tn5bc.-[_='5N10j=$eQ4EO#8qq=;k\XPiK,da_B+SQ.\,1<\V5rS\\rA.i-2o%8`D"S;i1p4<'Jm'&3Lsh/9%U+KL_f5dL\%bc'>lXie#4Z,]6)?YV&u$TG+WA$>V)8Nm.Q`Rc1f\oMPL0gT%1][>175V7210YUe2P%,gmZC4-7JEQug%^E\:L=R?pBBE81_[8U6`7,JUOb0"7P-PnNjmaMXoP^j0YEHkcPb_H6;m#Z31dAoOZhD"1+pNZ;P0$jU`==Y("f%OYeNCEI5EJC33AnP4e5$qIc#NEu@08$A]NufqJA>7h/pfVhTqj3B_];r7j[RY%Fc(l#u-L<lLR6hNG.c]$%`CU4VDpGaagYD4`U7%gU54uW/+L"T%>Z^gYO6u%Bk?.F\!<`akpkZ)+4Um*fnKY+>NT*<90etdgGOrl&HG=)Wl^b(AdO+Y&:D?8QE6)@n<W"DqZ;5qRBsE%JSXNXdoA6TJMaQj\Y`OlY,KoS<`C:m'NM,m3I.1+UE7+nQ>3G5$5c[GnO21V3;PK*+^Y$7?c\m(2OVM5OYgal>i`RA<t"=H.ut;(%.ctib)TI_jZ6EU(7r/+SD..!o$2<KG55Ok9]i,*&R_'ri"%`R[=K2t2/LdI-]>RDkb'EE.gU+Ugh4$*6he<JK0P_PO"\8?DNbW7.%g]p!,'u`*)bfW!-6m-U%J2D;!9N/V>f2V,e/#pu1MJ=u'U>!\OU*>+8io"0D4_9M:?kDV1H@Mm<;7!8HG)@au6+6r1ClULX]HQI#%FdG+&6j:2^n<fBjM)uo_?#;W$<\;c6;UOReh]t1BQ.Xj%(OuuQogK"'@sd*98f]o]XdDbo[<"dRUi_o&a%-O@1TEeKI86!+p.$dU%U!OhJ=N`;TG5Sm+G`Y+FlLN#+U>(ee3ld`qhNG-8Hcqp9P(MR\G++S(g>8'h^TY"LCLi^nmk,?2.,B)Rjm=7*Q7ir7k5hYW+i:)h%]eE"e,fUmm$@OaAHK![+m;\jea,KN76Q9@_es0\XneL"D3c+%q&YQ5-;dNp,g,d3p$Z1#/c)bEXXko.TWs>/X[Mi#:X[[PKlg*mX%"mP,%TrlX[iTu;4kaQcfHBqOC3b3%iJuj#AEelZLY*)6(OYgmp>jT.t.rm#6]<"7e<+q]I*Lc2uRe0T43$'1/Wo4b.LpuG83P&^N%r_>:9Wg5\,bMJl_8;iD-A#W(*d5>acgf\6cOVA4*WdRKGVX7Z:'lT4>7jWG5^)UGW;\OYAXno4G./H@6^=L;2j/Q5V&RNOu<Lt9"%42k2AK[9E_>SY4E]"XVEEE-hG[C$];I>n"mhStC+3gA[)n--tWJQ9ES2-('c_Yb;apg[j"#MU/IOjGSZ/[;K2Zt`,AXi=EX=p6\U%SO0AjgC.O!XTIfYBU'>T6F%Y%Ki**FEeIKh!q';R[#,*-qack"b%/@'=JbcPfng-=,4D>nKlIF#<lWj.$EP//"0;5J$*7=j&Qf3&%92eeA&dXi*h`6X!_>62g`9/pb]BJU<C-s&_&QiW;)8F]PJQ3OjQR0oeq3fg1QO'>a3sSdqbCN[CF?otF%]gS7"07/F?kk"`YtueM%X*flXY<,Bb'kbZnLSLqcO+Q_H,()$'@&VSVO2rf0Na!`J&m;=b&pW1/8OsQH$HcF<BXN.X5@ofQ4,6ksRk*3$d@(?CZK5de-DAti%V:m+Y>+,:i;eQmOT"*(><B(#U+-BPg]<)cMI?;nG'NbM=9uqn9lD:s@YR72*+@onjO;qA^Y:Qo8ek;D[YR9E02-WQrZ:_jXe$YPl%I21lK-KMc*3(Tb:X<)[$?NR8bLN?^c03!'-!f<sEkUqk819Of]r;>$4ltN^uN`=SD<\0=0(&Gu_/6f6=fq3+[`U5P5d!<)Z7![>l%XD>2E1*)h*'DblVe$i?L/SgI:2Ti6]!L2^I&^?/DE?PF5U`;i'AismG/Mp2YoXq!sLXd.PQM_`t/lerMG2%3*I3QaXp']*)'q?6u%-!$oAQCLqJf7to/1noXsaj]?5jBY)lHtkNU+*`%9QZJ?V.cl!PMXPGY9r>1C-hig?fI_>3^dtOAq1tq^BpX1t-78%M?+&G8@L_A[%VMVS,f(>iujKY-r;qBnSVi*qq]8h?,Y.IAi#UugCb5S*.<f*Oh,!XhoQMf9p18D.59+\Mrrjh?<p+ie-]t[\kXR$ZJ127j"l#c:F%;<kA5>)K7U]Cg_OmB<6T?+81`cr;Tlf'0?#7\</JLl>*j5(1CrQUH^3EP:S$d"u'M\402CeDE%eoD^[kFZYrO7eI)M*Vs@n\4F!?%D/\0qcjCC`9-=7e4#@;>JCKdU8He&?nZ&3]jmS^7k%^dF[uXfI=8?L^Y-LW9:El+[76MTj.lg+Fnb/JD<&c'Dj"b2hEKBH7#2XB3%%TULKB'`?keYaX4Z#Ig&#s/QpHIXl/[Rb1@-+ku@\okEGWfsU3KIr.+=r9aCgH?f#Qi+q'cYt+A7p-B`<*&-</*.of9:5m=Q3HF<%B0e^iZ`6i3#is.*bj:CO^%P(M@d[CCeY0XRA&4/!>.o[X$n<MA-XU((P(q$/*/ZEcV'2hg`3AMb>1ZA5>htS=@9K<@Im\-@foe5R%`e*e"B86hWq:bVdWDOGlr+W0j,V*FM&PKY:8_-Kb"h(e$>Ye3=Po2?f`^=Y4Q']5^(1E\\e]H.A%4=]a=,fYnY3Jt:?.HI;n5KWj%diG0TZ5!/7=%,'E1iuYg9K-Op_G/-u``LHE7S1mt7W$GUL-X&%L<r=dbD<G!/BJXFb*!Mh&lhZ2fc;.rm?OctY3NZ4(km%+@5uQ*%-L3FQ2([+2fW\6t8$`Z"`Hsmm$<EHtLEa9Y;/3[Ml;B[Ce"6)p;kknbkgNe);lh.*e$'uQOjl9ue,W.9QFse*,UK1n.<Xp<ZerJc%f4Hsaert8CAsB_kr\Rap=]RIKo!#LN5bde"\^a29mMSlmHV]Gc&#7eL68gIll:c"a[qm)-Mag8`Q0>9oY_K>B$QHfP,]tXmqC5-Y%?Y*fj="+c1Q"&3D5PEk_<L\Ee3R=o<k=*:7S39RnjqMTuU!p5'KqgIM[@8#XSgDcA=C#qi$KY#P\`nmK;sCF(HKL9Q)"hpjSu0Z#%@AQ@;@4?=Aa^0h#^m;Hh?`Kp#/Mp%UW,<E?4n>l8hN>4JCG+[A[6"#>l.S@/aBp91j7gBur_angBds(XA(5k^G5&<OoPNk.4<n`^%N9cLPak5I@N5o;I(F8O!O3-J0cJQ@R.NZh1V+(($[oiPDk6P'%r=6`?;'R8K[LL>>oGS?8*SWcTN7B&B^dK0EiHO`EqsB_k*WS\R%:JF[Odce[&/n3N"OR=mkU\h=_(72[DDodUjaW0uYD8XQFTj0sOj^`]pnm=]pZ1-^h2oW3Ac)s`pQ%U!#j2ohO:$q27BG"utIB21!%;Ru+s4f&4p\1caClSUGHdkj").`HY*UTS4t,"&):JHJ5R,,oFtVu`2P/[<#d-&&)-.6%.bA&m\8C\AR_mEjM)[o'9GR'f9i_sX>&%kLTWJGO^[*KKocS=)JW>F_IDi)-0(aFq`=YI4V>m*GSVf,`_PXb#C5L@Zl)A!^6-(4*<CN,!t/)7uq7L9a*\K$h^G.c\cA$l*7]b%/YWUc@,$K7"'uJ&`6+5m.FR/92AJ:GaOtL8(YA;Y8TIhtcX\J#]?ip5O_b8dj)%0!ADjf)QTW@s_+r+@P*R"WZop+PqC'HK,H;.O%$)-.t6?%"aBO*SJ*f[PnctiZjQ0bS3H*:jl+>i.^A2rmUN]]c@B-i^%Q5H0X-.,ju?T9QiU9da8G07k.b>a;r,rmKMjdPurcW\b.%lUU!g'1cj!['6Amd$#KQD8rnn;^IU\SM7Ht(.?2NFietY'7Gg[]-$01F_@ft![W>mnRYf8f'%,V3RoKN0Sfs+<V?-b7=`5OFB(iD%ohgBX-n5QeL,c'sOP'HjV:T$F&34ek>d`=@1p!Ee=S(UR#ZreXiMqrnj[u]PBO7k&W^Kb>M:#=+&m^dQ-!-p>FB&\9Y0,>C<NuXm%E$P9mYFBO04r&\T$11)kI[Urp+^<N]<s+#L`Y"sQ=;'0&qEgM_M@-9:m$*Q:Q`1Pn9=QI[!p:tl&eS"lXCjKdl1\n$i4SB>%1riU%lcI.=,df^BC@a!4:;Q4YlVJoh)!.V.VG8-DV!mlJI/$u&A2?g]F\N?d</7B`.utcm`eXU9/V4?C@,m&?"Y>IE@Wb810%8bO[`dhq%p;u!/Y@NGoG<"B#&)u6OKOnP4-g,i`SrLg"9eru.9,1O"1@W#%b4<>b23;L!?uG^9P5@^J(EO8WdEa5N]-:GqmQ*5n>C84a'R;0?%=Eph3Y!XFP-[1hV*X`#nWFq(8?!.frQ1]jC;CK+,jefY=m(1DqfO'fR:5`j!VLbB$Z$pT2GWne,>7MqS94g0N$;?g:Ojr`NWR\<t%3X2WXmc,M=a!`h$0Qeh8'gZJE5JJ,]Q:k9,Z:bD$3`qI`r)"jbX/#nb#*Qe@jsl1=W$YQ3PY%QRj-6$]o!.B7nKAoCib.Zg@_\9@%q=B=<ANhAg+&'[-(#kRGnr*:)k5rmf%mIq:b[9^Gj`3uU52Kbm+-M*M%bp"umeLCji@Ph[-26pF)]Gj@l^P>rnf`GG/YgOFjOWh4%GF8@&9<p/)-bp\a6_0#6&%XBodkMOl/o<'t5hrnsM]nb0W-7&dEc;?9/Y?`Cp-1k*ARX80*8^d"c-PB"-q.O,?UOP,8:r2/D;j9]%"ESZQpRSn4M6AIg,nPuENdCpVJRmP5>"4Pe2Ki)I9ittag?O'C,tfP)c,[.X(l!qSeM<g6q7#/Rd.gqWXg\aN?JJLq(mg8p<DC5k%>ug@-otli]'PrRT"k-QLW+kH[6,ll74Lk:8--"1`H9uMbM5;!dBNpQAbE<rPo#qLD+l&\r:GD._q+.]Yg_9<<Rb+XXVO"_rn6!\0%]b^YOq,LFJ<Q3@t7KLm2E@Rks[gMQ@&T+a?%8C1mG,GY#hofo1i8TZN=dMA$;b!K+6BL"VO_]))`k?[f;K!mUnti.F#1=^H>i3?A%8%1OCCALX>8rb-JEp*-6@NFa"c`\to(<`#m1et!64JqkNhCaZ=Rbbu:oo?$\Pkm;6S.^#8e_ei0'A_P/aO&#p$d)R2(9GMF>.HE_%JO/4&p'#"uqQc#gA5V9JEb-kbTa)-sCY>)f^.ot;RMma-B:Y[*(0L";'@fE&@IpcT3GB)>jMZch7.MSQ7Z)jSO[c&")=c8]juS<]%>Ye4(BTkb[k7g&Tj^[bmZ7V+@1s'RWPJX7IZ[mF@H]"d"#@ndiqZojCQf"6S,,J'u1eL;RH,;Co99f'^5e9qPUR+k6hZE0UHVgZ(%@j#(;m+8fGie_[lko41m=:@3O<#M):MI]sa:LW)GhoT9pPo:`U\:UHP:h.T,b,38HOI'k^(>Y/0eQIea$YMB7?(M#:mcl>p\>qD7%iN>RHlP!mub*(tkX=q,b91=&I_8BQlH-'>`>f9]=DQk625]U^:PCuV)V1dV1@I&_H#:t^X@XUh;/l_&i"cn-.fR'f\96+)h(L\?0%DM/0R#EnJuR?FdD-W@lkM56FbbUfA4d5P07nfUOn5BFs2MQ'r16h;aN_/G:fLf0`Da`TU>&e[3kdSiOm,&A2QC4IU-9<9f2dY4F4%?0p>qB@hQiElfs"bQU^nlit^i*(Vh?1*nbGZ7.W^5be&l;q$ejgc_CGE$@nC:NO@i)81=KAY$JiYFONY5u*#BQZ];R>h8/(E7ooK%F,A:U=V>#+od,rITu(AHn8R'A^%][\A=%H<i^o9^K]37>EZQK1RBn2JMb^4(]b3mG:RKg!9;6p?^>q^8'OAuFVDG)UFbb,5,(66a%7MOl68?.SQ#pgdf6E)c(9\(oL5a4YgZ+d#,8k"`Oi6`tq].VPbf/C$gZufg("@_4!#)9feOf'%_?#t=Q<Fd88)\@h+Np'[8Z)tV6%'Z4JOqAtRP,/ejt*m(nDUPhTLL_TMVbhDd`9ma]?<!gs36l+]uE1-a(r+j3aS6.?]OZi_FYchuf6S3Y@'N[U<HV&?9&Pugf]-&;?%OhAta*eb0S#hR[iXE,V4SHqNeX!(9d=)F9O(YP2BU4LBt!f4kB&*-&"rF*GcedEON6qJ2X2E.`K%iBla"h_&S&saJ^M$BOPg/lUS%]VbjaV2D7s)j^0Yo:%'WM7/\#E:f;$B\qZ,oFB(dTR+-NqiWXtg,)iVZ#O)c69og,>.B^iCEl0M!83itWf<tR=Js5-4Dia-fA?(`%V1_?RJt;ugB$clE)3aBsK&AhJBHP_59#gf8kqp&VZ.`C//m:3tQ%EYc9@Ird*XMCE<MUgcm:W]3WurjL@p]D'T`=8C[pC1KV;k.o%UWBe6'b%<$'l1ZY'YJ]JA!3%-!&!BDoOl*Q#q4>Tdus^No<cle7XAdOi)Zs!9#p<k"Heq]ARk#n(J'f:AWE^3%E\=hY:t&h*d<ho%05=n*?mU?is&QI<c,0X_KF>EY_PM?/Ganl(2KK+X":L9<,gQXjs5`GnE^22#Spa=]fbo6Y>L!S4*rdL<I5PdZF7mS_VQ]IUP0f9<%,c&gU53uiUr)BIqS<#jA(!2d'^;dOQdT=Q;3K79<mD8\(B:Od2Hp(XrotdL>%ak\T(\7Rr6qpV6n(LqNl.IDh2./nbm'-hX,&1c=%D?W5%+k*)HMU&1]IWb"Df<rQ2$J(i]#:AT+Jo>k\q?ePQC!'oVC`o5@4?)mo2"SS8$qh+pZ+Wq3[E)WR;0lqWT4TO%F=t!F;%a2\%a.@Kb8=Z9l*WdJ.C;1")6S/Xn3MEKm8i3pmG,WA6WhnH99;n\&E4\Ih*K/XQ"'dpklU:H\]Ui;@R*r9<p.h9@4"I.APk%0jaDeD!%<_C8,8^CQpjA:bCLL0\?X\REiZuk>HZ1ooHPmhquI2*1,&g`T%hQm8;pBA02>94$<`9f6slR)Y%k88h1L0$Bt4mRS7@mC;N<P8.0%KZc7SY-)BuD^R2b^'.3i%SKlF6Sp4Pb@"d6$dWD(WgXt[0/J-DG,Jok_KtE;X,IM/$eB,UlaCp(>X'e#@PVRN"T2kMa!tS-`R\g.%AZVWP0OlqF75"u0<Q;V79oi;onsiM']M"%FcYo9M]$+8!/kS3k)33fi#"l:u!%p('VH)&""7f#s<A$)SMQW'D\BI3BVn=k\\T5g_%i5l8-Z"rY]<[G@=f,5NQn-hJr)@LhWqL'nOd/(1c>%k";Bu=GSZ)[40o0U@"][2IAqEcE!pOrf^.!k+$Ka'(spj'"cd$e/S8I;qn%?<dc;-nQ#]%Hpos"GC)6?2s)Q`l@F$Am/oM9;7-Y6Gn>dcL>b^b`H:+>%OA0lY4Bh!tqU5\Sjk#b9h*N64)cd@(3Ve.g->8E4X64%&m8g3h0V5*/2K38,f:=_)/c[^At>5*3Y<U?4d'I>%?4k):/%CPj>k8c4Qe]$F3^Q6dNqG>#[EhLH'M7POlN^.o:/W8o&,E'J]OXL%V]FhVCosOZ#Iu?2%27oq,qM\RjrIu-S?`4eGt7F5c9*%-P33k+%c&9-cQ'tFo+m8AEo(f[kFJ;h1`b+Y,\<9C5qn7+\Wl9*<DG[#%`**\XHSes_J]P[T@<T^N<E`Sg/Z0d8d\VBE\I(+.LLs:YQ.e`;2Qt+H+WZY4l7/7WF&^D!(of;AWN0BhXNrUq3:d45?^?p(?*LLf%!(^9[@PT3fgO;/"i95uM+B_/UNHZq+jj`(]X4ct8FpW`j0=elH!-6'Uo61KK8_m.uA+nZ\fq+LIJn9nQ<JLK0X`BIRQATp-)B%@/%9]+H5/ZcpSM-nmLA^(MOq,!_L=f51;Ii.W9/H%EumQ8Yh8<6m];[PBfZM]qE@b@"\]5M!F$Fs(KVO]i)A8Xb*l)D"AoKlPu%Z6LW%_Q1i=en-*0Rd=^8L&l<2e%Qt\$6SjNYV(8BP]KEVZ<MsD812ZZ2R"6^09&_iprcad;!p/-+O>K%S6[tRO!27Q9g+[50>>$iWeQc1%+I!-9q-0"t,'))klg%P=,D_(l>G6=n*PE"k/H<=s]Q@F$)&E(g>c=($6Jok*etpWGa_3?DD`1M]U#Z1GFR=]\3RaBqp"(Fj$)JHJ%`GhV0mUH^D&i;1^V(%`4CopBb<YrVK!L(k\,*CZ1JY#oIm@$Gs5u1dt+2sWEPTH3Pbeh.g+5`.HLaA2io\45"0<99$N/)1jI00dA%&!fN8K%hIUWCfj]Tiq'\fYB-@ZCp*qGRh9u!MhUD,?M-Vf\:Ia+aZh'p?I"#n;F-3!KgQ&!GoOtnYj=sG&s+??@075fd#6Cp<Js\%;_Gc?,X!;0T9/X8\U#C`+aTh/Iq;4DYVNk.]diQ2d*L&/<UI:.WF03HhI,V0d-P>0<AT6"D&7t%a-n^B^)e)m9<q\lhl9&\.`L(%%%HSmj?F5!ajT.r[,-SU!q&Ht>"50C9HlYqElWV<fMW*iu==A<sNN"7uiR!,1mM?Mp*9gdE/<kl75/c]AR@niOd'K>HaTShXP0>dT%21bfDhB'aL]e?oX4niNsNL5H`ODI<X=59*>eWA+&W&O(dM<tnXSZ@D;R/bah.E#\*0;;1qD-HMi!J;r.ns2`T0!C-Y8t+F?LP97G%AEqS2iP?J&;jA?eJKt?cJLpBb>@H+-c$&d(j2[1`[?NA+cYlJ]p&kQA\j<[rBJQ*0S\6=3C(6;Q$6i&ArFuj\71`0K.f"SDO@o1N%W65gZCr?sI0&NcX6m@J9r[qVX+%q(qXOK8EJRRT3+k8@!*g9TB&R`M]AFJjO_*WV8?/orUf.E-l.ogHr![meo&VdCBG)6i+//GfN%jiWh4p0h0(1OpP!!ms5K=X"5/W\o8RCR/t4(fh:DD0CAOPB>ZXN,C<'.I1Y:cWIDp_fRNF,\#?ET&.^hX5n"6QAu[)/8l(YZ3T(8%5u#>,KfWikfrf<U<Qg4iTKf'.%BD[Lb6YG*;N4Z,WOF#:S=V?S3Dd;@g#VA%&S1b`>O6n>W_76CpuKi(#Mh#MEd<8Jb4<+pY;OT8%bD7/FOPR0b$Dddq+%B=b.;8^=7jH\9\YEg::n:;!i[*SL+OP%4eF@u4642D_mHWC3Z=K;IU0ehErrO&cF,=Kk2alhqh38FWNRcMi%Cg2GFXOcF@Y*!60W_dR.\-?eQD2o9DI3#@kW28aApR[On&Xlq8/AAMbp1VUT+rQXR![JO-H:hPu9i^$Ap'ct;][q)V)@<f>9Gd+`%5fk[K:#8378a17`iDc-:H/WeTbO;[uD(A?NCe=c;(R/FT06fiJluWT^$q3m+4BV[R(=P3pRceGL9ciiuok<gjVXcVQYa`+bC4;H?%a^nPQ!8tQ%=@<an(cm;Mh2JsKotGY!%1fO<Y)c,RHY^;G^XREg)m=GNC7P7M+%aZ`dAueDB%a[:?/0KP;DR\#g7ilJ<=::Y.\^h]%*;SOKp=8d<#Q<8`;$hYS<sP'gQ^'^'-HqLTKZI*[GtbBf8@-bu^"-&8Xt4):L2P&ngCG6Me%dAjLUbcR5G)7Oh1N;#8C6*P13Gl6%&+5V?N@,-$?+ba:07AIJ/5[5%@aCu5b'Hl#K(pe%m*d8gfk?5>5SRP&I>LpJFXA`(SFlGl@.N'UGskb,2EPoPaj&rVi^-P^=\A=*%i^H2Qk2`@!:(O`<o(gY(5ZsdZn#.?"loQcs1j/1IbW=t\fE;f8pS`T)@hZ[r4*cru'-QtVWCtN2,gs99NA'Q/TtNCWEMnOn+.!ij%OZbiK)e&q]-2FMDh%o;(fjRI*eSWH9&W"+E1`29J1m-LnT2P8u%D_f89p8qE9fd1X@f`-\9o+5>fT#96bJtr5e!P,k,4aQ4`3G0+%i[I&Yl8DAb\D?C)L."Y#F4cHDb"DuXp1Vq8fL.KWkuiP_20^9P)>?*68AL6'V^>[NN35,s!O0`Fj?jSil-L])G^FH]0A;F[V#HjM%/EFl?N'oE)EnWuUYkU5?[a)E(@<qNfa\GM\O2/nQ!aSi4^!1Uk4S.fW@Nsds9,V_[66r+i`)hD$@Mp]p8D,c%?)9WpUIe?@5MMBV%Hq7T1m#[VDp3tp`-3:(,ZJD%Iahrhe_F"u6G:@tXDf1,&Y]^ebHU'OA=/1d+XNm#C,kcS"6kC@>As;k:L<29Om@&@S2X+]^8JW,p%:G%)sjRlO9Q9L_hHefRUnoF:VJn+Xp2bG!;YD`':8k@\0>bubN'[hQL,_%X#G&#pP38%E"BY$6R<K)'28R)t+qSZP*//?cEPWU2I%^;*t];3G]El3i#p<3GnUgjA1[s#tK`.scDuXo-<7YG,+9^7<i07q0NoruUdhEc^</&JNF3Rs2OZ1BCcBl"S^3FO8+aKLC#*LSkRA%`%*4@m^o%(!s+neNc<RrS$:&oX"1O!Al4rPDY5&D'a_d`AZfb!&@EQbqSlV'4"lGkJQ/6p,:HM"C+a`RdCbF;&o8@O2=WdO.FX:c%W,Ne-YZ"lPK;Y]WBZ+\CU!_#n<Hg!4eIgM\q/$?ElH02mh5O%0B_Ibc"G1nLg[9E-`$2?cbm<0`N>NlKgQV)s[d&+C1OS0N=QnaR%HV#jP&[V8;$VS'2a.jZgjhidfL8<(?r^_8!.&\"(SUrR+h`L$u"qe'tLtt+Df.Pg!0RC%/hKcSj#BSWWNnl`o2QW3&lVRDbdU!r&%*1&7FIBS[?/^pQsh5_dY[Y0.k?JUaV=3k7<?6(=l]CEGEbPQBKPJ+P\+j=/5o]GLcK%KdPa'D>8b'`Wa=bl"V;ebCE&kqK53Z\C[%Z_u&/!rD2Bf/N#?DM@a[hQ/f)2s^8#Znj7=)PQfOI'YQ/bO*f7Sh1t15AA&s[NoC169F<0FR\D83n^V[W2&,a$41SjdaE"RqX)n*%#+Kqndq%@=4-94&nWAl9)DCYV)g7V#hT[)\G"<bO'Y%S,goHdK@7TVp=dg:Q=$YKE6Z[9'j?%N5pDQ3^f^VkBdci;h-??QLRU14)%kdl&aZt"=@K9P%k^13L#caNT!/c/!YUI)J'LR<NN/]+L`TL*2]laZ""8spuBg!Q.%hJ(.CI9U0"cCfH9e1J9@U+<C\Ehr[3N;sBp%T(*V#RsNKBV`-=J&:_O67ALH$,"R+A]@T[GLI^E\G;]EDGO*^brUm(<qq(IihZsC:)]`sETh(=e=cFJ)"Z(WNI4.uJ(B>$[HYXRe%]\lXGmMb!f$_E#/XEK\,2'I3TY6.I+i)qb5/ZbB_+FC4R[3g1Kg5opfAp2<A8QfHV);-8-8#5B`9ZH^@%g_r[5pVKrl>*p,k(s#>%<np0%YI`jP#GU_pG#JST?sB%FHE,5R98@2PVKZD".rKJeE,?d!JO:rB[4NEC*<jQS'V&l.l8;Or\I]Zd?12l$.(M&!;c3lR#8]6V%cOj*6-m=):MUL6_p!]t8I+C5(<GlVHm:a&@qGYC!`%BZVAus-rL',8:#XmP>"7_BF>+/V"3\1Ps]JlImoK1T:.^"nPA?Xp<+M[lX%iOTGpfCTg'A+te>dT=IP-sVZ1F-u4p#'0sTVc3C\@RHf@j:piDp;VUWY7tcPH9n.%?+)Fc95QX2C2uSj*rDKJ+%sY+eeYgd,c'DG%BaZ5hCIkg#7("6%'uYWE4JQV2UkO/GcmJ1!8U^;a/GI^2Apl_&fup;F*rYFK<;'ZETP>,E]\V/jMBRULSO/UD+`HAY3VLlJ6XUgf%mT\8lfK$m#8>[Rsj:"0r`@eV)ApLbt#_n$O+YE]08Z?*b=Ou!.IaK%9o8DtFaP5be;t'LTos60'X-mFIlGU/$)j(Wp,67+$3P.j)%iS)VS>21X*RZT3eiBIq7',Rf(XM.-:@$nq3/q#H?6j4R>[+-kpBM92\YN!7fP;oW"&(m)PN;u0%r0/o]Ii:"JjHD?%3q<TbX6[nn%#.S5]nBi.;%7b>WYp#*u!-BoQn[.7EK\W;]YGs5'"MrL@J_9aG@Mn2;6tQK4^a3[[\kUBM1(%(3jDNr,ohocCl5n4c#RB@BJJaTu%TN_G!-9a-Ib?f!p?nAU^$__sZ4:t8d-Z\&+mkF#nA^lnSbb<8u^8^\uW,&gmR0W#a^;KIcbYtrt^Qh!d`<H_i+DCup>kliM?q=Z(%p:Kenk3r2^s5s(Un`>Q+qsiiVrT_#`^]2=rIeVkes89caIJr^!msb#O+9(HD:I"dVpODte%tFHG^\;)!rU/hjs7iKVr;>TQ5Q9gf%rYNZTM1>O'pV6NZ^\dI!!TO`n5l~>%AI9_PrivateDataEnd