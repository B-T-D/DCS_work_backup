%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 001x001.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 26/05/15
%%BoundingBox: 0 0 361 197
%%HiResBoundingBox: 0 0 360.0015 196.4863
%%CropBox: 0 0 360.0015 196.4863
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 72 8%%BeginData: 11006 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD05FF7D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DFD07FFA87D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%FD07FF7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8FD07%FFA17DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA1FD05FF7D%7DFFFFA8FFFFFFA8A8A8FFFFFFA8FFA8FFA8FFA8FD04FFA87DFD05FFA87D%A8FFA8FFFFFFA8A8A8FFFFFFA8FFFFFFA8FD07FF52FD06FF7DA8FFA8FD04%FFA8A8FFFFFFA8FFFFFFA8FD05FFAFFF7DA8FD05FFA87DFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7D7DFD04FFA1A8FD06FF7D527D7D%7D527D527DA8A8FD07FFA8A8FD05FF7DFD06FFA852FD057D537DA87DA8FD%06FFA8A8FD05FF7DFD07FF527D537E527D527DA8A87DFD07FF7DFD05FF7D%FD19FF7DFD04FF7DA8FD06FFA87DA8A8527D7D7D7EFFA8FD07FF7DFD05FF%A87DFD06FFA87D7DA852FD047DFF7DFD07FF7DFD05FFA87DFD04FFA8FFFF%7E7DA87D527DA87DFF7DA8FD06FFA8A8FD05FF7DA8FD06FFA87DA8FFFFA8%AFA8FFA8A8FD06FFA8A1FD04FFA8A8FD07FFA8FFA8FD0EFFA8FD06FF7DFD%05FFA8A8FD11FFA8FD06FF7DFD05FFA8FFA8FD11FFA1FD05FF7DFD07FF7D%7D537D527D7D537DA852FD07FF7DFD04FF7DA8FD06FFA85252527D7D52A8%7E527DFD07FF7DA8A8FF52527DA8FD04FFA8527D7D52527D7D527D527D52%7D7DA8FD04FF7D7D7DA8522752A8FD05FFA8527D527D7D7D527D527D527E%52FD05FFA87D7DA87D27527DA8FD07FF7DFFA8A8A8FF7EFD0AFFA8FD04FF%A8A8FD07FF7D7E7DA87D7DA8A852A8FD07FF7D7DA8A852F87DA8FD05FF59%A87D7D7DA87D7D7DA8FD047DFD05FFA87DA8A87D277D7DFD06FFA8A8FD08%7DA87D52A9FD05FF7DFFA8A8277D7DFF7DA8A8FFFFFFA8A8A8FFFFFFA8FF%A8FFA8FFA8FFA8FFFFFF7DFD04FF7DFD19FF7DFFFFFFA8FFA8A1FD12FFA8%FD05FF7DFD05FFA8A8FD12FF7DFD05FFA8A8FD05FFA8A87D527D527D2753%527DA87D527D5259A85252527D7D527DA87DFD04FFA8A8FFFFFFFD07A8FF%FD05A8FFA8A87DFD04FFA8A8FD05FF7DFD04FFA8A8A97DA8A8FFFD04A87D%FD04A8FD04FFA8A8FD05FF7DFD05FFA8A87DFF7EA8A8FFA8A87DA8A8A8FD%06FF7DFD05FF7DFFFD09A8FF7DA8A8A87DFF7DA8A8A87D847DFF7DFD04FF%7DFD04FF7D7D53527D5252527D5252527D527D7D7EA8FFFFFF7DA8FD04FF%A8A8FFFFFFA8537D527D5252527D5252527D527D52527DFFFFFF7DA8FD04%FFA8A8FD05FF7D27FD04527D277D5352525952A8FD04FFA87DFD05FFA1A8%FD18FF7DFD04FFA87DFFFFFFA8FFA8FFFFA8A8FFA8FFA8FFA8FFFFFFA8FF%FFFFA87DFD06FF7DFD05FFA8FFFFFF7DFFA8FFA8A8A8FFA8FFA8FD04FF7D%A8FD05FF7DA8FD04FFFD05A8FFA8A8A8FFA8FFA8FFA8FD04FFA1A8FD05FF%7DA8FD17FFA87DFD05FFFD067DA17D7D7DA87D7D7DA87D7D7DA1FD067DA8%FD06FFA876FD047DA17D7D7DA17DA17DA87D7D7DA17DA1FD057DFD06FFA8%76FD047DA17DA17DA87D7D7DA87D7D7DA1FD077DFD07FFFD0C7D52FD0C7D%FD73FFA8A8FD7EFF7DFD7FFFA8A8FD3AFFFD06A87DFD06A8FD37FF7DA8FD%33FFA8FFA8A87DA87DA87DA87DA8A8A8A1A87DA87DA87DA87DA8A8FD32FF%A8CAFD30FFA8A87D7D7DA8A8FFA8FD0FFFA8A8FD047DA1FD2EFFA8277DFD%2DFFA2A87D7DA8FD1BFFA8A87D7DA1FD2BFFA8F87DFD12FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF27277DA8A8FFFFFFCAFFCAFF%CAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFD07FFA8A87D7DA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0BFFA8FFA8FFA8FFA8FFA8FF%27A8A8FFA8FFA8FFA8FFA8A8FD07FF7DA87DA87DA87DA87DA87DA87DA87D%A87DA87DA87DA87DA8525252FD05FFFD04CAC9CFCACACACFCACACACFCACA%CACFCACAC9CFCACAC9CFFD07FF7D767D7DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA87DA8FD07FFA87DA87DA87DA87DA87DA87DA87DA87DA87DA8%7DA87DA87DA8FD05FF7D7DFD17FFA87DFD05FFCAC9FD07FFCACAFFFFFFCA%FFFFFFC9FD07FFA1FD06FF7DA8FD06FFA8A8FFFFFFA8FFFFFFA8FD07FF7D%A8FD05FF7D7DFD17FF7D7DCFCACACAA1FD19FFA8A8FD05FFCAFD06FFCABC%C3FD04C2BCC3CAC9CAFD06FFCACAFD05FF7DFD07FF527D527E527D527DA8%7D7DFD07FF7DFD05FF7DFD19FF7DA1FFCAFF7DFD07FFA8847DFFA8A8A8FF%A8A87DFD07FF7DA8FD04FFCACAFD06FFCAC3C9CAA0C3C9C9A1FFCAFD07FF%C9FD05FFA8A8FD07FF847DA87D7D7D847DFF7DA8FD06FFA87DFD05FFA8A8%FD06FFA87DA8A8FFA8A8A8FFA8A8FD07FF7DCFFFFFFFA8A8FD06FFA8527D%5252527D52A87E52FD07FFA8A9FD05FFCAFD05FFCAC9CFFD07FFCFFD08FF%CAFD06FF7DFFA8A8FFFFA8FFFFFFA8FD0FFF7DFD05FFA1FD07FF7D7D527D%527D7D527DA852FD07FF7DC9FFFFFF7DFD07FFFD04A87DFD04A8FFA8FD07%FF7DA193C9CACAC9CAFD05FFC9A0C39AC29AC39AC29AC2C2C2C9FD05FFCA%C999C2CACAA1A7FFA8597D52527DFF7D52597E7D7D52527D7D2E7D5252A8%FFA87D27277DA87D7DA8FD07FFA8FFA8A8A8FFA8FFFFA8FD07FF7DCAFFFF%FFA8A8FFFFFF7DA8A8FFA8FFFFFFA8FFFFA8A8FFA8A8A8FD04FFA8A1BCC3%FFCACAC9FD05FFCAC3C3C3C2C9BCBBFD04C9BBCAFD05FFCFCAC2C2FFCACA%7DFFFFA87D7D7DA8A8A87DA87DA87D7DA8A87D7DA8A87DA8FFFF7D5227A8%A8A87DFFFF7DA8FFA8A8A8FFFFA8A9FF7DA8FFFFFFA9A8FFFFA8A8FF7DC9%FFFFFF7DA8FFFFA8A87D52527D27FF5252527D527D52525952A8FFFFFF7D%FD05FFCACAFD0CFFA7FD04FFCACAFD05FFA7FD05FFA87DFD0CFFA8FFFFFF%A8FD05FFA8FFA8A8FD05FFA8A8FF52A8527D525252A8527DA852525352A8%537D525227A8A8A1CAFFFFFFA8A8FFFFFF7EFD05A8FFA87DFF7EA87DA8A8%A87DFD04FFA8A8FD05FFCAFD06FFC9C9CACACAC3CACACAC3CFCAFD06FFCF%CFFD05FF7DFD07FFA8A8A87DA8A87D7D7DA87DFD07FF7DFD05FF7DFD04FF%A8A8A87DA8AFA8A8FFA8FFA8FFA8FFA8A87D7EA8FF7DC9FFFFFF7DFD19FF%7DFD05FFCACAFD06FF93C2A0C299BBA0BCC2C29AC2CFFD05FFC9FD05FFA8%7DFD06FF7D52527D52A87D7D5252527DA8FD05FFA8A1FD05FF7DA8FD18FF%7DCAFFFFFFA87DFD17FFA87DFD06FFC9FD05FFCFC9CFFFCFC9C3FFCAFFFF%CFCAFD06FFC9CFFD05FF7DA8FD06FFA8FFA8FFFFA8A8FFA8FD08FF7DA1FD%05FF7D7DFD17FFA87DA7FD04FFA1FD187DA8FD06FFCFC3CAA7CAC9CAA7CA%C9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CACAFD07FFFD077DA87D7D7DA17DA1%7DA8FD097DFD07FFFD197DFFCAFD7FFFC9FD7FFFCAFD7FFFC9FD7FFFCAFD%7FFFC9FD0FFFCFFFCAFFFFFFCAFFFFFFCFFFFFFFCAFFFFFFCAFFCFFFCAFF%CFFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFF%CFFFFFFFCAFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCAFFCAFFCAFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFD0FFFCAFD0FFFCFC9FFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCACFCACFCACFCACFCACACACFCFCACACFCFCFCA%CFCACFCAFFCACFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCAFFCACFCACFCA%CFCACFCACFCACFCFCACACFCFCFCACFCACFCAFFCACFCAFFCAFFCAFFC9FD0E%FFA7FD0EFFCACAFD05FFCFFFCAFFCAFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFD0BFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCAFFCAFFCFFFCAFD09FF%CFFFCAFFCFFFCAFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD05FFC9FD0DFF%CAFD0EFFCFFD04FFCFC9CAC9CACACAC9CACACAC9CACACAC9CACACAC9CACA%CAC9CACAFD07FFC9CAC9FD04CACFCACACACFCACAC9CFCACAC9CACACAC9CA%CAFD07FFC9CAC9CACACAC9CACACAC9CACACAC9CACACAC9CACACAC9CAC9FD%04FFCFFD0DFFC9FD0EFFCAFFFFFFCAC9FD17FFCAC9FD06FFA1FD06FFCAC9%FFFFFFCAFFFFFFCACFCAFD06FFCACAFD05FFA1CFFD17FFCAC9FFFFFFCAFD%0DFFCAFD0EFFCFFFFFFFCAFD19FFC9FD05FFCFCAFD06FFC2C399C3BCC2BC%C3C3CAC2C3FD06FFCACFFD05FFCAFD18FFCFCAFD11FFC9FD0DFFCACAFFFF%FFCACAFD06FFCAC3C9A8CFCACAA8CFCAC3CAFD06FFCACAFD05FFC9FD06FF%C9C3CAA1C2C3CAA0CFFFCAA7FD06FFCAA8FD05FFC9FD06FFCAC3C9A7CFCA%CAA8CFCAC9A1FD07FFA7FFFFFFA8FD0DFFCAFD0EFFCFFFFFFFCAFD07FFC9%C2C2C2BCBCC2C2C2CABBFD07FFCAFD05FFCFCAFFC9CAFFC9CAFFFFCAFFFF%CACAFFCFCACAFFFFFFCAFFCAFFCAFD06FFCAFD06FFC3C2BCC2BCBCC2C2C2%CFC3CAFD06FFCFCFFD11FFC9FD0EFFCFFFFFFFCACAFD07FFC9CFCACAC3FF%CAFFFFCAFD07FFCACAFD05FFCAFF99C39ABC9ACA99C29AC2C2C29AC29AC2%A0CF9AC2A0C2C9FFCAFD05FFC9FFFFFFCFFFFFFFC9FFCACAC3FFCAFD0BFF%C9FFFFFFCAFD0DFFCAFD0EFFCAFFFFFFC9FD07FFCAC9C3FFCAC9CAFFCAFF%C9FD07FFCAFD05FFCACFFFC3C9C3C3CAC9C3C9CAC3CAC3C2C9CAC2C9CAC2%C9C9C2CFCACFFD05FFCAFFFFC3C2C9CFCAFFCFCACAFFCACAFFCFFFCAC3FF%C9CFFFFFCFCAFD04FFCFFD0CFFA7FD0EFFCACAFFFFCACAFD06FFCAA0C999%BC99BC99C29ABCFD07FFCACAFD05FFA7FD18FFCFCAFD05FFA7FFFFC299BC%9ABC99BC9AC299C299C299CA99BC99C399C3FFFFC9FFFFFFCAFD0DFFCAFD%0EFFCAFFFFFFCAFD07FFCAFFCAC9C9CAC9CACACAC9FD07FFCAFD05FFCFCF%FD06FFC9C9C9CACACAC3C9C9CAC9CAFD06FFCACFFD05FFCFFFFFCAC9CAC9%BBCAC9FFC9C9CACFC3C2CFC9C9CACAC9CAFFCFCAFD11FFC9FD0EFFCAFFFF%FFCACAFD18FFCACAFD04FFCFC9FD06FFC999C2C2C39AC399C3A0C3C2FD06%FFCFCAFD05FFC9FD0FFFCAFD09FFC9FFFFFFCAFD0DFFCAFD0EFFCFFFFFFF%CACACFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFCFC3FD06FF%CACAFFFFFFCFFFCFFFCAFFCACACACFCAFFCAFFCFFFCFFFFFFFC3FD06FFCA%C9FFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFC9CFFD11FFC9%FD0DFFCACAFD04FFCACAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CA%A7CAC9FD07FFCAC9A7CAC9CAA7CAC9CAA7CACACAA7CAC9CAA7CAC9CAA7CA%C9CAFD07FFCAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CAA7CAC9CA%FD04FFA8FD0DFFCAFD0EFFCFFD70FFC9FD0EFFCAFD62FFCAFD0DFFCAFD0C%FFCAFFCAFD70FFA1CAC9CAA7CAC9CAA7CAC9CAA1B599CAFD62FFCAFD0EFF%CFFFCAFFCFFFCAFFCFFFCAFFC3CFCAFD7FFFCAFD05FFCFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCACFCACFCAFD09FFCACFCACFCACFCACFCACFCA%CFCACFCACFCACFCACFCACFCAFD25FFCAFD1CFFCAFD04FFC9C9CFCACFCACF%CACFCACFCACFCACFCACFCACFCACFCACFCACACAFD06FFCAC9CFCACFCACFCA%CFCACFCACFCACFCACFCAFFCACFCACFCACAC9FD40FFCACAFFFFFFCACAFD18%FFC9CAFD05FFC3FD06FFC9C3C9CACAC9CACACFC9CAA1FD06FFCAA8FD23FF%A7FD1CFFCAFFFFFFCAFD07FFCFFD11FFCAFD05FFCFCAFD06FFC2C3BCC3BB%C2BCC2C3CFC2C2FD06FFCAFD41FFCFFFFFFFCACAFD05FFCAC2C2C9A1CAC3%C9A1FFC3C3A1FD06FFCACAFD05FFC9FD07FFCAFFCACACAFFCAFFFFFFCAFD%06FFCACAFD23FFCAFD1CFFCAFFFFFFC9FD07FFC2C3C2BCBCC3C2C2FFCFC2%C9FD06FFCAFD05FFCACAFD04FFC2C9CAFFC9CACAFFFFCACFCFC9FFC3CFFD%04FFCACFFD40FFCACAFFFFCACAFD06FFCACAFFCACFFD04FFCAFFCAFD06FF%CACAFD05FFA7FFFFFFA7BC99BC99C29ABC99C39ACA99BC99C293C9FFFFFF%CFCAFD23FFCAFD1CFFCAFFFFFFCAFD07FFBCCAC3C3C3C9C9CAC2C3C9CAFD%06FFCAFD05FFCFCFFD04FFCFCAC9CACACFCACACACFCFCAC9CAC9CACAFFFF%FFCACFFD40FFCAFFFFFFCACAFD05FFCAC29ABC9AC299C3BCC39AC2C2FD06%FFCACAFD05FFC9FD09FFCAFD0EFFCFCAFD23FFCAFD1CFFCAFFFFFFCAFD09%FFCAFFCFFFCFFFFFFFCAFD07FFC9FD05FFCFCAFD08FFC9C3C3C2C3C3C2CA%FD08FFCACFFD3FFFCACFFFFFFFCACAFD18FFC9CAFD05FFC9FD09FF9AC299%C39AC2C9FD08FFCAA8FD23FFA7FD1CFFCAFD04FFC9CAFFCAFFCAFFCAFFCA%FFCAFFCAFFCAFFCAFFCAFFCAFFCFCAC9FD06FFCACAFFCAFFCAFFCAFFCACA%C9CACFFFCAFFCAFFCAFFCAFFCACFC9FD41FFCFFD04FFCACAC9CACACAC9CA%CACAC9CACACAC9CACACAC9CACACAC9CACAFD08FFCAC9CACACAC9FD04CACF%CACAC9CACACAC9CACACAC9CAC9FD25FFC9FD1CFFCACFFFFFCAFD3BFFCAFF%FFFFCFFFFFFFCFFD0BFFCFFFFFFFCFFFFFFFCFFFFFFFCAFFCAFD1EFFFD04%CAA8CFCACAA8FD07CAA8CACACAA8CACACAA8CFCACAA7CFCACFA7CFC9CFA7%FFC9CFA7CFCACFA8CFCACAA8CFCACAA8FD0BCAA8CACACAA8CFCACFA8CFCA%CFA7FFC9CFA7FFC9CFA7CFCACFA7CFCACAA8CACACAA8CAFD0DFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-26T15:06:29+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-26T15:06:29+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-26T15:06:29+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qxXTdDstd+t6lq/qX&#xA;UhvLu3ghM0qwwxWtw9sixxKypVvR5s1ORJ68QoCqN/wN5W/5Yv8AkrN/zXirAlkEWp6hDP5QuJrO&#xA;yuLhGNut+JBBHIyQsrMPSmaVVEtI22VvEfEraDi161mjuJ4vIGotFZER3UKvcGYysiNwjUhQeJY8&#xA;q9h4njhpbZhpXlvTr2Wya40D6lbXNvPLMrz3BljljlRYkYHgo5xsW33rt2rgVOf8DeVv+WL/AJKz&#xA;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&#xA;97YT+nauvK/0/Z+tF5Y0uxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:C49C53CE2A2068118C14CB8B9B69008A</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:C49C53CE2A2068118C14CB8B9B69008A</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C49C53CE2A2068118C14CB8B9B69008A</stEvt:instanceID>
                  <stEvt:when>2015-05-26T15:06:29+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -196.486 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 196.486 li
360.001 196.486 li
360.001 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
.6729 lw
1 lc
1 lj
10 ml
[2.6916 2.6916 ] 0 dsh
true sadj
49.1216 104.299 mo
316.936 104.299 li
319.909 104.299 322.319 106.709 322.319 109.683 cv
322.319 189.758 li
322.319 192.73 319.909 195.141 316.936 195.141 cv
49.1216 195.141 li
46.1489 195.141 43.7383 192.73 43.7383 189.758 cv
43.7383 109.683 li
43.7383 106.709 46.1489 104.299 49.1216 104.299 cv
cp
0 .938 1 0 cmyk
@
18.8413 1.3457 mo
80.748 1.3457 li
83.7207 1.3457 86.1313 3.75586 86.1313 6.729 cv
86.1313 26.2427 li
86.1313 29.2158 83.7207 31.626 80.748 31.626 cv
18.8413 31.626 li
15.8682 31.626 13.458 29.2158 13.458 26.2427 cv
13.458 6.729 li
13.458 3.75586 15.8682 1.3457 18.8413 1.3457 cv
0 0 0 0 cmyk
f
[] 0 dsh
18.8413 1.3457 mo
80.748 1.3457 li
83.7207 1.3457 86.1313 3.75586 86.1313 6.729 cv
86.1313 26.2427 li
86.1313 29.2158 83.7207 31.626 80.748 31.626 cv
18.8413 31.626 li
15.8682 31.626 13.458 29.2158 13.458 26.2427 cv
13.458 6.729 li
13.458 3.75586 15.8682 1.3457 18.8413 1.3457 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
39.5542 6.37891 mo
39.46 5.57129 38.814 4.79736 37.5693 4.79736 cv
36.1631 4.79736 35.3149 5.82715 35.3149 7.31396 cv
35.3149 9.17139 36.3916 9.88477 37.4888 9.88477 cv
37.8521 9.88477 39.3325 9.8042 39.6016 7.98047 cv
38.9688 7.98047 li
38.7471 9.104 38.0132 9.30615 37.5894 9.30615 cv
36.3916 9.30615 35.9878 8.43115 35.9878 7.29395 cv
35.9878 6.02246 36.6943 5.37646 37.5693 5.37646 cv
38.0337 5.37646 38.7402 5.53076 38.9219 6.37891 cv
39.5542 6.37891 li
cp
0 0 0 1 cmyk
f
43.1812 7.36133 mo
43.1812 6.35889 42.4951 6.13672 41.9497 6.13672 cv
41.3848 6.13672 41.0884 6.48682 40.9204 6.7085 cv
40.9067 6.7085 li
40.9067 4.92529 li
40.3149 4.92529 li
40.3149 9.75684 li
40.9067 9.75684 li
40.9067 7.83936 li
40.9067 6.95068 41.4048 6.66846 41.8892 6.66846 cv
42.4546 6.66846 42.5894 6.97803 42.5894 7.45557 cv
42.5894 9.75684 li
43.1812 9.75684 li
43.1812 7.36133 li
cp
f
44.5811 7.30762 mo
44.6211 7.03857 44.7153 6.62793 45.3882 6.62793 cv
45.9468 6.62793 46.2163 6.82959 46.2163 7.19971 cv
46.2163 7.5498 46.0479 7.60352 45.9067 7.61719 cv
44.9307 7.73828 li
43.9482 7.85938 43.8608 8.54541 43.8608 8.8418 cv
43.8608 9.44727 44.3184 9.85791 44.9644 9.85791 cv
45.6509 9.85791 46.0073 9.53467 46.2363 9.28564 cv
46.2563 9.55518 46.3374 9.82422 46.8618 9.82422 cv
46.9966 9.82422 47.084 9.78369 47.1851 9.75684 cv
47.1851 9.32617 li
47.1177 9.33984 47.0439 9.35303 46.9897 9.35303 cv
46.8687 9.35303 46.7949 9.29248 46.7949 9.14453 cv
46.7949 7.11914 li
46.7949 6.21729 45.772 6.13672 45.4893 6.13672 cv
44.6211 6.13672 44.063 6.46631 44.0356 7.30762 cv
44.5811 7.30762 li
cp
46.2026 8.53906 mo
46.2026 9.00977 45.6641 9.3667 45.1123 9.3667 cv
44.6685 9.3667 44.4731 9.1377 44.4731 8.75439 cv
44.4731 8.31006 44.9375 8.22266 45.2271 8.18213 cv
45.9604 8.08789 46.1084 8.03418 46.2026 7.96045 cv
46.2026 8.53906 li
cp
f
48.3154 8.16211 mo
48.3154 7.59033 48.4097 6.66846 49.2642 6.66846 cv
50.1792 6.66846 50.2266 7.53613 50.2266 7.9873 cv
50.2266 8.76074 49.9238 9.34619 49.2778 9.34619 cv
48.9009 9.34619 48.3154 9.09717 48.3154 8.16211 cv
cp
47.7505 11.1499 mo
48.3423 11.1499 li
48.3423 9.38672 li
48.356 9.38672 li
48.5107 9.63574 48.8203 9.85791 49.291 9.85791 cv
50.4888 9.85791 50.8389 8.73389 50.8389 7.89307 cv
50.8389 6.90381 50.3071 6.13672 49.3721 6.13672 cv
48.7329 6.13672 48.4634 6.53369 48.3223 6.73535 cv
48.3086 6.73535 li
48.3086 6.23779 li
47.7505 6.23779 li
47.7505 11.1499 li
cp
f
52.8306 6.729 mo
52.8306 6.23779 li
52.2656 6.23779 li
52.2656 5.25537 li
51.6733 5.25537 li
51.6733 6.23779 li
51.1953 6.23779 li
51.1953 6.729 li
51.6733 6.729 li
51.6733 9.05029 li
51.6733 9.47412 51.8013 9.8042 52.3867 9.8042 cv
52.4473 9.8042 52.6152 9.77686 52.8306 9.75684 cv
52.8306 9.29248 li
52.6221 9.29248 li
52.501 9.29248 52.2656 9.29248 52.2656 9.0166 cv
52.2656 6.729 li
52.8306 6.729 li
cp
f
55.8047 8.65332 mo
55.7847 8.91553 55.4551 9.34619 54.8965 9.34619 cv
54.2168 9.34619 53.8735 8.92236 53.8735 8.18896 cv
56.4443 8.18896 li
56.4443 6.94385 55.9463 6.13672 54.9302 6.13672 cv
53.7661 6.13672 53.2412 7.00488 53.2412 8.09473 cv
53.2412 9.11084 53.8267 9.85791 54.8159 9.85791 cv
55.3809 9.85791 55.6099 9.72314 55.771 9.61572 cv
56.2153 9.31934 56.377 8.82178 56.397 8.65332 cv
55.8047 8.65332 li
cp
53.8735 7.71777 mo
53.8735 7.17285 54.3042 6.66846 54.8491 6.66846 cv
55.5693 6.66846 55.7983 7.17285 55.832 7.71777 cv
53.8735 7.71777 li
cp
f
57.8237 7.71143 mo
57.8237 7.19971 58.1733 6.76904 58.7251 6.76904 cv
58.9473 6.76904 li
58.9473 6.15674 li
58.9004 6.14355 58.8667 6.13672 58.7925 6.13672 cv
58.3486 6.13672 58.0391 6.4126 57.8032 6.82275 cv
57.79 6.82275 li
57.79 6.23779 li
57.2314 6.23779 li
57.2314 9.75684 li
57.8237 9.75684 li
57.8237 7.71143 li
cp
f
63.2402 5.02637 mo
62.7759 5.02637 li
62.5879 5.80029 62.2715 5.87402 61.5044 5.92822 cv
61.5044 6.39893 li
62.6079 6.39893 li
62.6079 9.75684 li
63.2402 9.75684 li
63.2402 5.02637 li
cp
f
40.1372 13.7002 mo
40.1533 13.7002 li
41.4775 18.5044 li
42.3013 18.5044 li
43.8271 12.707 li
42.9634 12.707 li
41.8813 17.4224 li
41.8652 17.4224 li
40.5649 12.707 li
39.709 12.707 li
38.4092 17.4224 li
38.3931 17.4224 li
37.311 12.707 li
36.4629 12.707 li
37.9731 18.5044 li
38.7969 18.5044 li
40.1372 13.7002 li
cp
f
47.9214 15.6299 mo
47.9214 14.4268 47.0977 14.1602 46.4434 14.1602 cv
45.7651 14.1602 45.4102 14.5801 45.208 14.8467 cv
45.1919 14.8467 li
45.1919 12.707 li
44.4814 12.707 li
44.4814 18.5044 li
45.1919 18.5044 li
45.1919 16.2031 li
45.1919 15.1372 45.7896 14.7983 46.3711 14.7983 cv
47.0493 14.7983 47.2104 15.1694 47.2104 15.7432 cv
47.2104 18.5044 li
47.9214 18.5044 li
47.9214 15.6299 li
cp
f
49.6006 15.5654 mo
49.6494 15.2422 49.7622 14.7495 50.5698 14.7495 cv
51.2397 14.7495 51.563 14.9922 51.563 15.436 cv
51.563 15.856 51.3613 15.9204 51.1914 15.937 cv
50.0205 16.082 li
48.8418 16.2275 48.7368 17.0513 48.7368 17.4063 cv
48.7368 18.1333 49.2856 18.6255 50.061 18.6255 cv
50.8848 18.6255 51.3125 18.2383 51.5874 17.9395 cv
51.6113 18.2622 51.7085 18.5854 52.3384 18.5854 cv
52.4995 18.5854 52.6045 18.5366 52.7256 18.5044 cv
52.7256 17.9878 li
52.645 18.0039 52.5562 18.02 52.4917 18.02 cv
52.3462 18.02 52.2573 17.9473 52.2573 17.7695 cv
52.2573 15.3394 li
52.2573 14.2573 51.0303 14.1602 50.6909 14.1602 cv
49.6494 14.1602 48.979 14.5562 48.9468 15.5654 cv
49.6006 15.5654 li
cp
51.5469 17.043 mo
51.5469 17.6084 50.9009 18.0361 50.2388 18.0361 cv
49.7056 18.0361 49.4717 17.7617 49.4717 17.3013 cv
49.4717 16.7686 50.0288 16.6636 50.376 16.6152 cv
51.2563 16.502 51.4336 16.4375 51.5469 16.3486 cv
51.5469 17.043 li
cp
f
55.0107 14.8711 mo
55.0107 14.2813 li
54.3325 14.2813 li
54.3325 13.1025 li
53.6221 13.1025 li
53.6221 14.2813 li
53.0488 14.2813 li
53.0488 14.8711 li
53.6221 14.8711 li
53.6221 17.6567 li
53.6221 18.1655 53.7754 18.561 54.478 18.561 cv
54.5508 18.561 54.7524 18.5288 55.0107 18.5044 cv
55.0107 17.9473 li
54.7607 17.9473 li
54.6152 17.9473 54.3325 17.9473 54.3325 17.6162 cv
54.3325 14.8711 li
55.0107 14.8711 li
cp
f
58.6768 14.2813 mo
57.9663 14.2813 li
57.9663 18.5044 li
58.6768 18.5044 li
58.6768 14.2813 li
cp
58.6768 13.5142 mo
58.6768 12.707 li
57.9663 12.707 li
57.9663 13.5142 li
58.6768 13.5142 li
cp
f
62.8271 15.4844 mo
62.8271 15.2749 62.7222 14.1602 61.2124 14.1602 cv
60.3809 14.1602 59.6138 14.5801 59.6138 15.5088 cv
59.6138 16.0903 60.001 16.3892 60.5908 16.5342 cv
61.4141 16.7363 li
62.02 16.8896 62.2539 17.0024 62.2539 17.3418 cv
62.2539 17.8101 61.7939 18.0122 61.2852 18.0122 cv
60.2837 18.0122 60.187 17.479 60.1626 17.1479 cv
59.4761 17.1479 li
59.5005 17.6567 59.6216 18.6255 61.293 18.6255 cv
62.2461 18.6255 62.9644 18.1011 62.9644 17.229 cv
62.9644 16.6553 62.6577 16.3325 61.7778 16.1143 cv
61.0669 15.937 li
60.5181 15.7993 60.2998 15.7188 60.2998 15.3716 cv
60.2998 14.8467 60.9219 14.7739 61.1396 14.7739 cv
62.0361 14.7739 62.1328 15.2183 62.1411 15.4844 cv
62.8271 15.4844 li
cp
f
29.4058 25.126 mo
29.3491 24.3911 28.9292 23.5835 27.8232 23.5835 cv
26.4263 23.5835 25.7964 24.6255 25.7964 25.9331 cv
25.7964 27.1528 26.499 28.0488 27.686 28.0488 cv
28.9214 28.0488 29.333 27.104 29.4058 26.4341 cv
28.7192 26.4341 li
28.5981 27.0801 28.1865 27.4351 27.71 27.4351 cv
26.7329 27.4351 26.5552 26.5391 26.5552 25.812 cv
26.5552 25.061 26.8379 24.2217 27.7183 24.2217 cv
28.3154 24.2217 28.6304 24.5605 28.7192 25.126 cv
29.4058 25.126 li
cp
f
29.874 25.812 mo
29.874 26.9023 30.4878 28.041 31.8364 28.041 cv
33.1846 28.041 33.7983 26.9023 33.7983 25.812 cv
33.7983 24.7222 33.1846 23.5835 31.8364 23.5835 cv
30.4878 23.5835 29.874 24.7222 29.874 25.812 cv
cp
30.6089 25.812 mo
30.6089 25.2471 30.8188 24.1973 31.8364 24.1973 cv
32.8535 24.1973 33.0635 25.2471 33.0635 25.812 cv
33.0635 26.3774 32.8535 27.4272 31.8364 27.4272 cv
30.8188 27.4272 30.6089 26.3774 30.6089 25.812 cv
cp
f
34.606 27.9277 mo
35.3164 27.9277 li
35.3164 25.6265 li
35.3164 24.48 36.0269 24.2217 36.4307 24.2217 cv
36.9556 24.2217 37.0928 24.6494 37.0928 25.0049 cv
37.0928 27.9277 li
37.8037 27.9277 li
37.8037 25.3521 li
37.8037 24.7866 38.1992 24.2217 38.7969 24.2217 cv
39.4023 24.2217 39.5801 24.6172 39.5801 25.1987 cv
39.5801 27.9277 li
40.2905 27.9277 li
40.2905 25.0049 li
40.2905 23.8179 39.4346 23.5835 38.9824 23.5835 cv
38.3286 23.5835 38.0459 23.8745 37.6904 24.27 cv
37.5693 24.0439 37.3271 23.5835 36.5679 23.5835 cv
35.8091 23.5835 35.4458 24.0762 35.2925 24.3022 cv
35.2759 24.3022 li
35.2759 23.7046 li
34.606 23.7046 li
34.606 27.9277 li
cp
f
41.9541 26.0142 mo
41.9541 25.3276 42.0669 24.2217 43.0923 24.2217 cv
44.1909 24.2217 44.2471 25.2632 44.2471 25.8042 cv
44.2471 26.7329 43.8838 27.4351 43.1089 27.4351 cv
42.6567 27.4351 41.9541 27.1362 41.9541 26.0142 cv
cp
41.2759 29.5991 mo
41.9863 29.5991 li
41.9863 27.4839 li
42.0024 27.4839 li
42.188 27.7827 42.5596 28.0488 43.125 28.0488 cv
44.562 28.0488 44.9819 26.7007 44.9819 25.6909 cv
44.9819 24.5044 44.3442 23.5835 43.2217 23.5835 cv
42.4546 23.5835 42.1318 24.0601 41.9619 24.3022 cv
41.9458 24.3022 li
41.9458 23.7046 li
41.2759 23.7046 li
41.2759 29.5991 li
cp
f
49.2456 27.9277 mo
49.2456 23.7046 li
48.5352 23.7046 li
48.5352 26.0303 li
48.5352 26.644 48.2686 27.4351 47.3721 27.4351 cv
46.9121 27.4351 46.5566 27.2012 46.5566 26.5068 cv
46.5566 23.7046 li
45.8462 23.7046 li
45.8462 26.7407 li
45.8462 27.75 46.5972 28.0488 47.2188 28.0488 cv
47.897 28.0488 48.2603 27.7905 48.5591 27.2979 cv
48.5752 27.314 li
48.5752 27.9277 li
49.2456 27.9277 li
cp
f
51.8618 24.2944 mo
51.8618 23.7046 li
51.1836 23.7046 li
51.1836 22.5259 li
50.4731 22.5259 li
50.4731 23.7046 li
49.8994 23.7046 li
49.8994 24.2944 li
50.4731 24.2944 li
50.4731 27.0801 li
50.4731 27.5889 50.6265 27.9844 51.3286 27.9844 cv
51.4014 27.9844 51.6035 27.9521 51.8618 27.9277 cv
51.8618 27.3706 li
51.6113 27.3706 li
51.4663 27.3706 51.1836 27.3706 51.1836 27.0396 cv
51.1836 24.2944 li
51.8618 24.2944 li
cp
f
53.186 24.9888 mo
53.2344 24.6655 53.3477 24.1733 54.1548 24.1733 cv
54.8252 24.1733 55.1479 24.4155 55.1479 24.8594 cv
55.1479 25.2793 54.9463 25.3438 54.7769 25.3599 cv
53.606 25.5054 li
52.4272 25.6509 52.3218 26.4741 52.3218 26.8296 cv
52.3218 27.5562 52.8711 28.0488 53.6465 28.0488 cv
54.4697 28.0488 54.8979 27.6616 55.1724 27.3628 cv
55.1968 27.6855 55.2935 28.0083 55.9233 28.0083 cv
56.085 28.0083 56.1899 27.96 56.311 27.9277 cv
56.311 27.4111 li
56.23 27.4272 56.1416 27.4434 56.0767 27.4434 cv
55.9316 27.4434 55.8428 27.3706 55.8428 27.1929 cv
55.8428 24.7627 li
55.8428 23.6807 54.6152 23.5835 54.2759 23.5835 cv
53.2344 23.5835 52.5645 23.979 52.5317 24.9888 cv
53.186 24.9888 li
cp
55.1318 26.4663 mo
55.1318 27.0317 54.4858 27.4595 53.8237 27.4595 cv
53.291 27.4595 53.0566 27.1851 53.0566 26.7246 cv
53.0566 26.1919 53.6138 26.0869 53.9614 26.0386 cv
54.8413 25.9253 55.019 25.8608 55.1318 25.772 cv
55.1318 26.4663 li
cp
f
58.5962 24.2944 mo
58.5962 23.7046 li
57.918 23.7046 li
57.918 22.5259 li
57.2075 22.5259 li
57.2075 23.7046 li
56.6338 23.7046 li
56.6338 24.2944 li
57.2075 24.2944 li
57.2075 27.0801 li
57.2075 27.5889 57.3608 27.9844 58.063 27.9844 cv
58.1357 27.9844 58.3379 27.9521 58.5962 27.9277 cv
58.5962 27.3706 li
58.3457 27.3706 li
58.2007 27.3706 57.918 27.3706 57.918 27.0396 cv
57.918 24.2944 li
58.5962 24.2944 li
cp
f
60.0171 23.7046 mo
59.3066 23.7046 li
59.3066 27.9277 li
60.0171 27.9277 li
60.0171 23.7046 li
cp
60.0171 22.9375 mo
60.0171 22.1304 li
59.3066 22.1304 li
59.3066 22.9375 li
60.0171 22.9375 li
cp
f
60.8408 25.812 mo
60.8408 26.9023 61.4546 28.041 62.8032 28.041 cv
64.1519 28.041 64.7651 26.9023 64.7651 25.812 cv
64.7651 24.7222 64.1519 23.5835 62.8032 23.5835 cv
61.4546 23.5835 60.8408 24.7222 60.8408 25.812 cv
cp
61.5757 25.812 mo
61.5757 25.2471 61.7856 24.1973 62.8032 24.1973 cv
63.8203 24.1973 64.0303 25.2471 64.0303 25.812 cv
64.0303 26.3774 63.8203 27.4272 62.8032 27.4272 cv
61.7856 27.4272 61.5757 26.3774 61.5757 25.812 cv
cp
f
69.0127 25.0532 mo
69.0127 23.8501 68.189 23.5835 67.5352 23.5835 cv
66.8081 23.5835 66.4126 24.0762 66.2593 24.3022 cv
66.2432 24.3022 li
66.2432 23.7046 li
65.5728 23.7046 li
65.5728 27.9277 li
66.2832 27.9277 li
66.2832 25.6265 li
66.2832 24.48 66.9941 24.2217 67.3975 24.2217 cv
68.0923 24.2217 68.3022 24.5928 68.3022 25.3276 cv
68.3022 27.9277 li
69.0127 27.9277 li
69.0127 25.0532 li
cp
f
70.7002 23.9468 mo
70.7002 23.5996 70.7407 22.6714 71.7744 22.6714 cv
72.5576 22.6714 72.7515 23.2524 72.7515 23.5918 cv
72.7515 24.0518 72.6382 24.165 72.1055 24.7139 cv
71.54 25.2954 71.3384 25.5298 71.3384 26.4502 cv
72.0488 26.4502 li
72.0327 25.6509 72.2427 25.4648 72.7515 24.9727 cv
73.3003 24.4478 73.5103 24.1733 73.5103 23.6401 cv
73.5103 22.6064 72.7026 22.0576 71.7983 22.0576 cv
71.3706 22.0576 70.9507 22.1787 70.6274 22.4287 cv
70.0381 22.8813 70.0142 23.3979 69.9897 23.9468 cv
70.7002 23.9468 li
cp
72.1055 27.104 mo
71.3218 27.104 li
71.3218 27.9277 li
72.1055 27.9277 li
72.1055 27.104 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
109.683 1.3457 mo
171.589 1.3457 li
174.563 1.3457 176.973 3.75586 176.973 6.729 cv
176.973 26.2427 li
176.973 29.2158 174.563 31.626 171.589 31.626 cv
109.683 31.626 li
106.71 31.626 104.299 29.2158 104.299 26.2427 cv
104.299 6.729 li
104.299 3.75586 106.71 1.3457 109.683 1.3457 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
109.683 1.3457 mo
171.589 1.3457 li
174.563 1.3457 176.973 3.75586 176.973 6.729 cv
176.973 26.2427 li
176.973 29.2158 174.563 31.626 171.589 31.626 cv
109.683 31.626 li
106.71 31.626 104.299 29.2158 104.299 26.2427 cv
104.299 6.729 li
104.299 3.75586 106.71 1.3457 109.683 1.3457 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
130.396 6.37891 mo
130.302 5.57129 129.656 4.79736 128.411 4.79736 cv
127.004 4.79736 126.157 5.82715 126.157 7.31396 cv
126.157 9.17139 127.233 9.88477 128.33 9.88477 cv
128.693 9.88477 130.174 9.8042 130.443 7.98047 cv
129.811 7.98047 li
129.588 9.104 128.855 9.30615 128.431 9.30615 cv
127.233 9.30615 126.83 8.43115 126.83 7.29395 cv
126.83 6.02246 127.536 5.37646 128.411 5.37646 cv
128.875 5.37646 129.582 5.53076 129.763 6.37891 cv
130.396 6.37891 li
cp
f
134.023 7.36133 mo
134.023 6.35889 133.336 6.13672 132.792 6.13672 cv
132.226 6.13672 131.93 6.48682 131.762 6.7085 cv
131.749 6.7085 li
131.749 4.92529 li
131.156 4.92529 li
131.156 9.75684 li
131.749 9.75684 li
131.749 7.83936 li
131.749 6.95068 132.246 6.66846 132.731 6.66846 cv
133.296 6.66846 133.431 6.97803 133.431 7.45557 cv
133.431 9.75684 li
134.023 9.75684 li
134.023 7.36133 li
cp
f
135.422 7.30762 mo
135.463 7.03857 135.557 6.62793 136.23 6.62793 cv
136.789 6.62793 137.058 6.82959 137.058 7.19971 cv
137.058 7.5498 136.889 7.60352 136.748 7.61719 cv
135.772 7.73828 li
134.79 7.85938 134.703 8.54541 134.703 8.8418 cv
134.703 9.44727 135.16 9.85791 135.806 9.85791 cv
136.492 9.85791 136.849 9.53467 137.078 9.28564 cv
137.098 9.55518 137.179 9.82422 137.704 9.82422 cv
137.838 9.82422 137.926 9.78369 138.026 9.75684 cv
138.026 9.32617 li
137.959 9.33984 137.885 9.35303 137.832 9.35303 cv
137.71 9.35303 137.636 9.29248 137.636 9.14453 cv
137.636 7.11914 li
137.636 6.21729 136.613 6.13672 136.331 6.13672 cv
135.463 6.13672 134.904 6.46631 134.877 7.30762 cv
135.422 7.30762 li
cp
137.044 8.53906 mo
137.044 9.00977 136.506 9.3667 135.954 9.3667 cv
135.51 9.3667 135.315 9.1377 135.315 8.75439 cv
135.315 8.31006 135.779 8.22266 136.068 8.18213 cv
136.802 8.08789 136.95 8.03418 137.044 7.96045 cv
137.044 8.53906 li
cp
f
139.157 8.16211 mo
139.157 7.59033 139.251 6.66846 140.106 6.66846 cv
141.021 6.66846 141.068 7.53613 141.068 7.9873 cv
141.068 8.76074 140.765 9.34619 140.119 9.34619 cv
139.743 9.34619 139.157 9.09717 139.157 8.16211 cv
cp
138.592 11.1499 mo
139.184 11.1499 li
139.184 9.38672 li
139.197 9.38672 li
139.352 9.63574 139.662 9.85791 140.133 9.85791 cv
141.331 9.85791 141.68 8.73389 141.68 7.89307 cv
141.68 6.90381 141.149 6.13672 140.213 6.13672 cv
139.574 6.13672 139.305 6.53369 139.164 6.73535 cv
139.15 6.73535 li
139.15 6.23779 li
138.592 6.23779 li
138.592 11.1499 li
cp
f
143.672 6.729 mo
143.672 6.23779 li
143.107 6.23779 li
143.107 5.25537 li
142.515 5.25537 li
142.515 6.23779 li
142.037 6.23779 li
142.037 6.729 li
142.515 6.729 li
142.515 9.05029 li
142.515 9.47412 142.643 9.8042 143.228 9.8042 cv
143.289 9.8042 143.457 9.77686 143.672 9.75684 cv
143.672 9.29248 li
143.463 9.29248 li
143.342 9.29248 143.107 9.29248 143.107 9.0166 cv
143.107 6.729 li
143.672 6.729 li
cp
f
146.646 8.65332 mo
146.626 8.91553 146.296 9.34619 145.738 9.34619 cv
145.058 9.34619 144.715 8.92236 144.715 8.18896 cv
147.286 8.18896 li
147.286 6.94385 146.788 6.13672 145.771 6.13672 cv
144.607 6.13672 144.083 7.00488 144.083 8.09473 cv
144.083 9.11084 144.668 9.85791 145.657 9.85791 cv
146.223 9.85791 146.451 9.72314 146.613 9.61572 cv
147.057 9.31934 147.218 8.82178 147.239 8.65332 cv
146.646 8.65332 li
cp
144.715 7.71777 mo
144.715 7.17285 145.146 6.66846 145.691 6.66846 cv
146.411 6.66846 146.64 7.17285 146.673 7.71777 cv
144.715 7.71777 li
cp
f
148.665 7.71143 mo
148.665 7.19971 149.015 6.76904 149.567 6.76904 cv
149.789 6.76904 li
149.789 6.15674 li
149.742 6.14355 149.708 6.13672 149.634 6.13672 cv
149.19 6.13672 148.88 6.4126 148.645 6.82275 cv
148.631 6.82275 li
148.631 6.23779 li
148.073 6.23779 li
148.073 9.75684 li
148.665 9.75684 li
148.665 7.71143 li
cp
f
152.554 6.72217 mo
152.575 6.39209 152.615 5.55811 153.51 5.55811 cv
154.203 5.55811 154.445 6.03564 154.445 6.4126 cv
154.445 7.03174 154.082 7.22656 153.577 7.51611 cv
152.952 7.87939 li
152.319 8.24951 151.875 8.77441 151.841 9.75684 cv
155.078 9.75684 li
155.078 9.19824 li
152.507 9.19824 li
152.534 9.0166 152.676 8.64648 153.322 8.29004 cv
153.813 8.021 li
154.52 7.64404 155.078 7.28711 155.078 6.43945 cv
155.078 5.55811 154.418 5.02637 153.598 5.02637 cv
153.086 5.02637 151.962 5.18115 151.962 6.72217 cv
152.554 6.72217 li
cp
f
125.19 17.8101 mo
121.694 17.8101 li
121.694 15.8721 li
124.868 15.8721 li
124.868 15.1777 li
121.694 15.1777 li
121.694 13.4014 li
125.134 13.4014 li
125.134 12.707 li
120.911 12.707 li
120.911 18.5044 li
125.19 18.5044 li
125.19 17.8101 li
cp
f
126.854 12.707 mo
126.143 12.707 li
126.143 18.5044 li
126.854 18.5044 li
126.854 12.707 li
cp
f
130.794 17.1802 mo
130.77 17.4951 130.375 18.0122 129.704 18.0122 cv
128.889 18.0122 128.477 17.5034 128.477 16.623 cv
131.562 16.623 li
131.562 15.1294 130.964 14.1602 129.745 14.1602 cv
128.348 14.1602 127.718 15.2021 127.718 16.5103 cv
127.718 17.7295 128.42 18.6255 129.607 18.6255 cv
130.286 18.6255 130.56 18.4644 130.754 18.335 cv
131.287 17.9795 131.481 17.3823 131.505 17.1802 cv
130.794 17.1802 li
cp
128.477 16.0581 mo
128.477 15.4038 128.994 14.7983 129.648 14.7983 cv
130.512 14.7983 130.786 15.4038 130.827 16.0581 cv
128.477 16.0581 li
cp
f
132.409 18.5044 mo
133.12 18.5044 li
133.12 16.2031 li
133.12 15.0566 133.831 14.7983 134.234 14.7983 cv
134.759 14.7983 134.896 15.2261 134.896 15.5815 cv
134.896 18.5044 li
135.607 18.5044 li
135.607 15.9287 li
135.607 15.3633 136.002 14.7983 136.6 14.7983 cv
137.206 14.7983 137.383 15.1938 137.383 15.7754 cv
137.383 18.5044 li
138.094 18.5044 li
138.094 15.5815 li
138.094 14.3945 137.238 14.1602 136.786 14.1602 cv
136.132 14.1602 135.849 14.4512 135.494 14.8467 cv
135.373 14.6206 135.13 14.1602 134.372 14.1602 cv
133.612 14.1602 133.249 14.6528 133.096 14.8789 cv
133.08 14.8789 li
133.08 14.2813 li
132.409 14.2813 li
132.409 18.5044 li
cp
f
142.01 17.1802 mo
141.986 17.4951 141.59 18.0122 140.92 18.0122 cv
140.104 18.0122 139.693 17.5034 139.693 16.623 cv
142.777 16.623 li
142.777 15.1294 142.18 14.1602 140.96 14.1602 cv
139.563 14.1602 138.934 15.2021 138.934 16.5103 cv
138.934 17.7295 139.636 18.6255 140.823 18.6255 cv
141.501 18.6255 141.776 18.4644 141.97 18.335 cv
142.503 17.9795 142.697 17.3823 142.721 17.1802 cv
142.01 17.1802 li
cp
139.693 16.0581 mo
139.693 15.4038 140.209 14.7983 140.864 14.7983 cv
141.728 14.7983 142.002 15.4038 142.042 16.0581 cv
139.693 16.0581 li
cp
f
147.065 15.6299 mo
147.065 14.4268 146.242 14.1602 145.587 14.1602 cv
144.861 14.1602 144.465 14.6528 144.312 14.8789 cv
144.295 14.8789 li
144.295 14.2813 li
143.625 14.2813 li
143.625 18.5044 li
144.336 18.5044 li
144.336 16.2031 li
144.336 15.0566 145.046 14.7983 145.45 14.7983 cv
146.145 14.7983 146.354 15.1694 146.354 15.9043 cv
146.354 18.5044 li
147.065 18.5044 li
147.065 15.6299 li
cp
f
149.665 14.8711 mo
149.665 14.2813 li
148.987 14.2813 li
148.987 13.1025 li
148.276 13.1025 li
148.276 14.2813 li
147.703 14.2813 li
147.703 14.8711 li
148.276 14.8711 li
148.276 17.6567 li
148.276 18.1655 148.43 18.561 149.132 18.561 cv
149.205 18.561 149.407 18.5288 149.665 18.5044 cv
149.665 17.9473 li
149.415 17.9473 li
149.27 17.9473 148.987 17.9473 148.987 17.6162 cv
148.987 14.8711 li
149.665 14.8711 li
cp
f
150.99 15.5654 mo
151.038 15.2422 151.151 14.7495 151.958 14.7495 cv
152.628 14.7495 152.952 14.9922 152.952 15.436 cv
152.952 15.856 152.75 15.9204 152.58 15.937 cv
151.409 16.082 li
150.23 16.2275 150.125 17.0513 150.125 17.4063 cv
150.125 18.1333 150.674 18.6255 151.45 18.6255 cv
152.273 18.6255 152.701 18.2383 152.976 17.9395 cv
153 18.2622 153.097 18.5854 153.727 18.5854 cv
153.888 18.5854 153.993 18.5366 154.114 18.5044 cv
154.114 17.9878 li
154.034 18.0039 153.945 18.02 153.88 18.02 cv
153.735 18.02 153.646 17.9473 153.646 17.7695 cv
153.646 15.3394 li
153.646 14.2573 152.419 14.1602 152.08 14.1602 cv
151.038 14.1602 150.368 14.5562 150.335 15.5654 cv
150.99 15.5654 li
cp
152.936 17.043 mo
152.936 17.6084 152.29 18.0361 151.627 18.0361 cv
151.094 18.0361 150.86 17.7617 150.86 17.3013 cv
150.86 16.7686 151.417 16.6636 151.765 16.6152 cv
152.645 16.502 152.822 16.4375 152.936 16.3486 cv
152.936 17.043 li
cp
f
155.657 16.0498 mo
155.657 15.436 156.077 14.9194 156.739 14.9194 cv
157.005 14.9194 li
157.005 14.1846 li
156.949 14.1685 156.908 14.1602 156.819 14.1602 cv
156.287 14.1602 155.915 14.4912 155.632 14.9839 cv
155.616 14.9839 li
155.616 14.2813 li
154.946 14.2813 li
154.946 18.5044 li
155.657 18.5044 li
155.657 16.0498 li
cp
f
159.048 17.7212 mo
159.032 17.7212 li
157.91 14.2813 li
157.102 14.2813 li
158.668 18.6177 li
158.33 19.4897 158.289 19.5947 157.917 19.5947 cv
157.724 19.5947 157.579 19.5542 157.49 19.522 cv
157.49 20.168 li
157.603 20.2002 157.684 20.2324 157.789 20.2324 cv
158.701 20.2324 158.773 20.1357 159.444 18.4238 cv
159.985 17.043 160.469 15.6621 160.962 14.2813 cv
160.179 14.2813 li
159.048 17.7212 li
cp
f
120.475 25.126 mo
120.418 24.3911 119.999 23.5835 118.892 23.5835 cv
117.495 23.5835 116.865 24.6255 116.865 25.9331 cv
116.865 27.1528 117.568 28.0488 118.755 28.0488 cv
119.99 28.0488 120.402 27.104 120.475 26.4341 cv
119.789 26.4341 li
119.667 27.0801 119.255 27.4351 118.779 27.4351 cv
117.802 27.4351 117.625 26.5391 117.625 25.812 cv
117.625 25.061 117.907 24.2217 118.787 24.2217 cv
119.385 24.2217 119.7 24.5605 119.789 25.126 cv
120.475 25.126 li
cp
f
120.943 25.812 mo
120.943 26.9023 121.557 28.041 122.905 28.041 cv
124.254 28.041 124.868 26.9023 124.868 25.812 cv
124.868 24.7222 124.254 23.5835 122.905 23.5835 cv
121.557 23.5835 120.943 24.7222 120.943 25.812 cv
cp
121.678 25.812 mo
121.678 25.2471 121.888 24.1973 122.905 24.1973 cv
123.923 24.1973 124.133 25.2471 124.133 25.812 cv
124.133 26.3774 123.923 27.4272 122.905 27.4272 cv
121.888 27.4272 121.678 26.3774 121.678 25.812 cv
cp
f
125.675 27.9277 mo
126.386 27.9277 li
126.386 25.6265 li
126.386 24.48 127.096 24.2217 127.5 24.2217 cv
128.025 24.2217 128.162 24.6494 128.162 25.0049 cv
128.162 27.9277 li
128.873 27.9277 li
128.873 25.3521 li
128.873 24.7866 129.268 24.2217 129.866 24.2217 cv
130.471 24.2217 130.649 24.6172 130.649 25.1987 cv
130.649 27.9277 li
131.36 27.9277 li
131.36 25.0049 li
131.36 23.8179 130.504 23.5835 130.052 23.5835 cv
129.397 23.5835 129.115 23.8745 128.76 24.27 cv
128.639 24.0439 128.396 23.5835 127.637 23.5835 cv
126.878 23.5835 126.515 24.0762 126.361 24.3022 cv
126.345 24.3022 li
126.345 23.7046 li
125.675 23.7046 li
125.675 27.9277 li
cp
f
133.023 26.0142 mo
133.023 25.3276 133.136 24.2217 134.162 24.2217 cv
135.26 24.2217 135.316 25.2632 135.316 25.8042 cv
135.316 26.7329 134.953 27.4351 134.178 27.4351 cv
133.726 27.4351 133.023 27.1362 133.023 26.0142 cv
cp
132.345 29.5991 mo
133.055 29.5991 li
133.055 27.4839 li
133.071 27.4839 li
133.257 27.7827 133.628 28.0488 134.194 28.0488 cv
135.631 28.0488 136.051 26.7007 136.051 25.6909 cv
136.051 24.5044 135.413 23.5835 134.291 23.5835 cv
133.524 23.5835 133.201 24.0601 133.031 24.3022 cv
133.015 24.3022 li
133.015 23.7046 li
132.345 23.7046 li
132.345 29.5991 li
cp
f
140.314 27.9277 mo
140.314 23.7046 li
139.604 23.7046 li
139.604 26.0303 li
139.604 26.644 139.337 27.4351 138.441 27.4351 cv
137.981 27.4351 137.625 27.2012 137.625 26.5068 cv
137.625 23.7046 li
136.915 23.7046 li
136.915 26.7407 li
136.915 27.75 137.666 28.0488 138.288 28.0488 cv
138.966 28.0488 139.33 27.7905 139.628 27.2979 cv
139.645 27.314 li
139.645 27.9277 li
140.314 27.9277 li
cp
f
142.931 24.2944 mo
142.931 23.7046 li
142.252 23.7046 li
142.252 22.5259 li
141.542 22.5259 li
141.542 23.7046 li
140.969 23.7046 li
140.969 24.2944 li
141.542 24.2944 li
141.542 27.0801 li
141.542 27.5889 141.695 27.9844 142.398 27.9844 cv
142.471 27.9844 142.672 27.9521 142.931 27.9277 cv
142.931 27.3706 li
142.681 27.3706 li
142.535 27.3706 142.252 27.3706 142.252 27.0396 cv
142.252 24.2944 li
142.931 24.2944 li
cp
f
144.255 24.9888 mo
144.304 24.6655 144.417 24.1733 145.224 24.1733 cv
145.894 24.1733 146.217 24.4155 146.217 24.8594 cv
146.217 25.2793 146.015 25.3438 145.846 25.3599 cv
144.675 25.5054 li
143.496 25.6509 143.391 26.4741 143.391 26.8296 cv
143.391 27.5562 143.94 28.0488 144.715 28.0488 cv
145.539 28.0488 145.967 27.6616 146.242 27.3628 cv
146.266 27.6855 146.363 28.0083 146.993 28.0083 cv
147.154 28.0083 147.259 27.96 147.38 27.9277 cv
147.38 27.4111 li
147.299 27.4272 147.21 27.4434 147.146 27.4434 cv
147 27.4434 146.912 27.3706 146.912 27.1929 cv
146.912 24.7627 li
146.912 23.6807 145.684 23.5835 145.345 23.5835 cv
144.304 23.5835 143.633 23.979 143.601 24.9888 cv
144.255 24.9888 li
cp
146.201 26.4663 mo
146.201 27.0317 145.555 27.4595 144.893 27.4595 cv
144.36 27.4595 144.126 27.1851 144.126 26.7246 cv
144.126 26.1919 144.683 26.0869 145.03 26.0386 cv
145.911 25.9253 146.088 25.8608 146.201 25.772 cv
146.201 26.4663 li
cp
f
149.665 24.2944 mo
149.665 23.7046 li
148.987 23.7046 li
148.987 22.5259 li
148.276 22.5259 li
148.276 23.7046 li
147.703 23.7046 li
147.703 24.2944 li
148.276 24.2944 li
148.276 27.0801 li
148.276 27.5889 148.43 27.9844 149.132 27.9844 cv
149.205 27.9844 149.407 27.9521 149.665 27.9277 cv
149.665 27.3706 li
149.415 27.3706 li
149.27 27.3706 148.987 27.3706 148.987 27.0396 cv
148.987 24.2944 li
149.665 24.2944 li
cp
f
151.086 23.7046 mo
150.376 23.7046 li
150.376 27.9277 li
151.086 27.9277 li
151.086 23.7046 li
cp
151.086 22.9375 mo
151.086 22.1304 li
150.376 22.1304 li
150.376 22.9375 li
151.086 22.9375 li
cp
f
151.91 25.812 mo
151.91 26.9023 152.524 28.041 153.872 28.041 cv
155.221 28.041 155.834 26.9023 155.834 25.812 cv
155.834 24.7222 155.221 23.5835 153.872 23.5835 cv
152.524 23.5835 151.91 24.7222 151.91 25.812 cv
cp
152.645 25.812 mo
152.645 25.2471 152.855 24.1973 153.872 24.1973 cv
154.89 24.1973 155.1 25.2471 155.1 25.812 cv
155.1 26.3774 154.89 27.4272 153.872 27.4272 cv
152.855 27.4272 152.645 26.3774 152.645 25.812 cv
cp
f
160.082 25.0532 mo
160.082 23.8501 159.258 23.5835 158.604 23.5835 cv
157.877 23.5835 157.481 24.0762 157.328 24.3022 cv
157.312 24.3022 li
157.312 23.7046 li
156.642 23.7046 li
156.642 27.9277 li
157.353 27.9277 li
157.353 25.6265 li
157.353 24.48 158.063 24.2217 158.467 24.2217 cv
159.161 24.2217 159.371 24.5928 159.371 25.3276 cv
159.371 27.9277 li
160.082 27.9277 li
160.082 25.0532 li
cp
f
164.216 24.9077 mo
164.216 24.6978 164.111 23.5835 162.601 23.5835 cv
161.77 23.5835 161.002 24.0034 161.002 24.9321 cv
161.002 25.5137 161.39 25.812 161.979 25.9575 cv
162.803 26.1597 li
163.409 26.313 163.643 26.4258 163.643 26.7651 cv
163.643 27.2334 163.183 27.4351 162.674 27.4351 cv
161.672 27.4351 161.576 26.9023 161.551 26.5713 cv
160.865 26.5713 li
160.889 27.0801 161.01 28.0488 162.682 28.0488 cv
163.635 28.0488 164.353 27.5239 164.353 26.6519 cv
164.353 26.0786 164.046 25.7559 163.167 25.5376 cv
162.456 25.3599 li
161.907 25.2227 161.688 25.1421 161.688 24.7949 cv
161.688 24.27 162.311 24.1973 162.528 24.1973 cv
163.425 24.1973 163.521 24.6411 163.53 24.9077 cv
164.216 24.9077 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
200.524 1.3457 mo
262.431 1.3457 li
265.404 1.3457 267.814 3.75586 267.814 6.729 cv
267.814 26.2427 li
267.814 29.2158 265.404 31.626 262.431 31.626 cv
200.524 31.626 li
197.551 31.626 195.141 29.2158 195.141 26.2427 cv
195.141 6.729 li
195.141 3.75586 197.551 1.3457 200.524 1.3457 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
200.524 1.3457 mo
262.431 1.3457 li
265.404 1.3457 267.814 3.75586 267.814 6.729 cv
267.814 26.2427 li
267.814 29.2158 265.404 31.626 262.431 31.626 cv
200.524 31.626 li
197.551 31.626 195.141 29.2158 195.141 26.2427 cv
195.141 6.729 li
195.141 3.75586 197.551 1.3457 200.524 1.3457 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
221.238 6.37891 mo
221.143 5.57129 220.498 4.79736 219.252 4.79736 cv
217.846 4.79736 216.999 5.82715 216.999 7.31396 cv
216.999 9.17139 218.075 9.88477 219.171 9.88477 cv
219.535 9.88477 221.015 9.8042 221.285 7.98047 cv
220.652 7.98047 li
220.43 9.104 219.697 9.30615 219.273 9.30615 cv
218.075 9.30615 217.671 8.43115 217.671 7.29395 cv
217.671 6.02246 218.377 5.37646 219.252 5.37646 cv
219.716 5.37646 220.423 5.53076 220.605 6.37891 cv
221.238 6.37891 li
cp
f
224.865 7.36133 mo
224.865 6.35889 224.178 6.13672 223.633 6.13672 cv
223.068 6.13672 222.772 6.48682 222.603 6.7085 cv
222.59 6.7085 li
222.59 4.92529 li
221.998 4.92529 li
221.998 9.75684 li
222.59 9.75684 li
222.59 7.83936 li
222.59 6.95068 223.087 6.66846 223.573 6.66846 cv
224.137 6.66846 224.272 6.97803 224.272 7.45557 cv
224.272 9.75684 li
224.865 9.75684 li
224.865 7.36133 li
cp
f
226.264 7.30762 mo
226.304 7.03857 226.399 6.62793 227.072 6.62793 cv
227.63 6.62793 227.899 6.82959 227.899 7.19971 cv
227.899 7.5498 227.731 7.60352 227.589 7.61719 cv
226.614 7.73828 li
225.631 7.85938 225.543 8.54541 225.543 8.8418 cv
225.543 9.44727 226.001 9.85791 226.647 9.85791 cv
227.333 9.85791 227.691 9.53467 227.919 9.28564 cv
227.94 9.55518 228.02 9.82422 228.545 9.82422 cv
228.679 9.82422 228.767 9.78369 228.868 9.75684 cv
228.868 9.32617 li
228.8 9.33984 228.727 9.35303 228.673 9.35303 cv
228.552 9.35303 228.478 9.29248 228.478 9.14453 cv
228.478 7.11914 li
228.478 6.21729 227.455 6.13672 227.172 6.13672 cv
226.304 6.13672 225.746 6.46631 225.719 7.30762 cv
226.264 7.30762 li
cp
227.885 8.53906 mo
227.885 9.00977 227.347 9.3667 226.795 9.3667 cv
226.351 9.3667 226.157 9.1377 226.157 8.75439 cv
226.157 8.31006 226.621 8.22266 226.91 8.18213 cv
227.643 8.08789 227.792 8.03418 227.885 7.96045 cv
227.885 8.53906 li
cp
f
229.999 8.16211 mo
229.999 7.59033 230.092 6.66846 230.948 6.66846 cv
231.863 6.66846 231.91 7.53613 231.91 7.9873 cv
231.91 8.76074 231.607 9.34619 230.96 9.34619 cv
230.583 9.34619 229.999 9.09717 229.999 8.16211 cv
cp
229.433 11.1499 mo
230.026 11.1499 li
230.026 9.38672 li
230.039 9.38672 li
230.194 9.63574 230.503 9.85791 230.974 9.85791 cv
232.172 9.85791 232.522 8.73389 232.522 7.89307 cv
232.522 6.90381 231.991 6.13672 231.055 6.13672 cv
230.416 6.13672 230.147 6.53369 230.005 6.73535 cv
229.992 6.73535 li
229.992 6.23779 li
229.433 6.23779 li
229.433 11.1499 li
cp
f
234.514 6.729 mo
234.514 6.23779 li
233.949 6.23779 li
233.949 5.25537 li
233.356 5.25537 li
233.356 6.23779 li
232.878 6.23779 li
232.878 6.729 li
233.356 6.729 li
233.356 9.05029 li
233.356 9.47412 233.484 9.8042 234.07 9.8042 cv
234.13 9.8042 234.298 9.77686 234.514 9.75684 cv
234.514 9.29248 li
234.305 9.29248 li
234.184 9.29248 233.949 9.29248 233.949 9.0166 cv
233.949 6.729 li
234.514 6.729 li
cp
f
237.488 8.65332 mo
237.467 8.91553 237.138 9.34619 236.58 9.34619 cv
235.9 9.34619 235.557 8.92236 235.557 8.18896 cv
238.127 8.18896 li
238.127 6.94385 237.629 6.13672 236.613 6.13672 cv
235.449 6.13672 234.924 7.00488 234.924 8.09473 cv
234.924 9.11084 235.509 9.85791 236.499 9.85791 cv
237.064 9.85791 237.292 9.72314 237.455 9.61572 cv
237.898 9.31934 238.06 8.82178 238.08 8.65332 cv
237.488 8.65332 li
cp
235.557 7.71777 mo
235.557 7.17285 235.987 6.66846 236.533 6.66846 cv
237.252 6.66846 237.481 7.17285 237.515 7.71777 cv
235.557 7.71777 li
cp
f
239.506 7.71143 mo
239.506 7.19971 239.857 6.76904 240.409 6.76904 cv
240.63 6.76904 li
240.63 6.15674 li
240.583 6.14355 240.549 6.13672 240.475 6.13672 cv
240.032 6.13672 239.722 6.4126 239.487 6.82275 cv
239.473 6.82275 li
239.473 6.23779 li
238.915 6.23779 li
238.915 9.75684 li
239.506 9.75684 li
239.506 7.71143 li
cp
f
244.015 7.57666 mo
244.102 7.57666 244.197 7.56982 244.284 7.56982 cv
244.688 7.56982 245.388 7.64404 245.388 8.43799 cv
245.388 8.98291 244.963 9.35303 244.358 9.35303 cv
243.477 9.35303 243.369 8.75439 243.349 8.31006 cv
242.737 8.31006 li
242.777 8.85498 242.918 9.40039 243.443 9.67627 cv
243.671 9.79736 243.968 9.88477 244.318 9.88477 cv
245.522 9.88477 246.02 9.1377 246.02 8.36377 cv
246.02 7.73145 245.691 7.40869 245.233 7.26025 cv
245.233 7.24707 li
245.489 7.16602 245.838 6.87695 245.838 6.271 cv
245.838 5.55127 245.293 5.02637 244.378 5.02637 cv
243.133 5.02637 242.851 5.88086 242.851 6.57422 cv
243.429 6.57422 li
243.457 6.24414 243.51 5.55811 244.351 5.55811 cv
245.058 5.55811 245.226 6.02246 245.226 6.30469 cv
245.226 6.89697 244.782 7.07861 244.325 7.07861 cv
244.223 7.07861 244.116 7.07178 244.015 7.06543 cv
244.015 7.57666 li
cp
f
214.954 17.6484 mo
214.938 17.6484 li
213.282 12.707 li
212.41 12.707 li
214.526 18.5044 li
215.358 18.5044 li
217.473 12.707 li
216.593 12.707 li
214.954 17.6484 li
cp
f
218.749 14.2813 mo
218.039 14.2813 li
218.039 18.5044 li
218.749 18.5044 li
218.749 14.2813 li
cp
218.749 13.5142 mo
218.749 12.707 li
218.039 12.707 li
218.039 13.5142 li
218.749 13.5142 li
cp
f
222.899 15.4844 mo
222.899 15.2749 222.794 14.1602 221.285 14.1602 cv
220.453 14.1602 219.685 14.5801 219.685 15.5088 cv
219.685 16.0903 220.073 16.3892 220.663 16.5342 cv
221.486 16.7363 li
222.092 16.8896 222.326 17.0024 222.326 17.3418 cv
222.326 17.8101 221.866 18.0122 221.357 18.0122 cv
220.356 18.0122 220.259 17.479 220.235 17.1479 cv
219.548 17.1479 li
219.573 17.6567 219.694 18.6255 221.365 18.6255 cv
222.318 18.6255 223.037 18.1011 223.037 17.229 cv
223.037 16.6553 222.73 16.3325 221.849 16.1143 cv
221.139 15.937 li
220.59 15.7993 220.372 15.7188 220.372 15.3716 cv
220.372 14.8467 220.994 14.7739 221.211 14.7739 cv
222.108 14.7739 222.205 15.2183 222.213 15.4844 cv
222.899 15.4844 li
cp
f
227.276 18.5044 mo
227.276 14.2813 li
226.565 14.2813 li
226.565 16.6069 li
226.565 17.2207 226.298 18.0122 225.403 18.0122 cv
224.942 18.0122 224.586 17.7778 224.586 17.0835 cv
224.586 14.2813 li
223.876 14.2813 li
223.876 17.3174 li
223.876 18.3267 224.627 18.6255 225.25 18.6255 cv
225.927 18.6255 226.291 18.3672 226.589 17.8745 cv
226.606 17.8911 li
226.606 18.5044 li
227.276 18.5044 li
cp
f
228.971 15.5654 mo
229.02 15.2422 229.133 14.7495 229.941 14.7495 cv
230.611 14.7495 230.934 14.9922 230.934 15.436 cv
230.934 15.856 230.732 15.9204 230.562 15.937 cv
229.391 16.082 li
228.212 16.2275 228.108 17.0513 228.108 17.4063 cv
228.108 18.1333 228.657 18.6255 229.432 18.6255 cv
230.255 18.6255 230.683 18.2383 230.958 17.9395 cv
230.982 18.2622 231.079 18.5854 231.708 18.5854 cv
231.871 18.5854 231.975 18.5366 232.096 18.5044 cv
232.096 17.9878 li
232.016 18.0039 231.927 18.02 231.862 18.02 cv
231.717 18.02 231.628 17.9473 231.628 17.7695 cv
231.628 15.3394 li
231.628 14.2573 230.401 14.1602 230.062 14.1602 cv
229.02 14.1602 228.35 14.5562 228.318 15.5654 cv
228.971 15.5654 li
cp
230.917 17.043 mo
230.917 17.6084 230.272 18.0361 229.61 18.0361 cv
229.077 18.0361 228.842 17.7617 228.842 17.3013 cv
228.842 16.7686 229.4 16.6636 229.747 16.6152 cv
230.626 16.502 230.804 16.4375 230.917 16.3486 cv
230.917 17.043 li
cp
f
233.558 12.707 mo
232.847 12.707 li
232.847 18.5044 li
233.558 18.5044 li
233.558 12.707 li
cp
f
235.351 14.2813 mo
234.64 14.2813 li
234.64 18.5044 li
235.351 18.5044 li
235.351 14.2813 li
cp
235.351 13.5142 mo
235.351 12.707 li
234.64 12.707 li
234.64 13.5142 li
235.351 13.5142 li
cp
f
239.606 14.8628 mo
239.606 14.2813 li
236.335 14.2813 li
236.335 14.8711 li
238.685 14.8711 li
236.142 17.9473 li
236.142 18.5044 li
239.678 18.5044 li
239.678 17.915 li
237.086 17.915 li
239.606 14.8628 li
cp
f
241.18 14.2813 mo
240.47 14.2813 li
240.47 18.5044 li
241.18 18.5044 li
241.18 14.2813 li
cp
241.18 13.5142 mo
241.18 12.707 li
240.47 12.707 li
240.47 13.5142 li
241.18 13.5142 li
cp
f
245.686 15.6299 mo
245.686 14.4268 244.863 14.1602 244.208 14.1602 cv
243.482 14.1602 243.086 14.6528 242.933 14.8789 cv
242.917 14.8789 li
242.917 14.2813 li
242.247 14.2813 li
242.247 18.5044 li
242.958 18.5044 li
242.958 16.2031 li
242.958 15.0566 243.667 14.7983 244.072 14.7983 cv
244.766 14.7983 244.976 15.1694 244.976 15.9043 cv
244.976 18.5044 li
245.686 18.5044 li
245.686 15.6299 li
cp
f
247.269 16.3809 mo
247.269 15.8398 247.326 14.7983 248.423 14.7983 cv
249.45 14.7983 249.562 15.9043 249.562 16.5908 cv
249.562 17.7134 248.86 18.0122 248.408 18.0122 cv
247.632 18.0122 247.269 17.3096 247.269 16.3809 cv
cp
250.241 14.2813 mo
249.571 14.2813 li
249.571 14.8789 li
249.554 14.8789 li
249.384 14.6367 249.062 14.1602 248.294 14.1602 cv
247.172 14.1602 246.535 15.0806 246.535 16.2681 cv
246.535 17.2773 246.954 18.6255 248.391 18.6255 cv
248.957 18.6255 249.329 18.3594 249.514 18.0605 cv
249.514 18.0283 li
249.53 18.0283 li
249.53 18.2056 li
249.53 18.7065 249.554 19.6914 248.327 19.6914 cv
248.158 19.6914 247.503 19.6914 247.374 19.0215 cv
246.664 19.0215 li
246.8 20.1436 247.778 20.2808 248.279 20.2808 cv
250.233 20.2808 250.241 18.7632 250.241 18.1572 cv
250.241 14.2813 li
cp
f
212.886 24.9888 mo
212.935 24.6655 213.048 24.1733 213.856 24.1733 cv
214.526 24.1733 214.849 24.4155 214.849 24.8594 cv
214.849 25.2793 214.647 25.3438 214.477 25.3599 cv
213.306 25.5054 li
212.127 25.6509 212.023 26.4741 212.023 26.8296 cv
212.023 27.5562 212.572 28.0488 213.347 28.0488 cv
214.17 28.0488 214.598 27.6616 214.873 27.3628 cv
214.897 27.6855 214.994 28.0083 215.624 28.0083 cv
215.786 28.0083 215.89 27.96 216.011 27.9277 cv
216.011 27.4111 li
215.931 27.4272 215.842 27.4434 215.777 27.4434 cv
215.632 27.4434 215.543 27.3706 215.543 27.1929 cv
215.543 24.7627 li
215.543 23.6807 214.316 23.5835 213.977 23.5835 cv
212.935 23.5835 212.265 23.979 212.233 24.9888 cv
212.886 24.9888 li
cp
214.833 26.4663 mo
214.833 27.0317 214.187 27.4595 213.524 27.4595 cv
212.992 27.4595 212.757 27.1851 212.757 26.7246 cv
212.757 26.1919 213.315 26.0869 213.662 26.0386 cv
214.542 25.9253 214.719 25.8608 214.833 25.772 cv
214.833 26.4663 li
cp
f
217.36 27.9277 mo
217.36 27.4028 li
217.376 27.4028 li
217.522 27.6372 217.82 28.0488 218.539 28.0488 cv
219.976 28.0488 220.396 26.7007 220.396 25.6909 cv
220.396 24.5044 219.758 23.5835 218.636 23.5835 cv
218.143 23.5918 217.723 23.7935 217.417 24.2378 cv
217.4 24.2378 li
217.4 22.1304 li
216.69 22.1304 li
216.69 27.9277 li
217.36 27.9277 li
cp
219.662 25.8042 mo
219.662 26.7329 219.298 27.4351 218.523 27.4351 cv
218.071 27.4351 217.368 27.1362 217.368 26.0142 cv
217.368 25.3276 217.481 24.2217 218.506 24.2217 cv
219.605 24.2217 219.662 25.2632 219.662 25.8042 cv
cp
f
224.321 24.9077 mo
224.321 24.6978 224.215 23.5835 222.706 23.5835 cv
221.874 23.5835 221.107 24.0034 221.107 24.9321 cv
221.107 25.5137 221.495 25.812 222.083 25.9575 cv
222.908 26.1597 li
223.513 26.313 223.748 26.4258 223.748 26.7651 cv
223.748 27.2334 223.287 27.4351 222.778 27.4351 cv
221.777 27.4351 221.68 26.9023 221.656 26.5713 cv
220.969 26.5713 li
220.994 27.0801 221.115 28.0488 222.787 28.0488 cv
223.739 28.0488 224.458 27.5239 224.458 26.6519 cv
224.458 26.0786 224.151 25.7559 223.271 25.5376 cv
222.56 25.3599 li
222.011 25.2227 221.793 25.1421 221.793 24.7949 cv
221.793 24.27 222.415 24.1973 222.633 24.1973 cv
223.529 24.1973 223.626 24.6411 223.634 24.9077 cv
224.321 24.9077 li
cp
f
226.824 24.2944 mo
226.824 23.7046 li
226.145 23.7046 li
226.145 22.5259 li
225.435 22.5259 li
225.435 23.7046 li
224.862 23.7046 li
224.862 24.2944 li
225.435 24.2944 li
225.435 27.0801 li
225.435 27.5889 225.588 27.9844 226.291 27.9844 cv
226.364 27.9844 226.565 27.9521 226.824 27.9277 cv
226.824 27.3706 li
226.574 27.3706 li
226.428 27.3706 226.145 27.3706 226.145 27.0396 cv
226.145 24.2944 li
226.824 24.2944 li
cp
f
228.326 25.4731 mo
228.326 24.8594 228.746 24.3428 229.408 24.3428 cv
229.674 24.3428 li
229.674 23.6079 li
229.618 23.5918 229.577 23.5835 229.489 23.5835 cv
228.956 23.5835 228.583 23.9146 228.301 24.4072 cv
228.286 24.4072 li
228.286 23.7046 li
227.615 23.7046 li
227.615 27.9277 li
228.326 27.9277 li
228.326 25.4731 li
cp
f
230.836 24.9888 mo
230.885 24.6655 230.999 24.1733 231.806 24.1733 cv
232.476 24.1733 232.799 24.4155 232.799 24.8594 cv
232.799 25.2793 232.597 25.3438 232.427 25.3599 cv
231.256 25.5054 li
230.078 25.6509 229.973 26.4741 229.973 26.8296 cv
229.973 27.5562 230.522 28.0488 231.297 28.0488 cv
232.121 28.0488 232.548 27.6616 232.823 27.3628 cv
232.847 27.6855 232.944 28.0083 233.574 28.0083 cv
233.736 28.0083 233.84 27.96 233.961 27.9277 cv
233.961 27.4111 li
233.881 27.4272 233.792 27.4434 233.728 27.4434 cv
233.583 27.4434 233.494 27.3706 233.494 27.1929 cv
233.494 24.7627 li
233.494 23.6807 232.266 23.5835 231.927 23.5835 cv
230.885 23.5835 230.215 23.979 230.183 24.9888 cv
230.836 24.9888 li
cp
232.783 26.4663 mo
232.783 27.0317 232.137 27.4595 231.475 27.4595 cv
230.942 27.4595 230.708 27.1851 230.708 26.7246 cv
230.708 26.1919 231.265 26.0869 231.612 26.0386 cv
232.492 25.9253 232.669 25.8608 232.783 25.772 cv
232.783 26.4663 li
cp
f
238.023 25.126 mo
237.967 24.3911 237.547 23.5835 236.441 23.5835 cv
235.043 23.5835 234.414 24.6255 234.414 25.9331 cv
234.414 27.1528 235.117 28.0488 236.303 28.0488 cv
237.539 28.0488 237.951 27.104 238.023 26.4341 cv
237.337 26.4341 li
237.216 27.0801 236.804 27.4351 236.328 27.4351 cv
235.351 27.4351 235.173 26.5391 235.173 25.812 cv
235.173 25.061 235.456 24.2217 236.335 24.2217 cv
236.933 24.2217 237.249 24.5605 237.337 25.126 cv
238.023 25.126 li
cp
f
240.285 24.2944 mo
240.285 23.7046 li
239.606 23.7046 li
239.606 22.5259 li
238.895 22.5259 li
238.895 23.7046 li
238.322 23.7046 li
238.322 24.2944 li
238.895 24.2944 li
238.895 27.0801 li
238.895 27.5889 239.049 27.9844 239.751 27.9844 cv
239.824 27.9844 240.026 27.9521 240.285 27.9277 cv
240.285 27.3706 li
240.034 27.3706 li
239.889 27.3706 239.606 27.3706 239.606 27.0396 cv
239.606 24.2944 li
240.285 24.2944 li
cp
f
241.706 23.7046 mo
240.995 23.7046 li
240.995 27.9277 li
241.706 27.9277 li
241.706 23.7046 li
cp
241.706 22.9375 mo
241.706 22.1304 li
240.995 22.1304 li
240.995 22.9375 li
241.706 22.9375 li
cp
f
242.529 25.812 mo
242.529 26.9023 243.143 28.041 244.492 28.041 cv
245.839 28.041 246.454 26.9023 246.454 25.812 cv
246.454 24.7222 245.839 23.5835 244.492 23.5835 cv
243.143 23.5835 242.529 24.7222 242.529 25.812 cv
cp
243.264 25.812 mo
243.264 25.2471 243.474 24.1973 244.492 24.1973 cv
245.508 24.1973 245.718 25.2471 245.718 25.812 cv
245.718 26.3774 245.508 27.4272 244.492 27.4272 cv
243.474 27.4272 243.264 26.3774 243.264 25.812 cv
cp
f
250.701 25.0532 mo
250.701 23.8501 249.877 23.5835 249.223 23.5835 cv
248.497 23.5835 248.101 24.0762 247.948 24.3022 cv
247.931 24.3022 li
247.931 23.7046 li
247.261 23.7046 li
247.261 27.9277 li
247.971 27.9277 li
247.971 25.6265 li
247.971 24.48 248.682 24.2217 249.085 24.2217 cv
249.78 24.2217 249.991 24.5928 249.991 25.3276 cv
249.991 27.9277 li
250.701 27.9277 li
250.701 25.0532 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
291.366 1.3457 mo
353.272 1.3457 li
356.246 1.3457 358.656 3.75586 358.656 6.729 cv
358.656 26.2427 li
358.656 29.2158 356.246 31.626 353.272 31.626 cv
291.366 31.626 li
288.393 31.626 285.983 29.2158 285.983 26.2427 cv
285.983 6.729 li
285.983 3.75586 288.393 1.3457 291.366 1.3457 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
291.366 1.3457 mo
353.272 1.3457 li
356.246 1.3457 358.656 3.75586 358.656 6.729 cv
358.656 26.2427 li
358.656 29.2158 356.246 31.626 353.272 31.626 cv
291.366 31.626 li
288.393 31.626 285.983 29.2158 285.983 26.2427 cv
285.983 6.729 li
285.983 3.75586 288.393 1.3457 291.366 1.3457 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
312.079 11.0894 mo
311.985 10.2817 311.338 9.50781 310.094 9.50781 cv
308.687 9.50781 307.839 10.5376 307.839 12.0244 cv
307.839 13.8818 308.917 14.5952 310.013 14.5952 cv
310.376 14.5952 311.857 14.5142 312.125 12.6909 cv
311.494 12.6909 li
311.271 13.8145 310.538 14.0161 310.114 14.0161 cv
308.917 14.0161 308.512 13.1416 308.512 12.0044 cv
308.512 10.7324 309.219 10.0864 310.094 10.0864 cv
310.558 10.0864 311.264 10.2412 311.447 11.0894 cv
312.079 11.0894 li
cp
f
315.706 12.0718 mo
315.706 11.0688 315.019 10.8472 314.474 10.8472 cv
313.909 10.8472 313.613 11.1968 313.445 11.4189 cv
313.431 11.4189 li
313.431 9.63574 li
312.839 9.63574 li
312.839 14.4673 li
313.431 14.4673 li
313.431 12.5493 li
313.431 11.6611 313.929 11.3784 314.414 11.3784 cv
314.979 11.3784 315.114 11.688 315.114 12.166 cv
315.114 14.4673 li
315.706 14.4673 li
315.706 12.0718 li
cp
f
317.105 12.0176 mo
317.146 11.7485 317.24 11.3384 317.913 11.3384 cv
318.471 11.3384 318.741 11.54 318.741 11.9102 cv
318.741 12.2603 318.573 12.314 318.431 12.3271 cv
317.456 12.4482 li
316.473 12.5698 316.385 13.2559 316.385 13.5522 cv
316.385 14.1577 316.843 14.5679 317.489 14.5679 cv
318.175 14.5679 318.532 14.2451 318.761 13.9961 cv
318.781 14.2651 318.862 14.5347 319.386 14.5347 cv
319.521 14.5347 319.609 14.4941 319.709 14.4673 cv
319.709 14.0366 li
319.642 14.0498 319.568 14.0635 319.514 14.0635 cv
319.393 14.0635 319.319 14.0029 319.319 13.855 cv
319.319 11.8296 li
319.319 10.9277 318.296 10.8472 318.014 10.8472 cv
317.146 10.8472 316.587 11.1768 316.56 12.0176 cv
317.105 12.0176 li
cp
318.727 13.249 mo
318.727 13.7202 318.189 14.0767 317.637 14.0767 cv
317.193 14.0767 316.998 13.8481 316.998 13.4644 cv
316.998 13.0205 317.462 12.9331 317.751 12.8926 cv
318.485 12.7983 318.633 12.7446 318.727 12.6704 cv
318.727 13.249 li
cp
f
320.84 12.8726 mo
320.84 12.3003 320.934 11.3784 321.789 11.3784 cv
322.704 11.3784 322.751 12.2466 322.751 12.6973 cv
322.751 13.4712 322.448 14.0566 321.802 14.0566 cv
321.425 14.0566 320.84 13.8076 320.84 12.8726 cv
cp
320.275 15.8599 mo
320.867 15.8599 li
320.867 14.0972 li
320.88 14.0972 li
321.036 14.3462 321.344 14.5679 321.816 14.5679 cv
323.013 14.5679 323.364 13.4443 323.364 12.603 cv
323.364 11.6143 322.832 10.8472 321.897 10.8472 cv
321.257 10.8472 320.988 11.2441 320.847 11.4458 cv
320.833 11.4458 li
320.833 10.9478 li
320.275 10.9478 li
320.275 15.8599 li
cp
f
325.355 11.439 mo
325.355 10.9478 li
324.79 10.9478 li
324.79 9.96533 li
324.198 9.96533 li
324.198 10.9478 li
323.72 10.9478 li
323.72 11.439 li
324.198 11.439 li
324.198 13.7607 li
324.198 14.1846 324.326 14.5142 324.911 14.5142 cv
324.971 14.5142 325.14 14.4873 325.355 14.4673 cv
325.355 14.0029 li
325.147 14.0029 li
325.026 14.0029 324.79 14.0029 324.79 13.7271 cv
324.79 11.439 li
325.355 11.439 li
cp
f
328.33 13.3638 mo
328.309 13.626 327.979 14.0566 327.421 14.0566 cv
326.742 14.0566 326.398 13.6328 326.398 12.8994 cv
328.968 12.8994 li
328.968 11.6543 328.471 10.8472 327.455 10.8472 cv
326.291 10.8472 325.766 11.7148 325.766 12.8052 cv
325.766 13.8213 326.351 14.5679 327.34 14.5679 cv
327.906 14.5679 328.134 14.4336 328.295 14.3257 cv
328.74 14.0298 328.901 13.5317 328.921 13.3638 cv
328.33 13.3638 li
cp
326.398 12.4282 mo
326.398 11.8833 326.829 11.3784 327.374 11.3784 cv
328.094 11.3784 328.323 11.8833 328.356 12.4282 cv
326.398 12.4282 li
cp
f
330.348 12.4214 mo
330.348 11.9102 330.698 11.4795 331.25 11.4795 cv
331.472 11.4795 li
331.472 10.8672 li
331.424 10.8535 331.391 10.8472 331.317 10.8472 cv
330.873 10.8472 330.563 11.1226 330.328 11.5332 cv
330.315 11.5332 li
330.315 10.9478 li
329.756 10.9478 li
329.756 14.4673 li
330.348 14.4673 li
330.348 12.4214 li
cp
f
336.869 13.3164 mo
336.869 12.8052 li
336.175 12.8052 li
336.175 9.73682 li
335.684 9.73682 li
333.517 12.7378 li
333.517 13.3164 li
335.583 13.3164 li
335.583 14.4673 li
336.175 14.4673 li
336.175 13.3164 li
336.869 13.3164 li
cp
335.57 10.6587 mo
335.583 10.6587 li
335.583 12.8052 li
334.063 12.8052 li
335.57 10.6587 li
cp
f
292.694 20.7842 mo
294.502 20.7842 li
294.502 21.4063 294.374 21.9229 293.865 22.3267 cv
293.437 22.6655 292.968 22.6982 292.677 22.6982 cv
291.135 22.6982 290.748 21.4868 290.748 20.3081 cv
290.748 18.79 291.604 17.958 292.645 17.958 cv
293.284 17.958 294.131 18.168 294.381 19.1772 cv
295.14 19.1772 li
294.971 17.8774 293.768 17.2637 292.686 17.2637 cv
290.796 17.2637 289.94 18.8545 289.94 20.2676 cv
289.94 20.8813 289.964 21.8745 290.853 22.7144 cv
291.152 23.0049 291.636 23.3682 292.629 23.3682 cv
293.42 23.3682 294.147 23.0132 294.542 22.4639 cv
294.729 23.2148 li
295.237 23.2148 li
295.237 20.1143 li
292.694 20.1143 li
292.694 20.7842 li
cp
f
297.167 20.7603 mo
297.167 20.1465 297.587 19.6294 298.25 19.6294 cv
298.516 19.6294 li
298.516 18.895 li
298.459 18.8784 298.418 18.8706 298.33 18.8706 cv
297.797 18.8706 297.425 19.2017 297.143 19.6943 cv
297.126 19.6943 li
297.126 18.9917 li
296.457 18.9917 li
296.457 23.2148 li
297.167 23.2148 li
297.167 20.7603 li
cp
f
298.806 21.0991 mo
298.806 22.1895 299.42 23.3276 300.768 23.3276 cv
302.117 23.3276 302.731 22.1895 302.731 21.0991 cv
302.731 20.0093 302.117 18.8706 300.768 18.8706 cv
299.42 18.8706 298.806 20.0093 298.806 21.0991 cv
cp
299.542 21.0991 mo
299.542 20.5342 299.751 19.4844 300.768 19.4844 cv
301.786 19.4844 301.996 20.5342 301.996 21.0991 cv
301.996 21.6646 301.786 22.7144 300.768 22.7144 cv
299.751 22.7144 299.542 21.6646 299.542 21.0991 cv
cp
f
305.904 19.9448 mo
305.92 19.9448 li
306.776 23.2148 li
307.511 23.2148 li
308.739 18.9917 li
308.028 18.9917 li
307.171 22.3105 li
307.156 22.3105 li
306.333 18.9917 li
305.541 18.9917 li
304.725 22.3105 li
304.709 22.3105 li
303.902 18.9917 li
303.126 18.9917 li
304.346 23.2148 li
305.081 23.2148 li
305.904 19.9448 li
cp
f
310.918 19.5811 mo
310.918 18.9917 li
310.241 18.9917 li
310.241 17.813 li
309.53 17.813 li
309.53 18.9917 li
308.957 18.9917 li
308.957 19.5811 li
309.53 19.5811 li
309.53 22.3672 li
309.53 22.8755 309.683 23.2715 310.385 23.2715 cv
310.458 23.2715 310.661 23.2393 310.918 23.2148 cv
310.918 22.6577 li
310.668 22.6577 li
310.523 22.6577 310.241 22.6577 310.241 22.3267 cv
310.241 19.5811 li
310.918 19.5811 li
cp
f
315.053 20.3403 mo
315.053 19.1372 314.229 18.8706 313.575 18.8706 cv
312.897 18.8706 312.542 19.2905 312.339 19.5571 cv
312.324 19.5571 li
312.324 17.417 li
311.613 17.417 li
311.613 23.2148 li
312.324 23.2148 li
312.324 20.9136 li
312.324 19.8477 312.921 19.5083 313.502 19.5083 cv
314.181 19.5083 314.342 19.8799 314.342 20.4531 cv
314.342 23.2148 li
315.053 23.2148 li
315.053 20.3403 li
cp
f
318.977 20.2759 mo
319.026 19.9526 319.139 19.46 319.946 19.46 cv
320.617 19.46 320.939 19.7021 320.939 20.1465 cv
320.939 20.5664 320.738 20.6309 320.568 20.647 cv
319.397 20.7925 li
318.218 20.938 318.113 21.7612 318.113 22.1167 cv
318.113 22.8433 318.663 23.3359 319.438 23.3359 cv
320.261 23.3359 320.689 22.9482 320.963 22.6494 cv
320.988 22.9727 321.084 23.2954 321.714 23.2954 cv
321.876 23.2954 321.981 23.2471 322.102 23.2148 cv
322.102 22.6982 li
322.021 22.7144 321.932 22.7305 321.868 22.7305 cv
321.723 22.7305 321.634 22.6577 321.634 22.48 cv
321.634 20.0493 li
321.634 18.9673 320.407 18.8706 320.067 18.8706 cv
319.026 18.8706 318.356 19.2661 318.323 20.2759 cv
318.977 20.2759 li
cp
320.923 21.7534 mo
320.923 22.3184 320.277 22.7466 319.615 22.7466 cv
319.083 22.7466 318.848 22.4722 318.848 22.0117 cv
318.848 21.479 319.405 21.3735 319.752 21.3252 cv
320.632 21.2124 320.81 21.1479 320.923 21.0591 cv
320.923 21.7534 li
cp
f
326.277 20.3403 mo
326.277 19.1372 325.454 18.8706 324.799 18.8706 cv
324.073 18.8706 323.676 19.3633 323.523 19.5894 cv
323.507 19.5894 li
323.507 18.9917 li
322.837 18.9917 li
322.837 23.2148 li
323.547 23.2148 li
323.547 20.9136 li
323.547 19.7671 324.258 19.5083 324.662 19.5083 cv
325.356 19.5083 325.566 19.8799 325.566 20.6147 cv
325.566 23.2148 li
326.277 23.2148 li
326.277 20.3403 li
cp
f
330.831 17.417 mo
330.121 17.417 li
330.121 19.5327 li
330.104 19.5894 li
329.935 19.3472 329.612 18.8706 328.844 18.8706 cv
327.722 18.8706 327.084 19.791 327.084 20.978 cv
327.084 21.9873 327.504 23.3359 328.942 23.3359 cv
329.353 23.3359 329.837 23.2065 330.145 22.6333 cv
330.161 22.6333 li
330.161 23.2148 li
330.831 23.2148 li
330.831 17.417 li
cp
327.819 21.0913 mo
327.819 20.5503 327.875 19.5083 328.974 19.5083 cv
330 19.5083 330.113 20.6147 330.113 21.3013 cv
330.113 22.4233 329.41 22.7222 328.958 22.7222 cv
328.182 22.7222 327.819 22.02 327.819 21.0913 cv
cp
f
337.565 17.417 mo
336.855 17.417 li
336.855 19.5327 li
336.838 19.5894 li
336.669 19.3472 336.346 18.8706 335.579 18.8706 cv
334.457 18.8706 333.819 19.791 333.819 20.978 cv
333.819 21.9873 334.239 23.3359 335.676 23.3359 cv
336.087 23.3359 336.572 23.2065 336.879 22.6333 cv
336.895 22.6333 li
336.895 23.2148 li
337.565 23.2148 li
337.565 17.417 li
cp
334.553 21.0913 mo
334.553 20.5503 334.61 19.5083 335.708 19.5083 cv
336.734 19.5083 336.847 20.6147 336.847 21.3013 cv
336.847 22.4233 336.144 22.7222 335.692 22.7222 cv
334.917 22.7222 334.553 22.02 334.553 21.0913 cv
cp
f
341.425 21.8906 mo
341.401 22.2056 341.005 22.7222 340.335 22.7222 cv
339.52 22.7222 339.108 22.2134 339.108 21.3335 cv
342.192 21.3335 li
342.192 19.8394 341.594 18.8706 340.375 18.8706 cv
338.978 18.8706 338.349 19.9121 338.349 21.2202 cv
338.349 22.4399 339.051 23.3359 340.238 23.3359 cv
340.917 23.3359 341.191 23.1743 341.385 23.0454 cv
341.917 22.6899 342.112 22.0923 342.136 21.8906 cv
341.425 21.8906 li
cp
339.108 20.7681 mo
339.108 20.1143 339.625 19.5083 340.279 19.5083 cv
341.142 19.5083 341.417 20.1143 341.458 20.7681 cv
339.108 20.7681 li
cp
f
346.367 20.4131 mo
346.31 19.6782 345.89 18.8706 344.785 18.8706 cv
343.387 18.8706 342.757 19.9121 342.757 21.2202 cv
342.757 22.4399 343.46 23.3359 344.647 23.3359 cv
345.882 23.3359 346.294 22.3911 346.367 21.7212 cv
345.68 21.7212 li
345.559 22.3672 345.148 22.7222 344.671 22.7222 cv
343.694 22.7222 343.516 21.8262 343.516 21.0991 cv
343.516 20.3481 343.799 19.5083 344.679 19.5083 cv
345.277 19.5083 345.591 19.8477 345.68 20.4131 cv
346.367 20.4131 li
cp
f
347.708 20.2759 mo
347.755 19.9526 347.869 19.46 348.676 19.46 cv
349.346 19.46 349.669 19.7021 349.669 20.1465 cv
349.669 20.5664 349.467 20.6309 349.298 20.647 cv
348.127 20.7925 li
346.949 20.938 346.843 21.7612 346.843 22.1167 cv
346.843 22.8433 347.392 23.3359 348.167 23.3359 cv
348.992 23.3359 349.419 22.9482 349.694 22.6494 cv
349.718 22.9727 349.815 23.2954 350.445 23.2954 cv
350.606 23.2954 350.711 23.2471 350.833 23.2148 cv
350.833 22.6982 li
350.751 22.7144 350.663 22.7305 350.598 22.7305 cv
350.453 22.7305 350.364 22.6577 350.364 22.48 cv
350.364 20.0493 li
350.364 18.9673 349.136 18.8706 348.797 18.8706 cv
347.755 18.8706 347.085 19.2661 347.053 20.2759 cv
347.708 20.2759 li
cp
349.654 21.7534 mo
349.654 22.3184 349.007 22.7466 348.345 22.7466 cv
347.812 22.7466 347.579 22.4722 347.579 22.0117 cv
347.579 21.479 348.135 21.3735 348.483 21.3252 cv
349.363 21.2124 349.541 21.1479 349.654 21.0591 cv
349.654 21.7534 li
cp
f
353.077 22.4316 mo
353.061 22.4316 li
351.939 18.9917 li
351.131 18.9917 li
352.698 23.3276 li
352.359 24.1997 352.318 24.3052 351.947 24.3052 cv
351.752 24.3052 351.608 24.2646 351.519 24.2324 cv
351.519 24.8784 li
351.631 24.9106 351.712 24.9429 351.818 24.9429 cv
352.73 24.9429 352.802 24.8462 353.473 23.1343 cv
354.014 21.7534 354.499 20.3726 354.991 18.9917 cv
354.208 18.9917 li
353.077 22.4316 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
291.366 55.8506 mo
353.272 55.8506 li
356.246 55.8506 358.656 58.2607 358.656 61.2339 cv
358.656 80.7476 li
358.656 83.7207 356.246 86.1309 353.272 86.1309 cv
291.366 86.1309 li
288.393 86.1309 285.983 83.7207 285.983 80.7476 cv
285.983 61.2339 li
285.983 58.2607 288.393 55.8506 291.366 55.8506 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
291.366 55.8506 mo
353.272 55.8506 li
356.246 55.8506 358.656 58.2607 358.656 61.2339 cv
358.656 80.7476 li
358.656 83.7207 356.246 86.1309 353.272 86.1309 cv
291.366 86.1309 li
288.393 86.1309 285.983 83.7207 285.983 80.7476 cv
285.983 61.2339 li
285.983 58.2607 288.393 55.8506 291.366 55.8506 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
312.079 65.5942 mo
311.985 64.7866 311.338 64.0127 310.094 64.0127 cv
308.687 64.0127 307.839 65.0425 307.839 66.5293 cv
307.839 68.3867 308.917 69.1001 310.013 69.1001 cv
310.376 69.1001 311.857 69.019 312.125 67.1958 cv
311.494 67.1958 li
311.271 68.3193 310.538 68.521 310.114 68.521 cv
308.917 68.521 308.512 67.6465 308.512 66.5093 cv
308.512 65.2373 309.219 64.5913 310.094 64.5913 cv
310.558 64.5913 311.264 64.7461 311.447 65.5942 cv
312.079 65.5942 li
cp
f
315.706 66.5767 mo
315.706 65.5737 315.019 65.3521 314.474 65.3521 cv
313.909 65.3521 313.613 65.7017 313.445 65.9238 cv
313.431 65.9238 li
313.431 64.1406 li
312.839 64.1406 li
312.839 68.9722 li
313.431 68.9722 li
313.431 67.0542 li
313.431 66.166 313.929 65.8833 314.414 65.8833 cv
314.979 65.8833 315.114 66.1929 315.114 66.6709 cv
315.114 68.9722 li
315.706 68.9722 li
315.706 66.5767 li
cp
f
317.105 66.5229 mo
317.146 66.2534 317.24 65.8433 317.913 65.8433 cv
318.471 65.8433 318.741 66.0449 318.741 66.415 cv
318.741 66.7651 318.573 66.8188 318.431 66.832 cv
317.456 66.9536 li
316.473 67.0747 316.385 67.7607 316.385 68.0571 cv
316.385 68.6626 316.843 69.0728 317.489 69.0728 cv
318.175 69.0728 318.532 68.75 318.761 68.501 cv
318.781 68.77 318.862 69.0396 319.386 69.0396 cv
319.521 69.0396 319.609 68.999 319.709 68.9722 cv
319.709 68.5415 li
319.642 68.5547 319.568 68.5684 319.514 68.5684 cv
319.393 68.5684 319.319 68.5078 319.319 68.3599 cv
319.319 66.3345 li
319.319 65.4326 318.296 65.3521 318.014 65.3521 cv
317.146 65.3521 316.587 65.6816 316.56 66.5229 cv
317.105 66.5229 li
cp
318.727 67.7539 mo
318.727 68.2251 318.189 68.5815 317.637 68.5815 cv
317.193 68.5815 316.998 68.353 316.998 67.9692 cv
316.998 67.5254 317.462 67.438 317.751 67.3975 cv
318.485 67.3032 318.633 67.2495 318.727 67.1753 cv
318.727 67.7539 li
cp
f
320.84 67.3774 mo
320.84 66.8052 320.934 65.8833 321.789 65.8833 cv
322.704 65.8833 322.751 66.7515 322.751 67.2021 cv
322.751 67.9761 322.448 68.5615 321.802 68.5615 cv
321.425 68.5615 320.84 68.3125 320.84 67.3774 cv
cp
320.275 70.3647 mo
320.867 70.3647 li
320.867 68.6021 li
320.88 68.6021 li
321.036 68.8511 321.344 69.0728 321.816 69.0728 cv
323.013 69.0728 323.364 67.9492 323.364 67.1079 cv
323.364 66.1191 322.832 65.3521 321.897 65.3521 cv
321.257 65.3521 320.988 65.749 320.847 65.9507 cv
320.833 65.9507 li
320.833 65.4526 li
320.275 65.4526 li
320.275 70.3647 li
cp
f
325.355 65.9438 mo
325.355 65.4526 li
324.79 65.4526 li
324.79 64.4702 li
324.198 64.4702 li
324.198 65.4526 li
323.72 65.4526 li
323.72 65.9438 li
324.198 65.9438 li
324.198 68.2656 li
324.198 68.6895 324.326 69.019 324.911 69.019 cv
324.971 69.019 325.14 68.9922 325.355 68.9722 cv
325.355 68.5078 li
325.147 68.5078 li
325.026 68.5078 324.79 68.5078 324.79 68.2319 cv
324.79 65.9438 li
325.355 65.9438 li
cp
f
328.33 67.8687 mo
328.309 68.1309 327.979 68.5615 327.421 68.5615 cv
326.742 68.5615 326.398 68.1377 326.398 67.4043 cv
328.968 67.4043 li
328.968 66.1592 328.471 65.3521 327.455 65.3521 cv
326.291 65.3521 325.766 66.2197 325.766 67.3101 cv
325.766 68.3262 326.351 69.0728 327.34 69.0728 cv
327.906 69.0728 328.134 68.9385 328.295 68.8306 cv
328.74 68.5347 328.901 68.0366 328.921 67.8687 cv
328.33 67.8687 li
cp
326.398 66.9331 mo
326.398 66.3882 326.829 65.8833 327.374 65.8833 cv
328.094 65.8833 328.323 66.3882 328.356 66.9331 cv
326.398 66.9331 li
cp
f
330.348 66.9263 mo
330.348 66.415 330.698 65.9844 331.25 65.9844 cv
331.472 65.9844 li
331.472 65.3721 li
331.424 65.3584 331.391 65.3521 331.317 65.3521 cv
330.873 65.3521 330.563 65.6279 330.328 66.0381 cv
330.315 66.0381 li
330.315 65.4526 li
329.756 65.4526 li
329.756 68.9722 li
330.348 68.9722 li
330.348 66.9263 li
cp
f
334.541 64.9214 mo
336.545 64.9214 li
336.545 64.3423 li
334.096 64.3423 li
333.74 66.8794 li
334.25 66.9063 li
334.473 66.6167 334.783 66.4556 335.125 66.4556 cv
335.711 66.4556 336.175 66.8257 336.175 67.5054 cv
336.175 68.0972 335.792 68.5884 335.179 68.5884 cv
334.648 68.5884 334.238 68.3462 334.177 67.7944 cv
333.565 67.7944 li
333.679 68.8511 334.473 69.1001 335.092 69.1001 cv
336.573 69.1001 336.808 67.9629 336.808 67.438 cv
336.808 66.4624 336.021 65.9238 335.253 65.9238 cv
334.83 65.9238 334.541 66.0649 334.338 66.2197 cv
334.541 64.9214 li
cp
f
293.502 75.0874 mo
296.345 75.0874 li
296.345 74.3931 li
293.502 74.3931 li
293.502 72.6167 li
296.732 72.6167 li
296.732 71.9219 li
292.719 71.9219 li
292.719 77.7197 li
293.502 77.7197 li
293.502 75.0874 li
cp
f
297.241 75.604 mo
297.241 76.6943 297.855 77.8325 299.204 77.8325 cv
300.551 77.8325 301.166 76.6943 301.166 75.604 cv
301.166 74.5142 300.551 73.3755 299.204 73.3755 cv
297.855 73.3755 297.241 74.5142 297.241 75.604 cv
cp
297.976 75.604 mo
297.976 75.0391 298.186 73.9893 299.204 73.9893 cv
300.22 73.9893 300.43 75.0391 300.43 75.604 cv
300.43 76.1694 300.22 77.2192 299.204 77.2192 cv
298.186 77.2192 297.976 76.1694 297.976 75.604 cv
cp
f
302.781 75.2651 mo
302.781 74.6514 303.201 74.1343 303.863 74.1343 cv
304.128 74.1343 li
304.128 73.3999 li
304.073 73.3838 304.032 73.3755 303.943 73.3755 cv
303.411 73.3755 303.039 73.7065 302.756 74.1992 cv
302.74 74.1992 li
302.74 73.4966 li
302.07 73.4966 li
302.07 77.7197 li
302.781 77.7197 li
302.781 75.2651 li
cp
f
306.47 75.0713 mo
308.085 73.4966 li
307.181 73.4966 li
305.365 75.2813 li
305.365 71.9219 li
304.678 71.9219 li
304.678 77.7197 li
305.365 77.7197 li
305.365 76.1211 li
305.954 75.5879 li
307.27 77.7197 li
308.182 77.7197 li
306.47 75.0713 li
cp
f
311.784 74.6997 mo
311.784 74.4897 311.679 73.3755 310.168 73.3755 cv
309.337 73.3755 308.57 73.7954 308.57 74.7241 cv
308.57 75.3052 308.958 75.604 309.547 75.7495 cv
310.371 75.9512 li
310.976 76.105 311.21 76.2178 311.21 76.5571 cv
311.21 77.0254 310.75 77.2271 310.242 77.2271 cv
309.241 77.2271 309.143 76.6943 309.119 76.3633 cv
308.433 76.3633 li
308.457 76.8721 308.578 77.8408 310.25 77.8408 cv
311.203 77.8408 311.921 77.3159 311.921 76.4438 cv
311.921 75.8706 311.614 75.5474 310.734 75.3296 cv
310.024 75.1519 li
309.474 75.0146 309.256 74.9341 309.256 74.5869 cv
309.256 74.062 309.878 73.9893 310.096 73.9893 cv
310.993 73.9893 311.089 74.4331 311.097 74.6997 cv
311.784 74.6997 li
cp
f
315.708 73.4966 mo
314.998 73.4966 li
314.998 77.7197 li
315.708 77.7197 li
315.708 73.4966 li
cp
315.708 72.7295 mo
315.708 71.9219 li
314.998 71.9219 li
314.998 72.7295 li
315.708 72.7295 li
cp
f
320.213 74.8452 mo
320.213 73.6421 319.39 73.3755 318.736 73.3755 cv
318.009 73.3755 317.614 73.8682 317.46 74.0942 cv
317.444 74.0942 li
317.444 73.4966 li
316.774 73.4966 li
316.774 77.7197 li
317.485 77.7197 li
317.485 75.4185 li
317.485 74.272 318.195 74.0132 318.599 74.0132 cv
319.293 74.0132 319.503 74.3848 319.503 75.1196 cv
319.503 77.7197 li
320.213 77.7197 li
320.213 74.8452 li
cp
f
325.059 74.0859 mo
325.059 73.4966 li
324.38 73.4966 li
324.38 72.3179 li
323.669 72.3179 li
323.669 73.4966 li
323.096 73.4966 li
323.096 74.0859 li
323.669 74.0859 li
323.669 76.8721 li
323.669 77.3804 323.824 77.7764 324.526 77.7764 cv
324.598 77.7764 324.8 77.7441 325.059 77.7197 cv
325.059 77.1626 li
324.808 77.1626 li
324.663 77.1626 324.38 77.1626 324.38 76.8315 cv
324.38 74.0859 li
325.059 74.0859 li
cp
f
329.193 74.8452 mo
329.193 73.6421 328.37 73.3755 327.715 73.3755 cv
327.037 73.3755 326.682 73.7954 326.48 74.062 cv
326.463 74.062 li
326.463 71.9219 li
325.753 71.9219 li
325.753 77.7197 li
326.463 77.7197 li
326.463 75.4185 li
326.463 74.3525 327.061 74.0132 327.643 74.0132 cv
328.321 74.0132 328.483 74.3848 328.483 74.958 cv
328.483 77.7197 li
329.193 77.7197 li
329.193 74.8452 li
cp
f
333.118 76.3955 mo
333.093 76.7104 332.698 77.2271 332.027 77.2271 cv
331.211 77.2271 330.8 76.7183 330.8 75.8384 cv
333.884 75.8384 li
333.884 74.3442 333.287 73.3755 332.068 73.3755 cv
330.67 73.3755 330.041 74.417 330.041 75.7251 cv
330.041 76.9448 330.744 77.8408 331.93 77.8408 cv
332.609 77.8408 332.883 77.6792 333.077 77.5503 cv
333.61 77.1948 333.804 76.5972 333.828 76.3955 cv
333.118 76.3955 li
cp
330.8 75.2729 mo
330.8 74.6191 331.317 74.0132 331.971 74.0132 cv
332.834 74.0132 333.109 74.6191 333.15 75.2729 cv
330.8 75.2729 li
cp
f
337.785 75.2651 mo
337.785 74.6514 338.205 74.1343 338.867 74.1343 cv
339.133 74.1343 li
339.133 73.3999 li
339.077 73.3838 339.037 73.3755 338.948 73.3755 cv
338.415 73.3755 338.043 73.7065 337.76 74.1992 cv
337.745 74.1992 li
337.745 73.4966 li
337.074 73.4966 li
337.074 77.7197 li
337.785 77.7197 li
337.785 75.2651 li
cp
f
339.424 75.604 mo
339.424 76.6943 340.038 77.8325 341.386 77.8325 cv
342.735 77.8325 343.348 76.6943 343.348 75.604 cv
343.348 74.5142 342.735 73.3755 341.386 73.3755 cv
340.038 73.3755 339.424 74.5142 339.424 75.604 cv
cp
340.159 75.604 mo
340.159 75.0391 340.369 73.9893 341.386 73.9893 cv
342.404 73.9893 342.614 75.0391 342.614 75.604 cv
342.614 76.1694 342.404 77.2192 341.386 77.2192 cv
340.369 77.2192 340.159 76.1694 340.159 75.604 cv
cp
f
344.786 74.7808 mo
344.833 74.4575 344.947 73.9648 345.754 73.9648 cv
346.424 73.9648 346.748 74.207 346.748 74.6514 cv
346.748 75.0713 346.545 75.1357 346.376 75.1519 cv
345.206 75.2974 li
344.027 75.4429 343.921 76.2661 343.921 76.6216 cv
343.921 77.3481 344.47 77.8408 345.246 77.8408 cv
346.07 77.8408 346.498 77.4531 346.772 77.1548 cv
346.796 77.4775 346.893 77.8003 347.523 77.8003 cv
347.684 77.8003 347.79 77.752 347.911 77.7197 cv
347.911 77.2031 li
347.83 77.2192 347.741 77.2354 347.676 77.2354 cv
347.531 77.2354 347.442 77.1626 347.442 76.9849 cv
347.442 74.5542 li
347.442 73.4722 346.214 73.3755 345.875 73.3755 cv
344.833 73.3755 344.164 73.771 344.131 74.7808 cv
344.786 74.7808 li
cp
346.732 76.2583 mo
346.732 76.8232 346.085 77.2515 345.423 77.2515 cv
344.89 77.2515 344.657 76.9771 344.657 76.5166 cv
344.657 75.9839 345.213 75.8789 345.561 75.8301 cv
346.441 75.7173 346.619 75.6528 346.732 75.564 cv
346.732 76.2583 li
cp
f
352.15 71.9219 mo
351.439 71.9219 li
351.439 74.0376 li
351.423 74.0942 li
351.253 73.8521 350.93 73.3755 350.164 73.3755 cv
349.041 73.3755 348.403 74.2959 348.403 75.4829 cv
348.403 76.4922 348.823 77.8408 350.26 77.8408 cv
350.672 77.8408 351.157 77.7114 351.463 77.1382 cv
351.48 77.1382 li
351.48 77.7197 li
352.15 77.7197 li
352.15 71.9219 li
cp
349.138 75.5962 mo
349.138 75.0552 349.194 74.0132 350.292 74.0132 cv
351.318 74.0132 351.431 75.1196 351.431 75.8062 cv
351.431 76.9282 350.729 77.2271 350.276 77.2271 cv
349.501 77.2271 349.138 76.5249 349.138 75.5962 cv
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
200.524 55.8506 mo
262.431 55.8506 li
265.404 55.8506 267.814 58.2607 267.814 61.2339 cv
267.814 80.7476 li
267.814 83.7207 265.404 86.1309 262.431 86.1309 cv
200.524 86.1309 li
197.551 86.1309 195.141 83.7207 195.141 80.7476 cv
195.141 61.2339 li
195.141 58.2607 197.551 55.8506 200.524 55.8506 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
200.524 55.8506 mo
262.431 55.8506 li
265.404 55.8506 267.814 58.2607 267.814 61.2339 cv
267.814 80.7476 li
267.814 83.7207 265.404 86.1309 262.431 86.1309 cv
200.524 86.1309 li
197.551 86.1309 195.141 83.7207 195.141 80.7476 cv
195.141 61.2339 li
195.141 58.2607 197.551 55.8506 200.524 55.8506 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
221.238 60.8838 mo
221.143 60.0762 220.498 59.3022 219.252 59.3022 cv
217.846 59.3022 216.999 60.332 216.999 61.8188 cv
216.999 63.6763 218.075 64.3896 219.171 64.3896 cv
219.535 64.3896 221.015 64.3091 221.285 62.4854 cv
220.652 62.4854 li
220.43 63.6089 219.697 63.811 219.273 63.811 cv
218.075 63.811 217.671 62.936 217.671 61.7988 cv
217.671 60.5273 218.377 59.8813 219.252 59.8813 cv
219.716 59.8813 220.423 60.0361 220.605 60.8838 cv
221.238 60.8838 li
cp
f
224.865 61.8662 mo
224.865 60.8638 224.178 60.6416 223.633 60.6416 cv
223.068 60.6416 222.772 60.9917 222.603 61.2134 cv
222.59 61.2134 li
222.59 59.4302 li
221.998 59.4302 li
221.998 64.2617 li
222.59 64.2617 li
222.59 62.3442 li
222.59 61.4556 223.087 61.1733 223.573 61.1733 cv
224.137 61.1733 224.272 61.4829 224.272 61.9604 cv
224.272 64.2617 li
224.865 64.2617 li
224.865 61.8662 li
cp
f
226.264 61.8125 mo
226.304 61.5435 226.399 61.1328 227.072 61.1328 cv
227.63 61.1328 227.899 61.3345 227.899 61.7046 cv
227.899 62.0547 227.731 62.1084 227.589 62.1221 cv
226.614 62.2432 li
225.631 62.3643 225.543 63.0503 225.543 63.3467 cv
225.543 63.9521 226.001 64.3628 226.647 64.3628 cv
227.333 64.3628 227.691 64.0396 227.919 63.7905 cv
227.94 64.0601 228.02 64.3291 228.545 64.3291 cv
228.679 64.3291 228.767 64.2886 228.868 64.2617 cv
228.868 63.8311 li
228.8 63.8447 228.727 63.8579 228.673 63.8579 cv
228.552 63.8579 228.478 63.7974 228.478 63.6494 cv
228.478 61.624 li
228.478 60.7222 227.455 60.6416 227.172 60.6416 cv
226.304 60.6416 225.746 60.9712 225.719 61.8125 cv
226.264 61.8125 li
cp
227.885 63.0439 mo
227.885 63.5146 227.347 63.8716 226.795 63.8716 cv
226.351 63.8716 226.157 63.6426 226.157 63.2593 cv
226.157 62.8149 226.621 62.7275 226.91 62.687 cv
227.643 62.5928 227.792 62.5391 227.885 62.4653 cv
227.885 63.0439 li
cp
f
229.999 62.667 mo
229.999 62.0952 230.092 61.1733 230.948 61.1733 cv
231.863 61.1733 231.91 62.041 231.91 62.4922 cv
231.91 63.2661 231.607 63.8511 230.96 63.8511 cv
230.583 63.8511 229.999 63.6021 229.999 62.667 cv
cp
229.433 65.6548 mo
230.026 65.6548 li
230.026 63.8916 li
230.039 63.8916 li
230.194 64.1406 230.503 64.3628 230.974 64.3628 cv
232.172 64.3628 232.522 63.2388 232.522 62.3979 cv
232.522 61.4087 231.991 60.6416 231.055 60.6416 cv
230.416 60.6416 230.147 61.0386 230.005 61.2402 cv
229.992 61.2402 li
229.992 60.7427 li
229.433 60.7427 li
229.433 65.6548 li
cp
f
234.514 61.2339 mo
234.514 60.7427 li
233.949 60.7427 li
233.949 59.7603 li
233.356 59.7603 li
233.356 60.7427 li
232.878 60.7427 li
232.878 61.2339 li
233.356 61.2339 li
233.356 63.5552 li
233.356 63.979 233.484 64.3091 234.07 64.3091 cv
234.13 64.3091 234.298 64.2817 234.514 64.2617 cv
234.514 63.7974 li
234.305 63.7974 li
234.184 63.7974 233.949 63.7974 233.949 63.5215 cv
233.949 61.2339 li
234.514 61.2339 li
cp
f
237.488 63.1582 mo
237.467 63.4204 237.138 63.8511 236.58 63.8511 cv
235.9 63.8511 235.557 63.4272 235.557 62.6938 cv
238.127 62.6938 li
238.127 61.4492 237.629 60.6416 236.613 60.6416 cv
235.449 60.6416 234.924 61.5098 234.924 62.5996 cv
234.924 63.6157 235.509 64.3628 236.499 64.3628 cv
237.064 64.3628 237.292 64.228 237.455 64.1206 cv
237.898 63.8242 238.06 63.3267 238.08 63.1582 cv
237.488 63.1582 li
cp
235.557 62.2231 mo
235.557 61.6777 235.987 61.1733 236.533 61.1733 cv
237.252 61.1733 237.481 61.6777 237.515 62.2231 cv
235.557 62.2231 li
cp
f
239.506 62.2163 mo
239.506 61.7046 239.857 61.2739 240.409 61.2739 cv
240.63 61.2739 li
240.63 60.6616 li
240.583 60.6484 240.549 60.6416 240.475 60.6416 cv
240.032 60.6416 239.722 60.9175 239.487 61.3276 cv
239.473 61.3276 li
239.473 60.7427 li
238.915 60.7427 li
238.915 64.2617 li
239.506 64.2617 li
239.506 62.2163 li
cp
f
245.892 60.7896 mo
245.832 59.8271 245.058 59.5313 244.513 59.5313 cv
243.1 59.5313 242.763 61.0249 242.763 62.0615 cv
242.763 62.6802 242.844 63.2593 243.126 63.7031 cv
243.463 64.228 243.981 64.3896 244.344 64.3896 cv
245.011 64.3896 245.293 64.208 245.542 63.9321 cv
245.866 63.582 245.994 63.2319 245.994 62.7476 cv
245.994 61.6172 245.091 61.2471 244.513 61.2471 cv
243.867 61.2471 243.538 61.5703 243.389 61.8257 cv
243.375 61.8125 li
243.375 61.3145 243.571 60.063 244.5 60.063 cv
245.011 60.063 245.24 60.3726 245.314 60.7896 cv
245.892 60.7896 li
cp
243.457 62.8081 mo
243.457 62.2495 243.773 61.7788 244.425 61.7788 cv
245.159 61.7788 245.381 62.3574 245.381 62.7749 cv
245.381 63.4141 245.018 63.8579 244.453 63.8579 cv
243.759 63.8579 243.457 63.313 243.457 62.8081 cv
cp
f
201.072 67.9063 mo
203.034 67.9063 li
203.034 73.0093 li
203.817 73.0093 li
203.817 67.9063 li
205.779 67.9063 li
205.779 67.2119 li
201.072 67.2119 li
201.072 67.9063 li
cp
f
208.404 71.6851 mo
208.379 72 207.984 72.5171 207.313 72.5171 cv
206.498 72.5171 206.086 72.0083 206.086 71.1279 cv
209.17 71.1279 li
209.17 69.6343 208.573 68.665 207.354 68.665 cv
205.957 68.665 205.327 69.707 205.327 71.0151 cv
205.327 72.2344 206.03 73.1304 207.216 73.1304 cv
207.895 73.1304 208.169 72.9692 208.363 72.8398 cv
208.896 72.4849 209.089 71.8872 209.114 71.6851 cv
208.404 71.6851 li
cp
206.086 70.563 mo
206.086 69.9087 206.603 69.3032 207.256 69.3032 cv
208.121 69.3032 208.395 69.9087 208.436 70.563 cv
206.086 70.563 li
cp
f
211.964 70.8374 mo
213.394 68.7861 li
212.522 68.7861 li
211.544 70.272 li
210.568 68.7861 li
209.655 68.7861 li
211.068 70.8374 li
209.583 73.0093 li
210.479 73.0093 li
211.497 71.4185 li
212.545 73.0093 li
213.451 73.0093 li
211.964 70.8374 li
cp
f
215.606 69.376 mo
215.606 68.7861 li
214.928 68.7861 li
214.928 67.6074 li
214.217 67.6074 li
214.217 68.7861 li
213.644 68.7861 li
213.644 69.376 li
214.217 69.376 li
214.217 72.1616 li
214.217 72.6704 214.371 73.0659 215.073 73.0659 cv
215.146 73.0659 215.348 73.0337 215.606 73.0093 cv
215.606 72.4521 li
215.356 72.4521 li
215.21 72.4521 214.928 72.4521 214.928 72.1211 cv
214.928 69.376 li
215.606 69.376 li
cp
f
216.478 73.0093 mo
216.906 73.0093 li
216.906 73.3892 216.818 73.7925 216.478 73.8252 cv
216.478 74.1963 li
216.64 74.1724 217.318 74.043 217.318 72.9448 cv
217.318 72.1533 li
216.478 72.1533 li
216.478 73.0093 li
cp
f
224.294 67.2119 mo
223.584 67.2119 li
223.584 69.3271 li
223.568 69.3838 li
223.398 69.1416 223.076 68.665 222.308 68.665 cv
221.186 68.665 220.548 69.5859 220.548 70.7729 cv
220.548 71.7822 220.968 73.1304 222.405 73.1304 cv
222.817 73.1304 223.301 73.0015 223.608 72.4282 cv
223.625 72.4282 li
223.625 73.0093 li
224.294 73.0093 li
224.294 67.2119 li
cp
221.283 70.8857 mo
221.283 70.3447 221.339 69.3032 222.437 69.3032 cv
223.463 69.3032 223.576 70.4092 223.576 71.0957 cv
223.576 72.2183 222.874 72.5171 222.421 72.5171 cv
221.646 72.5171 221.283 71.8145 221.283 70.8857 cv
cp
f
225.038 70.894 mo
225.038 71.9839 225.651 73.1226 227 73.1226 cv
228.348 73.1226 228.961 71.9839 228.961 70.894 cv
228.961 69.8037 228.348 68.665 227 68.665 cv
225.651 68.665 225.038 69.8037 225.038 70.894 cv
cp
225.772 70.894 mo
225.772 70.3286 225.982 69.2788 227 69.2788 cv
228.017 69.2788 228.227 70.3286 228.227 70.894 cv
228.227 71.459 228.017 72.5088 227 72.5088 cv
225.982 72.5088 225.772 71.459 225.772 70.894 cv
cp
f
233.096 70.2075 mo
233.04 69.4727 232.62 68.665 231.513 68.665 cv
230.117 68.665 229.487 69.707 229.487 71.0151 cv
229.487 72.2344 230.189 73.1304 231.376 73.1304 cv
232.612 73.1304 233.024 72.186 233.096 71.5156 cv
232.41 71.5156 li
232.289 72.1616 231.876 72.5171 231.401 72.5171 cv
230.423 72.5171 230.246 71.6206 230.246 70.894 cv
230.246 70.1431 230.529 69.3032 231.409 69.3032 cv
232.006 69.3032 232.321 69.6421 232.41 70.2075 cv
233.096 70.2075 li
cp
f
237.231 73.0093 mo
237.231 68.7861 li
236.52 68.7861 li
236.52 71.1118 li
236.52 71.7256 236.253 72.5171 235.357 72.5171 cv
234.897 72.5171 234.542 72.2827 234.542 71.5884 cv
234.542 68.7861 li
233.831 68.7861 li
233.831 71.8223 li
233.831 72.8315 234.582 73.1304 235.204 73.1304 cv
235.882 73.1304 236.246 72.8721 236.544 72.3794 cv
236.56 72.396 li
236.56 73.0093 li
237.231 73.0093 li
cp
f
238.296 73.0093 mo
239.007 73.0093 li
239.007 70.708 li
239.007 69.5615 239.717 69.3032 240.122 69.3032 cv
240.646 69.3032 240.784 69.731 240.784 70.0864 cv
240.784 73.0093 li
241.494 73.0093 li
241.494 70.4336 li
241.494 69.8682 241.89 69.3032 242.487 69.3032 cv
243.093 69.3032 243.27 69.6987 243.27 70.2803 cv
243.27 73.0093 li
243.981 73.0093 li
243.981 70.0864 li
243.981 68.8994 243.125 68.665 242.673 68.665 cv
242.019 68.665 241.736 68.9561 241.381 69.3516 cv
241.26 69.1255 241.018 68.665 240.258 68.665 cv
239.5 68.665 239.136 69.1577 238.983 69.3838 cv
238.966 69.3838 li
238.966 68.7861 li
238.296 68.7861 li
238.296 73.0093 li
cp
f
247.897 71.6851 mo
247.874 72 247.477 72.5171 246.807 72.5171 cv
245.992 72.5171 245.58 72.0083 245.58 71.1279 cv
248.665 71.1279 li
248.665 69.6343 248.067 68.665 246.847 68.665 cv
245.451 68.665 244.821 69.707 244.821 71.0151 cv
244.821 72.2344 245.523 73.1304 246.71 73.1304 cv
247.388 73.1304 247.664 72.9692 247.857 72.8398 cv
248.39 72.4849 248.583 71.8872 248.608 71.6851 cv
247.897 71.6851 li
cp
245.58 70.563 mo
245.58 69.9087 246.096 69.3032 246.75 69.3032 cv
247.615 69.3032 247.889 69.9087 247.929 70.563 cv
245.58 70.563 li
cp
f
252.952 70.1348 mo
252.952 68.9316 252.128 68.665 251.474 68.665 cv
250.748 68.665 250.352 69.1577 250.199 69.3838 cv
250.182 69.3838 li
250.182 68.7861 li
249.512 68.7861 li
249.512 73.0093 li
250.223 73.0093 li
250.223 70.708 li
250.223 69.5615 250.933 69.3032 251.337 69.3032 cv
252.032 69.3032 252.242 69.6743 252.242 70.4092 cv
252.242 73.0093 li
252.952 73.0093 li
252.952 70.1348 li
cp
f
255.552 69.376 mo
255.552 68.7861 li
254.874 68.7861 li
254.874 67.6074 li
254.164 67.6074 li
254.164 68.7861 li
253.59 68.7861 li
253.59 69.376 li
254.164 69.376 li
254.164 72.1616 li
254.164 72.6704 254.317 73.0659 255.019 73.0659 cv
255.092 73.0659 255.293 73.0337 255.552 73.0093 cv
255.552 72.4521 li
255.302 72.4521 li
255.157 72.4521 254.874 72.4521 254.874 72.1211 cv
254.874 69.376 li
255.552 69.376 li
cp
f
259.332 69.9897 mo
259.332 69.7798 259.226 68.665 257.716 68.665 cv
256.884 68.665 256.118 69.085 256.118 70.0137 cv
256.118 70.5952 256.505 70.894 257.094 71.0391 cv
257.918 71.2412 li
258.524 71.3945 258.758 71.5073 258.758 71.8467 cv
258.758 72.3149 258.297 72.5171 257.789 72.5171 cv
256.788 72.5171 256.691 71.9839 256.667 71.6528 cv
255.98 71.6528 li
256.004 72.1616 256.125 73.1304 257.797 73.1304 cv
258.75 73.1304 259.468 72.606 259.468 71.7339 cv
259.468 71.1602 259.162 70.8374 258.282 70.6191 cv
257.571 70.4419 li
257.022 70.3042 256.804 70.2236 256.804 69.8765 cv
256.804 69.3516 257.425 69.2788 257.644 69.2788 cv
258.54 69.2788 258.637 69.7231 258.645 69.9897 cv
259.332 69.9897 li
cp
f
260.461 73.0093 mo
260.89 73.0093 li
260.89 73.3892 260.801 73.7925 260.461 73.8252 cv
260.461 74.1963 li
260.624 74.1724 261.301 74.043 261.301 72.9448 cv
261.301 72.1533 li
260.461 72.1533 li
260.461 73.0093 li
cp
f
216.252 79.4937 mo
216.3 79.1704 216.414 78.6782 217.221 78.6782 cv
217.891 78.6782 218.214 78.9204 218.214 79.3643 cv
218.214 79.7842 218.012 79.8486 217.843 79.8647 cv
216.672 80.0103 li
215.493 80.1558 215.388 80.979 215.388 81.3345 cv
215.388 82.061 215.937 82.5537 216.712 82.5537 cv
217.536 82.5537 217.964 82.1665 218.239 81.8677 cv
218.263 82.1904 218.36 82.5137 218.99 82.5137 cv
219.151 82.5137 219.256 82.4648 219.377 82.4326 cv
219.377 81.916 li
219.296 81.9321 219.208 81.9482 219.143 81.9482 cv
218.998 81.9482 218.909 81.8755 218.909 81.6978 cv
218.909 79.2676 li
218.909 78.1855 217.681 78.0884 217.342 78.0884 cv
216.3 78.0884 215.63 78.4839 215.598 79.4937 cv
216.252 79.4937 li
cp
218.198 80.9712 mo
218.198 81.5366 217.552 81.9644 216.89 81.9644 cv
216.357 81.9644 216.123 81.6899 216.123 81.2295 cv
216.123 80.6968 216.68 80.5918 217.028 80.5435 cv
217.908 80.4302 218.085 80.3657 218.198 80.2769 cv
218.198 80.9712 li
cp
f
223.552 79.5581 mo
223.552 78.355 222.728 78.0884 222.074 78.0884 cv
221.347 78.0884 220.952 78.5811 220.798 78.8071 cv
220.782 78.8071 li
220.782 78.2095 li
220.112 78.2095 li
220.112 82.4326 li
220.823 82.4326 li
220.823 80.1313 li
220.823 78.9849 221.533 78.7266 221.937 78.7266 cv
222.631 78.7266 222.841 79.0977 222.841 79.8325 cv
222.841 82.4326 li
223.552 82.4326 li
223.552 79.5581 li
cp
f
228.106 76.6353 mo
227.395 76.6353 li
227.395 78.7505 li
227.379 78.8071 li
227.209 78.5649 226.886 78.0884 226.12 78.0884 cv
224.998 78.0884 224.359 79.0093 224.359 80.1958 cv
224.359 81.2056 224.779 82.5537 226.216 82.5537 cv
226.628 82.5537 227.113 82.4248 227.419 81.8516 cv
227.436 81.8516 li
227.436 82.4326 li
228.106 82.4326 li
228.106 76.6353 li
cp
225.094 80.3091 mo
225.094 79.7681 225.151 78.7266 226.249 78.7266 cv
227.274 78.7266 227.387 79.8325 227.387 80.519 cv
227.387 81.6416 226.685 81.9399 226.233 81.9399 cv
225.458 81.9399 225.094 81.2378 225.094 80.3091 cv
cp
f
231.465 82.4326 mo
233.783 82.4326 li
235.688 82.4326 236.253 80.7534 236.253 79.4531 cv
236.253 77.7817 235.325 76.6353 233.815 76.6353 cv
231.465 76.6353 li
231.465 82.4326 li
cp
232.249 77.3052 mo
233.709 77.3052 li
234.776 77.3052 235.446 78.04 235.446 79.5015 cv
235.446 80.9634 234.784 81.7627 233.766 81.7627 cv
232.249 81.7627 li
232.249 77.3052 li
cp
f
241.098 81.3184 mo
241.083 81.3184 li
238.183 76.6353 li
237.254 76.6353 li
237.254 82.4326 li
238.014 82.4326 li
238.014 77.7495 li
238.03 77.7495 li
240.977 82.4326 li
241.857 82.4326 li
241.857 76.6353 li
241.098 76.6353 li
241.098 81.3184 li
cp
f
246.323 80.7451 mo
246.896 82.4326 li
247.752 82.4326 li
245.653 76.6353 li
244.764 76.6353 li
242.584 82.4326 li
243.391 82.4326 li
243.998 80.7451 li
246.323 80.7451 li
cp
244.24 80.0508 mo
245.168 77.499 li
245.184 77.499 li
246.041 80.0508 li
244.24 80.0508 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
109.683 55.8506 mo
171.589 55.8506 li
174.563 55.8506 176.973 58.2607 176.973 61.2339 cv
176.973 80.7476 li
176.973 83.7207 174.563 86.1309 171.589 86.1309 cv
109.683 86.1309 li
106.71 86.1309 104.299 83.7207 104.299 80.7476 cv
104.299 61.2339 li
104.299 58.2607 106.71 55.8506 109.683 55.8506 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
109.683 55.8506 mo
171.589 55.8506 li
174.563 55.8506 176.973 58.2607 176.973 61.2339 cv
176.973 80.7476 li
176.973 83.7207 174.563 86.1309 171.589 86.1309 cv
109.683 86.1309 li
106.71 86.1309 104.299 83.7207 104.299 80.7476 cv
104.299 61.2339 li
104.299 58.2607 106.71 55.8506 109.683 55.8506 cv
cp
0 .938 1 0 cmyk
@
grestore
130.396 60.8838 mo
130.302 60.0762 129.656 59.3022 128.411 59.3022 cv
127.004 59.3022 126.157 60.332 126.157 61.8188 cv
126.157 63.6763 127.233 64.3896 128.33 64.3896 cv
128.693 64.3896 130.174 64.3091 130.443 62.4854 cv
129.811 62.4854 li
129.588 63.6089 128.855 63.811 128.431 63.811 cv
127.233 63.811 126.83 62.936 126.83 61.7988 cv
126.83 60.5273 127.536 59.8813 128.411 59.8813 cv
128.875 59.8813 129.582 60.0361 129.763 60.8838 cv
130.396 60.8838 li
cp
0 .938 1 0 cmyk
f
134.023 61.8662 mo
134.023 60.8638 133.336 60.6416 132.792 60.6416 cv
132.226 60.6416 131.93 60.9917 131.762 61.2134 cv
131.749 61.2134 li
131.749 59.4302 li
131.156 59.4302 li
131.156 64.2617 li
131.749 64.2617 li
131.749 62.3442 li
131.749 61.4556 132.246 61.1733 132.731 61.1733 cv
133.296 61.1733 133.431 61.4829 133.431 61.9604 cv
133.431 64.2617 li
134.023 64.2617 li
134.023 61.8662 li
cp
f
135.422 61.8125 mo
135.463 61.5435 135.557 61.1328 136.23 61.1328 cv
136.789 61.1328 137.058 61.3345 137.058 61.7046 cv
137.058 62.0547 136.889 62.1084 136.748 62.1221 cv
135.772 62.2432 li
134.79 62.3643 134.703 63.0503 134.703 63.3467 cv
134.703 63.9521 135.16 64.3628 135.806 64.3628 cv
136.492 64.3628 136.849 64.0396 137.078 63.7905 cv
137.098 64.0601 137.179 64.3291 137.704 64.3291 cv
137.838 64.3291 137.926 64.2886 138.026 64.2617 cv
138.026 63.8311 li
137.959 63.8447 137.885 63.8579 137.832 63.8579 cv
137.71 63.8579 137.636 63.7974 137.636 63.6494 cv
137.636 61.624 li
137.636 60.7222 136.613 60.6416 136.331 60.6416 cv
135.463 60.6416 134.904 60.9712 134.877 61.8125 cv
135.422 61.8125 li
cp
137.044 63.0439 mo
137.044 63.5146 136.506 63.8716 135.954 63.8716 cv
135.51 63.8716 135.315 63.6426 135.315 63.2593 cv
135.315 62.8149 135.779 62.7275 136.068 62.687 cv
136.802 62.5928 136.95 62.5391 137.044 62.4653 cv
137.044 63.0439 li
cp
f
139.157 62.667 mo
139.157 62.0952 139.251 61.1733 140.106 61.1733 cv
141.021 61.1733 141.068 62.041 141.068 62.4922 cv
141.068 63.2661 140.765 63.8511 140.119 63.8511 cv
139.743 63.8511 139.157 63.6021 139.157 62.667 cv
cp
138.592 65.6548 mo
139.184 65.6548 li
139.184 63.8916 li
139.197 63.8916 li
139.352 64.1406 139.662 64.3628 140.133 64.3628 cv
141.331 64.3628 141.68 63.2388 141.68 62.3979 cv
141.68 61.4087 141.149 60.6416 140.213 60.6416 cv
139.574 60.6416 139.305 61.0386 139.164 61.2402 cv
139.15 61.2402 li
139.15 60.7427 li
138.592 60.7427 li
138.592 65.6548 li
cp
f
143.672 61.2339 mo
143.672 60.7427 li
143.107 60.7427 li
143.107 59.7603 li
142.515 59.7603 li
142.515 60.7427 li
142.037 60.7427 li
142.037 61.2339 li
142.515 61.2339 li
142.515 63.5552 li
142.515 63.979 142.643 64.3091 143.228 64.3091 cv
143.289 64.3091 143.457 64.2817 143.672 64.2617 cv
143.672 63.7974 li
143.463 63.7974 li
143.342 63.7974 143.107 63.7974 143.107 63.5215 cv
143.107 61.2339 li
143.672 61.2339 li
cp
f
146.646 63.1582 mo
146.626 63.4204 146.296 63.8511 145.738 63.8511 cv
145.058 63.8511 144.715 63.4272 144.715 62.6938 cv
147.286 62.6938 li
147.286 61.4492 146.788 60.6416 145.771 60.6416 cv
144.607 60.6416 144.083 61.5098 144.083 62.5996 cv
144.083 63.6157 144.668 64.3628 145.657 64.3628 cv
146.223 64.3628 146.451 64.228 146.613 64.1206 cv
147.057 63.8242 147.218 63.3267 147.239 63.1582 cv
146.646 63.1582 li
cp
144.715 62.2231 mo
144.715 61.6777 145.146 61.1733 145.691 61.1733 cv
146.411 61.1733 146.64 61.6777 146.673 62.2231 cv
144.715 62.2231 li
cp
f
148.665 62.2163 mo
148.665 61.7046 149.015 61.2739 149.567 61.2739 cv
149.789 61.2739 li
149.789 60.6616 li
149.742 60.6484 149.708 60.6416 149.634 60.6416 cv
149.19 60.6416 148.88 60.9175 148.645 61.3276 cv
148.631 61.3276 li
148.631 60.7427 li
148.073 60.7427 li
148.073 64.2617 li
148.665 64.2617 li
148.665 62.2163 li
cp
f
151.915 60.2109 mo
154.52 60.2109 li
153.611 61.2671 152.75 62.9629 152.588 64.2617 cv
153.241 64.2617 li
153.584 62.1489 154.714 60.6416 155.186 60.1504 cv
155.186 59.6323 li
151.915 59.6323 li
151.915 60.2109 li
cp
f
123.334 73.0093 mo
125.652 73.0093 li
127.558 73.0093 128.123 71.3301 128.123 70.0298 cv
128.123 68.3584 127.194 67.2119 125.685 67.2119 cv
123.334 67.2119 li
123.334 73.0093 li
cp
124.118 67.8818 mo
125.58 67.8818 li
126.646 67.8818 127.315 68.6167 127.315 70.0781 cv
127.315 71.54 126.653 72.3394 125.636 72.3394 cv
124.118 72.3394 li
124.118 67.8818 li
cp
f
131.91 71.6851 mo
131.886 72 131.49 72.5171 130.82 72.5171 cv
130.004 72.5171 129.593 72.0083 129.593 71.1279 cv
132.677 71.1279 li
132.677 69.6343 132.08 68.665 130.86 68.665 cv
129.463 68.665 128.833 69.707 128.833 71.0151 cv
128.833 72.2344 129.536 73.1304 130.723 73.1304 cv
131.401 73.1304 131.676 72.9692 131.87 72.8398 cv
132.403 72.4849 132.597 71.8872 132.621 71.6851 cv
131.91 71.6851 li
cp
129.593 70.563 mo
129.593 69.9087 130.109 69.3032 130.764 69.3032 cv
131.627 69.3032 131.902 69.9087 131.942 70.563 cv
129.593 70.563 li
cp
f
136.61 69.9897 mo
136.61 69.7798 136.505 68.665 134.995 68.665 cv
134.163 68.665 133.396 69.085 133.396 70.0137 cv
133.396 70.5952 133.784 70.894 134.373 71.0391 cv
135.197 71.2412 li
135.802 71.3945 136.036 71.5073 136.036 71.8467 cv
136.036 72.3149 135.576 72.5171 135.067 72.5171 cv
134.066 72.5171 133.969 71.9839 133.945 71.6528 cv
133.259 71.6528 li
133.283 72.1616 133.404 73.1304 135.076 73.1304 cv
136.028 73.1304 136.747 72.606 136.747 71.7339 cv
136.747 71.1602 136.44 70.8374 135.56 70.6191 cv
134.85 70.4419 li
134.3 70.3042 134.083 70.2236 134.083 69.8765 cv
134.083 69.3516 134.704 69.2788 134.922 69.2788 cv
135.818 69.2788 135.915 69.7231 135.923 69.9897 cv
136.61 69.9897 li
cp
f
138.289 68.7861 mo
137.579 68.7861 li
137.579 73.0093 li
138.289 73.0093 li
138.289 68.7861 li
cp
138.289 68.019 mo
138.289 67.2119 li
137.579 67.2119 li
137.579 68.019 li
138.289 68.019 li
cp
f
139.888 70.8857 mo
139.888 70.3447 139.945 69.3032 141.042 69.3032 cv
142.068 69.3032 142.181 70.4092 142.181 71.0957 cv
142.181 72.2183 141.479 72.5171 141.027 72.5171 cv
140.251 72.5171 139.888 71.8145 139.888 70.8857 cv
cp
142.859 68.7861 mo
142.189 68.7861 li
142.189 69.3838 li
142.173 69.3838 li
142.003 69.1416 141.681 68.665 140.914 68.665 cv
139.791 68.665 139.153 69.5859 139.153 70.7729 cv
139.153 71.7822 139.573 73.1304 141.01 73.1304 cv
141.576 73.1304 141.947 72.8643 142.133 72.5654 cv
142.133 72.5332 li
142.149 72.5332 li
142.149 72.7104 li
142.149 73.2114 142.173 74.1963 140.946 74.1963 cv
140.776 74.1963 140.122 74.1963 139.993 73.5264 cv
139.282 73.5264 li
139.42 74.6484 140.397 74.7856 140.897 74.7856 cv
142.852 74.7856 142.859 73.2681 142.859 72.6621 cv
142.859 68.7861 li
cp
f
147.285 70.1348 mo
147.285 68.9316 146.461 68.665 145.807 68.665 cv
145.08 68.665 144.685 69.1577 144.531 69.3838 cv
144.515 69.3838 li
144.515 68.7861 li
143.845 68.7861 li
143.845 73.0093 li
144.555 73.0093 li
144.555 70.708 li
144.555 69.5615 145.266 69.3032 145.669 69.3032 cv
146.364 69.3032 146.574 69.6743 146.574 70.4092 cv
146.574 73.0093 li
147.285 73.0093 li
147.285 70.1348 li
cp
f
149.061 68.7861 mo
148.351 68.7861 li
148.351 73.0093 li
149.061 73.0093 li
149.061 68.7861 li
cp
149.061 68.019 mo
149.061 67.2119 li
148.351 67.2119 li
148.351 68.019 li
149.061 68.019 li
cp
f
153.567 70.1348 mo
153.567 68.9316 152.743 68.665 152.089 68.665 cv
151.362 68.665 150.967 69.1577 150.813 69.3838 cv
150.797 69.3838 li
150.797 68.7861 li
150.127 68.7861 li
150.127 73.0093 li
150.837 73.0093 li
150.837 70.708 li
150.837 69.5615 151.548 69.3032 151.952 69.3032 cv
152.646 69.3032 152.856 69.6743 152.856 70.4092 cv
152.856 73.0093 li
153.567 73.0093 li
153.567 70.1348 li
cp
f
155.149 70.8857 mo
155.149 70.3447 155.206 69.3032 156.304 69.3032 cv
157.33 69.3032 157.443 70.4092 157.443 71.0957 cv
157.443 72.2183 156.74 72.5171 156.288 72.5171 cv
155.513 72.5171 155.149 71.8145 155.149 70.8857 cv
cp
158.121 68.7861 mo
157.451 68.7861 li
157.451 69.3838 li
157.435 69.3838 li
157.265 69.1416 156.942 68.665 156.175 68.665 cv
155.053 68.665 154.415 69.5859 154.415 70.7729 cv
154.415 71.7822 154.834 73.1304 156.272 73.1304 cv
156.837 73.1304 157.208 72.8643 157.394 72.5654 cv
157.394 72.5332 li
157.41 72.5332 li
157.41 72.7104 li
157.41 73.2114 157.435 74.1963 156.207 74.1963 cv
156.038 74.1963 155.384 74.1963 155.254 73.5264 cv
154.544 73.5264 li
154.681 74.6484 155.658 74.7856 156.159 74.7856 cv
158.113 74.7856 158.121 73.2681 158.121 72.6621 cv
158.121 68.7861 li
cp
f
124.731 80.519 mo
124.731 79.8325 124.845 78.7266 125.87 78.7266 cv
126.968 78.7266 127.025 79.7681 127.025 80.3091 cv
127.025 81.2378 126.662 81.9399 125.886 81.9399 cv
125.434 81.9399 124.731 81.6416 124.731 80.519 cv
cp
124.053 84.104 mo
124.764 84.104 li
124.764 81.9888 li
124.78 81.9888 li
124.966 82.2876 125.337 82.5537 125.902 82.5537 cv
127.34 82.5537 127.76 81.2056 127.76 80.1958 cv
127.76 79.0093 127.122 78.0884 126 78.0884 cv
125.232 78.0884 124.909 78.5649 124.74 78.8071 cv
124.724 78.8071 li
124.724 78.2095 li
124.053 78.2095 li
124.053 84.104 li
cp
f
129.407 79.978 mo
129.407 79.3643 129.827 78.8477 130.489 78.8477 cv
130.755 78.8477 li
130.755 78.1128 li
130.699 78.0967 130.659 78.0884 130.57 78.0884 cv
130.037 78.0884 129.666 78.4194 129.383 78.9121 cv
129.367 78.9121 li
129.367 78.2095 li
128.696 78.2095 li
128.696 82.4326 li
129.407 82.4326 li
129.407 79.978 li
cp
f
131.046 80.3169 mo
131.046 81.4072 131.66 82.5459 133.008 82.5459 cv
134.357 82.5459 134.971 81.4072 134.971 80.3169 cv
134.971 79.2271 134.357 78.0884 133.008 78.0884 cv
131.66 78.0884 131.046 79.2271 131.046 80.3169 cv
cp
131.781 80.3169 mo
131.781 79.752 131.991 78.7021 133.008 78.7021 cv
134.026 78.7021 134.236 79.752 134.236 80.3169 cv
134.236 80.8823 134.026 81.9321 133.008 81.9321 cv
131.991 81.9321 131.781 80.8823 131.781 80.3169 cv
cp
f
136.311 80.3091 mo
136.311 79.7681 136.368 78.7266 137.466 78.7266 cv
138.491 78.7266 138.604 79.8325 138.604 80.519 cv
138.604 81.6416 137.902 81.9399 137.45 81.9399 cv
136.674 81.9399 136.311 81.2378 136.311 80.3091 cv
cp
139.282 78.2095 mo
138.612 78.2095 li
138.612 78.8071 li
138.596 78.8071 li
138.426 78.5649 138.104 78.0884 137.336 78.0884 cv
136.214 78.0884 135.576 79.0093 135.576 80.1958 cv
135.576 81.2056 135.996 82.5537 137.433 82.5537 cv
137.999 82.5537 138.37 82.2876 138.556 81.9888 cv
138.556 81.9565 li
138.572 81.9565 li
138.572 82.1338 li
138.572 82.6348 138.596 83.6196 137.369 83.6196 cv
137.199 83.6196 136.545 83.6196 136.416 82.9497 cv
135.705 82.9497 li
135.843 84.0718 136.82 84.2095 137.32 84.2095 cv
139.274 84.2095 139.282 82.6909 139.282 82.0854 cv
139.282 78.2095 li
cp
f
141.075 79.978 mo
141.075 79.3643 141.495 78.8477 142.157 78.8477 cv
142.423 78.8477 li
142.423 78.1128 li
142.367 78.0967 142.327 78.0884 142.238 78.0884 cv
141.705 78.0884 141.333 78.4194 141.051 78.9121 cv
141.035 78.9121 li
141.035 78.2095 li
140.364 78.2095 li
140.364 82.4326 li
141.075 82.4326 li
141.075 79.978 li
cp
f
143.586 79.4937 mo
143.635 79.1704 143.748 78.6782 144.555 78.6782 cv
145.226 78.6782 145.548 78.9204 145.548 79.3643 cv
145.548 79.7842 145.347 79.8486 145.177 79.8647 cv
144.006 80.0103 li
142.827 80.1558 142.722 80.979 142.722 81.3345 cv
142.722 82.061 143.271 82.5537 144.046 82.5537 cv
144.87 82.5537 145.298 82.1665 145.573 81.8677 cv
145.597 82.1904 145.694 82.5137 146.324 82.5137 cv
146.485 82.5137 146.59 82.4648 146.711 82.4326 cv
146.711 81.916 li
146.63 81.9321 146.542 81.9482 146.477 81.9482 cv
146.332 81.9482 146.243 81.8755 146.243 81.6978 cv
146.243 79.2676 li
146.243 78.1855 145.016 78.0884 144.676 78.0884 cv
143.635 78.0884 142.964 78.4839 142.932 79.4937 cv
143.586 79.4937 li
cp
145.532 80.9712 mo
145.532 81.5366 144.886 81.9644 144.224 81.9644 cv
143.691 81.9644 143.457 81.6899 143.457 81.2295 cv
143.457 80.6968 144.014 80.5918 144.361 80.5435 cv
145.242 80.4302 145.419 80.3657 145.532 80.2769 cv
145.532 80.9712 li
cp
f
147.446 82.4326 mo
148.157 82.4326 li
148.157 80.1313 li
148.157 78.9849 148.867 78.7266 149.271 78.7266 cv
149.796 78.7266 149.933 79.1543 149.933 79.5098 cv
149.933 82.4326 li
150.644 82.4326 li
150.644 79.8569 li
150.644 79.2915 151.04 78.7266 151.637 78.7266 cv
152.243 78.7266 152.42 79.1221 152.42 79.7036 cv
152.42 82.4326 li
153.131 82.4326 li
153.131 79.5098 li
153.131 78.3228 152.275 78.0884 151.823 78.0884 cv
151.168 78.0884 150.886 78.3794 150.531 78.7749 cv
150.41 78.5488 150.167 78.0884 149.408 78.0884 cv
148.649 78.0884 148.286 78.5811 148.132 78.8071 cv
148.116 78.8071 li
148.116 78.2095 li
147.446 78.2095 li
147.446 82.4326 li
cp
f
157.257 79.4126 mo
157.257 79.2026 157.152 78.0884 155.642 78.0884 cv
154.81 78.0884 154.043 78.5083 154.043 79.437 cv
154.043 80.0186 154.431 80.3169 155.02 80.4624 cv
155.844 80.6646 li
156.45 80.8179 156.684 80.9307 156.684 81.27 cv
156.684 81.7383 156.223 81.9399 155.715 81.9399 cv
154.713 81.9399 154.617 81.4072 154.592 81.0762 cv
153.906 81.0762 li
153.93 81.585 154.051 82.5537 155.723 82.5537 cv
156.675 82.5537 157.394 82.0288 157.394 81.1567 cv
157.394 80.5835 157.087 80.2607 156.207 80.0425 cv
155.497 79.8647 li
154.948 79.7275 154.729 79.647 154.729 79.2998 cv
154.729 78.7749 155.351 78.7021 155.569 78.7021 cv
156.466 78.7021 156.563 79.1465 156.571 79.4126 cv
157.257 79.4126 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
18.8413 55.8506 mo
80.748 55.8506 li
83.7207 55.8506 86.1313 58.2607 86.1313 61.2339 cv
86.1313 80.7476 li
86.1313 83.7207 83.7207 86.1309 80.748 86.1309 cv
18.8413 86.1309 li
15.8682 86.1309 13.458 83.7207 13.458 80.7476 cv
13.458 61.2339 li
13.458 58.2607 15.8682 55.8506 18.8413 55.8506 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
18.8413 55.8506 mo
80.748 55.8506 li
83.7207 55.8506 86.1313 58.2607 86.1313 61.2339 cv
86.1313 80.7476 li
86.1313 83.7207 83.7207 86.1309 80.748 86.1309 cv
18.8413 86.1309 li
15.8682 86.1309 13.458 83.7207 13.458 80.7476 cv
13.458 61.2339 li
13.458 58.2607 15.8682 55.8506 18.8413 55.8506 cv
cp
.746 .676 .668 .898 cmyk
@
grestore
39.5542 65.5942 mo
39.46 64.7866 38.814 64.0127 37.5693 64.0127 cv
36.1631 64.0127 35.3149 65.0425 35.3149 66.5293 cv
35.3149 68.3867 36.3916 69.1001 37.4888 69.1001 cv
37.8521 69.1001 39.3325 69.019 39.6016 67.1958 cv
38.9688 67.1958 li
38.7471 68.3193 38.0132 68.521 37.5894 68.521 cv
36.3916 68.521 35.9878 67.6465 35.9878 66.5093 cv
35.9878 65.2373 36.6943 64.5913 37.5693 64.5913 cv
38.0337 64.5913 38.7402 64.7461 38.9219 65.5942 cv
39.5542 65.5942 li
cp
0 0 0 1 cmyk
f
43.1812 66.5767 mo
43.1812 65.5737 42.4951 65.3521 41.9497 65.3521 cv
41.3848 65.3521 41.0884 65.7017 40.9204 65.9238 cv
40.9067 65.9238 li
40.9067 64.1406 li
40.3149 64.1406 li
40.3149 68.9722 li
40.9067 68.9722 li
40.9067 67.0542 li
40.9067 66.166 41.4048 65.8833 41.8892 65.8833 cv
42.4546 65.8833 42.5894 66.1929 42.5894 66.6709 cv
42.5894 68.9722 li
43.1812 68.9722 li
43.1812 66.5767 li
cp
f
44.5811 66.5229 mo
44.6211 66.2534 44.7153 65.8433 45.3882 65.8433 cv
45.9468 65.8433 46.2163 66.0449 46.2163 66.415 cv
46.2163 66.7651 46.0479 66.8188 45.9067 66.832 cv
44.9307 66.9536 li
43.9482 67.0747 43.8608 67.7607 43.8608 68.0571 cv
43.8608 68.6626 44.3184 69.0728 44.9644 69.0728 cv
45.6509 69.0728 46.0073 68.75 46.2363 68.501 cv
46.2563 68.77 46.3374 69.0396 46.8618 69.0396 cv
46.9966 69.0396 47.084 68.999 47.1851 68.9722 cv
47.1851 68.5415 li
47.1177 68.5547 47.0439 68.5684 46.9897 68.5684 cv
46.8687 68.5684 46.7949 68.5078 46.7949 68.3599 cv
46.7949 66.3345 li
46.7949 65.4326 45.772 65.3521 45.4893 65.3521 cv
44.6211 65.3521 44.063 65.6816 44.0356 66.5229 cv
44.5811 66.5229 li
cp
46.2026 67.7539 mo
46.2026 68.2251 45.6641 68.5815 45.1123 68.5815 cv
44.6685 68.5815 44.4731 68.353 44.4731 67.9692 cv
44.4731 67.5254 44.9375 67.438 45.2271 67.3975 cv
45.9604 67.3032 46.1084 67.2495 46.2026 67.1753 cv
46.2026 67.7539 li
cp
f
48.3154 67.3774 mo
48.3154 66.8052 48.4097 65.8833 49.2642 65.8833 cv
50.1792 65.8833 50.2266 66.7515 50.2266 67.2021 cv
50.2266 67.9761 49.9238 68.5615 49.2778 68.5615 cv
48.9009 68.5615 48.3154 68.3125 48.3154 67.3774 cv
cp
47.7505 70.3647 mo
48.3423 70.3647 li
48.3423 68.6021 li
48.356 68.6021 li
48.5107 68.8511 48.8203 69.0728 49.291 69.0728 cv
50.4888 69.0728 50.8389 67.9492 50.8389 67.1079 cv
50.8389 66.1191 50.3071 65.3521 49.3721 65.3521 cv
48.7329 65.3521 48.4634 65.749 48.3223 65.9507 cv
48.3086 65.9507 li
48.3086 65.4526 li
47.7505 65.4526 li
47.7505 70.3647 li
cp
f
52.8306 65.9438 mo
52.8306 65.4526 li
52.2656 65.4526 li
52.2656 64.4702 li
51.6733 64.4702 li
51.6733 65.4526 li
51.1953 65.4526 li
51.1953 65.9438 li
51.6733 65.9438 li
51.6733 68.2656 li
51.6733 68.6895 51.8013 69.019 52.3867 69.019 cv
52.4473 69.019 52.6152 68.9922 52.8306 68.9722 cv
52.8306 68.5078 li
52.6221 68.5078 li
52.501 68.5078 52.2656 68.5078 52.2656 68.2319 cv
52.2656 65.9438 li
52.8306 65.9438 li
cp
f
55.8047 67.8687 mo
55.7847 68.1309 55.4551 68.5615 54.8965 68.5615 cv
54.2168 68.5615 53.8735 68.1377 53.8735 67.4043 cv
56.4443 67.4043 li
56.4443 66.1592 55.9463 65.3521 54.9302 65.3521 cv
53.7661 65.3521 53.2412 66.2197 53.2412 67.3101 cv
53.2412 68.3262 53.8267 69.0728 54.8159 69.0728 cv
55.3809 69.0728 55.6099 68.9385 55.771 68.8306 cv
56.2153 68.5347 56.377 68.0366 56.397 67.8687 cv
55.8047 67.8687 li
cp
53.8735 66.9331 mo
53.8735 66.3882 54.3042 65.8833 54.8491 65.8833 cv
55.5693 65.8833 55.7983 66.3882 55.832 66.9331 cv
53.8735 66.9331 li
cp
f
57.8237 66.9263 mo
57.8237 66.415 58.1733 65.9844 58.7251 65.9844 cv
58.9473 65.9844 li
58.9473 65.3721 li
58.9004 65.3584 58.8667 65.3521 58.7925 65.3521 cv
58.3486 65.3521 58.0391 65.6279 57.8032 66.0381 cv
57.79 66.0381 li
57.79 65.4526 li
57.2314 65.4526 li
57.2314 68.9722 li
57.8237 68.9722 li
57.8237 66.9263 li
cp
f
64.1353 65.4595 mo
64.1353 64.9077 63.7251 64.2417 62.6753 64.2417 cv
61.5449 64.2417 61.2417 65.0493 61.2417 65.5405 cv
61.2417 65.9844 61.4775 66.3071 61.8813 66.4624 cv
61.3833 66.6641 61.0806 67.0342 61.0806 67.6128 cv
61.0806 67.8413 61.0806 68.353 61.5649 68.7363 cv
61.9419 69.0327 62.4395 69.1001 62.7021 69.1001 cv
63.8193 69.1001 64.3037 68.3667 64.3037 67.606 cv
64.3037 67.2495 64.1689 66.7246 63.5298 66.4556 cv
63.7383 66.3477 64.1353 66.1392 64.1353 65.4595 cv
cp
62.6885 66.7515 mo
63.2271 66.7515 63.6709 67.0342 63.6709 67.6733 cv
63.6709 68.4136 63.1528 68.5684 62.7222 68.5684 cv
61.9014 68.5684 61.7129 68.0029 61.7129 67.6265 cv
61.7129 67.189 62.0225 66.7515 62.6885 66.7515 cv
cp
62.6821 66.2402 mo
62.2515 66.2402 61.854 65.9644 61.854 65.5132 cv
61.854 65.2104 62.0088 64.7729 62.6416 64.7729 cv
63.3345 64.7729 63.5229 65.1904 63.5229 65.4795 cv
63.5229 65.9102 63.1934 66.2402 62.6821 66.2402 cv
cp
f
26.2124 77.7197 mo
28.5298 77.7197 li
30.4355 77.7197 31.0005 76.04 31.0005 74.7402 cv
31.0005 73.0688 30.0723 71.9219 28.562 71.9219 cv
26.2124 71.9219 li
26.2124 77.7197 li
cp
26.9956 72.5923 mo
28.457 72.5923 li
29.5229 72.5923 30.1934 73.3271 30.1934 74.7886 cv
30.1934 76.25 29.5313 77.0493 28.5137 77.0493 cv
26.9956 77.0493 li
26.9956 72.5923 li
cp
f
32.543 74.7808 mo
32.5913 74.4575 32.7046 73.9648 33.5122 73.9648 cv
34.1821 73.9648 34.5054 74.207 34.5054 74.6514 cv
34.5054 75.0713 34.3032 75.1357 34.1338 75.1519 cv
32.9629 75.2974 li
31.7842 75.4429 31.6792 76.2661 31.6792 76.6216 cv
31.6792 77.3481 32.228 77.8408 33.0034 77.8408 cv
33.8267 77.8408 34.2549 77.4531 34.5293 77.1548 cv
34.5537 77.4775 34.6504 77.8003 35.2803 77.8003 cv
35.4419 77.8003 35.5469 77.752 35.668 77.7197 cv
35.668 77.2031 li
35.5874 77.2192 35.4985 77.2354 35.4336 77.2354 cv
35.2886 77.2354 35.1997 77.1626 35.1997 76.9849 cv
35.1997 74.5542 li
35.1997 73.4722 33.9722 73.3755 33.6333 73.3755 cv
32.5913 73.3755 31.9214 73.771 31.8892 74.7808 cv
32.543 74.7808 li
cp
34.4893 76.2583 mo
34.4893 76.8232 33.8433 77.2515 33.1812 77.2515 cv
32.6479 77.2515 32.4136 76.9771 32.4136 76.5166 cv
32.4136 75.9839 32.9712 75.8789 33.3184 75.8301 cv
34.1982 75.7173 34.376 75.6528 34.4893 75.564 cv
34.4893 76.2583 li
cp
f
37.9531 74.0859 mo
37.9531 73.4966 li
37.2749 73.4966 li
37.2749 72.3179 li
36.5645 72.3179 li
36.5645 73.4966 li
35.9907 73.4966 li
35.9907 74.0859 li
36.5645 74.0859 li
36.5645 76.8721 li
36.5645 77.3804 36.7178 77.7764 37.4204 77.7764 cv
37.4927 77.7764 37.6948 77.7441 37.9531 77.7197 cv
37.9531 77.1626 li
37.7026 77.1626 li
37.5576 77.1626 37.2749 77.1626 37.2749 76.8315 cv
37.2749 74.0859 li
37.9531 74.0859 li
cp
f
39.2773 74.7808 mo
39.3257 74.4575 39.439 73.9648 40.2466 73.9648 cv
40.9165 73.9648 41.2397 74.207 41.2397 74.6514 cv
41.2397 75.0713 41.0376 75.1357 40.8682 75.1519 cv
39.6973 75.2974 li
38.5186 75.4429 38.4136 76.2661 38.4136 76.6216 cv
38.4136 77.3481 38.9624 77.8408 39.7378 77.8408 cv
40.561 77.8408 40.9893 77.4531 41.2637 77.1548 cv
41.2881 77.4775 41.3848 77.8003 42.0146 77.8003 cv
42.1763 77.8003 42.2813 77.752 42.4023 77.7197 cv
42.4023 77.2031 li
42.3218 77.2192 42.2329 77.2354 42.168 77.2354 cv
42.0229 77.2354 41.9341 77.1626 41.9341 76.9849 cv
41.9341 74.5542 li
41.9341 73.4722 40.7065 73.3755 40.3677 73.3755 cv
39.3257 73.3755 38.6558 73.771 38.6235 74.7808 cv
39.2773 74.7808 li
cp
41.2236 76.2583 mo
41.2236 76.8232 40.5776 77.2515 39.9155 77.2515 cv
39.3823 77.2515 39.1479 76.9771 39.1479 76.5166 cv
39.1479 75.9839 39.7056 75.8789 40.0527 75.8301 cv
40.9326 75.7173 41.1104 75.6528 41.2236 75.564 cv
41.2236 76.2583 li
cp
f
46.0117 74.7808 mo
46.0601 74.4575 46.1733 73.9648 46.981 73.9648 cv
47.6509 73.9648 47.9741 74.207 47.9741 74.6514 cv
47.9741 75.0713 47.772 75.1357 47.6025 75.1519 cv
46.4316 75.2974 li
45.2529 75.4429 45.1479 76.2661 45.1479 76.6216 cv
45.1479 77.3481 45.6968 77.8408 46.4722 77.8408 cv
47.2954 77.8408 47.7236 77.4531 47.998 77.1548 cv
48.0225 77.4775 48.1191 77.8003 48.749 77.8003 cv
48.9106 77.8003 49.0156 77.752 49.1367 77.7197 cv
49.1367 77.2031 li
49.0562 77.2192 48.9673 77.2354 48.9023 77.2354 cv
48.7573 77.2354 48.6685 77.1626 48.6685 76.9849 cv
48.6685 74.5542 li
48.6685 73.4722 47.4409 73.3755 47.1021 73.3755 cv
46.0601 73.3755 45.3901 73.771 45.3579 74.7808 cv
46.0117 74.7808 li
cp
47.958 76.2583 mo
47.958 76.8232 47.312 77.2515 46.6499 77.2515 cv
46.1167 77.2515 45.8823 76.9771 45.8823 76.5166 cv
45.8823 75.9839 46.4399 75.8789 46.7871 75.8301 cv
47.667 75.7173 47.8447 75.6528 47.958 75.564 cv
47.958 76.2583 li
cp
f
53.3115 74.8452 mo
53.3115 73.6421 52.4878 73.3755 51.8335 73.3755 cv
51.1069 73.3755 50.7114 73.8682 50.5581 74.0942 cv
50.5415 74.0942 li
50.5415 73.4966 li
49.8716 73.4966 li
49.8716 77.7197 li
50.582 77.7197 li
50.582 75.4185 li
50.582 74.272 51.2925 74.0132 51.6963 74.0132 cv
52.3906 74.0132 52.6006 74.3848 52.6006 75.1196 cv
52.6006 77.7197 li
53.3115 77.7197 li
53.3115 74.8452 li
cp
f
54.9907 74.7808 mo
55.0396 74.4575 55.1523 73.9648 55.96 73.9648 cv
56.6304 73.9648 56.9531 74.207 56.9531 74.6514 cv
56.9531 75.0713 56.7515 75.1357 56.5815 75.1519 cv
55.4106 75.2974 li
54.2319 75.4429 54.127 76.2661 54.127 76.6216 cv
54.127 77.3481 54.6763 77.8408 55.4512 77.8408 cv
56.2749 77.8408 56.7026 77.4531 56.9775 77.1548 cv
57.0015 77.4775 57.0986 77.8003 57.7285 77.8003 cv
57.8896 77.8003 57.9946 77.752 58.1157 77.7197 cv
58.1157 77.2031 li
58.0352 77.2192 57.9463 77.2354 57.8818 77.2354 cv
57.7363 77.2354 57.6475 77.1626 57.6475 76.9849 cv
57.6475 74.5542 li
57.6475 73.4722 56.4204 73.3755 56.0811 73.3755 cv
55.0396 73.3755 54.3691 73.771 54.3369 74.7808 cv
54.9907 74.7808 li
cp
56.937 76.2583 mo
56.937 76.8232 56.291 77.2515 55.6289 77.2515 cv
55.0957 77.2515 54.8618 76.9771 54.8618 76.5166 cv
54.8618 75.9839 55.4189 75.8789 55.7661 75.8301 cv
56.6465 75.7173 56.8237 75.6528 56.937 75.564 cv
56.937 76.2583 li
cp
f
59.5776 71.9219 mo
58.8667 71.9219 li
58.8667 77.7197 li
59.5776 77.7197 li
59.5776 71.9219 li
cp
f
62.1533 76.9365 mo
62.1372 76.9365 li
61.0146 73.4966 li
60.2075 73.4966 li
61.7739 77.8325 li
61.4346 78.7051 61.394 78.8101 61.0229 78.8101 cv
60.8291 78.8101 60.6836 78.7695 60.5947 78.7373 cv
60.5947 79.3833 li
60.708 79.4155 60.7886 79.4478 60.8936 79.4478 cv
61.8062 79.4478 61.8789 79.3511 62.5488 77.6392 cv
63.0898 76.2583 63.5747 74.8774 64.0669 73.4966 cv
63.2837 73.4966 li
62.1533 76.9365 li
cp
f
67.7651 74.6997 mo
67.7651 74.4897 67.6602 73.3755 66.1504 73.3755 cv
65.3188 73.3755 64.5513 73.7954 64.5513 74.7241 cv
64.5513 75.3052 64.939 75.604 65.5288 75.7495 cv
66.3521 75.9512 li
66.958 76.105 67.1919 76.2178 67.1919 76.5571 cv
67.1919 77.0254 66.7319 77.2271 66.2231 77.2271 cv
65.2217 77.2271 65.125 76.6943 65.1006 76.3633 cv
64.4141 76.3633 li
64.4385 76.8721 64.5596 77.8408 66.231 77.8408 cv
67.1841 77.8408 67.9023 77.3159 67.9023 76.4438 cv
67.9023 75.8706 67.5957 75.5474 66.7153 75.3296 cv
66.0049 75.1519 li
65.4561 75.0146 65.2378 74.9341 65.2378 74.5869 cv
65.2378 74.062 65.8599 73.9893 66.0776 73.9893 cv
66.9741 73.9893 67.0708 74.4331 67.0791 74.6997 cv
67.7651 74.6997 li
cp
f
69.4448 73.4966 mo
68.7344 73.4966 li
68.7344 77.7197 li
69.4448 77.7197 li
69.4448 73.4966 li
cp
69.4448 72.7295 mo
69.4448 71.9219 li
68.7344 71.9219 li
68.7344 72.7295 li
69.4448 72.7295 li
cp
f
73.5952 74.6997 mo
73.5952 74.4897 73.4902 73.3755 71.9805 73.3755 cv
71.1484 73.3755 70.3813 73.7954 70.3813 74.7241 cv
70.3813 75.3052 70.769 75.604 71.3584 75.7495 cv
72.1821 75.9512 li
72.7876 76.105 73.022 76.2178 73.022 76.5571 cv
73.022 77.0254 72.5615 77.2271 72.0532 77.2271 cv
71.0518 77.2271 70.9546 76.6943 70.9307 76.3633 cv
70.2441 76.3633 li
70.2686 76.8721 70.3896 77.8408 72.061 77.8408 cv
73.0137 77.8408 73.7324 77.3159 73.7324 76.4438 cv
73.7324 75.8706 73.4258 75.5474 72.5454 75.3296 cv
71.835 75.1519 li
71.2856 75.0146 71.0679 74.9341 71.0679 74.5869 cv
71.0679 74.062 71.6895 73.9893 71.9077 73.9893 cv
72.8042 73.9893 72.9009 74.4331 72.9087 74.6997 cv
73.5952 74.6997 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
61.2339 110.355 mo
123.141 110.355 li
126.114 110.355 128.524 112.766 128.524 115.739 cv
128.524 135.252 li
128.524 138.226 126.114 140.636 123.141 140.636 cv
61.2339 140.636 li
58.2607 140.636 55.8506 138.226 55.8506 135.252 cv
55.8506 115.739 li
55.8506 112.766 58.2607 110.355 61.2339 110.355 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
61.2339 110.355 mo
123.141 110.355 li
126.114 110.355 128.524 112.766 128.524 115.739 cv
128.524 135.252 li
128.524 138.226 126.114 140.636 123.141 140.636 cv
61.2339 140.636 li
58.2607 140.636 55.8506 138.226 55.8506 135.252 cv
55.8506 115.739 li
55.8506 112.766 58.2607 110.355 61.2339 110.355 cv
cp
0 .938 1 0 cmyk
@
grestore
81.9473 120.099 mo
81.853 119.292 81.207 118.518 79.9619 118.518 cv
78.5557 118.518 77.708 119.547 77.708 121.034 cv
77.708 122.892 78.7847 123.605 79.8813 123.605 cv
80.2446 123.605 81.7251 123.524 81.9941 121.701 cv
81.3618 121.701 li
81.1396 122.824 80.4063 123.026 79.9819 123.026 cv
78.7847 123.026 78.3809 122.151 78.3809 121.014 cv
78.3809 119.742 79.0874 119.096 79.9619 119.096 cv
80.4263 119.096 81.1328 119.251 81.3145 120.099 cv
81.9473 120.099 li
cp
0 .938 1 0 cmyk
f
85.5737 121.082 mo
85.5737 120.079 84.8877 119.857 84.3428 119.857 cv
83.7773 119.857 83.4814 120.207 83.313 120.429 cv
83.2998 120.429 li
83.2998 118.646 li
82.7075 118.646 li
82.7075 123.477 li
83.2998 123.477 li
83.2998 121.559 li
83.2998 120.671 83.7974 120.388 84.2822 120.388 cv
84.8472 120.388 84.9819 120.698 84.9819 121.176 cv
84.9819 123.477 li
85.5737 123.477 li
85.5737 121.082 li
cp
f
86.9736 121.028 mo
87.0142 120.758 87.1084 120.348 87.7813 120.348 cv
88.3394 120.348 88.6089 120.55 88.6089 120.92 cv
88.6089 121.27 88.4404 121.324 88.2993 121.337 cv
87.3237 121.458 li
86.3413 121.58 86.2534 122.266 86.2534 122.562 cv
86.2534 123.167 86.7114 123.578 87.3569 123.578 cv
88.0435 123.578 88.3999 123.255 88.6289 123.006 cv
88.6489 123.275 88.73 123.544 89.2549 123.544 cv
89.3892 123.544 89.4771 123.504 89.5776 123.477 cv
89.5776 123.046 li
89.5103 123.06 89.4365 123.073 89.3828 123.073 cv
89.2612 123.073 89.1875 123.013 89.1875 122.865 cv
89.1875 120.839 li
89.1875 119.938 88.1646 119.857 87.8818 119.857 cv
87.0142 119.857 86.4556 120.187 86.4287 121.028 cv
86.9736 121.028 li
cp
88.5952 122.259 mo
88.5952 122.73 88.0571 123.086 87.5054 123.086 cv
87.061 123.086 86.8657 122.858 86.8657 122.474 cv
86.8657 122.03 87.3301 121.943 87.6196 121.902 cv
88.353 121.808 88.501 121.754 88.5952 121.68 cv
88.5952 122.259 li
cp
f
90.708 121.882 mo
90.708 121.31 90.8022 120.388 91.6572 120.388 cv
92.5723 120.388 92.6191 121.256 92.6191 121.707 cv
92.6191 122.481 92.3164 123.066 91.6704 123.066 cv
91.2935 123.066 90.708 122.817 90.708 121.882 cv
cp
90.1431 124.87 mo
90.7354 124.87 li
90.7354 123.107 li
90.7485 123.107 li
90.9033 123.356 91.2129 123.578 91.6841 123.578 cv
92.8818 123.578 93.2314 122.454 93.2314 121.613 cv
93.2314 120.624 92.7002 119.857 91.7646 119.857 cv
91.1255 119.857 90.8564 120.254 90.7148 120.456 cv
90.7017 120.456 li
90.7017 119.958 li
90.1431 119.958 li
90.1431 124.87 li
cp
f
95.2231 120.449 mo
95.2231 119.958 li
94.6582 119.958 li
94.6582 118.975 li
94.0659 118.975 li
94.0659 119.958 li
93.5884 119.958 li
93.5884 120.449 li
94.0659 120.449 li
94.0659 122.771 li
94.0659 123.194 94.1938 123.524 94.7793 123.524 cv
94.8398 123.524 95.0078 123.497 95.2231 123.477 cv
95.2231 123.013 li
95.0146 123.013 li
94.8936 123.013 94.6582 123.013 94.6582 122.737 cv
94.6582 120.449 li
95.2231 120.449 li
cp
f
98.1978 122.374 mo
98.1772 122.636 97.8477 123.066 97.2891 123.066 cv
96.6094 123.066 96.2661 122.643 96.2661 121.909 cv
98.8369 121.909 li
98.8369 120.664 98.3389 119.857 97.3228 119.857 cv
96.1587 119.857 95.6338 120.725 95.6338 121.815 cv
95.6338 122.831 96.2192 123.578 97.2085 123.578 cv
97.7734 123.578 98.0024 123.443 98.1641 123.335 cv
98.6079 123.04 98.7695 122.542 98.7896 122.374 cv
98.1978 122.374 li
cp
96.2661 121.438 mo
96.2661 120.893 96.6968 120.388 97.2422 120.388 cv
97.9619 120.388 98.1909 120.893 98.2246 121.438 cv
96.2661 121.438 li
cp
f
100.216 121.431 mo
100.216 120.92 100.566 120.489 101.118 120.489 cv
101.34 120.489 li
101.34 119.877 li
101.293 119.863 101.259 119.857 101.185 119.857 cv
100.741 119.857 100.432 120.133 100.196 120.543 cv
100.183 120.543 li
100.183 119.958 li
99.624 119.958 li
99.624 123.477 li
100.216 123.477 li
100.216 121.431 li
cp
f
104.987 121.896 mo
105.424 121.896 105.896 121.694 106.07 121.331 cv
106.084 121.344 li
105.936 122.568 105.593 123.114 104.947 123.114 cv
104.462 123.114 104.18 122.817 104.146 122.34 cv
103.554 122.34 li
103.554 122.797 103.85 123.605 104.96 123.605 cv
106.589 123.605 106.676 121.445 106.676 120.94 cv
106.676 120.173 106.528 118.747 105.021 118.747 cv
104.025 118.747 103.5 119.507 103.5 120.368 cv
103.5 121.31 104.112 121.896 104.987 121.896 cv
cp
105.075 121.364 mo
104.678 121.364 104.112 121.25 104.112 120.341 cv
104.112 119.708 104.476 119.278 105.027 119.278 cv
105.707 119.278 105.983 119.749 105.983 120.288 cv
105.983 121.223 105.384 121.364 105.075 121.364 cv
cp
f
79.3013 129.592 mo
82.1436 129.592 li
82.1436 128.898 li
79.3013 128.898 li
79.3013 127.122 li
82.5313 127.122 li
82.5313 126.427 li
78.5181 126.427 li
78.5181 132.225 li
79.3013 132.225 li
79.3013 129.592 li
cp
f
84.0088 126.427 mo
83.2983 126.427 li
83.2983 132.225 li
84.0088 132.225 li
84.0088 126.427 li
cp
f
85.7046 129.286 mo
85.7534 128.962 85.8662 128.47 86.6738 128.47 cv
87.3438 128.47 87.667 128.712 87.667 129.156 cv
87.667 129.576 87.4648 129.641 87.2954 129.657 cv
86.1245 129.802 li
84.9458 129.948 84.8408 130.771 84.8408 131.126 cv
84.8408 131.853 85.3896 132.346 86.165 132.346 cv
86.9888 132.346 87.4165 131.958 87.6909 131.66 cv
87.7153 131.982 87.812 132.305 88.4419 132.305 cv
88.6035 132.305 88.7085 132.257 88.8296 132.225 cv
88.8296 131.708 li
88.749 131.724 88.6602 131.74 88.5957 131.74 cv
88.4502 131.74 88.3613 131.667 88.3613 131.49 cv
88.3613 129.059 li
88.3613 127.977 87.1338 127.88 86.7949 127.88 cv
85.7534 127.88 85.083 128.276 85.0508 129.286 cv
85.7046 129.286 li
cp
87.6509 130.763 mo
87.6509 131.329 87.0049 131.756 86.3428 131.756 cv
85.8096 131.756 85.5757 131.482 85.5757 131.021 cv
85.5757 130.489 86.1328 130.384 86.48 130.335 cv
87.3599 130.222 87.5376 130.158 87.6509 130.069 cv
87.6509 130.763 li
cp
f
91.1147 128.591 mo
91.1147 128.001 li
90.4365 128.001 li
90.4365 126.823 li
89.7261 126.823 li
89.7261 128.001 li
89.1528 128.001 li
89.1528 128.591 li
89.7261 128.591 li
89.7261 131.377 li
89.7261 131.885 89.8794 132.281 90.582 132.281 cv
90.6548 132.281 90.8564 132.249 91.1147 132.225 cv
91.1147 131.667 li
90.8647 131.667 li
90.7192 131.667 90.4365 131.667 90.4365 131.336 cv
90.4365 128.591 li
91.1147 128.591 li
cp
f
92.5361 126.427 mo
91.8252 126.427 li
91.8252 132.225 li
92.5361 132.225 li
92.5361 126.427 li
cp
f
94.2319 129.286 mo
94.2803 128.962 94.3931 128.47 95.2007 128.47 cv
95.8711 128.47 96.1938 128.712 96.1938 129.156 cv
96.1938 129.576 95.9922 129.641 95.8223 129.657 cv
94.6514 129.802 li
93.4727 129.948 93.3677 130.771 93.3677 131.126 cv
93.3677 131.853 93.917 132.346 94.6919 132.346 cv
95.5156 132.346 95.9434 131.958 96.2183 131.66 cv
96.2422 131.982 96.3394 132.305 96.9692 132.305 cv
97.1304 132.305 97.2354 132.257 97.3564 132.225 cv
97.3564 131.708 li
97.2759 131.724 97.187 131.74 97.1226 131.74 cv
96.9771 131.74 96.8882 131.667 96.8882 131.49 cv
96.8882 129.059 li
96.8882 127.977 95.6611 127.88 95.3218 127.88 cv
94.2803 127.88 93.6099 128.276 93.5776 129.286 cv
94.2319 129.286 li
cp
96.1777 130.763 mo
96.1777 131.329 95.5317 131.756 94.8696 131.756 cv
94.3369 131.756 94.1025 131.482 94.1025 131.021 cv
94.1025 130.489 94.6597 130.384 95.0068 130.335 cv
95.8872 130.222 96.0649 130.158 96.1777 130.069 cv
96.1777 130.763 li
cp
f
101.531 129.35 mo
101.531 128.147 100.708 127.88 100.054 127.88 cv
99.3271 127.88 98.9312 128.373 98.7778 128.599 cv
98.7617 128.599 li
98.7617 128.001 li
98.0913 128.001 li
98.0913 132.225 li
98.8022 132.225 li
98.8022 129.923 li
98.8022 128.777 99.5127 128.518 99.9165 128.518 cv
100.611 128.518 100.821 128.89 100.821 129.625 cv
100.821 132.225 li
101.531 132.225 li
101.531 129.35 li
cp
f
106.085 126.427 mo
105.375 126.427 li
105.375 128.542 li
105.359 128.599 li
105.189 128.357 104.866 127.88 104.099 127.88 cv
102.977 127.88 102.339 128.801 102.339 129.988 cv
102.339 130.998 102.759 132.346 104.196 132.346 cv
104.608 132.346 105.092 132.216 105.399 131.643 cv
105.416 131.643 li
105.416 132.225 li
106.085 132.225 li
106.085 126.427 li
cp
103.074 130.101 mo
103.074 129.56 103.13 128.518 104.229 128.518 cv
105.254 128.518 105.367 129.625 105.367 130.311 cv
105.367 131.433 104.665 131.732 104.212 131.732 cv
103.437 131.732 103.074 131.03 103.074 130.101 cv
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
152.075 110.355 mo
213.982 110.355 li
216.955 110.355 219.366 112.766 219.366 115.739 cv
219.366 135.252 li
219.366 138.226 216.955 140.636 213.982 140.636 cv
152.075 140.636 li
149.103 140.636 146.692 138.226 146.692 135.252 cv
146.692 115.739 li
146.692 112.766 149.103 110.355 152.075 110.355 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
152.075 110.355 mo
213.982 110.355 li
216.955 110.355 219.366 112.766 219.366 115.739 cv
219.366 135.252 li
219.366 138.226 216.955 140.636 213.982 140.636 cv
152.075 140.636 li
149.103 140.636 146.692 138.226 146.692 135.252 cv
146.692 115.739 li
146.692 112.766 149.103 110.355 152.075 110.355 cv
cp
0 .938 1 0 cmyk
@
grestore
170.917 115.389 mo
170.823 114.581 170.177 113.807 168.932 113.807 cv
167.526 113.807 166.678 114.837 166.678 116.324 cv
166.678 118.181 167.755 118.895 168.852 118.895 cv
169.215 118.895 170.695 118.814 170.964 116.99 cv
170.332 116.99 li
170.11 118.114 169.376 118.316 168.953 118.316 cv
167.755 118.316 167.351 117.441 167.351 116.304 cv
167.351 115.032 168.058 114.386 168.932 114.386 cv
169.396 114.386 170.103 114.541 170.285 115.389 cv
170.917 115.389 li
cp
f
174.544 116.371 mo
174.544 115.369 173.858 115.146 173.313 115.146 cv
172.748 115.146 172.452 115.497 172.283 115.718 cv
172.27 115.718 li
172.27 113.935 li
171.678 113.935 li
171.678 118.767 li
172.27 118.767 li
172.27 116.849 li
172.27 115.96 172.768 115.678 173.252 115.678 cv
173.817 115.678 173.952 115.988 173.952 116.465 cv
173.952 118.767 li
174.544 118.767 li
174.544 116.371 li
cp
f
175.944 116.317 mo
175.984 116.048 176.079 115.638 176.751 115.638 cv
177.31 115.638 177.579 115.839 177.579 116.209 cv
177.579 116.56 177.411 116.613 177.27 116.627 cv
176.294 116.748 li
175.312 116.869 175.224 117.555 175.224 117.852 cv
175.224 118.457 175.682 118.868 176.328 118.868 cv
177.014 118.868 177.371 118.544 177.599 118.295 cv
177.62 118.565 177.7 118.834 178.225 118.834 cv
178.36 118.834 178.447 118.793 178.548 118.767 cv
178.548 118.336 li
178.481 118.35 178.407 118.363 178.353 118.363 cv
178.232 118.363 178.158 118.302 178.158 118.154 cv
178.158 116.129 li
178.158 115.227 177.135 115.146 176.853 115.146 cv
175.984 115.146 175.426 115.476 175.399 116.317 cv
175.944 116.317 li
cp
177.565 117.549 mo
177.565 118.02 177.027 118.376 176.476 118.376 cv
176.031 118.376 175.836 118.147 175.836 117.764 cv
175.836 117.32 176.3 117.232 176.59 117.192 cv
177.323 117.098 177.471 117.044 177.565 116.97 cv
177.565 117.549 li
cp
f
179.679 117.172 mo
179.679 116.6 179.773 115.678 180.627 115.678 cv
181.542 115.678 181.589 116.546 181.589 116.997 cv
181.589 117.771 181.287 118.356 180.641 118.356 cv
180.264 118.356 179.679 118.107 179.679 117.172 cv
cp
179.113 120.16 mo
179.706 120.16 li
179.706 118.396 li
179.719 118.396 li
179.874 118.646 180.183 118.868 180.654 118.868 cv
181.852 118.868 182.202 117.744 182.202 116.903 cv
182.202 115.914 181.67 115.146 180.735 115.146 cv
180.096 115.146 179.827 115.543 179.685 115.746 cv
179.672 115.746 li
179.672 115.248 li
179.113 115.248 li
179.113 120.16 li
cp
f
184.194 115.739 mo
184.194 115.248 li
183.628 115.248 li
183.628 114.265 li
183.036 114.265 li
183.036 115.248 li
182.559 115.248 li
182.559 115.739 li
183.036 115.739 li
183.036 118.06 li
183.036 118.484 183.164 118.814 183.75 118.814 cv
183.81 118.814 183.979 118.787 184.194 118.767 cv
184.194 118.302 li
183.985 118.302 li
183.864 118.302 183.628 118.302 183.628 118.026 cv
183.628 115.739 li
184.194 115.739 li
cp
f
187.168 117.663 mo
187.148 117.925 186.818 118.356 186.259 118.356 cv
185.58 118.356 185.237 117.932 185.237 117.199 cv
187.807 117.199 li
187.807 115.954 187.309 115.146 186.293 115.146 cv
185.129 115.146 184.604 116.015 184.604 117.104 cv
184.604 118.121 185.189 118.868 186.179 118.868 cv
186.744 118.868 186.973 118.733 187.134 118.625 cv
187.579 118.329 187.74 117.832 187.76 117.663 cv
187.168 117.663 li
cp
185.237 116.728 mo
185.237 116.183 185.667 115.678 186.212 115.678 cv
186.932 115.678 187.161 116.183 187.195 116.728 cv
185.237 116.728 li
cp
f
189.187 116.721 mo
189.187 116.209 189.537 115.779 190.088 115.779 cv
190.31 115.779 li
190.31 115.167 li
190.263 115.153 190.23 115.146 190.156 115.146 cv
189.711 115.146 189.402 115.422 189.167 115.833 cv
189.153 115.833 li
189.153 115.248 li
188.594 115.248 li
188.594 118.767 li
189.187 118.767 li
189.187 116.721 li
cp
f
194.603 114.036 mo
194.139 114.036 li
193.951 114.81 193.634 114.884 192.868 114.938 cv
192.868 115.409 li
193.971 115.409 li
193.971 118.767 li
194.603 118.767 li
194.603 114.036 li
cp
f
198.789 116.465 mo
198.789 117.65 198.479 118.363 197.799 118.363 cv
197.12 118.363 196.811 117.65 196.811 116.465 cv
196.811 115.281 197.12 114.568 197.799 114.568 cv
198.479 114.568 198.789 115.281 198.789 116.465 cv
cp
199.421 116.465 mo
199.421 115.483 199.159 114.036 197.799 114.036 cv
196.441 114.036 196.178 115.483 196.178 116.465 cv
196.178 117.448 196.441 118.895 197.799 118.895 cv
199.159 118.895 199.421 117.448 199.421 116.465 cv
cp
f
156.014 123.413 mo
155.982 122.774 155.78 121.563 153.753 121.563 cv
152.348 121.563 151.759 122.452 151.759 123.356 cv
151.759 124.365 152.615 124.632 152.994 124.72 cv
154.181 124.995 li
155.134 125.221 155.417 125.415 155.417 126.021 cv
155.417 126.852 154.464 126.998 153.898 126.998 cv
153.156 126.998 152.3 126.691 152.3 125.641 cv
151.565 125.641 li
151.565 126.182 151.662 126.667 152.154 127.111 cv
152.413 127.345 152.833 127.668 153.907 127.668 cv
154.9 127.668 156.175 127.288 156.175 125.916 cv
156.175 124.995 155.61 124.543 154.859 124.365 cv
153.204 123.986 li
152.865 123.905 152.518 123.744 152.518 123.251 cv
152.518 122.371 153.349 122.233 153.842 122.233 cv
154.496 122.233 155.239 122.516 155.279 123.413 cv
156.014 123.413 li
cp
f
159.955 126.19 mo
159.93 126.505 159.535 127.022 158.864 127.022 cv
158.049 127.022 157.637 126.513 157.637 125.633 cv
160.722 125.633 li
160.722 124.139 160.124 123.17 158.905 123.17 cv
157.508 123.17 156.878 124.212 156.878 125.52 cv
156.878 126.739 157.581 127.635 158.768 127.635 cv
159.446 127.635 159.72 127.474 159.914 127.345 cv
160.447 126.99 160.641 126.392 160.665 126.19 cv
159.955 126.19 li
cp
157.637 125.068 mo
157.637 124.414 158.154 123.808 158.808 123.808 cv
159.672 123.808 159.946 124.414 159.987 125.068 cv
157.637 125.068 li
cp
f
162.296 121.717 mo
161.585 121.717 li
161.585 127.514 li
162.296 127.514 li
162.296 121.717 li
cp
f
164.953 123.881 mo
164.953 123.292 li
164.242 123.292 li
164.242 122.766 li
164.242 122.427 164.355 122.274 164.662 122.274 cv
164.751 122.274 164.864 122.282 164.953 122.29 cv
164.953 121.652 li
164.84 121.644 164.735 121.636 164.63 121.636 cv
163.936 121.636 163.532 121.927 163.532 122.564 cv
163.532 123.292 li
162.95 123.292 li
162.95 123.881 li
163.532 123.881 li
163.532 127.514 li
164.242 127.514 li
164.242 123.881 li
164.953 123.881 li
cp
f
167.416 124.914 mo
165.438 124.914 li
165.438 125.641 li
167.416 125.641 li
167.416 124.914 li
cp
f
171.38 124.495 mo
171.38 124.285 171.275 123.17 169.766 123.17 cv
168.934 123.17 168.167 123.59 168.167 124.519 cv
168.167 125.1 168.554 125.399 169.144 125.544 cv
169.967 125.746 li
170.573 125.899 170.807 126.012 170.807 126.352 cv
170.807 126.82 170.347 127.022 169.838 127.022 cv
168.837 127.022 168.74 126.489 168.716 126.158 cv
168.029 126.158 li
168.054 126.667 168.175 127.635 169.846 127.635 cv
170.799 127.635 171.518 127.111 171.518 126.239 cv
171.518 125.665 171.211 125.342 170.331 125.124 cv
169.62 124.947 li
169.071 124.809 168.853 124.729 168.853 124.381 cv
168.853 123.856 169.475 123.784 169.693 123.784 cv
170.589 123.784 170.686 124.228 170.694 124.495 cv
171.38 124.495 li
cp
f
173.06 123.292 mo
172.349 123.292 li
172.349 127.514 li
173.06 127.514 li
173.06 123.292 li
cp
173.06 122.524 mo
173.06 121.717 li
172.349 121.717 li
172.349 122.524 li
173.06 122.524 li
cp
f
174.126 127.514 mo
174.836 127.514 li
174.836 125.213 li
174.836 124.066 175.547 123.808 175.951 123.808 cv
176.476 123.808 176.613 124.236 176.613 124.591 cv
176.613 127.514 li
177.323 127.514 li
177.323 124.938 li
177.323 124.373 177.719 123.808 178.317 123.808 cv
178.922 123.808 179.1 124.204 179.1 124.785 cv
179.1 127.514 li
179.811 127.514 li
179.811 124.591 li
179.811 123.404 178.955 123.17 178.502 123.17 cv
177.848 123.17 177.566 123.461 177.21 123.856 cv
177.089 123.63 176.847 123.17 176.088 123.17 cv
175.329 123.17 174.965 123.663 174.812 123.889 cv
174.796 123.889 li
174.796 123.292 li
174.126 123.292 li
174.126 127.514 li
cp
f
181.579 123.292 mo
180.868 123.292 li
180.868 127.514 li
181.579 127.514 li
181.579 123.292 li
cp
181.579 122.524 mo
181.579 121.717 li
180.868 121.717 li
180.868 122.524 li
181.579 122.524 li
cp
f
183.372 121.717 mo
182.661 121.717 li
182.661 127.514 li
183.372 127.514 li
183.372 121.717 li
cp
f
185.067 124.575 mo
185.116 124.252 185.229 123.76 186.036 123.76 cv
186.707 123.76 187.029 124.002 187.029 124.446 cv
187.029 124.866 186.828 124.93 186.658 124.947 cv
185.487 125.092 li
184.308 125.237 184.203 126.061 184.203 126.416 cv
184.203 127.143 184.752 127.635 185.527 127.635 cv
186.351 127.635 186.779 127.248 187.054 126.949 cv
187.078 127.272 187.175 127.595 187.805 127.595 cv
187.966 127.595 188.071 127.546 188.192 127.514 cv
188.192 126.998 li
188.112 127.014 188.023 127.03 187.958 127.03 cv
187.813 127.03 187.724 126.957 187.724 126.78 cv
187.724 124.349 li
187.724 123.267 186.497 123.17 186.157 123.17 cv
185.116 123.17 184.445 123.566 184.413 124.575 cv
185.067 124.575 li
cp
187.013 126.053 mo
187.013 126.618 186.367 127.046 185.705 127.046 cv
185.172 127.046 184.938 126.771 184.938 126.311 cv
184.938 125.778 185.495 125.673 185.842 125.625 cv
186.723 125.512 186.9 125.447 187.013 125.358 cv
187.013 126.053 li
cp
f
189.735 125.06 mo
189.735 124.446 190.155 123.929 190.817 123.929 cv
191.083 123.929 li
191.083 123.194 li
191.026 123.178 190.986 123.17 190.897 123.17 cv
190.364 123.17 189.993 123.501 189.71 123.994 cv
189.694 123.994 li
189.694 123.292 li
189.024 123.292 li
189.024 127.514 li
189.735 127.514 li
189.735 125.06 li
cp
f
192.342 123.292 mo
191.632 123.292 li
191.632 127.514 li
192.342 127.514 li
192.342 123.292 li
cp
192.342 122.524 mo
192.342 121.717 li
191.632 121.717 li
191.632 122.524 li
192.342 122.524 li
cp
f
194.958 123.881 mo
194.958 123.292 li
194.281 123.292 li
194.281 122.112 li
193.57 122.112 li
193.57 123.292 li
192.997 123.292 li
192.997 123.881 li
193.57 123.881 li
193.57 126.667 li
193.57 127.175 193.723 127.571 194.426 127.571 cv
194.499 127.571 194.701 127.539 194.958 127.514 cv
194.958 126.957 li
194.708 126.957 li
194.563 126.957 194.281 126.957 194.281 126.626 cv
194.281 123.881 li
194.958 123.881 li
cp
f
197.164 126.731 mo
197.147 126.731 li
196.025 123.292 li
195.217 123.292 li
196.784 127.627 li
196.445 128.5 196.404 128.604 196.033 128.604 cv
195.839 128.604 195.694 128.564 195.605 128.532 cv
195.605 129.178 li
195.718 129.21 195.798 129.242 195.904 129.242 cv
196.816 129.242 196.889 129.146 197.559 127.434 cv
198.1 126.053 198.584 124.672 199.077 123.292 cv
198.293 123.292 li
197.164 126.731 li
cp
f
202.565 124.575 mo
202.614 124.252 202.727 123.76 203.535 123.76 cv
204.205 123.76 204.528 124.002 204.528 124.446 cv
204.528 124.866 204.326 124.93 204.156 124.947 cv
202.985 125.092 li
201.806 125.237 201.702 126.061 201.702 126.416 cv
201.702 127.143 202.25 127.635 203.026 127.635 cv
203.849 127.635 204.277 127.248 204.551 126.949 cv
204.576 127.272 204.672 127.595 205.302 127.595 cv
205.464 127.595 205.569 127.546 205.69 127.514 cv
205.69 126.998 li
205.61 127.014 205.521 127.03 205.456 127.03 cv
205.311 127.03 205.222 126.957 205.222 126.78 cv
205.222 124.349 li
205.222 123.267 203.995 123.17 203.656 123.17 cv
202.614 123.17 201.944 123.566 201.912 124.575 cv
202.565 124.575 li
cp
204.511 126.053 mo
204.511 126.618 203.866 127.046 203.204 127.046 cv
202.67 127.046 202.436 126.771 202.436 126.311 cv
202.436 125.778 202.994 125.673 203.34 125.625 cv
204.22 125.512 204.398 125.447 204.511 125.358 cv
204.511 126.053 li
cp
f
209.865 124.64 mo
209.865 123.437 209.042 123.17 208.387 123.17 cv
207.661 123.17 207.265 123.663 207.112 123.889 cv
207.095 123.889 li
207.095 123.292 li
206.425 123.292 li
206.425 127.514 li
207.135 127.514 li
207.135 125.213 li
207.135 124.066 207.846 123.808 208.25 123.808 cv
208.944 123.808 209.155 124.179 209.155 124.914 cv
209.155 127.514 li
209.865 127.514 li
209.865 124.64 li
cp
f
214.419 121.717 mo
213.708 121.717 li
213.708 123.833 li
213.692 123.889 li
213.523 123.646 213.2 123.17 212.433 123.17 cv
211.31 123.17 210.672 124.091 210.672 125.278 cv
210.672 126.287 211.092 127.635 212.53 127.635 cv
212.941 127.635 213.426 127.506 213.733 126.933 cv
213.749 126.933 li
213.749 127.514 li
214.419 127.514 li
214.419 121.717 li
cp
211.407 125.391 mo
211.407 124.85 211.463 123.808 212.562 123.808 cv
213.587 123.808 213.701 124.914 213.701 125.601 cv
213.701 126.723 212.998 127.022 212.545 127.022 cv
211.77 127.022 211.407 126.319 211.407 125.391 cv
cp
f
167.755 134.483 mo
167.755 133.869 168.175 133.353 168.837 133.353 cv
169.103 133.353 li
169.103 132.618 li
169.047 132.602 169.006 132.593 168.917 132.593 cv
168.385 132.593 168.013 132.924 167.73 133.417 cv
167.714 133.417 li
167.714 132.714 li
167.044 132.714 li
167.044 136.938 li
167.755 136.938 li
167.755 134.483 li
cp
f
172.511 135.613 mo
172.487 135.928 172.091 136.445 171.421 136.445 cv
170.605 136.445 170.193 135.937 170.193 135.056 cv
173.278 135.056 li
173.278 133.563 172.68 132.593 171.461 132.593 cv
170.064 132.593 169.434 133.635 169.434 134.943 cv
169.434 136.163 170.137 137.059 171.324 137.059 cv
172.002 137.059 172.277 136.897 172.47 136.768 cv
173.003 136.413 173.197 135.815 173.221 135.613 cv
172.511 135.613 li
cp
170.193 134.491 mo
170.193 133.837 170.71 133.231 171.364 133.231 cv
172.228 133.231 172.503 133.837 172.543 134.491 cv
170.193 134.491 li
cp
f
177.453 134.136 mo
177.396 133.401 176.976 132.593 175.87 132.593 cv
174.473 132.593 173.843 133.635 173.843 134.943 cv
173.843 136.163 174.546 137.059 175.733 137.059 cv
176.968 137.059 177.38 136.114 177.453 135.444 cv
176.766 135.444 li
176.645 136.09 176.233 136.445 175.757 136.445 cv
174.78 136.445 174.602 135.549 174.602 134.822 cv
174.602 134.071 174.885 133.231 175.765 133.231 cv
176.362 133.231 176.677 133.57 176.766 134.136 cv
177.453 134.136 li
cp
f
181.587 136.938 mo
181.587 132.714 li
180.876 132.714 li
180.876 135.04 li
180.876 135.654 180.61 136.445 179.713 136.445 cv
179.253 136.445 178.898 136.211 178.898 135.517 cv
178.898 132.714 li
178.188 132.714 li
178.188 135.75 li
178.188 136.76 178.938 137.059 179.56 137.059 cv
180.238 137.059 180.602 136.8 180.9 136.308 cv
180.917 136.324 li
180.917 136.938 li
181.587 136.938 li
cp
f
183.46 134.483 mo
183.46 133.869 183.88 133.353 184.542 133.353 cv
184.809 133.353 li
184.809 132.618 li
184.752 132.602 184.712 132.593 184.623 132.593 cv
184.09 132.593 183.719 132.924 183.436 133.417 cv
183.42 133.417 li
183.42 132.714 li
182.75 132.714 li
182.75 136.938 li
183.46 136.938 li
183.46 134.483 li
cp
f
188.426 133.917 mo
188.426 133.708 188.321 132.593 186.812 132.593 cv
185.979 132.593 185.212 133.013 185.212 133.942 cv
185.212 134.523 185.6 134.822 186.189 134.967 cv
187.013 135.169 li
187.619 135.323 187.853 135.436 187.853 135.775 cv
187.853 136.243 187.393 136.445 186.884 136.445 cv
185.883 136.445 185.786 135.912 185.762 135.581 cv
185.075 135.581 li
185.1 136.09 185.221 137.059 186.892 137.059 cv
187.845 137.059 188.564 136.534 188.564 135.662 cv
188.564 135.088 188.256 134.766 187.376 134.547 cv
186.666 134.37 li
186.117 134.232 185.899 134.152 185.899 133.805 cv
185.899 133.28 186.521 133.207 186.739 133.207 cv
187.635 133.207 187.732 133.651 187.74 133.917 cv
188.426 133.917 li
cp
f
190.106 132.714 mo
189.395 132.714 li
189.395 136.938 li
190.106 136.938 li
190.106 132.714 li
cp
190.106 131.947 mo
190.106 131.14 li
189.395 131.14 li
189.395 131.947 li
190.106 131.947 li
cp
f
190.929 134.822 mo
190.929 135.912 191.543 137.051 192.892 137.051 cv
194.24 137.051 194.854 135.912 194.854 134.822 cv
194.854 133.732 194.24 132.593 192.892 132.593 cv
191.543 132.593 190.929 133.732 190.929 134.822 cv
cp
191.665 134.822 mo
191.665 134.257 191.875 133.207 192.892 133.207 cv
193.909 133.207 194.119 134.257 194.119 134.822 cv
194.119 135.387 193.909 136.437 192.892 136.437 cv
191.875 136.437 191.665 135.387 191.665 134.822 cv
cp
f
199.101 134.063 mo
199.101 132.86 198.278 132.593 197.624 132.593 cv
196.897 132.593 196.501 133.086 196.348 133.312 cv
196.332 133.312 li
196.332 132.714 li
195.662 132.714 li
195.662 136.938 li
196.372 136.938 li
196.372 134.636 li
196.372 133.49 197.083 133.231 197.486 133.231 cv
198.18 133.231 198.39 133.603 198.39 134.337 cv
198.39 136.938 li
199.101 136.938 li
199.101 134.063 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
242.917 110.355 mo
304.824 110.355 li
307.796 110.355 310.207 112.766 310.207 115.739 cv
310.207 135.252 li
310.207 138.226 307.796 140.636 304.824 140.636 cv
242.917 140.636 li
239.944 140.636 237.534 138.226 237.534 135.252 cv
237.534 115.739 li
237.534 112.766 239.944 110.355 242.917 110.355 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
242.917 110.355 mo
304.824 110.355 li
307.796 110.355 310.207 112.766 310.207 115.739 cv
310.207 135.252 li
310.207 138.226 307.796 140.636 304.824 140.636 cv
242.917 140.636 li
239.944 140.636 237.534 138.226 237.534 135.252 cv
237.534 115.739 li
237.534 112.766 239.944 110.355 242.917 110.355 cv
cp
0 .938 1 0 cmyk
@
grestore
262.007 120.099 mo
261.913 119.292 261.267 118.518 260.022 118.518 cv
258.616 118.518 257.768 119.547 257.768 121.034 cv
257.768 122.892 258.844 123.605 259.941 123.605 cv
260.304 123.605 261.785 123.524 262.054 121.701 cv
261.421 121.701 li
261.2 122.824 260.466 123.026 260.042 123.026 cv
258.844 123.026 258.441 122.151 258.441 121.014 cv
258.441 119.742 259.147 119.096 260.022 119.096 cv
260.486 119.096 261.193 119.251 261.375 120.099 cv
262.007 120.099 li
cp
f
265.634 121.082 mo
265.634 120.079 264.948 119.857 264.403 119.857 cv
263.837 119.857 263.542 120.207 263.373 120.429 cv
263.36 120.429 li
263.36 118.646 li
262.767 118.646 li
262.767 123.477 li
263.36 123.477 li
263.36 121.559 li
263.36 120.671 263.858 120.388 264.342 120.388 cv
264.907 120.388 265.042 120.698 265.042 121.176 cv
265.042 123.477 li
265.634 123.477 li
265.634 121.082 li
cp
f
267.034 121.028 mo
267.074 120.758 267.168 120.348 267.841 120.348 cv
268.4 120.348 268.668 120.55 268.668 120.92 cv
268.668 121.27 268.5 121.324 268.359 121.337 cv
267.383 121.458 li
266.401 121.58 266.314 122.266 266.314 122.562 cv
266.314 123.167 266.771 123.578 267.417 123.578 cv
268.103 123.578 268.46 123.255 268.689 123.006 cv
268.709 123.275 268.79 123.544 269.315 123.544 cv
269.45 123.544 269.537 123.504 269.637 123.477 cv
269.637 123.046 li
269.571 123.06 269.497 123.073 269.443 123.073 cv
269.322 123.073 269.248 123.013 269.248 122.865 cv
269.248 120.839 li
269.248 119.938 268.224 119.857 267.942 119.857 cv
267.074 119.857 266.515 120.187 266.489 121.028 cv
267.034 121.028 li
cp
268.655 122.259 mo
268.655 122.73 268.117 123.086 267.565 123.086 cv
267.121 123.086 266.926 122.858 266.926 122.474 cv
266.926 122.03 267.39 121.943 267.679 121.902 cv
268.413 121.808 268.561 121.754 268.655 121.68 cv
268.655 122.259 li
cp
f
270.768 121.882 mo
270.768 121.31 270.863 120.388 271.717 120.388 cv
272.632 120.388 272.679 121.256 272.679 121.707 cv
272.679 122.481 272.376 123.066 271.73 123.066 cv
271.354 123.066 270.768 122.817 270.768 121.882 cv
cp
270.203 124.87 mo
270.795 124.87 li
270.795 123.107 li
270.808 123.107 li
270.963 123.356 271.273 123.578 271.744 123.578 cv
272.942 123.578 273.292 122.454 273.292 121.613 cv
273.292 120.624 272.76 119.857 271.825 119.857 cv
271.185 119.857 270.917 120.254 270.775 120.456 cv
270.761 120.456 li
270.761 119.958 li
270.203 119.958 li
270.203 124.87 li
cp
f
275.284 120.449 mo
275.284 119.958 li
274.718 119.958 li
274.718 118.975 li
274.125 118.975 li
274.125 119.958 li
273.648 119.958 li
273.648 120.449 li
274.125 120.449 li
274.125 122.771 li
274.125 123.194 274.253 123.524 274.839 123.524 cv
274.9 123.524 275.068 123.497 275.284 123.477 cv
275.284 123.013 li
275.075 123.013 li
274.954 123.013 274.718 123.013 274.718 122.737 cv
274.718 120.449 li
275.284 120.449 li
cp
f
278.257 122.374 mo
278.237 122.636 277.908 123.066 277.349 123.066 cv
276.669 123.066 276.327 122.643 276.327 121.909 cv
278.897 121.909 li
278.897 120.664 278.399 119.857 277.382 119.857 cv
276.218 119.857 275.694 120.725 275.694 121.815 cv
275.694 122.831 276.279 123.578 277.268 123.578 cv
277.833 123.578 278.062 123.443 278.224 123.335 cv
278.668 123.04 278.83 122.542 278.85 122.374 cv
278.257 122.374 li
cp
276.327 121.438 mo
276.327 120.893 276.757 120.388 277.302 120.388 cv
278.022 120.388 278.25 120.893 278.285 121.438 cv
276.327 121.438 li
cp
f
280.276 121.431 mo
280.276 120.92 280.626 120.489 281.178 120.489 cv
281.4 120.489 li
281.4 119.877 li
281.353 119.863 281.319 119.857 281.246 119.857 cv
280.801 119.857 280.492 120.133 280.256 120.543 cv
280.243 120.543 li
280.243 119.958 li
279.684 119.958 li
279.684 123.477 li
280.276 123.477 li
280.276 121.431 li
cp
f
285.693 118.747 mo
285.229 118.747 li
285.041 119.521 284.724 119.594 283.957 119.648 cv
283.957 120.119 li
285.06 120.119 li
285.06 123.477 li
285.693 123.477 li
285.693 118.747 li
cp
f
288.943 118.747 mo
288.479 118.747 li
288.291 119.521 287.974 119.594 287.208 119.648 cv
287.208 120.119 li
288.311 120.119 li
288.311 123.477 li
288.943 123.477 li
288.943 118.747 li
cp
f
250.526 129.326 mo
250.526 130.69 249.767 131.684 248.507 131.684 cv
247.248 131.684 246.489 130.69 246.489 129.326 cv
246.489 127.961 247.248 126.968 248.507 126.968 cv
249.767 126.968 250.526 127.961 250.526 129.326 cv
cp
251.333 129.326 mo
251.333 128.074 250.671 126.273 248.507 126.273 cv
246.343 126.273 245.681 128.074 245.681 129.326 cv
245.681 130.578 246.343 132.378 248.507 132.378 cv
250.671 132.378 251.333 130.578 251.333 129.326 cv
cp
f
252.981 129.77 mo
252.981 129.156 253.4 128.639 254.063 128.639 cv
254.329 128.639 li
254.329 127.905 li
254.272 127.889 254.232 127.88 254.143 127.88 cv
253.61 127.88 253.239 128.211 252.957 128.704 cv
252.94 128.704 li
252.94 128.001 li
252.27 128.001 li
252.27 132.225 li
252.981 132.225 li
252.981 129.77 li
cp
f
255.395 130.101 mo
255.395 129.56 255.452 128.518 256.549 128.518 cv
257.575 128.518 257.688 129.625 257.688 130.311 cv
257.688 131.433 256.986 131.732 256.534 131.732 cv
255.758 131.732 255.395 131.03 255.395 130.101 cv
cp
258.367 128.001 mo
257.696 128.001 li
257.696 128.599 li
257.68 128.599 li
257.51 128.357 257.187 127.88 256.42 127.88 cv
255.298 127.88 254.66 128.801 254.66 129.988 cv
254.66 130.998 255.08 132.346 256.517 132.346 cv
257.083 132.346 257.454 132.079 257.639 131.781 cv
257.639 131.748 li
257.656 131.748 li
257.656 131.926 li
257.656 132.426 257.68 133.412 256.453 133.412 cv
256.283 133.412 255.629 133.412 255.5 132.742 cv
254.79 132.742 li
254.926 133.864 255.904 134.001 256.404 134.001 cv
258.358 134.001 258.367 132.483 258.367 131.877 cv
258.367 128.001 li
cp
f
259.981 129.286 mo
260.03 128.962 260.143 128.47 260.951 128.47 cv
261.621 128.47 261.944 128.712 261.944 129.156 cv
261.944 129.576 261.742 129.641 261.572 129.657 cv
260.401 129.802 li
259.222 129.948 259.118 130.771 259.118 131.126 cv
259.118 131.853 259.667 132.346 260.442 132.346 cv
261.265 132.346 261.693 131.958 261.967 131.66 cv
261.992 131.982 262.088 132.305 262.718 132.305 cv
262.88 132.305 262.985 132.257 263.106 132.225 cv
263.106 131.708 li
263.026 131.724 262.937 131.74 262.873 131.74 cv
262.727 131.74 262.638 131.667 262.638 131.49 cv
262.638 129.059 li
262.638 127.977 261.411 127.88 261.072 127.88 cv
260.03 127.88 259.36 128.276 259.328 129.286 cv
259.981 129.286 li
cp
261.927 130.763 mo
261.927 131.329 261.282 131.756 260.62 131.756 cv
260.086 131.756 259.852 131.482 259.852 131.021 cv
259.852 130.489 260.41 130.384 260.756 130.335 cv
261.636 130.222 261.814 130.158 261.927 130.069 cv
261.927 130.763 li
cp
f
267.281 129.35 mo
267.281 128.147 266.458 127.88 265.803 127.88 cv
265.077 127.88 264.681 128.373 264.528 128.599 cv
264.511 128.599 li
264.511 128.001 li
263.841 128.001 li
263.841 132.225 li
264.551 132.225 li
264.551 129.923 li
264.551 128.777 265.262 128.518 265.666 128.518 cv
266.361 128.518 266.571 128.89 266.571 129.625 cv
266.571 132.225 li
267.281 132.225 li
267.281 129.35 li
cp
f
269.057 128.001 mo
268.347 128.001 li
268.347 132.225 li
269.057 132.225 li
269.057 128.001 li
cp
269.057 127.234 mo
269.057 126.427 li
268.347 126.427 li
268.347 127.234 li
269.057 127.234 li
cp
f
273.313 128.583 mo
273.313 128.001 li
270.042 128.001 li
270.042 128.591 li
272.392 128.591 li
269.849 131.667 li
269.849 132.225 li
273.385 132.225 li
273.385 131.635 li
270.793 131.635 li
273.313 128.583 li
cp
f
274.887 128.001 mo
274.177 128.001 li
274.177 132.225 li
274.887 132.225 li
274.887 128.001 li
cp
274.887 127.234 mo
274.887 126.427 li
274.177 126.427 li
274.177 127.234 li
274.887 127.234 li
cp
f
279.393 129.35 mo
279.393 128.147 278.57 127.88 277.916 127.88 cv
277.189 127.88 276.793 128.373 276.639 128.599 cv
276.624 128.599 li
276.624 128.001 li
275.954 128.001 li
275.954 132.225 li
276.664 132.225 li
276.664 129.923 li
276.664 128.777 277.375 128.518 277.778 128.518 cv
278.472 128.518 278.682 128.89 278.682 129.625 cv
278.682 132.225 li
279.393 132.225 li
279.393 129.35 li
cp
f
280.976 130.101 mo
280.976 129.56 281.033 128.518 282.13 128.518 cv
283.156 128.518 283.269 129.625 283.269 130.311 cv
283.269 131.433 282.567 131.732 282.115 131.732 cv
281.339 131.732 280.976 131.03 280.976 130.101 cv
cp
283.948 128.001 mo
283.277 128.001 li
283.277 128.599 li
283.261 128.599 li
283.091 128.357 282.768 127.88 282.001 127.88 cv
280.879 127.88 280.241 128.801 280.241 129.988 cv
280.241 130.998 280.661 132.346 282.098 132.346 cv
282.664 132.346 283.035 132.079 283.22 131.781 cv
283.22 131.748 li
283.237 131.748 li
283.237 131.926 li
283.237 132.426 283.261 133.412 282.034 133.412 cv
281.864 133.412 281.209 133.412 281.081 132.742 cv
280.371 132.742 li
280.507 133.864 281.485 134.001 281.985 134.001 cv
283.939 134.001 283.948 132.483 283.948 131.877 cv
283.948 128.001 li
cp
f
290.682 126.427 mo
289.971 126.427 li
289.971 128.542 li
289.955 128.599 li
289.786 128.357 289.462 127.88 288.696 127.88 cv
287.573 127.88 286.935 128.801 286.935 129.988 cv
286.935 130.998 287.355 132.346 288.792 132.346 cv
289.204 132.346 289.689 132.216 289.996 131.643 cv
290.011 131.643 li
290.011 132.225 li
290.682 132.225 li
290.682 126.427 li
cp
287.669 130.101 mo
287.669 129.56 287.726 128.518 288.825 128.518 cv
289.85 128.518 289.963 129.625 289.963 130.311 cv
289.963 131.433 289.26 131.732 288.808 131.732 cv
288.033 131.732 287.669 131.03 287.669 130.101 cv
cp
f
292.296 129.286 mo
292.345 128.962 292.458 128.47 293.266 128.47 cv
293.936 128.47 294.259 128.712 294.259 129.156 cv
294.259 129.576 294.057 129.641 293.887 129.657 cv
292.716 129.802 li
291.538 129.948 291.433 130.771 291.433 131.126 cv
291.433 131.853 291.982 132.346 292.757 132.346 cv
293.581 132.346 294.008 131.958 294.283 131.66 cv
294.307 131.982 294.404 132.305 295.034 132.305 cv
295.196 132.305 295.3 132.257 295.421 132.225 cv
295.421 131.708 li
295.341 131.724 295.252 131.74 295.187 131.74 cv
295.042 131.74 294.954 131.667 294.954 131.49 cv
294.954 129.059 li
294.954 127.977 293.726 127.88 293.387 127.88 cv
292.345 127.88 291.675 128.276 291.643 129.286 cv
292.296 129.286 li
cp
294.243 130.763 mo
294.243 131.329 293.597 131.756 292.934 131.756 cv
292.402 131.756 292.167 131.482 292.167 131.021 cv
292.167 130.489 292.725 130.384 293.072 130.335 cv
293.952 130.222 294.129 130.158 294.243 130.069 cv
294.243 130.763 li
cp
f
297.707 128.591 mo
297.707 128.001 li
297.029 128.001 li
297.029 126.823 li
296.318 126.823 li
296.318 128.001 li
295.745 128.001 li
295.745 128.591 li
296.318 128.591 li
296.318 131.377 li
296.318 131.885 296.471 132.281 297.174 132.281 cv
297.247 132.281 297.449 132.249 297.707 132.225 cv
297.707 131.667 li
297.457 131.667 li
297.311 131.667 297.029 131.667 297.029 131.336 cv
297.029 128.591 li
297.707 128.591 li
cp
f
299.031 129.286 mo
299.08 128.962 299.193 128.47 300 128.47 cv
300.67 128.47 300.994 128.712 300.994 129.156 cv
300.994 129.576 300.792 129.641 300.622 129.657 cv
299.451 129.802 li
298.272 129.948 298.167 130.771 298.167 131.126 cv
298.167 131.853 298.716 132.346 299.492 132.346 cv
300.315 132.346 300.743 131.958 301.017 131.66 cv
301.042 131.982 301.138 132.305 301.768 132.305 cv
301.93 132.305 302.035 132.257 302.156 132.225 cv
302.156 131.708 li
302.076 131.724 301.987 131.74 301.921 131.74 cv
301.777 131.74 301.688 131.667 301.688 131.49 cv
301.688 129.059 li
301.688 127.977 300.46 127.88 300.122 127.88 cv
299.08 127.88 298.41 128.276 298.377 129.286 cv
299.031 129.286 li
cp
300.977 130.763 mo
300.977 131.329 300.332 131.756 299.669 131.756 cv
299.136 131.756 298.902 131.482 298.902 131.021 cv
298.902 130.489 299.459 130.384 299.806 130.335 cv
300.686 130.222 300.864 130.158 300.977 130.069 cv
300.977 130.763 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
61.2339 158.805 mo
123.141 158.805 li
126.114 158.805 128.524 161.215 128.524 164.188 cv
128.524 183.701 li
128.524 186.674 126.114 189.084 123.141 189.084 cv
61.2339 189.084 li
58.2607 189.084 55.8506 186.674 55.8506 183.701 cv
55.8506 164.188 li
55.8506 161.215 58.2607 158.805 61.2339 158.805 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
61.2339 158.805 mo
123.141 158.805 li
126.114 158.805 128.524 161.215 128.524 164.188 cv
128.524 183.701 li
128.524 186.674 126.114 189.084 123.141 189.084 cv
61.2339 189.084 li
58.2607 189.084 55.8506 186.674 55.8506 183.701 cv
55.8506 164.188 li
55.8506 161.215 58.2607 158.805 61.2339 158.805 cv
cp
0 .938 1 0 cmyk
@
grestore
80.0757 168.548 mo
79.9814 167.74 79.3354 166.967 78.0908 166.967 cv
76.6846 166.967 75.8364 167.996 75.8364 169.482 cv
75.8364 171.34 76.9131 172.054 78.0103 172.054 cv
78.3735 172.054 79.854 171.973 80.123 170.149 cv
79.4902 170.149 li
79.2686 171.273 78.5347 171.475 78.1108 171.475 cv
76.9131 171.475 76.5093 170.6 76.5093 169.463 cv
76.5093 168.191 77.2158 167.545 78.0908 167.545 cv
78.5552 167.545 79.2617 167.699 79.4434 168.548 cv
80.0757 168.548 li
cp
f
83.7026 169.53 mo
83.7026 168.527 83.0166 168.306 82.4712 168.306 cv
81.9063 168.306 81.6099 168.655 81.4419 168.877 cv
81.4282 168.877 li
81.4282 167.094 li
80.8364 167.094 li
80.8364 171.926 li
81.4282 171.926 li
81.4282 170.008 li
81.4282 169.119 81.9263 168.838 82.4106 168.838 cv
82.9761 168.838 83.1108 169.146 83.1108 169.625 cv
83.1108 171.926 li
83.7026 171.926 li
83.7026 169.53 li
cp
f
85.1025 169.477 mo
85.1426 169.207 85.2368 168.797 85.9097 168.797 cv
86.4683 168.797 86.7378 168.998 86.7378 169.369 cv
86.7378 169.719 86.5693 169.772 86.4282 169.786 cv
85.4521 169.907 li
84.4697 170.028 84.3823 170.715 84.3823 171.011 cv
84.3823 171.616 84.8398 172.027 85.4858 172.027 cv
86.1724 172.027 86.5288 171.703 86.7578 171.455 cv
86.7778 171.725 86.8589 171.993 87.3833 171.993 cv
87.5181 171.993 87.6055 171.953 87.7065 171.926 cv
87.7065 171.495 li
87.6392 171.508 87.5654 171.521 87.5112 171.521 cv
87.3901 171.521 87.3164 171.461 87.3164 171.313 cv
87.3164 169.288 li
87.3164 168.387 86.2935 168.306 86.0107 168.306 cv
85.1426 168.306 84.5845 168.635 84.5571 169.477 cv
85.1025 169.477 li
cp
86.7241 170.708 mo
86.7241 171.179 86.186 171.535 85.6338 171.535 cv
85.1899 171.535 84.9946 171.307 84.9946 170.924 cv
84.9946 170.479 85.459 170.392 85.7485 170.352 cv
86.4819 170.257 86.6299 170.203 86.7241 170.129 cv
86.7241 170.708 li
cp
f
88.8369 170.331 mo
88.8369 169.76 88.9312 168.838 89.7856 168.838 cv
90.7012 168.838 90.748 169.705 90.748 170.156 cv
90.748 170.93 90.4453 171.516 89.7993 171.516 cv
89.4224 171.516 88.8369 171.266 88.8369 170.331 cv
cp
88.272 173.318 mo
88.8638 173.318 li
88.8638 171.556 li
88.8774 171.556 li
89.0322 171.805 89.3418 172.027 89.8125 172.027 cv
91.0103 172.027 91.3604 170.902 91.3604 170.063 cv
91.3604 169.072 90.8286 168.306 89.8936 168.306 cv
89.2544 168.306 88.9849 168.703 88.8438 168.904 cv
88.8301 168.904 li
88.8301 168.406 li
88.272 168.406 li
88.272 173.318 li
cp
f
93.3521 168.898 mo
93.3521 168.406 li
92.7871 168.406 li
92.7871 167.424 li
92.1948 167.424 li
92.1948 168.406 li
91.7168 168.406 li
91.7168 168.898 li
92.1948 168.898 li
92.1948 171.219 li
92.1948 171.643 92.3228 171.973 92.9082 171.973 cv
92.9688 171.973 93.1367 171.945 93.3521 171.926 cv
93.3521 171.461 li
93.1436 171.461 li
93.0225 171.461 92.7871 171.461 92.7871 171.186 cv
92.7871 168.898 li
93.3521 168.898 li
cp
f
96.3262 170.822 mo
96.3062 171.084 95.9766 171.516 95.418 171.516 cv
94.7383 171.516 94.395 171.092 94.395 170.357 cv
96.9658 170.357 li
96.9658 169.113 96.4678 168.306 95.4517 168.306 cv
94.2876 168.306 93.7627 169.174 93.7627 170.264 cv
93.7627 171.279 94.3481 172.027 95.3374 172.027 cv
95.9023 172.027 96.1313 171.893 96.293 171.785 cv
96.7368 171.488 96.8984 170.99 96.9185 170.822 cv
96.3262 170.822 li
cp
94.395 169.887 mo
94.395 169.342 94.8257 168.838 95.3711 168.838 cv
96.0908 168.838 96.3198 169.342 96.3535 169.887 cv
94.395 169.887 li
cp
f
98.3452 169.881 mo
98.3452 169.369 98.6948 168.938 99.2466 168.938 cv
99.4688 168.938 li
99.4688 168.326 li
99.4219 168.313 99.3882 168.306 99.314 168.306 cv
98.8701 168.306 98.5605 168.582 98.3247 168.992 cv
98.3115 168.992 li
98.3115 168.406 li
97.7529 168.406 li
97.7529 171.926 li
98.3452 171.926 li
98.3452 169.881 li
cp
f
103.762 167.195 mo
103.298 167.195 li
103.109 167.969 102.793 168.043 102.026 168.098 cv
102.026 168.568 li
103.129 168.568 li
103.129 171.926 li
103.762 171.926 li
103.762 167.195 li
cp
f
105.976 168.891 mo
105.996 168.561 106.036 167.727 106.931 167.727 cv
107.625 167.727 107.867 168.205 107.867 168.582 cv
107.867 169.201 107.503 169.396 106.999 169.686 cv
106.373 170.049 li
105.74 170.418 105.296 170.943 105.263 171.926 cv
108.499 171.926 li
108.499 171.367 li
105.929 171.367 li
105.956 171.186 106.097 170.815 106.743 170.459 cv
107.234 170.189 li
107.94 169.813 108.499 169.456 108.499 168.608 cv
108.499 167.727 107.84 167.195 107.019 167.195 cv
106.507 167.195 105.384 167.35 105.384 168.891 cv
105.976 168.891 li
cp
f
79.8188 179.559 mo
79.8027 179.559 li
76.9038 174.875 li
75.9751 174.875 li
75.9751 180.674 li
76.7344 180.674 li
76.7344 175.99 li
76.7505 175.99 li
79.6978 180.674 li
80.5776 180.674 li
80.5776 174.875 li
79.8188 174.875 li
79.8188 179.559 li
cp
f
84.5908 179.35 mo
84.5669 179.664 84.1709 180.182 83.501 180.182 cv
82.6851 180.182 82.2734 179.672 82.2734 178.792 cv
85.3579 178.792 li
85.3579 177.299 84.7603 176.329 83.541 176.329 cv
82.144 176.329 81.5146 177.371 81.5146 178.68 cv
81.5146 179.898 82.2168 180.795 83.4038 180.795 cv
84.082 180.795 84.3569 180.633 84.5508 180.504 cv
85.0835 180.148 85.2773 179.551 85.3013 179.35 cv
84.5908 179.35 li
cp
82.2734 178.227 mo
82.2734 177.572 82.79 176.967 83.4443 176.967 cv
84.3081 176.967 84.583 177.572 84.623 178.227 cv
82.2734 178.227 li
cp
f
87.7563 177.039 mo
87.7563 176.45 li
87.0781 176.45 li
87.0781 175.271 li
86.3672 175.271 li
86.3672 176.45 li
85.7939 176.45 li
85.7939 177.039 li
86.3672 177.039 li
86.3672 179.826 li
86.3672 180.334 86.521 180.73 87.2231 180.73 cv
87.2959 180.73 87.498 180.697 87.7563 180.674 cv
87.7563 180.116 li
87.5059 180.116 li
87.3608 180.116 87.0781 180.116 87.0781 179.785 cv
87.0781 177.039 li
87.7563 177.039 li
cp
f
90.8164 177.403 mo
90.8325 177.403 li
91.6885 180.674 li
92.4233 180.674 li
93.6509 176.45 li
92.9404 176.45 li
92.0845 179.77 li
92.0684 179.77 li
91.2446 176.45 li
90.4531 176.45 li
89.6377 179.77 li
89.6216 179.77 li
88.814 176.45 li
88.0391 176.45 li
89.2583 180.674 li
89.9932 180.674 li
90.8164 177.403 li
cp
f
94.0386 178.559 mo
94.0386 179.648 94.6523 180.787 96.0005 180.787 cv
97.3491 180.787 97.9629 179.648 97.9629 178.559 cv
97.9629 177.468 97.3491 176.329 96.0005 176.329 cv
94.6523 176.329 94.0386 177.468 94.0386 178.559 cv
cp
94.7734 178.559 mo
94.7734 177.992 94.9834 176.943 96.0005 176.943 cv
97.0181 176.943 97.228 177.992 97.228 178.559 cv
97.228 179.123 97.0181 180.173 96.0005 180.173 cv
94.9834 180.173 94.7734 179.123 94.7734 178.559 cv
cp
f
99.5776 178.219 mo
99.5776 177.605 99.9976 177.088 100.66 177.088 cv
100.926 177.088 li
100.926 176.354 li
100.87 176.338 100.83 176.329 100.741 176.329 cv
100.208 176.329 99.8359 176.66 99.5537 177.152 cv
99.5376 177.152 li
99.5376 176.45 li
98.8672 176.45 li
98.8672 180.674 li
99.5776 180.674 li
99.5776 178.219 li
cp
f
103.268 178.025 mo
104.883 176.45 li
103.979 176.45 li
102.162 178.234 li
102.162 174.875 li
101.475 174.875 li
101.475 180.674 li
102.162 180.674 li
102.162 179.074 li
102.751 178.541 li
104.067 180.674 li
104.98 180.674 li
103.268 178.025 li
cp
f
108.581 177.653 mo
108.581 177.443 108.476 176.329 106.966 176.329 cv
106.134 176.329 105.367 176.749 105.367 177.678 cv
105.367 178.26 105.755 178.559 106.344 178.703 cv
107.168 178.905 li
107.774 179.059 108.008 179.172 108.008 179.511 cv
108.008 179.979 107.547 180.182 107.039 180.182 cv
106.038 180.182 105.941 179.648 105.917 179.316 cv
105.23 179.316 li
105.254 179.826 105.375 180.795 107.047 180.795 cv
108 180.795 108.718 180.27 108.718 179.397 cv
108.718 178.824 108.412 178.502 107.531 178.283 cv
106.821 178.105 li
106.272 177.969 106.054 177.888 106.054 177.541 cv
106.054 177.016 106.675 176.943 106.894 176.943 cv
107.79 176.943 107.887 177.387 107.895 177.653 cv
108.581 177.653 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
152.075 158.805 mo
213.982 158.805 li
216.955 158.805 219.366 161.215 219.366 164.188 cv
219.366 183.701 li
219.366 186.674 216.955 189.084 213.982 189.084 cv
152.075 189.084 li
149.103 189.084 146.692 186.674 146.692 183.701 cv
146.692 164.188 li
146.692 161.215 149.103 158.805 152.075 158.805 cv
0 0 0 0 cmyk
f
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
152.075 158.805 mo
213.982 158.805 li
216.955 158.805 219.366 161.215 219.366 164.188 cv
219.366 183.701 li
219.366 186.674 216.955 189.084 213.982 189.084 cv
152.075 189.084 li
149.103 189.084 146.692 186.674 146.692 183.701 cv
146.692 164.188 li
146.692 161.215 149.103 158.805 152.075 158.805 cv
cp
0 .938 1 0 cmyk
@
grestore
170.917 163.838 mo
170.823 163.029 170.177 162.256 168.932 162.256 cv
167.526 162.256 166.678 163.285 166.678 164.773 cv
166.678 166.63 167.755 167.344 168.852 167.344 cv
169.215 167.344 170.695 167.263 170.964 165.439 cv
170.332 165.439 li
170.11 166.563 169.376 166.765 168.953 166.765 cv
167.755 166.765 167.351 165.89 167.351 164.752 cv
167.351 163.48 168.058 162.835 168.932 162.835 cv
169.396 162.835 170.103 162.99 170.285 163.838 cv
170.917 163.838 li
cp
f
174.544 164.82 mo
174.544 163.817 173.858 163.596 173.313 163.596 cv
172.748 163.596 172.452 163.945 172.283 164.168 cv
172.27 164.168 li
172.27 162.385 li
171.678 162.385 li
171.678 167.215 li
172.27 167.215 li
172.27 165.298 li
172.27 164.41 172.768 164.127 173.252 164.127 cv
173.817 164.127 173.952 164.437 173.952 164.914 cv
173.952 167.215 li
174.544 167.215 li
174.544 164.82 li
cp
f
175.944 164.766 mo
175.984 164.497 176.079 164.086 176.751 164.086 cv
177.31 164.086 177.579 164.289 177.579 164.658 cv
177.579 165.008 177.411 165.063 177.27 165.076 cv
176.294 165.197 li
175.312 165.318 175.224 166.004 175.224 166.301 cv
175.224 166.906 175.682 167.316 176.328 167.316 cv
177.014 167.316 177.371 166.994 177.599 166.744 cv
177.62 167.014 177.7 167.283 178.225 167.283 cv
178.36 167.283 178.447 167.242 178.548 167.215 cv
178.548 166.785 li
178.481 166.799 178.407 166.812 178.353 166.812 cv
178.232 166.812 178.158 166.751 178.158 166.604 cv
178.158 164.578 li
178.158 163.676 177.135 163.596 176.853 163.596 cv
175.984 163.596 175.426 163.925 175.399 164.766 cv
175.944 164.766 li
cp
177.565 165.998 mo
177.565 166.469 177.027 166.825 176.476 166.825 cv
176.031 166.825 175.836 166.596 175.836 166.213 cv
175.836 165.769 176.3 165.682 176.59 165.641 cv
177.323 165.547 177.471 165.492 177.565 165.419 cv
177.565 165.998 li
cp
f
179.679 165.621 mo
179.679 165.049 179.773 164.127 180.627 164.127 cv
181.542 164.127 181.589 164.994 181.589 165.445 cv
181.589 166.22 181.287 166.805 180.641 166.805 cv
180.264 166.805 179.679 166.557 179.679 165.621 cv
cp
179.113 168.608 mo
179.706 168.608 li
179.706 166.846 li
179.719 166.846 li
179.874 167.094 180.183 167.316 180.654 167.316 cv
181.852 167.316 182.202 166.193 182.202 165.352 cv
182.202 164.362 181.67 163.596 180.735 163.596 cv
180.096 163.596 179.827 163.992 179.685 164.194 cv
179.672 164.194 li
179.672 163.696 li
179.113 163.696 li
179.113 168.608 li
cp
f
184.194 164.188 mo
184.194 163.696 li
183.628 163.696 li
183.628 162.714 li
183.036 162.714 li
183.036 163.696 li
182.559 163.696 li
182.559 164.188 li
183.036 164.188 li
183.036 166.509 li
183.036 166.934 183.164 167.263 183.75 167.263 cv
183.81 167.263 183.979 167.236 184.194 167.215 cv
184.194 166.751 li
183.985 166.751 li
183.864 166.751 183.628 166.751 183.628 166.475 cv
183.628 164.188 li
184.194 164.188 li
cp
f
187.168 166.111 mo
187.148 166.375 186.818 166.805 186.259 166.805 cv
185.58 166.805 185.237 166.381 185.237 165.647 cv
187.807 165.647 li
187.807 164.402 187.309 163.596 186.293 163.596 cv
185.129 163.596 184.604 164.463 184.604 165.553 cv
184.604 166.569 185.189 167.316 186.179 167.316 cv
186.744 167.316 186.973 167.182 187.134 167.074 cv
187.579 166.777 187.74 166.28 187.76 166.111 cv
187.168 166.111 li
cp
185.237 165.177 mo
185.237 164.631 185.667 164.127 186.212 164.127 cv
186.932 164.127 187.161 164.631 187.195 165.177 cv
185.237 165.177 li
cp
f
189.187 165.17 mo
189.187 164.658 189.537 164.229 190.088 164.229 cv
190.31 164.229 li
190.31 163.615 li
190.263 163.602 190.23 163.596 190.156 163.596 cv
189.711 163.596 189.402 163.871 189.167 164.281 cv
189.153 164.281 li
189.153 163.696 li
188.594 163.696 li
188.594 167.215 li
189.187 167.215 li
189.187 165.17 li
cp
f
194.603 162.484 mo
194.139 162.484 li
193.951 163.259 193.634 163.333 192.868 163.387 cv
192.868 163.857 li
193.971 163.857 li
193.971 167.215 li
194.603 167.215 li
194.603 162.484 li
cp
f
197.436 165.035 mo
197.524 165.035 197.618 165.028 197.706 165.028 cv
198.109 165.028 198.809 165.103 198.809 165.896 cv
198.809 166.441 198.385 166.812 197.78 166.812 cv
196.898 166.812 196.791 166.213 196.77 165.769 cv
196.158 165.769 li
196.198 166.314 196.339 166.859 196.865 167.135 cv
197.093 167.256 197.389 167.344 197.739 167.344 cv
198.944 167.344 199.442 166.596 199.442 165.822 cv
199.442 165.189 199.112 164.867 198.655 164.719 cv
198.655 164.705 li
198.91 164.625 199.26 164.336 199.26 163.73 cv
199.26 163.01 198.715 162.484 197.799 162.484 cv
196.555 162.484 196.272 163.34 196.272 164.033 cv
196.851 164.033 li
196.877 163.703 196.932 163.017 197.773 163.017 cv
198.479 163.017 198.648 163.48 198.648 163.764 cv
198.648 164.355 198.204 164.537 197.746 164.537 cv
197.645 164.537 197.538 164.531 197.436 164.523 cv
197.436 165.035 li
cp
f
163.092 174.275 mo
163.665 175.963 li
164.521 175.963 li
162.421 170.166 li
161.533 170.166 li
159.353 175.963 li
160.161 175.963 li
160.766 174.275 li
163.092 174.275 li
cp
161.008 173.581 mo
161.937 171.029 li
161.953 171.029 li
162.809 173.581 li
161.008 173.581 li
cp
f
165.765 175.963 mo
165.765 175.438 li
165.781 175.438 li
165.926 175.672 166.225 176.084 166.943 176.084 cv
168.381 176.084 168.801 174.736 168.801 173.727 cv
168.801 172.539 168.163 171.619 167.041 171.619 cv
166.548 171.627 166.128 171.828 165.821 172.273 cv
165.805 172.273 li
165.805 170.166 li
165.094 170.166 li
165.094 175.963 li
165.765 175.963 li
cp
168.066 173.84 mo
168.066 174.768 167.703 175.471 166.927 175.471 cv
166.475 175.471 165.772 175.172 165.772 174.049 cv
165.772 173.363 165.886 172.257 166.911 172.257 cv
168.009 172.257 168.066 173.299 168.066 173.84 cv
cp
f
172.725 172.943 mo
172.725 172.733 172.62 171.619 171.11 171.619 cv
170.278 171.619 169.511 172.039 169.511 172.967 cv
169.511 173.549 169.899 173.848 170.488 173.992 cv
171.312 174.195 li
171.917 174.348 172.152 174.461 172.152 174.801 cv
172.152 175.269 171.691 175.471 171.183 175.471 cv
170.181 175.471 170.084 174.938 170.06 174.606 cv
169.374 174.606 li
169.398 175.115 169.519 176.084 171.191 176.084 cv
172.144 176.084 172.862 175.56 172.862 174.688 cv
172.862 174.113 172.555 173.791 171.675 173.572 cv
170.965 173.396 li
170.416 173.258 170.198 173.178 170.198 172.83 cv
170.198 172.305 170.819 172.232 171.038 172.232 cv
171.934 172.232 172.031 172.677 172.039 172.943 cv
172.725 172.943 li
cp
f
175.228 172.33 mo
175.228 171.74 li
174.55 171.74 li
174.55 170.561 li
173.839 170.561 li
173.839 171.74 li
173.266 171.74 li
173.266 172.33 li
173.839 172.33 li
173.839 175.115 li
173.839 175.624 173.993 176.02 174.695 176.02 cv
174.768 176.02 174.97 175.987 175.228 175.963 cv
175.228 175.406 li
174.978 175.406 li
174.833 175.406 174.55 175.406 174.55 175.074 cv
174.55 172.33 li
175.228 172.33 li
cp
f
176.73 173.508 mo
176.73 172.895 177.15 172.378 177.812 172.378 cv
178.079 172.378 li
178.079 171.643 li
178.022 171.627 177.981 171.619 177.893 171.619 cv
177.36 171.619 176.988 171.949 176.706 172.442 cv
176.69 172.442 li
176.69 171.74 li
176.02 171.74 li
176.02 175.963 li
176.73 175.963 li
176.73 173.508 li
cp
f
179.241 173.023 mo
179.29 172.701 179.403 172.209 180.21 172.209 cv
180.88 172.209 181.204 172.451 181.204 172.895 cv
181.204 173.314 181.001 173.379 180.832 173.396 cv
179.661 173.541 li
178.482 173.686 178.377 174.51 178.377 174.865 cv
178.377 175.592 178.926 176.084 179.702 176.084 cv
180.525 176.084 180.953 175.697 181.228 175.398 cv
181.252 175.721 181.349 176.044 181.979 176.044 cv
182.14 176.044 182.245 175.996 182.366 175.963 cv
182.366 175.446 li
182.286 175.463 182.197 175.479 182.132 175.479 cv
181.987 175.479 181.898 175.406 181.898 175.229 cv
181.898 172.798 li
181.898 171.716 180.67 171.619 180.332 171.619 cv
179.29 171.619 178.62 172.015 178.587 173.023 cv
179.241 173.023 li
cp
181.188 174.502 mo
181.188 175.066 180.542 175.494 179.879 175.494 cv
179.346 175.494 179.112 175.221 179.112 174.76 cv
179.112 174.227 179.669 174.122 180.017 174.074 cv
180.896 173.961 181.074 173.896 181.188 173.807 cv
181.188 174.502 li
cp
f
186.428 173.161 mo
186.372 172.426 185.952 171.619 184.845 171.619 cv
183.448 171.619 182.818 172.66 182.818 173.969 cv
182.818 175.188 183.521 176.084 184.708 176.084 cv
185.943 176.084 186.355 175.14 186.428 174.469 cv
185.742 174.469 li
185.621 175.115 185.208 175.471 184.732 175.471 cv
183.755 175.471 183.578 174.574 183.578 173.848 cv
183.578 173.097 183.86 172.257 184.74 172.257 cv
185.338 172.257 185.653 172.596 185.742 173.161 cv
186.428 173.161 li
cp
f
188.689 172.33 mo
188.689 171.74 li
188.01 171.74 li
188.01 170.561 li
187.3 170.561 li
187.3 171.74 li
186.727 171.74 li
186.727 172.33 li
187.3 172.33 li
187.3 175.115 li
187.3 175.624 187.454 176.02 188.156 176.02 cv
188.229 176.02 188.43 175.987 188.689 175.963 cv
188.689 175.406 li
188.439 175.406 li
188.293 175.406 188.01 175.406 188.01 175.074 cv
188.01 172.33 li
188.689 172.33 li
cp
f
195.132 170.166 mo
194.422 170.166 li
194.422 172.281 li
194.406 172.338 li
194.236 172.096 193.914 171.619 193.146 171.619 cv
192.024 171.619 191.386 172.539 191.386 173.727 cv
191.386 174.736 191.806 176.084 193.243 176.084 cv
193.655 176.084 194.139 175.955 194.446 175.382 cv
194.462 175.382 li
194.462 175.963 li
195.132 175.963 li
195.132 170.166 li
cp
192.121 173.84 mo
192.121 173.299 192.177 172.257 193.275 172.257 cv
194.301 172.257 194.414 173.363 194.414 174.049 cv
194.414 175.172 193.711 175.471 193.259 175.471 cv
192.484 175.471 192.121 174.768 192.121 173.84 cv
cp
f
196.748 173.023 mo
196.796 172.701 196.909 172.209 197.716 172.209 cv
198.386 172.209 198.709 172.451 198.709 172.895 cv
198.709 173.314 198.508 173.379 198.338 173.396 cv
197.167 173.541 li
195.989 173.686 195.883 174.51 195.883 174.865 cv
195.883 175.592 196.432 176.084 197.208 176.084 cv
198.032 176.084 198.459 175.697 198.734 175.398 cv
198.758 175.721 198.855 176.044 199.485 176.044 cv
199.646 176.044 199.751 175.996 199.873 175.963 cv
199.873 175.446 li
199.792 175.463 199.703 175.479 199.638 175.479 cv
199.493 175.479 199.404 175.406 199.404 175.229 cv
199.404 172.798 li
199.404 171.716 198.176 171.619 197.837 171.619 cv
196.796 171.619 196.125 172.015 196.093 173.023 cv
196.748 173.023 li
cp
198.694 174.502 mo
198.694 175.066 198.047 175.494 197.385 175.494 cv
196.852 175.494 196.619 175.221 196.619 174.76 cv
196.619 174.227 197.175 174.122 197.523 174.074 cv
198.403 173.961 198.581 173.896 198.694 173.807 cv
198.694 174.502 li
cp
f
202.158 172.33 mo
202.158 171.74 li
201.479 171.74 li
201.479 170.561 li
200.769 170.561 li
200.769 171.74 li
200.196 171.74 li
200.196 172.33 li
200.769 172.33 li
200.769 175.115 li
200.769 175.624 200.922 176.02 201.625 176.02 cv
201.698 176.02 201.899 175.987 202.158 175.963 cv
202.158 175.406 li
201.908 175.406 li
201.762 175.406 201.479 175.406 201.479 175.074 cv
201.479 172.33 li
202.158 172.33 li
cp
f
203.482 173.023 mo
203.531 172.701 203.643 172.209 204.451 172.209 cv
205.121 172.209 205.444 172.451 205.444 172.895 cv
205.444 173.314 205.243 173.379 205.073 173.396 cv
203.902 173.541 li
202.723 173.686 202.618 174.51 202.618 174.865 cv
202.618 175.592 203.167 176.084 203.942 176.084 cv
204.766 176.084 205.194 175.697 205.468 175.398 cv
205.493 175.721 205.589 176.044 206.219 176.044 cv
206.38 176.044 206.486 175.996 206.607 175.963 cv
206.607 175.446 li
206.526 175.463 206.437 175.479 206.373 175.479 cv
206.227 175.479 206.138 175.406 206.138 175.229 cv
206.138 172.798 li
206.138 171.716 204.911 171.619 204.572 171.619 cv
203.531 171.619 202.86 172.015 202.828 173.023 cv
203.482 173.023 li
cp
205.428 174.502 mo
205.428 175.066 204.782 175.494 204.12 175.494 cv
203.586 175.494 203.353 175.221 203.353 174.76 cv
203.353 174.227 203.91 174.122 204.257 174.074 cv
205.137 173.961 205.315 173.896 205.428 173.807 cv
205.428 174.502 li
cp
f
175.454 181.753 mo
175.454 181.164 li
174.776 181.164 li
174.776 179.984 li
174.065 179.984 li
174.065 181.164 li
173.492 181.164 li
173.492 181.753 li
174.065 181.753 li
174.065 184.539 li
174.065 185.047 174.219 185.443 174.921 185.443 cv
174.994 185.443 175.196 185.41 175.454 185.387 cv
175.454 184.829 li
175.204 184.829 li
175.059 184.829 174.776 184.829 174.776 184.498 cv
174.776 181.753 li
175.454 181.753 li
cp
f
177.659 184.604 mo
177.643 184.604 li
176.52 181.164 li
175.712 181.164 li
177.279 185.5 li
176.94 186.371 176.9 186.477 176.528 186.477 cv
176.334 186.477 176.189 186.436 176.1 186.404 cv
176.1 187.05 li
176.213 187.082 176.294 187.114 176.399 187.114 cv
177.312 187.114 177.384 187.018 178.054 185.306 cv
178.595 183.925 179.08 182.544 179.572 181.164 cv
178.789 181.164 li
177.659 184.604 li
cp
f
180.808 183.473 mo
180.808 182.787 180.921 181.68 181.946 181.68 cv
183.044 181.68 183.101 182.722 183.101 183.263 cv
183.101 184.191 182.738 184.895 181.962 184.895 cv
181.51 184.895 180.808 184.596 180.808 183.473 cv
cp
180.129 187.059 mo
180.84 187.059 li
180.84 184.942 li
180.856 184.942 li
181.042 185.241 181.414 185.508 181.979 185.508 cv
183.416 185.508 183.836 184.159 183.836 183.15 cv
183.836 181.963 183.198 181.042 182.076 181.042 cv
181.309 181.042 180.985 181.519 180.816 181.761 cv
180.8 181.761 li
180.8 181.164 li
180.129 181.164 li
180.129 187.059 li
cp
f
187.55 184.063 mo
187.526 184.377 187.13 184.895 186.46 184.895 cv
185.645 184.895 185.233 184.385 185.233 183.505 cv
188.317 183.505 li
188.317 182.012 187.72 181.042 186.5 181.042 cv
185.104 181.042 184.474 182.084 184.474 183.393 cv
184.474 184.611 185.176 185.508 186.363 185.508 cv
187.042 185.508 187.316 185.346 187.51 185.217 cv
188.042 184.861 188.237 184.264 188.261 184.063 cv
187.55 184.063 li
cp
185.233 182.939 mo
185.233 182.285 185.75 181.68 186.404 181.68 cv
187.268 181.68 187.542 182.285 187.583 182.939 cv
185.233 182.939 li
cp
f
192.25 182.367 mo
192.25 182.156 192.145 181.042 190.635 181.042 cv
189.803 181.042 189.036 181.462 189.036 182.391 cv
189.036 182.973 189.423 183.271 190.013 183.416 cv
190.836 183.618 li
191.442 183.771 191.676 183.885 191.676 184.224 cv
191.676 184.691 191.216 184.895 190.708 184.895 cv
189.707 184.895 189.61 184.361 189.585 184.029 cv
188.899 184.029 li
188.923 184.539 189.044 185.508 190.715 185.508 cv
191.668 185.508 192.387 184.982 192.387 184.111 cv
192.387 183.537 192.081 183.215 191.2 182.996 cv
190.49 182.818 li
189.94 182.682 189.722 182.601 189.722 182.254 cv
189.722 181.729 190.344 181.656 190.562 181.656 cv
191.458 181.656 191.555 182.1 191.563 182.367 cv
192.25 182.367 li
cp
f
gsave
0 196.486 mo
360.001 196.486 li
360.001 0 li
0 0 li
0 196.486 li
cp
clp
.6729 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
86.4678 16.9185 mo
97.3018 17.0464 li
.746 .676 .668 .898 cmyk
@
102.685 17.1099 mo
97.3257 15.0278 li
97.2778 19.0645 li
102.685 17.1099 li
cp
f
0 lc
0 lj
102.685 17.1099 mo
97.3257 15.0278 li
97.2778 19.0645 li
102.685 17.1099 li
cp
@
1 lc
1 lj
177.309 16.2212 mo
188.143 16.1431 li
@
193.526 16.1045 mo
188.128 14.1245 li
188.158 18.1621 li
193.526 16.1045 li
cp
f
0 lc
0 lj
193.526 16.1045 mo
188.128 14.1245 li
188.158 18.1621 li
193.526 16.1045 li
cp
@
1 lc
1 lj
268.151 16.3911 mo
278.984 16.3628 li
@
284.368 16.3486 mo
278.979 14.3438 li
278.99 18.3813 li
284.368 16.3486 li
cp
f
0 lc
0 lj
284.368 16.3486 mo
278.979 14.3438 li
278.99 18.3813 li
284.368 16.3486 li
cp
@
1 lc
1 lj
322.321 31.9624 mo
322.322 48.8525 li
@
322.322 54.2358 mo
324.34 48.8525 li
320.303 48.8525 li
322.322 54.2358 li
cp
f
0 lc
0 lj
322.322 54.2358 mo
324.34 48.8525 li
320.303 48.8525 li
322.322 54.2358 li
cp
@
1 lc
1 lj
285.646 70.9434 mo
274.812 70.9292 li
@
269.429 70.9224 mo
274.81 72.9478 li
274.815 68.9106 li
269.429 70.9224 li
cp
f
0 lc
0 lj
269.429 70.9224 mo
274.81 72.9478 li
274.815 68.9106 li
269.429 70.9224 li
cp
@
1 lc
1 lj
194.804 70.96 mo
183.971 70.9507 li
0 .938 1 0 cmyk
@
178.587 70.9458 mo
183.969 72.9692 li
183.972 68.9321 li
178.587 70.9458 li
cp
f
0 lc
0 lj
178.587 70.9458 mo
183.969 72.9692 li
183.972 68.9321 li
178.587 70.9458 li
cp
@
1 lc
1 lj
103.963 71.0815 mo
93.1294 71.1084 li
@
87.7461 71.1216 mo
93.1338 73.127 li
93.1245 69.0894 li
87.7461 71.1216 li
cp
f
0 lc
0 lj
87.7461 71.1216 mo
93.1338 73.127 li
93.1245 69.0894 li
87.7461 71.1216 li
cp
@
1 lc
1 lj
204.995 55.8506 mo
190.454 49.5776 170.518 43.7383 146.692 43.7383 cv
125.368 43.7383 105.083 48.4155 88.6333 53.895 cv
.746 .676 .668 .898 cmyk
@
83.5518 55.6699 mo
89.2993 55.8003 li
87.9678 51.9888 li
83.5518 55.6699 li
cp
f
0 lc
0 lj
83.5518 55.6699 mo
89.2993 55.8003 li
87.9678 51.9888 li
83.5518 55.6699 li
cp
@
1 lc
1 lj
13.458 61.9067 mo
1.3457 61.9067 li
1.3457 104.299 li
1.3457 152.748 li
36.7417 152.158 li
0 .938 1 0 cmyk
@
42.1235 152.068 mo
36.7075 150.141 li
36.7749 154.177 li
42.1235 152.068 li
cp
f
0 lc
0 lj
42.1235 152.068 mo
36.7075 150.141 li
36.7749 154.177 li
42.1235 152.068 li
cp
@
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (001x001.eps)%%CreationDate: 26/05/15 3:06 PM%%Canvassize: 16383%AI9_DataStream%Gb"-6GC/U9o-eq"!8dg?O</?ol.#@2dX+:^.q+,3!OCU,s8G!MrQ_@oZE]B<qj`*'F4PZ#^fZmlUX:o4Ui\ZTqIs!rc1cVO^T0q/%[Z[Yf,W4%GlDgCGVg%H>[B@8<7PZ5,$YFK`25)inA=^D3Cq]dpeXF2#:@#%5m1rlb<i<Qu/Grdf-BBYFn>)5[XYh$!s!72qb1gPQ%S_MVcbOn?,h!08eHI+uJ6D1DBkC;cVlLE3PCTXq3<,ESjl8,F1Z3te@[J6/ApR6#[T5*a-.]l_F^>NuI+.1C8o6IIiK0B8^1*B^Z%\igT:"=X.3It(LGYBP>a9!@)d4ta&d40A3XV=P"s9CUi#Q)&+Eo[u\#X50`HC4n^LUh=d7Q2GeiZ]`[,;G&\%JSZTS$VQl"@kR"\%J(8?7=\\>8.b.^X;CL/]S_*lH\h%Wc,gkNAak9Ibf"#VJH[qZE+IePXW)]rWTJ>X.Ehi3NH2n\i^M/7W9'<n=KCNh:I^&:A8W1%X%6Z?0']@N\*_Zili[H9pDMI7m&)<c[@e4o.dV<UVu"+6dfAQuI'pnJ[jC.VRYSCV9G2f/\u`!Uc_-B-D&N8."&ra'NG>0.LJVZXNZ%WE7pGKU+1cMf^:U#sU?JTi_BtHG*LGo`>u3E9,Rp8XZ>pg;(Z4n6E:t#O9D<XW3GE"(O0GQ!OW,JKu*e4TA.<s6_&&8aoMUn[Drb%Dqi:hK`[%0.fNFJI&a4A<)r23EZ*c3D]&bF1(=(m(g+p7Y`rR\bIgTC[#2W'N,9g*i*S$HgK4eIiGU8I-t'#@!T,FBn4B=(A]eS3%=tU`u^0NAOo5^856SYJ5;LE/9oI7MrT<#bDp_uk7TC=e*_ERL]dV%2Wr/G9l8,+&#bpbs9`BN7!r.[AOhcLPg'<N.!KYOeLp_TXV%-Z"uEPI?OKY[@/EbEU0Uj5YcZ;]8Ra;C^XDqBkSi`Lc'aEMKW\k'W,4$2P0*@K5gUejN#ip6n1?,DL]Q'_[TK0Vo,)(]0!&nJh1^%N^*N?Qm2``@k$adrhcG]\V/Cr[Z<"\*^Iq0s6qb<pee&$.7uNo(YWqf4^q1VU@$Btq0::"r#_6@hJpiZhVm4rfCUNc%tA(<b2:i9%8e_%Rrl-_G]0r*/2P3'qEjQ"mh406\YAeAHbUKGd?JtF,O"$ne`K!ie[S,k>R.CpKIA=;^.Gd+fS\@mldsi'Q3\r3DdkRc-Tf&(V%5K^b/Co?_IdX8L71Q0`(jaG;-SF9b__m`nmi\TC2APQf\*"X>i8UT9h#03"hbM/lddPk#Wi]m?6V4u35.11L_rh]WkO5W=t0E%5.%lT0a0J*B2HUu1"CoUf^Bn!:rI[b/?"N]qI_dXV'TrU0Z]rt=R*O[@j<oO"Rc^Uo![5KW^kjZ/>Arhe^J^[lC90D&&f$CY9R8p\$a%(@cn"MYiT.RmhSN/=5o(0Q5CKl+=jJM=2ThjQ%KAP^,J"k%2K#dNN8^J,\-m;j9,m5Pd!]!rZqh^WZV>^?H"&26]NY2M-5D)d%TX%Q$-@&PUYYI?ASV7dZ\)kPBods\q4nf2h&UcJccrThB$sk5R>22LQ\Z1Fl4^DY;GJi.9@-tk0H$CYjHI.[M_JSH>1`4i]@iEpg8%j%aPTLV]@]uP+ZO4-+b+:/XMu[kr@ZKH;#KN=DYn=4]JrcW6JIG<KK!FJ^Iq"M294RHp]/id?;?g"cfc#L,L9mRA_Dm=I/N2AOFE\8%PggHG:Wb.tL6>EmjXK*7&h\+oo)(0@_7&0?>WV)+@Ue.5HX>S+Y$"*Eif45>3ki^K0YuY74YZ"e.Heu9*,i;++$Ims_@m,&>OJT?%D9=HC<OWbgIo%at9K$6_4s4m*nk.2N`e-BbV&`/4c$reULf2)1.q]V'dK[`t<[b-X*8pCIieR#!0$SsU.am,6Eu7d/b7T^-?-];H%J<im;5eW]:4loq=(aN`U1]SAXMY'j*>7S)$de#^!SPbHi(0=\$H>P.XBGm0)pt9]N4lI0C^,SbfmhP:u.U1[?naRM:%mJa"hP[!Y%mlU*1@BPt'V'A<H_/WjFld[::*H0UDC$Xjhc=-Yk-#*P-_4jV3>j"X1^J89b9U'lBTt2<7L8tVlrXPJFJA!E*$1U8Tl^rUlYKWS:%5,WGPTJP&B7qOuOpml.ErXQ:e]]CRo[UaF##JUX+HLrl!D5r!5:toA<P>f&kk%Ht=>m\a9<'m5'V5iFq+TLOG37OWu?7Y*pZc(ba%15sW5_1MB`>Z?MC;,!u_'HBu(b<hkNhQ;Qt-JuuLF"1&BT74lroV7f+Q9-;k>Ohk;7*b`Hn`/79%*/-[(SuNK1[)=$579jg&S:]6%D;bAdZeFA@XcP'c"i-`-p\`!Z1PkGtFnC_,D81*sijE+'"r_;&qqfi5IHR/DL_Hm,n`/Y!V#u*Scfj`]Z[;g+=0H`(/`J-Q*MTlV%;>--W7mASl#EQ-_'"TQ<E8h/JS>YG3hgSNmqiP&'ILD<S:2$'bRd5AuD89]uQ04ml6Y.'LRGsk`7QH>'[98Kb4CE&R1bHMIIQgiD%jq016\%Ej8S6>7YjVT`8eRMHccV]15D$)Y[\>=uW<hM/dER':!YJk*%f)s=NH:G=okQokLTm5=pQ/LA`"^A3=9NU+-D9k0GGn!9`%-?OCM)_na_b''q\^^pIGOT/(JOQPL"/!R5XUrU(6l<A#HTG?\EWCi"r-8[AS>E2<.a5/UX3?`-9Ve8$T)i4)NON#)Ln;JX%De.pF%&tR+Kq56$o_Z.upHm,+0F26)a*GSsgk^/`>(@HshH9d\pge-[X.5ogsP_Ta@F)+1J71%#!q&AhZ(41Y.b,'aVk>8dQ=t\;t&FCNN%_m"?pS]^(/Y[GcKbVG_T>]6_%;Uq$a_T^poY)MbXQ5BMD,dp=cS(_P?$9/Z'jpC'ME\//HF]'\MStsD!FX2Uapbt^=(B*P_`Apum%8hYD46lVq/G.Enc.ii$LYrYL)N80hVP)ibV\gY[.^*tbN'H;9J-NQ^eCjqZFm,O=ADmO,-,@cV6Ke&+6j+e6d_kM"[<;(#K_el;J%-?=tB<N2K8P"DHg=fe/d^HPkg82P)1:_29\pGfVo/S)CL5s$c<3Km&Xr/7l"$gIPXF!R7>b'@`)E[t4s?25l.B@7lcBihV\r#OYV%qNoQ^dmNn7p3k8tjTr%Y>?g4I^RXHFFnbk-r<R97s/!ENnQmB2HJbVu1$GOns.OU:g%e:K!IIucrXSe`n$m;B+&C])2<-*MLc.NT%.Z'=iO%LS&@F?;@60I0pJA6\L5%)mq).%ElIu0/H`o^[SO_9f+M3VkgF+M'I/7Ykhlrq6NqlFYt]f7UL^G_M;)T0/-a$K&V6=c:0%,4\'Dlo7Lr$0;=`eBp]?f'h,*hnZ\R>\94AStO":U`-F6.H%e1MNX9/\O94A`7h%>EljfGP*<V<d60Zkgd^J8K4pI#G=Z-.YM.kI%:'2]l:tEb@3jE6&k(J*')iegB4Y<%;QLHeKD@*&n7:e0nZ_&^hN8\V__1@;=@('=#fK,nFQY]^5^\J]Y?H\VebS7RWqi?L$=!\o@%ck;c(/mSb?37RV//+=hG=I"6<6=4!/k/[lD=K$Kf8Kil_.(<0deI)-lW/R?Fk;'TgC$_,JG1gSnPfY`-_PO&!iLKKTa,4S,7_bJR%Q\Z@$OV(Y$+&F&;>2Lh*;93DDRrAa=fNo&amjjVhmYLB&Tfg5;NV/@>cKAuZ-S8W8;\#$!A??^tC?#h&0jjEK*c#_-$A2_\B[sm<%,9pZ];,Kk)oI%]E,kI/IgeV4Ch]>q[:ls,V,H^h;\'2NG;UVr\SbN!C]Ha\[A4!o#DutH?db;)`D,,-o#Q(;!ThWh/]/-(Yc_M,U%MGSm!ZXh=;]^=5]Ju/k96cQf]L,uselS%tWO\G2Uk!+g*4Bbgf_i^S./;`,qmE,Da@RUg@EW`C-i@iDn;re'*/Hb@Yi#8Pjakr*4%VV=$'8c$H&BM'?6-lRt]ljA?`77s=N'\JkEf598@7k)m?A)7a*BH80qq!#,pqL0:5"[3<D]3J=F*\EU^\RRF@:4A_s>h"h5A*q*L%QbDhhh)3<>Dsj\P1j@t"WZs$I(^R+[VU7/#.k=#b'"M'LOA;=878<&L*uK.9h#UJ.P4;BVMQ8Tl\PEH.>sTYeKJ.9t$&s4]h@OKP%;-LJ-1<8Q.a-!OTd.3(Z)'Lm[g%u-,hBW.n@if3]M$+jfHF"N8_m(!tD8JFE($WSO73Z`j;=TTbcB65;4"CHU,j6*Cld\b[#&pr-%Je9S).[EI!bf1.has0/0e%[Bo&Pb2b]/]B:jV6)aEcdM<%@g`0NA%VC'P<u;e9Z,AJTlLPm8DsA("t1mOY*<OF_iQ=O'7MB<RPg`%:$%h_YufVGH=rCR*\m"p:XHs*rNLQ!I/XDXLWbB8T.o%2j`L7fN;1<PH*E&t[4n(cNh5e<6s`Fa?\^D2%AGk'/_"9.(nG@?$dOR,%H&<^:M$-!+pnWK;PKaXVGbIf31`bJ(q@G"L:A(4UQTd@-Ua1G,r6(mFfm2TMBP<D$^7&.aS7=RCfAN^OFD>i8TfNa3S1Z\"\1s:u%.^Zp/(NYp]R6BrE)Qe5[bkXr(SC`'OD7]V2I"+=t60W\/GN:*2aV4"9[.+6ZFulatp0R?7.l!Zs[U*akMb`@CMBu&)s4#nO$d!Yu%E'Kone9eSsV;>O7XJjpQFD=DD&7-\jq;9#,(MgciSM0_[$8".8W\mssTiq\!Bi^GLPtl[FeYeC!ZdMDX\5W!-r@`Cn!?/Lk]<E-;%eiMVF&<+7gMYJ*G-m1X0d86\6Oj#b!c"bk0Rst#S:18e@4+G/]gRVlho@*Y/?F3lFVcrO6Vfi7k:b;Y8B]G>icoc#?!qj%@$M[iJ%FaF)!<hOPZ$h3ZC>^N0mB[kp$Q1d`H/Z=5Nk>"\BfeABXpXa2];=AtEr$4O&/"L#FX\h1[]A'B77Fd.Bpg%f=JJ!`\F0TS1[4tB'%H2^ZTf1;IGO"r/0mSp,LK*2s$m)hr-n?qKo9KhY=h5GH0fn3o&5>C\p\XJo##O,=cC%NG_P1em<="UtQaI_"ug<^R86qX$r,aS&l%$(oKU4TFFa_/iGKjNZTOAKO,6!RQ=ZZBRIDhEOWS.Y)H_&st"d;b^f%fNUuoZd:?&,oAt8>l4eLo!HiD!TOhE:1"ZC=[.^@2pms"%FS_:_br^pS\qVBe+]Ki;Xfi82^aN\=9Crg-/?J"6@:6%T#7RT%iQBW2W()9^o'\9&poXOMe>RKg-JrAtR6@TN)BS9r#s-Cd>,+pp%Scml^$jEK3EofckeN*I(]3AbkZStC0a/s*9e3?0'A^(=<SbG1Do&p&MeS%:#(&ZSb^8(-#5Q@e4pgF?mA9JKpiHa5U]?QpZF.H'[%G05`Z=05Q'!\MD^5TUAc^FGe#jgBY"Cu'RC'*$!lptnYs27Lfa8%hdee=*ItD^G_n6+;%&Y<P0<FI>8VkNfl`]+pQp36V:[%rCSb%Gqm<_\uU;i7!*mdfmSUKlE5gT'l[4QpC;i1L].;tO5b<MmAJ]SIJmB^kP5n=N[&R1U\4=`Wt)"*Zdl/UqZt-F&"&EC%SXcMdXa]4%H``KbB_gQ;5Hu%),SpkD=oQ[/+=<5`III17ci5^/fPT-qrdUX@84Us05Fo8%3FC]OfdAGq+1:tBa'dpt[Z-5X)&B]*s!@TgZ0rcl%s4"*_O+H+b%4NMnY.=QcknZY#^K5mqmL_Uu6MZu@kjLdsA2)d.K/rp:^%lSCDdHX2Yb)D@^O,TlLV]NSB(N.U^Sb03*VbsL>L6+E%+4moa;`GFW?3ie-<]!cKAb=15n^pC+dep/o`<0;6BEp%2b=O(36In5]LR%$!:Z]9U4DhJ\Y3o_;o"o+=eua)oW[0<5s6V+*eU"Fi%>&Vo;IsW]d;e^9C=sZ[j.K,QbYFGHt@_LN6<;o(]F?Y,4mr`]BhJ91?WNlMhCIh'Bi!kr'Vlb9OG?/Ka[*C)oUN2qjD0>0s)L3g]%QV>RXP,;sZ_Mb3D3O2,E3d@BZ'YA[FEBM9"M3dpJZi1.raBAOF'HSgrPWSL,#HrXhXa_UljDT?R9WaLpo.atX<U7"HDT5dH%?514%"O(E`71Uu[gZm;gVq'Q;<4$*_ZGm*m?QA1Q:8c+b3P8Z:>&.3r*7dt%dkF.h-)JqtG;QO7h@V-(DOFqCP+j/+<[bE/XjV]Gc:j-E%HA7(cb=Wr&j0;.&>\-,9q?rq1<>qr3V?mZFanEMo&F$5fZekW\Xs:o!"n4-DTP:Y\^m.);K2JQAX"`oaWjl`ML%iJuiY9/-GO&52%SG+MH>4c$0+GYG@R-AtBC@/dtHD`h)5Q<7s[C92#E@&[=+KHt2Z"\fR:ui>60]S-DiN]YBQIIVNfXc3M#<+OR3(@.jZKW8kYOMHA%kU^D'?D[J[9^ent>HYWhEm=?u^qulp^=&]+i:K'lfdojW`s$?DIQ!:N/%Qu8I(omV+2/<K&)r:^fh7e-aBh6c<B[A"NpM`NM^s"H%6o6>BaB`UE668*\l]uD0&I%"A_n/\1@^5+fZCV*c;(t[.F*m#@7Y=o7=&8uQ.6NSj_JbE[48IIE\G:W<S_?0<e+K0:IU"KFZW8?$%DU2'Y\FK'CLZO)1G^$,597d0l,1*<2HaV/A?dJkeo3,k<dmS4r[Zg)N)bP>??U"uTr>6RCO)!5AcWAOXAacn]EXB#hb74`p2XD_q%o1#"8J\[RIIX:CR?Lj$t>5o\m]$MK;4%3)LE*=Y6/YnK5B`7QAok#f/m<)U)gg2%(nZ*V3d62^re[ch)YkB$CHo.O7`]#5WK5/#i%nY'<(e@Rp4lF'n[?`C5$pQGhE3-ssa[Hb7(\\2PAVq5rcm2u9l.eUT?O%H(++9htHJ@cuHcXuM1'C(9;C2s8^+EKW0.RL+@Vpaq?%/)V8Xr=-0bX2)"?j''\N[7)9@LEQa[%HC\<1%L^q\SSO*<.A\+WjQUATI7(dXkkamGqZJ+A!d/CHHd!'^=$\66l9R\pWl>/S,<^<%h7HI@q29E2i$rhaLeT8.,`n_YBX][c]:\ci.gVZkk[M2?[$3(]qoXHt.Wf.EnNClU`I@+fGFTq@\cJ"uT@!1`(3H4</>):!j]">;%0Y_g\P*?\K1KTf@7?Y$5KkTJ[I0&W8hfZsB=+[CDeu<8s>Jal\?,7(SYgLQPY1bCt1`K^9CeQ856]o`T0)5YkE(Wq5d>&lEeYoi2%*t^@rYoX`?I#8%9-^O#2]f#a(F+9U$j,Nr>;CGROoPZL$n^@aneUIPpb`IHp>JGZ#BTt#jnW)qK`[KYY[:>P?J3ac5EDdVV:9Eg%%3fp:I_?^?A&")2/$shp'-[`OqC"D,kDWiCBctaZb%+?ZA72d9s)W?tZDY>jAT@YJD^`q;u]CWYr`$L$3:5c[=%k@2.Fp?3mkQ5S+%&Chk_Q!;[:ImiZ/Pm!;gX6r?t[G'0'!<p'^347IYXb[:;Eeq_]>.ou#-_(a$mneto5u\=Bp=<qHOOWB"L0$jl6TMh`qi)qVYjrC'%<aP+*Y=dPF=3n=g."Me!WCCF4-^GO!4ANY`D@LF64FW9OU[<6F1Vj8DhJTO5MRV?jE(mK<Q1iHO(SbRjMc6>n`6r/.KR0KGBh"7T%7#7.AAZ`bq"esN:Y]<f)%P$[77S?[sMMb&V\fK!s:eY8q^gVsAX=o^QPu"!\YJ3<8-E"$id\AHtj_*OeX]p9n%at$+)_ks"oJ.RY%9A!np?L0oHMM["GTp[r/Q$.Bp7Tke($kYa<Btm\0;3MX9FbD?MJqFpd7lu1A@d:c54as[VfUZmaIAUVY)hhWX",#$'/o1r%G+Jqi%#84A3I/Q-0m!ut@7*fe!h4<2a'TB=R#t9b>2pLR'!YYu!eNT`(8.=I$DU(\:@J'b_%Micb[?YDM'9l8hUXf14=;$e$'$T6>^"8&f%;^mnC)=RD%Tj6<j^![!^;QYe&7B;()_bBa<L'c9&pcGqD5`+&+f$pEV\1Z=g0o?<5;imr#b.Y*?2DGah(3$,'D"Su!/LeV**Smk@%/HR;EpB,??W'sMOL5b*)8sD0uU/BSggC#7LI%_nP7e/G(_,'Z>5S4MWGs17/0.Qb>@VeGV6[>U&s4/*d[Ee6pRnHdcYV0bK'Lk9^%a@GP\]Cfogr9:lb=7$:#FM6M/jh1*m:Ws9Z:c^a8mW9pYoVY8m)NDUfM07u%)Z7`ad4f6?'^qW4UoYh_Hc\V`J76;)[Qp.cr@N9a%+tjC\(3q2-.rdsJfb5-f]5SdSYTi7>J?uFY!CP9=(6Uip6dd-P6jWCI$6hgKK57-t&Q+8KUX=p:oi`-+f$0Mm\t,o]8YdAL6f?>>%VIPReT6^>_GU&'@7-*9NbCklc/J^N4C]-OM2l4Tb","#/g_dtc5>,N!/j_6GQ9-bdm9+b?L8#Du?/!e8bb_GBf;t3B3a,kDqWOpR%8^Z+=XfB[!?d:%i?qoIgkiI`;m@DSZl*H@An[EVPkr_t32U78Be:P9DO]olPSL)^`V9R?ZeACaHSQc#k_kWRURFK[2l?R.?kba_N%OcC,)]5]o.Rb(JlKjS"bkoKkG`D:@:jCM97>H28i)..UR.kg"MH*'\=pSkOs>Uq)JS^-B;CMp\2]YAl&G;lY[p$5;^Ff/N13Y-F4%nZI7d;;TB2]ZH'lZcQBJB85^j:lKS#e'V(:=&41B'l1c\/\P`@Yu_^X8u^q8Wh*CmIl:14]mLj4[NK`f><\7VgA./c1@7'eb=fF/%87Tb")i]h]NKQ0Vl5nDMm)?jpTM^@HDE^dE&O`ts:q>15lCmmW[(2BhFbuR/G-.<'>5>^WGm1uY6`SGg(<(%?\i62#L#N[gl9PqO%%IYq*BiE1>,.o69;P"/R5$f-r\'[Utf<"sErTo1pqU0ZemTkQ(>'MpM.P"+fUG2OMlWOeal`OitF.^:.Y#!;ck@RobTLM"-0:A7(%f9rrMdO6+PTin?GD68RMC.urUCVT8p7^^tUWI0j.("?n@h46%)=48PiUU-W-8itM(_pCm9p(+R+0_/On*o<-0Cif\;\W=O)f4nLX%c,#<AX)Cs=B/WnfVfQpn1"@o#SH`dB-J*%TD%pXE>5,;nGkF[RI\FO(eS"idqOS.4oP*FH34)O=qtkc$1n$u4RY=Um.GA'5l391n%C-H>j+,A$*NHXJCDrmW]'5;,\s&bZ3f62cBMPGJJQ#5bFYgKH@]/as+V47ZG.[;(tbG8""ao9!me*53@;'E$gMR9_fEY[BnNg-$6%c'u2V7[Y7^oVRta=C5uJk'`G*lWDndTT,6Y50KNen(+=&F%+)<(],-,XgQ5D9r+IcZgI5IiVd%.UetXUr2c3V_AY!u7uNG:Y>Jte%2S8^s])AOJHktAuq:_>Wg?:ii>a7Vo]jHoIT,4AtQ,(*Tm+.3cmhY$f)nh\U^5"Umrpbn<?aimKKf-Ie>og<(K,ZsQe!K1`oo7m!%g\XpCNF"d:9_F4u&+&V=FM2fn$uY]NZh41flgZ^6dDqHs4^Xt[("V`D>J42MC%T6)*kRDsi're-[(f@P9+>_0H#EjsEbJfAl1:`N%8>EY\;Q9Z'+5!N7]J>c+IU"<fUT<:J;:&dT<;LkuT37qml@Ns&/DM7H(.k:DgueO;\#5#0bMm7H)dVm\1s^Zc'BrYFs7l_bh<=W&%@CJ,+_&D]X/bs^]!_'jh)pR9_HX9"Jh!&-_VQeGVBb^Cf8u939hUb*?fBCZ:mZ^!Vh3&:L4H8VJbAHYAKf#gTX;2;YNR"3XYIlcu%=ioRQ:9N1-r4ATlb?t4oC7[;oqCCSNmo6@]E^A5[Xn$<'X:'INEqZK?l9=r*^&97,?%kH?5hkTPkUD_n+F8sP+`G78bUsXYm-1.2%l$I/Inh\=uqe>ku2F"'V''[d+k3:af6g.HA=Zh$;J,3#fRWG+t-tZ09PhE[Xd'jOPRTiDZe(9f@CI(`&`Jj&FWOLL8OLM@Jg"l>E%/q*SCmb@HcICW<aqno#J;lfnqYP[KW:9f?4=2cJ'AHk91:;:C>iD1PQWuLKU5)R%LT?N_M\,Z(qgUj.T5Hg=LYFqeP@UGbhc)7eT%TtA(jo['N5MRIdDqXgocH@?]+Z.[XnhSWgddo,Vt[2/U\?eLm2_^UmE.5M@4+`H\Y;JBX'pN^n1c1c>Ei`C>^4Y:3qrNgP=ialaW%(\F6Afu9@2D@Qn7h7D?)&YFYj-?t9!Q,NgY0QZslf/XLMZgtFDiL24/)>&:aWKho/(-LJ=(\fM5Y]=KhGZMUef-'AF)77DO1Irf#%CThcEkAmmbV9EeHXtX]8VaV'"3N_9ThuBFr%_-,fCs!f%brK_fDgkM0K=_4;ra'g&S'KSD?5Gl89pO)]=n)c5Z-fCjjo&7OUW2ru%A\2q8l@$-E<4@(FNIhN6,DS0,Q%'mJ#;sZd$S'B0TY=m1<O#EgHq%f!3mO?*NE0\)VqjhSdiYtR61:j<!cNP6I,4B`G8d&B(N)SZ%"nHOZ6&dX8SG3Rh?WA2!d<BgBC%V*R]Ve]iY3+./hS'W[+gb,=*Bo&o>u,$`)C<*7C%cKuPeb3]$#LCDOUKL&enj2*q8>`EN30s&%oddU!/beo/eJq]:R/VOah4096-D[I:_>'&4M`gY-+h&^bUtgh(1B6Hqp42oks)a'9!OA561R[UDR&s/f0"\kVg[ir'k3A.T'bGMo%]s-?/i^[+eVS,(_LZ#CNn(\^FCfO*[ZH><o!J/KnRf-DRC9[u!!R2R&Z%9&pZtU+JUl5SmI.j=99KU#7]Uf97H(?q6MqH14f\Mnm%/WTD`.=@[TBC9Dp;hs*)^-LL-iZlbV,kOr?g=OefndAUkH4W]@p0J;&M)7Tbq.C1>pLm]tgQM9cLlF&a8VjN3ro=SpU'Hl%IkfH\%(6'd=H\aD,</gg=?N\@;*5'n>,<5)_D_\VKB_YngNZWT,nO=)1YN=fkJ])"tTlnaiRCnpe;]\n@*+iP^EV07_S@.tX*DQ8rI*.(U%F>r4'n]lP*QBK"hpI?Kp=7e&RU5.u]^uq]X*EmU8d3q0EF[Q9tIG>M1YjO%S4s@:[.QQQ!_.L6b9ReeNnORR_fA<ZTB;I#bK4cKe%jTThpei,+Md28`rlIOM);)Ftd>]pTh&b!%;</O=gH<!&Obd,XbA+gOLjf11]LX6dK&TD\9Ti]+D/Be0A2oUke>&MNKRCV->*#M!X%CkWHj$7/C>UU@JFH,nlS&eGDIZ0\O6M8R94bWG8/qc/*A*&QtP6ugk)=.-YqM&aWOH21?E`aAJA05S%iO"imTcBf#-#F#`Hrds*N%K@p.8;8LH!I8WnCm,XLcP^jYDV7.+ofB1@o2lMqUama[^WqA!NI9'IgO=^&88TcC[a!K0-_C(_K5HSh%5nIcc3kE`q^0o4@pEC?9%Isf.'G6]S&la:,KMCH",<8I)eBtmhD:tBb(DZitOXo/fq:<j\7+Xi2P$]7on8`pLfXRWW0Ho?JH@1dAJHcE6,D:$]#"(*V)#k"43%NPc0V7`NTrS!2h_O#itTClHMSURde2-oSlD)ieCRSV^3;P\;:<XR4\s@!;AdfA<B3#`2`$)!cEj(g$2X7#pAI5#QA@S)@H&gR=S`%XN]RLcbsdeWQfq$,cp,4:hNEb3/gM$+D_[)-%A!64!o).]8g&)Q-$1'&SrBR%MfBR&A_BIQ1ut<3$Jr4+H_[W'<c75*$WnDfH!*A%I@fCqLt6t2`R+:kO&]Fl/BBcGMjeOFqol0>H0i7WKQ&hsg-^lR77KiG%FD3]IC')L0MYG3&0<eofM31M=RHd=@gIQD*2VmcrdJYa%nCUAELpI@L(+fO[L(OFbrd"Eiki(=d6k:WTa&32m00ZNJZfV5RiI^!1N;b-O"%TTJP=ptmSbV`6I\3-UI),\&lGSM/2o,T+(U8c2%0Z?DIJT.oM=PbL0cIealmhF[R:[p[tbnF@iM3%_h:5p2cfQT]gm[AhGT@coXf=ojc%ulZqK!JfjRiA8@<:]M<Y(i^&rbth]@nY\Y%nZ$0NX"+DZ3!d[B#N*[[*>1>W^JCnj&GQ"Sa+`JV+'AZPfKd:^MY6d5!Vl9&[O"hlLd<%I'R1f2?;l1IL[H5tNG7='35NPLVY#FT%8r(ZX(pmNGQ&`l(<J*DO)5[\iX\3_Q0LlOJK64gIp_DaY?!@U%=s=tc.NS.Ab!Y[/bK9,R^ZHK76Rf4]$]XgJ$@o8%Zp),&nEba=%KR*9Hksr$jJMrO_Mr`rD[Oa%3c&'%kYZCg/n9KDVcFX-cPDKtCjrRlKYA__b99>o_4(=1:AWr"\@TEA*DciEdP:"9nKo]0G]@6Sc%KdsdG*)C<hh+58lA&NZpAmeFee:N[YB8i)_[heK-LXpjHQ$Lsd6`l8K.i"FHYWVB^2[a/SCZruNX.h?/?3RWWFa/$BkZ;5)8nQ.%%^/.`,W@_R!-A7a0bM83mXo#ZU-dfMt98N\\40CsR_JF]4(mi(igs+q?'$V5DLWUqjd4S^]2S,`<ETstG/TU9s\4o5_OjWoX`^['X%>,!>&f/*E[/#an*4_Qi?n#YP[")!X<^jI1[=[s5CKnQ;??n6qJo]!Io_;jd<N?cZZ!'BbC.pN4<-%sW#6Yeg:A1bSZ5Db\bZ%Xau%=R"co27?N2n[b7u?[Ids1u;JskY$9C"inlsX_AKCJ@0V1HSM6S>Wn3R+FLSMm8P8%oXiVJ@'_nD(V.C%Bp/?DM[Etum2q87L=![]%^GZ5I9(^>!`7Ka/WO'Al!^h6\2qO7umqGd.>o:^oEO=\I>h;$!Nae-+n)<[25'[C.Q:R(?%C)L<>o6@qOa:KjpJG+Qe2+O]O0o,T%6H@t*:)cBE7nplb>t?2AOkT<8J#*uj_e]CmE=(0MX7J(?@Cb,HJpU::WBGGLL.!:uLb0apTpq^cmIcV%cgI9r/6t:hTsOVCf'FG+%[Md%n:%?'F-&c@]BU4G@;@BaFJ=]iqGT8FtdS#[ZaUu@QbH$qJQWbQ=d\iH>R;eCGEmg3M:%]l]mqA5^CL4Zj<rp\.)e+,U*@R-+%D2XYg?G23%G(Wd@dd#'1_;PNa\<&FT`KS3j#/"IA*66L*<JC:j[um.u4WG%A-,m>?530^b3cSGR[](?+"$I$)mZW%/mX&]Fq<OFi%U9]q\T.k>h'K:fm):$#+3c[j."EN_#1[#J9alLhA2<r;VUXF2\*4k>B3m8A06k16.CLJ*&bd/-JLFtW?Nb&TYSO44GW09L`PV"je%%UF/\*C%/Gg`3oh$p$?AD7gk"kR9M:A!>!-o8>$cId#__b2IF*qGirn*LT;d_D6[;kK8E>B[LH#cND$bU,T]/OGZ:PCB%7bR>.t%%VTR`99i'^k-N?\Id;T$pUf3ZRHXCl;4l<:o,+X*)VZ,uMPY-eKBm=EO*ek-VB=@=k+.Wa.f(^p.mn`=c1Ahin&'OFV`8lQYQ(e%%%XM=BT]6PW&@722r;V&<41()DH8qS<h;+QBfc1*7fVp#_o)pGN4s1[clUOL,p?gbnh$kg5g,W'3$O7^Et)jc<:$5/FNHFkpqG-Y>f%:<:hGh1jSi&t5#og`@hBjlE=N,Ad?&#SXoe6uYL+0mo`oBSKP]T;M#37IVMqYM$Q<hh1\dSkQ;OLNe)tL\"LTgd&t+MF/\X<i1oT%=bkCU1G\f8^-*#X@P'Z2i/EF#\OPHR[+`5J$+t[HTl_,tP$XO/2(0!ZQN\.>FH)C&pG5>b%?\^*)P-m`m0QsMVl!0Wm"(4;*/+Wo%O6J?_[Y5^%=:%\(p:q3DMkIZANF2sXK<`J#j$k^iD9F(P)rtLna>ps(.N=Tr'8;cs<>6r&jClL#U`3X2!6(\]7#.SjTVE&&:s>7h%PJ=Y6nSWL'%F(K$CWl;("H<2sSEtef4uuon3Jh31'q\D,E-P6OAGl*51q/0ej1>tGp>1#,J_d!*DB*:B[#.0/Ts"NiKR)I74rd!2%kog]$r&H!S8*F*5lg]YQI8"X=)e95LB93K;k#[;$@o-oVd$dXYbmtg536sb8J;C?*X5lt51LH/BYr@W2)4p*QUO*\&%nJpB:65!;%*TtZ*TU`H.03"PSAWQ4e?R@Vis6TPnI#pK,O%qFI4$H$DDgsNSNb'TU!j5JcjAs;g.KCb@#"lbXiM[0lTcu7S)0X_ekVP!^2$tdN%6mgA)Onm]ANQ?eB=@bhlJ&I/%=2N#`1R![:W&(KBff66p(_N278aIRO.cr+?1:VE%2>2;f0]n!415Ru)BOaPCE4+F!eg<\MLub)?%SG/u,/srHtST6HoP]2WKb<t*skXf)jq-[#?C6YtSSj]8i>qSj4aUIQhTTG1XVb0Xd"dD]^e57Th';:P^CTI&:GE&!%_V?5a6SX!?%4M'Ts-o!]bDX;G^g'>.RAr(<1@De=ehQ7T0pE1)\SCCE`90.k;JdtJWo5E,?("Q5&:.FI*`J5&siJ'S#Dj5XZd'][+k/1UXj!LN2%cA.=GB/+!^S<IUEabUlrHR'jYDTIdd&bFt5ZNV_I%l[To:*Le*Z2-pceVK=u(],28Z1?iT`oU!5EROZ%h@nUgma0V03\6>/r60Id%DfHSKgst\oO<mpcm[csNnmAe6m>2gInYHFe]77dLap]]jDibeb)kGKb4Kd@Bn82foa:fY#cU9P!E%aSWh`TCkUhGftEa<oTCtKcS%BR)3+-6]e;"q3oDBm:BX6$lD#)OS])iYlZ!6kLr=eCN^82OT6Y=lW'?38WWpCV2?`dsu/@?u\FU<h/CV[=h>JfOoCBh#.]"@j>*[%L$0b4LYDRk3taOJm(jj*Qs!PZO'uJ^RE)!2a;9cDQO;c&YmD6na+cc]3%?/\1A)WS7QNk*C1ZZf0OQS>7dBYW1/]4.-]sOK[7hbh%(%]BkOcbOoN1Z5i[J2OU_iB9hSA04&k?iQo/>0?i\BW)V%9EV.iD"E!/,jG@EDkbI[+OG<iBkRrU8`,"3Uh#.pJFlJJgiVB<4J<E%jd<#dM:b@YP7#pN,@\Sj\7icVaK<19>$Ms57/2@PK7n_cAGEgK5e"hD@Zs@'=L5id@\)!`[O9FC8i'F)<d7N<R-0:an?o(.M[Lea%/^F0,dql]Q6p82+UR#lY.gLBhens;Iho"kJ'dGscoZju.i&r?%%*/U?RjT:>NN:3CEOu!F.bcc6:Z[MZe'`EJ2chD7Cmhcn3qM?:%WO&/M2(nS1q93':OO#!+,m<CJY)Ld<IghX^S@mNW&UA$TWVc1SgT4b_Vr!6(2q`'8mGpeH57<J9+,fCV<%BNQm3X$pXufXdB#P)9%96RqgLM,8uV:q3=7UI>qlulEGTi(i<AueR1VbqrL)dYDhghJ5aJC48hk+e*qj@j6^9C$A#@2X7.o^oW_o+7@!GC(EsGP2c:@Fr*#%#\oU]a*1Y_W.nm9eY7'jJ),c:=usCT&UZ;tJS1G:g2gAk^\V%=VCQGRHt%K;)DM$(-.cVVW')+iQbuj+^>gXoa].Gs&R^LeM-Ksn%psj*.=_c^.DVLQ!r\$/+[`P/e[\EM4,\#ra`&bhBLmg`fA+^k%<,@f3a12`9F#ESaE^A80eWl?28M3OWdWOUOLT\[o;s5"=iV(/'%A)'''0eaj@I2h\h\Y,r.CO0fa;>FVXAKtm+o_1$NW<%2P7%kmirSk&N.3h[[7?5EU00?QBf+>K^?,[5.a^ij(@H_&m(dFKB.$q+*%cBPT?l%/tCr%?::A^^hEd`"7mEi<fcnFapqB%)H*bK4AFN>8j]SP9p]Hj"EZR+ZR&,D"t)H0>/PZKZs]l%12)GhI1)IWJuXflTNj%FO&V+`3SWp@Hbh0j1B.UQVA9\9BX<'-C%:A1qFrI4je)Wi)S/rB@@$XPS!>P9K$2'p][7*4B=@G:bH%\V)1e&>u4OX+Y+M%9c%l)%GKakaIoXS[PG20d9fOE;@V!s,Vq<u^F@!HZFS0L6flTNjFMTotNK['Q<'c#ZaLKoF!a2&DP-CI=dBi(hD!-KO5dIZ$l%3s?#2C^i%68i,r#Xt924^p=?fNk(A(XK8n,tH2OS+)^;;7#M=3oiNSI].'D01lfd?pmJaf)Z:^EW*3[pZSIT?II]'CF\B+@KFFh]AJ5f]1Doe%pXKFO(R)S:0(usb"7N:KS$U[MRe,s"*L0C=?F4.gJ"f]V<GpXrKjdj<2Lh6tlJe[bp0U*)SgcdP:'3'Jh^N1M8;1uY(_.j^0@B=9%+Hbp]LplCCXtNbWcId!+hXB?O'IO;IbVaV'13n@Y#D7Nnq^FGoI`0<CmUF3h`k(<XR4hDRh8N,f$G5G<\GaOE??>9k,p;uW]A^VE%!S?*9^1ed%S&/"Rgi6U;H-r14nS%DLGB(r_CEJKUR8^RIjg8+(N4]2]+@]s?,,WcD4r@oS53$2;gr@4`M0,FQ%u8eQ9bQ\[9.KLD%EMge%J3=1l_D-F=)W"2t3e')%id*MFL#%jue;9Fn'/,u6nC[B'5GJJp9o\"C)f*-"kOcsd^PnO&2IJK=&A+X/Z<2I9A*o#&b2VdO%No",<,i;!F+,@O>dbup14_*[)P$46q$^[/6lNuH:2:OdGPIP:hhig%I`7f;4V?q9]_Kg3#VZL=-!VTeaIV#%.'>QMd0_=-X&\<&P%+sna-7l%l5E$JElMu=\[k2MAL2Ln$hB`a\Orc=,&c;f[kaoI\I7V>-uEJ#Ds3fUC84Qlu6a*o*`o.b,,6hDBd=O4Ldk$fp+3$j)]%-Pp@4]=ZMsfAiEV_d#gcInsNa.`9Vi$qkF/^!lIc1=OTo_qjPPQ,DBra'&eAL(h,VNilN<hf1U!1^q.XDTL&B&bCh\DTWoJ)YW!+%2o\R;6ho)l2s#`h_]`s.UUU8VT+jJ^14T!ca:3?GG2:)1XM'YNh@s%O4a`<#k4IcL9e<RCiS/hi^kfJ'`P*W]3qMlT!dX$,94n)b%=/;Dg5#`_D4_)#u>[$i<Xr077SR.X![7>63r:\\:jh>H=3q(Bg%bTALCDu%<Q,F@RL%Ao04bXf<Z'1QF)[og2_lj:aC:OYOnjdct%-l2PjF0$q<X:1.oH7@F(EHGG:^[`^h)H0TJdrQm9c]V=`bAk355)G-W<em0!!QQLL<2h#M_m'%5$CUGYfl9pL]l0+XEP2feZ#T-8%pc5Ld_]MSfIa6L2A?L:?2s!a^a0h#NL+_C0dX@C7jgb#$_[,@[5*Yoi+@;kNE8;as!9#UORb3rL,&l!A1Z!:6/rH9A+eRT*/l($l%c\l"#k8,)>QR)_tm@;V[^70mu<LMU3.T45Q!kTYqph*A@hXT0bfVg/>Xuh&SHRacM]_AY4(@H*hq/AZ,;Ks*dkN?DV%W,/p98d5H%J&_,>H+*2jHEZ1YXbZD!_l7Z\%<$?$qX2e`.$=H**k&c6b^7u*C^UiSBr?9%5$W<WSF$T/X]8_oj21`FI3U!pD'AJi\V`WCO6f\c%#^ik*)UbQ=S^rgZ04FZqcOl0)bSZrIikO^FfCW?>UXlRq[F3srRBKK!n&"&@K<+K29;Th;G>r5El*Bo;V-s9RDIe1W.)l$UWWah@%NRH#0C+_t9T\+"[=)uh:o_MV[moj[rCB@IJ+i8X?:'QWeE>")-06gQNMK-+"`jj!(,<E6301$;5rBkH$ifIBF_GMccmV<J2DMak:%e/`ukH*@b,(XS/N[43k'$MA_hSWEs;F?X(7>5YJ/(gF'#Au,shUD\iZGZEadf76#tK<joSmaC*d70HM:qm;)JM.CVO[YEM6'noP)%P^%lWdYc\R`NTZYBu27#8e7DL??&s`43#LW=/^I!`e*0"]WtAu4S7H*[jqQh_?@Ea+VJAgiT6u#CZg`u*ujL\\FB8qBbF(i:F-WV%N]_qB<lS`5`Z_^G(k`dWCC0"]@SE[ZcDD3R!\:n#DBd+dQRCuA=3ADcK>Z^HQuEjMB+5R]W0I2>r55*gjGg-PhgMCTHs3)W\!P*0%,eJmoj_XE(&Y;t;6$?JjkQ^ERWU:2=Di^C0A>e4!_)UTtKP.b_SW"K))YY?h^0*Zi,+obn"c@cS9IQ1T];A,"Gt(O4*.6ucX\-*7%-E=B8H]89ij^t;tAc4P,O4q^iouaNh)jJN%%)iFP>Rj9/!@sL(Fn/@U#c1X1\o=T(44K79JpnR\$SZH.TP%:8SH[Z,6Z<O.`u6$\%$SZ&O3F4g.<Yf)u*5I+aY_Q45e;\d*]:i\H!QN@b$pLRJDAHVbH3WWVpfW,eEr]_Fa:VR*EH;*bXM.,9!H(hPqKq>=P`P60oHYLU%"./QfjQ$>E>Oa?-)fu_3A1lu=&n^SS^6Hrf?d_/\.::0pa:l:PDjVs.ka1l9cVjXQ0'2\<Z%)+<^-G=?/tIq,gR2G*phZnfme%Oe%CoC5"ob0bns/g_pT+0nof.VIAide,nf_>52G&;^+I7jC#3?'I!]m^(0L762sIaPY$%?Y!X7P7(o:?"h=q?7c'm]CrP>KeFuBfP<W%^JQbsL>T*MT#ikF]meA<qMfoQ-+hcI]XVP.Hi9\FmRSiA\CWB[^OEg9We9d5Mjn'6hS"B0q9YH_'?J9?h!=,MmKG&N.!octHi9[/%1+Xqm6L!q)<kfJkr`Jpk7;KNF]:]DblPKRb^9Mb96Z;W:kruhT<F50CI,iF9[h`%g8$5r'ENe8-BfV#srM%b>BEWe^Hi9Zt'o4dd%8RpQAf1/HZXaZDm,-99&]%8V3<kmROU#GJ5M`(eFAYi*J]p%^'M<-l'hs*/mg^gsI0A6g?]T6uaHi4"\=WTEr_r'br?-@cqpgW.H%(O`>k`#@NPGn7<]>Q'?tS%u^ddC8rud_ebrn9b+gbY"@,QF1t<?X,TLk[)$oXRWgpqSg"+Du=t\U2T]DmQS?^ViUjA^/=@lo@Dnc%jtA\MAb^WNJq@](SZ!4f?GC0/R[e.VJU@?iDtP(-]uEj&O1a"=\@HjcHi8[[[;"]KrI!jc^@eSTn)G?6RMC)ihtY=_lrLl@pK[68%rBeBSCdSZdWA=1\IW<Y.+9,Z^kdZrQ:9N"5oa=A6F+(.j/N2%jIaN$ph)RUs]me@H]73kAHEUZe`FA7g*9(;>R"".ap\Mk_4ZN/K%IXQsEk>jgFPqhb#Es=Pl<^5QMq6BA\Mb](&%!$N$hWkuk@O"]cXF'oYGkluU,MOodHi9ZT(C$B>'`24OkZe#L\NT!1lc2j0:5G`^%ikqCROpt4tGG301k3u]s3Q-#\kG.K6703j(_rMd*qsR)b86kfW';^O)_qNmZ$Sn':CojU]Y82K,Zs:I=foql`%.^[D(Hq,.3_K,k%"_qU5[<-m\,@tdW9j.\kWDYNBRsQ#e^7!-Xh7#8Lo<DX,MDZIB?^H]B.pi[*q<tu'qgP')rr1"YWJ=)GKhjAV1Y18UC%gcOqb7%h%]Y-8sN:pj(Q#AD_R8-@=gsKI!B:kMpeak$GqW";nXFFU%f7)%Nk8(GaT;daTK1,QW[BY20Wbp!>^Rrd>FD&4"*2fs#\)q;Pq&L^Y%qgNI%iTF_I?>D^R<lr^Obg+JVMt<uKB'F"kV7_:b/Zl'pgJU%]OI+,)htEleA+m"QH*QNo?0`Ek96^6SGjXe"pSUb9i5O,6G3(c[%*njOTmHm]XdsYogATRQen>`Z>]6*H.nCc+#rG&*p4E!=AK(hk9]ZB?Vh"K]U&?uL$TY%nj:.LjH7J?@`^+rbOS\D\IfUQZ!Z7mo;%MY@$*h5I3NQqP$:P=&85bAHV`pT#;l8PW_E=2)189/Et*^eS*?K>$ZA51$^dJf@j(nRSXML&3GfX9DI1dmt:(MKe19%Cn[/n@3O_%@iQ;b;qp!^qYkZH>?rc6e"<P7lYZ;$aO]/%BjBIV,gs5/,P;E:>^c3YklmOIo$XFmac*])gM;SD%d@!]X**(>*F)r909r\XG4?5f%pU$(!UtoVIe8OW]*TB(Ng"njZ7<n6?+$$B7k4g<LT#?Y?->!q*RYrH[(Bi#i)np2@PHUXumQ9pGOQ!C.ZfR?jA3mW8dSb'FrDT<F%h:n-[k<>INBo_DnK)!FT<La:eie,.F2s8#7pu'8q3=iFTK6H3ZBLN[XmGu#:^Yj?6KO)m<o"rGjie)HWl9*.Lq[MZCR;E71_Ml.>%;HAY25F/:,OPRHHO;pN[9$]->.p6#t!j?"[j"_k;l.ud1rLZM*N_U*@U^5WZ%q!X.jg"\4_lkP=]i!uBRZ$I^"n4%NXXq\,(>.R$%mZB5S<XSC9C\7<G6X!@YQ>3PPSecbk5)f&(^0s`?K"&"13r;>s,o0AM.<V7i%Fq%]LTe/T-DUQT0.")2j)SY;OLq#gHRX?0#OU;8%Y'H#\^fL%#MbiHtL&1s`iU*Mfa5oX1=WHehG+Ocqp&=:9Z83"@^r2WoJ=Y(:J:WdcqPc5m[6d%Xq9KlAVu3*sMsBG*H2Lh&,G3I'%ql9r:]^&[1L!2btjms+Df;Tc.7aRSKO.bpr4T/6I.;Z43q5btS2QtKCjVE@8Y48K3V`T<P<OXU(\0(1Y667rN<f5SQqX!KoF7-?H%?IJiF-11-Ur*k++rAEnD*`*?u7BZ"5B+[Ml],^'VL.("oQRGhK]D&H@(mnT%-%_29NH+^#gF3%rG;$DV[r/S._2U;=1Dd^t_5pF9%3l5\=Bt=(bd[DgpkE#?.$]PW;9jm>M92amr86Ykn)kNg'Q]KYuo6EUb1Vn5*\O:(4roOM6hrdrc>G!sIV5#]gB=aqKcYo:D8A&Zr%k&uGH=TP0IOQ:#Hi\l6k>lmmnB+kI,Z88KknA^`HYRIeuE5PD)%%+^!Pem.3DUu:)Q>e$>]4C5"_$LFmncoEk\EENh?C%$5NmIkW%\'b&:QOE%96[<aB#R^4$c9PKKmU[^Co`1t>J>Y;N`2?Si?Z/M4kX9U(p5'7hS[1BsMnFP[94WEibk'Hr$q;5?d,oQ+X(Zr'__:Ur%2j#`*I-,0;YjIqeFT]7RI_=fN6&b6Lp^%]U%)c>J"c##Q.m5,bE-u;rQJOCOpa_t?<m&JTlb`MgC23S0BeQlWSNBIrrL01oVrt%E%S@XQlWi>*TS))R\VmDms:;+jp>?n^4bkr9=@iJ(>GhI?CV2+WN@kOqC?DHmcje_U[h>GR4CgYGXh<$?@rlc2QmZ%2#q9SsQ9U^"A%@J4WkABTFt>Kd#r"PR[N7LSn[C^8\+q;-#VG&GLLbIc66PP=afgdP)0.K9=s4X67o2t].3PcEt[&Lk/.2bcsNV>,5>j`PV'[f!3$%HaZ)NWYUJqd.+SX?["d\7s)8oJJuil^W2+7KZh2QoLo@1XM[mKkLp9^:g06k,cP!ak"ea]*u!mZ;:f00+>mm/_&fUf4t`XJjm@>5%HgTeP\X5C(knJSb1ga`(h'KV#l_KD(,l]6;D"I4CZ.'T#U5-=1I>A,EmXMKo1<Rq[ea6=/:Tkh2D6K7?p&+"Nr3+Q:BjKTpc=M(9%]ruak>\qK,k"TR/3XFTK*hAR;)/V>,2:b;g;B$m235)e%Io.S*o4KuCF1m@o3,nFB?2&G'5,47p9]C7Z:<0ip2J5J7>kq^jcV+pV%i@$Fl3&eOB>5iC]U)6$]Qh^V&XE79`Su7kj[R&=ok*K!sf#go8SQ_sN5e&_%4lG'-(>hHSAiq.5OH\KZeRA)[:%iSFbZ,*As6=!%%YPd1f8<mM?PE4@[I:NWtf&<lF)aCeZZGU[oMi<D"`EPP`<jMMW:&"+g(jD&Dq@(7-C5/;_54WNJ44f#'`YIeoKK<4-6Yl5NFZ?Z%%-Z?ANU;b.:/g7V%cH"S5*i?PW_%Kf?0NrpC`0Ndfgo&*mB@`G4#'rMf?5lA::hS&_S@Qob>8\S;(@i>7!S?`434I\/[W?B%Nm#DD%-%/"egfg6N5HjeeNn_bIp@!q5>,h,gHD3?)T4WsFQ.(raCo94UIlUQTbP&<W=ghtgWeJLll.rb>pW_ef3hOe\=3B=Lif5ZU`Xh[`%P%1aP,W`b;Yp7Q\FLSVV^\c)X>[;R)C3JbRHCt$f^N\!699mY)VK>n1qI$48$"K'74VlC2:r"lQpH6-Lg[`PsfFd!O3!)AC_UATA%-:#<S1+0ZRm*)aI)SK1/REYLbfZDIQ7sTGus77e5%7;',)A*(RVaPiI__Hm.-[QS;l0_D*2mo6+YBtI'%nlB$e=N`W)p2(4m?_\M%2%P,'M#@n@E[!ZZT.mp*r?jaJB\kj_\rmQApWV7JQieErpE9FO&9+)Q+$0[g8.X9$jH.]951):6r(7F95ia<rT>5HuO3k)cH8enI%:QK<g*l^,9>0hhqQp)j(f@O)Ml_$Oe%RKWT+)Y_<>6h]ErA"K?k3<r#9'+UV<cPN,>rAF-7)-YV!8*V<JNL$Hl4^XHouhS3-dp"V%]26Ruc8?]$)0;r"X]g.1oma/o)5PsL51kF^*hp7h@G3NO?qap6dc?$8+Oh(hQ0*tSLklHJg\fdA9_"gdZa90.;FUO2*@L\0ejtj3%6BROq+nb0j/=oC.0FS`N1:*2)O82>1/!1lfHB$S5&32WQNs0YbK#`J?f,/OEM!6eVjGMm#T]n>njJ)OlDT2QahX.6%`T?*IJg%hf%eC*1NG&""MPuGlPeU@?VQWjC`o8"!k@pCrq_r0BCC>n9`KaT@V/-i;Q<qbob2u#>Rd%=guJbM4aBR>h\P=SJ1:,-L:AAI1sFI\um%!NoLalD]g-,>TR[&_(e;rQ&+!A=OM/?UbAk%b:Km)!o=PJ'ji/3Bf>8a.k"'B$3tf3AJI!NHQWI_&.!=qfEYh++l""^H5VHXP*$+%0=J5,if]PnW?3qG<seFskW[Y8o6bGi:f#n#`)SS\T"q2q\oCFr=?MkMdMp#8Q02nq_M@qhMjA32RtJmEZA26U]"YqH4i_t'X)-PS%cmHc`g#>BeiptDo9J;6M.R0ihe(QR:`sG&YGhbd_o+QSrQ(L8[Mre3=ngDHD-D-s&V/eN&n]5oP<PC7Tin_;qi#`k^1@/O9bWe,W%6A4DA*-a7*W*fPOJLA?qGM2nh"4(%orn2iM_`lKeh_50$cM`65i5r4`*g2"pi5r35"Fae^cOB^-erjtOPe.0lm\"Uomc0mUiE?_b%#7DSRP2"u3TD#"'QbM=+>,-R[,2YCTFPP<aH)\pqj0r0r.ABDc&$B24WY@'l2=VG<!hK<KIZAXf055nN5Hh!BJdjbfVsFdS+L'A8%m?ck(?@)&3@G^=P(_3.f>@i:!lJB3Y`At&P,pE@aaQ>Fmj1"qKV_!5W9h[X9QZo%X-0,/qPmgjl?=_F/W?p?plYZd+p,P[rB6(VH%F,A6&p@VmKYQ[-3Hga^6md31EDhc4$4I`ot?Y>t"Ie]F>CKqo*U/UjFepH)t]K7`)WE-Gq\'oQl\+db@r0Vu)3I?i<;q_`Lm.X,K%9T)j9-\[PW-n2Rlr@FRBjB<pXg;V(.41WC(BlP>5Wr`m]l_t[q">/pP!O;G7:@'9.jA6I']B9Y1*aB=C.r.BD-Op`9f1[cO'#>lF%])?DnSro\OFlFR\C=h,J`L9MX6Sa`/GgKZ]nU>rG^`gP^@qP#PV2l/NI.?(b`(r[o9Pg;J1*S,2ZH*8h-V%Tm0Lt4T`EIQe-/?W8%(qU-+(SQ^''bJ,XXFab)1e\Y`$HV<MhYBFW-16`-1l.^!iGfF[P3,/u*2snL'^C3_9dgdX)^oha,N:s7s-u,[IqH`0WbAO<M@HXr%?KB:kfc<)^kK,cj_j;TJ+`c[X&nYJ29<jAa*&17!P#EpE$5!Mm'eWRB&*MO/B+me-<jA%c=!@(p.#^=XE[C?hZmo=`N1^9F)0G<@%<T3GDZs,YBF`*1SHHRnMbU8Z/nd_h3O1oWhGq>[k$S`nKnlTE;+ZpO,cPJtj)f<SJ`0G^&O7cQtnCU:f&:&*1DM7O^+:aXVr)gna%aJl`0__6asdXC[eYiq9uJjtbnM+*a]j5T"KaGVc`?Si6:=)s<,d)ZfoZ05r`BYidD>Co=N**"3sQ`KhXQ=[4eF3u3+L6lR+c]"6j%=+5V\.6FFZSd0GqQC$Ld2i2UtZMZBg$/]k<Og=$u*niBq55hHhB&bN#Rm:0T4njpWn*Uhc\iPmQiU.'MHDn(uIUB8OGZN:bjJ:j!%MYU_Nk(<J\i/c8_qIjA1GU-g[D&-1-#@b^-k$HVeT['XPkP,-d[LnL'mVFGc:m#o_Kk94od.5Ig#2+86`5;]!BZ#,pkD,iQiIN[U%o'Y'H\duPh)CTji,k:-lI0lYY^Qtl!p,6E`Z4U>*C=2sV\!7DE^4'Wb,Xm1:g;<sg-*oOZ?'8smrmCCQP*Uq@_9ua^O)IJ)0t7e#%=I"TBm567>E0bEQhA:72Dncg@#CEFk2]n&TEDHY'HR;Qq=kG=0$SeL*lhP\5iF%l$H`&[-S]<hX4a6l];_Qs,:GI4`63\KPZ7_E_%T;QOtGl"4V-GIi[:):<4-\qGbEhH>.<Bs@I3m7,WYG(C9`s)Ad46M^hf-JJ=KqD?-P=DT$XaM)Voo@Str)Q;Xhdq(:hjrhU&s@e8%[Lss;oM--BhisJek7!ggT7:r11"-]#@iFOpd^$RU[(Relbq'1UO^@2';7Eo"mP!91pDC;4rA!=jWm35e+B]fFfBkH,foNH18J0,d%]k[o&!jMK#I_!$A,gsXXCS=uc*F2h9W.J9Vji,R`V9/]Q96r-R02TJaRG'$CbRuQ1ncpL>#.oH=4EU+-<Z(c?!14di-Vi,4nIeku%T(ok9`6@NE2]":).jQU!6Ken+f+gqHYFV+UN.Oa7pYNaR*,>6FC&>_B@!mL8jiC6sUiM]N#>5QDO">DoU_Ck)KNSU>^h:A9eLZ&'%asE4WL`)+N2mF31aQ`g:pCTE[!iTVNP]f-To+oQ?pQHnd78D;Rh_c)r`u-4f0mc%+;Ccrd,U/[F!D!mFnT]VGmf2!7R$M;//_r1G%fs@;?X`Mpi^Xnssjht=HS(j.gb@\.^maPtf[K#rXXgaq+>-jQ#9kJJ0KtTWB0@nu`eQS,@#c>A(64AJr-l0$#&*WNL#G<iFptO[$%gmpX`W"a_S\"!BQ!Xn;]#0EVC");QAF.MG$/Uu87E*GRS[IgeONYt.%e;A@DTN2I`In>I=hAK[ElROXMQ?fT)<H3Jmm=(NDYIWcg%nc&65h;,G]f<7!let$tal9*in`Ok^.7<p,enOCB6Yqo#.@m7ikiB=/:Z^<_P@:-4BVo@.ZdE9m"-\1UEIY_LF1BJV6$$i>)hpWU)%o3)+F*;K8r"(VaJo!+EBh53%WdcBU#QIpUh->CqeXq4%TA`<9j5aIqUd%6h>klD:iS*q6iH7@>7)X*:aVtXs"kkl)Oe&@Jc(_B1K%cQp"`F:%QU>7o?N#:BC2a--*ArS*/ci7KSSYXZt(dDEWjbI2T0JD-Tq>nm%5)_$67_i="b!fC[Z1nLT_Heh^ZiID,`]j=LuM$tqe%rd(!o#?55@D^>/OE,Pb@h9/K?]fmm7p7;=qoib5gVlE4d?pjg:[R-$l^n\g*lV3\Yqfsjb:J\8MqQJ&sf&7r?U7nRoB/_rLe7X(;%`QQYQRMuWA7]`@>b!-?D/AkI/s$`!rE_j[<h.3$Fh\`EdSg8SOhO]Ku'q'QO\d(m@Z/#?8+,q<&-/t]oY0)Y1Rqq0:b1';ajX=u(%-X)4qYf'Rho)&Ur4@+iXkr8p&Z!@o^X0XBH.p_>QYI:dN`T!&_C[:n3S+[UX[Xk7G^k7UuGN/bX1;Pt$fM"kq@&OKPVVp"(_\t#B%Rjg`M%r%sNDl1mX^YoTd@EfM\5g#`uP!k5;n)R0WdHilFCYQ>rk#l";d&B?Lb#s8,nu^joCdG.3\R+i,YZ."C.LAb-oCf:9/sd16%eC<X3%UWse/c(bO]2Rgs],>0]W_M_\?NiAIV`CZ,qRj-DPFd90di_"NM-bL1>>]%bmU[71i\I+$6-hY=0K_<?6Xc&3B9f\\Q`n^u%&)CA6B[i^>SC8Xi[`D4gg/-Q>/mM8",V*,-O7b*r/N(ROk//^PS%]Ui[dY6C`YGkt,qd@L&Vq'O5YD.jmQ9\a-N[Frj[:NP<M0%Y%-X\0^!+ek1$)eh2+tV"F7+`u:\&;jlq-n"3j^)r+I,#I)ClFY)6oo(nG@=gN,$CTK@&:pO(7*`-59j46(`*Ed.0WbW1t7HiW5)[q%#)\DkNKp2.))Ni[1?3O&lbe9i//kZ1;@KGn<T$N^>`a`E_Ge;A6I=L7'T5&bQPW.+&+4&"j`)Tjno@8))bSoQ(s=G'<J99Q<^7.k%>L(/(NMudebC6>ZiP=T)A2g<Xk!hT>ZEU/^JeAZ:@p.b*(t7p6l;$^d'RUV<0"N?ARd/TU.p;jL4>ga20M#$D>TV'@O%G^T(k\p4%,*,0tBf6HRK]56G2Ln4#G=.67-/U$_eW"RF:0%\_Z+)SRWt*-X(Iio7W3A[jk\TOaV[@!?WM;!P)EAdq80#L7b(kVMOo8Bm`oICo%0Q%NfOT_"+SCA-.13'Y:+kuG5kknoX+Xak744j)R/TBO`daRJBF1tCa:$/#'I'+mD]@CJ5NY>c/HL-(lJ!#%tlIP&23Uq-Ma)e-@%a;m(t^d@>`3X6F`Y:P8*ShL'=fWEOW?IbJ:obS885Tff9qq^d-77;Q:&./pTC$1T."7_K'j\+8eAG&2i'uB2MhD]lkI]iRnb08^t%F"ln]F(#TWSF^6O`UdTUBl_drNlCU"GM9)14i#TN0KPN`]&'T0Lr4I2UUB[Y;qe5Jf+K\+g6RkbJ#t[Go*in4!*FuX%N5MPjVP@W%#/0rCHU7_6g:+\@R@iJB??1XNe0e<5N)bWe(RZ*J:deK5Q_=0V'95/'OWA")M_3'Tf-lJ;]<fuBoqfj>Nj3l/*TtYel9&9Y]K8pZ%ptrb(\U&8K93M%hI_*So?8%6&Lq=TcpTHAh$1Vno"uYng,Fs6t>Uo*hci"M?6(kS]H"N\5G9&3\fteiSoA)=UGaBSC99n\[+[+[`%H2]g6Fh]K_38A[)`\LoPWdgNDRW*GNgR"8m<'a(GLfg#*2tZnUpe:QcB[ub$SeM$IbgKWXX'BCU2$'HU3r;mX36RhQ.P#f;Q1JL,%;Rgs&(E6:k\[.3L\^Kfdp,*r@USdMX<+jHb&gsW4StCm(o#+:"%6Zr+4^)t0-`DckT:/;Hn-%:go2BY^h`4!1otNBuCXDL@/3fJi%<H3:<O\Q#>][lso@fcNg?[Jt8%kE.]3XIf<s%Di'J"(UZ<ii*klgR>5ki$;dSs2sl$ctaiS=['t:9RcLld]4a9'>[(.Y;Pu%PRR6%ajhXgq[@&fP4O3`oF.STd/pIB4p-Pc#q;9pT:>j+^>[C06;#]+T*^>t!Y><c0Dk7t%tOYCPbmG<o);KY<q4/8KIg=FacPSZW[Sfk%<mB],68K3#lRqPNL$>TH?_,g<CEoL<_o-JFe/9HqYuQ])F9#:oLJNC"AseGb#i.!K_j69-qa3'$%5T55n4cihN%%=$.JRT2L?ubq%!&HF>@9G3Ve"hq;=uJX1N+,Gk!)`*A.[sVIODnU-AnMfP;6VYhAn2UnL,XDFWhsAZh:@`!%M#;mip+=0*/9bV,hiLEL7Bu896Da$%+:JFTMSU93)ZktBLfa$:\Y!&Z7(84!>Sa!-0<7R^Q=LFod**?<V?2`ggWEW]-+gBN6BM6K!4jjQdPA+&hUDRK9bnn&UaZBI/kB"u%VJah^3)$WO:/+<kPtNH#*sgt9^]4N=;$I)rW+s=Q/B*$3Q%A>DCTM+a_V<,"3/jQa&4*BNDV_t?rKJcWb*9:iVIgB?-GKutITs5q%^ukZ`ggcJY.l-TY.'l)Mf84,!=2I_X0-kJ=Kh3Q-,a*:88-XaO6\Zf.3/.F^&UQC1.2GTHh8i\F,*0'00`[k6=^-Eh_+X8p;.["s%$C'(44Yh&:$]m0!7:0L8&.Y"8iB(44dq+_.A/VVe[WDs(Q34tToSb@PZ<.H'd=t*s`7?LA0as-dfU;pc*'JgD$J*1)5Vh\rACA%?%gE=1p9N<59K1L:SY(kco&DCCp;-$<48/c/4?'R0+b#eZG4:7k'hIA5cA"1hhKUB?J&NUeeWf,qLO>hcgKZse!&91:<j(-dLJ_69)%]44tL(gkd%."N+-<p3AY(35lEK9@.;PRZi4Y#C-fW%*?hP&7`@`6?M?RO5f],&7sbbJ8gfR0AsL3h81;9EtZ--smtHTa1`UR@;6*%P\^+]$L/M-?[OX8#/(/h%5Q^*X-.'nCc-k(YH"m'+LYl4/d-KW[#d.4-j:1)'j)+t3ro<o!D#Q,TB*9f8'<&t&<%,*%b'DJ<P*up%'!BXkd#hZ:$nAJu$(FsO-G3-b;'dGU-Cs9cYR_ks'MB68_#UHnf.CA\!<VX;RVoA(*110f2CW4lVEl?%C!u]?<lbDQahZhQ"A_T4%UFssiM@eIF(rX4(lLkacU^H^s&C>(,ZcOE-KWldHP7?@FU+hLf%La57?jAKGNf7_9G%$8AQJt4JFqWg<<XRP<%JlZ48t$$Jl"$RX%3A=/Te;%@%Cn=!1FOHbuGq)?CdOV,]7!kpNZ:QSj?ld?e.>MZRTu[KtRR3h=]&nVFq[rqn^gPr*L74pa@-Z/0Q8R6+8^RYH^'B$0%ZhIQNTRpV#;OX;[[*Q0H+f5Y_cp"KcK9=8N+?#^AZH5Sa<b0s=i-Tc>dLAPpV.X=nPQL%[!:ZECcA"[&"#EW4H49q>J^l0m+Ck_5%`&M!Xa`j-"Q33e)gSi!E1)a8u'PgW&FUnKOlAYZI#fk_`ChETC&9*q(a:21SlB.#Tb^!Fc84Jq%SPm7*$7uB:M@Q+dl__kPK`EGI%ZJ^n'"!(ti:+=-bN$P.#%3qW>==].IMD46R(aL(J)_S'T5e8CAP,SXh.KG#pHh[kGX"MS%5-b<f9M8N%-;lHr5k0^Ci,-T?fm=-^%rAG?f8d0Q>Ulh&G2NYV:1r*Tt`Bo*bU=-$@)$Yf19VZ/56_f59?j7**LE1\LVP-iNbGcB_F/f!T%&Y;O_:5FqZW,CcA&)Ip'I;EY%pjcC'7>1bq"LlIQ<ih7SZC\=!!3lrI[qLM2HQeQRR/B)SP@t,%48;csqS>;&BR>Q,"/1CT%EVP+@ue\7XJ9<UrsG"j5U=518VUaQ%IX+5LEWB#Qh$ejc"Obpn^`6<R/HdDZ":,3;%u2;X^/t7UKkPQXEWqi5kX](1IBk?TNdr_>A%@[[dKAtRI&.6MV\!>6]$q:%R0Y#]%LJl$oR/KWb%9gLiJ6\6@6=?lP<kUk:enb:>EDs^WV4joRO2*nUaS6&q$O_U75UD!)OT;X4T/gG^gdH9W@9gUr`0p[8/$do9+TMa;%[:<nbdE$I1Ae:.?@2abiQ:>*+AZcmVruuWtTmO<)`/Yc\Qb2WO9dWsp*f*7%AQ+4)-C-Up2+3OXRLB=b8^%B9(7>N;_F/rd+qY5\%X8t_SA?+p3>F.ba(djJ3hkMmT7i!$9=Hd<`JuFCs/CX+0@h\5KO']j-12I:@Zlm:dR2f9[NAcR#N6ZODKn1%jBI]jg%'#<hFCA8Y%!COg?'TnD&aA#=8fEd+*pZ7)@1J0P7&6jOfP,SNrhI=2'!jER3f#We[TL1@<\j1A)8OOK!b0n*s+V;U(4VE91jgoYl:dm-.i09C@%Rq`ub4^N_"5,&gd8Qf/nqS7Y&H=;iTe#?Ob#STm]LH%RR:.-j3/7]7Qn_'d388FoXenl5S+>AHER,A,"W/L^CAgr;(Df10r1GfF=%n!=li/dr."M7AG=.Rluo83kcm/-s6-,@(<D9=BZk77r*8p-iAH9I)BG*>58J<sb(C.#.OlUcEOKb%Um2ZNJGW"W5B_)+YsKJI<Y3%*JRo8nB>kF1RLM)[fEa"Wp-*6bmY=40#XF>[c]f(kns:/@6/(!1>U_e6's'X^G^p0?uDU`Z.DRB!mFG!lGi/Rn703eNl%k`#6q;=%*.unc3jG3kMH+M.Wp>hJ\Ie$E=:.eg[hK)_;kagt->jnbGm9#7!$]=r&fV3dlnni*'L;)R^kC-H4W#H'-@[`M"I$nbW%lR`.#&Fn%W28/O_*O2oC?B<3XLJi,Mh(,gM5>`g-8G$e1_T7MJ1/!;EG'sA"KWRe#Jo&#3%d>7<f)b_8:I,L=p0qECBS=t0uFD_@rD"n`5ZDN%2\MK:%G_RgR4qK/*"!sFC8kNq@9Y(*O26W#eO](jKpK6#$J_9c%J:kG/<04Rc.tRfZ3a0Sqe)t:*Z_/9ckDKP\kF+]?\_q]*Fj-.%('<%gbs=l$>lkgu^eER[Ft6Z!.NKpCU,F`.)n$-J\<2UjPd3#!7KB),/-2E<?t1j0#^W2?57/>cnDK9O2(W<r%]]=kJs&a#Pd+eX%q+\:Cdp@Y6d$)sHiI09.dgOQ?a8BO'&DMq*(HPNi?PQhHd:d0(Ka8.mU#s'`@Vfp2)hSoj'24$t1N@DWd[ju/6o%HUVl%UM@Uehl%E%V@%L]qKsRL<QDY&=,/)<a?uLnSPd!ZG8SdF9(G0]K)\bclfc6i05ORRg_i60GdQ%;B+7/cM<LY7W#&/O:/58A-;*+[QlCd^^r'%@4LBFL'Z8Da\XCV,[4/86"^5]a^/]FE2?LS`:t#uV.n/gU&cObc%Q--pR"FkA.iHV=g;dTi]8d?_aO<o#u6-+5qju%D!"4.gl2Sk%$1FSjDV:^;JrB*RIMbU*DK.Zj1d6^u/u'/uGR29OM#e)ZFo^#?2e:&$Pd+bQ$!'u*Ood?@Q?$ALkUA5;7>*O3od8/NN("_L"[Q+p%Y6nTF4.Z'U'GokA'O_KPAD$R6"tgE(70hu=2`)ir6OO+'2\-"*,Jql_Z4ZsHh\J]/J[p*JI5_Go]^)jLRZQ$R,0lH`<cT%u2jp%p%-9>u2N%iYc:kUi\K5>Nt`$o9G&>!Z+\.G#P[S-ak/rVcZ3*'R`Ms;$f)[%"h6tNNUZ"%OSC8OHn.>DRmlPIJsKuk/S,h=WTr^bOB%";i\a.Y)%Bi\iM6W%eThdd@1?.kZKu=4L8C/-T3]1RT[_*&.FA$<>+^6E"OlX+ouX)AHdS\i\:F9e=s/KKc-'WufN9GY:_rdR'8D%j1Z-8[L!K_Zk[Qt>nF5)]%CP@!Ei$6_kaD;1k#SVc-f<UE1(g&C<$N%!GH><RS78Z*f6U)D2i<4ZKd-o`MRY'ktIug_\"&6q$K!j%655,Jr>,]*4%piRDCL+W[R+a79P@eK_@no?&A[C<U1kt9-!aQn)Wqn?O`6)WJJj+4dr8S%K64DZ&QBm47f5%C!f1R+hj34MV,E'_%CSG>!6BHXQ-L/Hu))T,?CBEm]$dZUg3XS>icdW@(K'sT$hK2EL+t1#G=;)T/DXYqWdkR#@YF-Z%b$b_\,P(nB[)j<,4WPH\(BFTY%fb=V=rD#FJ.rpLI_/M7IX![-j!X&oab@5BM+Bt[R5^D%98u@F\/85Gm76#toQ3JYk;Ll,+;<i`sd??oKk[52&a-R0SbsEf/FqFQA%JkR3:WrZ[t(<+L\:k<:jNECBJ\Gh>C>A,uXV0!TMr45^g#[qgo6+AUAf#sVAd#1<4`bg`%h@]lf:+6Ef?B`-J"`Ahm3G]GlV9j&a%KHYWi,]DuoHpAOl(=AcTMS4Tb>GmE4ZgaScN=-?qbWm"h6?28@j%LAh0k"fW(ceE4XEdP>Xq_'KVkZeXKU#5blr,&h%iB!elqiAo%#F00;E+%nBdkuQs&@iO"!g%OfJQotdQVb[-V9fNM/1M$LaUfUF%1!^^!_gCe`1XtT.Ll&-7$pI(.2YTPFB]Kbi1U;d=.CIl-C+_P%UIg][AG&iN^biq',hlHe@00aNm9D?(os5gYTYkG8&hIi0,N*/C:%9ujNf-":ZZAbW\@=pW_L783"r#fYdN(Lg1fb%s)e84[2FDS;%>7F+L7H?/63<_lU(/'5DOE=)Y>9TJ"J3?G2&XA&e&u,S<.P!qqLE[/e2nDIdS1=\,%f'AA;n#mE&f<bEgBdl&:bspEFst.&5fe](%@3i.t@1<9:1s/jVCspQKL2?HAN=*Wi@n??o*J4V8;*!T%ZUUcTGiYk)J5/`q?[/FjNS:11N@&A6[_sa/W4g.nE->NsV,5jgC^<uQ%P`j,]$ZQ<j2AP*T\1iKhG/1'Oam?2-5n,U8W6Ga#(T-3#3/o,\#h"57;-1Ea%!o,@Z<.CV0X;&m<<cXl*XH,*Ea`YLiYi2B"ONNT%TLp&j1UqmARbC$]cL@'=n<U''kjKO!otq&hUmiFil,$]BiKC:E.j6UFe6iZ'!_aoA!0\<[IgOclC^F51",s^g-t4X4,RfQtM30Oo%K(1>!Qb\.YBRqFlR&SXI;lJ2^LbRa]\llhqM;3&p++o1_U_@Bs:82&]+mbl?Wf_*9/V9rk4(q79.6n`TmU`smma)@$ij<V`BI)5B%RkKku,jN:X0VOgY5];Cm%-gP-dKP(4QO\ZTn!^3SoahtX`UdsYN*2\\02.R@\r?]g_%a;Ydh!Nu!XqBt?()pPhGT*EX=:I8:7qie%>Tr'W&LDEF"O/obXr?V`+i"5\"[U4e<'d=^cu8qd3=E2DQYgPcaHm1M8hIX0W,"G`i0qTY0,>?*)NF[R66b*j+dS;eF90.m(*O#j%#,L]J0X?\(7!j`*NcS<'klN."XNkFcXKgt!h;O6_%;sXi5nodp0\*&Z*S)$G%-aXf^+R%`_.X])<(9KcbZCird`eEEJL=/I.=Eee%TJ7KVegqV(OTPhh'hb7,8djm2@@75=7P)-L8jO9qO][[C2umBj)g!V^eZbG^-HU(\S*FsX=u8&AWECQr;:TJ$!`^h?H"LS'Jd<Nh%cY+/[_.4=&2#gqVhB'k+<EC)U_=#3U_&g]_f[Hs/e/4fXA_d8H0-__c0kW-%>iT,MGcP;99HZn-64j:h+@QYp(gG_n6jnYsP1PYh%E(_euPqoE4[q)&VARt+Gdq,7!*L5CYB]Ubd(bkSi,BA^$d\.4Wo(qJ<0=_Ashd+/=mNLYo4i_Wgd!HZTLa(jiPo^KN1k.?H.MBh^%?Y2\ClmjkfZ281V&7<GsmL<W/nq+i]\2PQ"(YYIs[OFBnGH#pBQ)iQV/'A<=.nuY]YD4QU3/bDmZ"VN*F)*l*eRm$<aDEjgSe9EN%N.jd&6o.&;DSuD*-d:t'`5J8)87h#E[a]N)(_de13?Xfp]20(mJXLR$N%h@8B',WXr%1SIM&FD5MT1"(f`PX%HpaURmr.I['MlZ9%,RulEhnLO^T.[]E23ct<?SObAoh_:UMDqQ=lo.*K?K9%Q1Z?YD@Ja185Eq"]i*gLg[LXNJip_KeOOm[j.0BMg6RdWQA0qaDoMSgF%B6Hu];)a(ok4%ktb]rp/\a.0Q[8"k_\CL6.]BqY1GOi<TO-)flo0<RMMJa#E`cdnH/5Re*=(^$QpK`b'Z-NcF_o(dpUZ4QS9[e;P%6$]N5VY@5^f?##")![q_9\aR)&Bp%gfS$m+BM.m6J2Lop0=fDRlFrBAoWTV(kul!p`mYp3X+V/C=2]K<c[-*RH2\!=$'&Y6.=]1h%p#DFLIO9Z7oaiXO[Mud?;fG@'Qi6<]#GcH1m`e@aLn5Mlrram[C(KqMVCs2uS95o;H]t9B*alX^ja2e4[O"7@D1(m\P=H4<2#eTp%P"Bi)_L5S*mP?Z%>X60;A.@PW%R8+J_Mrs7#C7:5PZj$YPBHKR7D9r<P04ca.PBI39D(1(h+Y%_]^6GrZ>t)<\-2J6h)d0%Ph^[7%NHGO5[b6QP&9V:D?mYM6lrs6(A4sCN'9gCUgj>prk@j#V5F`e\hHG%ZH*)WUZ=&Wo\2e]-aW64#V\g2d+p0XBP.6WSiHi9NMgJG9%l#SH.>H',%1,H(G-B;1q?;2A1VX_>,X=7pZ8r.*[19,_BSU27t%(NdGn9UHC\pF8bc&&bcEuo?D+39'P01Zp::**YTR@QIMm[=NU%2"I:aRln3S5T\_5-4fOePm-A'f]5>:kU$gPgnHikEJN+G,UI?HWIp4Jl<o.D-X--0lc1FP#<^92%eY<4eGhHeR^p^jRHY>iWZ4`@%V'k4(P,4T4h>YoW4%BA7IC=Z')h.o`o0/An^Kt+qL$O=C23FdS&0kpNA5#]sPZL]`&2*VEF(JX.Q&4]#rDGK+?;#k>TKEDGnU\%t%Y<RT;M9a=b"nq'hZ!N^TK]NK)>;.W>..$FqJ\!9NhX/fj'qs.jq+[Sq5W2Iq?qSp:9oV*X7_oK8]SW(n<.Su>9;10PU+0$(]us"i%;PN=:98;E<GC9E/5>6?k%Ok+#2eAQI5j$j>>L69/iQf6K%XP+c4Dp]H9d'1f&1Er[f7G*C48'Doc,g)X6J!IEEP_Y@'BV^-j*+)E%6k:Qm_)MZbL;n!Z0nFu)H7Y9PH;81C!SB5'a$QP;S0+C_P%JUS7!"CNL5_jp&c@RQp.`7(+s(s+BP-$RFlT\tWBcTcrbqs7d#8P3%R/ghr2AZ+Vpp$']E?!!F"?+5R-pJBI<dq7C1VIRnT)$c<F4oMRn'.46<d#fOPkF(6Y7SdgkmL`iZm.7(>?b/$j_L:]8%DVVDIu-l%2tOi+bsY:KjjgPfFc/T&k%;b\AYF#k2\RiKA,;I[$"RjY._(lOU>/G_N15[XF2$^(PF]PIlTHB=B5RuBWN*lUj(>TH77iT`bp:<e%%HD%%\IVV2?Q/bV7k_alGu!?O@O^13CiX,WGl$cX^5T<(R$'7^V56YiF565qWfj-m'p5+EqB=O[Cm@ChH^VUt?BF`"+Ni#PbR'^=%;hcV'mquFhkl<._*Q5fK4a/@M[$C/KO#3!$>9Fp1c`->-&e%6JN+:Q]c.n'?3Wbd)@%3o_XGt$Mr#o*8m=<\;+SSA\i`)<]!u3-s%N\X[sV=%coQ]esHdL=2DBa.7&RQuOW]Ed\-`.ucbp/'Vh>cGbo_rIP_*g/A5]j,Y6&X"KGV#25ZBc`X^B7*gRY]l8-e1cP\V'O<9%.7o^T9Zkc1jl.?&*nCi>O)(U,$S_u`N#F^F#GN3_J13u%Pq0mAH"m2eYlZ*O8S;-RAIUSYk%FG<B9T$k6biW_BHE6E*,g\S1UPi&%);">PrXB6ri\7G\r<X,Qipl4oj:'98j4t!&ECG#2b[?!i*;O1O8tBms>#K2J1,OD1JjG<^1,Sf;/ckhm[Q2lISSZB=!$u<uOg[Hg%]cu3"\89"DB-%mmPo8qTX2im!;L^cP6/]M:CW&R/SZNJSWlCC]oZYW.m'Rk1H-PFB9\)4h;i+.(!2\As^mU+hXcnAGlokQkYJ>Wg%fpN'hm*+7S1*nh?1I0+.6jmTIJ^g%.e5$>B&%+4323c6;Og5(#OA\>%44>ooB4d:U#UYiE$Ute16OZD;RA7:s!@sQ@#RG#^bFo,F%fpV&1ZKXc#AsRB<q<U]!,XRfYo.rVg<Oc,QTV+"4`;,f+`iW2E[p]D#-@g!SrZ^f@p`</nR0TP[9Oa?[.2_6:8Re.Y,_F0?>WTUp%>X%!Ur)^HTOIXEn?S)gD?gL?C)(?kE*n[nrrSC*,q2C"JruRRU/<VeF8M/X$]%)96/(NjIpLca%<'@\A"=35lhiPJ=K@0$GQHG"G%P<Nr4EZc>4Gtp('(')2ha-/)UD#>@CHb";c0]4"[JOM)GECa6X?UM6]G_A=I>t3V$S8@Zels=uAiMD%.VRY$_/ZOe4`&JXK=FW-c%&Rt=#D<Zn5p(PLq9rBpfU=!"]?DCdt><d6Z>RZ>I3".srj##s/^b@&/3#p$QGQ/\P)2Gnc.5Y1j=?1b'b7OJ]"%4&@(Lfq(4>q2S%&eLTSYD4"5GuT^KfesN&Sk!@k7$M+e&M(03^cD7_*-mLX@\hPf4o:)Pc,!PB[Ns`-5%;NI\^)1<^Nk-SJ2R][o]un=4o9a$^"a^2%F(^!A!HjYuV[ZJ$Da4&NfqYk0edd_F&4I@@pM\!-3.'Sa\ZNVe&.jje8"5ZoPZp`rejqS4]!m!nk?-+g,/=-4l_+W3]g_0dARK*o%;4:UtPZr1Y`B)*rg\_^CY1J<&6C1ZB,F7&u$cbd+Iu]iQ)\C=kc`(jH-UL9"F$T.V;'>e`\TQFf2jP4MR#[NMfl%-&Lc^9?g`P@#%10*M.@S',#XD-rF,,^%\2(n%:MP57d?r[9mq3$T^BG3(g8r`1CScZfB#dp/=<Bs`Q@H']j!<aM4fCF64<H5QdQdNcp6N5EfPid,X%S--3Vc2kg_+3Yl0kiG?Jo;lL44UJG,SdSl!`_n:L;6UJ1'<,]g_0TUb?(b)UB8Ft:E^Y&K,=%$uXfgG5D*eu`^sPtHLU<g<%=q8h%RBE,W,j/n`.)eNRE:6uR?SLm.:W,NeC#WXDCBd,(\=\**\qtc',1X>*1&"?V2'dJ]GXH;;-LieF4!>bIh?PoXJ0bh0]VZ+KH9Zm4%ajk>YPpDlg2.<(sK!],P7G0!i/#tc*F^duC$PW+<gLI/lc6:RPd8W/=((OZ%^5eODj^.t3l+"8AnYP^<oN`,^W%T?4.mMbGB+pdR%Y&`/e7_uPKCh:LuisLaZ]N#8jXlT<XYc.Q5Ah.@ae5g`6_eZWE%[jHcoE.K3#hK+mo&>QLEc2L]h=b&TpLYorEEh[pfh0c$HJf1Z%!C>RGYa(=(kUB]b[T$19gIfK<Y8N<G:?fFp>DY^.UBe95">Z7>CW>r*>odPkOuWFD3=CUAc%9TP9:&g"SmIBNmXkeM]c;<r5T4-3%p=D[R]G/'o3<5Dsg@=i(beB=%S$B_;DLq;Yn`\jR2tS%E4-(WWeUpj,daAkH\t1FUH@/:akk\N2i]sG!-g*k96E=pm+/#9>_8BJp%JKt/@@XBfEhWa>Zf]K6p0LbeoB.Q/<%sIq&VDR]#fhZF*fE7ujFs-^IN1Z-mVNm_%Y(tH^dSZlb,?of<*X6+qfE8QBm!NhA9[:d,%YJ=6N6hZ0]L]&(Vh<FYMA[WR%`(Ms+7#p>Y-qD/'?X5s2"D9k(&ofoE@!g/K;D@m4aYMcW)A/5Z$(/ktTVac)(js%6+>[(REN2Nl%>tRHU8,u>@rg=g!kfVI$q<5(:*6T$@[iPj\V0ln?OT<Mf$L/iuc)')6OgapC>:a?`C(hj!LaeK,:o\QqS`rar[Nl/pY(fc9KYo)D%[7QNlb/IU@Js7M]P/JE@,ftV9,Y>dNOp&iS8g'H(!UPSW"o/bpD^ctb)hUa.Z?r5i#s2c^pWF'"8Y[G&P(^kgZ>*'L"N[7'X@n]V%A#NHWPpO:\99RZV1#a8DohWB3,RL)J7b`\D$'D9gr/S-U]M0_E_D\O&`41-gILegm8HQ=H8HPcP,T&Pi>PDTL"+.qoQaAn1pQB]l%rj&,q8.P\u<bjmm?Or>_Y.15T1COp'(T+qZP?F>ufKCQ:P]2-]d3_`o>t&9qX,_V!fXso^]8o&9BaZnJds#[$<e^P1rtt&5VufG$%Agdh4Mjh/!9gSX(:%JO[UH#(Gkf'g1'=65"ZTB3_?P\'7ShM0SE=!,n%B;-&;d=p`W?r.k0Gu1"j,RK\(Z0],\7DO_LjnqA>,OU'%$H#ikOpqJT9&:!_N4:`WgcFKm'_uA>N1W.'0rTXo`V%>d'(/:YI9%;U'Yp".ffP_`2`0*KkD#(i&.Ahg54n4*(cLGZH6Y0>]2ZQ2%,hlir?k@/n&1Z/"kifZd7s%b5XtBmNjX$fe$D-CbKG&$0pYo+t-Q^;!rVc5f'i<8W`,UY["<_[dRNr#tX3D2VSK[O\EaT:49eB'C%e@eg]eN&hH#fr<b#ae4NTI/bJ/#*?a7i#1arCEul&kbqDG=r3[khVPXaMls./dVPpj<:eC,]`r7pk1R,P>*GU+O]@c@E_p?DYgG4%46&a2@c?\Z"B>^-X,df]c!R5i`e1D@-IJFZ;E1-t6)Y,&H=s5h+0X>*7dttp0ggp"!V+MAA6#IWn=DO>#0S"9L0X1URsDtN=g.%5%9bGcmE(Ikm6UaUN#X>et%A?X"ar>4U^%]gN%JZ!BEe$Zh'iId.&EV:HD':aRW"!Egfnq''61I,,=r`B)<_3#l?B'@jr_qe1>0cHa%Deli8.XLPc+?%%,I.)(W)cW?O[!X#&5%'it&25jAi202;"iP,2=M]FiL:9-.YM!BY%V[&Rd?I!(aOZ"M=D/D#%!2FV[P]30VOA(c%QBjX3CrLq0R:fIgJY]&.'7snI[NpM.>7n`Gd&87b:X@Z/KF!qP6EgdpQj!.Q25PRl!m%tZ!FqH7f^:1I"bI:&"$.@/+@N)IbZ*:&%@P6nFB(2YKK7K\9:,uQ)PSjj/NDqV2$>0PH"eECpltV+#neJFS<=(JP$2[\TTY'VY?X47qY!1"o\9rj;Xp?1'_,MBfJ$WhMR3Vp+%O?D%Z"U4m;">\#/#N">QQ&+WT9hEJ!CR']l;2Bb%.Kl<=UVuoRZLO=\4Z%+Ij4&U:9NMN9MF%<RJ)oN"&KC,q&I$D!Hk5NVp9"b=%)Q*.+73NXKFq4h)*VKNOa9\s<d34Bg:K/bX"DOeAE?H%kig?`4!4bu6=pb,?@dAY!eLdb&UR/9@X!knVk:Fc3$!:qM$iNOG$leVH%CAJ=H2'EHg%S,[QdHu^tXl!@!eBT,j(:C#AW2U0M,U!5p,p<=*>#k5HnVD$RLk&>8Jh`3E.W_:\Kcql7$Q5tnkG<q#gJno=@j'[_%eqB]oR3')E$#r4B;*SBB\EY\@38tA+J9a)IX.45-$b#lJFJ)u$r<3SH[PZ1U,IVm'iRoSpF,1?c*+E4tZkh.4d,#]:_WmdHf/sEM%j1LRC*/7sEL_!0>`-ej[9Z,AG>#f$?d%1e[&I6OlrUHn29Gg[d,iOKX,XfF!ao`^SD;Zq8nMl;i+TEQJn\#_,;FuRDGa<;V$UR7;%@FGX1W^SdN;N[?Ec,WgI#[e8F@!WAtFqPB?eUn,J0g1?=rjo:nRmPeZW#c'rPIrC)`'qI2=#%/=`GqKIZ8P\nJrOQG*i>dDAQ5h1%`Nj>K'd3XUOq9m#rD6&kepTE>k.9n[6!*TY$,Hm7KWK"l+l`s"oj-Pu"/;4q!DDSI$$$Ru3#AY,mLE:I'4eFjQ`355#esD[4U>M"%q9mcFi6;;?V+p4u1W*!0ItA^EA("8#.ok$IDmAm%>2lteiqkX2Oq<#Dfa3k_R]XSHEXtS%:308<[]5sr@(0)0Je(7<+Tf)@+TeO8%&<-.[2==?bQ%$Ce:jd<O;Xf2Qfsk9ihK\K<#XH$Dk4s!_Akr;<dPhrc[p98%@W&pS/]].PT!b&R7kE;trTk3[-9YgIdeE-e>ALj"%M)O2X?XbIpJ8q'ma!8g1J8Lcn(GO76gBEP^P!*PUaL:=P$iPO(=)mPdS!2Q;I8t!;"&g(nCng:BOGZ;NegB__7^k()59/OT6,&u\%-_IV5=U;d3E@4)+`8cE<Qk\U;l";Z\#;Fa9ZtekEZ.*&j>9d/_&G78-A.B-RaK10sS@_O>Rs(L]ls8"Chd57CBe`&.GM453Gp',,%#-WhA@QR>X]Yg60>m@i\C5]K9,kb=`F*MpmAommjgbS7$D8Wa8C_aX-/:((2I1Rcud3Tq;VNML0Y21KirX-#1H@9R$;f7S]C75rJ%T;`(F)X!g`7r7D%Z*Ts15.PZ1n\.51b\&k6C!rJ<`A.,b3$t5hX^,F,[XlA-Vnsd8i]c_j=DDMu$Bp,KaHhJb=D62*kU.oP6KH6O%S1Z'[c=de?A4',[/:qt6Aq$)U'/u.S`%LK0ZqO>[q4mhD>[82$NYN-r##]73E:Iup(36/U^!F=N'Jdei]:AQR1-@k1RHi,:A`cZY%$Ggll_?:+,M]<<L]Dhn;/g-QEmsSr(oJJ)>iFk6;T,"/$e;DXL&hZ`JEfbo*pC']*2&6!#N#]e'9?4Q$_blIQe9%9#-h[pj`_tI+%laHfLkGF&#aEu@='!VUY']8JX]$nNFa!bJ^.I/bHjsA1&HgCOGEKEk[0YM"[@V"bgG<24"[jZhfPa6.`%)Z#j.4:g9)g2)4S3d'C%H<b*B?Ls#uTULM]E:lOch'ANBYD9Z+\_9bqi\j57o3;?jbY-XK/qHi2&OP*hb&!OE=EO]c0EHid\Gj=!9W#TU<[@kJodtZtgUPcE%$D]R>_sAhb5:W/kMDsPk#EE["K)f%=G29d2mpku3BMJDKSH#@(rkBU5ESJ9UOjrIA.PsGM;>)=n;/gm5L9U\,+]3JAR"M?Up\e>q%m8PahoZks>-3@XC'+UGW`-kDU2j$L<&eauM>Z),u^iKV-OV(5<4dm<1&4hq*Jm2miSJbDSEhNeIFX^Z:5.\U(79.*qL'2j.M?@NX%BVuWW:Io<"#u(P5$V^atKdKVp[ERkD"UtRHKdPG#a[<^69e^kr@<`?FY0%<U1\(:$@4DX<iMoM!LsSQ*<+uC>K=WrkX&M1/3cb[r%nm6O>CM1heciemUMbpl^BS'>B*j>oE"Diug!5!(DI:,f2nn4RK(Rd=4QU2AP5TPCjb\e>)9KADm=1+KT:eTahb+$[:r4Re22AFnV%_u,2$.8?%A[!J(-E6P[9J8eT#<?t2=6D"cl'>Skd5"`B.$Z>JTEOCW*UYGt`ne8Lf":tlREOcC_C5=05\HsCY;ke:GTmp9bij6tn%'?%(f7boXU5tpj9Wo+$Wfn-p@._N5\dh-;aA<VhGQ9IdqRfcl5,!qN`?lt_M90d?Goib7<<L_oc%En/fC(mGt*L`s%&@m\&32nfU%+K@?YR&NfQG$,N<D$jfYJUT'XVi"S)e2.JtC/(pN6T#l`CI4sh.PjqHT5Am=UBs7Z7?Eo;2ONG_Q6HEVb=hn5NnWV-*gk)DnB#Ps%^H9KJ>GRo_8BB++EEcs#fW&JmYdKE:Vc)CFJZ-eG@kKPL0U8'A.#G[4)nVui]$Vd(:TCIlE,Dc-ANIDR8G3[_RJ<<1mW9nfqd-WU%>@ul$ILot-kTL(Fb=iIO]#q%s">IC>249<</,4//UjGffp!>9>&/I%t]Td0`fa!cK#I_^,6`MjAi+gl&6_l7.0p%40C<(;NbuU]'%2($tbDQ0<u@tIf=@3a0e3&%0/qj9QUmhuj;K+d*B@j5<\0`aZF+aon`&eBAk-4g>>'c\a#-<*D\%R``4!i@.T5e<)t_62tIAWp7/%%R(f]X+((PCAPr.)AAb!;^YCUHJit+M$(&7K3Ali4Wgr2-rD,$V".V0:j<Vqf<bDj'.&A-j;[(c'+s4m$\29Q-lEqlnd<Gs)m@2^%:oZ@;,br/.%n&*_&Q=5e51s/UIY_i,(pQ_\\/l6IQoG<(3rSc0D#`GQ93Yoc^hB)CfR%^Qn&YiTU@kqq65GiNj#3koThB]#2]sjW%>@Z[!$%"\qj!pFj)AC&pZF_P@!@4cq++_FSM3diA%WYmGhYsQ*0l\<[0i>^qS1:<\&eb:DM2B+5JJFseq"l:n#g)NoHRDu(0bdX0%q$;<SaHi34bTnNm8:m+??_J/kqe:`rmW9<)VO;-l@Y-t8F9Pa&$"-C@T=BM`J'!m3KaAqljmlAZiq#lu9<-F%af_+h#SeZrN121;%P\jLpM#/u+s5$eD!4;K2U+gRPW\?`?Wi-ID-AYp-`ke:Aaa1UoWM.sNC1rVpdo9_em7U98$"C?h=,i%=gXbWG_2R*?Z*;p=A+P@B%NJZ)iWH-bu//NV6E'N5[iIP*>EZ(-\X9H3]gaUeeODd<Al;7h]#J*MP"t'C1^</eD\tH,,jN:oG<>]:$j8KEFh'ML:E.skGn3[?k%;JGMhE=Xj7/sn0@YTI>;DZR0X`W1Q'N6I#*?V@C32+c$_>c\+H*!YD\^dr';pCh`OfmkE)VG7;"S?&L66IiQXE^8=a>$5s32MV2/%PbB(s(t&t]"sE5<Dh&JsqWEBJa7U[l?`1O^fQmO]lGT'9\XWXnO>L,a^9#.;P/Y6?.eo0!e?tB(8kZi&=pjH",d*bmF>X)MGFJVA%I!<epB\8BYEg+lh%4c6RrF47,OGT^>X7/^6dQh-=\88!d7j?BJ=NuYQ"G+]CV]h!N>i:"EZN`h3JNWUY^.\!X,06!oZ+mgqPa]qe%OC)X/e=@.i$]_XaT&$MTe"QZf`oeXTLriL.*c0Ff+BTcJi$unQ5>]fkTr)u\4Gb=PoM%@<hQh)8%<%F;Epe=`!V8@`*>ookS\+U%%2AqsCmX2J%l-79T=Qnanp'LW?B+'J)&*9D.2F>'?Vaj?9)jF%Wc9\?JdF0Q/:3S.C"=rSi_,LHgfk^bffkaNLC("`:><3fO0C2GH%M`++@+&?O-QHJa6db+[NZcUs452-2(jqn@@PuUYm"F;#p*=2,(SGu>+@d:5B<(271BF>q9PJE95[chZh-B0@Z,plnueucGZQ-I3k%75c:/]]Rpe0uR+m,+)G#.%&C?+I:D55ap(9'l!AFl@Z>@Q]`[QT.R;E/W.K$,daDo<;_K>d$A0><:tnND%B#Jg'16i+6\:4dP2"?%V=Si*k(rXgBkh6/<%g8,mX2H2L2(+0522-$/oKIAa_>!s,[gVB_#otW1R'2Blq`.pGUDX7BJW1-^hHYm?H3b[+O0"M#l`j:'p6XX%+:IqciYkfJ1^Z/8Y8G`MM[t#AQ`,A=[M`(Rd&_7:V0UBEA2>,MQ;T1:CFVFN=7tM16d"[5WflBkCDQTH!4eBkGT5Cq4-bo:.G+kn%$9"!?m+*K'Ifr?HjiBBO'2$O)V)jY*o"EISIiunL%[]#Ul/kgE+%0]Ub4p'IKRZ_"!HYLpru(loHCKC)qQ]kJ+5M)>mJ-E"$,QGh%`9%g0fBa_@-H<-aBAuMnB[]ErC%GD-Pu;_5"N9NU#6Z+rJ78-Olt]YGI$^=Nc(SSPk%7t14>dqdZEJg)<PosT3WdI;G"AUaoNiH1%o+BiWSBk>"Q&4\#VT.[8opSXJ1fR)??fkk0<#UW^0RDB/$:BqS%:jQbCk[./(K7kR.JW1#$d<B/_LQ[hFhfp,RSODf=&.m8CU[)Y%8XgteSh[G%VK%nuVS+ag%n)i;!SbiaJ1:)Yrkok#6KkSq3RFkBj.+o$qE5OmB#H+Q_?AD!r<_!>chVu/P9H,FII$SWr[bUhfm>9*%gogF9:Y6h2-@V4h(HoLMF3K.!T"8C@+!BJ"IFQ9%a&1aQq9s5p*=H`AcTYbJ4$:q[FJVF-o'ZVHT;kA8J&YG&")%2<VqW%AXUiC2%J;%Ul>8l@S5%9A%^G#-&fQq2W>9AkA#"Loup>:]%gOW;`.aLq9@ILVG$eo?>@Jf:C@N,\<gs8/m%kikRdjg!Cb!#i)BqI`>SfBsa%*74OEF:`\[</iI]P\b;=fn[Vt[=r&-[ms5F%Ck2?+.2`11X!Sk0^ipUAmh78XmHcU(&+C\,**k1`D^E+nptg>SQRhkZrAb;%2JUt%&/FpG=D6;-l6e.(qq)%)Nl6(b@rai1[9VlY11GT,LWWd=p-Yo^`<omfM!dINCdCbiE?rFEfNjr4WYXbp&5-(L!g\Q:&N5s9P_GRu%#]+9',0jCR='!7ZVqtp_Tugn&<EM9op#b<.6)$m[$tKAV#DlCV$T9-^pN'ff<8o-imPF)rrt/3OqJZRSm3$,g=K:V6>t"+EQ`*9u%:\Nf#N#])E@WJ^\jTW4lmjEDD6Zn+d5;ZmDB0a0k:[#.U6@7_M3i^L>R8klT5Gm&H;?Pl&00)$K6h506$A(/k)lI?'rG?WcI>M=X%0\)UtC4s8?^6a@\nNb6<MS]&@Ab[.PkslZi?6A,W/X*T3?Bgc0/PkB7rp8Oc06H0-?5Cm;>d&Z,f*b-P,;?af:m,ec:%\Q5GFMop%E>U/.!IdU*2VIE3aS)@;C.K=*a^+rmpOJI@$K[7)!1=uj5ia]TaBkPf7eZ]Fn3.]I6DQ)><ln[dQLZIqp+!^M[KodX\:?9RKQFi^%OlhA'q>lQ@FWej"$CGkIfI(7;Om9ocMl(/hWY`^V/$2ID?>-n)+W8h2n1mW<LZJRm!(um(89nNq*p+0RJICq6@m4pI2n-Sr<#2CY%-@<"9-6Jmk04L(07Ah<B(WPG9E_jON-ZHbLBhloLM@qnkodUC!;Pq"qE=P[Q?@6X)Zoa*]6nZq$!K2lN<g7s+>VEP.GXB$,`5EL*%k<P9t'sPsU$CGkI$H%E]i&cIiN$CGK9[-l.!d.6D;cf8DSl_<+YD5\u12?#*P:oY@hS0Y$XuA]MpZLH0@J>+BK*$tM-=/2<C8r:c%>jm1kfiqo!X3#LGPsC+G%It,/[;M3^+["-Ef39d?\j@V<BBNUugM_"n&\f^EQ<^s$.nW\`p*9!ES*<(/Vrh)IY(5o9M`H5B;tisl%b-H#TJ3cH/J3gtM^]<2Z#O;Q.-R,(#^3#@6[@ENk!hDfb]D,WP-7a!F?de%dHo\Ls@JI3!HUKc#jE$+fpGr.7f>/CdY[Xks=a6gp%;7KgZjr6Ahf0MD\T-`_UN&D:LAW8[FU_3IB>BS@"IAT>7gS>EB7/Jr7,Oc*3BOR\K!;H4080\A6Ulg0VB`s6JO6mIV?FE-,T@jS6%8NnrRV.6;5,#$JKU_,YF`B%h`Lc^ZW1r<Z=OUf5de?-h;F1J=A5q%Gc>KaiGHA]cjN?">@L#EaoQ$AEfG)SaZndR!]K]095$B(S4%=f?UIdKi?4'$2Y<,TrR5EaV8oL?kdh1r<U(jWKQP--s,2WMFu8,E56aE\2bBC#j?0M[LPNs'iG.hhZ+b)5CTCPBInL9rFhCI/Ocf%cXuis4^smI)P2Ao2T>C*kXf3]BUs]NlcsCGfJ6WrP0L72<t,6eCr:5eMB4K`f^cik0tC5];cb>LRsiYT&7sJu/9Ldf<QPX8H8n/2%?;U0@,??D-[VPde#_Z$H'F2/5H4^_oSk*9.p(]=#d)oW1>k;Ha@*jIh-r1"70(X^DKS(sIS&o&<A*@7*<H0R5Q*Og,QGfX99<V+W%.q2og2,-%#M"uY\j7@rg3:7V=4ikT`MIUg)JbN4KPjAYWmJISs.b#bmj]G'm!<&GILn@Ti-Kc(VpKJ8Q3N0aH4-E.6fg,d=VfFDq%K*kLIk,#Fg*`Td&qk3N-A&#jI@#-5q;%G.d;lHS`a+F_F.;FEW#!mE*3@=Mm"cY#qW)E,/7K1(t.M8qLMIUg-Bp[%E5H6u`BW?*,%*E=e(8P+JV<.XeUk_;ln._'7C-)a]]L`KM9ZdT85LM&T8nE8LbPUSR`80$9Yd.BtjPT3^B21?'I$MTGHdgD=sY,F?HO18:65HR3A%Lps7de@I9]KTZ&PSAKG@j!tSFdgD\I.4A*pR4SZg$2tj,P_IQn>#k7Z[7`A]kf*Ni`(hhCq.[f&409VoWp#"MHXbSWdH^')\k>cT%c1/:FTW5MSSQA#;qVdV+>OtHT1PoWW:n_PL,:BZ,pPao=][!htZ6S!69FF/8V9%75:,thQAnJhX1Qs\U*d9qF]oU2JCiAJ;2E[tk%&*[H5Dd+u\d?RB'+tAue/<;3$;4(b!L8,Si0LsbcIYXs603+)Y=kk^DSdL:YrsoBuR1'dp`PddBqmI`>bogE%9X[;\2=VG?PKXHK%1Wdl8pFB;N;aY06<lm('EU9^c$1^e&66k7>7`hq)B\*A`O-oAGr7NIA2bF[GNDbB]m"u`.Uh!/2'm-2RC`XOlAk\,r;tA<Aeg+Y3%;dq0?gJ/%UZGmea]3p9b!8'JL6_VutYNbGS8Pa2-LucA<&.&@j3J'D(.Qd3(T3XABZ_:!RKVu_7gmIOtr7NIa;2bWZ/Adn0\f:sn%pe$B92.\2-)iu;=V',0*0q^\Xe9Q*joNT\2!hs&"6Rj8m.^Bf,Ir;<LKLY?,]A^B!\)(uR8\aU;jPA[S*C,`J;k+@25nobrH6a+j%\nWWlKgHcZfnfBJ6Rj;nl7lf:5NX<M>I7%/I\bG]hR`E<[u8_"UphI<^f6BuDZ*LK"@tGKbAKt>AN>uAOG8WL;31p:n98-!"HIp'%?>`&lJGBW:"[FPe_0h!t2p,L4/P$L.$Bj?9;0+S_\7r!^MZAnqQ7+VInIk\`.?XgE/!:#dZtbZo',D9RU)l[UN[BAj>pu?i[9kq9%!\-UqKdN^"KkraI-Ut<NLa`KejAH#=)5Z4@=4[Ch^m5>sAo=`$Hdhq3V6lgWFb),C6G3T5;S\$q:k0eANEu#@lGjb?#D*Ba*U*N>%T`8pY1/qL!8V@lC1)IB$^f1:U\$#JG>=!C68jd*qfR6l0bUeX!s)XenmV/FY$n^#Z4D0q9%g[t@gunmB8T]FCIqjoFAT@6ef?f<]%,'\"*KAK6QiVW\k%0O3ia[`p%eaGFf,'+W^r=BX_,FX,f:jH96qdL_..D%]!f,,+anntCll<%(55\B$4,TpC@`5m"W+f3ljQ.:6Z%1G:S'A>R`7&1\r1egRV*C?\o]QZ]K>7,#Ts5CKB3LXur]=[@k.oQXZ_#epthEcs)g5V@*&fq=:$c+8ZajDLArKUoAIZAc\WoIQD$%P9_O^8RU0Z0Tf-clmlPf'`MPPFHSappY&R`6ku;A_XM,CE.8tEbHM*BJ39#X,RGdn.7ZQh^,\AYiFqRU`T@=m1a:<H'aA6"6EBfN%5@OCXF=VdcF5rr%NW/[*m\tgNn,HPqZ3AfM/LE5j#WcpkDY^E!MH`>X5-5K,Ji7mlA*!"ZC!8T,]:>%8a>)gHd`%`mBN,X\dNqM[%o#@\c%EOXa%:/4mO8/S<Z+7gB,H8k)X@Z+jp.7$r+K9FF[UgW%i4QqYKP'E+Lpg%;-[.#LD(g1;^AWK)2>&E;\r`uF,G?<'lHB7\%1QEQnMiEt]1HtfXYhiQ`dqd$f"&_R(UPT9?J^c`V#oc5Ya]qq_>t'h^5sG9SeVkbAV!5F'^)S_YlUhTq)m(aW13\YeM9AQ(>V2VG%BIOCcXeOuTR4CYrgCV2BqGA?2meqf$f<2Q<%*RqWn)3lbJLq!)rs3d^6l,q*=BF(d7L[W+mgT`_,9gudjZ&QheC-\68.fRsrCIY:%)WHJKM:e&p.#(#DdVlJDiV@mXNdH6C;UodphSq8dH1@=g<p0/AF/o*d[":27,l0LN9+1ltiA@_NZ*/s`@GNG72*WKDoP@+7&hjre%J^g_A'5IJ]Gr9G&JJ>GWAJV:;YBMaCdu9*)G^]3=Kne@`<89;cZGoCJ8\@S6`hiJ5@\HFM>7KNlZ?$Z)4=""nM]JB^m5VASLuHF;%%?iMpJG,'s+IW/Q,t9HI;=+N(ee\e5%fbFe`R8QW@85_*Fr?uQ^"e^0H`]Gn,-HQK_%L8F^QHO",@2sR62>lOQXbi1A"@?<[+&u=%'2dQ2roo!Dinc?1`'n@VDa8^&.^$iorsM;YO.fZnA,ZW>cbe.ZQ+p_TP2jppW/5uB:W,)*=QNP"M`XF6NJaZo,2_acL>2/pUi>R9%"&(m#$o_c!U:'gn8"LY0rCH%V7AJoGp5*2!QY",jn+6@4C_&h&,5D_:9`-h7[uEaG7-0]s4Jnj,GfC'%EuaXH?.=Wr9jNU)qJ3:\%#4*YL>*?/GK]N%]=C8B5o5k0sTVC\-A_*SiP%*2/2EG71>IB^ol<V`L(B9698=/\(EDJ'+D8grJ2WWl(f"G?Cqm4guJsCA2f.L&S%e/AgjQ6UGMhPrKG'PgN7OI*44$>NjdrHj7k)p^Ch[L/j5WQ\;\:2qs>`G?W\AcO`TL9FL5(W[5p$DMugn,jjZX=r`/n?Tng9a0G9%;OY]*M=E^mR-pYuN;];63i:p-m]oucafqbWcct.JYD=XdonQWa8W,$KqEuV$HG>'N[)p@8RMr!cKg<V?(Hr)%gsk)CX=E-]5#uda%-M/%G@%?0%f6tI_jr8akRjUnMcothcMMPjQ4RS'/(1:.o0k+K%e(Fmu#lP##?JYT%EJHm^"h\;4AH#%Le51!Dq1L>=N3iN30]AFZ%_>gT`r[cH/!Roph3qJ%#W;5mG@H#o6^;]?+/nGTlqco^0&m:Dr%la1qYp!X>+;tPNT`9%^Kt&rOV;<hpd<j0t$>9mZKAtEE&@!uU%@(=jD1'7#@mo<OCQF`rIO:BT"$j\[`aA[$diUVhc.$;RT:C&#EZnpPG+DhfIO'Msq6qQC`iQc%Bj_btTRLEW'a]:aGIYd67$"iN%%WM/b%lsSaGPl%]##1O\*D0=<Tb#1jlqrqbU+!:]:\A?Vk1F8F4qp?oMG\.5L(<@,niXY#'FZ=Hj===C)EaUGUP!RH.R)nb6U9BUa%h7ZdRKcCiP/jR0.YmmH[?CWVAWBoqo#42AVN7ZJd$D5rb!r:G.,G-[88:#@8n<])k;prJ]Ser^0JB5P/*"E6$=&(3hn4<a7mZJ'$%@p]8SMms[4n-u3?,j<0p!:Nsd+fe6.;eaWI^=fU0:^o).FA$r[i)j*-(oYUO[`#`Ric@]NmM,O*fNm*_.qE$fj[#KB38f..ShM0S%ZbC,j$"74W]K!VERj,-<6uR+4*;:t<?8CLhJcSsheS_51dRM/iE^YBfrkEsu=LM%i:@I\!52j1T]2\!Rf(@f`]Cr;<P3$Kc4l7+)%hdHi+s3j1Bguj?V-mCh$TF!,;W_s0=D;aWe5Z@4jGr7d<m)S*JZR3ZEW6Mc>4usKtr[LHH<-qBM3,[N=!gA'_G#'%)a4g>Hj%qZ+%->m>Lnf%DDK_K;_*lZ-f.M-+WJ/(sUY!N2E!/u;#FRYErlOD%cK]Cae5*h"%e+Baol15!%S#O0qX[pC_)g75`/JXf-P3s+^+HuD2%A+<V%[HeJnZY0C1-Fc3(iQ8mKqnT9Zn_$E+4afOBQ87$33$G<YpG.jdY:(q7MMV&s>LM$8]@=&bK\)Z$KQJbPERYPUR;Fc+A$]T.%;SR&skSi5Dp5!['nd5I<]D_`'m+NSY,-8H6A>+!Z8SSDgcSHBNrU!Ht\Ba+B"\5DK=QhLj"@YYgRBLst03K4]e*bZ]N$>M]ML>X:%!XSXKQX)n)6=H1+D,2"#DS!@X_QQinLWuI&'<6u9m:8:G7F4V&l;EY=nGQl80$<,VA;VSdl^r]]G3sj0_XrQK>D"@CNj*Br5-:39%8hbYdF@j<hV2:ZsSP=()%c+]/&N=Hf^qs@a)BVn:b'b7u-aMkcl8hs^:u@'-fZqXu4A^Oo9Y-_Ums_U2b.<1:hN2?pEQPdGV5DVQ%<Ni75^9c"3D_R,PKo`*gbB-iS'ci.ZFV3uVat/"Gld?EJ>0CF[gEkF6!YdhB5keOSN'TQP!#SAnYB4iig2';1l@Q1M--.:h8I)t_%rSX\7F3'Qhk91/Q"4@cHAhRS&pNAp,/4:NdlYs'(?Ij3`R_=>FZk.mUU`L.6l%.)?S`obYs.XaLPD3`P8QBhU1:nfnqhSMuOlo,D%B9r\I6SnQm&unjR.#4qsl^r^liTQ'L`J]MbiBcQ>3W[ZC=I(7f<^`CL4K2.LR2om&,9e^YAE%?5W(1,I/2oPL<p!"=p+0&-b2Y=7%2C#ns3mqCIO[Y"K%MH"I'D_;T\IYT3[1D%%[UWpRCXM@GrQB.31@RB4&$#8Be[8'7+Up;kP#,rB'aUjp3nRgU7s4/K?su@`4htaW%=>5$YgK:EC-fuc1Ym%$)&m)7jkfamqCfE\ZflWq]=:!38*Xq`Hi$4ERF[MisH^LG02ffG=H<r7E.lucTD/;gR,Pq:0CU%_D<O60?%i-/?p&#S"[D/hgq#r`$Ha$$D-_uoO$+BFN;-WD]e`1*-pI9ofd[iC=BT?lB]o*#62YJ-?;nJOsW^9?<26BCP?Md_e>9;e'MD3ZX[%D;Hi2'rH`3=Y*2AEUK7N<1MK327$JJoir)rbeP>s.5XFKRm,f6[SDc.`p:d&A]:;h%8#?/I$R-sTi-/@"-uUK6bSO`[Yfrj74cY;%)q$*MO(jPeKnlnU0#D7n@lF47FC"<F?GX0B%@&XE>"'Nn;UlU!2Z"Kag#naI5)S@L']rD*<9u@8+DO#bO+hbpAb(7kDGNHX##p7N%k8kP(>+BnnKUIVBq_d[oo?_:3qUj#-<R46`:;M'eP#sX6+Js!''.oL9>LAl%^n,f]g!#)_pR5Lsk?+!UNiCX1AfpP@eVO5`oi`*p%OZ<#a[5]2A,3I@u#4qrmbJY?o;FZF7ib:)3FF$q6YHH9C+mQ_aF\]QF$;+Xirl6\tR+/L%LT3T5qJ:^E_X43WBup:W@([dW>r5T4%84ETOIaa)b@?TW_GTATnIMSV0p\T/b62%qol.<[:4&b>j5YH.Ai:hT!a"5+lZaFk?@?lWYP1mLI,%L?T(IUNMr("V0*!6ir9-9Uj%Nbr3oRe.uQZY:NC0"(\d7'\W7]@b0aeRT?GQAYKHRO.l:LT`)i6?:m$2Bq._e^sA<GZA_g`4Wt`L>*td'3LCg"@D=VQgLY$Yt'U*%^\.M.Tgr?X*::I?9l(dinSrZp`Y#KNq2/Ng2[L$;7Pq.-)@KO[1;X>-`2CsF6kM2#]i'@Eb)ZE3UF=?0@fXX9#`q'g<77`e1DbX@%ic!\MP50lg"L]>,H0lTh7L+KU4W0O35#D78.`Z014_`Z?C8iCdO+-Znmcb[=4hP@\=<U\I,`MG<Y[_hdL,`,`(F1A5W:4&<m:,6d%#T!q5D.ooG-@MM=,@]hDa7L@1\:;'<Z#_V/!EB.`#".#mlP<3T_,(Z:HZ(!YA+/b$r6aPAd[4'<m@PDOdANesG<#k[>/4>t4ldgR%h_t:N$qADm8,/"NprPPK&O-Ok9MWH$;%ae>SV6l@*8)^uDHRUh;&G0pb^a(kiGKfXq^Cfe+,(pd7q%3U[2epMOM8kWM3O<57P)qb%8FW^=U`>-dn.3JJ_n_$'j5_m&El<d3gcdSJ2OoKugmkfYBMdE,T8!/!Gp>N]46C0a@&NV2Rl9n&jl5IW%-Lr2JuDVg;Tdh)ZZ&<U%$P`-;nAb0)R)uguNR9oOkFKtDR$V-Z);2r'_a&$rC8^$O3?He(O]9bpG'I%6/5SrVA+ui(.>laA$:g+k]*U>'\XOJ[?l'_G`98fg%:=fZTK8E?e^4TP\JL^M<jI>hC,KrdQol&GKK=<Zrd,Z[P8fqF?*#Pm<IY^S009Bo2Osd4K9;LO$)F%ko,4[>A#mgNrpp!6;kt,cH%`2mDcmu8*0A.<iAEs"gNLa;i)^r\"ImBOKSnMu?=*s;B=If@LWW=r>CbMF?[[@n\?S8<!t7k-=cY!>=a2i1@?3B/DAeMM]L)f$(a%n$P)bpOM)*-5c4Z/N)n8Bd`nQ1.](G%;5iMRq8n[q;]iibcZ58pg^-!2[l>Y%ekH,h#GE>555KR/^95:+,k&3fZ=uV#7+K2RtS)0%Ds-qL;Tdo`mAl3^&TB/$&U?RE.6NQ-q@"qfN:#d'Cuj>r5,"51Ht]6eEgdO$`4RAZf4[>eqf/&8>;5`ENAM`Glk*>`#(/MSa3,lX%LJs:3'okPh>e@U&3(U:;)92sa=5eflL6oujF*p;'jnS=6[Bc=_ZX;n]i>!FS+1=j@q?.3UG7e1l*$6;oI5Hu17_YGR'1s^o#=rIZ%L2hTSmY=1=)V8S2?P0>Z,kuCDcSK`Qq_ZW3T.gO`8<fEMR7*Q>nNfMf9%>=R)u4Z7:FK4Z;IgB`3"QF7^A\F@B\"6i-S0UfQUp[5%+*-`RbD-Js;!(4/!-=@OSE7)>DeJkcV9%QQgohq(8;2@-;.3s6`nD[[0)N;#;N;7f7QPrZa+r=4dlBTW#3>?9cHTTajS8'O^QX&`%I#Jb25/7Bs(e4)TMiq9r-2DB<gIXT&PS/4;'AZ^pd\c\O6eNk@EbN1L1fJRd%hT*Y23nc^6ri]8Q0#ooR9OZ+%m/(U`"Aq+jqV#_%gc[Csg/pPGI!K78q/#-H=[&ODZ@#JIDU.e2oN2@;LII(6Hrp]n+#^rJ,Mu8c3D,Fl,9,G!r1<in]`'pqg1H9@*b*[06F[XS;Ku3D%r18mq429r,7@K8/0'<mFH(oi*V;83^MA<[kg'"$Uo9A0S=N3K_G:=j5!9&@T-MZpfrVE&HT*-7-b]!n!"J:[%"UoGTa6kT.ph]<;%#sQ.&-/VQ+5%0`__'_u(,PZL,j6k91?pB,`F)>BJ@TelKDMCq(,%:6dj/<BYUCcmW\\b`7"<T6C8>lE,1=*tS:9;uC(#tZF5X(u^%"<Z>S"L%eo/5*YI-MW8%64#hq759CTQSRh9X\4@rFsKXm_"U%uG3-$"i$4G62CJ99jP'u)U"!uU-$a8iqtESLOn5#^0c[K=1YTr,%#-E\='dM>m)%4b?S*+],S+?:>-[(>ghTq#nL(tWIBC?auia]d51OQioL,FlH)tT,OKj1k`dG0+dK$T1#SD`F.aiE]R)1AAQn2Ygm%p5[uX5$WKH\@D^k':&Wnpk6bf'VAmXG2&E#-hK+Z+Oh[!$2`=\T+1RgprMu3\-kdr&LYIgcLLF]CE/s+]oD%c9%hOj\&&/ZpIaqZ%nTd%d'="X>?OaUNYs?>!M0@$$5,"4HGIT`nUidqSI`_&.!d7/`n]gS1#$*`JLDa-Q:FN%Z+3m6D'K='f(;B+*[W6aT;WQ^Ra+sPN%?E/'op7$=j]WEQAO*H*6$lcH0Ro=\o7CaQsMU+au:?U<_f84MCs)EpWN-FP^nHj,!-pG[e;Mn6u,SV?'b(EqJV>,!_f]>.jq)fVm%$;ds%9':K>I(Si7o7Z?>nuRR=lK])[Gq""GGI&+CWa]<_f%Z:UfIY.+%P6;f#PglADNG['jq,;?R.d-Gca#chM8]*#^65MRqRs5%%HYYcR/+P:!Srm2-V1]feii".I8OO]9rs@=("D$"=>>e+]n.2PFXl>/lP7QKCC8%_1%JZIWS-2`EDQGLZA<94/'+CQV)&]J\G!gTb%[Z^_TQE)?V7I[0:cWCMeHrIb"7UR6mUpUXC(&^3%0g9FrM=GZ]LXmH-%aSj]N0N$p";:T+gfj!L;8`!OQq0OTdEkj!.43`q:lVFh%a1`aPGt'#"SpeJe9H/6ml-17m&>Nhm!Xg"lNu503>ikm;-Z$7oq&*I+ep2\R\rmac,ZYFW)3m`+&Op^BQjRmZpUK7LM)O-^:&&jO%X=5:e3I+;l/.$Db7GQ&0piD=?rt?<Y9C7K&RbiARjGYF*gTfKPb3Ch&rHaWH9ZU4Z1kUT@^Sb%?.:f"4L!d&:,Mq_q)(XDk6JP(J%k9(H6rl<d#$ghQpMVe2Q:bs_0Z#LG9oD*=COJrPUE26TE6p3?QTEh,LjLcIXOj9&M[r#V^&VI+I,r.b)r(&BtHd#W5I![Ms>^7>q%bt4FuTi@1CZp:"CLMc5&dAo5J?:oQIe$6*4h><A9<5fK;SBmRP4$Gi(R#[q<1ob*JidB&b$jMkB$$buARY8*k=HTD[XAQ:l"O+W*%k#7`103DoHIeF)k&d@sI2DYLMIeR_Yde8s#Ynm4>%95Npp\r;`i%.rO52dROpV[tj5m*7g`8<0knn'uH^_"c>:oXp'Q?.S#]T,7C%YaP5gZ(cGo=i2o[WrTpX=%76f+]$R$I`Yu&<PgsKZ=$]:hA=OY#;u[?_O+<h$:n/UP[d:JbG0*OC;F<*s%E&VRZ;'BYA;-U6TBL3%:FNA$,n>UE__:_nY*'h&&SHFT@Ymu`-[b*+&([b_XDPat(ntlFn(gVgh<oH&bAhWJ"F$0fSl;`Sbqk2$7:u5+^re&ZaH:CQ:`bnr%(K2BE8:7'm+aVQk[<O1!:m?Fo(W:_4KQ3\HI"mbm9LUS)<O++EqOiUd8m9MnJt^]Bl`!W>!4b9ad-oi_qXlPoK8Q_>XD+iKb_=r1%q<,qk53$RK55Y"LTANYI;5>rBNDI0;EQgXTJ+a3'chdKh1t/5@W8&cVWW!pW)RRFOS>]>$BRdGZ=[TJOIbSfJp;6sI-SMg&8a8HY%UgLFI/A&2r]9Zr6&ITV^Ee!T^L$gkl_EVK5N`pFCD@H'8iiLI#!F[_#e]k;:&Fm*LAXA`%Oq3SB_UNTo$J^)1rN(m1B'k.u_XrP$%:/n_FQ:/Eg<)%=$0cuG`HZdlR?jQ:c"T^f`]\6_sn8.YklP%aU*7$fWC92k.L.&&G;FgjF20:Gq@34.G<+6gBAfhkWF-L,d4X/B<%o't)SI/S+oZabLfCL'k-0M-^i"$&e_AWPOm_J>1/?7Ei[^Ydq6]YU:C;;jl`bW[lYP4FK7,fJ`(<f[dY`gDEBPcCHJl\jtd1q/q5%PA7WfoG&OY;t/'$!;;6E4S<?Z0`TAVccT5f\,n[en-,MHZ69!f7c2B(^W%aCJc;&@5]=7n'&'_5p^%>c(`eC\-5CP`aG$*n<Eiud%QJF;CC/3l(5Op8))XTr1Gs^OjV4npNaa`[MciB-C^7QH6[g6'sg&nGH*fMZ!cBa:$Bl>oV2?\TN/P3o^-H1t&s"8%aT$2(DJgd;%%&6>pPZ(Higj3j`q9]G->'DX#c>D[D<dM5j=#_L%4j#Rt>=X%g'kXIF:Q==!qe84>Kinam](ut\^4.pc]IG?H/j;(`CE'a+LLQfq6%`\r`E)n[M'cO]Wamt#H)Wsj:h[gc#5Ho8*_f+f+Xeg-hJ*nhU?6X)pj@?pAE6Q7lSjlX_sD,&Kfa$Z>+IV<N73bO4+7)GQs"NWI_%nX`q9.r[/l-$=k_g<fP@aW.NP)mE!4@tut_Ho448k#1>K0`Pa5I%IQ]BVRs,'LCm?%>^+U0#.t<1N!dBM#XoGm**/W6E,G0(0G=/%Lq3[.1=q4]AF9p,3Hp("UNWWmE3&6:G>@-8l5pMlhN49cQit6#%.nJVG*j)A1NVskV=7@/=hAHi`4N]+F'a)[HiA[qhQq#W.a1=u%\CL6.44!/+j9BV.+YFrJjYdrDR1.er3P41DbPOaK@r)BA"J*W6XQcSL3`DAhE/E<p+KRi";[dPkoht$dY1T0JDnc2qF`F=&8^G9%%1Wq/pjZ$?fe[G2T)=G++q&eGcaS%/_-p0X;>O\h(]EQ;N<HT69mZu<?l(Y[h9slu*/^km#V5d'8amYQ0T\YdO'N6rBpe.+ELq>8U%)U>3m`"s:%\Z8qO>Zi7qZ`RU/SjMFZP93a]pc0I.9]N&G!EWA>fpj"i"CQIk-JLk<.:Nd^A=NU2k:C?\Y^])#OEHTu`L;J)U+YHE%J.,DaFALN<WC,TJ6F81[)[jbN-gY*'(Spf3^9*B^AjGO3;]c^s!G$Nu]%V+#OtoFod+3OmS,T_bh*B!QPf8pr`8I/b%BqX_niu'H%WF>,8q,#f0&b<KC94cr>@tE$gN</3h9"uFEq&>lbU%N/jl;a^E>rHkE>/Uq!TnIcZL8<KSLOIo9UW==]*_J!nH*S+?JL'TcjZ1;!%^QkU<C1-k_X#'>+gn/^=<lY*+[i?PH/cGM3hd-J@Ln*/trE%aYrkpDeL7g)f/^e!#TcV+$Uut>$qS]GP5&GAK?e=r%[9r4'D;$Ur%<8P4L*gb;J'ER<%ipIi1)W:]`"Rk+DH\<A+r/SN`Xe65/-j=UsDL70gnN?]e1:q4>G%L%hneDbkA_;6V,'u:0oDXLYcNEeIq,]EX%N8NB=SIlnt?=qTEJRN+JAq/Mhef4+'nI9cR\3h1^m58+p\,X0tMsk8([!2V.K3&ld5mlB:6*&e'*A?iJ#E1aQHa@MF*I]*0ruaN*%^SCbB)"%>BiV?#<Wu'G#1@10bI]9Z$9[*rEVQRsL8Icjik>&\E<^^tCYD\MC]2Y!dOJo/Q!uMZm.ZZ$5CdDY1Oegi66FV8MWq@O@%A/gY9ghl!uihb4C*L_Y)pN9%[?=jHFYCj):0BT\acsYY]O6!pMM+&@aP3h5(0t\)RInP*HK>7D&\]8J:dY,JpR]g$B0P$27G87`>%'-Y8lVb2og&i%L<FGWP4a'aS@/i@eE^jEq2!2MEN;d\\Qi<;k(fdmc0Hk1p(FhjYhgGK^(n&33[@\dNRet433=c12Ki2'DU'9a0d%.OI+BS5DWZkF,_f?.H3`Ltt]j?W45Qk2%IdjjrjEp'L'E.JYuRQa%e%J4.Tk94F>@i-O`8VU1rt@/!qV$P*LX@53bW--%<e6DO66%5@OCP/0un-Y9X`"7!1u]+'=e%\kQ(,E@0fsR>.WXA1=5ZO;[R'9?E&SR\VW#OAW3TcRB&RCeKpNR4OYT>Emp!/82EkJR@i7bnLuS%kaH`(67`acdl%#tG6QB4N6VChZKJ$c7Rn?5b*<CdbfU!g[Ot:RN-;kk;qIY,Rh.r_EOUY#B;q_g0do*bb\&7u$.Pf.m,O6]1<,^S%)?l*78'16ONX:fj?rJ>-2-H*4RJ5'$&o7>gcu$;0%]$QXK,UtbZWb68@.XeQ;T\%XJ2Fo09_'e]a\>=&K%#j1@s4+<J+f%QWq+(X%82H#4aa(uQI9_AK37t_d_gJonVbh,?ASp7X<t[_rs([#aP5&1b-9g0+@c@q&ei;NU[t2dYo=<lT8p*PUcr2Q0W<NY9l!3X(_MCfu%K49YVn(InuVWR49W6B,HTUD5*N8gFp]2Xp*gpDs[R/fVVO)-kl*i?H>Z'`S$f@,O!XNaWuCM^1`?P0o^J'D`\dRBIhUdUN4R'E6M%g6ag25#%=k4N5Fl0'f^+6A"ALk%F<#!R)+#.3$.0SKt&8K^npN@:a6M*([/om258j&^EbL?aF[akt9Bij:S$,N&U)R@d*Ru_n3t]%$/8r>U%qU('E_B,BfhuA>[Yc4c1!l'.$co>j)VF^)CUp*-BtJY,J]M24sjAF:COR\GPuCj:rm#(IBOeLMUX3gV.SA&X`5K33Hb$=%s0,C.FO0h'0cr;!PJ62W$araX(s/<pGl%LK:L4r\n;(dOihI"qdMCB4$)J)?(22pF=.T2n;l!+c$A`5!:.r&1]+cWdfJ;S+hBV!f%bV?L`1(pFmJGg&.r.AUHI(Z$^$=(@*W.n'^^SRLN*muQ+^;YF$\bQ"ZFrS#_-)'lu8)'VqaC)^<p-;0@/Gmk$$<R'Q<WqsO(4P]E%d"K*,oC4!$C0%29+\'#"JZ>*7\uF_$cX)@DXtZIoD0/1_Y;T$a*njIDfcN-fpt44p`/qFjRZcTuJP4`)T`mbJF^'P^eb0/[WI%u"%iT!98(]ik6D(kKSZ$Uk2/X#Y8gF=["[Yh0&@>M1L47$ob:DtRT!kMLi-@W%r:T^LlQI.%cJ;^_kBHkSl`.jV^jn8,CN[3jVo6oO+%:EEjFVAgp1ISO@_8+)4:UhdGrSE8P`VXM`bI79+K>EVF$RktOsOt>/^=u?fi6l*=S6/fLI3aU7](c8><'>%C(h7a*:&.?^*pVaci%(5u5E=LCZC\,8EP:RDWeIDg)E1C=Rqn3s=^"!c:&d!I;O:X3'sGuLFf,8&%J/6>t\W^p.oY1?T/3c?9rr$K`=eg+?##b>tLc%6=c%JoG-SL.8!S2e1]`Hr]4QBC@tO1MH_i[pM,Ts(VmR>sP>*#t33cN[=:R%3^)F&8=]#f2:h]'PQ,k?oK'e/kaI`56k5,42b#i6lP]Z%`4BU5bqj5B1uU<_TCt"V-!bZn9Rd5LZ^$2^?4@BZ.^;t#n>@H(:B8Ick%`J&jgADt^M8.d86L@t$:,=l=$X@lZQuf`@RE+U*6XXa%1R2#]91>Xp9)dVBP3EhmM5MeCV6=+V_;)B8GT1)GgRf/F@!Vh;jV$=ZMPVt5I07ML=d``hCt3sm^l@W#kOgO$U(N$rQ^e_Q0N@J^%QM$jhq[+1h?sc:+WL'UQ:jhi*\kMqq(MleA[Z?_:@J[(XL0QV3&B'UIoK!-G/N2?S^I/S@ja#dA6\)I1Gq*hF.KZ`M&ehYeUdeOF%2'GMV2m)XlYKn!NjW.po!Zhh'7U6QUN(4hgm,C2;[h'5ELe5(5"5g2o=WF=Tg-:D;[V8-?Le8SS"fL;oYb-^pRqn37W3>A.+Vu`/%WMU+q$a-9l*)bpj>-lC;A[m+.(g+tXh&G[S]>/`iL="8,XUXm$p$)gSCFThPV-o$8G*%Rf*(@E:lXJE*mEo9-3B(1]U:2%k$fOL$%hKd<,ko4n2]VYC#5cZ4&7M1NejR*`'>;R@oSEPf!\Y`UfK+PP?l#kOt1>/Q=lZY'3`i1XlGZ;SIoN.k/=/Y't_ZI"BR2]@nkam!E%#`4brl".AkK4%6]c>WEO\+GuP6:j"_(!QQdOZ3>D'_e3(,j@&eb@CGZ$dU05[!TZs-1TA1#\eg#[hLPD\cngJqN,j&E-W6IR1T1+%7n$c-QI:!k:d]U*j27YPp^/7sA^gECLds.OI\_"@moR^<lk(DuiY@2*o_El'o%L,?DQI9]`0ATJf[#E19.m@rW]9Gm[e!h&Nk,iK%&mqpC.e.IUf=:I=IbnEimf<84)[=?60(F%eIh$;G/ou#6s+Kc".uOB\3jN"7Vc8T2j(tgGI0O5a@.W=dB3qgP$<5ciGc;r`8h0EU%EZlPmp-S>?@bAB2.T[VB9=3LL4c'bjq[Vlf9C8%0ns0e0It%*0D\:r:LFDCn.t=BA2.Bnnl^EVs0ekIW,4p>?<@'b']CSQ^"Y=?b%mllu=[S@VEgp3#4B4Z#q,CGFrX%>QqGsCBUg=X(i-/P"@jb7X-NtL\8X;Tp._m%sO(:n?S=5quJ$#9$_\m4B5(/.'$G/q<@k!j<N%kS*)')Il"qh(00f!);b9"6h&PeH3(g5n9">%`D=f=(d?!DC(.1Q\'DA8?nn>UoWfk$4ZhV69V?5'7NXfn^:$nFs1Y.<HE?,-XF"8%\_(8CL4l;K^RHj\,#%;>g7X6YIG7[P"`8e>@SIg3*cG_KTVY_skGeEKcdU^G?"UQl=7b"N=$5V`*Wd0LR27OdgX0TK*^^pZpSfEe%0[!3&hN4`,J\-j]\SXjuJFBEVZQ0dN_&DU;?c')k2ud.8TG1%md8R+XXAS2K7QeE['[mS/m"^rr$JX!$LMYA?W1#]2l&I*ng/Y8A%RMH0a]*<Dl/)i3B5dPTYXNe;MD:[0P[,>o*pUI\F_^2a@$1B$Z:Z(:"iVdd;77>'TQViCPh?4<<\K6(4YQLLrS8/.8X;VY0Gd>/"%fIMnj"Q:S@,F6H7YDI<DN=q?s1jsA/$5Qj2,TX]GL(sqjj?F7B_EMCFZAI6JWAqY;:H'$6%])idZ?P!RdX?@SOB0\JrR=N=$.r7#%!#9NQr;Jb<*LU)1Hq>e<I6>.s#cGiRg!C@/'0=)*Sl2Er;IH;L:9nTWFss1\5*-jf"IKS'X+*pMcmk5QI)MmA`I9#.LLD;D3,FT<%QQ$QQC>Z+P>q-^T(ZHPsf/eNYO>YNnTpW=4]Jr]Kp@?6Ia?1Rp:HV#pP!XeV-uHN)gd^gg<")XI[&'!O.!X[?>StSRoZOE&d9IHX%#8sWnc`(R&.[m@@k!'&W@pC$H;e9K?;sDIIs-c\af5M?ffdr&7P;j>mVla;!JA#l-iR"=2ff^/^RGWS6TmjYlC1Q8lVOK!$LJkc[%c`s@E@Z9`kG]1Fl@%aT(Bm!hQ,U<HNXK.TupT>cqN-lHq]%PMjV=kFg#K%/J@)0/2)R,iiR0Q*<8sic3KZ\[S'g:mN18^(DbH1l\%gcB&j/Ql\*GDabqELk9ia1[u0BVZ=T%dH&>r"g2<[IE=m^t?`+D!h\`_5^E#ik>E@:[c:")iDoK\B7^tos;i$q8T@?KI%Vq-j:F\%i%1'7o`<Qi`a36ae_e+W=O^pjZ$n=@KI#cRbJqDsJc4`PjV`uB#-o9rrrq.(h'"T=N$0g/SQmKLi*R"L6pr?&'Y8W?;NNpa+F4fN%r=^l'QB1tXVXK.Q(Gq:Qp>c'hJAQP-Gc(,J@.$]+(<c]5KkHSQJj!N0=kJd!61/-;QoJ3@Bf)Q6AXM%cn?7eQob0qHgY)KT5!JCB%EQgQsGd9j+LR?(lRmU`tfcsrY(<=)>Dm)ah*Q07G@rN_$<?,,d\Fd^>du;=W>Y9s(X@J(&WjRL8ebFNMH7]._W^UOd5-W3!$cr9$%)FV'^Ku$,Vp@]bmTmKN)Mb;t3MGt9X=m0"Y^-VfU.<;U7j$]&"A2sj#2p<'*M;!cTI9r>ei!5C1cT:'G(ABo51QZ)gJ?5>9P*0.!%m&H*D#h!iG.;'8%b&"mBZN4p5DIta'>&c?VlgCjg[Xo`\"-Cpp11LDE$a.D.,#Jk'E11eMWnI_"4(QFo;?qB?;5"&Y*.;hAgZ7HF%=)#e[#maeQH`Cn@S"O5QOR>"Dc!@1.>eh:bdGY'n'T=bH&X`WPH0P'VIQ^AFRJIT]<.^V#Qe4&_Nk#rN-LShRl_iSXEA,>Cbe<5-%],,Ir23h/gm_uHTo:t_B#Md!00lnXeohX5PHa0WMA^fSFhhWFO?]f;?Yn5.SK`(sWX6dGAht1@JE#/nY$-.K6P'H4V\@n!E'Z6X>%?HVJIXd91Se+:CPE_.W9,oH8YU=-Y3SajUVgEn3Y!<WMa(9r5\P0:Pj8!itAYZ-U6BbWofl;oSH<P5Rcrq38mhtO:F=e=!'4S]a,%dFM/hcqAMVE:Gd3"+kW!V%&DIh\_Pu(TIRYn<_qg8j%Q"7.T#MbS[sI,[#0tFi--F\+"'3ZhX=+K4Ee;">i/?Xp,TX?27s'7:.eU%b`t*h<AK&?7!_N=bYY>*V+ZFAU\D,g4uo<5kFt*l]S:?>[hq&r."qm6b*m9W@FdS1^)8l%l10_.jQ<dk#nI%\&bnV1(4Q2qYjnn$%9N$\"%h?-pBB=Q_7-+oN#c!t#OX<W/\sM\3BTEXTXE>WhM=tHe.^nE?r</'^^%`k)&9J72\35?rIIfqB_Z]X17>#>o@cht=KU6pA%Z!S$*4moN44\e'$mUPK:hg<cna0Gh\2*JtYbK-/'AFn0^V'53^^1Ed&9kjcSq330DC"VuS2TM&Y7^9-1)s_6r-1M""@.r=I=d%Y`%0c9==PVJmX\P!d.BWhQ_+\gfA_FK_!_@U_C9AoOsKhIRZaeuf@g(&d0nCKl*o60s!5@OC\2Nsft2FrG!QMRZt>EXIILjUf24SZ'k%5<AmcZ_J%*;Ub"K#6_3UUe`Er/<gqd]]mH\`21W:kQ\t<c+Jn,cu(aN*HV5OffAfVj+&T<'a<7qKKl.b%>oR&m".U8)((IQ3jjEm%BgsR#!%Sjp$+G@ZDsU'I32UoUb#,cMQ<DJaNjUbf;\Fk5rtDU[3?NfC]Z@OR(pfq0bcE?5)RIC\9qnID=V.:Kr\<CS7L7bIQh6]n%*JSu2/5.i?ed'8dosc/s#Pq>h/BZ)Vh1;Np)^[kUe(D4L,cn;nS5c,]r/E/>,Y6+`$)ookS/"7u)ktPKIr8:)%O/+'.`8tA>3Z5)%>]I.?&P=-5Z.?-$[Y@O*KA=ET/n+-1,"qj!hu<gL3)jXi`.?c,qWWXTT,Z%+=(kU(cgNGKU,B2CYgj_2h-\!uDRkR[__,$@_m>4<%!aOJ9(1oq?A-GaG"f0'@"-\h6J1X^,%F8eOSHgRO`-V-1H-b"-Qo/=]H_F'b#"F`3J7>6>`0W_9(gp0?Y-gFgoh_.T&?G)_P=V]K%`2^('Tg(MlV0iatPq82kD&n44NZ=1;?$a+'T1u=b*O0Eb&T,_C6i6l"Y0MjQWRrU[iA])ZKI8/Fk*8BfIq*a]9tt<\=\#"Ql^2aB%"/`_9YMH_#h?GA+H<Zs5RkqLJiOOn?m1foG!SNuMa.2bef^=gO]mKZ3<h!LqLFe0EkoS:Y;Y>MEq0t?Es$-+TpT(tlQc_[o"IgmM%)Hc5BI84[&Y/<$D.;M!),$tV'Rp2G'QVSuiQeJN7iDp1kF0"mun-$3='o@O,`>@Rtatd:q6m2XOXjgG[)6+ok#"YNGY]HkmR5qG<%fFK\tBf<F=[8VTYH.2,aA2>uYF_IY;WMW3=h!+lUDKWaZ>E*s_l4W_`f(:].b,o9.W+k[rL>MP@\!gUG)XFTflH_BtbF(ZBR7ccY%DRDi(Xj0aZ><NNi1=YVn$:MA8?!uA\X^=\;Tf(k2".@i0DSiM&Ft([B\^^`84DJ9uoI,4*2D649qh/g(p$oZT<bLis\cdSJ0a'o4%3&dsqK@+urP9cRPVH+dpEiT<)XkEmU!1hX)%/,XC99iX#+hA>.UGH&PP^*UV+2\01)XT15HD+<cX:<=QNe#QX*E#oq!0%+_<],>b%of9'6;pdf9R@"4k2#=eL,4KMt2`@Z3UU.Bh_2m08l^ttlAq,c/82j_4KJD>$U)h6['M:5e<qYQi).^fg:&qss#GS$ZJ17N;29D,c%dAg@D23hi,Zt^J]/-DiXC:rk(@5"BU"-FRZ7]S]aV,\TSC"9/QG8H`R`S^"[TYb_u[!\+Tjm*P4`+o"L.'m'5e\moR=sU]uLnp%h%hD>egh6bkc^o"%jKMm_3D8ra(gegRN&]SQqRpA`>.H-c_C=Zt?HW#"IpJV#)#X*"Uf_eW!eJUATXMk9=G'1TZ>ob&!=(ftH9&NDG%iMpnM`B?M2.:c,O6M@(]Q:MmEC@Z\<m!_FCE/81qZ`>klKiO=Q.2+[KRpAai.:lB0e\L6tf\"_>#4G-2Z:o6h*)d4=Z<**`QMS.O%?6,-PY7?p4XF]Hu(aKbUN^GhF#9HJHA#_#pRba1^dnR%nQAh[g"RCSTl<>+V-gZh#/N!saK+NY-!Kgd7#"ipA]j=BP4iB3h=e:g_%a>a@GY<DsJ<sMFpeYmiW(<EEO2$s@Fq%R\7f4Mb%e8D`.X?SbDOd-fI@jQoDmr--lfL-PH);8?\$ubR4J&B-u\Eb740A%T`LM*6`%9sHl99M#4`'_EE@k^k*N^=`UFW/RR_k&69&(_!leNbsf!G/iA#=D,cdk%L7XQotGlY]_Geq>Dnu4p%1/P`'^:Fhj4XS\#I_p3ag+%^7?2d8G`kPj_,frar7OZC2maQ@/\c3]t@;?9o4^!Y\'HKr$T5tJ-KfBj@.ghIKh^LSRo?)m@RC5p!F=^=D'%!;`;u?ecA^(2;02)%iS+ink?1^8,(HqoS^OHC.]_IL(tJ`@%-rEm_jW1%1K[e+>"5/ibPMir:bROX)k&p7.%i]lc*0\+P0GCQXF]FeAJT<7,I3QcY8$<K%QPH$6R;lS.[Pga_%[_.31'R6uG`t9"Umh`W.+WqB:/*1g!S\<(@b7JL@ipGEM*BsN"P']cIXLatI(Z4lBgJ"lc%]TZE$\Tg;b<KR%YRXbh;I+!/O-oD5I;kd^5d8N>0Tf..[3G(57Dc."7nI1aGT]%\>dE\/D8H/S+RS&tVc(#UZQqP;LTNlcP%=2b9^>RoJ:$mK#P%'.%YW-:6mSoH8Tg1',g).!bLKO<,r$P1-Dq57N<^W((nT0F`_EnbBqr(Cu>V0>C9&KLp%?gn?g^s\M+D%_rg_E1U!0?@hC#jX0(QbA\%5!rYM<JGobZud6EY[(9TW(8""as":eLMc9)Z>ss3^K2,+Z(]6`5UHV?Zap5Aj3,BRLHD7#jXC(]^K52pj;$D1,alueT%>0.1c-L:%8aL5C1h%2K"t!C+EHsf]/qL#!c-s.4=S5Qbnd'P9?j9lHrpeXmNu%LE0,]l`r(9ZH;1mEV`]K9)frVFgmR*j6O6Md!WVq_nr#1Y;%r(9J1:k<i[CVVe%'o5I^8D"c.DIq!Wb]k;\Y588NdnKgDU0e#,UL+,#dBBX,c6S=8_N,.aa4.W!9L;4KYnXA0S+N'+Y8g#'3jI^P%1C4pkl"0cCOPZ4$bkP6`6I=QiYb/*JXr98qM4":&cT<hPEQ-1"SJHm2dadW=K@h%!QpR4:c7b1'$c%eK40U3HpZ.hE`93iR>4e<6%pcP.^Rg/_(I%HkCZciXYkg:1kmm@3L%OB`\IUa:h7rLl]+[d8?at[F&3h15OKqLhOaTE,/60,&gS<a.<3jV4(IY[,!X#f2WU;q7.%NI.'=BS*H9I4?sSj,?onNY%1/0<7QMLZf`q6hL/*s6TMC%R='tK?!*E]R2.M8E9:s7>ie'((ARMTEkj."7uZ#"8!(^^0bla7.q^P%DlR[&!'S'U0l&=?F<.[f4X*hXW>_H(3Qjbs.@`:h<E@)-iof'X)f#-larGoIjO(0Wg;N"j5_]pOT$M.rZ"(Kbpp3b`5J-k.$m8[F%palkWLqg>P%m;:@N7j\B.ul=Y,3>[]!1*C.rCb2Z=ScG8L2:),$kB`m&7,IE$*OA._Q3GR8r6IdjHZd9+2TdJZ'FTJM_/]T^RK%:%)Z4!$gd`>$DFnp]Y.m:slLGU]L=m\6W+2aaQu&_>,q+A"h@!`U7k%94E]T>`l(Z!*6#ifeW\NAKe:T$8m]uY#:uh<qo'9<R3NJ/%%aL=p*e3g2u@44R:<^bl%&9$jS[#.&8<AdBMWT=B9`HO;d'\_[OXq]%.KImPf8"O]F_eGR8-IN2%ZDlpd;ee=-=653SSsQ9*#W@(1%X2ms$Q7KB@Z[^^_do8H^fcuLpH\<c`*'OM&><(7o4?;"DQH?^`2"Cn`3pcuoKG`$UnI%6+Id'ED@uj`r.QBOh?L\U`njn:q4G*8C%#1!!J/!a-c]\A=fQmJ'8WOW0&83f(Y,[d<KHg%*+5TVX)O11P+@H8GLK8sZ-Y5T5R)u96^jHLLsD0Wt)HftosD7=/MYW!fQO)?4'%[>1_od%5MFHj3bshDqFMe6C:V$!Uc<OBLh13q]^i0C>9Ue+`uQl5:B7$KF#cU"IhN>Dr1kbU;8%p;DT8b_S^lSX6!GT6TCB,GG7E%G^Z!()t7RN+`GgNoEXSgcLKmHj^UWm'4sWo)j-,6_1]"3W<KMkR!83!iQ4\#=6^N-0_1R^irt'#P_+8pr!8`SaqeGVHm*[W(?1H.%H^ZOkpTKjkZONF0.k\_YU09`T=bb>1B#uBA)*T`[F6ROA]&+05$aF3M')U>7MMcE<,HS/u<7N_UV%Bl6M+0F%/-1g6`.Qa\NeM^g%Mm0XdGSG-lq^RLNaL:!X@SDlW#ro;V9pr[145t&Ga2H\I1#,"FC<'Kt0j0Eco^d\h3TBhe^_OG,/CcSOA$<k3pfd$OXi5qg`hFP_%0JcR.SRn\H8K:@iQJ5U@d6Gr:,qb&O@$*uo^dRP]86@^=6=1>A5qQZcl;\i$U!MrZTL_U)SOYqu'PV!^5a\Z""P;)B[>]>QV%C5I%VMFC?A-_]1CmdMf)6[AUD=Emk7*#iZ7N:p@/XF7rkE9M(L*6ZHm+aZ\T%GUS:Paup0TC_Z;16=TYj)q`&#H]:]72'$dGJc4Cd0aC%SE!_Sr$R/[1T3mDA@iN]4O)p6*LQ`DBL<^99c%:t7M3MEpg]9)p+UMp\(+$Se8FuakaJupfhN*9d,Z3WO.!=8kr'fL"pbbQ\[P3k%SW&Z1b1.UY+[\&nlIa^Fbpb7IGa=d^9,8&#A;JH]Bc4M">a^meE0l0?^WDFLo+H^*[`MgB@WR&kU-lo6:2J5a#$[=)bQCSWpcMt?%N8#_n1_Y6]]e-4Y;6e*9>^=MHA$X1(C6FS'7_Ub47q9NG']O-j>$NQ2JGtuu[gZb#MH==n+9+>g`+LHWg8/7cUo'40]n1ko?+muH%>Ho>n&pb(^7mUq>C5OT?7!_\Y;5f;Sd495_FF7Rknm:^@pABcb]P!Y?a_0:E[oN(J]2o9HfZ.9g7H0Qj[83;q&Mjg7kQ.6*9$>;q%m;dOZ$0,?dAOVhE6gd9*&B-KKMP\NU\8AStDTNnTHOj1`lT)$QXf78,=?-q6dkoOPQGP9=b$b`Gs&'fM;G$eH@s8/p*%2*hLij#)%qDg87G5)>P8>aBT8IeE],gPRZ*03uk.<ko:BGC?oe/*nqk:L*$\m:K.[3@]+Gb!liTN-9jfdbg6\;Nsf<;S:Z'*k)=<]ZA>@Ak9s%bFKOF`an#SjXd?\frB[R0c@r:QmbREG"%`N=LOOTnqDY^22-b2&YhVqaHdjb?1F@q02;5PCX#(`!Q,b=>%=PfE*EZ6\n<O\;*`#+%(*S[&_gP;'@0K$EGUX\70RR?9S1@^[C]sp,NR>c]$lmlEXA*<'O)K('"S-JOC%d_'Jt_SrR`>biShV<d=MZ2iD9=\"`<-lV.j(B2%ls.B"MmBYXc]fLl0]bgBZf9^P7(d-oI^YfIn=pk7dWA]fV(<h1#grsP"R1Fc5rpe,@LWHS+>kOOa\%YlGDE[*7Z[hK`%WK.+8o,i%oOjdZkQH+ar?+XDj&0`GFCoj^&I?h$o<\hPN167&-riqt;$k[23'mDV8<@Ge0$HL(8@._nX@4:'F3Jqp#h%BQod33c[Y^1;8rsOu%-:eA8#h"ZS@RSDJreO4X:?im5M6.%eWbBri,=o.bN-B5m1pJq?6!>Ik8t\@(dV"ku+AE)Q<N=\(,q:<4OCi%G8-_FA?q-6DBVd4q%Obch`c)Atd\M=YH1n1o09,5Iq)+"*aPTV!N9osPB#h#,=iU&<\foiYPg"@%g9-k5R<e<0!j=;;Tl-IJ#"RS%@-#URBr.Dl.#^41l%bqO=b(rhN00oILh%dk0,3Z,kqg1gL:,hbKXoIA\$!Fa?>"9gC3Y3]adiiVjf?sjD/Un52XNCuEYWX?:@TjEK+<9a\L\B^-#?S`<#%o+$9-2P[;0Y+C9$plKX#^L5d5T7DJDa5AQBR>"_VSCP;#`\L0E/i>3diY(dqC^q,%6kUgH;h;n\G^*BhDb!N()WodB6u:@68p-,Z%lcOln][Mc8@Yp^L,OUK):<_;#4XZl+8/J+X.!6EG2J)SOCoedTb+)Ab6P&=B:.MMG?6!$OeH]o_DV5m1@K:jO9[cJ.A<s+IP*?J=%;rG,1.iEDV$k&5%=-9]NI_R]IO9N5F+2dt8+9V-d[,FQa&eN!*W=s7rpQr%c7Rhdl>o7lLC=p3k_ZqEg]i7HneT`&9dWBt(.[WV]%M%m@+12Va9_h`@'n0U_5C't05^c9<;N%ihaeQBu,YY7Q=$0__is,+A]'SF7?a<-B8*3pRr*o?V"g'shd]#_&/@erGc&msVp-)1VG%6`21&FS&Q;JBHP+HIIfX^*^F/PM%r;l_-e5f6R/343kn*+*!c:@t[K\?0EJ"A97V?0[DKNs!KL-'3$oh^>Pg2[&.kA!\*`H7,XQ/%GZ@J6]h+/%$)Ge)"]D4-7\&8A)nFDOi1s%bX-5;;.<=kI-`MR@-aiYuCg*]G:<Rb'HK;J<Y<U(n5=dI*ha.;"&,Q<c/Ahd`ikusJ%m(jX$8&-r]0-`drG-+,@r7AT`DaLZ:^MlQSmt[nHU$YatU+9]0*68acO/EDtk8&I!W9.EKj[O.)PFn5u9#Va+i%\nER`(tc)PSY$%OLP+(Y[]i<I564<06W;pToIkq`\%#5Lf+BF-#+UejXoJGg"iY/(j.CsXYb*cWPVE*Zm!Xr5]gS%`tU&@C'-4:I'qrV36o>do$'X=%Y+&^slbs@j'&Ge`M;#6oq0I:t4:$Q*_+QSk/<e6jYQE/Ar?ebVVTT#6S:+pU&*]%1TOgc0-=2S!:GO/72_snuYt)<7-JZX6GnhIj%p?C42`0?T7QqWSH#T5qJ4J.#<P3`L)+pKK[b/T<l5;-gL+JK977IEqAPei/b.u!Ae9Sk=Lk<MWTe)QfSb6RkMdhcJ;fsmT;aFY[?%%"9FEamLK1j?k5QmnII?P(psl&4%[7X(\b;[N'"?N/p4:hm5GR1#>P*=_l*F"i"fH,@F&%#Ld%.Z^%!E1<JJV#c5*MhuPj#UN\MX%%K"ggF'[^:HY$"Xbf>gMaNtBYJK#/=8PX>XmLW`jM4kf]Xh/]KBdm!GJ\3>jL(:"RldUZ6gWrW#qN:AY(dGL-(s[r@Iq6>3Gl[)C%l=C(00$QVemLT(g@cFO`/4enailD;VEdhp=/'+E<RYjOGndLC&kil1]4L[*flr$j&`Gq0FDe#d9B,*4\"+)f&ke\NJR$J.a+J]fi%"A^2OJS';W;V7l3B5f0rSLH1&hn\QM"03:-+(?E;$ES90N%Bt3K[^<aY+-Z`m$0I%78#Au[WX7c"6bR@P*m[o(,sW:J;P>[;V.]X%DA)F<WN.!cd3n$.Km7/X7'1CAI4FX;>^ei[DiZGDe=X9.O8tbkbl)EWEf,8K%'sHkd7R)Dp'L[/C?(IC@osA*3Nlp*_$-FY3JjUd%`EEV"6'aD<f51aJ(C@;H;qYn.77-P<(dZY)VfO-Po6)*Y2I,GILdFl?b1*,un021dWcYt(`P,*K<LtF_:nKE`<4ST.%DoAAEcCi6%(t-g_anCO'_,lM&BqrRl1?AlSV'$.?Sh(N#dPu.j$/n[P1[KS812?Or]6((E\KSd=)j,,NpjOXASM<NEb%LbHINfr$9j#_1ma6JZ%b_?W!/%>$b%-PAOMqp.Sj:`;8`I0FWmI(nHo(MDtG0/"Qc\[q*ok0]FX6pj>B):;u2g`oSEL,ja'fBU4m0\L)egt:;3&2>!C-3uN%+/usZ.#cdl6AFC`*,Fm3a*Y*d"BH@:ihcg+nHB,uhoCKKB<n@&[lHISkp?,Kh.M'f<E/eACF\o6n)&ITZsbWR.,CpTp^'P2^OfT:%Y8kkB#El2!SAAI.HTU@M5+^0^4SRaHKVB*@,\j5j*B[0@+X?[oYq/0B5d%.XF#:0o^:;E+-=uA:P2rn+-=pL0,09;]loE$=_&ua2%ROjYr=Bg+:qI,O)3HqRjpg#X-(lauQ]TAlHX<aipZ[5jK8`2L8BuSJo.%p]d@K]kZ0s?A!'g1afe6(R8i#N=L@1TI0Kli=)a"4p5%?:;f_Es<6Sc;4k!@:(D%e6mMm?$7&?fL]i,oV['260$2VHq@V(;+IU$/_-$bV2\4Ls4Vgh?!DX99'clP44H[9/gUHPae?E("q5=`%L>*ag_Juu"p`.CP#r__TcF$[U)*B9b92u$3)JJ^#46nYCP>!_KN5'KNI5^qP?Q+r^Ql,OW=HIkTJn`!9QK#ZVk6\J/oR./FK%LC8%l8j;)Z[rR>V$e_Z<Z$HQapk>@&V_5oK-&lkS6"a)Tr@n&_hqo*E9aRbH620aQ,Gb8V/bun$YYt-cNpeM+FpO;<o33cK4?;>dGEHZ%pr/TQD8VFWNr4B45A6dN5Z.O[K&EQ@<Ed+kjnkp<f\Itn<68pSd)KgC=V)&:#ti8C,_7)GflIfoXU@mBcRnkeqq+%+.!92:c).]d%)YM#[4:=H0&TtG/>aSj3O`k;+e.Dn>bXU2<T/+YHY]iL2[c.1WQu1:q,<k3OHl/@md8"?QPFei*5&<Ne:`u`@>ee!J6qTBm(9m\%%I`5?23Q4Op,uU:&+8&GA2D5u8B&LD7ZsX]eS=E(?iRXcq<"C+Y_Vo/)O?$);iJQf.!R_.[,OnZH/VU/>qClnjC\<rO]&X.1$K54+%qM:p.`tr(`=VS"!MfXo\j.^4hVZdepG0<7K_&>rHTnM-=gh:6U_,jhHb^51P>SoBV+8?bN]Hg]+pp#a^WJ8&pV[Ro:FEF,G/;9Rq%Jner0/)NB<N-5CNTeCPqF()$X(c>=F'EVnF%F`q%4BiZD3cGU"@Wo#H<&-)bfC"oc(@m?r1@4tddlf?H[;:%NjpED`N/3TZmoEJj%`&iQ?\D`o]GoVD2$o5937YfTm7nP9q=@="JUW3cnb'1hJO2=[nPe."8liI?g^8uGp6o\r#nem95^3UAi@`(_Ds5io-i;$64oR(nb%4j12F,"jqK(UAd;SOR.8+D(X[S,>97XD?hURB<dDKiD@\2h70-oU'&UQi=qIfV/D.MZQE^.ld/nI<`u&=IP._iI#YX0noh`]nd>g%)GU&J3GK%@#cCa^c`j518Vtsu]*d#a2DesfjYZ%NI4thC[`Z`+B0fad*p35YAJLB7k>^9h(9O$k3Q2le*OSKf8jgKWKBaJ>Z!D/^%U!\.UqDe]:!`0qgXo-eS#[QJdf%$]UBe4AAnBK5C1@n]PWP\iC&Ms.4n#a*P3BC?M(6TD9Te70_@0Z#J#K%,PLMIaDJr;4R'6,Ig%hfH<s"7d%jVmiZn*c+`'A:7p^-*pVMqROtJhTKYN7I@'RI74S4q]`XpZ]KnHkg\/P9c!j-oo+SpWs;op@FgY0fdA>OVUfCu:o5:S%(9RsCIcG0.OYLsedZEpR>VVtOLomglMtk#gb;E_7&_9stpusXVWqGQ--S_Y917*emg(,=L_Ya`S)[?9>1V$g$&%M0_JijR2a`A;P%X</dh0-n?*]0'a(Ibe5iUITUDJ18baRaV+3?&KiM]-WY0Bb'8Z:=k`m\'f@=22^ucO<r2eO*?HP9/bm+T&3YZgh)c5([]++:a<"1%$j,;^G+G,L+'+)BMXpgAEB^WVcA*d*9l]%7]c+jMMG[Vi'BcHohp3Fj&T?VuWPj'M>b!H`MKAP%EtI4+4[mBqEK6QMZjH[S"(Vu+%6cFL5EBZK0CPm1WW_H(0JBE1Tiga`OBA$LSC3gi\q8pK"Fk_-QF,A33hpd9HB:MEtU7)*)I?WiQk)F3pQuDZMD/2llM"?H,EB^WV%c9"/TB,'Ob6be75T<!%A3j!)%MfT#D4#,1ukMI*P2\ckR@-H&M+sCD.#tTEWEXJ9V90<&'?\I'r=.@;tlOk?b/eSr^1>u3+&/PVP%b*Fu;5VbiQ^]aeh@:aer5Zkpk!o_15Qd>%_:p/=J&-W,)U^AD#&Fbb"c<9OWH=bMO&C<A6gpT[#\Pr)4#SD$,YV6k!0[Z4,j8hIC%REnSK?tkIK@*&LEJSE1<#;#f)K/<ja$\Jbr/7@PAI8K<OL<\knaT=#QetU)jNi_VqaTAbuftMZ5!3DZcOXsn1i.tRkaWTTMb6#VA%*ER'"H"a>'!g:Xmb$Dr_/@\Y543.JZ^M=JeVkm]hB`PTTX7!)BB5EYh=ND*[$X;Uu@4i%gjeT-,i<_Vf5X+2US?7Z)Q^T`2&/Y!)%@?GIt:#)JEBZI4eFYfU.f#6381Hsh[edi9E;&-Z$<4[*-l5$:W_&s<qaN7&7A;X@u#I)+W0GMG;Ybh<7(K>jAc+>O!XX:K*@\AiX%npX?8nd9pH(Ks_aOa[YBPX@h!0raQM67WmQc9h\A(-t3Cr/U>^(q.#`B)2h?0/EJGeN'1dd#OKHp/TqPklM_\i''&uc*2^6V)Aar%EceqCNeg?qKt5^IR'71`2XI6>fWjN2jjbZTgd\eH02ZVjO\E=aA&-Kk1+r\][t-!rgZ:=289:$M0J8)1\@Q9OA@#!7H8NTa"C,ar%bf)J0Uj=[H\++31[P,29krO!u%I;`([rTJl>X<64^ub9C>]*n)Z+qY@I7e4?gFTE;`ATo>?V)NO0f0e8K@gBOVC8lU\[t@_Hs)Sb%.(6h[H"_>(GrHPoXAmPiYoPP8gN6i1.(4[HB,'+u\MQ4LNG^K;,IY1D.uN_J/?umm-+4WP@N.M,DK\%^4><GZ[*.jE1hS<A6B*+s%@8@qN@7bM:a!0F%p>sm`1[KPg>/$\<ls!SR0\<o$rP[j)nkWB8X=Wt'>V\mhV1uZthDY%TM.Y7.,sbtX`ZLJHQ^"<@.>tc0C-X#I%ZD_!L%^9FR+bumD,^1Vf"OG4%=JKa7o=R#tHjtCbk+r'^aBu[tel_l=Y0_'_AJp/,oqY4.1,"brC4r(CJB4[mZM^cR@(I([cFB&J%]8?pPE[p(M-cF)d-.[U:`<pK/`$Wi=T#5rijI3)[2i.D,55K$=l@q)<8Z(^-2.STF\ag@"8\J:>orrO"gk@n_r1/:U))q.ac\Ts4%3m=""=Aa)P&6>ra`2=[d-ZKqfqCRZ23jgt7>?H7brLDSg+,q;m8@&.r&Z?I72PG6YNU.mC\Od>.$+abJ3247OT!$_GL`qDFpLom)%*TJ#ofN_CH-#M)I5)"t;Cf$R`E<bB[5.I>&!ZE)'atIP[Q7dLWRNdoWpu'I9L4^<tftE4^Ka2A92@#T%P0Zd)8LK5`=GPBRVh%EP%4PW!r5/i^sdCbGZ\Zb)9Vp@)\&`(5nDG!28,5b\dC2tN`\m9l!/#\A]?ITN\+_66PrH_T.TgI1U2BofM$L;![A";27O8W#nrA/'3%^)u40SMj@"P@*kEYYQXT,jp!P$(K6nO[#"dm)3`]0l?4qZ-'Sj@E3BVV0GI<c9]h(j13]%83:VBee8AEH=Cr"UE&bo@:'P!ho:(-%%X3B'I=5VF6>l\smeP8j^(,\^lO!C$*lrsi%9d!07]`CZf[raKG5I=Y2Tg0n1N)Ps;64bI_t%GfGB79O=RKhWfU*B)Ek#c0LWre1%?$@*[[=WR3QXT:JKrgiY0]1PB;Z!o/0agKeqp$7Qennn-cfU]9gIWdD`X^)FfE'I@7\.iPig(V)FWE@u^9C3oH)kpeT\eJV7'(Wu%DsSPRrC9c8`T##6HZBqui"sRBk6'Vf0pNAILc(W'VG$Vh^DV#P[0?VrX&SZ,T`^"W72IbR6`&5oS'1#Q/"=:<Ok8m]`2(HiQs:sB%7;oDHT>*N3eci%*_Rue=&[UH?\'GZdS?%,_*T4\.o"T(*rsd?V*aZ,FIXE+d4`VXfpS\WXPUpemLf,bp+g*#bRj$U9!nbt.%V@S5%VELj9dV'hk6=TH>`(oh:iCsZ29W3u(hnL`!`deT^gthN[[M]hpPa^mPE,5t-3e<)R&^gcX-ZKZ=m#r9)T^2Y2Q[&=SRMW\R>ZL$2%PkGT#]X*sUkd6/aFR###O@tO7HHn3to\ul10$@g#6TN#)H6(@_<D@-a)HK?f;<AM$0<K)>bh'`;AeOc6XLp"YPo*dB0G5`U@hGP'%+M!\IeH;ePRH)?n1ECaB%]s+m8F"5!_F,Nc3mfPa<"`rm!$-Ckls<#T<G$el;t@6hKV^$@Xn_6-G%o5dpYTPj&dQ2jU8]Z'(W04O%*_.nX`!"!DYZ_cG'4&!f(3$8&hs8mG6Drs.5@O7K]S=ULg4=H$.Fu95g+h*D^].'i_8AT5pJ!IdbsFc;63!E'*ig$=7A)2>h30WH%,"u2>ppFN4!WI>-\2b30@t7qI5_p/!cm>%?#CBT"7:9h"!Me[S`&G+GkX*-O:dRVc?9\WV$b.1d$l&Z]\5Y'dfO`q_j20#K1=ll*%WUXWC>>l<3cBU,!CkVp]?-@hCo*o+d^Rd6?anQk(!<kN8*p+.\ITR^?P6j3Wh7bL#L2qSjo4"s]5n*i_7,&P=cc1djdd:fee3l,!%7$_r94]KtNc`pT@"7#W/"kX_:?%[Wjm%,Hfg-'OJl6-e`TM;jQQi=.Ihp8eQ-A%#Wdmi1uWO>DSb'"o5./=?trRrro;a-$q(0q/G%3Ce&(TB\@p=8KTm(8=!WSBB\<<tcEEd1+/WbNpd]lR)WL0uVab_XCcslP\fT)],8KS1AZh_EG!bm6)24])0Lrf8>#?XR]2!s0rm@%_(CAQo"i`j#=L,P\mb&`JLRiL_o./lfI&Dn])t.*i)gS"`+=OqV5A)aV8J)SX\uG)DodnF)S:].*pFTI:9I$uk[JAUR\QQuaDE8Z%lEH"D*EA9iI&X"TQ+Oh?K':[MB&Vf70^Kf7`$aVXR*Fn02J:QT[2j[00J''q[:;mFi,#%U!9$>CCHk]06>j855\Q+.I"BC[6P,Pk%NsS,mlsQ<05./"jiPAkO7mJnl9[=3NHI0<Nh@LWsQYK14CgrdU`a"dZXbf^(C(NU<)57&jJcS=^P6WL"R>e!<&[S(I7irl?ej5E[%TmI%&?4VPmj@a&X8<+a6+Wl)jU!fW7;'@C202rr%;m@TO`$f]``+0=$9\km1Gflm@M*I+9+lJS!$O`a/rg@#P\C\!cjl6UZlh?"P%H%SsnF7?C+fVI5;X7lJO"p#ipfm4/9A_1_sf^%_hcVpAF?W&QFj-#iZ0WBu.?1'BYLS#&]]BC-c8AY^0A6c+=ebn+L30.Q>%]d/N%Fa\!X#OC,<W%45W5[bl"PX=S"s/$/O0=\]!_&?oh2'_2bEliq2nLJ"FW,VPZAq2KWlW)3)-uQ&u(0[7iVRR8$Mp0ku-GiQh^47q:%)\YY(@#Pm*n>L(E?&;*0KHK@Ln?HG*0b3]Sp5)deE+,V2!TB5ITs4H*9GK#,*5N-p.q\2$4(@:CiE&pj*[7i)&P+.<.(EeB\N50c%S:tZmeLbG=s$W;hoUPpZ,_D5H##k+NTm)0AJ@]9sHcDAs^ZOYbZT7[VRmFtl[:i\'oq'qI^[;gj+=_hjir]M:J3_KsZ2DIn%V-]A%AEUHoAmAn&ns/Q>8*#;N\7c%JX\dM7o10%)rnUR4((WEYRZJ(l)/4GP=KfK#D:Tn#0C#D(UdK;P4PsqiJ;hM)?fLXpO7Led'$d4-%`9]50RJl3I`]/,?0uXHT.,V86\ogd@&ff:%da]@AA^T57P8))HmljNIZcgIbf,abD0epH"a@M*3%9PO@KkuOTX</8f]ni^`2'5$u%%Vh=5UsBBU&aK^h"4C#3'F-?+@J&Y[>)3AVQb[?hqA4oiG#4hb+C17\5CNd[oqJr]kJu=AnLOGn_"s"LHL!2Lr.DV2Am%@=h>t5G%Tl_]'Hp7F`-#n7q=_7Ln@UQVn9JRZJWD1\UDFP3*nM_MoZ#YJ);,H,C^[]LK'@^p^Y:OM'EBX2PX_5n7huSX1CWkDuk%klPY"@57%q>5EuJaUWA.X$Fh+1,"/A0\H27Y?E\)VhS:1+pQ]"fs6J6rg@pH:>7ShN4c:<Y\`nA;?U-+J4r/`^E23-<!SX*:oe/%g---KOPfZ%eAl>^_cPH\qG;PIOHE>@SQ65cl=.QR7'(U6kdO`@'Pap)R"aI1j*19K<RfLXW%t9"aEg+8!M_&oe5Eq9=LZ$%98\$&lq=FBG[j7=%&LtuLa0@uj?,.a]*B.RJQE!-C**'A\</m8VmNuD0g1m\6>#?ZuEe'jAKB#msZ>aWmF=s=_\n%EWGp_DN?_IlWGl_euiC4?;/o!ZH%T3>d#kq(!?gHZN"__*>,3BV0n&H%f@'gisk+Ig@Z:OODO!aV^./(H,hpkkIA-IRkLDdc280tX2jamuWKWfkd80%hD+S8PnBI)Nua%)\jeR=C`t37"g8lI8Ra#(4&s1Y^imVQ!9:maV1m5\mL*7h"$+aQ=#eOpYjuToG]>DHWfM$D_UnHgTs*u#V;s)&P?6H#l95K&`4C^%34c.e:.IKi?Ve)uX^k9/dU\0\CrD#b1&L[5NKGG4ZcY_eIB=*RZU]\Lr3alE*;0%Z`KLB*L[:`)j?T!_<q_`pZ#E=ZB:lEs-O4N4%<&);4YqSC&&rLS)E),mt9.JV6E[6QQMiGgU\IOXUpqa3h5<*oX*EP3[GTf:A4?=+\#]PQh7gD^J:tk'R&I7JHa,^8)MlOa*L4]RQ%@]&*H3,YNMgRC5:E$IU+((CKRqM*l8Xf>SLr8<r53&i+ZK-OAfrH3')KGE[U*?:S''1[Ljgu>+Egg'!XE?e(2nUk<PlemR9G?dJE%`>+C>r`[M"\Uaq$M#>d/'h(`#k6CCe]kdpDWb-[H#6tgomH9n!Rdo9iP9WAt*oC.`MLM*9\1l5LD]=(4oAiG:p]#AVi)TGBiCq&5%F^)8&Ehk&Ip!B]WUZ7R>&b2&p@I*!AfK;/l&JOOm'Q-<Q9]>2;bB(*a<Zkrp*C+:]%nF\7Q+gPpLM=a5iYVp".OK>R("*;q=EDg5%+%?`Iq:7^8%#7kohU]D+:aU#jXQW(:-\j$#'r`kQ]jlMoi$QHcf-`,l^=,c`Nu4Tm);MPPCsbqO_.DD1kXhZqp9N147q?Eqj[PZ?%\k7PDAs-hUE<MaHV5RpA0J)j3cMeJh?Y#T6:oL6^Pd(GG=2_mda;\9f]e[3TRk(8A_]U]pl!gDs/54p\J96+#oTVY.@X;^nT^N$<%!et=d)G:Q"U3gAj^3S4CpA5K+ps7>>UB*"De=tOQLn9j>?/>X;[#M+HQ?lYPZ4]tma.fB7-tg:8pqk"X[Z.pOmu4OTBA<W/?k7V[%IB1Hj_)b5$AXOCVCLPZ7i!e8FDG45LA!=/XbG;Tc'euD$Yos((UGH%R)QQdK@OA9gmte)G2CJ/(gU)_8Q17uV?&6TH"Xrb[.pV;(%J9$UPBVAYU>2Yr]V8,"sS_W7@!]&ei(:F:!!bO/MoBe@%a1DlaL1X4K^^qqlTn'4@,G]hYK_&lQ$-[@^$*@m7"aTHu^NkN'rKsR6%@78\]:[u23MZ4.)@j0@o67<BrO\(![`6ia]Xla@l$b`$^,WFCQE^,Nd`0"7JoS14m,IW1=U[(Y=KIg=5VuR[-'JL1_GZ1N85Jrck%Boh-rUUMIm%P#o`$@ID$]7>DX'sY0JcO,TiTnj4Ic*D#SA"U],+iZ.]_V.j4o99]IVK<pc1EdacOCq(c<O3nJ0LiLU+XlM!?@mkG%"fl*_FF[i#BV5f5Cl!g>`hLh[CM*CIR_G%(UA^"a*kjCJFb:sC9c_D<YSRN@g"eCoR"r(2734-6[`X05>6qDYMpZ9m3mL=1@/)\m%h@I,EOP93`F/9jj@IK#?IIP5fjNCcU,A*J<gTsZm%S[tKnTPLsMK8p2$PC8hL<9=^,8_e%[TAHjZ49dH$3(YM3'""Y3O-r73R^ck%I1b)5#%HV4oKcIXNQP>@%MepH+t!^uA*.F&k%J`;K0WSG<+7ABOgMOA!e(/9Kk,&LLn,PId/]jmFLdp;J-2K?#__gM+7*X&3'j)^%>_I$k0g?W`6F=U3ORoH"qI@b@C-6a/)k*YL!jT\DmIYsUnNcL_U*Wo:riRV<3b#e7CaiJeqfeIdOY+<p+F19`7BA7FBJ`A\]Fcp3%n_J;-!kGfS0kF(m7)I"mVc?<s=J&,A!?s]a$lm582M;h&of3FJ7W`&`k&=2m'cZU)!<H'4(&PaL239Ip*%`D60K,qt))\b]_&XS;%Q^qBEEO:MP;1dhP^^]2l"RsoT#5->47:*7aObaB5o]Eju?GACW1kD:;R#2-IEP@DfRn/)@Fa+1b,O.S'U!-!eqBc:(`.iC*]e0_I%5a1rXY[ZsjUT#)MOF*pNPCk.YLeDft.[Dsnl%nWA6s<^?YD6+!,-qisHPLV'<@6W(;^EC'h>tg$Wmi$#H=,;P0pQMHT\"N$_J5Cs%3pF5IDl[Rh4+q)IXt`C.6#sd0)%`%lk#Vj+]RM<CVFM3"8O?Aocdje8h6P"$.jl>!A`FKA&47Kg9dU'P+LR`lHcIbCNkE9B5%/55%/N/N*i(PJg*a]N&$6NXdm?Mj,F;9Da:6qT"rh7jr7KWo5P1`=c32CUI/BN^&R-]-fQ3*$[ds)i?cn)1np1uNHI4/4dkKqFI=q6U%%E\7'%a)'>pe+FbmDnj-0i].E/BF94,_R#me0kpW?YqP"+rJ<i7*DcbpN%'KH'XqPo,66:tFl7mJM83o85q01D2U$X[P;21PL/I*G%M;;&Q@-SF4Y9k$^lj4OG/c".3cU!'\:o6mM"1aPlj9j$HJ*ddtMZC;.>bgEM>)d=J!](R6[R(UPb4/3IJ$&&"?9`ep#J6SYU:[8L%@+UjI_SEg882gAm=n-n0(5=5u&f,_co@L^Hg<<nt$DlJg#3WYo>7AN>fOr,637%j7<)>#jarpDND&P-8:V4nePE#&Iq?[ek!eU"A%9oi$8:uPCIPPK&g_STklS(6RR-fq9e[XpftDC`r-.<PSibnJPa4ug,P3mo1P+cqUn_4YNcYamS3O0ZLBlfX$1-JP7#k%%hcEEO5M%%15WF-F^Npb0c3n`Y&,D?eQC&pPpsFm8I+>qFVdf%nPR>^P`,8qad'-ZEI<%,.'/"?.VXnk>MV3@ObuX*^kY;4#Edt)9/8QWUttV%H,=A-0u<U,"MQtRp$R_`pBTJRA)r>l&n@(LYMG"e.>b^/FqI6m<.U;qgO8[$$rhb79Y>;W8uh_$[Q;(4p4QT#6<81o)?O\?qDILf%@RUHEJLJ7[?Vq@9`I%n\mdHOC.Mf-Ug`e&YBHm.kHH`UhU'^-SAl&cJ2U)`*:UAU<pO(B_dCi4d.%[HHNI,,j]R^LsOk+(H9m5iZ%l*eBjlf?Ws8m;aCR`IC+_a%3XoQGR['fX2lcU9sGKjN#)ZfgpShoFmlh'dMhH"rN6BNE;W6HEgRBkB"cTm?:`ZD_u8It*:NP_n#K%"SJB$",e*b0+hp$ngp`>^dVl*s!jh7i.WM_$G42X=E.2MX!C@D@N@r%BQ4_TRP^EMjbG:d]cVc/g0]`2Mccu)B$A^&J]RJDb2'2/%Km]!Y;Nbh'3]s5i)uoe%aHA)(<3,$Gct@lR3"O<aPo5@7,2u&Rb,i+lUp;=*jVO[e/KHm9!@,e@!6Qd2G+O*`+.TnS>@=ot^%_Y/%C-Z_EW1'N=fmK"DP(bfX8.t^S2!Xq%0?qmYMsEo69Xfe28cV5l*Zu0^5^56@&==(f=G'?\E8]gdKj^Vh$70`"7iDc_E1&'q>*5(E%$aYFG#"\9's2hnKI:'M/kA&B=$E%NE[s^]HWjmK^b<rS*!i<S]L#MBD+m>HRF]PP\-&^?DOE,Z-om<lt5"ln(>19e'[</?kQ]ZA4%/7FXG'W6?/b2HWq7=]-@!;a\lg_&8a+3e7lfXa@(UDH"2YsO=XT+S+RpC8Ho+ET9tTLE%X/INaE*+ndF$YuU0!dN,3pkT77l>A+P%5ZYZ(4398S=Ri>bcS(EaJETX^A9bMn`)Qkl8W]H4(3/mCp;*HEE2(7`E+l^!UtMWQKLe#),JV@diB'Ks3]J^[Kmtn>"!8+6b17@%%NgS@DGfOHhYkdX8^<pDEF"G%Pp!Lek0]mcCl0QM6:DhbY.)dB"LH(Cm+\QCj0IZXrOR\0Tn2U[ka%!XXV,O?FTj'cq3hOKig9Kpn%Aa%KtWF)F"!W`0jW3F`@5k+[/0_W"r[7V4UKM2r%1]r=@EI$[_(?QoW(&SR%4MUW'Iq%B[brL3h_R&.7V7pn)%kaY9>X8/&Q/%(R%]d%-%dQ9YiK["001G/U5Zr1Gj-T-B"@(.Umkjg1AP7b?l449nY[I&3"=3;7^SYkU,.L5,'KiDc-HHrah2#p%_T?*ulP((`O_eG9+%k(-B<:W-m'>K;P)c]TaAJ>'MX2@.ifIe=^Ac12gY6pj)Z^)UbsZPYI`+"]5%4i>@1S9E;42k=r+SZ[.8'oZ7AnYq.0nK%N)-!-@g%4t-s>'M7<tC3Kp&@5/-BqU"]^[oUDm>#R<\P*%ar7:K]eO8:l4N@)pFr@d_eOcTrX7F'V9a[s;pe-_7l)cJI=K]\93gmH4S/i0Y^%)a`SJ/J_c&=%&VrWZr8%X31g<6q7H?V6U`]J7mGd[B]p50%VVCa0LZ3VI'l"4PZFaJl:Q-#`.f2c#I2cA<4WnQ7'nJI6YA?Y/,s`%Gkm4m09NTF,rX>\:Y:&<SO+RMQ8[L@%4PX_I)j/jUia^(5I"r@Gf,@RVPXGW3cDo%+.@Y`f]lEc1<NGE]Ha5VP"jf;cnG-34^qDT%qp-9mZl'i3SoSJ7!&NQBSq:`;f@U?P#.Cg?:NAgCP"**gcn!%7*p7Gq)s(_NRRl._QknZ?'(-U_qfAGlO>Ua@VmV*ecX)9o,66:G%Rp/IFOf=hl7H]aOd;!%4(KK:Z[\#nqin.EXF3.rWX,_7P0_1k!Q+Z(kr7fC4*hg-OI8rHrF8Ebf*+hd#qf6.S%sghG7kF#Mn*e`>%S7pQAoBFWNM1mTGT7+S*mRpZIRAC\+6^ZZ4Hu).WfR.[`p'D,\+YD-eBY[PI&G=Y81"$aocC->6F2/qc,PBa<6=b>c-.gcVeK.F^%cb41G!XBN./*"T-MierK:-OBYGtm@7Aot_4ed\GK0%9/@.fbAd_B=don+ABeAc46][#(?@CH'/Db0OP#f.M,`[q1unOnkJeA2n$]%43t$/o5hQbW#O)kooM%U@]<<9W7-Am3B$LE/il;s>a7Iec'op\^aH%ekS@q2lZ>[f5&aWg,1(YD%q-#ajIBu7)2@*B"+O%EU/SJX%g0d%fC3B9`R'M8S/XjF[CLJr%%9PJ1d3tL]_A/Jb<$C70FQA'Tg`u^H8$,P</.ejY:*QbFl0JBBCI)RQq';3-A9qFW\+EXN=fQ36%Ei3Bo-_c(I;XKFF]]M@`?HWi>Ht6H-L/n#qL\Wk;]Dnei_3ndWpCs\#32i.]'Y\!ec;n*%$5Mc640Mtf96!D8IP120SccSo("H[e%MO:ME=n:CO"%k3hh2Y22p_dUGgW;hL]jiV7n4AQT$tAd8%Jb:d^ef"Eg.1%c&@")RRU(j`!@-cZSTM6GaE)<G!=30'*A\99m-+*[%$M&:6bnF\f\CoXJj/cR"<5=)N+5e0@^VT&Xo^dM%;G;2(;;panU5?#?Y@jK3LGK:76U.Hm[]j3>A'.O0^VNZ:3FJLj*of1]GW$H2%qJS(")fO(%`9dKq)6oup1dJ3]U6#PiMp,U@+Wh\VkeLZ.lh&XCKUQ=5Q7Q4,jFsHufo?9YOe`Zo'.Re;*e6S(ju1\0`8A=m(.o7"%PtYl^B#35K:#o#U"]N7t4Psf0Fd3uJb$*d*E3YkF]K$a!c`1,5l=js.AMbS)rM;1.KCA7YehpYHhkLDo!<AXf13i-<Mp3XnQ5%K1%55GMK.KQ/_EWTnONOfljkcpS4HY:XVW#A;I?B*k_9[fDaNk9YW<HHHQ_Ja`(&-a-'_grX7\><<:@a<beccn4.F#Ld])->>Ge%%#*%h%d>R8PqiST.7@]$ARK'ZWruoL=e8H%%=:.ea$D->!u%a>EJ/cE9XiP"^MRWF2q.QY/V`NUBFk^@5U1rCMP%c=o0r3WN7h!Z>I`f%2EL*%XC6q@.Zm:3K7e-Qh8#74FR?/,=i7GK8:i@-&TD;5@T(boGM&XqL0(:].r1NT>'FO0H2767XJ+^pBoX>dCCr73D*b>+A`J,E%C)DE%7s"D0HSF5g@'-`O#c=nn]k2UfepoKMhj$(M,KWdlo,,cOX>.YrIVZp\g81mu6bg`58!^0@Sa:^'C7,2W.;3.32n*'obDbof%egcm^fVN6a>ZY.^da],q\f)d/=q/%L-<I!J6!IJ"F1++\[W(MHW:G51TU<EAY46c+k0(GR('OOM1&+ZY:Q\Lb,=PlnUDiAU>r"@R%5gEDdS@.@V]Z:109mL(+M5b[Y]ZG)ZM_hlDH`OotQDVL2KiWYT9rh4.bj#>Lbai@B_)MgTa-J:^ZS?+K>$\;S<Wq+J*T>:hr<cZj%f:;.SbeD2`gVZ?hBqlaG=;(eIc[dMdE(:.3;^mLlpkD)!A<`mj<H=):\f?g+r)l0q(d_D$[CWbbh^r+uGF4jk<bq>a.q5qih8YS-%qTD)-kF$V:#-)XV7frt-d5N:<^m`>0$u:,?X\V:.Whf1'"<_=+\SfTanhf+d*Ytrd<d/c(<@%qR;S;p)^lV=9h**C-D@4[0(p.ij%YF*lc?A2#ZH6\q$*8E74H7GYi,d5g5fK3PXNNG3h_P1JZI>jaA_g7Q6]RLSNHA1HH5XZNVfCW-(+Ig)c>o\2]lpQ-+ic]e)J6@'g%5-1-`"$Hqr4XIK"1F:$Qg%e&@)-b3bK3L;jb0b>9Yb;T0b=C!F1Zm%G6B$ac%:d5JB.U*Bg,i'T'5!Hl5m#m<`:4AYnGFlURV,p"%-3=//3i@aa??eu)_]pAefa9`%B*kaZ7a:86om6E3Q)&sjMF/h?9S\];6&$SJOgu=jHmgEKK2ip@oSqZ\_#,TnMf%U[(6QjXaM:7&%7AiL]2Rd1g&];G/.9#K2<XQi13oj]&=%<37l+9t8'S``YXm,@2V!8k3kuts0C0'ppU]El^01q2P?cccjNp'[e/=GIVR':[IRaR<M%_5d!7TG3dh$Cpqga>/kYaWtY54DI$50VZ]SbNn+cD;L\-;:AtVM]07Z8j/nYP:M*L?2l<cQo*IT7u?j65m)E`--l1&me/Z%$X*)2%0V:jI8tBsVMF:X<7?hQN,rTM\6K`]_k-mf]'YYe>O*K\)q]p>*9ja(6dX^CUii5Cu<'%p#eqb'f[TXh(P09mSXXPAmPmR-=`5q3J%A4S])rE5)%-LTln\r<<tip&2AE(,bN0L#B.YD9;Dh$q^`>nVPhBF-CQ)p6i_KAhR.)%9'8SGR1BopQiPbd`SK$sltcHF5dG,Y-eX%,6a`r*`2YoJjPf!X/u5T=d\kp`2q$$?Ub*n[?+2u#`!5$DMU:/QWs3FQrW[KPJE,;"F@u\p!UdWUfCGin+Vk<)=[T7d"[/#pT2oS%:=k$Ll,pX?HBeBdA=tsS:"Ji,;u>7cOo(0k4C4@GhN(_\n7L!`c.D]qa\ZBp1IJ3RR7Me<dR>utYfNsKW/%^%!qRqZ!Mr2D7r1q%%R$]6PS?+EU94ahj,g1o[YRDG?_E"la))`[.et2cKX)^m$X5YubRWpnQKM8f9aV%Vh36JT4RWr(6cn`r6!<,O'2?smfGnj?pB:T"P%-0@sM.NjU_J<2j.gC[IqPG>suXAZ_s8?FVU,Fr-t]rb"%D],UOY?"*&FZctAARMHmb$d^mbWEU>$HG>a[;deG.jrs]N_K.4BD1,A%loPNA="?[\C@dR*@fZid0b;ccQuL?3S5*cX.TesdiNs-EZFkK`0kJ-qPQLe/-:2IYj">bqdA4aD#\a<_UU7!VL_\t6O6Jdm)NQlW%(?8!rYWRqCHYCkr15BAI1/Z0b3daB2*`dQ.(*FX8$gkbop9d3"NFDg@g8t;1'?3Q"5Mr>Dk+HSGYP;qdaqG0;efT<jk*(p@*:="]%"_4%bCWBPS$-4MP9K&%X['Jh)j!oA0q.C1lG*frj,'Kae$q^4J@'(5VC>.Xe"FU+S*O7T(ci0@T,F]KWGcplkqj8`h2r[XTW&>!2%#Y3ZFe'jDdJ7^=ua-sl7(:"D(YbpD@iCtp9fC&mJ3I<X&k3TXnl,WR*d5?TH@58RtG_1c<?m)^B$bHqn^,.(>%t28Wh9(RW,ERX+%PMiDicU)=PfSWru().9PkCh\(>0C-h[BACpCOP4Z(d@JG_;`?_:;E=@Hni6cN_`^`J[F]?7]I]1,3pF0>Fe7J9a2B3%1B/\2A37@%Y;t!+R(gUb.^a:<VY$sY1/&qZOjWLd(Q(J"7N":Bs2g4Dn2`*$R71[&[Yi31bR2,/\'Nb^ZO`b0bj9,D.T9N;H#JtCBt,4L=L)N^%Z`_Nh<ahDHH'oY%q^SH6A%qqr`I%T4UAsm"rGSTec`MaBV,\hnNDcm/rV*TYn[*NC.61;+(%e?c"l(<[3`VCl1hp&-`@9==1+C`T%As@%Tdnh'.'b'9/R1WCU`I[6ZcR*-6S2$N66VGO9[i;(\=t-js0rb716``#BiT2XqZ$YV2!28Lb+r]q:V6r@L!U+66$^cT^$SjoR%Ea@h82Q!iA[>Re>*E$"]CkTh2SJk#<UOLUirVX0)S9hG^c:+WH0V_PKEZC3:XWUF![%B0qK$od0I'qTV+cp".+IsF4>HJKHHtpUJ%cDS+T`LV_qFC08WYV`<b_Y]q/aeuTG0)="I.%S0[69*2!Vc*\0$#6eHESm#NW<HfFWWaqqCJOO9[POou7+KJ+1E"_$%,P#Qe6gL^%!NrfXgE/Sied0e+V/BTpCK0DPS:kVr@YAJ87RAuF8LLq[WWBZQ;"'B?%@sf+59j,0Ef/;i(tHJg-DT;@!Df=Jk`q]q`#.#a.VAc-%UDa\is!LkdO<O%taf*59SZrWeHL*'jDF9@Y/R[X<_r'j?Htn%I1<)3'E%kY,(e[>01cK$ST#S-.4uFIW,r@Zj#cOEa6B"SI5VGTi%8%Tdklad/8ML$ira(faceKPm')FnDhBZ?r>kT&/%>9i010s\1701JK+!089jc+I5dO`L,Y0rb8ZKY5DkZsgtQ7][H))_Fm6QNp*E%.o!df1TI]ah9qU$X)^Tt[=Cq?[=Ct@[=B-i)Q#fsPEs9OiTK+[i`qkW;+4LDr.dkB7\oI*C-NO1\q_&G.8GeM1d\UeXI.QSp5[cN%<$UO>SOTPY=PbYAWYHjFQ+0ZY1\J!A:1$b8',]V^)SmlNP%Kl4<'Ve$>/3P(<`h.0d])cgHL:SlIOE&_h2Rn!VoGtVj6.)E)PLsu%MT2M/YfUu#VXt2l`hoUlltgDU`gf280]s%oMBOmGGbVtm2Os&eXl)fl.7uM+%2#(5JAe;h5j"kQ/5lDRZ2W<"emrKretr\;$e:r"%Nm15j+A\`#Lc$fmJ?<N)ftu:2YXP'_Qj-uQkC-h/g%7d\Q(FX?(D`Ti_BtaU^asdJaQ04_^;tDhSPBW]90BU2`ZUk39J+K-&nV_3%1,V6uC;<#i*Qe#A`6t*nT?&9V$Wn8=p[@/m"RERg3f-;&(*Fhf.kGR^D9K201fRSaVeN$7dHMfYo0oPlOIU-%5<:JoF?XPSS?]%.%<a7^$6EAiYnq+s(5$'BWELohcCE/A74Q8P,5AP(M>=XWHXjGT3T[*TURi29.^*SEYJSL]S/uaSlKO:ingo$:6"_<dq"jG';fZdl^%IjSWo681>Y9L4-I<qctahM.pR-aR$"!$bDEAkJ#eW<!S7M6j1$#"7`5g!kJ"X;K8@CoRQ+>/3ga.P+j@g!gA-\r/4PZ)Ia[h9<CY%-K7^6"J#(Q+fU0+dXD!^2fc9@s$esOe+Sd2=gVt3(<^SC,CrcR5=3C[V&#^HSh=XtIDV;U^F&(L$WLlJ54F`u<*!AEEjt$\`'0#4%"do%#`mW5GBhCu\bhm]m_G(q0(2*u@Q#D0<?.l0]IU]Y(X)Ce$pJ%Em<,c^o74;"h7tH*"O5cHaAKM)7\(A)d9J#i2oXN!j/G.Tl%p4UC^\7=P%YFcDQh,eA5LD+/,,T%(f6sh6u^-]h`3H8-1!cfs7'3=!g@OkL<bjeDfq![1PM07SLo1a<li@['=cOi;&]iqQ#B]beu%O)NSj\t<#SjuDpgFTj>QS'`kOUg&S)DY:pZoV@mU]iqs%]\YK-0_21u-WSGrDdm!$gr&/G'>\bHX4>@>^>AL1I'*LDZ4C4P&6?0!%/V%O;!3/546/@WCAP/s/_!m$HC?A,,p5W6QNL<RNQFF]O5l`n\lR*g`hc[Z8*LPg)egbt@(ke#q+h$&7d#1^tEV?TP.LH*P&Q"_8%$QVH?X0hkpNsCJ^(,sT_)U3lKoSXL#M[TXVLB;)3)8t`L=G-ppN-<qm%tLVVfpW>&lQ0o8ZJsY^@:I4*j,=3N=c<Rd1WBO0.CkA.%p"Ah]D53M]Q.+M:ZW33[(<FRQZs]^K3aNE)4/b;Z=N`l;Bp*uEJ63BH1Ld;)Jd]Pf5K6(;dTSeS`t7n8ej!p;YuSWrVX;J'EQf//%YngD!qg`0[cGQ3k$#H#SdZRXmShTeV+s7h=9g(?'2+*8-.n/NNdR-CFO-MRUDCD)&+7LNl$(-j5E(m>om^s_,)In@$\Hor?EK2QW%C4?rFQB@(V^pulL@alS%%VN842\KJ,(hne'MkER'obq&"jW.Dd^lPb6QGiiYr,/l>7Yhd5,K-<r^ICO@R%%*YGnFN5!a_F88?FKp%hs65')e+b.!Ad1r]W%Kb&IV-2P_:i%Ti3Ld58g_>i4mcr[7%IN)'d_Y&^SW)$WQA3)^CXWm6dM/N*&>=[T\2,?>0!R-6j<'eg!XO%q[j^N(:"d^2N.s8*7L$dm@[i.hd%36,F0\##^;4>MdD$R>Zt[V!cm2Q26G59!\bLs2@POH!2t2HZ.'T#U!'TI#o0Mg0MTk1YrK1.%bK:[,Lc&C=bX/1"VY7fJ"iR_%-6j9[$TOWX4RL3-Z%.)3L(RlHaSE(8=H@i3I.`:h=%(3VLW*$]n#akIq62cqpojfXq61X#N":i<%R`f_&mGu)@B'7&=MfZ><gim1S=?oi[IIUbE=Qf4Cesg5P/j?@j)'9X=P+FG3+7<N6[2L@J4a8m-)$b^J<]0AT!O*QMabN=O1A3:a%eKa4SInsshJ&$Z-d66%G&Y"/M$ZeK_%%q-0dNljp_C"!I8UD<>F6(4?@Rb(l_ck.@_[9N0f:;deD!/^!a+L6K/KGU9s,,I)0r!:Y%pap+(^)u2ZGMklU6FNHqe*gE*^-DLJ`FF-2$B4rde!Xl7%ESIDl"kdfN*;CQ:Bpe$N2<:=fVfatH9&d$Y`hcclr#gR)q.I7Y]#/M%T57W,BDc9J>G#P=j2?5]egL@b5(9ekY"uKt?B[:P3(SPm$%)S\Qa&p_TeS8<)WP'?kRn+SgKcCe&_X7+h&9:_?'cEWO[O%Fa:)J4%Y1G9^+uVqqh4"1j`R2P%=O,f394gk6ap_k^e0#oJKq"T^-8SKRW8nq&iRBVN11MLoAh5M*CJOjBp/>SMUa*AI>T/F/ZNSrA0cO_g%8h<Kkr(1];'CpI'+;sbbfN/3m\<QAZGN6,;h\m;X4(r`LRRjqp/^1D"THIWm`%6Cd+RQ(F.LJOer1dFG>cMSL?3*nApUX\u)"1@U%BS(\fm!9C#]3_W8o4ntO7S<Wj?@hbn7uUKqF1Y`ffI)aYH?IPdQr_)s$Kb"7<r@8d5M9dW[jcJD![$d>rlLZ)Rdo]D5j%b)kK97F%X8=h-I:lih(?X4!+<qLqniL`*Np<)[S^1>.OW&;A"N2rq!O<X[?;</F?_-t-IL5TR(6$1@B_;balF1-)IZ//MYS:]o0/lBBYi5CE%/J(<c9W,K`_oOJi]$FF5*40MB'3QQPclDk0;Is4`)S-aX>skN,Q(MQoRN8l2ru@WN#4kkrF&4m2e<?'(1G*!u[ZXamk:U@!$h.M4%k(5n-758kp7;.Pr#03_Nk%o`?D+'elD*O./AccRRL'^VS7JUq\c>&OuQ^+:IXY*%;3,KsKfU<SInQ$9tL:_[\"#_J&RaieP)fMQA%VQ5Su[VMN'p]7]_^1m[U[K>_V,\pT)4ZjK*8Rl\(alME)r!fnmI_b<10<8THM4/X9INVp4rJn'j`(=7t*FCZqIDJo6*]&RaQi*IC%p.IT/X,K&E[sY<`<n8jpfCiaFYtBX:[PO-$eh*LSj5Wh<<Apuk^Z@+Zh=<MKauj7eP3nR]G=r73[sUs(AUV$l55r##]AQEKCupK-%/O'7,QG6k-l8,_Fr`lnYgQK/RCiNsEpn;3"&:\Qj-^EE3DAo%SHt'!*/ZUaph4eQVGLgHZ3B1sQWb'r![1X^Shsscc-!pCR^B3Ql%HpWTU.RI?uJ'W'&r4.dn>@#UP,.97TdB4!!@e]eNc$TH,r16]L?"2]&'=-J#Rs,1IQKOK?+L>g*h=HIC-!]_B%nf(Lm#9UYS_=r_%T<B8V/J+2cH69o<OE*[>*L;@$D9a@ASh4?5\UKIi/T#k.#6pkj5OSe&/`^[-Ig:mL.k3fhjGnV,#j$$kOLJt[,n"$R5![@^>Zh`0%G=Oia,5/"fduh-UM9jj"Eh4O[g1G\lqYQU7AY)Y-EO#h[4r-r+an>'N+]DiWlP,t3*ANpoM6.?6Bp.?6H9e?4T@fCoBPmn*jSEH<%ItCr"3lOapGLq,<>S"`AErGlsQX%#`N(pH^k&smJrUQ?>.Bsa(hfcQe]l_b?27s.CPj=>t\K3Ggl`^ho1Wjj=AWF9*^D+a#jZ4'1%K(2m88p5eYGb")eFg2uBm=s)NN%)"bMe@id]dl]r27i\PlG6osp#C(jXc)j\U!$*1U]5f1)A]9LX'cY-_e:$%.g11o7I5%q_!IXA%hg>g$@\%U?VFjF]j&L5.c%`e`k%Wa_*G&Tl[rU$V[c[^h:`n/G1M+-`9;HcmS=LiE'G5%8F+ff=>FjpIQm/)0]iWrWqY+"h)iF3>%i.'>.Jit-BT3oA$Qi8^lWGc7<2ho8ZdMJ58anf3uqa3SP5ZM"]ldpenP7.1B5ZrE]H?07Fj8"K'o*2io0+IcjTbCLkoiQf)0\ne1%HuhR>kOBn>]U,6&Z_=Ieqe1K)e%[TWl/*l`YFja&41S&lI%QKB#[3mppl!dUHQE87+<(qc7'KGHL"MJk4=(-Y2>Z>Bq7*%aEc+$M%.q:DJX977($TWuI.!TW=QdY?mVLc=e#ZM\NT$6(R&Ag+549t[YcIhEfAC:9KFL?+9SSuA2FDsq_)utAQ@@tL+40jHZkj64A=\0/q%6d9\4R1t+1B[#&Vfa=.J6Z6V"`.6WQ`o4&_KRr=n-(kkY\&86#8/ZZQ_]0Vi1#GVHa&\N]6f&*nJfGjL_<3b*4a^n.+$k;\g6Bo,%iVO?D-`$l2HS5r-i7seq.cs.GZ[r%HJ,s)s%0L&Nn-Xi:,<(]TIfVsf+q8ig.&l@`S)'\Ekm)C#_(e.NLinhoIR\-%p5Rnsf):8j%+rDSRO;%HJjNu6g=s[Mi_[(<.;H-_56*jd(m[l31*aXPXQ-cR@Z81ku!P/uPT385Se68q]@*6Pua(CqLL4DAIhM)aT\bcSej;.mp%bF.asM;?@QYna&"Dr=#Q+oncV,0$F1dL+QBW\jd@!WWA#iGE6Rc$TC/m]:\f-qiV0E@YV?8TI(O@Ajs'STtnkM4k9E20-^E&F3N.%Q"R3qp>OG@aPU)"B\hUHe70/%SL4mR1hK.KHNKV9MqhaE?^`T:eX;Ek51*2H!*nkqRA^Q$KMg2<37#Tu>Y<!8ppFN]D$>T'3>@2$%[)Fdp*)YTr\j*Pgl&2]uRJh2g\W-`n<Za+\3,Ab('Z`i=gi7j1m'%2,M;UD4Sb9A!\h?=WB.JJX/pD@U]RF^"1JYa'@_B3iZ&=HL%HWS1'9YZq:6IZ6OX2S-6<CkGm1F"*&^/c<a)e.:n$lDB;.f/k=<4G>+[@6>Q1p.S)>%Pm)L1i^:4.e3Wc'A6R=RC[4r6Y*B_4A56%I1bHJEanKn+i0@RVhdVm9ajCA?C`rrdaCr+j@J$g\l9An>>c]9bA&mc>n>?cL:Ia2.Mj)/+\pOGCG-kp_^&M[F5*Q)_6C?7Xm!FV%51U?14TQD/.acMY;E^&IYkO/4Y3`j!o`87&C@(#:$7Jg/STJ[!BW0D_q_D'0#DSZ:[pu7mM^c$MrNe$P32>>X5e>j^2iO@0#WVt]%D*+]:<Au6IRRLe[Y?'NM9=^<P#3RP4Yg4InNEn]Sn07#$#4$!:no(aSDcEUE!$cj`1D[\+'#`)QA*hCJB7F;+?"^:e%:eZ2OOA2W%as3!f\i'TMK4@&bhc_=+*$g+lEm7+9Bb@,iGnVE`fu-)Irgom,R^;^DoYbbVgO.=eJ,`QP:;H]7jUnOD6'-N^fEp.aOP]"ibqL?.%\5"b%e[<o[$7<kLig[_);U4r^YD5<c6U!408Z+ctn\0[IVhWF-*_PB,4!V+cdCH;rlPrIu_`j_NR_O0J3-RW\[a:))@>2pB/F50%%:`3,6&Veka"]:=50K_6c/G]IO.+cO*^kF[G-SQYs]Ucd`%(kTUB2?q:-#6Z^Q]c_fA6-A#%XF5B-11DJE2eakS`b9]=t$O(481Ia%baLXbFb4Qu^+tho&:U"u_oIY2/RcIU>-Vus@`jL(W<.,9Q=^&77T(drdhBP.iI]VW_VRAo!o0Ed/EZ`IqPC[Og2m/n(Xp=3cZH1U%AnZjBSO8r5ln<kjO0nPsM^;15'5#OD]m":M^.+RQ-Re3YCMo`J&I9OGC%&Mp\dlH1h3)S*m#tO4))RiDA^8uGOhfh3HFpBtZDKI/%6_oAIA#Z64hUG&B`^5/fc^liZRDsb/geJMY/=K;7S_8JRIPm7-lHmVN>m\Hp<($*"QZ5":1UckmpA7QpCtXomCs<.RmJs-Km$6,+%4Ae*UaO.SP=#"D>IW!ta7Ur-]%$(5&bR0S\-qqt`44leh2C.:/g(/pc,#'3Io+`tUmb`Ejh8-h0:X'ZtiQm,Va:7@g<^#.UTd?2a%Wk;["AgSt*'$*fGjA-hmnA$g>[TT.d]F<GX-N^Cb;YVJY2,:gP,6"i-K9t]O&G]_c)3tq>(#0q=85@[>%#?Ksf>F?AYsC]>gd`9]%*E/dP$XOWC[UX6DCIhi_hXa,Q!pG)AIY:mk5u?4IMX!!@(.h&*SC.kYN+aJ#$Z8i^$VsmgM@]%S>2q@__'-6+PZ)%Vf<:!]^4pql%p-5q@e#[Yq3o&1i(SWE,fu6:YCq2q!9icmgrnct7&*rMP7C.M^oCID;_pW?gWL[2"Q8pD<l<rMp!.=8`<0:ZJnfPhti,%)XOdTL@%<Ub#QT)hOCH0-\>EsJI:/<6SPM/mb`qYbfkJC1H@d5[:WHkDH-JOVDV$#AZ]igZm]2WRgo=d'[<0G/^?eXfpG14s>PF:_KGbN#9"%`qgjiFHZZde("/6`MaifE'OU8"NeCLS%KfV;`rFCMl'`I<)u,'kF#Gdji!6mN`\AI5!Q<Ho]e@e$`"bi`ko&)p8QB"ojiF?!Q2".%MQed>DGE!?,b&7r)5=GgZp,.j&h&$7UP;sXr"')d^HNIJX'`V"N7HN:([Z$K@BqL>NdbGQ`ZC3rM+H72L/EI#:,;R\_KJNgYhmTj%YecOI0Y:Cdk]ofZAObI?\mqC"TilGb(>N8=NW]b>/QM[(_lmlYmWHG*&O*^?_InU-]mO#n/;2LHB.r)d2sb'9eFk:WqF:>\\runR%1kqror#OOi03kEd9,fs@!g]W!68:]>dEG-%+H=_[O:PVQA2B^WRcR2E2bh5>:X9>_K3Wij79DZCls2j=Li*Uce8"(cT.g%)]%=Tn%h-D#MN4*^6K.NnP&\Edp2hP^PlNe*qT<TE1eS3,jlV3DXEDJ,7UjTji9(=me0#_J,<i\6Lq53W@Hc<VAjbNLPUV^*NDH2'L++mW)%'J/$qM7;NJjOf=I(=CD&i7L,#3-\4KBoEWAg*#QmDe!450FZTeE#-C.G,>4o<o>VI:^ZZ7(JL8Y%=>Lph5/K0M7k,Lp,@qhh^%p6%U:e!bkWD)-dB>JQ<+BL\8h3ic.X<%a"nYL29Foca]Oc>_nj*?>C/drI`bg%ZJjTM"PE4?m#m+Nt6*O=U.?;-=I-kAhA%V-LpQ94g%@$XI>o;,&W8$(r9JLl[7BHks5o3&P`O"15`[%UK&-S3E+"X#8Slf2'^N5'u]S5dE"j#)Vq>Gp.\m;e>cB/-4DPE:fb@<MHeff1X%%D+;Q^82W=r`")X6E6C=Z8u;Am^m+"J60+$QQC5.\XGsb9#qf.-H3tsr1\;*C8K/kbdE1&-\cX=VZkda<:fSP!Y-G7l8(?2^W>&)M%N3!B-&5dtL'6YFsZ3d=5[[+22Gs*0>9s/S]]+WMH$*93Alt.Z@ot:!"Z1A#gn?d((D0)[91h\Pc<IpJ%35Y'P<r$]JZ-qtN%kV%f%l_uhb<<>R32I"V5LLpIuA9#<nQ(A@\-=B43Hs-n5\W8,Wb>7J*FRS>Gq?kIQa:'k-fSVHkR"^0o[p-elm(nW:=oFk1-5kAmH>bo.%jVB]6hO=Ns':;WD'3[[K$hA8)q;N8ho4+*cKg@j$5.uI5o`!SOiQ81pGH%G@%Idi*\h=IATJ7"r5lN+k3MHWZb:SjLCG79qO:TcI%2&ZC*.gU[.2mMX]5jBrcNJD4W=^5d,:eTB0>E@b3Omp1!nMfQFDq0ud,.eD#FY[_d<\(*L2,:5TA`U5&:JjY3ga!j1'\K,%WN`3-%.7Tc3`8DCu5(83Wc;mYMk:Bhh>f;.8`hM3t"uXBs@Xp!;Lri;&gLiK#m[%3om#njB.Qn,(<d'G(en]][f>BN_HVg#b'"po(_KQdH%<47nD::.\m*S/naF!i(oXF=DeCim0;UR>0k'Nqj-]D!Kn-`_@LcoXQ0W<@6!7-i<!nq8=V]C"9!XShV"[/^gFKqBYQ+8_\46jRO3%E/`H-%Z'01^<b<U-7d])Y9D"j7#W'?@%gM?P+OH*(k+Od*iErlL6[-T-nCC:<*Hr8U+R&[C-a&oAEYj<jAX+'MFZ647bD;PDujC$%#!=iL!rH0_gR1RK)F)`6O=je?`X=$!7IX;&7Z-bN8RnU<YC#="1)bp<,Kf?8O;DP8[DML$EP6`+X47RETVr]h>77ut0V4>a=t-k5%=Q_;@"kF$KDF:%WL5??gB(KA3dIni$R3K>%!YkFtb^pHrnIo@`UF(YO1GJNMEaI#>;e1:V_K(70l2s]7L+n3Jhd^+hqB<HhD0cbH%:d=bsr<e>mY,P%@Ct4d?au:?cL>8jc'9e2faOed[]MnsCc9jm@e0E)XeLe(ga9S-E=AE@AFanR]Y$FA3SU@NP+EB0RZHQ9Wr?;P*%CNCf,N0./*Mn(&fLHekg6I^^*UR@,0]9aR+VYgX_U$/&$_:5CHSV?%_<dj_\g*o\[@4C:\#=%5EChnrkR?OrH11iQO>PYRR4Y67;%]JEAnVNg15q'*i5lGVNk"1=JiG=^]DqnbORWM$/E8!5B^7:=\=kmEg8f$f_k@:EX;b%K.Kl?'ipUj-!K^oD;@GSBO'@?S4WDVJ-6%E!L:pI`\#'WK]NUbe+H@I40CH=KuU>`82(n-<"p.k4K%Mo4meWHin#eW&!MeNX_*U?@V<jl<P;Eh9,7uYq+UE_l<eOBsoN>JuW4!%JLq:nqTs;r#4^GGou&C&7mJnh>ecu_luc>ChTrHPV*9-+ROq14^g@\Cdg"O7ZhO/4%'nkdL7*D^#n,''A?K:S_5o<EZVT4:]HLI@%Lllru863hSdi<q#U2D.sI'-hsf#hi#5`iMrk$s:UJ4]+?$!H>W+SA@cFp<XLHN4m:reg:c`r,csH*-'@h$SHeE@rmQa8-A9fp0H)%-'@#k.7E6=)lE#$%88]0a4E//VQq:j4`k)_%m/#-"5/6%^+VcQmZEdnakp_YK5QhXThM6"'i#ga@eBr-ebi:S\nm&+)l4G0>-eRD%NdXBuRcT]+W$<lC<"=hA=e^eLG^[Lg0Y(4_3YB=QOJ88qO'_q2Ftc#JAWX/V&:0D#R.J0VmqUB@3(O97h%SkRWtlPE7?taNrb`O@%S?Kn!2leWQ#3aY1n+->NWF@_(AjBZ@(\tGQ,%c]H&3<+UCgGE4^^jKuO,(f7A8"n5,PI.";aAU*YZsk4M"7k#*4P(F/,=&Z8=0;I%C3:sgT@Y0p@bGf<NhoW%i\2-,a^\cJL]meol;7JuVX>O<k6\ItA6C+<Wr$qB,o&X:fkY:?p.:3#oi)\=HP3=@_tnC7Vd$mbjA\t3%L9[!*>Ha44re.B`YHC#sehmoR=XmOPZEe'dP(9\",pC^L?'d"jZsb_N\"*m=-^lN2Y?!'i0l5^:'5\rX:m&JGJcF0/e7pd"6>9%)%O:`1#-^sA+;,n+Q]Ijfd)^d:3@[]+/dBHDTc1K9pL%@_sB*UJ5e*uO@[D8\=e=@_?CW5GMP1m(\+$ZkMS>tNl_MAP]qKS5:>@!Oi%@s>Zk'ZK(r.>JV(K$;E]FK&6\P%]4ue5X'$LGiu4E1?JXO9(\S<?t\H8\Kg7GFNLfdpDij(45dU`D<>aNeZar=fTqeAO^P)!5?O*%.deI.WSs-]@ert0GXnr^Au'_EJO9FO#qhOL!3IuqgP/2\*u3OK-D(S)@\:c9C*ER#-.'#]*3)\a"\5pLaFCn2dWn9WCJ3?p1W%kt%_d7Gk"0-C90EpIe8\"@\N27O4rHb_hHq"933S68a]??gp5J1o@l9"<=.7T.VR:!nNLk@C[6It&<@Ya1eG,S:B6dZ`'KHFs(PRY4j%@Mk\)*E%R0I`!"!4+$OIkhTPbL/tpf.bX'NH"KC/0*>FNj^f0;lkC@(`BE19N1f<1S?7[r&=pf<>RROB?f8JOi@mc4E<j*/9:K-H%3.LBhGp+9rk+TH)fkQL8&P_-f2dQ1Qc!80QII.ln2rDL;d22LJN(e*('Q2GE3%T$$[Wlc`0Eoi(op-"rWsqHV?X:'*!n([gkJBto%GQf9cLY5HkRVM^q6m"cC#[j"5=L.Efb!-A1DR37jT.^ZJj?O-#7r5=u<;**tn-"HarI'i=.+PQm5PQ](beA7ZA<&q#DWsePfO8C[%37oj0jj<;`<2`^r5TA][ILAN/'Gnt^Eb$eiQ=Z+q[B#,h4bEn%@P1$=J]<,*L&/ea4ulHA^c%eT(*\ps'K34jb58OS\('Cq68hQn%IN!7(?F3mYM_[>oKolJZL\f,Mr@]&H9+BOO)<J8t=`R4-@SoHqX5f8(Aoftn_fIc<aaiZA'b"8CRPu?h`b7Ln0kCsT$hKb'U:1YL%0%Zsc9?fGQJ1)V%lMcfi2;@LHJ&OFA7WLiU\$'GcWE!FakL`At!PCkQ:s&c`[/#'+nhB,l?Pp/UX491/Mua3lG9QoiMu*+Nd,hkf%*lE(L9DC#H<g:JGlF,Jt@U2:ZDcuh6HTbis=Y""TN*0MrB:gk^.%`S%3%7u5gft\pW"29K/Oqua"?A#6X'8%A)77IT'rJmea6V?3%Gp39\/.qd/q\@[p=I?HCK_NSiSD#[`n"32o&Ac[rUa'M.jBm6(<]"AU2jt12C#JH/77;l6RJIqN8'Fl;A@tq-Mb/!fbo-aaiXM(1%V+iSZ3hE(IU]nGX8ln+8B@3gaU_rJ[c$!l*2+6:/$&]"ESjqo5'3g6BccT&%Ao@I%+QY5T*JjC`MGTFdQe"[F%eD3nZ?W@+kX7UJ%`N7*_p/^E5l#\XQH6H;!MBBSkN7$Ce,N^/C9#D*aTP=JR?t=rk2X&]0+X'^DEnsa9#4HA:/21Q^>5\8ZQ_+Ni5^"h9:e.D9;MRFM%rV7E[<Fn]Hr[M$GN]$q()L2p-RpkSA^2E%J!lC3QgT4gXQTH=1k5t`VB4_0rS<cu09/TFW4Aj.@I$f6#E$G-=MOg"I2kga)"e%GY%KGETs!LY*^3cj4$85&F"GajI\X3GV^^0$IP`n#!,EA;1?`D4m`jY9dMj^8?XWhasB*>*>q*65NhjY.u_f2^<taCikY?GAD"TjlM!%Z,4F]?o"r08+SS!1Xj9q!"<)O7+;I=P#%$S%6Mm1dOi6C;[YXKRk;+T6^PH,1qqG<Z,DFJ'&/)`>aMeIC$ml-?hbI+lIFI3IQae&%bm&q9!e-@MeVcSLGFg<$R6j/@*HM-9m#T%?aK1#Jq&R/e<X2MnZmcjk)3?2gO=&P_+qlfjeC2iun8m47ULM/*7Fe$d2Kc1Ojh/TF%Q0MmZ-Hj<F5%OocG/N?[93^]7:&70?@g>KM!mSTS>)eNib,\D+d6^OQeT2BC@#C[95M9Hn8d/a]*(RMZa\lB`[C%K?/J_f-aZ2K\%S?I]D9\\8ERb=>L/SH1^J1U*e$(DhE:#0[<PQDVl7DXuTr!bQFrUB.e2RT7g,AYA/6p=Q,6$Hnd?!7iF518;F&oq_UCGpc$=chl9%H7hITKN,"gYqTZ`LoEcC$Y020Q/"BPX9L90Bhd56hTCBt(2L&i'NZl'>?7gCR^P]]<qqSJ:tc3W19Ci`1ReJQ/h?bQ&GS9^>f*p8%WP;V+Cc+<BF[LTdcg;#BAO8mnFrZpXXiQ$"Ooof$]/qO:RNuK=]<'n8GjuDL2A>@,"X.*;4F_8F*r:*!CN)S-M0`nLBfuaCZnV^-%/.k.Yd`kLB@E+<I:KgLD9r,+Tg[VO*knlfOihL3_cd_2C".%1Y7-qTsVBps7IDUA(UFD+ua(F"adNAX&)C-p&N1kFN;!-pVZph<b%X'EJWFl2MgIf3\iO9(afjG$Na/1a!=m)D]M+'f&=D0KKppg5(lQjP)M<na)OA/NHg+Ff>p\ftS$5>9fg"]D4HUYDOFa\gKlC<@^%%Yh-Fm7I-BqU!%aOf'fS'DMTa'!Gh*D!9p'qYuDisaOdg685<5E9gK+3H?o"(>_0gS(b2t($KQr/!Z<[j+Rpdb3S'@1.l"u/2):t*%>h5ej]3U!KfS1t-;]t=d8Z"%L/J#dH.d9F&@BtbW;1V+af#(B&Ah/R]9a).lh^+%^ea(hA\H7U8S)94(5iV1SDO]^m+Os:f+B]9J%HRkq$c@[8amb;"!e0+p+8gM[]jc%n0q8KP1<dqup3EoM20i'*Y#TZE.M>Xp0UCt[pTl0*LAR]*6UhAQ-8AE!,k((sUr*(^7gD,#-%N3-$#4o9maD'EH=-C>a;K1,t"<W7Kp-;^.1L9Am<QoLBeZ"@JtXbaMKJHsMWI1i<;/M*&FB2=?L'+8$>rpcgiTg6Id2dpDEI6fL6%1KXfZ&&K6q8%O7&Oe.d-a?lr7gaWs$$X"Z:@M7ocR3Q[.oUNmJ*+aH9@<IhXdudF9U.lh[%:tCgmj"DJrVfgIP$8P>O;f;gd;r2'%n0tJ\2BLs+dF#3?+9:f5N@]o-&XV\hF,?Jo+ARcR=4=&c,W]QgN@<119VPQd8eO9/jt32<4X)N+(Zl>n-];k]BoS(]@nCo-PhdeN%9o=W?9nA=uAQr%bd"/`,PX*R6imjp-cIMnC89EpGal!e8=XcCukd`0r+muoF\NIoRh4Bfma1LHJF@j.QE@cBq?M3chdZjU`Qk==`%^9Ap0(Zt9.Bo!05Ss&q>a@@*/q-'2meZg`jP35@Rm!dnMH2`5SD]U-&(W&Bp$SD2.Z!NZ>#hq"(fcRJmOs.[TUU2,Jn1=,>F8dc2%^3k;$-W['oIn$N\A.'Y=VR7.3D$8Z1rPFRCCAQlLXB*?%5X^G/F$>Hd`<<9B%&_dcc\O$=4#%`&YqTrh83=,Fbia)o@=S;V17:)W%HLNU5Q'D\qYr87b1(ZCM_8cl&3mHPG9S<#X-A`s\9RgL\$H=inr0t(roi<T99LQ/1bZ!A%dEr*TUp75jW^k"-kq27fD4$&R@_>JK%9/<SIn%\m7))2+*!tKPa5I:&rUSaK5Hk"AG\cWS-193:KT%7jlBeohF$At0n,/Y`>3=F,FT/!kqH6)8I/FHjkE.p#UR2(b/*D:C-%8bk@2_VPm*9)(:Q3Be+?NA2G)joHNJZTd]hINqb9VkMWQ)5lbBVV!@IKDU,.4S0;#iYXRP(njTCQ8,\F7!$K$H!(#i#L!m0p'&iq%>ko[!"`)KUIHeGU$uIb!)&Zpmmi@n(4X]k.RhP'1g)\#!(C/JeD=8uaVc=)>7!F&Y72fS=l2P]jF-2i^ZWa%\(9;nS&3h,^@_f3V%e`tn`!"BBdO:"eopj9Zg4/-F7l1W%^a6SVFhhN#(M&G2SfJs^#pt?in*b\T]%r>aU?9fir*;L)reuDlgqKc(=TtC,AYFdt6EP?(k%`Ql7K"o@MgDO&]sMH7,S2G7&o!+D1,.R!&7>PYIKpt#Z,05GIp.lM6t4p-Je[HmR*eMJoOW`6gBe/@=oQ8>m65$"r?R"<ul90H@8%Y@1Glo^!djG\_N?dTcjJn%cM!TiKQi#*Ot^,HM8/F:_>;PYj7X^:<ACKpe06Cos^B+@i&&=^U7_n<N"`&B-74':5dIp9eD30M4\Y%K@8o[FG1.A3P<:X]@pMiYR7&N0>3HGADqiN@]Z?Hcs;nCBW;58aT#8)_2I5L`=jbcXW_jIafoP\`>`<U)m+=QQ5`D!6PHFSnAslR%Z(d4@:lf<pZ<a.6gQK7O3q6s-=eTo<=act_WM]Ac>L]Af[Qt15d42BI[3IeI;JN@sDS_KU,n6?;fa?hd&;&36L-3lr@>MDZUP:W:%1-@*c'pIKkWl4(Z%s*tDZd.hS^e!S'Li*-jauPiQ:3H'5&D2f#l,I><]@,mdj)U5H1i^WGL#ng?U>_8o/@6<B*3`4amK1LAXln<R%)Y`Lus77n.ZoFHYci9U8%k+!q+*6KR/+_G5[H`TP)sE:,">$Mj_Y_r7;Ju2H?Mo:iq;S=g6E1/NcPjaq:8gF;`@8*mUHl`/O.$7T%":@qP5!5mpo"R#[242/TLYn.Wr+DWTWH*e4`AB;89qEl$<X72ElM$W='27aT<;8Q]..g8(DE!fn\6:\4%*^./="8=hoASB;@%.)k%++?HRn<t\#6t`<mia:$,4&tbNf*eiMlEJ$6RQrsW5VYI[W20!TKqG+i>5W6P1XoVU?@>""q\MrT?iS%4`ueX:<9p5nF#u!/=+(qj%ihcaM`<5K\R\omCWYOI_LNd?mFG+kp!p3h2i,X&.oASB;A=EM_++?HRE0quP:S8<k&u/pHAscRu;=ORODE:0QU&pCI^XbIW]^lgV%fA!P'LPj6`I4uu,a.n.+T)3;Qp\jm!It"PK6=3q]X0o'qrcm?\'>gfnIsNNMYmG@[kg79"m-i'_`MjYWNZa1]=ge%qJ=uko3D3S;%QdG`4J*d./@mOeg80_mdbA-c`e_ESIMP@CKR/LZq""@ge)",[B0dHB5&m?KniSoQQY6M*\Wr=A$n,.S*T::hTp:&n>^\-c>?5K7d%PVk-EU:fg=Wp,CS\/4!RaI":#7<_T@pkZ.*Y:VP]qc[*!<iZH625Q\+KjB1D\W+#kai%'pfFDKl02aD6aH@r,MX"`"WQ$+GpFq1R%SH%Mt@T-DE77E/b4StHn(Ou)g^E7t#G?[%lA;#mX/eKXAT+^/6^l@O04(+m7M`P6.Lmd=iGd1%rkXYI3(OSQ'/uE?W`_0_E5Mi0Y%6LW'/Z?O48ED(64b'lN:qTg_f^\YFrO2$D)s'N*Ad=8i:HN1IhroUuk+56bg+92=iJ,ep9pSWN=&-(V?hu(b!oXB>EVuPj#s7ZKj%r6mn0qR\ulmJldU5Q'p+s8>1[e)1/RTDn<V?iKP=s7iKVs3j41j.H>?kPsQara-fB,Mr?:roQHEO8o0^ru]%>nd,~>%AI9_PrivateDataEnd