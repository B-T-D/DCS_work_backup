%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 008x003.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 410 173
%%HiResBoundingBox: 0 0 409.2295 172.8843
%%CropBox: 0 0 409.2295 172.8843
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 56 8%%BeginData: 5666 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFD8AFFA8FFA8FD3CFFA8A8FFA8FFA8FD3AFFFD057DFFFFFF%A8FFFFFFA8FFA9FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0AFF7D52FD067DFFA8FFFFFFA8FF%FFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FD0BFF7EFD047DA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FF%A8FFA8FF7DFD09FF7D7D7D7E7D7D7DA8A8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8FFA8FFA8FF%A8A8FD0FFFA9FD30FFA9FD10FFA8FD2DFFA8FD10FFAFFD2DFFA9FFA8FD11%FFA8FD2BFFA8FD0CFFA8A87DA87DFD3AFFA87D7D7D847D7D7DFD2DFFA8FD%0BFF847D7D537DFD2EFFA8FFA8FD09FF7D7D537D527D527DAFFD2BFFA8A8%FD0FFFA8FD2DFFA9FFA8FD0BFFA8FFFFFFA8FFA8FD2CFFA8A8FD10FFA8FD%2BFFA8FFA8FFA8FD11FFA8FD2AFFA9A8FD0CFFFD04A87DFD2BFFA9FD0EFF%A87DA8A8A87DA8A8FD2BFFA8FFA8FD07FFA87DFFFFA8527D527DA8FD29FF%A8FD05FFA8FD05FFA87DFFFF7D7D527D527D527DFD2AFF84FFA8A8FD07FF%7D7DFFFFA8FFA8FFA8FD29FFA9FD0CFFA87DFFFFFFA8FFA8FFA8FFA8FD29%FFA8FFFFFFA8FD07FFA852A8FD06FFA8FD27FFA9A9FFFFA8FFFFFFA8FD05%FF7D59A8FD09FFA8FD27FFA8AEFFFFA8FD08FFA87DA8FFA8A8A8AFA8FD36%FFA853FFFFA9A8A8A8A9A8A8A8FD27FFA9AFFD04FFA9FD07FFA87DFFFFA8%527D527DFD2AFFA8FD05FFA8FD05FF7D7DFFFF7D7D527D527D527DFD26FF%A9A8CFFFFFFFA8A9FD07FF7D7DFFFFFD04A87DFD29FFAEFD0CFF7D7DFFFF%A884A8A8A87EA87EFD26FFAFFD06FFA8FD07FFA87DFD07FFA8FD27FFA8FD%07FFA8FD05FF847DA8FD09FFA8FD24FFA8A8FD05FFA8FD08FFA8FFFFFFA8%FFA8FFA8FD27FFA8FD0FFFA8FFFFFFA8FFA8FFA8FFA8FD25FFA8FD07FFA8%FD07FFA852A9FFA8597D7D7DFD24FFA8FFA8FD09FFA8FD05FF7D7DA8FFFD%047D537D527DFD24FFA8FD07FFA8A8FD07FFA8A8FFFF7D847DA87DFD25FF%A8FD0AFFA8FD05FFA8A8FFFF7E7DA87DA87DA87DFD23FFA8FD09FFA8FD07%FFA852FD07FFAFFD20FFAFA8FFA8FD0BFFA8FD05FF7D7DFD0AFFA8FD21FF%A8FD09FFA8FD08FF7E7DFD06FFA8FD23FFA8FD12FFA852FD09FFA8FD21FF%A8FD0BFFA8FD07FFA87DFFFFA8FD047DFD20FFA9FFA8FD0DFFA8FD05FF7D%A8FFFFFD087DFD20FFA8FD0BFFA8FD08FF7DA8FFFFFD057DFD21FFA8FD0E%FFAFFD05FFA87DFFFFA8FD077DFD1FFFA8FD0DFFA8FD07FFA852FD06FFA9%A8FD1BFFA8FFA9FFA8FD0FFFA8FD05FF7D7DA8FFA8FFA8FD23FF84FD0DFF%A8FD08FF7D7DFD06FFA8FD1FFFA8FD16FFA853FD27FFA8FD0FFFA8FD07FF%7D7DFFFFA884A87D7DFD1AFFA9FFFFFFA8FD11FFA8FD05FF7D7DFFFFA8A8%7DA87D847DA8FD1CFFA8FD10FFA8FD07FF7DA8FFFFA87D7D7D53FD19FFA9%FFFFFFA8FD12FFA8FD05FFA87DFFFFA8FD047D597D52FD1BFFA8FD11FFA8%FD07FFA852FFFFFFFD04A8FD18FFA8FFA8CFA8FD13FFA8FD05FF7D7DA8FF%A8A8A8AFA8FFA8A8A8FD19FFA8FD11FFA8FD08FF7D7DFD1EFFA9FFAEFD1C%FFA87DFD23FFA8FD13FFA8FD06FFA87D7DFFFFA9FD04A8FD16FFA8FFA8FD%17FFA8FD05FF527EA8FFFD08A8FD17FFA8A8FD13FFA8FD08FF7DA8FFFFA8%7D537D52FD13FFAFFFFFFFA8FD18FFA8FD05FF7D7DFFFFA87D7D527D527D%53FD15FFA9A8A8FD15FFA8FD0BFFA87DFD04A8FD11FFA8FFA8FFA8FD19FF%A8FD09FFFD08A8FD14FFA8A8A8FD15FFA8FD22FFA9FFAEFD41FFA8AFFD18%FFA8FD0CFFFD04A8FD0EFFA9A9A8FFA8FD1DFFA8FD0BFFA8FFA8AFA8A8FD%11FFA8A8FD28FF527D7DFD0DFFA8FFA8FFA8FD29FFA8FD067DFD0FFFA8A8%A8FD1BFFA8FD0CFFA87D7D7DA8FD09FFA8FFA8AEA8FD21FFA8FD0BFF7DA8%7DA87D7DA8FD0BFFA8A984A8A8FD1BFFA8A8FD19FFA8FFAEFD35FFAFFD0B%FFA8AFA8FD1FFFA9FD12FFA9FFA8A9A8A8A8FFA8FD07FFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFCFCAFFCACFCAFFCACFCAFFCACFCACFA8FD10FFA8AFFD%05FFA8FFA8A8A8FD21FFA8FD0FFF7E7DAFA8A8A1A8A7CAA8CFCAFFCAFFCA%CFCAFFCACFCACFCACACAFFCACFCAFFCACFCAFFCFFFA8FFFFFFCAFFFFFFCA%FFFFFFCFCAFD0FFF7D7DFFCAAFA8A884A8A8FFCFFFFFFFCFFD13FFA8FFFF%FFCAFFCACFCAFFCACFA8FD0EFF7D7DFD05A8CAFD04A87DCAA8CAA8A8A8FF%A8FFA8A87DA87DFFA8FFA8FFA8FFA8FFA87D7DA8A8FFA8FFA8FFA8FFA8A8%7DA8A8FD0DFF7D7DA8A8A1FD04A8FFA8A87D7DA1CAA8CAA8A8A8FFA1A87D%A87DCAA8CAA8A8A8CA7D7D7DA8A8CAA8CAFD04A87D7DA8A8FD17FFA87DFD%0BFFA87DA8FD0AFF7D7DA8FD09FFA87D53A8FD18FFA87D7DA8FD08FF7DA8%527DFD07FFA87D7D7DA8FD06FFA8FD047DFD18FF7DFD0BFF7DA8A8FD09FF%A87D7DA8FD09FFA87DA8A8FD19FF7DA8A8FD07FFA8A87DA87DFD07FF7DA8%7DA8A8FD06FFA87DA87DA8FD9EFFA8FD05FFA8FFA8FD3DFFA8FD39FFA87D%A87DA87DA8A8FD047DFF7DA87EFD31FF7DA87DA8A87DA87D7DA87DFF7DA8%7DFD30FFA87D537D7D7DA8A8527D527DA87D7DA8FD31FF84FD057DA8537D%527DA8A8537DA8FD32FFA8FD0BFFA8FD33FFA8FD0BFFA8FDB3FFA8FD3EFF%A8A8FFA8FD3CFFFD05A8FD3AFFA87D7DA8A8FD3DFFA87D7DA8A8FD39FFA8%FF7DA8A8FD3CFFFD04A87DFD3AFFA87DFFA8A8FD1FFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T09:44:08+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T09:44:09+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T09:44:09+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>108</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAbAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qoXN/Y2v+9NxFBWlP&#xA;UdU6mg+0R3xVUimhlUtE6yKGKkqQwDKaMNu4PXFV+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVD&#xA;yalp0cjRyXUKSKGZkaRQQE+0SCei98VXC9sy4QTxlywQLzWvMrzC0r14708MVVsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirE/MfkHSdY1KXULi+uLe4mhWH4XUemqspRoSRyRlavEg9WO2+FVby55V&#xA;0/Sbm+gt7m4mjlZJyDKUCuwMRXjD6akhYFqSOVe+Kp7+j4P55v8AkfN/zXgV36Pg/nm/5Hzf814q&#xA;tj0yBI1QyzuVABdp5eRoOpowFTiq79Hwfzzf8j5v+a8Vd+j4P55v+R83/NeKrU0yBVIMs77k1aeW&#xA;u5Jpsw2HQYqu/R8H883/ACPm/wCa8Vd+j4P55v8AkfN/zXiq0aZAJGf1ZyCAOHry8RQncfFWprv8&#xA;sVXfo+D+eb/kfN/zXirv0fB/PN/yPm/5rxVBSwqNUsvQkmCxSsJiZpWRuUElIyjMVamze22SrZU2&#xA;yKuxVgi/lf5fhkkddTuUYyzXLMzxMxdmWRxKWUiSNZBzZXG7dcNqot+WHl3T4fXt9QufUs1j9FS8&#xA;PL/Rz9ZjUsIw/IyDlyB5cfhFFxVm66bbgAB56AU3uJifvL4Fb/R8H883/I+b/mvFVr6ZAygCWdNw&#xA;arPLXYg03Y7HocVXfo+D+eb/AJHzf814q79Hwfzzf8j5v+a8VWnTIDIr+rOAARw9eXiakbn4q1FN&#xA;vniq79Hwfzzf8j5v+a8Vd+j4P55v+R83/NeKrRpkAkZ/VnIIA4evLxFCdx8Vamu/yxVd+j4P55v+&#xA;R83/ADXirv0fB/PN/wAj5v8AmvFVPTofSmvlEkjqZwVErtJxHoRfCpYkgV3p4k4qjcVdirE/Mv5f&#xA;abr99Ncz3k8cs0AgeNfTZVQkUKhlJWlH4705Hl1w2qK8q+WbPQrzUI7aZ5hclJmLEAAktHTitFJA&#xA;iFWpUmp74FZFirsVdirsVdirsVdirsVdirsVUZ5XqIYf79xWp3CL05H+A7n2qQQOqoFolN3YekWE&#xA;FvM6huTfvHaGTkW3o1D3Pf8AEXZQmmKXYqwCX8pdIkme6XUp2Pry3IeRYZaSnkDyYr8Q5M5kB+3+&#xA;10w2qHf8pNGsYjPHfzN9VSMRoyxVK2xM6qWC8uZk/b+0E+EUGNoejKoVQorQCgqSTt4k7nAlvFXY&#xA;q7FXYq7FXYq7FXYq7FVO5uYra3eeY0jjFT3J8AB3JOwGKlA6KtzyvpLnaaa4EhjqSIwYIgqD5KBW&#xA;m1anFATLFLDdV1/V7X8yNM0wTXH6JuYF9S3jszLEZXFxR3uFVigUxLX4hTauxqFVbzP+X9vr+pPf&#xA;S3XoObb6qnBG5KPVjlElRIoLo8QKHj/rchtiqI8q+V4dAv8AVEhuHmW9dLp1ZUUBn5JvQVZqR7sT&#xA;uTirJMVdirsVdirsVdirsVdirsVUrif0lFF5yuaRxjufxoB3PbCBaodIyZHiRiXYg3dwPhJ8EXw+&#xA;/Ye5rgJtDd1EFuNOEbGOOOVgIlChSPQkAHSop2pTFKMxVhfkXzDq2o61r1pqE1zMtrMRaLNZNbRx&#xA;ok0sRVZeIVzRFP2j4g7kKqpzfldaS3U9z9c9OS4nmuJBHGQpM8SRNGVaRlMZ9NWZSNzsCqnjhtUF&#xA;L+U2n2ds06ahMzWyW7qSiEn6kCykk1+Jm25dk+HpjaHoighQCxYgULGlT7mlBgS3irsVdirsVdir&#xA;sVdirsVdiqXQf7kblbo72UB/0UdpH/37/qr0T6T/AC4Sjmr2akXN+SxblOpANNv3EQoKD6d8CUVi&#xA;rDbzRtVf8z7HVjZrJp0Vp6QvV5KYm4zfAw9Yq9S32vSBWoANC1Sq/wA1fl7H5g1KW9kuo7cvaGzU&#xA;LByYqZEk5SkyUfgY/wB38I4k13wKi/KnlldCv9TRLpp1u2S5IKKgBcstWpUs/wAFWavxE1pirJMV&#xA;dirsVdirsVdirsVdiqyaZYlBILMx4oi/aZvAf5+52wgWqFCzGQryBu3H72QbrEh6Kte/z69T2GMj&#xA;0CEXHGkaBEFFH09dyST1J7nAlDXqMbqwYOVCzNVBSjVhk61BO3scVReKsL/L3RdV03UNfk1KyFvJ&#xA;dXAeO5QcUnUSTHkEMs5SnL7IIWhBChi2FUJcflRHPezXh1BI3muJ7poY7akIaeL0igRpWPpv9qZe&#xA;X7w/ygUxtULJ+UsNnbmddUd/qqWzryhXkfqKkqxbl/eN9jnTaP4Kd8bQ9IUEKAWLEChY0qfc0oMC&#xA;W8VdirsVdirsVdirsVdiqX3LG/maziJFtGaXsg/aqP7lT/xPwG3fY8kc0wVVVQqgBQKADYADAlC2&#xA;akXN+SxblOpANNv3EQoKD6d8VRWKsI1ZYX/NHTUkiu+b2a+jdW/KKKMxvNKyTSJIvqrIEACOjKN6&#xA;UJNCqI8z+RLrW9UnvFv4LWOS3SGJRas0qyLIsnqvKs8YlIMa8VdCq06EFgQqL8qeW30O/wBUQ3bX&#xA;Iu3W5pwCBeZZRWpdmaiVZqgEkmgxVkmKuxV2KuxV2KuxV2KrJpliUEgsWPFEXdmY9h/nt1O2EC1Q&#xA;o9VpzuDdEUY9UhQ9h4sfx+VMSegQioYUiQItfEk7knuSfHAlfiqEvUY3VgwcqFmaqClGrDJ1qCdv&#xA;Y4qi8VYH+XH1dtW19Uiu4ZoLl/VaUGG2n9aVyskVuJHiUgR0LKiFq1apOxKtf8qyu3klkk1SANJP&#xA;czERWZjQpcKFWBo/XaP0wEXnxUM9PtDkxZtUPL+VslpA1wNYkkNukD/FFVm+qKTyLFyPUf7HOm0f&#xA;wUPXG0PRFBCgFixAoWNKn3NKDAlvFXYq7FXYq7FXYq7FUFdXMssxsrRqTChuJxQiJDv3/bYfZHbq&#xA;e1SglE29vFbwrDCvGNBQD8SSe5J3J74EqmKoWzUi5vyWLcp1IBpt+4iFBQfTviqKxVhF4YYvzZsl&#xA;NuGe5sQySm2X4TGLgM4uQepVlTgRWnscKq3mjyDda5qVzeJqa2SzWy20ccduxYEOHMksizRmQjiP&#xA;T6cDuOrVCo3yp5dn0S+1NJL5rwXTpcAFOAXmWXerSEsShZiCFJJPEYqyTFXYq7FXYq7FXYqpT3Cx&#xA;kIo5zP8A3cQ6mnUnwUdz/HCAqGjEryNxcPNustwPsRiu6Rg1+Lbf33PQLgMugQjI4kiQIgoB7kkk&#xA;9yTuTildirsVQl6jG6sGDlQszVQUo1YZOtQTt7HFUXirBvy2EMV/5js44BG1reMjSi3W25AyzMqC&#xA;jNzCKRRuhr41wlVk35ZXcs7TfpdY+c1xM0MdsUhpOhT0vTE1BGRT1R/uwipo1WLaoWX8sb21t2nb&#xA;XZZfq6QSHlEeTm0UksWMrD1HHwcqbR/DQ9cbQ9FUEKAWLEChY0qfc0oMCW8VdirsVdirsVdiqDub&#xA;uV5jZ2dDOKGaUiqwqRsT2Lnsv0nbqUWr2trFbQiKOp7s7GrMx6sx7k4EgKuKuxVC2akXN+SxblOp&#xA;ANNv3EQoKD6d8VRWKsEubq2H5v20UPpyzyWCxXNLni0XpCeQVt1cBmIlX7aE0NRSmFUw83eUdT1u&#xA;e4NreRWsU9mtsSyO7iRLhZ1koGCMF4/ZI3qa7YqreVfL95o+p6ubm/a8+uSi5QFSoVZHegPIueQp&#xA;vxIX/JGKslwK7FXYq7FXYqhZ7zZhCyDgaSzybRpvShO3JvYH50yVVzRayG3kfkQXjjenORtppPmR&#xA;TgPalf8AVyJJKoxERFCIoVVFFUCgA9hilvFXYq7FUJeoxurBg5ULM1UFKNWGTrUE7exxVFMyqpZi&#xA;AoFSTsABirBPyvuoJrrzDHbGOW3S9d47mO5Nx6nqzTSVCCSRI1oRTgAN6b0rhKt3/wCXmrXd/NcJ&#xA;qaWyNLevEqJI1I7uL0xGayChDfEzLQ9hSuNqhLr8t9ahgknbzBI6xfV5WXjLVhaxFX6zEVbotQQF&#xA;+0HxtD0VQQoBYsQKFjSp9zSgwJbxV2KuxV2KuxVL3u5r1zDYOBCNpr4bqD/LFUcXbxPRfc7YUWi7&#xA;a2htohFCvFakmpJJZjUsxO5JO5JwJAVcVdirsVQtmpFzfksW5TqQDTb9xEKCg+nfFUViqSJ5TtV8&#xA;xSa4Ly69SWRJ2sy0f1f1I7drVWA9P1P7t2250qa+GKoDzX5Y13VryV7C/FjDLaLAzCSZX9RZxKDx&#xA;jKADiCKhgd6HbCqt5V0LUtK1HVBe6jJfm5dZouZYhUdnoPjLEHbopC+AxVkmBXYq7FVKe6hhoGNZ&#xA;GrwiXd2p4KMIFqg3mnuXMYBoKhoI2/5OyjZf9VN/mMeIDlui0RBZqvEykOyf3aKOMaU6cE/id8j7&#xA;1pE4UuxV2KuxV2KoS9RjdWDByoWZqoKUasMnWoJ29jiqLxVJPLPlO18vxNHBeXV2pjjgQ3TRsUji&#xA;aR1VfTjj/amYktU/dirH77yJ5jurueSPWDZ25lvHgijluG+C5jCoG+NOjbkb0/ZocKoO4/L/AMzw&#xA;2zyyeYZJEiFrI68p/iFrERL9qVhVugqCCPthzih6MoIUAsWIFCxpU+5pQYEt4q7FXYqo3d5bWkYk&#xA;uJAgJ4oNyzMeiooqzMewArjSCUJ6N5qA/wBJBtbI/wDHsCPVkFf92sPsqf5VNfE9Vwo5pgiIiKiK&#xA;FRQAqgUAA2AAGBk3irsVdirsVQtmpFzfksW5TqQDTb9xEKCg+nfFUVirsVSfzZpF/q2jPZ2NwbW5&#xA;Lo8c/Nk4lDyFeIbktRuu3IbVHXFUF5T0XVtLv9US/vvrouHWeIsZHZVYsAOUjNx3Vm4qAort7lWS&#xA;kgCp2AwKg5dXsUQssglA2JQgrXwMhIjU03oWyXDXPZFqP1rULmnoxmKM9wKGh3BMj/D/AMAr+xwW&#xA;Om62qw6aAG9Vq8/tqhYcvDm5Jkeg23NKdsBJPNaRiIiKERQqqKKoFAB7DFLeKuxV2KuxV2KuxVCX&#xA;ok+tWBVgEEzc1IJJ/cyUoain3HFUXirsVY15p8uazql9a3Gn3xs1hiljlX1HUSCRSOPFBVTWn7wP&#xA;UCuxJBCrHpvI/nCC3MsvmKSdYUt2kDSTnn9XU+qzLzoTKv7sr0I+JqthQ9FXlxHIgtT4iBQE+wqc&#xA;CW8VQ13qdhaMEnnVZW3SAfFK1TT4I1q7fQMaQSAofWdVutraAWcR/wB33I5Of9WFT+LsCP5ThRZV&#xA;rXTbe3kMxLT3TDi9zMeUhHWgoAqr/koAPbAkBFYpdirsVdirsVdiqFsw/wBZv+RBBnXiAKUHoRdd&#xA;zXeuKorFXYq7FWJ6X5Y80QPem51xuNzMWTirTOIwAFpJK3wVbk3BBxWtBtjaotvK109PX1J7jj9g&#xA;ypyK/I8q4Dxd5+z9TIEd33/rVLqwvrC0uL1LuNpIInlLtEgZuCk0aV22rSlWO2R4PP7v1J4h/NH2&#xA;/rUfLN1rOr6FZ6g1+ivMp9QJEki80Yo3FxwDCqmjKKHqNqHCYnvP2fqUTHcPt/Wmf1LVTs1+GXuP&#xA;R41+lXVvuOPD5lPGO4fb+tp7G8VGY3SgKK1Prgbb7n18eAefzK+IfL5BinlrzTPrGqRack0UhltH&#xA;vTcwzSyoKTenwXjInKNT8Ik2qVoRXHgHn8yjxT5fIMs/R95/y0j7p/8AqvjwDz+ZT4h8vkHfo66O&#xA;zTxuvdXSZ1PzVpiDjwBfFl+AGH3XmprfzM2kCLTpSt5b2UgHHnH66Blk9IEyFmMnHj0AXkWArj4c&#xA;e5HjT7z82YfoyTwtP+kY/wDVTHw49yfFn3l36Mk8LT/pGP8A1Ux8OPcviz7yxLzX5oHl7W7KA/UH&#xA;aKI3ksKkW8oR2NqrSs3MRwBpeTOOR+FvhoCcIgByDGWSR5lm2n3YvLC2vAjRi5iSYRuKModQ3Fh4&#xA;iu+Fir4q7FUg816HrGrfUV06/NlHDLyuqNIodKqSCsZX1AVVk4MafFXqBiqKmsfMMqqP0pFAR1aC&#xA;1AJPv6sk2KqJ0LVJK/WtUa5qKAFZIQB3FLeWEGv+VXGytDzSDzJr935Xureys4bFBdRyTu8aCEgw&#xA;DnR0DueDKrc5Tso/yqAu67Bkej3mqanpNlqKzQRreQR3AjMLtxEqBqVE2/Xrg3TsjPS1b/lpg/5E&#xA;P/1Wx3XZhOu/mJqGlXs8Ja1umtJLiKW3t6s7CNIJFopfl6tJ/wC77KrtU8cNFbDJtA1HVdW0mDUB&#xA;NbRibnskbyoeDsnKOT1V5o3HkrUFQQcG67Jh6Wrf8tMH/Ih/+q2O67PPpfzRv0lZkfT5ouDqSkvK&#xA;NJYr57NmZlZnWIhfUMrgKF6AmuGlsM2sjq19ZW96t4IFuYkmEJtwCgdQ3EhnY1Fd98iYnvZCQ7h9&#xA;v61uo/pWy0+6vH1OFEtoZJmeeNYogI1LEySfHwUU+JuJoO2PCe8/Z+pPGO4fb+thWj/mhKpdprb6&#xA;39entnidHVQiz2kbhaKrVLFSsVaF3qhClckAwJt6bih2KuxV2KuxV2KuxVKfMvmK20CxS9uYpJom&#xA;k9MpFQv9hn2DEA/Yp1xVjw/N7yszSoEuBLG0UYRliBaSZOaRikho3bfr2qN8NKvv/wA1NFsksTPb&#xA;yo15YLqhBeEKkBDEjmZODOvDffiO7DarSq9n+Zeh3unXF9bw3Cx2s1tDcLMnAr9YfiSCpcNwo1QO&#xA;pG2zKS0qa+X/ADRp+utcGxq0MIVklII5BmeMgqQGRlkhdSp32B74FTjFXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FUDrWrQaRpsuoTqzwwlA6pTlR3VKivhyrirGYPza8qvcvbzCe1kjjmkk9cRKFNuSJEJEjfFy&#xA;HEdmJ+EnehpV1x+aGkW9lplxNbSxvqh/dxs8IVAtwsDc5A5Wu5YD2PLjQ0aVvS/zQ0PVba7ksbe4&#xA;9W1jhk9OcJGrfWOHpj1FaRR/fIWPYH2IxpU08v8AnHStfupI9NLSQJBHOJmVozV3dSjRuqspAVT7&#xA;19sCp7irsVdirsVdirsVdirsVdirsVdirTxxuKOoYdaMK/rxVLYptCguri3CwwOZ41lZgqK9zIgZ&#xA;UUmnKThxNB2IxVEWjWF/aJcJCpjcFeDoAylSVZGHYq1QR44qrNZ2jR+m0EbRkoShVSKxkFNqfslR&#xA;TwxVdHBDGzvHGqNKeUjKACzUpViOpoMVX4q7FXYq7FXYq7FXYq7FXYq7FXYqp3MkEdvJLcFRBGpe&#xA;Vn+yFUVJPypiqRWWteXJXvJI7b0rhbm3t9QieNFlWSZY2gaVK8uJ9ZKHt9BxVPWtrdvtRI1ajdQe&#xA;p5H7zvirRs7QxNCYIzE68Hj4rxK7niRSlNziq5LeCORpEjVJGVUZ1UAlUJKgkdhyNPniq/FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq8+81f4b/Sz/pj616H6Vs/qv1blz/SHpQ8K8P2P95+H7fPl+zhVlfl&#xA;Xh+hkp/e+vdfWqUp9Z+syfWeNP2fW58fbAqbYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgNf+p/oL&#xA;Uvrtfqf1Wb6zx6+l6bc6V/ya4qxF/qf1q59f1f0z6tn+mK09KvGw+uehTt6f1fnXt9neuFWe4Fdi&#xA;rsVdirsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:D27DBEF0082068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:D27DBEF0082068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27DBEF0082068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T09:44:09+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -172.884 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 172.884 li
409.229 172.884 li
409.229 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 156.596 mo
208.794 156.596 li
208.794 0 li
0 0 li
0 156.596 li
cp
clp
0 156.596 mo
208.794 156.596 li
208.794 0 li
0 0 li
0 156.596 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
31.3193 133.106 mo
187.915 133.106 li
187.915 15.6597 li
31.3193 15.6597 li
31.3193 133.106 li
cp
f
gsave
31.3193 133.106 mo
187.915 133.106 li
187.915 15.6597 li
31.3193 15.6597 li
31.3193 133.106 li
cp
clp
.36249 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.3193 132.845 mo
39.561 132.584 li
47.8032 132.323 li
56.0449 132.063 li
64.2866 131.801 li
72.5288 131.54 li
80.7705 131.279 li
89.0127 131.019 li
97.2544 130.757 li
105.496 130.497 li
113.738 130.235 li
121.98 129.974 li
130.222 129.713 li
138.464 129.453 li
146.706 129.191 li
154.948 128.93 li
163.189 128.669 li
171.432 128.409 li
179.673 128.147 li
187.915 127.886 li
0 .994 1 0 cmyk
@
31.3193 131.801 mo
39.561 130.496 li
47.8032 128.669 li
56.0449 126.321 li
64.2866 123.449 li
72.5288 120.057 li
80.7705 116.142 li
89.0127 111.705 li
97.2544 106.746 li
105.496 101.265 li
113.738 95.2622 li
121.98 88.7373 li
130.222 81.6909 li
138.464 74.1216 li
146.706 66.0313 li
154.948 57.4185 li
163.189 48.2837 li
171.432 38.6265 li
179.673 28.4478 li
187.915 17.7471 li
.884 .769 0 0 cmyk
@
31.3193 132.845 mo
39.561 132.063 li
47.8032 130.757 li
56.0449 128.93 li
64.2866 126.582 li
72.5288 123.71 li
80.7705 120.317 li
89.0127 116.403 li
97.2544 111.966 li
105.496 107.007 li
113.738 101.526 li
121.98 95.5229 li
130.222 88.9985 li
138.464 81.9517 li
146.706 74.3833 li
154.948 66.292 li
163.189 57.6797 li
171.432 48.5444 li
179.673 38.8877 li
187.915 28.7095 li
.873 .242 1 .129 cmyk
@
grestore
64.2866 133.106 mo
64.2866 131.656 li
64.2866 133.106 li
cp
0 0 0 1 cmyk
f
.181245 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
64.2866 133.106 mo
64.2866 131.656 li
@
64.2866 17.1099 mo
64.2866 15.6597 li
64.2866 17.1099 li
cp
f
64.2866 15.6597 mo
64.2866 17.1094 li
@
gsave
0 156.596 mo
208.794 156.596 li
208.794 0 li
0 0 li
0 156.596 li
cp
clp
63.3257 134.859 mo
66.2349 134.859 li
66.2349 135.483 li
64.0024 135.483 li
64.0024 136.829 li
64.1074 136.792 64.2207 136.761 64.3257 136.746 cv
64.4307 136.731 64.5435 136.716 64.6484 136.716 cv
65.2578 136.716 65.7388 136.889 66.0991 137.22 cv
66.4604 137.558 66.6406 138.009 66.6406 138.58 cv
66.6406 139.174 66.4526 139.632 66.0845 139.956 cv
65.7163 140.279 65.1973 140.437 64.5356 140.437 cv
64.3032 140.437 64.0698 140.414 63.8296 140.384 cv
63.5889 140.347 63.3481 140.293 63.0928 140.211 cv
63.0928 139.467 li
63.3105 139.587 63.5366 139.677 63.7769 139.738 cv
64.0098 139.798 64.2578 139.821 64.521 139.821 cv
64.9419 139.821 65.2803 139.715 65.5283 139.489 cv
65.7686 139.264 65.8965 138.963 65.8965 138.58 cv
65.8965 138.205 65.7686 137.903 65.5283 137.678 cv
65.2803 137.453 64.9419 137.34 64.521 137.34 cv
64.3257 137.34 64.1226 137.362 63.9272 137.408 cv
63.7319 137.453 63.5288 137.521 63.3257 137.611 cv
63.3257 134.859 li
f
105.496 133.106 mo
105.496 131.656 li
f
105.496 133.106 mo
105.496 131.656 li
@
105.496 15.6597 mo
105.496 17.1094 li
f
105.496 15.6597 mo
105.496 17.1094 li
@
102.305 139.715 mo
103.515 139.715 li
103.515 135.536 li
102.2 135.799 li
102.2 135.123 li
103.507 134.859 li
104.252 134.859 li
104.252 139.715 li
105.461 139.715 li
105.461 140.339 li
102.305 140.339 li
102.305 139.715 li
cp
f
108.543 135.348 mo
108.16 135.348 107.875 135.536 107.679 135.912 cv
107.484 136.288 107.394 136.851 107.394 137.603 cv
107.394 138.354 107.484 138.918 107.679 139.294 cv
107.875 139.67 108.16 139.858 108.543 139.858 cv
108.927 139.858 109.213 139.67 109.408 139.294 cv
109.596 138.918 109.694 138.354 109.694 137.603 cv
109.694 136.851 109.596 136.288 109.408 135.912 cv
109.213 135.536 108.927 135.348 108.543 135.348 cv
108.543 134.762 mo
109.153 134.762 109.619 135.01 109.949 135.491 cv
110.273 135.979 110.438 136.686 110.438 137.603 cv
110.438 138.528 110.273 139.234 109.949 139.715 cv
109.619 140.196 109.153 140.437 108.543 140.437 cv
107.927 140.437 107.454 140.196 107.131 139.715 cv
106.807 139.234 106.649 138.528 106.649 137.603 cv
106.649 136.686 106.807 135.979 107.131 135.491 cv
107.454 135.01 107.927 134.762 108.543 134.762 cv
f
146.706 133.106 mo
146.706 131.656 li
f
146.706 133.106 mo
146.706 131.656 li
@
146.706 15.6597 mo
146.706 17.1094 li
f
146.706 15.6597 mo
146.706 17.1094 li
@
143.594 139.715 mo
144.804 139.715 li
144.804 135.536 li
143.489 135.799 li
143.489 135.123 li
144.796 134.859 li
145.54 134.859 li
145.54 139.715 li
146.75 139.715 li
146.75 140.339 li
143.594 140.339 li
143.594 139.715 li
cp
f
148.254 134.859 mo
151.163 134.859 li
151.163 135.483 li
148.93 135.483 li
148.93 136.829 li
149.036 136.792 149.148 136.761 149.254 136.746 cv
149.359 136.731 149.472 136.716 149.577 136.716 cv
150.186 136.716 150.667 136.889 151.027 137.22 cv
151.388 137.558 151.569 138.009 151.569 138.58 cv
151.569 139.174 151.381 139.632 151.013 139.956 cv
150.644 140.279 150.125 140.437 149.464 140.437 cv
149.231 140.437 148.998 140.414 148.758 140.384 cv
148.517 140.347 148.277 140.293 148.021 140.211 cv
148.021 139.467 li
148.239 139.587 148.464 139.677 148.705 139.738 cv
148.938 139.798 149.186 139.821 149.449 139.821 cv
149.87 139.821 150.208 139.715 150.456 139.489 cv
150.697 139.264 150.825 138.963 150.825 138.58 cv
150.825 138.205 150.697 137.903 150.456 137.678 cv
150.208 137.453 149.87 137.34 149.449 137.34 cv
149.254 137.34 149.051 137.362 148.855 137.408 cv
148.66 137.453 148.457 137.521 148.254 137.611 cv
148.254 134.859 li
f
187.915 133.106 mo
187.915 131.656 li
f
187.915 133.106 mo
187.915 131.656 li
@
187.915 15.6597 mo
187.915 17.1094 li
f
187.915 15.6597 mo
187.915 17.1094 li
@
185.096 139.715 mo
187.682 139.715 li
187.682 140.339 li
184.202 140.339 li
184.202 139.715 li
184.479 139.43 184.863 139.039 185.352 138.542 cv
185.833 138.054 186.141 137.738 186.269 137.596 cv
186.509 137.333 186.675 137.107 186.765 136.919 cv
186.855 136.739 186.908 136.551 186.908 136.37 cv
186.908 136.084 186.802 135.844 186.599 135.664 cv
186.396 135.483 186.133 135.386 185.802 135.386 cv
185.57 135.386 185.321 135.431 185.066 135.506 cv
184.811 135.588 184.532 135.708 184.239 135.874 cv
184.239 135.123 li
184.54 135.002 184.818 134.912 185.073 134.852 cv
185.329 134.792 185.57 134.762 185.788 134.762 cv
186.351 134.762 186.802 134.904 187.141 135.19 cv
187.479 135.476 187.652 135.852 187.652 136.325 cv
187.652 136.551 187.606 136.769 187.524 136.964 cv
187.441 137.167 187.291 137.408 187.065 137.678 cv
187.005 137.753 186.81 137.956 186.479 138.294 cv
186.148 138.633 185.69 139.106 185.096 139.715 cv
f
190.824 135.348 mo
190.44 135.348 190.155 135.536 189.959 135.912 cv
189.764 136.288 189.674 136.851 189.674 137.603 cv
189.674 138.354 189.764 138.918 189.959 139.294 cv
190.155 139.67 190.44 139.858 190.824 139.858 cv
191.208 139.858 191.493 139.67 191.688 139.294 cv
191.876 138.918 191.974 138.354 191.974 137.603 cv
191.974 136.851 191.876 136.288 191.688 135.912 cv
191.493 135.536 191.208 135.348 190.824 135.348 cv
190.824 134.762 mo
191.433 134.762 191.898 135.01 192.229 135.491 cv
192.553 135.979 192.718 136.686 192.718 137.603 cv
192.718 138.528 192.553 139.234 192.229 139.715 cv
191.898 140.196 191.433 140.437 190.824 140.437 cv
190.208 140.437 189.734 140.196 189.411 139.715 cv
189.087 139.234 188.93 138.528 188.93 137.603 cv
188.93 136.686 189.087 135.979 189.411 135.491 cv
189.734 135.01 190.208 134.762 190.824 134.762 cv
f
85.7046 148.028 mo
86.4487 148.028 li
86.4487 153.507 li
85.7046 153.507 li
85.7046 148.028 li
cp
f
91.313 151.027 mo
91.313 153.508 li
90.6362 153.508 li
90.6362 151.05 li
90.6362 150.659 90.5537 150.373 90.4033 150.178 cv
90.2529 149.982 90.0273 149.885 89.7271 149.885 cv
89.3584 149.885 89.0728 150.005 88.8623 150.238 cv
88.6519 150.471 88.5469 150.787 88.5469 151.185 cv
88.5469 153.508 li
87.8701 153.508 li
87.8701 149.396 li
88.5469 149.396 li
88.5469 150.035 li
88.7046 149.794 88.8926 149.607 89.1182 149.486 cv
89.3359 149.366 89.5913 149.298 89.8774 149.298 cv
90.3433 149.298 90.7036 149.449 90.9443 149.742 cv
91.1851 150.035 91.313 150.463 91.313 151.027 cv
f
93.314 152.891 mo
93.314 155.063 li
92.6372 155.063 li
92.6372 149.396 li
93.314 149.396 li
93.314 150.02 li
93.4492 149.779 93.6294 149.599 93.8472 149.479 cv
94.0654 149.358 94.3281 149.298 94.6294 149.298 cv
95.1255 149.298 95.5313 149.501 95.8467 149.892 cv
96.1548 150.291 96.313 150.809 96.313 151.456 cv
96.313 152.102 96.1548 152.628 95.8467 153.02 cv
95.5313 153.41 95.1255 153.605 94.6294 153.605 cv
94.3281 153.605 94.0654 153.545 93.8472 153.432 cv
93.6294 153.32 93.4492 153.139 93.314 152.891 cv
95.6138 151.456 mo
95.6138 150.959 95.5088 150.576 95.3057 150.291 cv
95.0952 150.005 94.8169 149.862 94.4639 149.862 cv
94.103 149.862 93.8247 150.005 93.6221 150.291 cv
93.4116 150.576 93.314 150.959 93.314 151.456 cv
93.314 151.952 93.4116 152.342 93.6221 152.628 cv
93.8247 152.914 94.103 153.049 94.4639 153.049 cv
94.8169 153.049 95.0952 152.914 95.3057 152.628 cv
95.5088 152.342 95.6138 151.952 95.6138 151.456 cv
f
97.3667 151.884 mo
97.3667 149.396 li
98.043 149.396 li
98.043 151.861 li
98.043 152.252 98.1187 152.538 98.2686 152.734 cv
98.4189 152.929 98.6445 153.026 98.9526 153.026 cv
99.3135 153.026 99.6069 152.914 99.8169 152.681 cv
100.028 152.448 100.133 152.132 100.133 151.726 cv
100.133 149.396 li
100.809 149.396 li
100.809 153.507 li
100.133 153.507 li
100.133 152.876 li
99.9673 153.132 99.772 153.312 99.5615 153.432 cv
99.3438 153.545 99.0957 153.605 98.8096 153.605 cv
98.3364 153.605 97.9756 153.462 97.7349 153.169 cv
97.4868 152.884 97.3667 152.455 97.3667 151.884 cv
f
102.871 148.231 mo
102.871 149.396 li
104.261 149.396 li
104.261 149.922 li
102.871 149.922 li
102.871 152.155 li
102.871 152.493 102.916 152.71 103.006 152.801 cv
103.096 152.899 103.284 152.944 103.569 152.944 cv
104.261 152.944 li
104.261 153.508 li
103.569 153.508 li
103.043 153.508 102.683 153.41 102.487 153.214 cv
102.292 153.019 102.194 152.666 102.194 152.155 cv
102.194 149.922 li
101.698 149.922 li
101.698 149.396 li
102.194 149.396 li
102.194 148.231 li
102.871 148.231 li
f
110.165 149.517 mo
110.165 150.155 li
109.97 150.065 109.774 149.99 109.571 149.937 cv
109.36 149.892 109.15 149.862 108.933 149.862 cv
108.594 149.862 108.338 149.915 108.173 150.02 cv
108.008 150.125 107.925 150.275 107.925 150.479 cv
107.925 150.636 107.985 150.756 108.105 150.847 cv
108.226 150.937 108.466 151.027 108.827 151.102 cv
109.06 151.155 li
109.541 151.26 109.879 151.411 110.082 151.591 cv
110.278 151.779 110.383 152.042 110.383 152.373 cv
110.383 152.756 110.233 153.057 109.932 153.275 cv
109.631 153.5 109.21 153.605 108.684 153.605 cv
108.458 153.605 108.233 153.583 107.993 153.545 cv
107.752 153.508 107.504 153.448 107.241 153.357 cv
107.241 152.658 li
107.489 152.793 107.737 152.892 107.978 152.952 cv
108.218 153.019 108.458 153.049 108.699 153.049 cv
109.015 153.049 109.263 152.997 109.436 152.892 cv
109.601 152.786 109.691 152.628 109.691 152.425 cv
109.691 152.245 109.624 152.102 109.503 152.004 cv
109.383 151.907 109.113 151.809 108.692 151.718 cv
108.458 151.667 li
108.038 151.576 107.729 151.441 107.549 151.26 cv
107.361 151.08 107.271 150.832 107.271 150.508 cv
107.271 150.125 107.406 149.825 107.677 149.614 cv
107.948 149.403 108.338 149.298 108.85 149.298 cv
109.098 149.298 109.331 149.321 109.556 149.358 cv
109.774 149.396 109.977 149.449 110.165 149.517 cv
f
111.46 149.396 mo
112.137 149.396 li
112.137 153.508 li
111.46 153.508 li
111.46 149.396 li
cp
111.46 147.795 mo
112.137 147.795 li
112.137 148.652 li
111.46 148.652 li
111.46 147.795 li
cp
f
113.257 149.396 mo
116.467 149.396 li
116.467 150.012 li
113.926 152.967 li
116.467 152.967 li
116.467 153.508 li
113.167 153.508 li
113.167 152.892 li
115.708 149.937 li
113.257 149.937 li
113.257 149.396 li
cp
f
121.016 151.283 mo
121.016 151.613 li
117.912 151.613 li
117.942 152.079 118.077 152.44 118.333 152.681 cv
118.581 152.921 118.926 153.042 119.377 153.042 cv
119.633 153.042 119.889 153.012 120.129 152.952 cv
120.37 152.892 120.618 152.793 120.858 152.658 cv
120.858 153.297 li
120.618 153.403 120.37 153.485 120.114 153.53 cv
119.858 153.575 119.595 153.605 119.34 153.605 cv
118.679 153.605 118.16 153.417 117.776 153.042 cv
117.393 152.666 117.205 152.147 117.205 151.493 cv
117.205 150.824 117.385 150.291 117.746 149.892 cv
118.107 149.501 118.603 149.298 119.219 149.298 cv
119.776 149.298 120.211 149.479 120.535 149.832 cv
120.851 150.193 121.016 150.674 121.016 151.283 cv
120.339 151.087 mo
120.332 150.719 120.227 150.426 120.031 150.201 cv
119.829 149.982 119.558 149.87 119.227 149.87 cv
118.851 149.87 118.551 149.982 118.325 150.193 cv
118.1 150.403 117.964 150.704 117.934 151.087 cv
120.339 151.087 li
f
126.14 147.802 mo
125.81 148.374 125.569 148.93 125.411 149.479 cv
125.246 150.028 125.171 150.583 125.171 151.147 cv
125.171 151.719 125.246 152.275 125.411 152.824 cv
125.569 153.38 125.81 153.928 126.14 154.492 cv
125.554 154.492 li
125.186 153.913 124.908 153.357 124.728 152.801 cv
124.547 152.245 124.457 151.696 124.457 151.147 cv
124.457 150.606 124.547 150.058 124.728 149.501 cv
124.908 148.945 125.178 148.381 125.554 147.802 cv
126.14 147.802 li
f
127.323 153.38 mo
127.323 153.35 127.323 153.327 127.331 153.312 cv
127.895 151.072 li
127.925 150.937 127.948 150.809 127.948 150.704 cv
127.948 150.494 127.872 150.381 127.729 150.381 cv
127.572 150.381 127.451 150.479 127.376 150.667 cv
127.301 150.854 127.226 151.087 127.158 151.373 cv
127.158 151.388 127.15 151.403 127.135 151.411 cv
127.121 151.418 127.105 151.418 127.098 151.418 cv
127.008 151.418 li
126.993 151.418 126.978 151.411 126.963 151.395 cv
126.948 151.38 126.948 151.358 126.948 151.343 cv
127 151.125 127.053 150.937 127.105 150.787 cv
127.15 150.637 127.233 150.501 127.339 150.373 cv
127.444 150.253 127.572 150.185 127.737 150.185 cv
127.917 150.185 128.083 150.246 128.233 150.366 cv
128.375 150.486 128.451 150.637 128.451 150.817 cv
128.601 150.622 128.774 150.471 128.978 150.358 cv
129.173 150.246 129.39 150.185 129.616 150.185 cv
129.789 150.185 129.939 150.223 130.075 150.283 cv
130.202 150.343 130.3 150.441 130.375 150.561 cv
130.45 150.682 130.488 150.832 130.488 150.997 cv
130.488 151.208 130.436 151.456 130.345 151.741 cv
130.255 152.034 130.142 152.358 130.007 152.718 cv
129.932 152.884 129.901 153.034 129.901 153.169 cv
129.901 153.32 129.954 153.395 130.075 153.395 cv
130.27 153.395 130.428 153.29 130.563 153.079 cv
130.691 152.869 130.781 152.643 130.841 152.403 cv
130.849 152.373 130.871 152.358 130.901 152.358 cv
130.991 152.358 li
131.007 152.358 131.021 152.365 131.037 152.38 cv
131.052 152.395 131.059 152.41 131.059 152.425 cv
131.059 152.433 131.052 152.44 131.052 152.448 cv
130.984 152.733 130.864 152.997 130.699 153.229 cv
130.525 153.47 130.315 153.583 130.06 153.583 cv
129.879 153.583 129.729 153.523 129.608 153.41 cv
129.48 153.29 129.42 153.147 129.42 152.966 cv
129.42 152.876 129.436 152.778 129.48 152.673 cv
129.541 152.508 129.608 152.313 129.691 152.087 cv
129.774 151.862 129.842 151.651 129.894 151.44 cv
129.947 151.23 129.977 151.049 129.977 150.884 cv
129.977 150.749 129.947 150.628 129.887 150.531 cv
129.826 150.433 129.736 150.381 129.601 150.381 cv
129.413 150.381 129.24 150.426 129.09 150.501 cv
128.939 150.583 128.804 150.689 128.691 150.824 cv
128.571 150.959 128.466 151.117 128.375 151.298 cv
127.865 153.342 li
127.85 153.417 127.812 153.47 127.752 153.515 cv
127.692 153.56 127.624 153.583 127.549 153.583 cv
127.489 153.583 127.437 153.56 127.391 153.53 cv
127.346 153.5 127.323 153.448 127.323 153.38 cv
f
131.856 147.802 mo
132.442 147.802 li
132.804 148.381 133.082 148.945 133.262 149.501 cv
133.442 150.058 133.541 150.606 133.541 151.147 cv
133.541 151.696 133.442 152.245 133.262 152.801 cv
133.082 153.357 132.804 153.913 132.442 154.492 cv
131.856 154.492 li
132.18 153.928 132.42 153.38 132.585 152.824 cv
132.743 152.275 132.826 151.719 132.826 151.147 cv
132.826 150.583 132.743 150.028 132.585 149.479 cv
132.42 148.93 132.18 148.374 131.856 147.802 cv
f
31.3193 133.106 mo
32.769 133.106 li
f
31.3193 133.106 mo
32.769 133.106 li
@
187.915 133.106 mo
186.465 133.106 li
f
187.915 133.106 mo
186.465 133.106 li
@
28.4707 130.214 mo
28.0869 130.214 27.8013 130.402 27.606 130.777 cv
27.4106 131.153 27.3203 131.717 27.3203 132.469 cv
27.3203 133.22 27.4106 133.784 27.606 134.16 cv
27.8013 134.536 28.0869 134.724 28.4707 134.724 cv
28.854 134.724 29.1392 134.536 29.335 134.16 cv
29.5229 133.784 29.6201 133.22 29.6201 132.469 cv
29.6201 131.717 29.5229 131.153 29.335 130.777 cv
29.1392 130.402 28.854 130.214 28.4707 130.214 cv
28.4707 129.627 mo
29.0796 129.627 29.5454 129.875 29.876 130.356 cv
30.1992 130.845 30.3647 131.551 30.3647 132.469 cv
30.3647 133.393 30.1992 134.1 29.876 134.581 cv
29.5454 135.062 29.0796 135.302 28.4707 135.302 cv
27.8545 135.302 27.3804 135.062 27.0576 134.581 cv
26.7344 134.1 26.5762 133.393 26.5762 132.469 cv
26.5762 131.551 26.7344 130.845 27.0576 130.356 cv
27.3804 129.875 27.8545 129.627 28.4707 129.627 cv
f
31.3193 120.057 mo
32.769 120.057 li
f
31.3193 120.057 mo
32.769 120.057 li
@
187.915 120.057 mo
186.465 120.057 li
f
187.915 120.057 mo
186.465 120.057 li
@
22.1909 116.675 mo
25.1001 116.675 li
25.1001 117.299 li
22.8677 117.299 li
22.8677 118.645 li
22.9727 118.607 23.0854 118.577 23.1909 118.562 cv
23.2959 118.547 23.4087 118.532 23.5137 118.532 cv
24.1226 118.532 24.604 118.705 24.9644 119.036 cv
25.3257 119.374 25.5059 119.825 25.5059 120.396 cv
25.5059 120.99 25.3179 121.449 24.9497 121.772 cv
24.5811 122.095 24.0625 122.253 23.4009 122.253 cv
23.168 122.253 22.9351 122.23 22.6943 122.2 cv
22.4541 122.163 22.2134 122.11 21.958 122.027 cv
21.958 121.283 li
22.1758 121.403 22.4019 121.494 22.6421 121.554 cv
22.875 121.614 23.123 121.637 23.3862 121.637 cv
23.8071 121.637 24.145 121.531 24.3936 121.305 cv
24.6338 121.08 24.7617 120.779 24.7617 120.396 cv
24.7617 120.021 24.6338 119.719 24.3936 119.494 cv
24.145 119.269 23.8071 119.156 23.3862 119.156 cv
23.1909 119.156 22.9878 119.178 22.7925 119.224 cv
22.5972 119.269 22.394 119.336 22.1909 119.427 cv
22.1909 116.675 li
f
28.5498 117.164 mo
28.1665 117.164 27.8813 117.352 27.6855 117.728 cv
27.4902 118.104 27.4004 118.667 27.4004 119.419 cv
27.4004 120.17 27.4902 120.735 27.6855 121.11 cv
27.8813 121.486 28.1665 121.674 28.5498 121.674 cv
28.9336 121.674 29.2192 121.486 29.4146 121.11 cv
29.6025 120.735 29.7002 120.17 29.7002 119.419 cv
29.7002 118.667 29.6025 118.104 29.4146 117.728 cv
29.2192 117.352 28.9336 117.164 28.5498 117.164 cv
28.5498 116.578 mo
29.1592 116.578 29.625 116.826 29.9556 117.307 cv
30.2793 117.795 30.4443 118.502 30.4443 119.419 cv
30.4443 120.344 30.2793 121.05 29.9556 121.531 cv
29.625 122.012 29.1592 122.253 28.5498 122.253 cv
27.9336 122.253 27.46 122.012 27.1372 121.531 cv
26.8135 121.05 26.6558 120.344 26.6558 119.419 cv
26.6558 118.502 26.8135 117.795 27.1372 117.307 cv
27.46 116.826 27.9336 116.578 28.5498 116.578 cv
f
31.3193 107.007 mo
32.769 107.007 li
f
31.3193 107.007 mo
32.769 107.007 li
@
187.915 107.007 mo
186.465 107.007 li
f
187.915 107.007 mo
186.465 107.007 li
@
17.7686 108.481 mo
18.9785 108.481 li
18.9785 104.302 li
17.6636 104.565 li
17.6636 103.889 li
18.9717 103.625 li
19.7158 103.625 li
19.7158 108.481 li
20.9258 108.481 li
20.9258 109.105 li
17.7686 109.105 li
17.7686 108.481 li
cp
f
24.0073 104.115 mo
23.624 104.115 23.3389 104.302 23.1431 104.678 cv
22.9478 105.054 22.8579 105.618 22.8579 106.37 cv
22.8579 107.121 22.9478 107.685 23.1431 108.061 cv
23.3389 108.437 23.624 108.625 24.0073 108.625 cv
24.3911 108.625 24.6768 108.437 24.8721 108.061 cv
25.0601 107.685 25.1577 107.121 25.1577 106.37 cv
25.1577 105.618 25.0601 105.054 24.8721 104.678 cv
24.6768 104.302 24.3911 104.115 24.0073 104.115 cv
24.0073 103.528 mo
24.6167 103.528 25.0825 103.776 25.4131 104.257 cv
25.7368 104.746 25.9019 105.452 25.9019 106.37 cv
25.9019 107.294 25.7368 108 25.4131 108.481 cv
25.0825 108.962 24.6167 109.203 24.0073 109.203 cv
23.3911 109.203 22.9175 108.962 22.5947 108.481 cv
22.271 108 22.1133 107.294 22.1133 106.37 cv
22.1133 105.452 22.271 104.746 22.5947 104.257 cv
22.9175 103.776 23.3911 103.528 24.0073 103.528 cv
f
28.7881 104.115 mo
28.4048 104.115 28.1191 104.302 27.9238 104.678 cv
27.728 105.054 27.6382 105.618 27.6382 106.37 cv
27.6382 107.121 27.728 107.685 27.9238 108.061 cv
28.1191 108.437 28.4048 108.625 28.7881 108.625 cv
29.1714 108.625 29.457 108.437 29.6528 108.061 cv
29.8403 107.685 29.9385 107.121 29.9385 106.37 cv
29.9385 105.618 29.8403 105.054 29.6528 104.678 cv
29.457 104.302 29.1714 104.115 28.7881 104.115 cv
28.7881 103.528 mo
29.397 103.528 29.8628 103.776 30.1938 104.257 cv
30.5171 104.746 30.6826 105.452 30.6826 106.37 cv
30.6826 107.294 30.5171 108 30.1938 108.481 cv
29.8628 108.962 29.397 109.203 28.7881 109.203 cv
28.1719 109.203 27.6982 108.962 27.375 108.481 cv
27.0518 108 26.894 107.294 26.894 106.37 cv
26.894 105.452 27.0518 104.746 27.375 104.257 cv
27.6982 103.776 28.1719 103.528 28.7881 103.528 cv
f
31.3193 93.9575 mo
32.769 93.9575 li
f
31.3193 93.9575 mo
32.769 93.9575 li
@
187.915 93.9575 mo
186.465 93.9575 li
f
187.915 93.9575 mo
186.465 93.9575 li
@
17.7686 95.4316 mo
18.9785 95.4316 li
18.9785 91.2524 li
17.6636 91.5156 li
17.6636 90.8394 li
18.9717 90.5757 li
19.7158 90.5757 li
19.7158 95.4316 li
20.9258 95.4316 li
20.9258 96.0562 li
17.7686 96.0562 li
17.7686 95.4316 li
cp
f
22.4292 90.5762 mo
25.3379 90.5762 li
25.3379 91.2002 li
23.1055 91.2002 li
23.1055 92.5459 li
23.2109 92.5078 23.3237 92.478 23.4287 92.4629 cv
23.5342 92.4478 23.6465 92.4326 23.752 92.4326 cv
24.3608 92.4326 24.8418 92.606 25.2026 92.9365 cv
25.5635 93.2744 25.7441 93.7251 25.7441 94.2969 cv
25.7441 94.8906 25.5562 95.3491 25.1875 95.6729 cv
24.8193 95.9956 24.3008 96.1538 23.6392 96.1538 cv
23.4063 96.1538 23.1733 96.1309 22.9326 96.1006 cv
22.6924 96.0635 22.4517 96.0103 22.1958 95.9282 cv
22.1958 95.1841 li
22.4141 95.3042 22.6396 95.394 22.8799 95.4546 cv
23.1133 95.5146 23.3608 95.5376 23.624 95.5376 cv
24.0449 95.5376 24.3833 95.4321 24.6313 95.2061 cv
24.8721 94.9805 25 94.6802 25 94.2969 cv
25 93.9209 24.8721 93.6201 24.6313 93.395 cv
24.3833 93.1694 24.0449 93.0571 23.624 93.0571 cv
23.4287 93.0571 23.2261 93.0791 23.0303 93.1245 cv
22.835 93.1694 22.6318 93.2368 22.4292 93.3271 cv
22.4292 90.5762 li
f
28.7881 91.0649 mo
28.4048 91.0649 28.1191 91.2524 27.9238 91.6284 cv
27.728 92.0044 27.6382 92.5679 27.6382 93.3198 cv
27.6382 94.0713 27.728 94.6353 27.9238 95.0112 cv
28.1191 95.3867 28.4048 95.5747 28.7881 95.5747 cv
29.1714 95.5747 29.457 95.3867 29.6528 95.0112 cv
29.8403 94.6353 29.9385 94.0713 29.9385 93.3198 cv
29.9385 92.5679 29.8403 92.0044 29.6528 91.6284 cv
29.457 91.2524 29.1714 91.0649 28.7881 91.0649 cv
28.7881 90.4785 mo
29.397 90.4785 29.8628 90.7261 30.1938 91.2075 cv
30.5171 91.6958 30.6826 92.4023 30.6826 93.3198 cv
30.6826 94.2441 30.5171 94.9507 30.1938 95.4316 cv
29.8628 95.9126 29.397 96.1538 28.7881 96.1538 cv
28.1719 96.1538 27.6982 95.9126 27.375 95.4316 cv
27.0518 94.9507 26.894 94.2441 26.894 93.3198 cv
26.894 92.4023 27.0518 91.6958 27.375 91.2075 cv
27.6982 90.7261 28.1719 90.4785 28.7881 90.4785 cv
f
31.3193 80.9077 mo
32.769 80.9077 li
f
31.3193 80.9077 mo
32.769 80.9077 li
@
187.915 80.9077 mo
186.465 80.9077 li
f
187.915 80.9077 mo
186.465 80.9077 li
@
18.0024 82.3823 mo
20.5879 82.3823 li
20.5879 83.0063 li
17.1079 83.0063 li
17.1079 82.3823 li
17.3862 82.0967 17.7695 81.7056 18.2578 81.21 cv
18.7388 80.7212 19.0469 80.4053 19.1748 80.2627 cv
19.4155 79.9995 19.5806 79.7739 19.6714 79.5859 cv
19.7612 79.4058 19.814 79.2178 19.814 79.0371 cv
19.814 78.752 19.7085 78.5112 19.5059 78.3311 cv
19.3027 78.1504 19.0396 78.0527 18.709 78.0527 cv
18.4756 78.0527 18.228 78.0977 17.9722 78.1729 cv
17.7168 78.2554 17.4385 78.376 17.1455 78.541 cv
17.1455 77.7896 li
17.4458 77.6694 17.7246 77.5791 17.98 77.519 cv
18.2354 77.459 18.4756 77.4287 18.6938 77.4287 cv
19.2578 77.4287 19.7085 77.5718 20.0469 77.8569 cv
20.3853 78.1431 20.5581 78.5186 20.5581 78.9922 cv
20.5581 79.2178 20.5132 79.436 20.4302 79.6313 cv
20.3477 79.834 20.1973 80.0747 19.9717 80.3452 cv
19.9116 80.4204 19.7163 80.6235 19.3853 80.9614 cv
19.0547 81.3003 18.5962 81.7729 18.0024 82.3823 cv
f
23.73 78.0151 mo
23.3467 78.0151 23.061 78.2031 22.8657 78.5786 cv
22.6699 78.9546 22.5801 79.5181 22.5801 80.27 cv
22.5801 81.0215 22.6699 81.5854 22.8657 81.9609 cv
23.061 82.3369 23.3467 82.5249 23.73 82.5249 cv
24.1138 82.5249 24.3994 82.3369 24.5947 81.9609 cv
24.7822 81.5854 24.8804 81.0215 24.8804 80.27 cv
24.8804 79.5181 24.7822 78.9546 24.5947 78.5786 cv
24.3994 78.2031 24.1138 78.0151 23.73 78.0151 cv
23.73 77.4292 mo
24.3389 77.4292 24.8047 77.6768 25.1353 78.1577 cv
25.459 78.6465 25.6245 79.353 25.6245 80.27 cv
25.6245 81.1943 25.459 81.9009 25.1353 82.3818 cv
24.8047 82.8633 24.3389 83.104 23.73 83.104 cv
23.1138 83.104 22.6401 82.8633 22.3169 82.3818 cv
21.9937 81.9009 21.8354 81.1943 21.8354 80.27 cv
21.8354 79.353 21.9937 78.6465 22.3169 78.1577 cv
22.6401 77.6768 23.1138 77.4292 23.73 77.4292 cv
f
28.5107 78.0151 mo
28.1274 78.0151 27.8418 78.2031 27.6465 78.5786 cv
27.4507 78.9546 27.3608 79.5181 27.3608 80.27 cv
27.3608 81.0215 27.4507 81.5854 27.6465 81.9609 cv
27.8418 82.3369 28.1274 82.5249 28.5107 82.5249 cv
28.894 82.5249 29.1797 82.3369 29.375 81.9609 cv
29.563 81.5854 29.6606 81.0215 29.6606 80.27 cv
29.6606 79.5181 29.563 78.9546 29.375 78.5786 cv
29.1797 78.2031 28.894 78.0151 28.5107 78.0151 cv
28.5107 77.4292 mo
29.1196 77.4292 29.5854 77.6768 29.9165 78.1577 cv
30.2397 78.6465 30.4048 79.353 30.4048 80.27 cv
30.4048 81.1943 30.2397 81.9009 29.9165 82.3818 cv
29.5854 82.8633 29.1196 83.104 28.5107 83.104 cv
27.8945 83.104 27.4209 82.8633 27.0977 82.3818 cv
26.7744 81.9009 26.6167 81.1943 26.6167 80.27 cv
26.6167 79.353 26.7744 78.6465 27.0977 78.1577 cv
27.4209 77.6768 27.8945 77.4292 28.5107 77.4292 cv
f
31.3193 67.8579 mo
32.769 67.8579 li
f
31.3193 67.8579 mo
32.769 67.8579 li
@
187.915 67.8579 mo
186.465 67.8579 li
f
187.915 67.8579 mo
186.465 67.8579 li
@
18.0024 69.3325 mo
20.5879 69.3325 li
20.5879 69.9565 li
17.1079 69.9565 li
17.1079 69.3325 li
17.3862 69.0469 17.7695 68.6563 18.2578 68.1602 cv
18.7388 67.6714 19.0469 67.3555 19.1748 67.2129 cv
19.4155 66.9502 19.5806 66.7246 19.6714 66.5366 cv
19.7612 66.3564 19.814 66.168 19.814 65.9878 cv
19.814 65.7021 19.7085 65.4614 19.5059 65.2813 cv
19.3027 65.1011 19.0396 65.0029 18.709 65.0029 cv
18.4756 65.0029 18.228 65.0479 17.9722 65.1235 cv
17.7168 65.2061 17.4385 65.3267 17.1455 65.4917 cv
17.1455 64.7397 li
17.4458 64.6201 17.7246 64.5298 17.98 64.4692 cv
18.2354 64.4092 18.4756 64.3794 18.6938 64.3794 cv
19.2578 64.3794 19.7085 64.522 20.0469 64.8076 cv
20.3853 65.0933 20.5581 65.4692 20.5581 65.9429 cv
20.5581 66.168 20.5132 66.3862 20.4302 66.5815 cv
20.3477 66.7842 20.1973 67.0249 19.9717 67.2954 cv
19.9116 67.3706 19.7163 67.5737 19.3853 67.9121 cv
19.0547 68.2505 18.5962 68.7236 18.0024 69.3325 cv
f
22.1514 64.4771 mo
25.0605 64.4771 li
25.0605 65.1006 li
22.8281 65.1006 li
22.8281 66.4463 li
22.9336 66.4087 23.0464 66.3784 23.1514 66.3638 cv
23.2563 66.3486 23.3691 66.3335 23.4741 66.3335 cv
24.0835 66.3335 24.5645 66.5063 24.9248 66.8369 cv
25.2861 67.1753 25.4663 67.6265 25.4663 68.1978 cv
25.4663 68.7915 25.2783 69.25 24.9102 69.5732 cv
24.542 69.8965 24.0229 70.0542 23.3613 70.0542 cv
23.1289 70.0542 22.8955 70.0317 22.6553 70.0015 cv
22.4146 69.9639 22.1738 69.9116 21.9185 69.8286 cv
21.9185 69.0845 li
22.1362 69.2051 22.3623 69.2954 22.6025 69.3555 cv
22.8354 69.4155 23.0835 69.438 23.3467 69.438 cv
23.7676 69.438 24.106 69.333 24.354 69.1069 cv
24.5942 68.8813 24.7222 68.5811 24.7222 68.1978 cv
24.7222 67.8218 24.5942 67.521 24.354 67.2954 cv
24.106 67.0703 23.7676 66.9575 23.3467 66.9575 cv
23.1514 66.9575 22.9482 66.98 22.7529 67.0249 cv
22.5576 67.0703 22.3545 67.1377 22.1514 67.228 cv
22.1514 64.4771 li
f
28.5107 64.9653 mo
28.1274 64.9653 27.8418 65.1538 27.6465 65.5293 cv
27.4507 65.9048 27.3608 66.4688 27.3608 67.2202 cv
27.3608 67.9722 27.4507 68.5361 27.6465 68.9116 cv
27.8418 69.2876 28.1274 69.4756 28.5107 69.4756 cv
28.894 69.4756 29.1797 69.2876 29.375 68.9116 cv
29.563 68.5361 29.6606 67.9722 29.6606 67.2202 cv
29.6606 66.4688 29.563 65.9048 29.375 65.5293 cv
29.1797 65.1538 28.894 64.9653 28.5107 64.9653 cv
28.5107 64.3794 mo
29.1196 64.3794 29.5854 64.6274 29.9165 65.1084 cv
30.2397 65.5972 30.4048 66.3032 30.4048 67.2202 cv
30.4048 68.145 30.2397 68.8516 29.9165 69.3325 cv
29.5854 69.814 29.1196 70.0542 28.5107 70.0542 cv
27.8945 70.0542 27.4209 69.814 27.0977 69.3325 cv
26.7744 68.8516 26.6167 68.145 26.6167 67.2202 cv
26.6167 66.3032 26.7744 65.5972 27.0977 65.1084 cv
27.4209 64.6274 27.8945 64.3794 28.5107 64.3794 cv
f
31.3193 54.8086 mo
32.769 54.8086 li
f
31.3193 54.8086 mo
32.769 54.8086 li
@
187.915 54.8086 mo
186.465 54.8086 li
f
187.915 54.8086 mo
186.465 54.8086 li
@
19.6338 53.9526 mo
19.9868 54.0283 20.2651 54.186 20.4604 54.4263 cv
20.6558 54.667 20.7607 54.9673 20.7607 55.3135 cv
20.7607 55.8545 20.5732 56.2754 20.2051 56.5688 cv
19.8291 56.8618 19.3027 57.0044 18.6191 57.0044 cv
18.3857 57.0044 18.145 56.9819 17.9043 56.937 cv
17.6641 56.8989 17.4087 56.8315 17.1533 56.7417 cv
17.1533 56.0273 li
17.356 56.1479 17.5815 56.2378 17.8296 56.2983 cv
18.0703 56.3584 18.3257 56.3882 18.5962 56.3882 cv
19.0625 56.3882 19.4155 56.2983 19.6563 56.1177 cv
19.897 55.937 20.0244 55.6665 20.0244 55.3135 cv
20.0244 54.9976 19.9116 54.7422 19.686 54.562 cv
19.4609 54.3813 19.145 54.2837 18.7388 54.2837 cv
18.1001 54.2837 li
18.1001 53.6748 li
18.769 53.6748 li
19.1299 53.6748 19.4082 53.6069 19.6035 53.4565 cv
19.7988 53.314 19.897 53.1035 19.897 52.8257 cv
19.897 52.5474 19.7915 52.3291 19.5957 52.1787 cv
19.3931 52.0283 19.1074 51.9536 18.7388 51.9536 cv
18.5361 51.9536 18.3184 51.9761 18.0854 52.021 cv
17.8521 52.0659 17.5962 52.1338 17.3184 52.2236 cv
17.3184 51.5625 li
17.5962 51.4878 17.8594 51.4272 18.1079 51.3896 cv
18.3481 51.3521 18.5811 51.3296 18.8066 51.3296 cv
19.3628 51.3296 19.8066 51.4575 20.1372 51.7129 cv
20.4683 51.9688 20.6333 52.314 20.6333 52.75 cv
20.6333 53.0508 20.543 53.3066 20.3701 53.5166 cv
20.1973 53.7275 19.9492 53.8774 19.6338 53.9526 cv
f
23.7529 51.9155 mo
23.3691 51.9155 23.084 52.104 22.8882 52.4795 cv
22.6929 52.8555 22.603 53.4189 22.603 54.1709 cv
22.603 54.9224 22.6929 55.4863 22.8882 55.8623 cv
23.084 56.2378 23.3691 56.4258 23.7529 56.4258 cv
24.1362 56.4258 24.4219 56.2378 24.6172 55.8623 cv
24.8052 55.4863 24.9028 54.9224 24.9028 54.1709 cv
24.9028 53.4189 24.8052 52.8555 24.6172 52.4795 cv
24.4219 52.104 24.1362 51.9155 23.7529 51.9155 cv
23.7529 51.3296 mo
24.3618 51.3296 24.8276 51.5776 25.1582 52.0586 cv
25.4819 52.5474 25.647 53.2539 25.647 54.1709 cv
25.647 55.0952 25.4819 55.8022 25.1582 56.2832 cv
24.8276 56.7642 24.3618 57.0049 23.7529 57.0049 cv
23.1362 57.0049 22.6626 56.7642 22.3398 56.2832 cv
22.0166 55.8022 21.8584 55.0952 21.8584 54.1709 cv
21.8584 53.2539 22.0166 52.5474 22.3398 52.0586 cv
22.6626 51.5776 23.1362 51.3296 23.7529 51.3296 cv
f
28.5332 51.9155 mo
28.1499 51.9155 27.8643 52.104 27.6689 52.4795 cv
27.4731 52.8555 27.3833 53.4189 27.3833 54.1709 cv
27.3833 54.9224 27.4731 55.4863 27.6689 55.8623 cv
27.8643 56.2378 28.1499 56.4258 28.5332 56.4258 cv
28.9165 56.4258 29.2021 56.2378 29.3979 55.8623 cv
29.5854 55.4863 29.6836 54.9224 29.6836 54.1709 cv
29.6836 53.4189 29.5854 52.8555 29.3979 52.4795 cv
29.2021 52.104 28.9165 51.9155 28.5332 51.9155 cv
28.5332 51.3296 mo
29.1421 51.3296 29.6079 51.5776 29.939 52.0586 cv
30.2622 52.5474 30.4277 53.2539 30.4277 54.1709 cv
30.4277 55.0952 30.2622 55.8022 29.939 56.2832 cv
29.6079 56.7642 29.1421 57.0049 28.5332 57.0049 cv
27.917 57.0049 27.4434 56.7642 27.1201 56.2832 cv
26.7969 55.8022 26.6392 55.0952 26.6392 54.1709 cv
26.6392 53.2539 26.7969 52.5474 27.1201 52.0586 cv
27.4434 51.5776 27.917 51.3296 28.5332 51.3296 cv
f
31.3193 41.7588 mo
32.769 41.7588 li
f
31.3193 41.7588 mo
32.769 41.7588 li
@
187.915 41.7588 mo
186.465 41.7588 li
f
187.915 41.7588 mo
186.465 41.7588 li
@
19.6338 40.9033 mo
19.9868 40.9785 20.2651 41.1362 20.4604 41.3765 cv
20.6558 41.6172 20.7607 41.918 20.7607 42.2637 cv
20.7607 42.8047 20.5732 43.2256 20.2051 43.519 cv
19.8291 43.812 19.3027 43.9551 18.6191 43.9551 cv
18.3857 43.9551 18.145 43.9321 17.9043 43.8872 cv
17.6641 43.8496 17.4087 43.7822 17.1533 43.6919 cv
17.1533 42.9775 li
17.356 43.0981 17.5815 43.1885 17.8296 43.2485 cv
18.0703 43.3086 18.3257 43.3384 18.5962 43.3384 cv
19.0625 43.3384 19.4155 43.2485 19.6563 43.0679 cv
19.897 42.8877 20.0244 42.6172 20.0244 42.2637 cv
20.0244 41.9478 19.9116 41.6924 19.686 41.5122 cv
19.4609 41.3315 19.145 41.2339 18.7388 41.2339 cv
18.1001 41.2339 li
18.1001 40.625 li
18.769 40.625 li
19.1299 40.625 19.4082 40.5571 19.6035 40.4067 cv
19.7988 40.2642 19.897 40.0537 19.897 39.7759 cv
19.897 39.498 19.7915 39.2798 19.5957 39.1294 cv
19.3931 38.979 19.1074 38.9038 18.7388 38.9038 cv
18.5361 38.9038 18.3184 38.9263 18.0854 38.9717 cv
17.8521 39.0166 17.5962 39.0845 17.3184 39.1743 cv
17.3184 38.5132 li
17.5962 38.438 17.8594 38.3779 18.1079 38.3398 cv
18.3481 38.3022 18.5811 38.2798 18.8066 38.2798 cv
19.3628 38.2798 19.8066 38.4077 20.1372 38.6636 cv
20.4683 38.9189 20.6333 39.2642 20.6333 39.7007 cv
20.6333 40.0015 20.543 40.2568 20.3701 40.4673 cv
20.1973 40.6777 19.9492 40.8276 19.6338 40.9033 cv
f
22.1743 38.3774 mo
25.083 38.3774 li
25.083 39.0015 li
22.8506 39.0015 li
22.8506 40.3472 li
22.9561 40.3096 23.0688 40.2793 23.1738 40.2642 cv
23.2793 40.249 23.3916 40.2344 23.4971 40.2344 cv
24.106 40.2344 24.5869 40.4072 24.9478 40.7378 cv
25.3086 41.0762 25.4893 41.5269 25.4893 42.0981 cv
25.4893 42.6919 25.3013 43.1504 24.9326 43.4741 cv
24.5645 43.7974 24.0459 43.9551 23.3843 43.9551 cv
23.1514 43.9551 22.9185 43.9326 22.6777 43.9023 cv
22.4375 43.8647 22.1968 43.812 21.9409 43.7295 cv
21.9409 42.9854 li
22.1592 43.1055 22.3848 43.1958 22.625 43.2559 cv
22.8584 43.3164 23.106 43.3389 23.3691 43.3389 cv
23.79 43.3389 24.1284 43.2334 24.377 43.0078 cv
24.6172 42.7822 24.7451 42.4819 24.7451 42.0981 cv
24.7451 41.7227 24.6172 41.4219 24.377 41.1963 cv
24.1284 40.9712 23.79 40.8579 23.3691 40.8579 cv
23.1738 40.8579 22.9712 40.8809 22.7754 40.9258 cv
22.5801 40.9712 22.3774 41.0386 22.1743 41.1284 cv
22.1743 38.3774 li
f
28.5332 38.8662 mo
28.1499 38.8662 27.8643 39.0542 27.6689 39.4297 cv
27.4731 39.8057 27.3833 40.3696 27.3833 41.1211 cv
27.3833 41.8726 27.4731 42.4365 27.6689 42.8125 cv
27.8643 43.188 28.1499 43.3765 28.5332 43.3765 cv
28.9165 43.3765 29.2021 43.188 29.3979 42.8125 cv
29.5854 42.4365 29.6836 41.8726 29.6836 41.1211 cv
29.6836 40.3696 29.5854 39.8057 29.3979 39.4297 cv
29.2021 39.0542 28.9165 38.8662 28.5332 38.8662 cv
28.5332 38.2798 mo
29.1421 38.2798 29.6079 38.5278 29.939 39.0088 cv
30.2622 39.4976 30.4277 40.2041 30.4277 41.1211 cv
30.4277 42.0454 30.2622 42.7524 29.939 43.2334 cv
29.6079 43.7144 29.1421 43.9551 28.5332 43.9551 cv
27.917 43.9551 27.4434 43.7144 27.1201 43.2334 cv
26.7969 42.7524 26.6392 42.0454 26.6392 41.1211 cv
26.6392 40.2041 26.7969 39.4976 27.1201 39.0088 cv
27.4434 38.5278 27.917 38.2798 28.5332 38.2798 cv
f
31.3193 28.709 mo
32.769 28.709 li
f
31.3193 28.709 mo
32.769 28.709 li
@
187.915 28.709 mo
186.465 28.709 li
f
187.915 28.709 mo
186.465 28.709 li
@
19.2192 25.9746 mo
17.3472 28.8984 li
19.2192 28.8984 li
19.2192 25.9746 li
19.0239 25.3281 mo
19.9561 25.3281 li
19.9561 28.8984 li
20.7373 28.8984 li
20.7373 29.5151 li
19.9561 29.5151 li
19.9561 30.8076 li
19.2192 30.8076 li
19.2192 29.5151 li
16.7461 29.5151 li
16.7461 28.8008 li
19.0239 25.3281 li
cp
f
23.5488 25.8164 mo
23.165 25.8164 22.8799 26.0044 22.6841 26.3804 cv
22.4888 26.7563 22.3989 27.3198 22.3989 28.0718 cv
22.3989 28.8228 22.4888 29.3872 22.6841 29.7632 cv
22.8799 30.1387 23.165 30.3267 23.5488 30.3267 cv
23.9321 30.3267 24.2178 30.1387 24.4131 29.7632 cv
24.6011 29.3872 24.6987 28.8228 24.6987 28.0718 cv
24.6987 27.3198 24.6011 26.7563 24.4131 26.3804 cv
24.2178 26.0044 23.9321 25.8164 23.5488 25.8164 cv
23.5488 25.2305 mo
24.1577 25.2305 24.6235 25.4785 24.9541 25.9595 cv
25.2778 26.4478 25.4434 27.1543 25.4434 28.0718 cv
25.4434 28.9961 25.2778 29.7026 24.9541 30.1836 cv
24.6235 30.6646 24.1577 30.9058 23.5488 30.9058 cv
22.9326 30.9058 22.459 30.6646 22.1357 30.1836 cv
21.8125 29.7026 21.6543 28.9961 21.6543 28.0718 cv
21.6543 27.1543 21.8125 26.4478 22.1357 25.9595 cv
22.459 25.4785 22.9326 25.2305 23.5488 25.2305 cv
f
28.3291 25.8164 mo
27.9463 25.8164 27.6606 26.0044 27.4653 26.3804 cv
27.2695 26.7563 27.1797 27.3198 27.1797 28.0718 cv
27.1797 28.8228 27.2695 29.3872 27.4653 29.7632 cv
27.6606 30.1387 27.9463 30.3267 28.3291 30.3267 cv
28.7129 30.3267 28.9985 30.1387 29.1938 29.7632 cv
29.3818 29.3872 29.4795 28.8228 29.4795 28.0718 cv
29.4795 27.3198 29.3818 26.7563 29.1938 26.3804 cv
28.9985 26.0044 28.7129 25.8164 28.3291 25.8164 cv
28.3291 25.2305 mo
28.9385 25.2305 29.4043 25.4785 29.7349 25.9595 cv
30.0586 26.4478 30.2236 27.1543 30.2236 28.0718 cv
30.2236 28.9961 30.0586 29.7026 29.7349 30.1836 cv
29.4043 30.6646 28.9385 30.9058 28.3291 30.9058 cv
27.7129 30.9058 27.2397 30.6646 26.9165 30.1836 cv
26.5928 29.7026 26.4351 28.9961 26.4351 28.0718 cv
26.4351 27.1543 26.5928 26.4478 26.9165 25.9595 cv
27.2397 25.4785 27.7129 25.2305 28.3291 25.2305 cv
f
31.3193 15.6597 mo
32.769 15.6597 li
f
31.3193 15.6597 mo
32.769 15.6597 li
@
187.915 15.6597 mo
186.465 15.6597 li
f
187.915 15.6597 mo
186.465 15.6597 li
@
19.2192 12.9248 mo
17.3472 15.8486 li
19.2192 15.8486 li
19.2192 12.9248 li
19.0239 12.2783 mo
19.9561 12.2783 li
19.9561 15.8486 li
20.7373 15.8486 li
20.7373 16.4653 li
19.9561 16.4653 li
19.9561 17.7578 li
19.2192 17.7578 li
19.2192 16.4653 li
16.7461 16.4653 li
16.7461 15.751 li
19.0239 12.2783 li
cp
f
21.9702 12.2783 mo
24.8794 12.2783 li
24.8794 12.9023 li
22.6465 12.9023 li
22.6465 14.2476 li
22.7524 14.21 22.8647 14.1802 22.9702 14.165 cv
23.0752 14.1499 23.188 14.1353 23.293 14.1353 cv
23.9019 14.1353 24.3828 14.3081 24.7437 14.6387 cv
25.105 14.9766 25.2852 15.4277 25.2852 15.999 cv
25.2852 16.5928 25.0972 17.0513 24.729 17.3745 cv
24.3604 17.6978 23.8418 17.8555 23.1802 17.8555 cv
22.9478 17.8555 22.7144 17.833 22.4736 17.8032 cv
22.2334 17.7651 21.9927 17.7129 21.7373 17.6304 cv
21.7373 16.8862 li
21.9551 17.0063 22.1812 17.0967 22.4214 17.1567 cv
22.6543 17.2168 22.9023 17.2393 23.1655 17.2393 cv
23.5864 17.2393 23.9243 17.1343 24.1729 16.9087 cv
24.4131 16.6831 24.541 16.3823 24.541 15.999 cv
24.541 15.6235 24.4131 15.3228 24.1729 15.0972 cv
23.9243 14.8716 23.5864 14.7588 23.1655 14.7588 cv
22.9702 14.7588 22.7671 14.7813 22.5718 14.8262 cv
22.3765 14.8716 22.1733 14.939 21.9702 15.0293 cv
21.9702 12.2783 li
f
28.3291 12.7671 mo
27.9463 12.7671 27.6606 12.9551 27.4653 13.3306 cv
27.2695 13.7065 27.1797 14.27 27.1797 15.022 cv
27.1797 15.7734 27.2695 16.3374 27.4653 16.7134 cv
27.6606 17.0889 27.9463 17.2769 28.3291 17.2769 cv
28.7129 17.2769 28.9985 17.0889 29.1938 16.7134 cv
29.3818 16.3374 29.4795 15.7734 29.4795 15.022 cv
29.4795 14.27 29.3818 13.7065 29.1938 13.3306 cv
28.9985 12.9551 28.7129 12.7671 28.3291 12.7671 cv
28.3291 12.1807 mo
28.9385 12.1807 29.4043 12.4287 29.7349 12.9097 cv
30.0586 13.3984 30.2236 14.105 30.2236 15.022 cv
30.2236 15.9463 30.0586 16.6533 29.7349 17.1343 cv
29.4043 17.6152 28.9385 17.856 28.3291 17.856 cv
27.7129 17.856 27.2397 17.6152 26.9165 17.1343 cv
26.5928 16.6533 26.4351 15.9463 26.4351 15.022 cv
26.4351 14.105 26.5928 13.3984 26.9165 12.9097 cv
27.2397 12.4287 27.7129 12.1807 28.3291 12.1807 cv
f
3.5127 106.403 mo
3.5127 102.938 li
4.13672 102.938 li
4.13672 105.659 li
5.76025 105.659 li
5.76025 103.051 li
6.38379 103.051 li
6.38379 105.659 li
8.36816 105.659 li
8.36816 102.871 li
8.99219 102.871 li
8.99219 106.403 li
3.5127 106.403 li
cp
f
3.27979 101.006 mo
8.99219 101.006 li
8.99219 101.683 li
3.27979 101.683 li
3.27979 101.006 li
cp
f
6.76758 96.0757 mo
7.09814 96.0757 li
7.09814 99.1797 li
7.56396 99.1494 7.9248 99.0142 8.16553 98.7588 cv
8.40625 98.5107 8.52637 98.1655 8.52637 97.7144 cv
8.52637 97.4585 8.49609 97.2031 8.43604 96.9624 cv
8.37598 96.7222 8.27832 96.4741 8.14258 96.2339 cv
8.78174 96.2339 li
8.88721 96.4741 8.96973 96.7222 9.01465 96.9775 cv
9.05957 97.2329 9.08984 97.4961 9.08984 97.752 cv
9.08984 98.4131 8.90186 98.9321 8.52637 99.3154 cv
8.15039 99.6982 7.63184 99.8867 6.97803 99.8867 cv
6.30859 99.8867 5.77539 99.7065 5.37695 99.3452 cv
4.98584 98.9844 4.78271 98.4883 4.78271 97.8721 cv
4.78271 97.3159 4.96338 96.8799 5.31689 96.5566 cv
5.67725 96.2407 6.1582 96.0757 6.76758 96.0757 cv
6.57178 96.752 mo
6.20361 96.7598 5.91064 96.8647 5.68506 97.0601 cv
5.46729 97.2632 5.35449 97.5337 5.35449 97.8647 cv
5.35449 98.2407 5.46729 98.541 5.67725 98.7666 cv
5.8877 98.9917 6.18848 99.1274 6.57178 99.1577 cv
6.57178 96.752 li
f
5.66992 91.7686 mo
5.36914 91.6035 5.15137 91.3999 5.00098 91.1675 cv
4.85791 90.9341 4.78271 90.6563 4.78271 90.333 cv
4.78271 89.9121 4.93359 89.5815 5.23389 89.3481 cv
5.53418 89.1152 5.96338 88.9951 6.51172 88.9951 cv
8.99219 88.9951 li
8.99219 89.6714 li
6.53418 89.6714 li
6.14355 89.6714 5.85059 89.7466 5.65479 89.8818 cv
5.4668 90.0249 5.36914 90.2354 5.36914 90.521 cv
5.36914 90.874 5.48926 91.1523 5.72266 91.355 cv
5.95557 91.5581 6.27148 91.6558 6.66992 91.6558 cv
8.99219 91.6558 li
8.99219 92.3325 li
6.53418 92.3325 li
6.14355 92.3325 5.85059 92.4077 5.65479 92.543 cv
5.4668 92.6855 5.36914 92.9038 5.36914 93.189 cv
5.36914 93.5352 5.48926 93.813 5.72266 94.0161 cv
5.95557 94.2192 6.27148 94.3164 6.66992 94.3164 cv
8.99219 94.3164 li
8.99219 94.9932 li
4.88086 94.9932 li
4.88086 94.3164 li
5.51953 94.3164 li
5.27148 94.166 5.0835 93.9785 4.96338 93.7603 cv
4.84326 93.5498 4.78271 93.2944 4.78271 92.9937 cv
4.78271 92.6934 4.85791 92.4448 5.0083 92.2344 cv
5.15869 92.0239 5.38428 91.8735 5.66992 91.7686 cv
f
6.76758 84.1313 mo
7.09814 84.1313 li
7.09814 87.2358 li
7.56396 87.2056 7.9248 87.0708 8.16553 86.8149 cv
8.40625 86.5669 8.52637 86.2212 8.52637 85.7705 cv
8.52637 85.5146 8.49609 85.2588 8.43604 85.0186 cv
8.37598 84.7778 8.27832 84.5303 8.14258 84.2896 cv
8.78174 84.2896 li
8.88721 84.5303 8.96973 84.7778 9.01465 85.0337 cv
9.05957 85.2891 9.08984 85.5522 9.08984 85.8076 cv
9.08984 86.4692 8.90186 86.9878 8.52637 87.3716 cv
8.15039 87.7544 7.63184 87.9429 6.97803 87.9429 cv
6.30859 87.9429 5.77539 87.7622 5.37695 87.4014 cv
4.98584 87.0405 4.78271 86.5444 4.78271 85.9282 cv
4.78271 85.3721 4.96338 84.936 5.31689 84.6128 cv
5.67725 84.2974 6.1582 84.1313 6.76758 84.1313 cv
6.57178 84.8081 mo
6.20361 84.8159 5.91064 84.9209 5.68506 85.1167 cv
5.46729 85.3188 5.35449 85.5898 5.35449 85.9209 cv
5.35449 86.2969 5.46729 86.5972 5.67725 86.8228 cv
5.8877 87.0483 6.18848 87.1831 6.57178 87.2134 cv
6.57178 84.8081 li
f
6.51172 79.6069 mo
8.99219 79.6069 li
8.99219 80.2832 li
6.53418 80.2832 li
6.14355 80.2832 5.85791 80.3657 5.6626 80.5161 cv
5.46729 80.6665 5.36914 80.8921 5.36914 81.1929 cv
5.36914 81.561 5.48975 81.8467 5.72266 82.0571 cv
5.95557 82.2676 6.271 82.373 6.66992 82.373 cv
8.99219 82.373 li
8.99219 83.0493 li
4.88037 83.0493 li
4.88037 82.373 li
5.51953 82.373 li
5.27881 82.2148 5.09131 82.0273 4.9707 81.8018 cv
4.85059 81.5835 4.78271 81.3276 4.78271 81.0425 cv
4.78271 80.5767 4.93359 80.2158 5.22656 79.9751 cv
5.51953 79.7349 5.94824 79.6069 6.51172 79.6069 cv
f
3.71533 77.5923 mo
4.88037 77.5923 li
4.88037 76.2017 li
5.40674 76.2017 li
5.40674 77.5923 li
7.63916 77.5923 li
7.97754 77.5923 8.19531 77.5469 8.28564 77.4565 cv
8.3833 77.3667 8.42822 77.1787 8.42822 76.8931 cv
8.42822 76.2017 li
8.99219 76.2017 li
8.99219 76.8931 li
8.99219 77.4194 8.89453 77.7803 8.69922 77.9756 cv
8.50391 78.1714 8.15039 78.2686 7.63916 78.2686 cv
5.40674 78.2686 li
5.40674 78.7646 li
4.88037 78.7646 li
4.88037 78.2686 li
3.71533 78.2686 li
3.71533 77.5923 li
f
6.92529 73.4429 mo
6.92529 73.9917 6.99316 74.3677 7.11279 74.5781 cv
7.24072 74.7886 7.45117 74.8936 7.75195 74.8936 cv
7.99219 74.8936 8.18799 74.8184 8.32324 74.6606 cv
8.46582 74.5029 8.53418 74.2847 8.53418 74.0142 cv
8.53418 73.6382 8.40576 73.3374 8.13525 73.1123 cv
7.87256 72.8867 7.51904 72.7739 7.07568 72.7739 cv
6.92529 72.7739 li
6.92529 73.4429 li
6.64697 72.0977 mo
8.99219 72.0977 li
8.99219 72.7739 li
8.36816 72.7739 li
8.62402 72.9321 8.8042 73.1274 8.91699 73.353 cv
9.02979 73.5781 9.08984 73.8638 9.08984 74.1948 cv
9.08984 74.6157 8.97705 74.9541 8.74414 75.2017 cv
8.51123 75.4502 8.19531 75.5703 7.79688 75.5703 cv
7.33838 75.5703 6.99316 75.4199 6.75244 75.1045 cv
6.51904 74.7959 6.39893 74.3379 6.39893 73.7212 cv
6.39893 72.7739 li
6.33154 72.7739 li
6.02344 72.7739 5.78271 72.8794 5.60986 73.0825 cv
5.44434 73.2852 5.354 73.5708 5.354 73.9395 cv
5.354 74.1797 5.38428 74.4053 5.44434 74.6304 cv
5.50439 74.856 5.5874 75.0669 5.69238 75.2695 cv
5.06836 75.2695 li
4.97852 75.0288 4.90332 74.7886 4.85791 74.5557 cv
4.81299 74.3223 4.78271 74.0972 4.78271 73.8716 cv
4.78271 73.2778 4.94043 72.834 5.24854 72.541 cv
5.55713 72.248 6.02344 72.0977 6.64697 72.0977 cv
f
5.51221 68.3242 mo
5.4668 68.3994 5.43652 68.4819 5.41406 68.5723 cv
5.39941 68.6626 5.38428 68.7603 5.38428 68.8652 cv
5.38428 69.249 5.51221 69.5415 5.76025 69.7446 cv
6.0083 69.9556 6.36133 70.0532 6.82764 70.0532 cv
8.99219 70.0532 li
8.99219 70.7295 li
4.88086 70.7295 li
4.88086 70.0532 li
5.51953 70.0532 li
5.27148 69.9175 5.0835 69.73 4.96338 69.5044 cv
4.84277 69.2788 4.78271 69.001 4.78271 68.6699 cv
4.78271 68.625 4.79053 68.5723 4.79053 68.5122 cv
4.79785 68.4595 4.80566 68.3994 4.82031 68.3242 cv
5.51221 68.3242 li
f
9.36816 65.9038 mo
9.84912 66.0991 10.1724 66.2876 10.3228 66.4673 cv
10.4731 66.6479 10.5479 66.8882 10.5479 67.1895 cv
10.5479 67.7305 li
9.98438 67.7305 li
9.98438 67.332 li
9.98438 67.1514 9.93945 67.0088 9.84912 66.9038 cv
9.75879 66.7983 9.55566 66.686 9.2251 66.5576 cv
8.92432 66.4375 li
4.88086 68.0986 li
4.88086 67.3848 li
8.09814 66.0991 li
4.88086 64.814 li
4.88086 64.0996 li
9.36816 65.9038 li
f
5.00098 58.1543 mo
5.64014 58.1543 li
5.5498 58.3496 5.47412 58.5454 5.42188 58.748 cv
5.37695 58.959 5.34668 59.1689 5.34668 59.3867 cv
5.34668 59.7251 5.39941 59.981 5.50439 60.1465 cv
5.60986 60.3115 5.75977 60.394 5.96289 60.394 cv
6.12109 60.394 6.24121 60.334 6.33105 60.2144 cv
6.42139 60.0938 6.51172 59.853 6.58691 59.4922 cv
6.63965 59.2593 li
6.74463 58.7783 6.89551 58.4399 7.0752 58.2368 cv
7.26367 58.0415 7.52637 57.936 7.85742 57.936 cv
8.24023 57.936 8.5415 58.0864 8.75928 58.3877 cv
8.98486 58.688 9.08984 59.1089 9.08984 59.6353 cv
9.08984 59.8608 9.06738 60.0859 9.02979 60.3267 cv
8.99219 60.5669 8.93213 60.8149 8.8418 61.0781 cv
8.14258 61.0781 li
8.27832 60.8306 8.37598 60.5825 8.43604 60.3418 cv
8.50342 60.1016 8.53369 59.8608 8.53369 59.6201 cv
8.53369 59.3042 8.48096 59.0562 8.37598 58.8833 cv
8.27051 58.7183 8.11279 58.6279 7.90967 58.6279 cv
7.72949 58.6279 7.58643 58.6958 7.48926 58.8159 cv
7.39111 58.936 7.29346 59.2065 7.20361 59.6274 cv
7.15088 59.8608 li
7.06055 60.2817 6.92529 60.5898 6.74463 60.77 cv
6.56445 60.958 6.31641 61.0483 5.99316 61.0483 cv
5.60986 61.0483 5.30908 60.9131 5.09863 60.6421 cv
4.88818 60.3716 4.78271 59.981 4.78271 59.4697 cv
4.78271 59.2217 4.80566 58.9888 4.84277 58.7632 cv
4.88037 58.5454 4.93311 58.3423 5.00098 58.1543 cv
f
3.71533 56.1924 mo
4.88037 56.1924 li
4.88037 54.8022 li
5.40674 54.8022 li
5.40674 56.1924 li
7.63916 56.1924 li
7.97754 56.1924 8.19531 56.1475 8.28564 56.0571 cv
8.3833 55.9673 8.42822 55.7788 8.42822 55.4932 cv
8.42822 54.8022 li
8.99219 54.8022 li
8.99219 55.4932 li
8.99219 56.0195 8.89453 56.3809 8.69922 56.5762 cv
8.50391 56.7715 8.15039 56.8691 7.63916 56.8691 cv
5.40674 56.8691 li
5.40674 57.3652 li
4.88037 57.3652 li
4.88037 56.8691 li
3.71533 56.8691 li
3.71533 56.1924 li
f
6.76758 50.3975 mo
7.09814 50.3975 li
7.09814 53.5015 li
7.56396 53.4717 7.9248 53.3359 8.16553 53.0806 cv
8.40625 52.8325 8.52637 52.4868 8.52637 52.0361 cv
8.52637 51.7803 8.49609 51.5249 8.43604 51.2842 cv
8.37598 51.0435 8.27832 50.7959 8.14258 50.5552 cv
8.78174 50.5552 li
8.88721 50.7959 8.96973 51.0435 9.01465 51.2993 cv
9.05957 51.5547 9.08984 51.8179 9.08984 52.0737 cv
9.08984 52.7349 8.90186 53.2534 8.52637 53.6367 cv
8.15039 54.0205 7.63184 54.208 6.97803 54.208 cv
6.30859 54.208 5.77539 54.0278 5.37695 53.667 cv
4.98584 53.3062 4.78271 52.8101 4.78271 52.1938 cv
4.78271 51.6372 4.96338 51.2017 5.31689 50.8784 cv
5.67725 50.5625 6.1582 50.3975 6.76758 50.3975 cv
6.57178 51.0737 mo
6.20361 51.0815 5.91064 51.1865 5.68506 51.3818 cv
5.46729 51.585 5.35449 51.855 5.35449 52.186 cv
5.35449 52.562 5.46729 52.8628 5.67725 53.0879 cv
5.8877 53.3135 6.18848 53.4492 6.57178 53.479 cv
6.57178 51.0737 li
f
8.37598 48.6382 mo
10.5483 48.6382 li
10.5483 49.3149 li
4.88086 49.3149 li
4.88086 48.6382 li
5.50439 48.6382 li
5.26367 48.5029 5.0835 48.3228 4.96338 48.105 cv
4.84326 47.8867 4.78271 47.6235 4.78271 47.3228 cv
4.78271 46.8271 4.98584 46.4209 5.37646 46.1055 cv
5.7749 45.7974 6.29395 45.6396 6.94043 45.6396 cv
7.58691 45.6396 8.11279 45.7974 8.50391 46.1055 cv
8.89453 46.4209 9.08984 46.8271 9.08984 47.3228 cv
9.08984 47.6235 9.02979 47.8867 8.91699 48.105 cv
8.8042 48.3228 8.62402 48.5029 8.37598 48.6382 cv
6.94043 46.3384 mo
6.44434 46.3384 6.06055 46.4434 5.7749 46.6465 cv
5.48926 46.8569 5.34668 47.1353 5.34668 47.4888 cv
5.34668 47.8491 5.48926 48.1274 5.7749 48.3301 cv
6.06055 48.5405 6.44434 48.6382 6.94043 48.6382 cv
7.43652 48.6382 7.82715 48.5405 8.11279 48.3301 cv
8.39844 48.1274 8.53418 47.8491 8.53418 47.4888 cv
8.53418 47.1353 8.39844 46.8569 8.11279 46.6465 cv
7.82715 46.4434 7.43652 46.3384 6.94043 46.3384 cv
f
5.00098 41.896 mo
5.64014 41.896 li
5.5498 42.0913 5.47412 42.2871 5.42188 42.4897 cv
5.37695 42.7002 5.34668 42.9106 5.34668 43.1289 cv
5.34668 43.4673 5.39941 43.7227 5.50439 43.8877 cv
5.60986 44.0532 5.75977 44.1357 5.96289 44.1357 cv
6.12109 44.1357 6.24121 44.0762 6.33105 43.9556 cv
6.42139 43.8354 6.51172 43.5952 6.58691 43.2339 cv
6.63965 43.001 li
6.74463 42.52 6.89551 42.1816 7.0752 41.9785 cv
7.26367 41.7832 7.52637 41.6782 7.85742 41.6782 cv
8.24023 41.6782 8.5415 41.8281 8.75928 42.1289 cv
8.98486 42.4297 9.08984 42.8506 9.08984 43.377 cv
9.08984 43.6021 9.06738 43.8276 9.02979 44.0684 cv
8.99219 44.3086 8.93213 44.5571 8.8418 44.8198 cv
8.14258 44.8198 li
8.27832 44.5718 8.37598 44.3237 8.43604 44.0835 cv
8.50342 43.8428 8.53369 43.6021 8.53369 43.3618 cv
8.53369 43.0464 8.48096 42.7979 8.37598 42.6255 cv
8.27051 42.4595 8.11279 42.3696 7.90967 42.3696 cv
7.72949 42.3696 7.58643 42.437 7.48926 42.5576 cv
7.39111 42.6777 7.29346 42.9482 7.20361 43.3691 cv
7.15088 43.6021 li
7.06055 44.0234 6.92529 44.3315 6.74463 44.5117 cv
6.56445 44.6997 6.31641 44.7896 5.99316 44.7896 cv
5.60986 44.7896 5.30908 44.6548 5.09863 44.3843 cv
4.88818 44.1133 4.78271 43.7227 4.78271 43.2114 cv
4.78271 42.9634 4.80566 42.7305 4.84277 42.5049 cv
4.88037 42.2871 4.93311 42.084 5.00098 41.896 cv
f
.36249 lw
187.915 133.106 mo
187.915 15.6597 li
@
31.3193 133.106 mo
187.915 133.106 li
@
31.3193 133.106 mo
31.3193 15.6597 li
@
31.3193 15.6597 mo
187.915 15.6597 li
@
grestore
grestore
95.6255 172.775 mo
95.6255 172.742 95.6255 172.72 95.4395 172.534 cv
94.0693 171.153 93.7188 169.082 93.7188 167.405 cv
93.7188 165.498 94.1353 163.591 95.4829 162.221 cv
95.6255 162.09 95.6255 162.068 95.6255 162.035 cv
95.6255 161.958 95.5815 161.925 95.5161 161.925 cv
95.4063 161.925 94.4199 162.67 93.7734 164.063 cv
93.2148 165.268 93.083 166.484 93.083 167.405 cv
93.083 168.259 93.2036 169.585 93.8066 170.824 cv
94.4639 172.171 95.4063 172.884 95.5161 172.884 cv
95.5815 172.884 95.6255 172.851 95.6255 172.775 cv
cp
false sop
0 0 0 1 cmyk
f
99.9092 169.312 mo
99.9531 169.75 100.249 170.21 100.764 170.21 cv
100.994 170.21 101.663 170.057 101.663 169.169 cv
101.663 168.556 li
101.389 168.556 li
101.389 169.169 li
101.389 169.804 101.115 169.871 100.994 169.871 cv
100.633 169.871 100.589 169.377 100.589 169.323 cv
100.589 167.13 li
100.589 166.67 100.589 166.244 100.194 165.837 cv
99.7671 165.41 99.2192 165.235 98.6929 165.235 cv
97.7944 165.235 97.0381 165.75 97.0381 166.473 cv
97.0381 166.802 97.2573 166.988 97.5425 166.988 cv
97.8491 166.988 98.0464 166.769 98.0464 166.484 cv
98.0464 166.353 97.9917 165.992 97.4873 165.98 cv
97.7832 165.597 98.3203 165.476 98.6709 165.476 cv
99.208 165.476 99.8325 165.904 99.8325 166.878 cv
99.8325 167.285 li
99.2739 167.318 98.5068 167.35 97.8164 167.679 cv
96.9941 168.051 96.7202 168.622 96.7202 169.103 cv
96.7202 169.983 97.7832 170.254 98.4736 170.254 cv
99.1973 170.254 99.7012 169.821 99.9092 169.312 cv
cp
99.8325 167.515 mo
99.8325 168.611 li
99.8325 169.652 99.0435 170.024 98.5503 170.024 cv
98.0137 170.024 97.5645 169.64 97.5645 169.092 cv
97.5645 168.49 98.0244 167.58 99.8325 167.515 cv
cp
f
104.907 167.405 mo
104.907 166.55 104.786 165.224 104.184 163.986 cv
103.526 162.638 102.583 161.925 102.474 161.925 cv
102.408 161.925 102.364 161.969 102.364 162.035 cv
102.364 162.068 102.364 162.09 102.572 162.287 cv
103.646 163.372 104.271 165.115 104.271 167.405 cv
104.271 169.279 103.866 171.208 102.507 172.588 cv
102.364 172.72 102.364 172.742 102.364 172.775 cv
102.364 172.84 102.408 172.884 102.474 172.884 cv
102.583 172.884 103.57 172.139 104.216 170.748 cv
104.775 169.542 104.907 168.326 104.907 167.405 cv
cp
f
gsave
200.435 156.596 mo
409.229 156.596 li
409.229 0 li
200.435 0 li
200.435 156.596 li
cp
clp
200.435 156.596 mo
409.229 156.596 li
409.229 0 li
200.435 0 li
200.435 156.596 li
cp
0 0 0 0 cmyk
f
242.194 133.106 mo
388.35 133.106 li
388.35 15.6597 li
242.194 15.6597 li
242.194 133.106 li
cp
f
gsave
242.194 133.106 mo
388.35 133.106 li
388.35 15.6597 li
242.194 15.6597 li
242.194 133.106 li
cp
clp
.36249 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
242.194 133.104 mo
388.35 132.584 li
0 .994 1 0 cmyk
@
242.194 133.093 mo
245.132 133.01 li
248.069 132.843 li
251.007 132.592 li
253.945 132.258 li
256.883 131.84 li
259.821 131.339 li
262.759 130.755 li
265.696 130.086 li
268.634 129.335 li
271.572 128.5 li
274.51 127.581 li
277.447 126.579 li
280.386 125.493 li
283.323 124.324 li
286.262 123.071 li
289.199 121.735 li
292.137 120.315 li
295.074 118.812 li
298.013 117.225 li
300.95 115.555 li
303.888 113.8 li
306.826 111.963 li
309.764 110.042 li
312.702 108.038 li
315.64 105.95 li
318.577 103.779 li
321.515 101.523 li
324.453 99.1851 li
327.391 96.7632 li
331.063 93.6182 li
334.735 90.3423 li
338.407 86.9365 li
342.08 83.4004 li
345.752 79.7334 li
349.424 75.936 li
353.096 72.0078 li
356.769 67.9492 li
360.44 63.7603 li
364.113 59.4409 li
367.785 54.9912 li
371.458 50.4106 li
375.13 45.6997 li
378.802 40.8584 li
382.475 35.8862 li
386.146 30.7842 li
388.35 27.6602 li
.884 .769 0 0 cmyk
@
242.194 133.104 mo
245.132 133.041 li
248.069 132.895 li
251.007 132.665 li
253.945 132.352 li
256.883 131.955 li
259.821 131.475 li
262.759 130.911 li
265.696 130.264 li
268.634 129.533 li
271.572 128.719 li
274.51 127.821 li
277.447 126.84 li
280.386 125.775 li
283.323 124.626 li
286.262 123.395 li
289.199 122.08 li
292.137 120.681 li
295.074 119.198 li
298.013 117.632 li
300.95 115.983 li
303.888 114.25 li
306.826 112.433 li
309.764 110.533 li
312.702 108.549 li
315.64 106.482 li
318.577 104.332 li
321.515 102.098 li
324.453 99.7803 li
327.391 97.3789 li
331.063 94.2603 li
334.735 91.0107 li
338.407 87.6309 li
342.08 84.1206 li
345.752 80.48 li
349.424 76.7085 li
353.096 72.8066 li
356.769 68.7739 li
360.44 64.6113 li
364.113 60.3179 li
367.785 55.894 li
371.458 51.3398 li
375.13 46.6548 li
378.802 41.8398 li
382.475 36.894 li
386.146 31.8179 li
388.35 28.7095 li
.873 .242 1 .129 cmyk
@
grestore
278.183 133.106 mo
278.183 131.656 li
278.183 133.106 li
cp
0 0 0 1 cmyk
f
.181245 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
278.183 133.106 mo
278.183 131.656 li
@
278.183 17.1099 mo
278.183 15.6597 li
278.183 17.1099 li
cp
f
278.183 15.6597 mo
278.183 17.1094 li
@
gsave
200.435 156.596 mo
409.229 156.596 li
409.229 0 li
200.435 0 li
200.435 156.596 li
cp
clp
274.749 134.859 mo
277.658 134.859 li
277.658 135.483 li
275.425 135.483 li
275.425 136.829 li
275.53 136.792 275.644 136.761 275.749 136.746 cv
275.854 136.731 275.967 136.716 276.072 136.716 cv
276.681 136.716 277.161 136.889 277.522 137.22 cv
277.883 137.558 278.063 138.009 278.063 138.58 cv
278.063 139.174 277.876 139.632 277.508 139.956 cv
277.139 140.279 276.621 140.437 275.959 140.437 cv
275.727 140.437 275.493 140.414 275.253 140.384 cv
275.012 140.347 274.771 140.293 274.516 140.211 cv
274.516 139.467 li
274.733 139.587 274.959 139.677 275.2 139.738 cv
275.433 139.798 275.681 139.821 275.944 139.821 cv
276.365 139.821 276.703 139.715 276.951 139.489 cv
277.191 139.264 277.319 138.963 277.319 138.58 cv
277.319 138.205 277.191 137.903 276.951 137.678 cv
276.703 137.453 276.365 137.34 275.944 137.34 cv
275.749 137.34 275.546 137.362 275.351 137.408 cv
275.155 137.453 274.952 137.521 274.749 137.611 cv
274.749 134.859 li
f
281.108 135.348 mo
280.725 135.348 280.438 135.536 280.243 135.912 cv
280.048 136.288 279.958 136.851 279.958 137.603 cv
279.958 138.354 280.048 138.918 280.243 139.294 cv
280.438 139.67 280.725 139.858 281.108 139.858 cv
281.491 139.858 281.776 139.67 281.973 139.294 cv
282.16 138.918 282.258 138.354 282.258 137.603 cv
282.258 136.851 282.16 136.288 281.973 135.912 cv
281.776 135.536 281.491 135.348 281.108 135.348 cv
281.108 134.762 mo
281.717 134.762 282.183 135.01 282.514 135.491 cv
282.837 135.979 283.002 136.686 283.002 137.603 cv
283.002 138.528 282.837 139.234 282.514 139.715 cv
282.183 140.196 281.717 140.437 281.108 140.437 cv
280.491 140.437 280.018 140.196 279.695 139.715 cv
279.372 139.234 279.214 138.528 279.214 137.603 cv
279.214 136.686 279.372 135.979 279.695 135.491 cv
280.018 135.01 280.491 134.762 281.108 134.762 cv
f
314.905 133.106 mo
314.905 131.656 li
f
314.905 133.106 mo
314.905 131.656 li
@
314.905 15.6597 mo
314.905 17.1094 li
f
314.905 15.6597 mo
314.905 17.1094 li
@
309.32 139.715 mo
310.53 139.715 li
310.53 135.536 li
309.216 135.799 li
309.216 135.123 li
310.522 134.859 li
311.268 134.859 li
311.268 139.715 li
312.478 139.715 li
312.478 140.339 li
309.32 140.339 li
309.32 139.715 li
cp
f
315.56 135.348 mo
315.176 135.348 314.891 135.536 314.695 135.912 cv
314.499 136.288 314.409 136.851 314.409 137.603 cv
314.409 138.354 314.499 138.918 314.695 139.294 cv
314.891 139.67 315.176 139.858 315.56 139.858 cv
315.943 139.858 316.229 139.67 316.424 139.294 cv
316.611 138.918 316.71 138.354 316.71 137.603 cv
316.71 136.851 316.611 136.288 316.424 135.912 cv
316.229 135.536 315.943 135.348 315.56 135.348 cv
315.56 134.762 mo
316.168 134.762 316.634 135.01 316.965 135.491 cv
317.288 135.979 317.454 136.686 317.454 137.603 cv
317.454 138.528 317.288 139.234 316.965 139.715 cv
316.634 140.196 316.168 140.437 315.56 140.437 cv
314.943 140.437 314.47 140.196 314.146 139.715 cv
313.823 139.234 313.665 138.528 313.665 137.603 cv
313.665 136.686 313.823 135.979 314.146 135.491 cv
314.47 135.01 314.943 134.762 315.56 134.762 cv
f
320.34 135.348 mo
319.956 135.348 319.671 135.536 319.476 135.912 cv
319.28 136.288 319.189 136.851 319.189 137.603 cv
319.189 138.354 319.28 138.918 319.476 139.294 cv
319.671 139.67 319.956 139.858 320.34 139.858 cv
320.724 139.858 321.009 139.67 321.204 139.294 cv
321.392 138.918 321.49 138.354 321.49 137.603 cv
321.49 136.851 321.392 136.288 321.204 135.912 cv
321.009 135.536 320.724 135.348 320.34 135.348 cv
320.34 134.762 mo
320.948 134.762 321.415 135.01 321.745 135.491 cv
322.068 135.979 322.234 136.686 322.234 137.603 cv
322.234 138.528 322.068 139.234 321.745 139.715 cv
321.415 140.196 320.948 140.437 320.34 140.437 cv
319.724 140.437 319.25 140.196 318.927 139.715 cv
318.604 139.234 318.445 138.528 318.445 137.603 cv
318.445 136.686 318.604 135.979 318.927 135.491 cv
319.25 135.01 319.724 134.762 320.34 134.762 cv
f
351.628 133.106 mo
351.628 131.656 li
f
351.628 133.106 mo
351.628 131.656 li
@
351.628 15.6597 mo
351.628 17.1094 li
f
351.628 15.6597 mo
351.628 17.1094 li
@
346.043 139.715 mo
347.253 139.715 li
347.253 135.536 li
345.938 135.799 li
345.938 135.123 li
347.245 134.859 li
347.99 134.859 li
347.99 139.715 li
349.2 139.715 li
349.2 140.339 li
346.043 140.339 li
346.043 139.715 li
cp
f
350.703 134.859 mo
353.612 134.859 li
353.612 135.483 li
351.38 135.483 li
351.38 136.829 li
351.485 136.792 351.598 136.761 351.703 136.746 cv
351.809 136.731 351.921 136.716 352.026 136.716 cv
352.636 136.716 353.116 136.889 353.477 137.22 cv
353.838 137.558 354.019 138.009 354.019 138.58 cv
354.019 139.174 353.83 139.632 353.462 139.956 cv
353.094 140.279 352.575 140.437 351.913 140.437 cv
351.681 140.437 351.448 140.414 351.207 140.384 cv
350.967 140.347 350.726 140.293 350.47 140.211 cv
350.47 139.467 li
350.688 139.587 350.914 139.677 351.154 139.738 cv
351.388 139.798 351.636 139.821 351.898 139.821 cv
352.319 139.821 352.658 139.715 352.905 139.489 cv
353.146 139.264 353.274 138.963 353.274 138.58 cv
353.274 138.205 353.146 137.903 352.905 137.678 cv
352.658 137.453 352.319 137.34 351.898 137.34 cv
351.703 137.34 351.5 137.362 351.305 137.408 cv
351.109 137.453 350.906 137.521 350.703 137.611 cv
350.703 134.859 li
f
357.063 135.348 mo
356.679 135.348 356.394 135.536 356.198 135.912 cv
356.003 136.288 355.912 136.851 355.912 137.603 cv
355.912 138.354 356.003 138.918 356.198 139.294 cv
356.394 139.67 356.679 139.858 357.063 139.858 cv
357.446 139.858 357.731 139.67 357.927 139.294 cv
358.114 138.918 358.213 138.354 358.213 137.603 cv
358.213 136.851 358.114 136.288 357.927 135.912 cv
357.731 135.536 357.446 135.348 357.063 135.348 cv
357.063 134.762 mo
357.671 134.762 358.138 135.01 358.468 135.491 cv
358.791 135.979 358.957 136.686 358.957 137.603 cv
358.957 138.528 358.791 139.234 358.468 139.715 cv
358.138 140.196 357.671 140.437 357.063 140.437 cv
356.446 140.437 355.973 140.196 355.649 139.715 cv
355.326 139.234 355.168 138.528 355.168 137.603 cv
355.168 136.686 355.326 135.979 355.649 135.491 cv
355.973 135.01 356.446 134.762 357.063 134.762 cv
f
388.351 133.106 mo
388.351 131.656 li
f
388.351 133.106 mo
388.351 131.656 li
@
388.351 15.6597 mo
388.351 17.1094 li
f
388.351 15.6597 mo
388.351 17.1094 li
@
383.138 139.715 mo
385.724 139.715 li
385.724 140.339 li
382.243 140.339 li
382.243 139.715 li
382.521 139.43 382.905 139.039 383.394 138.542 cv
383.874 138.054 384.183 137.738 384.311 137.596 cv
384.551 137.333 384.717 137.107 384.807 136.919 cv
384.897 136.739 384.949 136.551 384.949 136.37 cv
384.949 136.084 384.844 135.844 384.642 135.664 cv
384.438 135.483 384.176 135.386 383.845 135.386 cv
383.611 135.386 383.363 135.431 383.108 135.506 cv
382.853 135.588 382.574 135.708 382.281 135.874 cv
382.281 135.123 li
382.582 135.002 382.86 134.912 383.115 134.852 cv
383.371 134.792 383.611 134.762 383.829 134.762 cv
384.394 134.762 384.844 134.904 385.183 135.19 cv
385.521 135.476 385.694 135.852 385.694 136.325 cv
385.694 136.551 385.648 136.769 385.565 136.964 cv
385.483 137.167 385.333 137.408 385.107 137.678 cv
385.048 137.753 384.853 137.956 384.521 138.294 cv
384.19 138.633 383.732 139.106 383.138 139.715 cv
f
388.866 135.348 mo
388.482 135.348 388.196 135.536 388.001 135.912 cv
387.806 136.288 387.716 136.851 387.716 137.603 cv
387.716 138.354 387.806 138.918 388.001 139.294 cv
388.196 139.67 388.482 139.858 388.866 139.858 cv
389.249 139.858 389.534 139.67 389.73 139.294 cv
389.918 138.918 390.016 138.354 390.016 137.603 cv
390.016 136.851 389.918 136.288 389.73 135.912 cv
389.534 135.536 389.249 135.348 388.866 135.348 cv
388.866 134.762 mo
389.475 134.762 389.94 135.01 390.271 135.491 cv
390.595 135.979 390.76 136.686 390.76 137.603 cv
390.76 138.528 390.595 139.234 390.271 139.715 cv
389.94 140.196 389.475 140.437 388.866 140.437 cv
388.249 140.437 387.776 140.196 387.453 139.715 cv
387.13 139.234 386.972 138.528 386.972 137.603 cv
386.972 136.686 387.13 135.979 387.453 135.491 cv
387.776 135.01 388.249 134.762 388.866 134.762 cv
f
393.646 135.348 mo
393.263 135.348 392.978 135.536 392.781 135.912 cv
392.586 136.288 392.496 136.851 392.496 137.603 cv
392.496 138.354 392.586 138.918 392.781 139.294 cv
392.978 139.67 393.263 139.858 393.646 139.858 cv
394.029 139.858 394.315 139.67 394.511 139.294 cv
394.698 138.918 394.796 138.354 394.796 137.603 cv
394.796 136.851 394.698 136.288 394.511 135.912 cv
394.315 135.536 394.029 135.348 393.646 135.348 cv
393.646 134.762 mo
394.255 134.762 394.722 135.01 395.052 135.491 cv
395.375 135.979 395.541 136.686 395.541 137.603 cv
395.541 138.528 395.375 139.234 395.052 139.715 cv
394.722 140.196 394.255 140.437 393.646 140.437 cv
393.03 140.437 392.557 140.196 392.233 139.715 cv
391.91 139.234 391.752 138.528 391.752 137.603 cv
391.752 136.686 391.91 135.979 392.233 135.491 cv
392.557 135.01 393.03 134.762 393.646 134.762 cv
f
291.359 148.028 mo
292.104 148.028 li
292.104 153.507 li
291.359 153.507 li
291.359 148.028 li
cp
f
296.968 151.027 mo
296.968 153.508 li
296.291 153.508 li
296.291 151.05 li
296.291 150.659 296.209 150.373 296.058 150.178 cv
295.907 149.982 295.683 149.885 295.382 149.885 cv
295.013 149.885 294.728 150.005 294.518 150.238 cv
294.307 150.471 294.201 150.787 294.201 151.185 cv
294.201 153.508 li
293.525 153.508 li
293.525 149.396 li
294.201 149.396 li
294.201 150.035 li
294.359 149.794 294.547 149.607 294.772 149.486 cv
294.99 149.366 295.246 149.298 295.532 149.298 cv
295.998 149.298 296.358 149.449 296.6 149.742 cv
296.84 150.035 296.968 150.463 296.968 151.027 cv
f
298.969 152.891 mo
298.969 155.063 li
298.292 155.063 li
298.292 149.396 li
298.969 149.396 li
298.969 150.02 li
299.104 149.779 299.284 149.599 299.503 149.479 cv
299.721 149.358 299.983 149.298 300.284 149.298 cv
300.78 149.298 301.186 149.501 301.502 149.892 cv
301.81 150.291 301.968 150.809 301.968 151.456 cv
301.968 152.102 301.81 152.628 301.502 153.02 cv
301.186 153.41 300.78 153.605 300.284 153.605 cv
299.983 153.605 299.721 153.545 299.503 153.432 cv
299.284 153.32 299.104 153.139 298.969 152.891 cv
301.269 151.456 mo
301.269 150.959 301.163 150.576 300.96 150.291 cv
300.75 150.005 300.472 149.862 300.119 149.862 cv
299.758 149.862 299.479 150.005 299.277 150.291 cv
299.066 150.576 298.969 150.959 298.969 151.456 cv
298.969 151.952 299.066 152.342 299.277 152.628 cv
299.479 152.914 299.758 153.049 300.119 153.049 cv
300.472 153.049 300.75 152.914 300.96 152.628 cv
301.163 152.342 301.269 151.952 301.269 151.456 cv
f
303.021 151.884 mo
303.021 149.396 li
303.698 149.396 li
303.698 151.861 li
303.698 152.252 303.773 152.538 303.924 152.734 cv
304.074 152.929 304.3 153.026 304.607 153.026 cv
304.968 153.026 305.262 152.914 305.472 152.681 cv
305.683 152.448 305.788 152.132 305.788 151.726 cv
305.788 149.396 li
306.464 149.396 li
306.464 153.507 li
305.788 153.507 li
305.788 152.876 li
305.622 153.132 305.427 153.312 305.217 153.432 cv
304.998 153.545 304.75 153.605 304.465 153.605 cv
303.991 153.605 303.63 153.462 303.39 153.169 cv
303.142 152.884 303.021 152.455 303.021 151.884 cv
f
308.525 148.231 mo
308.525 149.396 li
309.916 149.396 li
309.916 149.922 li
308.525 149.922 li
308.525 152.155 li
308.525 152.493 308.57 152.71 308.661 152.801 cv
308.751 152.899 308.938 152.944 309.225 152.944 cv
309.916 152.944 li
309.916 153.508 li
309.225 153.508 li
308.698 153.508 308.337 153.41 308.142 153.214 cv
307.946 153.019 307.849 152.666 307.849 152.155 cv
307.849 149.922 li
307.353 149.922 li
307.353 149.396 li
307.849 149.396 li
307.849 148.231 li
308.525 148.231 li
f
315.819 149.517 mo
315.819 150.155 li
315.624 150.065 315.429 149.99 315.226 149.937 cv
315.016 149.892 314.805 149.862 314.587 149.862 cv
314.249 149.862 313.993 149.915 313.828 150.02 cv
313.662 150.125 313.58 150.275 313.58 150.479 cv
313.58 150.636 313.64 150.756 313.76 150.847 cv
313.88 150.937 314.121 151.027 314.482 151.102 cv
314.715 151.155 li
315.195 151.26 315.534 151.411 315.737 151.591 cv
315.933 151.779 316.038 152.042 316.038 152.373 cv
316.038 152.756 315.888 153.057 315.587 153.275 cv
315.286 153.5 314.865 153.605 314.339 153.605 cv
314.113 153.605 313.888 153.583 313.647 153.545 cv
313.407 153.508 313.159 153.448 312.896 153.357 cv
312.896 152.658 li
313.144 152.793 313.392 152.892 313.632 152.952 cv
313.873 153.019 314.113 153.049 314.354 153.049 cv
314.67 153.049 314.918 152.997 315.091 152.892 cv
315.256 152.786 315.346 152.628 315.346 152.425 cv
315.346 152.245 315.278 152.102 315.158 152.004 cv
315.038 151.907 314.768 151.809 314.347 151.718 cv
314.113 151.667 li
313.692 151.576 313.385 151.441 313.204 151.26 cv
313.016 151.08 312.926 150.832 312.926 150.508 cv
312.926 150.125 313.062 149.825 313.332 149.614 cv
313.603 149.403 313.993 149.298 314.505 149.298 cv
314.752 149.298 314.985 149.321 315.211 149.358 cv
315.429 149.396 315.632 149.449 315.819 149.517 cv
f
317.115 149.396 mo
317.792 149.396 li
317.792 153.508 li
317.115 153.508 li
317.115 149.396 li
cp
317.115 147.795 mo
317.792 147.795 li
317.792 148.652 li
317.115 148.652 li
317.115 147.795 li
cp
f
318.912 149.396 mo
322.121 149.396 li
322.121 150.012 li
319.581 152.967 li
322.121 152.967 li
322.121 153.508 li
318.821 153.508 li
318.821 152.892 li
321.362 149.937 li
318.912 149.937 li
318.912 149.396 li
cp
f
326.671 151.283 mo
326.671 151.613 li
323.566 151.613 li
323.597 152.079 323.732 152.44 323.987 152.681 cv
324.235 152.921 324.581 153.042 325.032 153.042 cv
325.288 153.042 325.544 153.012 325.784 152.952 cv
326.024 152.892 326.272 152.793 326.513 152.658 cv
326.513 153.297 li
326.272 153.403 326.024 153.485 325.769 153.53 cv
325.514 153.575 325.25 153.605 324.995 153.605 cv
324.333 153.605 323.814 153.417 323.431 153.042 cv
323.048 152.666 322.859 152.147 322.859 151.493 cv
322.859 150.824 323.04 150.291 323.401 149.892 cv
323.762 149.501 324.258 149.298 324.874 149.298 cv
325.431 149.298 325.866 149.479 326.189 149.832 cv
326.506 150.193 326.671 150.674 326.671 151.283 cv
325.994 151.087 mo
325.987 150.719 325.882 150.426 325.687 150.201 cv
325.483 149.982 325.213 149.87 324.882 149.87 cv
324.506 149.87 324.205 149.982 323.979 150.193 cv
323.754 150.403 323.619 150.704 323.589 151.087 cv
325.994 151.087 li
f
331.795 147.802 mo
331.464 148.374 331.224 148.93 331.066 149.479 cv
330.9 150.028 330.825 150.583 330.825 151.147 cv
330.825 151.719 330.9 152.275 331.066 152.824 cv
331.224 153.38 331.464 153.928 331.795 154.492 cv
331.209 154.492 li
330.841 153.913 330.563 153.357 330.382 152.801 cv
330.202 152.245 330.111 151.696 330.111 151.147 cv
330.111 150.606 330.202 150.058 330.382 149.501 cv
330.563 148.945 330.833 148.381 331.209 147.802 cv
331.795 147.802 li
f
332.979 153.38 mo
332.979 153.35 332.979 153.327 332.986 153.312 cv
333.55 151.072 li
333.579 150.937 333.603 150.809 333.603 150.704 cv
333.603 150.494 333.527 150.381 333.384 150.381 cv
333.227 150.381 333.106 150.479 333.031 150.667 cv
332.955 150.854 332.881 151.087 332.813 151.373 cv
332.813 151.388 332.805 151.403 332.79 151.411 cv
332.775 151.418 332.76 151.418 332.753 151.418 cv
332.663 151.418 li
332.647 151.418 332.633 151.411 332.618 151.395 cv
332.603 151.38 332.603 151.358 332.603 151.343 cv
332.655 151.125 332.708 150.937 332.76 150.787 cv
332.805 150.637 332.888 150.501 332.993 150.373 cv
333.099 150.253 333.227 150.185 333.392 150.185 cv
333.572 150.185 333.737 150.246 333.888 150.366 cv
334.03 150.486 334.105 150.637 334.105 150.817 cv
334.256 150.622 334.429 150.471 334.632 150.358 cv
334.827 150.246 335.045 150.185 335.271 150.185 cv
335.443 150.185 335.594 150.223 335.729 150.283 cv
335.856 150.343 335.955 150.441 336.03 150.561 cv
336.105 150.682 336.143 150.832 336.143 150.997 cv
336.143 151.208 336.091 151.456 336 151.741 cv
335.91 152.034 335.797 152.358 335.661 152.718 cv
335.587 152.884 335.557 153.034 335.557 153.169 cv
335.557 153.32 335.609 153.395 335.729 153.395 cv
335.925 153.395 336.082 153.29 336.219 153.079 cv
336.346 152.869 336.436 152.643 336.496 152.403 cv
336.504 152.373 336.526 152.358 336.556 152.358 cv
336.646 152.358 li
336.661 152.358 336.677 152.365 336.691 152.38 cv
336.707 152.395 336.714 152.41 336.714 152.425 cv
336.714 152.433 336.707 152.44 336.707 152.448 cv
336.64 152.733 336.519 152.997 336.354 153.229 cv
336.181 153.47 335.97 153.583 335.715 153.583 cv
335.534 153.583 335.384 153.523 335.264 153.41 cv
335.136 153.29 335.075 153.147 335.075 152.966 cv
335.075 152.876 335.09 152.778 335.136 152.673 cv
335.195 152.508 335.264 152.313 335.346 152.087 cv
335.429 151.862 335.496 151.651 335.549 151.44 cv
335.602 151.23 335.632 151.049 335.632 150.884 cv
335.632 150.749 335.602 150.628 335.541 150.531 cv
335.481 150.433 335.392 150.381 335.256 150.381 cv
335.068 150.381 334.895 150.426 334.745 150.501 cv
334.595 150.583 334.459 150.689 334.346 150.824 cv
334.226 150.959 334.12 151.117 334.03 151.298 cv
333.52 153.342 li
333.504 153.417 333.467 153.47 333.407 153.515 cv
333.347 153.56 333.279 153.583 333.204 153.583 cv
333.144 153.583 333.091 153.56 333.046 153.53 cv
333.001 153.5 332.979 153.448 332.979 153.38 cv
f
337.512 147.802 mo
338.098 147.802 li
338.458 148.381 338.736 148.945 338.917 149.501 cv
339.097 150.058 339.195 150.606 339.195 151.147 cv
339.195 151.696 339.097 152.245 338.917 152.801 cv
338.736 153.357 338.458 153.913 338.098 154.492 cv
337.512 154.492 li
337.835 153.928 338.075 153.38 338.24 152.824 cv
338.397 152.275 338.481 151.719 338.481 151.147 cv
338.481 150.583 338.397 150.028 338.24 149.479 cv
338.075 148.93 337.835 148.374 337.512 147.802 cv
f
242.194 133.106 mo
243.645 133.106 li
f
242.194 133.106 mo
243.645 133.106 li
@
388.351 133.106 mo
386.9 133.106 li
f
388.351 133.106 mo
386.9 133.106 li
@
239.345 130.214 mo
238.962 130.214 238.677 130.402 238.48 130.777 cv
238.285 131.153 238.195 131.717 238.195 132.469 cv
238.195 133.22 238.285 133.784 238.48 134.16 cv
238.677 134.536 238.962 134.724 239.345 134.724 cv
239.729 134.724 240.015 134.536 240.21 134.16 cv
240.397 133.784 240.495 133.22 240.495 132.469 cv
240.495 131.717 240.397 131.153 240.21 130.777 cv
240.015 130.402 239.729 130.214 239.345 130.214 cv
239.345 129.627 mo
239.954 129.627 240.42 129.875 240.751 130.356 cv
241.074 130.845 241.239 131.551 241.239 132.469 cv
241.239 133.393 241.074 134.1 240.751 134.581 cv
240.42 135.062 239.954 135.302 239.345 135.302 cv
238.729 135.302 238.255 135.062 237.933 134.581 cv
237.608 134.1 237.451 133.393 237.451 132.469 cv
237.451 131.551 237.608 130.845 237.933 130.356 cv
238.255 129.875 238.729 129.627 239.345 129.627 cv
f
242.194 120.057 mo
243.645 120.057 li
f
242.194 120.057 mo
243.645 120.057 li
@
388.351 120.057 mo
386.9 120.057 li
f
388.351 120.057 mo
386.9 120.057 li
@
223.493 116.675 mo
226.402 116.675 li
226.402 117.299 li
224.17 117.299 li
224.17 118.645 li
224.275 118.607 224.389 118.577 224.493 118.562 cv
224.599 118.547 224.711 118.532 224.816 118.532 cv
225.426 118.532 225.906 118.705 226.268 119.036 cv
226.628 119.374 226.809 119.825 226.809 120.396 cv
226.809 120.99 226.62 121.449 226.252 121.772 cv
225.884 122.095 225.365 122.253 224.704 122.253 cv
224.471 122.253 224.238 122.23 223.997 122.2 cv
223.757 122.163 223.517 122.11 223.261 122.027 cv
223.261 121.283 li
223.479 121.403 223.704 121.494 223.944 121.554 cv
224.178 121.614 224.426 121.637 224.688 121.637 cv
225.109 121.637 225.448 121.531 225.696 121.305 cv
225.937 121.08 226.064 120.779 226.064 120.396 cv
226.064 120.021 225.937 119.719 225.696 119.494 cv
225.448 119.269 225.109 119.156 224.688 119.156 cv
224.493 119.156 224.29 119.178 224.095 119.224 cv
223.899 119.269 223.696 119.336 223.493 119.427 cv
223.493 116.675 li
f
229.853 117.164 mo
229.47 117.164 229.184 117.352 228.988 117.728 cv
228.793 118.104 228.702 118.667 228.702 119.419 cv
228.702 120.17 228.793 120.735 228.988 121.11 cv
229.184 121.486 229.47 121.674 229.853 121.674 cv
230.236 121.674 230.521 121.486 230.717 121.11 cv
230.905 120.735 231.003 120.17 231.003 119.419 cv
231.003 118.667 230.905 118.104 230.717 117.728 cv
230.521 117.352 230.236 117.164 229.853 117.164 cv
229.853 116.578 mo
230.462 116.578 230.928 116.826 231.258 117.307 cv
231.581 117.795 231.747 118.502 231.747 119.419 cv
231.747 120.344 231.581 121.05 231.258 121.531 cv
230.928 122.012 230.462 122.253 229.853 122.253 cv
229.236 122.253 228.763 122.012 228.439 121.531 cv
228.116 121.05 227.958 120.344 227.958 119.419 cv
227.958 118.502 228.116 117.795 228.439 117.307 cv
228.763 116.826 229.236 116.578 229.853 116.578 cv
f
234.634 117.164 mo
234.25 117.164 233.964 117.352 233.769 117.728 cv
233.573 118.104 233.483 118.667 233.483 119.419 cv
233.483 120.17 233.573 120.735 233.769 121.11 cv
233.964 121.486 234.25 121.674 234.634 121.674 cv
235.017 121.674 235.302 121.486 235.498 121.11 cv
235.686 120.735 235.783 120.17 235.783 119.419 cv
235.783 118.667 235.686 118.104 235.498 117.728 cv
235.302 117.352 235.017 117.164 234.634 117.164 cv
234.634 116.578 mo
235.242 116.578 235.708 116.826 236.039 117.307 cv
236.362 117.795 236.527 118.502 236.527 119.419 cv
236.527 120.344 236.362 121.05 236.039 121.531 cv
235.708 122.012 235.242 122.253 234.634 122.253 cv
234.017 122.253 233.543 122.012 233.221 121.531 cv
232.897 121.05 232.739 120.344 232.739 119.419 cv
232.739 118.502 232.897 117.795 233.221 117.307 cv
233.543 116.826 234.017 116.578 234.634 116.578 cv
f
239.414 117.164 mo
239.03 117.164 238.745 117.352 238.549 117.728 cv
238.354 118.104 238.264 118.667 238.264 119.419 cv
238.264 120.17 238.354 120.735 238.549 121.11 cv
238.745 121.486 239.03 121.674 239.414 121.674 cv
239.798 121.674 240.083 121.486 240.278 121.11 cv
240.466 120.735 240.564 120.17 240.564 119.419 cv
240.564 118.667 240.466 118.104 240.278 117.728 cv
240.083 117.352 239.798 117.164 239.414 117.164 cv
239.414 116.578 mo
240.022 116.578 240.488 116.826 240.819 117.307 cv
241.143 117.795 241.309 118.502 241.309 119.419 cv
241.309 120.344 241.143 121.05 240.819 121.531 cv
240.488 122.012 240.022 122.253 239.414 122.253 cv
238.798 122.253 238.324 122.012 238.001 121.531 cv
237.678 121.05 237.52 120.344 237.52 119.419 cv
237.52 118.502 237.678 117.795 238.001 117.307 cv
238.324 116.826 238.798 116.578 239.414 116.578 cv
f
242.194 107.007 mo
243.645 107.007 li
f
242.194 107.007 mo
243.645 107.007 li
@
388.351 107.007 mo
386.9 107.007 li
f
388.351 107.007 mo
386.9 107.007 li
@
219.071 108.481 mo
220.281 108.481 li
220.281 104.302 li
218.966 104.565 li
218.966 103.889 li
220.274 103.625 li
221.019 103.625 li
221.019 108.481 li
222.229 108.481 li
222.229 109.105 li
219.071 109.105 li
219.071 108.481 li
cp
f
225.311 104.115 mo
224.927 104.115 224.642 104.302 224.446 104.678 cv
224.25 105.054 224.16 105.618 224.16 106.37 cv
224.16 107.121 224.25 107.685 224.446 108.061 cv
224.642 108.437 224.927 108.625 225.311 108.625 cv
225.693 108.625 225.979 108.437 226.175 108.061 cv
226.362 107.685 226.46 107.121 226.46 106.37 cv
226.46 105.618 226.362 105.054 226.175 104.678 cv
225.979 104.302 225.693 104.115 225.311 104.115 cv
225.311 103.528 mo
225.919 103.528 226.385 103.776 226.716 104.257 cv
227.039 104.746 227.204 105.452 227.204 106.37 cv
227.204 107.294 227.039 108 226.716 108.481 cv
226.385 108.962 225.919 109.203 225.311 109.203 cv
224.693 109.203 224.221 108.962 223.897 108.481 cv
223.574 108 223.416 107.294 223.416 106.37 cv
223.416 105.452 223.574 104.746 223.897 104.257 cv
224.221 103.776 224.693 103.528 225.311 103.528 cv
f
230.091 104.115 mo
229.707 104.115 229.422 104.302 229.227 104.678 cv
229.031 105.054 228.94 105.618 228.94 106.37 cv
228.94 107.121 229.031 107.685 229.227 108.061 cv
229.422 108.437 229.707 108.625 230.091 108.625 cv
230.475 108.625 230.76 108.437 230.955 108.061 cv
231.144 107.685 231.24 107.121 231.24 106.37 cv
231.24 105.618 231.144 105.054 230.955 104.678 cv
230.76 104.302 230.475 104.115 230.091 104.115 cv
230.091 103.528 mo
230.7 103.528 231.166 103.776 231.496 104.257 cv
231.819 104.746 231.985 105.452 231.985 106.37 cv
231.985 107.294 231.819 108 231.496 108.481 cv
231.166 108.962 230.7 109.203 230.091 109.203 cv
229.475 109.203 229.001 108.962 228.678 108.481 cv
228.354 108 228.196 107.294 228.196 106.37 cv
228.196 105.452 228.354 104.746 228.678 104.257 cv
229.001 103.776 229.475 103.528 230.091 103.528 cv
f
234.871 104.115 mo
234.488 104.115 234.202 104.302 234.007 104.678 cv
233.812 105.054 233.722 105.618 233.722 106.37 cv
233.722 107.121 233.812 107.685 234.007 108.061 cv
234.202 108.437 234.488 108.625 234.871 108.625 cv
235.255 108.625 235.54 108.437 235.736 108.061 cv
235.924 107.685 236.021 107.121 236.021 106.37 cv
236.021 105.618 235.924 105.054 235.736 104.678 cv
235.54 104.302 235.255 104.115 234.871 104.115 cv
234.871 103.528 mo
235.48 103.528 235.946 103.776 236.276 104.257 cv
236.601 104.746 236.766 105.452 236.766 106.37 cv
236.766 107.294 236.601 108 236.276 108.481 cv
235.946 108.962 235.48 109.203 234.871 109.203 cv
234.255 109.203 233.781 108.962 233.458 108.481 cv
233.135 108 232.977 107.294 232.977 106.37 cv
232.977 105.452 233.135 104.746 233.458 104.257 cv
233.781 103.776 234.255 103.528 234.871 103.528 cv
f
239.652 104.115 mo
239.269 104.115 238.983 104.302 238.788 104.678 cv
238.592 105.054 238.502 105.618 238.502 106.37 cv
238.502 107.121 238.592 107.685 238.788 108.061 cv
238.983 108.437 239.269 108.625 239.652 108.625 cv
240.035 108.625 240.321 108.437 240.517 108.061 cv
240.704 107.685 240.802 107.121 240.802 106.37 cv
240.802 105.618 240.704 105.054 240.517 104.678 cv
240.321 104.302 240.035 104.115 239.652 104.115 cv
239.652 103.528 mo
240.261 103.528 240.727 103.776 241.058 104.257 cv
241.381 104.746 241.546 105.452 241.546 106.37 cv
241.546 107.294 241.381 108 241.058 108.481 cv
240.727 108.962 240.261 109.203 239.652 109.203 cv
239.036 109.203 238.563 108.962 238.239 108.481 cv
237.916 108 237.758 107.294 237.758 106.37 cv
237.758 105.452 237.916 104.746 238.239 104.257 cv
238.563 103.776 239.036 103.528 239.652 103.528 cv
f
242.194 93.9575 mo
243.645 93.9575 li
f
242.194 93.9575 mo
243.645 93.9575 li
@
388.351 93.9575 mo
386.9 93.9575 li
f
388.351 93.9575 mo
386.9 93.9575 li
@
219.071 95.4316 mo
220.281 95.4316 li
220.281 91.2524 li
218.966 91.5156 li
218.966 90.8394 li
220.274 90.5757 li
221.019 90.5757 li
221.019 95.4316 li
222.229 95.4316 li
222.229 96.0562 li
219.071 96.0562 li
219.071 95.4316 li
cp
f
223.731 90.5762 mo
226.641 90.5762 li
226.641 91.2002 li
224.408 91.2002 li
224.408 92.5459 li
224.514 92.5078 224.626 92.478 224.731 92.4629 cv
224.837 92.4478 224.949 92.4326 225.055 92.4326 cv
225.663 92.4326 226.145 92.606 226.506 92.9365 cv
226.866 93.2744 227.047 93.7251 227.047 94.2969 cv
227.047 94.8906 226.858 95.3491 226.49 95.6729 cv
226.122 95.9956 225.604 96.1538 224.942 96.1538 cv
224.709 96.1538 224.476 96.1309 224.235 96.1006 cv
223.995 96.0635 223.755 96.0103 223.499 95.9282 cv
223.499 95.1841 li
223.717 95.3042 223.942 95.394 224.183 95.4546 cv
224.416 95.5146 224.664 95.5376 224.927 95.5376 cv
225.348 95.5376 225.687 95.4321 225.935 95.2061 cv
226.175 94.9805 226.303 94.6802 226.303 94.2969 cv
226.303 93.9209 226.175 93.6201 225.935 93.395 cv
225.687 93.1694 225.348 93.0571 224.927 93.0571 cv
224.731 93.0571 224.528 93.0791 224.333 93.1245 cv
224.138 93.1694 223.935 93.2368 223.731 93.3271 cv
223.731 90.5762 li
f
230.091 91.0649 mo
229.707 91.0649 229.422 91.2524 229.227 91.6284 cv
229.031 92.0044 228.94 92.5679 228.94 93.3198 cv
228.94 94.0713 229.031 94.6353 229.227 95.0112 cv
229.422 95.3867 229.707 95.5747 230.091 95.5747 cv
230.475 95.5747 230.76 95.3867 230.955 95.0112 cv
231.144 94.6353 231.24 94.0713 231.24 93.3198 cv
231.24 92.5679 231.144 92.0044 230.955 91.6284 cv
230.76 91.2524 230.475 91.0649 230.091 91.0649 cv
230.091 90.4785 mo
230.7 90.4785 231.166 90.7261 231.496 91.2075 cv
231.819 91.6958 231.985 92.4023 231.985 93.3198 cv
231.985 94.2441 231.819 94.9507 231.496 95.4316 cv
231.166 95.9126 230.7 96.1538 230.091 96.1538 cv
229.475 96.1538 229.001 95.9126 228.678 95.4316 cv
228.354 94.9507 228.196 94.2441 228.196 93.3198 cv
228.196 92.4023 228.354 91.6958 228.678 91.2075 cv
229.001 90.7261 229.475 90.4785 230.091 90.4785 cv
f
234.871 91.0649 mo
234.488 91.0649 234.202 91.2524 234.007 91.6284 cv
233.812 92.0044 233.722 92.5679 233.722 93.3198 cv
233.722 94.0713 233.812 94.6353 234.007 95.0112 cv
234.202 95.3867 234.488 95.5747 234.871 95.5747 cv
235.255 95.5747 235.54 95.3867 235.736 95.0112 cv
235.924 94.6353 236.021 94.0713 236.021 93.3198 cv
236.021 92.5679 235.924 92.0044 235.736 91.6284 cv
235.54 91.2524 235.255 91.0649 234.871 91.0649 cv
234.871 90.4785 mo
235.48 90.4785 235.946 90.7261 236.276 91.2075 cv
236.601 91.6958 236.766 92.4023 236.766 93.3198 cv
236.766 94.2441 236.601 94.9507 236.276 95.4316 cv
235.946 95.9126 235.48 96.1538 234.871 96.1538 cv
234.255 96.1538 233.781 95.9126 233.458 95.4316 cv
233.135 94.9507 232.977 94.2441 232.977 93.3198 cv
232.977 92.4023 233.135 91.6958 233.458 91.2075 cv
233.781 90.7261 234.255 90.4785 234.871 90.4785 cv
f
239.652 91.0649 mo
239.269 91.0649 238.983 91.2524 238.788 91.6284 cv
238.592 92.0044 238.502 92.5679 238.502 93.3198 cv
238.502 94.0713 238.592 94.6353 238.788 95.0112 cv
238.983 95.3867 239.269 95.5747 239.652 95.5747 cv
240.035 95.5747 240.321 95.3867 240.517 95.0112 cv
240.704 94.6353 240.802 94.0713 240.802 93.3198 cv
240.802 92.5679 240.704 92.0044 240.517 91.6284 cv
240.321 91.2524 240.035 91.0649 239.652 91.0649 cv
239.652 90.4785 mo
240.261 90.4785 240.727 90.7261 241.058 91.2075 cv
241.381 91.6958 241.546 92.4023 241.546 93.3198 cv
241.546 94.2441 241.381 94.9507 241.058 95.4316 cv
240.727 95.9126 240.261 96.1538 239.652 96.1538 cv
239.036 96.1538 238.563 95.9126 238.239 95.4316 cv
237.916 94.9507 237.758 94.2441 237.758 93.3198 cv
237.758 92.4023 237.916 91.6958 238.239 91.2075 cv
238.563 90.7261 239.036 90.4785 239.652 90.4785 cv
f
242.194 80.9077 mo
243.645 80.9077 li
f
242.194 80.9077 mo
243.645 80.9077 li
@
388.351 80.9077 mo
386.9 80.9077 li
f
388.351 80.9077 mo
386.9 80.9077 li
@
219.305 82.3823 mo
221.891 82.3823 li
221.891 83.0063 li
218.411 83.0063 li
218.411 82.3823 li
218.688 82.0967 219.072 81.7056 219.561 81.21 cv
220.042 80.7212 220.35 80.4053 220.478 80.2627 cv
220.718 79.9995 220.884 79.7739 220.974 79.5859 cv
221.064 79.4058 221.117 79.2178 221.117 79.0371 cv
221.117 78.752 221.012 78.5112 220.809 78.3311 cv
220.605 78.1504 220.343 78.0527 220.012 78.0527 cv
219.778 78.0527 219.53 78.0977 219.275 78.1729 cv
219.02 78.2554 218.741 78.376 218.448 78.541 cv
218.448 77.7896 li
218.749 77.6694 219.027 77.5791 219.282 77.519 cv
219.538 77.459 219.778 77.4287 219.997 77.4287 cv
220.561 77.4287 221.012 77.5718 221.35 77.8569 cv
221.688 78.1431 221.86 78.5186 221.86 78.9922 cv
221.86 79.2178 221.815 79.436 221.733 79.6313 cv
221.65 79.834 221.5 80.0747 221.274 80.3452 cv
221.214 80.4204 221.019 80.6235 220.688 80.9614 cv
220.357 81.3003 219.898 81.7729 219.305 82.3823 cv
f
225.033 78.0151 mo
224.649 78.0151 224.363 78.2031 224.168 78.5786 cv
223.973 78.9546 223.883 79.5181 223.883 80.27 cv
223.883 81.0215 223.973 81.5854 224.168 81.9609 cv
224.363 82.3369 224.649 82.5249 225.033 82.5249 cv
225.416 82.5249 225.701 82.3369 225.897 81.9609 cv
226.085 81.5854 226.183 81.0215 226.183 80.27 cv
226.183 79.5181 226.085 78.9546 225.897 78.5786 cv
225.701 78.2031 225.416 78.0151 225.033 78.0151 cv
225.033 77.4292 mo
225.642 77.4292 226.107 77.6768 226.438 78.1577 cv
226.762 78.6465 226.927 79.353 226.927 80.27 cv
226.927 81.1943 226.762 81.9009 226.438 82.3818 cv
226.107 82.8633 225.642 83.104 225.033 83.104 cv
224.416 83.104 223.942 82.8633 223.62 82.3818 cv
223.297 81.9009 223.139 81.1943 223.139 80.27 cv
223.139 79.353 223.297 78.6465 223.62 78.1577 cv
223.942 77.6768 224.416 77.4292 225.033 77.4292 cv
f
229.813 78.0151 mo
229.43 78.0151 229.145 78.2031 228.949 78.5786 cv
228.753 78.9546 228.663 79.5181 228.663 80.27 cv
228.663 81.0215 228.753 81.5854 228.949 81.9609 cv
229.145 82.3369 229.43 82.5249 229.813 82.5249 cv
230.197 82.5249 230.482 82.3369 230.678 81.9609 cv
230.865 81.5854 230.963 81.0215 230.963 80.27 cv
230.963 79.5181 230.865 78.9546 230.678 78.5786 cv
230.482 78.2031 230.197 78.0151 229.813 78.0151 cv
229.813 77.4292 mo
230.422 77.4292 230.888 77.6768 231.219 78.1577 cv
231.542 78.6465 231.708 79.353 231.708 80.27 cv
231.708 81.1943 231.542 81.9009 231.219 82.3818 cv
230.888 82.8633 230.422 83.104 229.813 83.104 cv
229.196 83.104 228.724 82.8633 228.4 82.3818 cv
228.077 81.9009 227.919 81.1943 227.919 80.27 cv
227.919 79.353 228.077 78.6465 228.4 78.1577 cv
228.724 77.6768 229.196 77.4292 229.813 77.4292 cv
f
234.594 78.0151 mo
234.21 78.0151 233.925 78.2031 233.729 78.5786 cv
233.534 78.9546 233.444 79.5181 233.444 80.27 cv
233.444 81.0215 233.534 81.5854 233.729 81.9609 cv
233.925 82.3369 234.21 82.5249 234.594 82.5249 cv
234.978 82.5249 235.263 82.3369 235.458 81.9609 cv
235.646 81.5854 235.744 81.0215 235.744 80.27 cv
235.744 79.5181 235.646 78.9546 235.458 78.5786 cv
235.263 78.2031 234.978 78.0151 234.594 78.0151 cv
234.594 77.4292 mo
235.203 77.4292 235.669 77.6768 235.999 78.1577 cv
236.323 78.6465 236.488 79.353 236.488 80.27 cv
236.488 81.1943 236.323 81.9009 235.999 82.3818 cv
235.669 82.8633 235.203 83.104 234.594 83.104 cv
233.978 83.104 233.504 82.8633 233.181 82.3818 cv
232.857 81.9009 232.699 81.1943 232.699 80.27 cv
232.699 79.353 232.857 78.6465 233.181 78.1577 cv
233.504 77.6768 233.978 77.4292 234.594 77.4292 cv
f
239.374 78.0151 mo
238.991 78.0151 238.706 78.2031 238.51 78.5786 cv
238.314 78.9546 238.225 79.5181 238.225 80.27 cv
238.225 81.0215 238.314 81.5854 238.51 81.9609 cv
238.706 82.3369 238.991 82.5249 239.374 82.5249 cv
239.758 82.5249 240.044 82.3369 240.239 81.9609 cv
240.427 81.5854 240.524 81.0215 240.524 80.27 cv
240.524 79.5181 240.427 78.9546 240.239 78.5786 cv
240.044 78.2031 239.758 78.0151 239.374 78.0151 cv
239.374 77.4292 mo
239.983 77.4292 240.449 77.6768 240.78 78.1577 cv
241.104 78.6465 241.269 79.353 241.269 80.27 cv
241.269 81.1943 241.104 81.9009 240.78 82.3818 cv
240.449 82.8633 239.983 83.104 239.374 83.104 cv
238.758 83.104 238.285 82.8633 237.961 82.3818 cv
237.638 81.9009 237.48 81.1943 237.48 80.27 cv
237.48 79.353 237.638 78.6465 237.961 78.1577 cv
238.285 77.6768 238.758 77.4292 239.374 77.4292 cv
f
242.194 67.8579 mo
243.645 67.8579 li
f
242.194 67.8579 mo
243.645 67.8579 li
@
388.351 67.8579 mo
386.9 67.8579 li
f
388.351 67.8579 mo
386.9 67.8579 li
@
219.305 69.3325 mo
221.891 69.3325 li
221.891 69.9565 li
218.411 69.9565 li
218.411 69.3325 li
218.688 69.0469 219.072 68.6563 219.561 68.1602 cv
220.042 67.6714 220.35 67.3555 220.478 67.2129 cv
220.718 66.9502 220.884 66.7246 220.974 66.5366 cv
221.064 66.3564 221.117 66.168 221.117 65.9878 cv
221.117 65.7021 221.012 65.4614 220.809 65.2813 cv
220.605 65.1011 220.343 65.0029 220.012 65.0029 cv
219.778 65.0029 219.53 65.0479 219.275 65.1235 cv
219.02 65.2061 218.741 65.3267 218.448 65.4917 cv
218.448 64.7397 li
218.749 64.6201 219.027 64.5298 219.282 64.4692 cv
219.538 64.4092 219.778 64.3794 219.997 64.3794 cv
220.561 64.3794 221.012 64.522 221.35 64.8076 cv
221.688 65.0933 221.86 65.4692 221.86 65.9429 cv
221.86 66.168 221.815 66.3862 221.733 66.5815 cv
221.65 66.7842 221.5 67.0249 221.274 67.2954 cv
221.214 67.3706 221.019 67.5737 220.688 67.9121 cv
220.357 68.2505 219.898 68.7236 219.305 69.3325 cv
f
223.454 64.4771 mo
226.363 64.4771 li
226.363 65.1006 li
224.131 65.1006 li
224.131 66.4463 li
224.236 66.4087 224.349 66.3784 224.454 66.3638 cv
224.559 66.3486 224.672 66.3335 224.777 66.3335 cv
225.386 66.3335 225.867 66.5063 226.228 66.8369 cv
226.589 67.1753 226.77 67.6265 226.77 68.1978 cv
226.77 68.7915 226.581 69.25 226.213 69.5732 cv
225.845 69.8965 225.326 70.0542 224.664 70.0542 cv
224.432 70.0542 224.198 70.0317 223.958 70.0015 cv
223.718 69.9639 223.477 69.9116 223.221 69.8286 cv
223.221 69.0845 li
223.438 69.2051 223.665 69.2954 223.905 69.3555 cv
224.138 69.4155 224.386 69.438 224.649 69.438 cv
225.07 69.438 225.409 69.333 225.656 69.1069 cv
225.897 68.8813 226.025 68.5811 226.025 68.1978 cv
226.025 67.8218 225.897 67.521 225.656 67.2954 cv
225.409 67.0703 225.07 66.9575 224.649 66.9575 cv
224.454 66.9575 224.251 66.98 224.056 67.0249 cv
223.86 67.0703 223.657 67.1377 223.454 67.228 cv
223.454 64.4771 li
f
229.813 64.9653 mo
229.43 64.9653 229.145 65.1538 228.949 65.5293 cv
228.753 65.9048 228.663 66.4688 228.663 67.2202 cv
228.663 67.9722 228.753 68.5361 228.949 68.9116 cv
229.145 69.2876 229.43 69.4756 229.813 69.4756 cv
230.197 69.4756 230.482 69.2876 230.678 68.9116 cv
230.865 68.5361 230.963 67.9722 230.963 67.2202 cv
230.963 66.4688 230.865 65.9048 230.678 65.5293 cv
230.482 65.1538 230.197 64.9653 229.813 64.9653 cv
229.813 64.3794 mo
230.422 64.3794 230.888 64.6274 231.219 65.1084 cv
231.542 65.5972 231.708 66.3032 231.708 67.2202 cv
231.708 68.145 231.542 68.8516 231.219 69.3325 cv
230.888 69.814 230.422 70.0542 229.813 70.0542 cv
229.196 70.0542 228.724 69.814 228.4 69.3325 cv
228.077 68.8516 227.919 68.145 227.919 67.2202 cv
227.919 66.3032 228.077 65.5972 228.4 65.1084 cv
228.724 64.6274 229.196 64.3794 229.813 64.3794 cv
f
234.594 64.9653 mo
234.21 64.9653 233.925 65.1538 233.729 65.5293 cv
233.534 65.9048 233.444 66.4688 233.444 67.2202 cv
233.444 67.9722 233.534 68.5361 233.729 68.9116 cv
233.925 69.2876 234.21 69.4756 234.594 69.4756 cv
234.978 69.4756 235.263 69.2876 235.458 68.9116 cv
235.646 68.5361 235.744 67.9722 235.744 67.2202 cv
235.744 66.4688 235.646 65.9048 235.458 65.5293 cv
235.263 65.1538 234.978 64.9653 234.594 64.9653 cv
234.594 64.3794 mo
235.203 64.3794 235.669 64.6274 235.999 65.1084 cv
236.323 65.5972 236.488 66.3032 236.488 67.2202 cv
236.488 68.145 236.323 68.8516 235.999 69.3325 cv
235.669 69.814 235.203 70.0542 234.594 70.0542 cv
233.978 70.0542 233.504 69.814 233.181 69.3325 cv
232.857 68.8516 232.699 68.145 232.699 67.2202 cv
232.699 66.3032 232.857 65.5972 233.181 65.1084 cv
233.504 64.6274 233.978 64.3794 234.594 64.3794 cv
f
239.374 64.9653 mo
238.991 64.9653 238.706 65.1538 238.51 65.5293 cv
238.314 65.9048 238.225 66.4688 238.225 67.2202 cv
238.225 67.9722 238.314 68.5361 238.51 68.9116 cv
238.706 69.2876 238.991 69.4756 239.374 69.4756 cv
239.758 69.4756 240.044 69.2876 240.239 68.9116 cv
240.427 68.5361 240.524 67.9722 240.524 67.2202 cv
240.524 66.4688 240.427 65.9048 240.239 65.5293 cv
240.044 65.1538 239.758 64.9653 239.374 64.9653 cv
239.374 64.3794 mo
239.983 64.3794 240.449 64.6274 240.78 65.1084 cv
241.104 65.5972 241.269 66.3032 241.269 67.2202 cv
241.269 68.145 241.104 68.8516 240.78 69.3325 cv
240.449 69.814 239.983 70.0542 239.374 70.0542 cv
238.758 70.0542 238.285 69.814 237.961 69.3325 cv
237.638 68.8516 237.48 68.145 237.48 67.2202 cv
237.48 66.3032 237.638 65.5972 237.961 65.1084 cv
238.285 64.6274 238.758 64.3794 239.374 64.3794 cv
f
242.194 54.8086 mo
243.645 54.8086 li
f
242.194 54.8086 mo
243.645 54.8086 li
@
388.351 54.8086 mo
386.9 54.8086 li
f
388.351 54.8086 mo
386.9 54.8086 li
@
220.937 53.9526 mo
221.29 54.0283 221.567 54.186 221.763 54.4263 cv
221.958 54.667 222.063 54.9673 222.063 55.3135 cv
222.063 55.8545 221.876 56.2754 221.508 56.5688 cv
221.132 56.8618 220.605 57.0044 219.922 57.0044 cv
219.688 57.0044 219.448 56.9819 219.208 56.937 cv
218.967 56.8989 218.711 56.8315 218.456 56.7417 cv
218.456 56.0273 li
218.659 56.1479 218.884 56.2378 219.132 56.2983 cv
219.373 56.3584 219.628 56.3882 219.899 56.3882 cv
220.365 56.3882 220.719 56.2983 220.959 56.1177 cv
221.199 55.937 221.327 55.6665 221.327 55.3135 cv
221.327 54.9976 221.215 54.7422 220.989 54.562 cv
220.764 54.3813 220.447 54.2837 220.042 54.2837 cv
219.403 54.2837 li
219.403 53.6748 li
220.072 53.6748 li
220.433 53.6748 220.711 53.6069 220.906 53.4565 cv
221.102 53.314 221.199 53.1035 221.199 52.8257 cv
221.199 52.5474 221.095 52.3291 220.898 52.1787 cv
220.695 52.0283 220.41 51.9536 220.042 51.9536 cv
219.839 51.9536 219.621 51.9761 219.388 52.021 cv
219.155 52.0659 218.899 52.1338 218.621 52.2236 cv
218.621 51.5625 li
218.899 51.4878 219.162 51.4272 219.41 51.3896 cv
219.65 51.3521 219.884 51.3296 220.109 51.3296 cv
220.666 51.3296 221.109 51.4575 221.44 51.7129 cv
221.771 51.9688 221.936 52.314 221.936 52.75 cv
221.936 53.0508 221.846 53.3066 221.673 53.5166 cv
221.5 53.7275 221.252 53.8774 220.937 53.9526 cv
f
225.056 51.9155 mo
224.672 51.9155 224.387 52.104 224.19 52.4795 cv
223.995 52.8555 223.905 53.4189 223.905 54.1709 cv
223.905 54.9224 223.995 55.4863 224.19 55.8623 cv
224.387 56.2378 224.672 56.4258 225.056 56.4258 cv
225.438 56.4258 225.725 56.2378 225.92 55.8623 cv
226.107 55.4863 226.205 54.9224 226.205 54.1709 cv
226.205 53.4189 226.107 52.8555 225.92 52.4795 cv
225.725 52.104 225.438 51.9155 225.056 51.9155 cv
225.056 51.3296 mo
225.664 51.3296 226.13 51.5776 226.461 52.0586 cv
226.784 52.5474 226.949 53.2539 226.949 54.1709 cv
226.949 55.0952 226.784 55.8022 226.461 56.2832 cv
226.13 56.7642 225.664 57.0049 225.056 57.0049 cv
224.438 57.0049 223.966 56.7642 223.643 56.2832 cv
223.319 55.8022 223.161 55.0952 223.161 54.1709 cv
223.161 53.2539 223.319 52.5474 223.643 52.0586 cv
223.966 51.5776 224.438 51.3296 225.056 51.3296 cv
f
229.836 51.9155 mo
229.452 51.9155 229.167 52.104 228.972 52.4795 cv
228.776 52.8555 228.686 53.4189 228.686 54.1709 cv
228.686 54.9224 228.776 55.4863 228.972 55.8623 cv
229.167 56.2378 229.452 56.4258 229.836 56.4258 cv
230.22 56.4258 230.505 56.2378 230.7 55.8623 cv
230.889 55.4863 230.985 54.9224 230.985 54.1709 cv
230.985 53.4189 230.889 52.8555 230.7 52.4795 cv
230.505 52.104 230.22 51.9155 229.836 51.9155 cv
229.836 51.3296 mo
230.445 51.3296 230.911 51.5776 231.241 52.0586 cv
231.564 52.5474 231.73 53.2539 231.73 54.1709 cv
231.73 55.0952 231.564 55.8022 231.241 56.2832 cv
230.911 56.7642 230.445 57.0049 229.836 57.0049 cv
229.22 57.0049 228.746 56.7642 228.423 56.2832 cv
228.1 55.8022 227.941 55.0952 227.941 54.1709 cv
227.941 53.2539 228.1 52.5474 228.423 52.0586 cv
228.746 51.5776 229.22 51.3296 229.836 51.3296 cv
f
234.616 51.9155 mo
234.233 51.9155 233.947 52.104 233.752 52.4795 cv
233.557 52.8555 233.467 53.4189 233.467 54.1709 cv
233.467 54.9224 233.557 55.4863 233.752 55.8623 cv
233.947 56.2378 234.233 56.4258 234.616 56.4258 cv
235 56.4258 235.286 56.2378 235.481 55.8623 cv
235.669 55.4863 235.767 54.9224 235.767 54.1709 cv
235.767 53.4189 235.669 52.8555 235.481 52.4795 cv
235.286 52.104 235 51.9155 234.616 51.9155 cv
234.616 51.3296 mo
235.226 51.3296 235.691 51.5776 236.021 52.0586 cv
236.346 52.5474 236.511 53.2539 236.511 54.1709 cv
236.511 55.0952 236.346 55.8022 236.021 56.2832 cv
235.691 56.7642 235.226 57.0049 234.616 57.0049 cv
234 57.0049 233.526 56.7642 233.203 56.2832 cv
232.88 55.8022 232.722 55.0952 232.722 54.1709 cv
232.722 53.2539 232.88 52.5474 233.203 52.0586 cv
233.526 51.5776 234 51.3296 234.616 51.3296 cv
f
239.397 51.9155 mo
239.014 51.9155 238.729 52.104 238.533 52.4795 cv
238.337 52.8555 238.247 53.4189 238.247 54.1709 cv
238.247 54.9224 238.337 55.4863 238.533 55.8623 cv
238.729 56.2378 239.014 56.4258 239.397 56.4258 cv
239.78 56.4258 240.066 56.2378 240.262 55.8623 cv
240.449 55.4863 240.547 54.9224 240.547 54.1709 cv
240.547 53.4189 240.449 52.8555 240.262 52.4795 cv
240.066 52.104 239.78 51.9155 239.397 51.9155 cv
239.397 51.3296 mo
240.006 51.3296 240.472 51.5776 240.803 52.0586 cv
241.126 52.5474 241.291 53.2539 241.291 54.1709 cv
241.291 55.0952 241.126 55.8022 240.803 56.2832 cv
240.472 56.7642 240.006 57.0049 239.397 57.0049 cv
238.781 57.0049 238.308 56.7642 237.984 56.2832 cv
237.661 55.8022 237.503 55.0952 237.503 54.1709 cv
237.503 53.2539 237.661 52.5474 237.984 52.0586 cv
238.308 51.5776 238.781 51.3296 239.397 51.3296 cv
f
242.194 41.7588 mo
243.645 41.7588 li
f
242.194 41.7588 mo
243.645 41.7588 li
@
388.351 41.7588 mo
386.9 41.7588 li
f
388.351 41.7588 mo
386.9 41.7588 li
@
220.937 40.9033 mo
221.29 40.9785 221.567 41.1362 221.763 41.3765 cv
221.958 41.6172 222.063 41.918 222.063 42.2637 cv
222.063 42.8047 221.876 43.2256 221.508 43.519 cv
221.132 43.812 220.605 43.9551 219.922 43.9551 cv
219.688 43.9551 219.448 43.9321 219.208 43.8872 cv
218.967 43.8496 218.711 43.7822 218.456 43.6919 cv
218.456 42.9775 li
218.659 43.0981 218.884 43.1885 219.132 43.2485 cv
219.373 43.3086 219.628 43.3384 219.899 43.3384 cv
220.365 43.3384 220.719 43.2485 220.959 43.0679 cv
221.199 42.8877 221.327 42.6172 221.327 42.2637 cv
221.327 41.9478 221.215 41.6924 220.989 41.5122 cv
220.764 41.3315 220.447 41.2339 220.042 41.2339 cv
219.403 41.2339 li
219.403 40.625 li
220.072 40.625 li
220.433 40.625 220.711 40.5571 220.906 40.4067 cv
221.102 40.2642 221.199 40.0537 221.199 39.7759 cv
221.199 39.498 221.095 39.2798 220.898 39.1294 cv
220.695 38.979 220.41 38.9038 220.042 38.9038 cv
219.839 38.9038 219.621 38.9263 219.388 38.9717 cv
219.155 39.0166 218.899 39.0845 218.621 39.1743 cv
218.621 38.5132 li
218.899 38.438 219.162 38.3779 219.41 38.3398 cv
219.65 38.3022 219.884 38.2798 220.109 38.2798 cv
220.666 38.2798 221.109 38.4077 221.44 38.6636 cv
221.771 38.9189 221.936 39.2642 221.936 39.7007 cv
221.936 40.0015 221.846 40.2568 221.673 40.4673 cv
221.5 40.6777 221.252 40.8276 220.937 40.9033 cv
f
223.477 38.3774 mo
226.386 38.3774 li
226.386 39.0015 li
224.153 39.0015 li
224.153 40.3472 li
224.259 40.3096 224.371 40.2793 224.477 40.2642 cv
224.582 40.249 224.694 40.2344 224.8 40.2344 cv
225.408 40.2344 225.89 40.4072 226.251 40.7378 cv
226.611 41.0762 226.792 41.5269 226.792 42.0981 cv
226.792 42.6919 226.604 43.1504 226.235 43.4741 cv
225.867 43.7974 225.349 43.9551 224.688 43.9551 cv
224.454 43.9551 224.221 43.9326 223.98 43.9023 cv
223.74 43.8647 223.5 43.812 223.244 43.7295 cv
223.244 42.9854 li
223.462 43.1055 223.688 43.1958 223.928 43.2559 cv
224.161 43.3164 224.409 43.3389 224.672 43.3389 cv
225.093 43.3389 225.432 43.2334 225.68 43.0078 cv
225.92 42.7822 226.048 42.4819 226.048 42.0981 cv
226.048 41.7227 225.92 41.4219 225.68 41.1963 cv
225.432 40.9712 225.093 40.8579 224.672 40.8579 cv
224.477 40.8579 224.273 40.8809 224.078 40.9258 cv
223.883 40.9712 223.68 41.0386 223.477 41.1284 cv
223.477 38.3774 li
f
229.836 38.8662 mo
229.452 38.8662 229.167 39.0542 228.972 39.4297 cv
228.776 39.8057 228.686 40.3696 228.686 41.1211 cv
228.686 41.8726 228.776 42.4365 228.972 42.8125 cv
229.167 43.188 229.452 43.3765 229.836 43.3765 cv
230.22 43.3765 230.505 43.188 230.7 42.8125 cv
230.889 42.4365 230.985 41.8726 230.985 41.1211 cv
230.985 40.3696 230.889 39.8057 230.7 39.4297 cv
230.505 39.0542 230.22 38.8662 229.836 38.8662 cv
229.836 38.2798 mo
230.445 38.2798 230.911 38.5278 231.241 39.0088 cv
231.564 39.4976 231.73 40.2041 231.73 41.1211 cv
231.73 42.0454 231.564 42.7524 231.241 43.2334 cv
230.911 43.7144 230.445 43.9551 229.836 43.9551 cv
229.22 43.9551 228.746 43.7144 228.423 43.2334 cv
228.1 42.7524 227.941 42.0454 227.941 41.1211 cv
227.941 40.2041 228.1 39.4976 228.423 39.0088 cv
228.746 38.5278 229.22 38.2798 229.836 38.2798 cv
f
234.616 38.8662 mo
234.233 38.8662 233.947 39.0542 233.752 39.4297 cv
233.557 39.8057 233.467 40.3696 233.467 41.1211 cv
233.467 41.8726 233.557 42.4365 233.752 42.8125 cv
233.947 43.188 234.233 43.3765 234.616 43.3765 cv
235 43.3765 235.286 43.188 235.481 42.8125 cv
235.669 42.4365 235.767 41.8726 235.767 41.1211 cv
235.767 40.3696 235.669 39.8057 235.481 39.4297 cv
235.286 39.0542 235 38.8662 234.616 38.8662 cv
234.616 38.2798 mo
235.226 38.2798 235.691 38.5278 236.021 39.0088 cv
236.346 39.4976 236.511 40.2041 236.511 41.1211 cv
236.511 42.0454 236.346 42.7524 236.021 43.2334 cv
235.691 43.7144 235.226 43.9551 234.616 43.9551 cv
234 43.9551 233.526 43.7144 233.203 43.2334 cv
232.88 42.7524 232.722 42.0454 232.722 41.1211 cv
232.722 40.2041 232.88 39.4976 233.203 39.0088 cv
233.526 38.5278 234 38.2798 234.616 38.2798 cv
f
239.397 38.8662 mo
239.014 38.8662 238.729 39.0542 238.533 39.4297 cv
238.337 39.8057 238.247 40.3696 238.247 41.1211 cv
238.247 41.8726 238.337 42.4365 238.533 42.8125 cv
238.729 43.188 239.014 43.3765 239.397 43.3765 cv
239.78 43.3765 240.066 43.188 240.262 42.8125 cv
240.449 42.4365 240.547 41.8726 240.547 41.1211 cv
240.547 40.3696 240.449 39.8057 240.262 39.4297 cv
240.066 39.0542 239.78 38.8662 239.397 38.8662 cv
239.397 38.2798 mo
240.006 38.2798 240.472 38.5278 240.803 39.0088 cv
241.126 39.4976 241.291 40.2041 241.291 41.1211 cv
241.291 42.0454 241.126 42.7524 240.803 43.2334 cv
240.472 43.7144 240.006 43.9551 239.397 43.9551 cv
238.781 43.9551 238.308 43.7144 237.984 43.2334 cv
237.661 42.7524 237.503 42.0454 237.503 41.1211 cv
237.503 40.2041 237.661 39.4976 237.984 39.0088 cv
238.308 38.5278 238.781 38.2798 239.397 38.2798 cv
f
242.194 28.709 mo
243.645 28.709 li
f
242.194 28.709 mo
243.645 28.709 li
@
388.351 28.709 mo
386.9 28.709 li
f
388.351 28.709 mo
386.9 28.709 li
@
220.521 25.9746 mo
218.65 28.8984 li
220.521 28.8984 li
220.521 25.9746 li
220.326 25.3281 mo
221.259 25.3281 li
221.259 28.8984 li
222.04 28.8984 li
222.04 29.5151 li
221.259 29.5151 li
221.259 30.8076 li
220.521 30.8076 li
220.521 29.5151 li
218.049 29.5151 li
218.049 28.8008 li
220.326 25.3281 li
cp
f
224.852 25.8164 mo
224.468 25.8164 224.183 26.0044 223.987 26.3804 cv
223.792 26.7563 223.701 27.3198 223.701 28.0718 cv
223.701 28.8228 223.792 29.3872 223.987 29.7632 cv
224.183 30.1387 224.468 30.3267 224.852 30.3267 cv
225.234 30.3267 225.521 30.1387 225.716 29.7632 cv
225.904 29.3872 226.001 28.8228 226.001 28.0718 cv
226.001 27.3198 225.904 26.7563 225.716 26.3804 cv
225.521 26.0044 225.234 25.8164 224.852 25.8164 cv
224.852 25.2305 mo
225.46 25.2305 225.927 25.4785 226.257 25.9595 cv
226.58 26.4478 226.745 27.1543 226.745 28.0718 cv
226.745 28.9961 226.58 29.7026 226.257 30.1836 cv
225.927 30.6646 225.46 30.9058 224.852 30.9058 cv
224.235 30.9058 223.762 30.6646 223.438 30.1836 cv
223.115 29.7026 222.957 28.9961 222.957 28.0718 cv
222.957 27.1543 223.115 26.4478 223.438 25.9595 cv
223.762 25.4785 224.235 25.2305 224.852 25.2305 cv
f
229.632 25.8164 mo
229.249 25.8164 228.963 26.0044 228.768 26.3804 cv
228.572 26.7563 228.481 27.3198 228.481 28.0718 cv
228.481 28.8228 228.572 29.3872 228.768 29.7632 cv
228.963 30.1387 229.249 30.3267 229.632 30.3267 cv
230.016 30.3267 230.301 30.1387 230.497 29.7632 cv
230.685 29.3872 230.782 28.8228 230.782 28.0718 cv
230.782 27.3198 230.685 26.7563 230.497 26.3804 cv
230.301 26.0044 230.016 25.8164 229.632 25.8164 cv
229.632 25.2305 mo
230.241 25.2305 230.707 25.4785 231.037 25.9595 cv
231.36 26.4478 231.526 27.1543 231.526 28.0718 cv
231.526 28.9961 231.36 29.7026 231.037 30.1836 cv
230.707 30.6646 230.241 30.9058 229.632 30.9058 cv
229.016 30.9058 228.542 30.6646 228.219 30.1836 cv
227.896 29.7026 227.737 28.9961 227.737 28.0718 cv
227.737 27.1543 227.896 26.4478 228.219 25.9595 cv
228.542 25.4785 229.016 25.2305 229.632 25.2305 cv
f
234.413 25.8164 mo
234.029 25.8164 233.743 26.0044 233.548 26.3804 cv
233.353 26.7563 233.263 27.3198 233.263 28.0718 cv
233.263 28.8228 233.353 29.3872 233.548 29.7632 cv
233.743 30.1387 234.029 30.3267 234.413 30.3267 cv
234.796 30.3267 235.082 30.1387 235.277 29.7632 cv
235.465 29.3872 235.563 28.8228 235.563 28.0718 cv
235.563 27.3198 235.465 26.7563 235.277 26.3804 cv
235.082 26.0044 234.796 25.8164 234.413 25.8164 cv
234.413 25.2305 mo
235.021 25.2305 235.487 25.4785 235.818 25.9595 cv
236.142 26.4478 236.307 27.1543 236.307 28.0718 cv
236.307 28.9961 236.142 29.7026 235.818 30.1836 cv
235.487 30.6646 235.021 30.9058 234.413 30.9058 cv
233.796 30.9058 233.322 30.6646 233 30.1836 cv
232.677 29.7026 232.519 28.9961 232.519 28.0718 cv
232.519 27.1543 232.677 26.4478 233 25.9595 cv
233.322 25.4785 233.796 25.2305 234.413 25.2305 cv
f
239.193 25.8164 mo
238.81 25.8164 238.524 26.0044 238.329 26.3804 cv
238.133 26.7563 238.043 27.3198 238.043 28.0718 cv
238.043 28.8228 238.133 29.3872 238.329 29.7632 cv
238.524 30.1387 238.81 30.3267 239.193 30.3267 cv
239.576 30.3267 239.862 30.1387 240.058 29.7632 cv
240.245 29.3872 240.344 28.8228 240.344 28.0718 cv
240.344 27.3198 240.245 26.7563 240.058 26.3804 cv
239.862 26.0044 239.576 25.8164 239.193 25.8164 cv
239.193 25.2305 mo
239.802 25.2305 240.268 25.4785 240.599 25.9595 cv
240.922 26.4478 241.088 27.1543 241.088 28.0718 cv
241.088 28.9961 240.922 29.7026 240.599 30.1836 cv
240.268 30.6646 239.802 30.9058 239.193 30.9058 cv
238.577 30.9058 238.104 30.6646 237.78 30.1836 cv
237.457 29.7026 237.299 28.9961 237.299 28.0718 cv
237.299 27.1543 237.457 26.4478 237.78 25.9595 cv
238.104 25.4785 238.577 25.2305 239.193 25.2305 cv
f
242.194 15.6597 mo
243.645 15.6597 li
f
242.194 15.6597 mo
243.645 15.6597 li
@
388.351 15.6597 mo
386.9 15.6597 li
f
388.351 15.6597 mo
386.9 15.6597 li
@
220.521 12.9248 mo
218.65 15.8486 li
220.521 15.8486 li
220.521 12.9248 li
220.326 12.2783 mo
221.259 12.2783 li
221.259 15.8486 li
222.04 15.8486 li
222.04 16.4653 li
221.259 16.4653 li
221.259 17.7578 li
220.521 17.7578 li
220.521 16.4653 li
218.049 16.4653 li
218.049 15.751 li
220.326 12.2783 li
cp
f
223.272 12.2783 mo
226.182 12.2783 li
226.182 12.9023 li
223.949 12.9023 li
223.949 14.2476 li
224.055 14.21 224.168 14.1802 224.272 14.165 cv
224.378 14.1499 224.49 14.1353 224.596 14.1353 cv
225.205 14.1353 225.686 14.3081 226.047 14.6387 cv
226.407 14.9766 226.588 15.4277 226.588 15.999 cv
226.588 16.5928 226.399 17.0513 226.031 17.3745 cv
225.663 17.6978 225.145 17.8555 224.483 17.8555 cv
224.25 17.8555 224.018 17.833 223.776 17.8032 cv
223.536 17.7651 223.296 17.7129 223.04 17.6304 cv
223.04 16.8862 li
223.258 17.0063 223.483 17.0967 223.724 17.1567 cv
223.957 17.2168 224.205 17.2393 224.468 17.2393 cv
224.889 17.2393 225.228 17.1343 225.476 16.9087 cv
225.716 16.6831 225.844 16.3823 225.844 15.999 cv
225.844 15.6235 225.716 15.3228 225.476 15.0972 cv
225.228 14.8716 224.889 14.7588 224.468 14.7588 cv
224.272 14.7588 224.069 14.7813 223.874 14.8262 cv
223.679 14.8716 223.476 14.939 223.272 15.0293 cv
223.272 12.2783 li
f
229.632 12.7671 mo
229.249 12.7671 228.963 12.9551 228.768 13.3306 cv
228.572 13.7065 228.481 14.27 228.481 15.022 cv
228.481 15.7734 228.572 16.3374 228.768 16.7134 cv
228.963 17.0889 229.249 17.2769 229.632 17.2769 cv
230.016 17.2769 230.301 17.0889 230.497 16.7134 cv
230.685 16.3374 230.782 15.7734 230.782 15.022 cv
230.782 14.27 230.685 13.7065 230.497 13.3306 cv
230.301 12.9551 230.016 12.7671 229.632 12.7671 cv
229.632 12.1807 mo
230.241 12.1807 230.707 12.4287 231.037 12.9097 cv
231.36 13.3984 231.526 14.105 231.526 15.022 cv
231.526 15.9463 231.36 16.6533 231.037 17.1343 cv
230.707 17.6152 230.241 17.856 229.632 17.856 cv
229.016 17.856 228.542 17.6152 228.219 17.1343 cv
227.896 16.6533 227.737 15.9463 227.737 15.022 cv
227.737 14.105 227.896 13.3984 228.219 12.9097 cv
228.542 12.4287 229.016 12.1807 229.632 12.1807 cv
f
234.413 12.7671 mo
234.029 12.7671 233.743 12.9551 233.548 13.3306 cv
233.353 13.7065 233.263 14.27 233.263 15.022 cv
233.263 15.7734 233.353 16.3374 233.548 16.7134 cv
233.743 17.0889 234.029 17.2769 234.413 17.2769 cv
234.796 17.2769 235.082 17.0889 235.277 16.7134 cv
235.465 16.3374 235.563 15.7734 235.563 15.022 cv
235.563 14.27 235.465 13.7065 235.277 13.3306 cv
235.082 12.9551 234.796 12.7671 234.413 12.7671 cv
234.413 12.1807 mo
235.021 12.1807 235.487 12.4287 235.818 12.9097 cv
236.142 13.3984 236.307 14.105 236.307 15.022 cv
236.307 15.9463 236.142 16.6533 235.818 17.1343 cv
235.487 17.6152 235.021 17.856 234.413 17.856 cv
233.796 17.856 233.322 17.6152 233 17.1343 cv
232.677 16.6533 232.519 15.9463 232.519 15.022 cv
232.519 14.105 232.677 13.3984 233 12.9097 cv
233.322 12.4287 233.796 12.1807 234.413 12.1807 cv
f
239.193 12.7671 mo
238.81 12.7671 238.524 12.9551 238.329 13.3306 cv
238.133 13.7065 238.043 14.27 238.043 15.022 cv
238.043 15.7734 238.133 16.3374 238.329 16.7134 cv
238.524 17.0889 238.81 17.2769 239.193 17.2769 cv
239.576 17.2769 239.862 17.0889 240.058 16.7134 cv
240.245 16.3374 240.344 15.7734 240.344 15.022 cv
240.344 14.27 240.245 13.7065 240.058 13.3306 cv
239.862 12.9551 239.576 12.7671 239.193 12.7671 cv
239.193 12.1807 mo
239.802 12.1807 240.268 12.4287 240.599 12.9097 cv
240.922 13.3984 241.088 14.105 241.088 15.022 cv
241.088 15.9463 240.922 16.6533 240.599 17.1343 cv
240.268 17.6152 239.802 17.856 239.193 17.856 cv
238.577 17.856 238.104 17.6152 237.78 17.1343 cv
237.457 16.6533 237.299 15.9463 237.299 15.022 cv
237.299 14.105 237.457 13.3984 237.78 12.9097 cv
238.104 12.4287 238.577 12.1807 239.193 12.1807 cv
f
204.815 106.403 mo
204.815 102.938 li
205.439 102.938 li
205.439 105.659 li
207.063 105.659 li
207.063 103.051 li
207.687 103.051 li
207.687 105.659 li
209.671 105.659 li
209.671 102.871 li
210.295 102.871 li
210.295 106.403 li
204.815 106.403 li
cp
f
204.582 101.006 mo
210.295 101.006 li
210.295 101.683 li
204.582 101.683 li
204.582 101.006 li
cp
f
208.07 96.0757 mo
208.401 96.0757 li
208.401 99.1797 li
208.866 99.1494 209.228 99.0142 209.468 98.7588 cv
209.709 98.5107 209.829 98.1655 209.829 97.7144 cv
209.829 97.4585 209.799 97.2031 209.739 96.9624 cv
209.679 96.7222 209.581 96.4741 209.445 96.2339 cv
210.085 96.2339 li
210.189 96.4741 210.272 96.7222 210.317 96.9775 cv
210.362 97.2329 210.393 97.4961 210.393 97.752 cv
210.393 98.4131 210.205 98.9321 209.829 99.3154 cv
209.453 99.6982 208.935 99.8867 208.28 99.8867 cv
207.611 99.8867 207.078 99.7065 206.68 99.3452 cv
206.289 98.9844 206.086 98.4883 206.086 97.8721 cv
206.086 97.3159 206.266 96.8799 206.619 96.5566 cv
206.98 96.2407 207.461 96.0757 208.07 96.0757 cv
207.875 96.752 mo
207.506 96.7598 207.213 96.8647 206.987 97.0601 cv
206.77 97.2632 206.657 97.5337 206.657 97.8647 cv
206.657 98.2407 206.77 98.541 206.98 98.7666 cv
207.19 98.9917 207.491 99.1274 207.875 99.1577 cv
207.875 96.752 li
f
206.973 91.7686 mo
206.672 91.6035 206.454 91.3999 206.304 91.1675 cv
206.161 90.9341 206.086 90.6563 206.086 90.333 cv
206.086 89.9121 206.236 89.5815 206.536 89.3481 cv
206.837 89.1152 207.266 88.9951 207.814 88.9951 cv
210.295 88.9951 li
210.295 89.6714 li
207.837 89.6714 li
207.446 89.6714 207.153 89.7466 206.957 89.8818 cv
206.77 90.0249 206.672 90.2354 206.672 90.521 cv
206.672 90.874 206.792 91.1523 207.025 91.355 cv
207.258 91.5581 207.574 91.6558 207.973 91.6558 cv
210.295 91.6558 li
210.295 92.3325 li
207.837 92.3325 li
207.446 92.3325 207.153 92.4077 206.957 92.543 cv
206.77 92.6855 206.672 92.9038 206.672 93.189 cv
206.672 93.5352 206.792 93.813 207.025 94.0161 cv
207.258 94.2192 207.574 94.3164 207.973 94.3164 cv
210.295 94.3164 li
210.295 94.9932 li
206.184 94.9932 li
206.184 94.3164 li
206.822 94.3164 li
206.574 94.166 206.387 93.9785 206.266 93.7603 cv
206.146 93.5498 206.086 93.2944 206.086 92.9937 cv
206.086 92.6934 206.161 92.4448 206.312 92.2344 cv
206.462 92.0239 206.687 91.8735 206.973 91.7686 cv
f
208.07 84.1313 mo
208.401 84.1313 li
208.401 87.2358 li
208.866 87.2056 209.228 87.0708 209.468 86.8149 cv
209.709 86.5669 209.829 86.2212 209.829 85.7705 cv
209.829 85.5146 209.799 85.2588 209.739 85.0186 cv
209.679 84.7778 209.581 84.5303 209.445 84.2896 cv
210.085 84.2896 li
210.189 84.5303 210.272 84.7778 210.317 85.0337 cv
210.362 85.2891 210.393 85.5522 210.393 85.8076 cv
210.393 86.4692 210.205 86.9878 209.829 87.3716 cv
209.453 87.7544 208.935 87.9429 208.28 87.9429 cv
207.611 87.9429 207.078 87.7622 206.68 87.4014 cv
206.289 87.0405 206.086 86.5444 206.086 85.9282 cv
206.086 85.3721 206.266 84.936 206.619 84.6128 cv
206.98 84.2974 207.461 84.1313 208.07 84.1313 cv
207.875 84.8081 mo
207.506 84.8159 207.213 84.9209 206.987 85.1167 cv
206.77 85.3188 206.657 85.5898 206.657 85.9209 cv
206.657 86.2969 206.77 86.5972 206.98 86.8228 cv
207.19 87.0483 207.491 87.1831 207.875 87.2134 cv
207.875 84.8081 li
f
207.814 79.6069 mo
210.295 79.6069 li
210.295 80.2832 li
207.837 80.2832 li
207.446 80.2832 207.16 80.3657 206.965 80.5161 cv
206.77 80.6665 206.672 80.8921 206.672 81.1929 cv
206.672 81.561 206.792 81.8467 207.025 82.0571 cv
207.259 82.2676 207.573 82.373 207.973 82.373 cv
210.295 82.373 li
210.295 83.0493 li
206.184 83.0493 li
206.184 82.373 li
206.822 82.373 li
206.582 82.2148 206.394 82.0273 206.273 81.8018 cv
206.153 81.5835 206.086 81.3276 206.086 81.0425 cv
206.086 80.5767 206.236 80.2158 206.529 79.9751 cv
206.822 79.7349 207.251 79.6069 207.814 79.6069 cv
f
205.019 77.5923 mo
206.184 77.5923 li
206.184 76.2017 li
206.71 76.2017 li
206.71 77.5923 li
208.942 77.5923 li
209.28 77.5923 209.498 77.5469 209.588 77.4565 cv
209.687 77.3667 209.731 77.1787 209.731 76.8931 cv
209.731 76.2017 li
210.295 76.2017 li
210.295 76.8931 li
210.295 77.4194 210.197 77.7803 210.002 77.9756 cv
209.806 78.1714 209.453 78.2686 208.942 78.2686 cv
206.71 78.2686 li
206.71 78.7646 li
206.184 78.7646 li
206.184 78.2686 li
205.019 78.2686 li
205.019 77.5923 li
f
208.228 73.4429 mo
208.228 73.9917 208.296 74.3677 208.416 74.5781 cv
208.544 74.7886 208.754 74.8936 209.055 74.8936 cv
209.295 74.8936 209.491 74.8184 209.626 74.6606 cv
209.769 74.5029 209.837 74.2847 209.837 74.0142 cv
209.837 73.6382 209.709 73.3374 209.438 73.1123 cv
209.175 72.8867 208.821 72.7739 208.378 72.7739 cv
208.228 72.7739 li
208.228 73.4429 li
207.95 72.0977 mo
210.295 72.0977 li
210.295 72.7739 li
209.671 72.7739 li
209.927 72.9321 210.107 73.1274 210.22 73.353 cv
210.332 73.5781 210.393 73.8638 210.393 74.1948 cv
210.393 74.6157 210.28 74.9541 210.047 75.2017 cv
209.813 75.4502 209.498 75.5703 209.1 75.5703 cv
208.642 75.5703 208.296 75.4199 208.055 75.1045 cv
207.822 74.7959 207.701 74.3379 207.701 73.7212 cv
207.701 72.7739 li
207.634 72.7739 li
207.326 72.7739 207.085 72.8794 206.912 73.0825 cv
206.747 73.2852 206.657 73.5708 206.657 73.9395 cv
206.657 74.1797 206.687 74.4053 206.747 74.6304 cv
206.808 74.856 206.89 75.0669 206.995 75.2695 cv
206.371 75.2695 li
206.281 75.0288 206.206 74.7886 206.161 74.5557 cv
206.115 74.3223 206.086 74.0972 206.086 73.8716 cv
206.086 73.2778 206.243 72.834 206.552 72.541 cv
206.859 72.248 207.326 72.0977 207.95 72.0977 cv
f
206.814 68.3242 mo
206.77 68.3994 206.739 68.4819 206.717 68.5723 cv
206.702 68.6626 206.687 68.7603 206.687 68.8652 cv
206.687 69.249 206.814 69.5415 207.063 69.7446 cv
207.311 69.9556 207.664 70.0532 208.13 70.0532 cv
210.295 70.0532 li
210.295 70.7295 li
206.184 70.7295 li
206.184 70.0532 li
206.822 70.0532 li
206.574 69.9175 206.386 69.73 206.266 69.5044 cv
206.146 69.2788 206.086 69.001 206.086 68.6699 cv
206.086 68.625 206.093 68.5723 206.093 68.5122 cv
206.101 68.4595 206.108 68.3994 206.123 68.3242 cv
206.814 68.3242 li
f
210.671 65.9038 mo
211.151 66.0991 211.476 66.2876 211.625 66.4673 cv
211.775 66.6479 211.851 66.8882 211.851 67.1895 cv
211.851 67.7305 li
211.287 67.7305 li
211.287 67.332 li
211.287 67.1514 211.242 67.0088 211.151 66.9038 cv
211.062 66.7983 210.858 66.686 210.528 66.5576 cv
210.228 66.4375 li
206.184 68.0986 li
206.184 67.3848 li
209.4 66.0991 li
206.184 64.814 li
206.184 64.0996 li
210.671 65.9038 li
f
206.304 58.1543 mo
206.942 58.1543 li
206.853 58.3496 206.777 58.5454 206.725 58.748 cv
206.68 58.959 206.649 59.1689 206.649 59.3867 cv
206.649 59.7251 206.702 59.981 206.808 60.1465 cv
206.912 60.3115 207.063 60.394 207.266 60.394 cv
207.424 60.394 207.544 60.334 207.634 60.2144 cv
207.724 60.0938 207.814 59.853 207.89 59.4922 cv
207.942 59.2593 li
208.048 58.7783 208.198 58.4399 208.378 58.2368 cv
208.566 58.0415 208.829 57.936 209.16 57.936 cv
209.544 57.936 209.844 58.0864 210.062 58.3877 cv
210.287 58.688 210.393 59.1089 210.393 59.6353 cv
210.393 59.8608 210.37 60.0859 210.333 60.3267 cv
210.295 60.5669 210.234 60.8149 210.145 61.0781 cv
209.445 61.0781 li
209.581 60.8306 209.679 60.5825 209.739 60.3418 cv
209.807 60.1016 209.836 59.8608 209.836 59.6201 cv
209.836 59.3042 209.784 59.0562 209.679 58.8833 cv
209.573 58.7183 209.415 58.6279 209.213 58.6279 cv
209.032 58.6279 208.89 58.6958 208.792 58.8159 cv
208.693 58.936 208.597 59.2065 208.506 59.6274 cv
208.453 59.8608 li
208.363 60.2817 208.228 60.5898 208.048 60.77 cv
207.867 60.958 207.619 61.0483 207.296 61.0483 cv
206.912 61.0483 206.612 60.9131 206.401 60.6421 cv
206.19 60.3716 206.086 59.981 206.086 59.4697 cv
206.086 59.2217 206.108 58.9888 206.146 58.7632 cv
206.184 58.5454 206.235 58.3423 206.304 58.1543 cv
f
205.019 56.1924 mo
206.184 56.1924 li
206.184 54.8022 li
206.71 54.8022 li
206.71 56.1924 li
208.942 56.1924 li
209.28 56.1924 209.498 56.1475 209.588 56.0571 cv
209.687 55.9673 209.731 55.7788 209.731 55.4932 cv
209.731 54.8022 li
210.295 54.8022 li
210.295 55.4932 li
210.295 56.0195 210.197 56.3809 210.002 56.5762 cv
209.806 56.7715 209.453 56.8691 208.942 56.8691 cv
206.71 56.8691 li
206.71 57.3652 li
206.184 57.3652 li
206.184 56.8691 li
205.019 56.8691 li
205.019 56.1924 li
f
208.07 50.3975 mo
208.401 50.3975 li
208.401 53.5015 li
208.866 53.4717 209.228 53.3359 209.468 53.0806 cv
209.709 52.8325 209.829 52.4868 209.829 52.0361 cv
209.829 51.7803 209.799 51.5249 209.739 51.2842 cv
209.679 51.0435 209.581 50.7959 209.445 50.5552 cv
210.085 50.5552 li
210.189 50.7959 210.272 51.0435 210.317 51.2993 cv
210.362 51.5547 210.393 51.8179 210.393 52.0737 cv
210.393 52.7349 210.205 53.2534 209.829 53.6367 cv
209.453 54.0205 208.935 54.208 208.28 54.208 cv
207.611 54.208 207.078 54.0278 206.68 53.667 cv
206.289 53.3062 206.086 52.8101 206.086 52.1938 cv
206.086 51.6372 206.266 51.2017 206.619 50.8784 cv
206.98 50.5625 207.461 50.3975 208.07 50.3975 cv
207.875 51.0737 mo
207.506 51.0815 207.213 51.1865 206.987 51.3818 cv
206.77 51.585 206.657 51.855 206.657 52.186 cv
206.657 52.562 206.77 52.8628 206.98 53.0879 cv
207.19 53.3135 207.491 53.4492 207.875 53.479 cv
207.875 51.0737 li
f
209.679 48.6382 mo
211.851 48.6382 li
211.851 49.3149 li
206.184 49.3149 li
206.184 48.6382 li
206.808 48.6382 li
206.567 48.5029 206.387 48.3228 206.266 48.105 cv
206.146 47.8867 206.086 47.6235 206.086 47.3228 cv
206.086 46.8271 206.288 46.4209 206.68 46.1055 cv
207.078 45.7974 207.597 45.6396 208.243 45.6396 cv
208.89 45.6396 209.415 45.7974 209.807 46.1055 cv
210.197 46.4209 210.393 46.8271 210.393 47.3228 cv
210.393 47.6235 210.332 47.8867 210.22 48.105 cv
210.107 48.3228 209.927 48.5029 209.679 48.6382 cv
208.243 46.3384 mo
207.747 46.3384 207.363 46.4434 207.078 46.6465 cv
206.792 46.8569 206.649 47.1353 206.649 47.4888 cv
206.649 47.8491 206.792 48.1274 207.078 48.3301 cv
207.363 48.5405 207.747 48.6382 208.243 48.6382 cv
208.739 48.6382 209.13 48.5405 209.415 48.3301 cv
209.701 48.1274 209.837 47.8491 209.837 47.4888 cv
209.837 47.1353 209.701 46.8569 209.415 46.6465 cv
209.13 46.4434 208.739 46.3384 208.243 46.3384 cv
f
206.304 41.896 mo
206.942 41.896 li
206.853 42.0913 206.777 42.2871 206.725 42.4897 cv
206.68 42.7002 206.649 42.9106 206.649 43.1289 cv
206.649 43.4673 206.702 43.7227 206.808 43.8877 cv
206.912 44.0532 207.063 44.1357 207.266 44.1357 cv
207.424 44.1357 207.544 44.0762 207.634 43.9556 cv
207.724 43.8354 207.814 43.5952 207.89 43.2339 cv
207.942 43.001 li
208.048 42.52 208.198 42.1816 208.378 41.9785 cv
208.566 41.7832 208.829 41.6782 209.16 41.6782 cv
209.544 41.6782 209.844 41.8281 210.062 42.1289 cv
210.287 42.4297 210.393 42.8506 210.393 43.377 cv
210.393 43.6021 210.37 43.8276 210.333 44.0684 cv
210.295 44.3086 210.234 44.5571 210.145 44.8198 cv
209.445 44.8198 li
209.581 44.5718 209.679 44.3237 209.739 44.0835 cv
209.807 43.8428 209.836 43.6021 209.836 43.3618 cv
209.836 43.0464 209.784 42.7979 209.679 42.6255 cv
209.573 42.4595 209.415 42.3696 209.213 42.3696 cv
209.032 42.3696 208.89 42.437 208.792 42.5576 cv
208.693 42.6777 208.597 42.9482 208.506 43.3691 cv
208.453 43.6021 li
208.363 44.0234 208.228 44.3315 208.048 44.5117 cv
207.867 44.6997 207.619 44.7896 207.296 44.7896 cv
206.912 44.7896 206.612 44.6548 206.401 44.3843 cv
206.19 44.1133 206.086 43.7227 206.086 43.2114 cv
206.086 42.9634 206.108 42.7305 206.146 42.5049 cv
206.184 42.2871 206.235 42.084 206.304 41.896 cv
f
.36249 lw
388.351 133.106 mo
388.351 15.6597 li
@
242.194 133.106 mo
242.194 15.6597 li
@
242.194 133.106 mo
388.35 133.106 li
@
242.194 15.6597 mo
388.35 15.6597 li
@
grestore
grestore
295.757 172.775 mo
295.757 172.742 295.757 172.72 295.57 172.534 cv
294.2 171.153 293.85 169.082 293.85 167.405 cv
293.85 165.498 294.267 163.591 295.614 162.221 cv
295.757 162.09 295.757 162.068 295.757 162.035 cv
295.757 161.958 295.713 161.925 295.647 161.925 cv
295.537 161.925 294.551 162.67 293.904 164.063 cv
293.346 165.268 293.214 166.484 293.214 167.405 cv
293.214 168.259 293.335 169.585 293.938 170.824 cv
294.595 172.171 295.537 172.884 295.647 172.884 cv
295.713 172.884 295.757 172.851 295.757 172.775 cv
cp
f
298.276 166.013 mo
298.276 162.539 li
296.698 162.66 li
296.698 163 li
297.465 163 297.553 163.076 297.553 163.613 cv
297.553 170.144 li
297.827 170.144 li
297.838 170.134 297.926 169.98 298.222 169.465 cv
298.386 169.714 298.846 170.254 299.657 170.254 cv
300.961 170.254 302.101 169.185 302.101 167.777 cv
302.101 166.386 301.026 165.3 299.777 165.3 cv
298.923 165.3 298.451 165.816 298.276 166.013 cv
cp
298.309 168.895 mo
298.309 166.638 li
298.309 166.429 298.309 166.418 298.43 166.244 cv
298.856 165.629 299.46 165.542 299.723 165.542 cv
300.216 165.542 300.61 165.827 300.873 166.244 cv
301.158 166.693 301.191 167.318 301.191 167.767 cv
301.191 168.171 301.169 168.83 300.852 169.323 cv
300.621 169.663 300.205 170.024 299.613 170.024 cv
299.12 170.024 298.726 169.761 298.462 169.355 cv
298.309 169.125 298.309 169.092 298.309 168.895 cv
cp
f
305.647 167.405 mo
305.647 166.55 305.526 165.224 304.924 163.986 cv
304.267 162.638 303.323 161.925 303.214 161.925 cv
303.148 161.925 303.104 161.969 303.104 162.035 cv
303.104 162.068 303.104 162.09 303.313 162.287 cv
304.387 163.372 305.012 165.115 305.012 167.405 cv
305.012 169.279 304.605 171.208 303.247 172.588 cv
303.104 172.72 303.104 172.742 303.104 172.775 cv
303.104 172.84 303.148 172.884 303.214 172.884 cv
303.323 172.884 304.31 172.139 304.957 170.748 cv
305.516 169.542 305.647 168.326 305.647 167.405 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (008x003.eps)%%CreationDate: 27/05/15 9:44 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6GC))*cT$6b!8dg?OG"=8?IB-+^%WQ\8@_*<!86PgpQ+q!O5r(V).nVsm/,OYY&j'>">h0(Q=O-]/N]N[D#Q>mT8iTik'r_\%Z6U_rb=Lp(SC@usO\ThET%5t%10N)7/M*8h<(Vkn;H?\326#nb<gGTVhCCKkJ%ocYmW#l7>3g8;c$H_P=\9J/Xu):HQ$7IN8`%t^%p#^aeS+Xqi=!F3md@\RRoieoZriU@,ZCI0k-nA)_^Rt2aiU?M6XhBruD&^=V'<1Ps"*Ho;pmm"\)R&hkC@)ifX]9SZiGf)EQquf?%=fpG4NW:C]+B^\6fb4r#./RrVm^2]eg$,pqh9T]n+iBab2d>1)p(t@o_1.3@,Y_L:cd$=`Xa6gJ,;]J%A9C/&I(J3<8a%EKV&8\e%#&7@E_W2_Y8QYfTZhC#fjE@Y'XgKU3o'PkukPmf6APE8=O\bi7oXA.B?SjsYJ=VQ?S!*!.=fp5J1$ALU^%0Hp!#<#9[(ps`rEedk%e!p#;m/']/i[k-<p+(XEg6?p9^eq/`3,`+9//KliX6HpX1_`#efXdMNZEg=Z8_KE2,lXtaP\`ooeXYc5pQN%;F^g?C.?p]>@,4]W%oDQ##A0i$,ST8hQrE47\C+;f5IZWDs/`D2Ks%h#H$?Wnf#3uIa=Q.&t#K6MtN&GYS!CGD:Hij+S`I\\aZiHLgOGlZ6d]G&$`%Z^)%s%RD1h*j>fi1I%/Vd\M]D<#9&^nIccIoR5UW[^24<Vj(-`jb2:L4Q1oC'-]*P[RrK_^LjsS[OMhC`CRM2Mr"D`DX.(V=5FQ@];Zp%9,.g/Ata`N$3_tZ0&tE$feDp_EZ(L9bOcg40u]L=6X-?^nP0!f"_#;E/;8Mh:Fq3Ji]X-aYXeJFA["]"M>cS$T^Q?^n.U:[O73fu%U3*+e@up*mqi-(;MLE?".5bi:=:4qZT3.sq7Mt;!@SUW2WCX"ATCbk3F,E-"S`3+C8'EuSGR=3W94@ki'5O<^UqNYO.*(g1QGWW@%%TBCSGHlYmM8-9=PlLMM0h2Lu@O^XcISqdr.A:j[m:2&Z"qYi.5Fc@#5>$&L7HqhV6@2J48'EDgZs?ikk8,_ds'Zf3*LBId*PP6p%9qPnpn.SGlq8WD2Ra?9K'?aeP&nruOI-a\Pd2&[&EuF,G_PI\rVijAXJWC2a;bD7k*Mkf6QdQ<tk8`H/UUXe_hE%d0^/(BMIhZrb%19!*/Sl=@i)Tq+_Q!\aBdruF=5$Hd)`TcI+5*^"<pTFGQgTCtTOm[7X;q^77@`0^PDnFNW\8ltB]<ko@VCYC$+9&*?;.fhBKg'MV%dXO6;iBR&irKg(@3eb(nks*Xm^YQZsT4QF-QGqUefY;g*5&pVNJ")r"\,2Nk9;IJ7$??*oJ#*eVmJ`s^,j-9"kK#a_UjT#Rq(MR\%qPS!19eR=+8C+#q0:28Gq7ijDn1XZ-+aGU`l"6'mNDK$c.:L]?r-,ojaOeKG71%[(Mn/uI$u@`pD>o%?G'brfg=q;S9(5n<Mdjs1%s68;.rqB79pGVZC.,"B^r)]VBHf#[;mGM1;D:6lgiE&mAk[.Je'Mp3Cl0gD)D)7Q<1af+X)82Dj+O8UUPt2GQKr*23DOho4n/d;L%.X=p4AW,"<TBHX\T4"lpgOQ^]es7+&C"(72nsi@Ue#u0.iTuekAQBRd[WueQpTuTL4A\Ks;6!L-n@oGB-k7Tk2oWVL*_Y1F@k_Y"%=ktZ&qQ%.+;f""E@up:0dY*Ka=XWkTlj@WI4ktciN+9#DRhS6\h-d'Q634]22!F]m?tOKZ32Na)aXLdu$s]dT;dEhY[WS=:Oi$0D%p=F#D:n73t6UfKu,$"OtjAZGY+gL=:,rS17?EAVTQG@/"=,Bh<5=LT8)WQ#Js/37;C^hK4ff)YD,3Ph]VaY`b90\cT\k#,I.Hd(#%UZBm3*ZjVk5%Kms*g7@^gDPd8GI33k,delZRQCSA2cu'2DhR\gDks2saLR(-XCR0RF#AZGqX?2,Zm`!b*;Mu-3>c[\0m6c!A>a;!%V'rc$a>ds2<h*4WT!pYthE#/,bQ\Ip?@Phj`L0Al?)OK#+49^U)4d"#g.*WTI[@`oJRX2ljKbsXe%m,QAlHobY)>8gAM:/JntHa+%6Y^01[N(/[C@P>9K8j9R,kbmu9;?eThT8\YGX&^0'uqlUk>W5lplGkpGNQ1*BVe\gEscA#gU,j)$VIU7ja9G[7qsac0l4d*_GgZc%#OpNB<.U?:HRVPL:o<Eu>bB-HYJ1QIjV$TI$%#8*>T<i@)[>bFREa"c-c>%P+tX26"\*3_Na.G#i/CU4:.qB,d[Z>8<h_-Ad4,Cj%8^so9OcfW(fB2G3,O%UJ1k>i@f!6lf:^:3!TH:.*;-[:=U_Xph1=qE#*)1'XS@>"hMBXtN?!9<d:$.[;/4)9FmmWj$jl=B(:E<"A%`gARB125Zm"A>&j52fUO#qkDB1ppq33kOlb"o0<)=*:AR2JKqtm\mL\]\Be7_9O8<?%COg7.`/&S32l7rL4>o>7ee]T$@POdl5J!%2m1Wo',gd.$[E^JZo7h(r(TuCn:*X+D..<4jS<.H^.B3r*g'$-Ks\tc=6;;dU$TjJ\a9#oBT#Llj1GlSk.)3lE6iT/EXUWiX[F%8%s+f:lSDRRao5],E8M-tZTX)%,U`u@&]_E33Y#dmI*,FDklrYI]_Ih@9o:A?!`R4.7Fm#13-'cdPI/\2YF,PgtK/31*R!eMZ.H]L<%>fh.]RNBU4>$dkj_;D)3fd0M-e*eb*kpgJ(gZM<PLaf;>/N6[AhhuBqS?okFjp>0i5B>JhQ9=URejX1H*IhR%8i9LMAS(Xa`&*4K%H@Kk=heL:'a67HAgN<!Lmu]BVA)XoAjtVXsWlKJFmlT7"9ZKT5e>QjCR!pPB^G40oiDJ^sG-g%QVpCn%jN1Q,qqIhGEq9+lYR.-j%)]5qW*0M]#drG=&*c8<S^TF'H>;J"'Y;Ta&an'];'oF;u?N/G\]:%_2"1[76IQtHPCur!gM6*X\YI&(:q@Hs[5Pa49D\m2-c1\XD%3e`k<J(<i/Q;F[cWALWsX%L"S^Zsj*V,:qS$/DM*s77mg;?7]HFh=jpQ.FZ[((cG;6AkOVLaXB.MU>7sqiT[8f,E2";`F[>7@_6k%f6?qGb8]j0B)B(/OZ[P?lV=kE7o&F[9V>MehpKFuH(f6-TEOOsM&#NhP](dGFfdpnn.ss@^Ua&)V-a1LDc^*aT<CNi"?^m3U<a#U%XM;MWRe>"P[jt5UjLEY+I_OBKB7G-:[I:'JO;`&0N@G2Xd;CSFc0lFNB.)"h.]jVgZhmTH--r(godA,%U5iMaN)mYNI=fYKh7r9`%:*R1!B`=nqIO(6mZZi)@._kZE6RJ3_XF/W_$]3ZlkB@<F_MUn+UP-RO7DId8BnA"#mNqWhXd$Kt)h..jQTkKH:K!LA#KaR_.9QiD%ok=J/;Qm-X**%@/M.@+MKtdaXk`Uj2hbG4ol89-#K#R7Q,&Cg1EU"fqf#s+]'??S;,J:0F8@T2\M0/(J"">o4Y@NJRU4S*Lr*Kj@%(&<A'Pqu\@;E^SuT5sigYS2M7^*5EamD$b].@JqA8$gR*S9.AdM*8CVBtXIHhEfgO><%0b5^>AXgOp`f?8uiS3jgli2!;:HG*Acf%B=II&=o[jf9agR8EJm/t?*!&.gd@^5&j/=Z<Cg,5o'!R;qX#V*.klY1TDq8<Q?3r@krZ4q#IWj[n$hcd7JEPHq:_p%bdPol#j_n&%>_d;h;!oZ-ghEUB6NK7TU=/84^i3u"rgeFTIo_c(ci9t)SIp0Sjn4*\R]g'm5lI8!ZG*&VZ3:?A%J>,KegkW>6>HCNIT<tej9s85%`#?M0\a+nH6g,]Pf^'k:%:/.FrpP'E!<j8/UZ$;Hq"\9^qCa@,ZbD?Y]77<Bdp0WCY#$kC@dm[h<iR9JUE^llLVR8^p1FPB"O-92%)j'hZNl1lD'pdZ2Y90D0.Z>-D`i!$oJh[&TT.drb7!*uBlBU\MQ9#bNHVeYZ0/GM0Qb40q48mQsSSiP@?@P&mk4`me@0($&J!UVW%&&%<P&!m3Pf0,55cG-c.fS>/?i]*_J5i4k4l%IKG<\L(5Xip`.;Mi*N'o"bCEj]Z^r\^.(0IluBll4"ET9Op.FMY_;Yf%fM\*ols%s83t.!B]u#fDeW?J#"<%c/851NGNJ2=8'``o6jJXp16$Ys5,$c5s"H&^:eMEQiF[Do64#Lrps:[Ie<#i-J;NjZ2\Z(@`\<;lD+(K%rmBWYQ;&Z@=do1?lP@OT[pLf5/sqFk[C7dE;;T'Cgjf6gFKN"Ss,tJ>k,/0FcaDf&E5mRD&:b=))%:[fg>/*-V-Qg0@[77IXt,rM%KpG:[aVT^AI>bPE)/&0EWeZq*#H@@/?/pV%>HNO.CoEZbPiUf#6Da3RV/tc%NC:+l7q56B@3Ml8k%CH9>-"8S:[.)ZaaNlmg%iQ&%aA^'O2:ZB\q,<n0f]hH7Z7J'$g@DTJ8Q+scQat([\?>V[C"4_`+&ps$oRU^Z7aa-h1dMZs.$F3DEPP57HPF(jZ;3G?RY5@jP,T@i%!j,([Z,5Rs\(^]&3aJFYq6"gA-TG=]PAME+3j!#GpKj]qkmDfe-^k#%2P'%Wf>5$GKR$D[I.R_Qp(]5H'ZEVDP^INRQn9A#D>mON%[kIg+&=o*ZXH\tQAbVJI.K@ub>W=BPm1,cj:RTWe'Nnqu#]#'[_=WDLI*4rJ$:1QbgT>r`C<95[h>H7^64'X_gek"YI=&)G[X],1%"o9k\[<KEPfBL`;?gW"MkhU&k$^7WmLD;GklLb4Gf.OgjbE_D<B)CfZX]+ga7L01/[K#g;,pB3>(2X`<=SrPq!G9)GlBT@>f27iN%aUtW,FL7GSMDBA"eN>6p&J^mX4Vgdo17>U$Y>.&A]I9VB=B8Eq_[L7OP]dW%>LMoNVH[Z"^lkFD`9LB6a%HC!3YPU`d8Q8YZ)eYf%4Q\VDfp;SOdU2e9[8LXC1/4,?/D9Ig%O-=(Bmb(f?tba5ZiYIg.aYP)(#YA\n1N*fo2fAS"&s9sC^KQcdDRJ_q:YS>lU#7?9",T7%(1H:^Y6e.T:8;"iDu$`ql%>W.Q*]1[Zbbf=>6hI6Z4WQQ3;c09Ym`E0B8MS,`*-'VLqIlrn1lp\'$):]Z*WC-5-?T+(-2hh7b:Xl%>,^"A,*sg`[=%#JhR>3'M6D$"#WTL-'K0nRj%4f+O'`<kjJ"7uIG_6eio"0$,5aa4&?^@OdiR<q=rDmf*ShZ+(1GLF:sl);TQc_7%cdud@>-%?8E66mDZg2lf:91t<C4#mShc_%hH6[dSke&8[>I'bM*M4YPET4s.,e,:]/4'.B0%W$jY8m@s-BAT@WYeFCX`gQ;M+D$V%e>VuhlG\Ii'FPYRVrX*fAiZB<[Sn8gnc%TS[k--Ws8L0Te8)I,oBe.,gSk2g2t:P$b@L.6fC(9",FdMM>!!C$]28(kqsQ2AL$'rl%A?@j)4'QC833"=K7pDm:eP=uIm[P:DA]<$?7:f&Q,jdeEl](Nnh0f+$f-8W>L=cA);6`[(g?rM9qA[='\lhqFdV(ICs-E5eV[tfS%3Y@UR"b.JpI>ZMm\;nbPA\=!4@NGJcAK*dmS?G2a<W2;`T[U*!f4HuqTE#o"d05sJ(kGuX01<7f8d]aL*`<W@VL\1S<3kmEC$NM<%4iVc?!440OUR;XH^k)!@'9n9ekQ`0.;2_T\/u*nqkscEig3(M0>\'7@*7u9O91i$k7d[nKDVGIHo^[hWMfg]Vn_.?XH?^`SNGc2r%qr5*<r'dXY<r9#`Wpe;DY#[4Xac/oV*1MOPP=@38(N6pWArP0oAh/&X3Z'nAcSSnWMce"J/mo]p["EL[Z6$*"k9go#GcA'FKH&+B%KcPO!/1*eiQ$8U4hBEXHD7SJ]:e>Op(h-W:&++>Dp4bB3YW<BGO$Cl*(_>Hk9$=DTqFj#I%=#M^g#Z.=S2]Z]k"_,6[-ccU`BL*e%9LFB4Ir/8n(j`2`>1pZ"QA_CO(@-S.c1edQ:@_5YoD70s;@^'-X8_t)&;:G1We9^ua1ZE%O+)Ln^\=W.Pkjg'+oOi5/2/!u6]f(6%8$i.Y4Ra4hY1Z8P[aM(jH9:Eq&RY%CX6?j:mVXno;5PY(FHpbd!QMAWD7<mZJmbEB#??_WK$>-CWB0-IfK+@YL"0Aio=`P4P-%bH%9/_i##m(n=BR40G+iXEoYF)hm(f?^%Y@`^#2pbs_jNHH&@N/qPFrpkiYIj_;UgR+,$@Uo"AtBl32pLR'_L*V5d7'VJW*_i7-F,HS%XJeZIh%!K[?Esa79.3]7.kM?Z(CCW0H??`@<kQt_L,Y+2=OU$U(c=Z`*11kWKf$eB3)F@,ccU;S6F8lL@tY8C-r7$LYLeTfl`N]/%4+#2F_IT5S:83C-1Ys/@T!#fg/noue;`*K$>Un'sENC?nVmprs2Mib7(]N34;F8QOgjB]V&e'T3]I.Yp^f?O!>9u9E=%T3l(k[b)%&-2u7K:T3l(/,="YAbY(20HSRjc>UG0N^VH^;lilpemOL<^.l).t'6:$=?SRfjCZehFkIZ6UJ25jE%g+Jgim8FNQcWpI(U!,UJta%hC'*jh*4T`?fVN&&J?aTM%#B@]B#@WClid#1g9gPUF.bndJV>aB@U@#:U*Bc2gs\enlP2YoZ&?+,k#=-Ej+uD.7N)5(o/%oNPTVM%T-\L`(Eka\nn3ZI*D8'::`-Igq)/-(S6s$Ya[s&=K8'-oO04At'Q)rB8Tc)E38_f0ATdsa]30Nf\%]9u:KK'c2sFr!H)f)lSf/]M%N4Q]k>0P6]-ISmh[BGipk4$qs/UVr_UZ]+&CArGA/@BG9>tchB#E"aM]pU1kl`!557-c7l"$j$aV6(h&YGn"WC)OM#p[-,_F1H!k%WD_8p.W%E#$Ail:]sdd#?YCJJDX?&I2/@R#.U-fIC6tdjrN0&3/`3(b=7`Jrnm($fYZB8Q_7BgbURc20[FE(Tj%a@:>-q3!YLt_u%Q%cG?C>l.lV_XlOoi.g#q2&D#LgAIF:8OJ(G3ZG.43m]nS?=6f=L,oUZ$N0BZ>MQ^L\)O4EPDTh'VU*D0@O82d;7]Am^0(,DuItb%D5F+8U1SHeCFbNJIW(fb!3fIiWm`mqZ.e<bFo*=\4?u:tkQ.[Ah>(8l6<Tb0f474j,GEM?$_uoDRRm=EePF\uG$(Ncm>%>%77a2-%(ZVm.W!"sbh!\?HE`c\X2*7B/$>srs@_+?OeSGCHgAZNG:<gLHS_fQ".:7a?V6[JB'%3^53FseWftiY_2tp5GI.JV^d6tQ%;/Rt^%O$4(LKDI'79fD`5)kG[<f+,[=HdTQW<HbXp$qPCLJL@VM[,.@)(U[ic=-of8=JNnm1HqCFkN5g91^\m$V;sOlUN3p:d!iKP+Yo\S%D05#6^Snm0!ZQPm4?j6keBGUsc&bC.Bj\3^<>_I$V>3l*UW;MlG5\\\&CbB+B'i%tC,D'-B(_5/b[t]BW3=:m)l[XHLOkF[Pi'`b%dr4=rW)9Pln5(HkU/(FVeX0$[2%Bt%NE2jWL$-Y;7^o2k9Pr@nnMSJ]=M$Z*Yg3)kZT.7i2!]qNl90!kFT5A71jZbXm@0"h2EKI=%k]X("7VX+Vc'g56?ha#,.j9ljPNGrSr#"!u;*((kY^MKt/%"!#T;@N3mDIDg7aIB5eBg\ZC1jO\dcfM]FS:reJ5uaK]!ks,]XuG4%"u^cfds)C?o^(UkBj\>HCkXaY-!frH<e;:H=47uINKr&P7U*J<ToEABD,#,o]H>eX,O&rkY8H'Y_-6*fn`8XPYgJ6$Y8puFU_VJI%T,YII%VbRlOrc[W`Sa2rs0TM$CeG4RoP%qMFE2&%gZc'?<(NcC(K0MhHT/0+lYphf[ILJ'Jju)U8>@ks\Q\7laa@QW^8Mq,TZQ!W%=6<&Kb08T+[^W13ddu6l*ZJDKR;&8lr$9_>o'Xse1qVK8X27VQHBgAA?(^la1^+P@L,QVg,O]jliBk.tZ'N6rZ_UI^Ml;na(3s6p%?!jAubM*[7D00(?>P'bPIk7t6_e7Dr3jhr>o/8X`R_SFA^h+mB?ebB[PKWE4b--<f5>.KIdA<&.O1Z.Ng@I=qhJ/<'_e39=gDA>"%bpE+pn*/)Rr-]IVoE/s6hk6l@o7Q<[:5?Ik4ID]nUtO3]2:M<LYiI0lGN[0?5AbdA>URsncctL@V>JW;Q83[\*<,T*ni5Ynohir#%bU_/OYG#n'cSsF?n>@p0Dp(FB$,qkFUP[Thm?"fZmHO#'M[k132Y1GUlFrYc>lMX4aqIGIV_>Yp%8O0YkEj/5DIj#7]h6'#;W1F?%MbC,=diOB0V]X0_d's$sO'CA4:VSNIc'+fuN+1[OjgE.5\"UD]bBiC$>t%u0%Xn3-GWFLhVq?*+HKT`0oP#b(n59XB\uVo.aPdiV%Vj+1);TRVh[T$G$j*b7&?1pFP5<nD6Z_rNDMLSTCT0I8=jb'.g0fq>%cHY=@VsCf28)dHdbll@sYW,]L)eS68i&YMFCK>o4,@!%$%4,'8E+gngqhgjnek8Z^l#V2egMPgXU\,oZC:SBYkS3a/`=F6=^9s-G0'?\PanKOG3jKpm6XA,]S`-8tqZNI@u0Ud"e<au?haQm3_%al)SPMf1+@H]u"deX$^.[YYX.4,Y.k/N,Z)U:d+O1ho]Z?F9!Aik4_<Mpq'1BVR6brK0GdQ-+$#B0hN_nU_G:CJ\BCdAkitFuCX'%C)q2`$&qu`V^L:i4-Lbo;dnNaI0<mRRJOYXNGd90NFm&p)[5f8.RB%LCRk/0:1%!CJ^J[d$u,@r+hX]djc8JkpUtu$^-cS/kW=.p%2nG0p"uT##1",Ff9IPIK72"<&g*>c%T%7`74Sd",&&qZ/[e_"MP*UImrGM6ZB2&:eQEH9:%22W;s'TlfoYi0Lq*%"r7&8Uhq`OcC%NV7o!0E8J;EWNJ9D(qOI^6nef>Zu)2eloE1F6;bOGSLd4Xd*%'$1T7A@*RQ"qEo4(Za]@[TXH<rCg#j@T7F^\.Et$l%[sI"@R0Mh%>\p'KX"@Mn'.G.uD_q,b/#Jku;m0iM6=*/WnKPEI-$K$.GFbLVE=>(0d@'m&j4'b\^FrE-6@@j.JV6509=oL29g2B!YPOsbAa]bq%PXmU+Spk<;F:T.OR<<5aNS+"-Q%\AD_sc`Z9CuVTis.qWCXST5^P<X.8B'd7q<6#:1[n`JF)]Rlhcsjpd."^SjWAg.nMl@&C\f<`%0<nVZBO172-I6Q..JKkoNj(/i3qN?lP-oH4'2A3hI*.(UF?AR)nW&#?QEkdOmg_o?YNj6>We\jrJBq`Ib?B$jDNsR5g*-Qk5448S%7!G(JT+K^>Q5oIM@'`[5THB,94OVt7[5X$#;(8O4i)*'TH%B85nVp.r)hW6,?,&KdLaFtLASZ3&nNICJV)TQp=1.)T1uj%GYa7m2%Qd(XSKWa7@J:fW`]c-#n1C`PR(IQi^d#onX1Y_jR0SD"0$6tKD8snC(F+0CtN[)Xk+;@LZfiOFPLP]*#GMLI9:AL/qd&80$`BhOM%A`EPFP*;+#_M,XQ+*Xe>Cpfs,0L.G>QM*W_b1VUn^eQhEh('EZ]\pi."i\WE:)p&4bb-WFX['PM[U)!\SHMN=k8R=$H]dX!_BN);%hoh2J<p1Ni8;A[e@%%#"3hZaDW5[uEPofpV207B/S='6P%HHjl;InNt_>5LUf[`uDbH%Q>do(dTXul/C+OscT%707BP[P5WOr1g(%8;3OT%dRToc^s^\r&od'[*A'u?R+9tU\k4$/.MooNk\'r#%:!@b0CpcOt=q$6M8t:Q/+hi0nW?)O'O[]`LbdnUR8"-L7hYlZOt#i%pGf>3289b:B<ab(j6]-;_:&rY[X%h6MX/mtO36ne`7RQ@k4R&"$qH`>r29/'C2O#of&aUD\C:i%#-\'<R@#%X3boaK=q9*)Y"]LE%)K,:N$@NK%<WJE[/m^L]&R$<>N_:%hD)iFWe@O<#5O<fiiI&_Jq7_i^lT:`;\@u(,Db([%h&uHk>GLc9H-$EPD"tGk&mpNTOSBcf%>7Gml#F8bfTSB+%E-SUX.UHHL&AquXIlJFEaaX5<C^'=T:%sLN#Vm0t!-SQD!<2tCr-defbhtl"-Fq/p#b57L;B'5ks4P3l_5eFO%9;MH*Yh546&"TitnVgeHS9]K)r?(=WLt+;s"(N.PL_VV^6\U(^ZA2Q=+g+Sn?TIQdht7NM5UXei>mcFMJCI>Q)GA_*6aH-KKbpB6%:;ut1f7"6iOEcA_@9o??V/''%n)CL)K>.>(<-VnYhYm+BbGochll4k*."`N;-pr/KOQ>5h=`oP1chB%E%,^j$&ho7:,tu'UT2-2P%59F]G,'Ah]e.GZ2-dpp1V)Nkfr\;ff#!%JQ9^H[in%#<;fQ`6=];:^51cFbYaQ&Rp';<!d@F"M3Ld'91*A;d=M/]DrAO="p8B94P%HTdD[!-7L"Ebiuco*s6DP]t7XNV,^iJG"i-5.C[`m"/i&H1HaTLU(KB2U4],.EV*r=^8%s&U//$Y5jmYH$mMi])lB(N>(jE*a`li%YL!,>OMf=d`#=ER`YEF2Wd9HWTK3qq9oMLJT;6dWVfTS+:3pn+T%)c2OaMAnOS&a8^n=l0"WL=b#V-X-/`?(.4S+8-k$9&;[4Ypj%<+%c'_Q;AG/<DHdTd,>pMT1U%(!+tV_5Ebf^Ci%qZ3.9"Kp)"&D%>S[+iFdlk)Rr)SZb_J7dGHH-i2'CEA\XGB&fd"?i!uJf,(2q%1g^A,.N=jH]5TX]n<O^,V;l<taKZ8')hUU)h"QQCL92h,UF"pO1]#fUW@).<BOPu5=i\VfNZ9^iHlb+I7hukoKVcRo.tqj4ik#c<%j6;D[,L!b"47o*p>Qg+aK[;JACHU6[/\j>1MUm`kPq:!Yl2EFqZ;o6@\sWh2H]@8H?=+3,97-JdI.M2j)Fc/`/KVf9N$o0::ZN8s%?S,\J<Cf9d0(gpN/C!$@Y4+oLjSm;r!a.hda.d05khj%&2?_ZAoZ0VBT+*:aVh&%T#4hPlYJt)0e#L'%@Ao.(R16@Z]%2^[P_e,p%$uXtskW@^+,!Gd=M"O0^L%/b0;GU!`5&(iXoo*_E@kBufU#YSP2B1NQ6k.&*\WB:`,%nfkhN_Q'%C-9Oq%>_-0$VDkLZNEk#jsk/%V=rE!@#7Fs&6hC>6e=V6gZp*)+5PNN=h9hNTqhKGf')P&[Md%n%IsGC-#bUY1s3^ZWJ/t^5gRVY4Gi8Dkp8m>P_e86jdh]VQWbQE%fJ>5sZJd2BjJ45of@AdJ]q]RjY'KOE?Ni]UDh-e8G+ae4[k1Y3J+Y/6g'q)J8?5\4Hi%:ai^24T'i,<D)t<Fh.?:6#Ws\N^D^%-t%H6a[M8r@O]I)(`FFPsb%fp[B:#kT[<YtsrP3q'&e`lSlW6tJ*V5%<YZ.;fWd_p6%+3c[j.(ini71[#J9n`8'i2!W2UUY9b\*4k>B%3m8?Z7h-O[CLJ*&bd/-HLFtW?Nb&TYS3n+FW09L`PV"jg%UF/\*C%/Ge/Z'`$p$?AD6t:okR9N%A)kY(o;a;.Id#__b/&/_HD`N<%4#2YSKOk3*c]n<Pd%\i%Sd0qN6uR8=+;KH*eGcEM1C[i*9U.]%S"@Ja9`C<qU>Pt;9;aK0pTE`*omEs[OEC&IR!Q6N;^s*iVr95R%Gm$$5T@rMQCih-D=l[CV]K`gIn]4YU4tOJK&lT:+(C05tYl<(?m,j:4Kb;!_8ibeOa=p"p..rL'73ND71rlZ\T/&oIXM;Q:r;3K!%Nqs>`I%_L'1J%.=OO0Z*5LLJqCg7m+.nDq.kfr,JaN8<#4!BAPFrOsB88(cX6>Mf^Q'7i+Mm3!^+ADQ2&A\fI`:/aYTc%#gI@?IG%(W!H5]4UZ/r:H3EGWNB5*o-,lB'5'j\:Kf5'F.5cX\9`0ZOW`4B8$.j^-*#X@P'Z2i/EF#q2Du[A[Qno&pX:_9^+8',eYn<X'Zp8%0+0>\kSbY+n$h251dE,>96C0VUaKgjSshPLYm3J4E>0IY4sn0Dg(8;+@O3l(f`OIS/qWAS2hDoT%`[X<gPoTqg6Mh?f$DAbO`Pj/%<Rrfl-42EpW[Lp!cd@R+8N4:C#)YjIM%3(]IRbRRTpRK[B(Pk2dC[qC4#D:2Xt@h<'/8\jF0Gnpn^6$1c:J^uWq`%HK>Y%d.-&?h%d+B--NGjm&fmDWM#'PXE\oF7RcmnmkLRnj#)WlH0qJ[.2dfUl<q/]%%F6H2Qlg]XfI8"X=)e95LB93K;k#[;$UL.bPd$dXYbmti[%43g":J;C?*9B8e*;dYPbYrdc2)4p*QUO/4NpIRT,:65![*TtZ*TU`Gc2fq5*a<'*P^5QdEs4Qq%p`Oo7*h?bpGC5-gci.J!*6X=3%"C.kOafUSY;ufN_%$ZF9_bh:b"%?`E1[MJ'dA_'@CD9\'LeP69,4iJe)Nb>gZ&jdcmZ8"uYD/26VT':3;5]_cdrAh50d8Bbj4HX#%<QpIHAT6u1HfXd_JEQkU15Ru)BHp#XE4+F!dDeJ>Lub(tSG/u,/srHt*HEmDPjfRDQ\W/$hNbannm9'ne0ng04GcC1^R1W5;&EJ`%5p79;:6h2Q$VW=\;Fd:>:;i)"?!Ea<\SK.='up4a&rPp`iR&s\6](efFX*Ltf%S#I2Zmlc%:`<dHFI4^h1J7c;,TnQ053'p#hh5J%cG*6F=BJ(9,T3<S(E\CULE$0(^1$Tk6J%C?RLb1UN1,^Z59DLiT#HN]E)*!Y-R3Nmm#dBW\,eB`LWkM]c5%CD5$WSS3KAJHa6FU-%<?jss>jQN&7`pJoi6.bHgplt7]I1)XgnBjsF]]^>kaD*']u=7sE`]<Z6C(a,W-]^oc%"E*[3r7e`g7T3mG8SY-o7OC]0To)CiiS$%_Ph'f_7,sY,#>k$4_)Up_S$AOIe,g;OeP!na`ZPCYsERrUZFAr)hc]^lbeOG_sfG2KD(m%eMih/a>M\%La#kXY-#f)/M[T%Zc8-]%EP07Sep(USVZG7__.'$)X>n*&C'btGZ-Vhd\GI3La%!:@$dhHG&%(r_G9h.sfn0AH0p>c(NF?8\RE)!2a;9cDQO;c&YmD8D`s+_2%3%?/\1@Z'G7QNq,C1ZBN0OQS:7dANK1/dRj`fZC@[>Z=T(%]DaOcbOoN1Q/h[J2OU_iB<9T>,O!j'R-k/>0H<]?SDY$l9##iH96I%/,jG@;,ZA)B!Lm(_M.PlXJp1,3Uh#.pL."ZJgiVG<4J<EjbTmTM:b@YOp]gI,@\_n\7icVaK<15>$Ms37/2@PK7n_cAFR7C5e"hD%@Zs@'=L5id@\)!`[O9FC8i'F);Ku*8R-0:an?o(kM[Lea/^F0,PAIofA9rLb6nRB9T,d'/=uSTWI1Nmo<K$p+co^8'K(k?\*fpab%f8`&'lBdd6iah_k<48\_*m<_^a/+c#GG\2#?T2oEFlpZt;L9Y'D4L&12RBT@_IdZr0-N;jn]<1bpW$ZEbfQ?6'p3^KP.D%9\]m0<%3qc#W]ub08Y=Ah,pfV90s-QH_Umb`6DV#I<G+FJ12(&kF?aAG^ApB%N?E.9;C\0VB_es8;()ll'B=9YSE>nKt]AZc=cE2h1!Z8V3%D`0)u:!SJO3kquu*L:,H9MYR(^\=E>FuOVBH"Z#3)0X9ro:SSKI=1q"O(qdO>qIOmnDlXCdF."0QJd\s#s?a7Q_2,54m<P)(p9rc%nr:ce;?6HD9.n8b;7k_H/r-R5I)f`#P"hME7Xur1#B'@Hm[m7Lc;NC.G2(#!p4'g(ZVCFD\f&1o,8!"u-Is@.6I[:G*ikoHUgg+[%4jLb0Su[E\OpeREl!-6oS)f/J7(SE6kKrn3F:-hJ3S8eJ@Z26r49fEY]l-8E+r=2n&P\;q1TVSg]kdggR,/kg,1YkZJLHb9H+u?&%B$(CDI$*G$`lhDbcS\,YAlg\h@Q`=c5oBH"'1U<F$d,=3\MIgXCq?9i(VblLI+`U-\TG)OSfB/J/pt?QSCr!mg2ajZF<a5V@qX6o%3?J9b4CU4>a%0UKFPa8eNbl;">e2$e1Kl\BOPcQFHT#/+/tK?B3jricAf,i7l1f/NnR^/QjjL\ZQuQ]d"`]ksXiHl)(VD4YmVKHW%PS+$]j2n/+ia:Wc`Zo'D"m+0$>=ueDdfia:(pL=FflSrMGXouTo2gVY5;%g^gOoZ,/4MO'I#<oH9c'$e7p"TfR8"K^9,DtShC.'!%5o'%SN/X3"-]l;M/IBT<)*XNBaEC>R%jW)SRk?+UY0XeU6Y+XLE@Bh*mNJq$`:!2$\p/[8-okb6hh82G&"?90e04j[p&emTGu9H<%!$a6s]aeGcMX-n*\48LNnWJ(l>uMUo(CMYbd.uobfL>B*]<<j>\et0iFg:C0k^-ZBgmke?r/>hAm'(R]G,#M)h@k#UY&a+\-k(tG%\,#&h<>RU-ZhFg\n4_e)FR!WBpeEi-5Uq.3`F(+QG_qH1#,t;"8$jo;G'p!(FinUtk5F087rcCRK3WI6Y*4(MFti^cY+K/jmmi>L%jt:iD@\df-SFI57d9Z)qV6Fb'#2>b4lns"$;Z_P(\f33e(3%N(s-k?%[ODW,boNE,,;6Y"0-9f$jt?)4E36g9,BN/HKq.k^010YC%gl%:tP_a$q\+W;ELX.4`3k(Oq3KYq9kMZDfX[s_mE(NL4/C*n/)6eHR>;ui59#J:*Q=b(4%:%4+ZEQDgJNC'!@,g8]&K.(.nRiQp%TrHEYD.B^BC`S$&rKeZ@`;8g)+(.#A<#07&Eie(n:g';/h9l,CM<5aMk2W+Y9KFrkY@lpd>#G`to"qeGb^.,b;%7VCi]&QZjS'p[%26ll!^M/;TRrHpqf;X:&<IfK6OC&kQirlTGUWgA09n_ri4-)s*d?+hk+l(.=B!0a\a'?:9cN`lO5E-gB`II;q^psfW;]276rTL>=%!H'TE8&m>"M>Q,ekLf6uANn+.A;Is0#jWB$em,:f*2`qdlf=e!G^"@Xs*D>qE0*`WHLFFa9P#&#O^Xi$h`D6"a"n-P2r"k7?TH1:%GH@)!@5sPlmc^*.p`4R2%)_QRmKUm_*&=-7i2407LLJL<G9bn-2h3P%GuJ&E0HBS:4*pd"pdsFm.e@:KK\UOuDq@_-`7h9Um7hTn%f_s,EAkl.igXm-Smsk8E!"=/M>3oJAUGEu&`fQMs[:DebF%,BYj$P-Peh`Kd`3j1&k*i"8gZ`j+;0ru^cYm0Z?0E/\9=+WAjFDZ,%Z%h615Y4Y#;)iJ`fOLj7)*<\s\\W6!2Z.m*JX2e0.Xs:QLLP7a2TNu"N6:Y"V3bYN(e;Wcnggp(VD1Lc0g2p3k?66U?obCAK-rC9%h!/k-0]9H/Ot&>^@2O/0?QhN-5!)M3]_?8j3Nb<7.lNDN(-fk4B(2Rp_U#d():*Gdr2.+]jgZ)3\^1MM7(T;%YT28dD&ArZd=Y?c%)+9;1(p83r&KkW%^577E+p'_%0]R"sot:&G(H-?H=2i;8mTFOXrp5$?q)iT2\#j//gNS'QXsu5C'1FtPOMJ"i1&g!mL3L.V.Q6S6%L[.W?hAhHI.doN:980ts?Tt!AQP?$GfD^2)P!^1Rb0jNsk+=@gAY*KT7.8ZqY]V%ZE&^^4WSrhS:#94O)C:iEhnunoP'mkQLFj1%%RWbcfkJMFSbiuR?f37iY3G)mTn*2'qBpm$]k:6JT5I*Z,+n4@2ECckEA6M&G5)87;4[h3=2._$PMuTN`PKDR@7]gN'C8J\m;dZ;A%hh<;iH^E]NQ:_s)03>(@l%8MdV-s;JXlb#m.)gL*WWah@NRIFR;EdQ1T\*/K>B6W5kk0qthmMAnf*"d<Ka@EE3#O:0`^q;QT(/rf%(#s2$N,ad/C342h:P9u9qhNo'`<!GKKqhTQgt*mCg_)QRWAF<UnmEE6-_MDsCK4c.'[H#!G=)"sdoi:PB^rFW@Vi0(S!DQ;O(KAW%i`1h.?@DP>p<1%*\P%j-((j+1m*cjm-'H5-h&L+#<YS0B;;rb=9/C%D(;hKWV?rm+.c%;QH.>o/j;9]E?D6eX(^l(Ho#a;,o>#Q7%h(89Q$5;M"L1lr/KU3cRY+7e!Hu,GXj20hdV/\%h5F+iN3V!TQ=;dU1(l-Hb@M!-RY9c`&M_Ud^31ED8$`r\)]<N=X>ooc%>U^1)%$kA3eA&;N)SMa4dTMk3;o+-0<O>j&2rUcVkn7B$)hd.3_OmG-oPdC@%7!MT1qq5h;g^Vu:;VgW-h]=_?a\KD"JoT'r#g[CH3Z0f0%2=<a[I'\9\6pNIf$5EH-)H/,`G>44$ndM&rf`0AM>*X'M9N5TNpDWeFbKWSsb'Ita*k%7ql]i\peh<A&&;p-`\K$Q;I9%s*lK#[&%+%if0FQ$&/G+]fIK_]28/ASbUJ=]UuE#)h7%`(/U*c$/]/AR(,kBQOX=BU/oErc*o^`HOq5W@s3mY6Ui"W00'0_h0p\64?%knu<Z%`m4^FRfaMF7ukXlN10q%BD!i;$ZL`-e(ZDQV0mBGU*oKh+1RQ=Y9`kag5:)'?b_dQ`cERNeM')bn>1NHqi^rP9DLpB7iq8uI"OiG%L;/u!J!SeQF"*_o(Al-)jU8G[imPr)Yal(YrQg3:ls@HCcA!82?9_:Up"nsmo\!'THi9Zt0D<M6Nd\*<ACkE`hl!hCT!P,"h<W\e%CoFVolPFuMhZ3J;,NM/oj<P4XY@!C-mb[6l]>\RpRtcQ5oc#6AC[g/;iL*r'h<Pl*X5D"m=0d2O7Z1Kj^"4nul]/>-L3rlnpZolS%U"]NQ^UX*)UYY8!)%SkJ1P(]O`4^V;ia0u"(M/X:Ej&h,-c<7<`g#o:DY8o"kDsbh?hA.NG8GA9Hi;s]a#A%aHg%S\6f#dAn<=`:%+5\Ikd&k:;h2s3g"5N4o?X&QN?GG^r'H2NErEd8&9a0NN7a_S:qXoruF/rXn?\F]5IeW\-hs)#J0f8[=IaR:c^T=g4Uj',TEbp"3%_707M4SD/1ont^1!q5.gia0BM=r-sSJ+.g`U20"7+(+A]rM"6'Mcf!Y/FT8JFfQV3@q3%#0D\_a7!ar'(k/[GJ6?SrbH_n%oo#lk%qVCHrRPc/\?GAJonVr"$?hCILKAFR,m-sQ&a#E@uIbn9+a8?*RV@7pW?ViFnTG)HWh<PmE:m5t&a)J4hoW<Rj][ur#n<(3V#r`Z]%FKaReV`#!4YFdHgdC5])r-`sF7'e*+iu:-!T&&ZjlCKMTY?sg[Rr,*44&nbaf.YG&l(d/%(EM,uhT7YQ]m`93A$3!M0T-B_Y@"Zk%:3R2/I]m+cg[6/K_qs\q7'W+@+U>O/0;`):ik9fGFq9U\Y@!?!kdf6iBk>50r>`f]hWcJY2F#X'IaJJ,M13`fb^9;_=)8"sNHD@r%(GC8WEbHE3GHYBGi^09dJR[O&(O`>+4h#(rHi5or_$RAg9mlH:;K;f%_enVu5]_0'iZ)F=[e8$hU*>/BY@7!]pV$;H"sbhtjGD='%NFArk[KN/E9K(JOXEPG,c8JtF8@bLai@t)Sj,<>Lg23\XOb.:Y2`6)/3$m[h^J%f6o;PVd#AZD(Bss/H^#$.R[Jd@7#)^qQm$!@<%fu<F(bi[6K[/GH@TD\N@1fF(5WX@XT2l<\<hpV/5dEefko6#+el<3N)3[e?JpTj1N^;$L-Dk;D`XB3^XN2r$2g7eLe3Epj"]#nZm%ih))!e%J0GCT5$gh5ma)2L_7AT6,FT@2u/I%bG?jeCcDurH>ZVPPP0E][N>D[3`[nP1dBhEIN)!b0E4hUm1VGbP;lqAj\%dmVPSX%\(=o"bEtJ1\"E'@G/q1Gn^<hQ1gW6>bMBFe$@"bLRTmGIWr)Jm:ODu&CNo39GhJTM)8,8#aY$l5h1)a%Y9to$P@lJ&06j,Mn$AOU%bAZb9"qccT"1m6XDR\/q<+JchAh,[Fj2oL!o<kPe3sU/$<j_VYaa,gE`E^hsSfF3q?"dr-\6nWr6#mT:q==?,>+2Hk!I!8j)XK'5%n:@__(Ym(]M^Qua;RkTse63D0er4_0[s2,[?'FS1$P-I>f>_6m3jFh5Y3^&e3n<>t4o'5*]%Tt&JS^=RXnq/PI3P6>2Gu2)cfG\@%Q<p4E/'i^5R*9gH\?W]=C6Muc^RP+kr8,uSdsUENH5jUbGE;&m9\NdF:ApW1djCZMPj?WS?A,4/pQ9NCG(tL1B1_G,BOWmXV`@9<%IR2rZ[,C-4!r3//fNfGF(:*kGEirYF%P4Q%>FI2tUjpRogH.Lf_T^&!,0^_UbD;5GDT-lT00\$\Irue`M@UcQRe%XL5%k\fKiVaC%dFRFjjqf#_M6Mok(LHlU6%&1)<Lj@tEke<\4gcHlPV=D%0:#TnmiT^%7EB=O-qFgj;5J%E4tAWrb(6X%dc1BRi:5):Qi5f%VN-]2%Z_Rl[#S0-q-0:il,/ZncIpOYt'[8X\r>al5gK$(.faMBIbmr\5Zr3!P=edoG=ji2=BrT[(m4n35pb9i\RrrMp'"j43j6:Jk.C"]'%Dc6?*ePPXIDX_CfDDLLZp-Nf#2(hpr$MfVEjlaL9\_"urk8RJ^)q`<qh:uN9.<DtrA6uH(3FC'3=2_pMDJ^"!i4T)q^Yk''$4(YF%)doRc#[ec#6bcVJ/f2Vg+TL+7rO.!PDW>h[UHJIWm#Z/NPl9El$JonVZ:MtW[dnPA`p:R/$llWda<RWF5>/akV@'A_-!qD+_<(n>%\6.o)hDIJrDKVj10C&C&)>E/S>:="$m:%eO=d`TBDp2IN=%_2=Stt2ElP&F$dZ8+gnpn$\,"cG@/r(:<guV,"ZQome4&;OOhVEC@%^qf<*0+iS:ClI-;m<\:Sh)X@p=hiPYHe6]AcWotn#LbkRkpWk=[,o`R;000f[<]!gRAm[cBED[jZQs,.K=%KT]&=MfF?-N[bi]#'%cP5"(f/t'^S(E]TpqA)\\^-,mC!(j<2VT[oIf7ne6fLfRf/JU5apJ,#6^!piMAu>3Bc^6mT/BSu$P$8,iJgJ:@9I'_iJ*gQ@@4_#%R)Sj;G0[R)Q>e$>gLTVB_$LEBo*9WK\EENT?B?)ONm\"]\(^bC(CKCB6[<O$-joUD:-i$bmGoPkAIkcRLSm%Ue>H:$?"lo-kX]lm%p5q+cNnLPb3SqNgH,<qLq'L7eK+Wls[/$iT&t5GJn6oX@-dm_3YC)<Y[]NK%D@lQlYLaaFLs^Y/T4#J9,F1\K34ue(ko-PFiN8Z>%J'Dlha(B'P.3I!1R?b[deAC>-:22LBF./O^R@)!lB;rk_\qV<WeAB&pFt1sY0;K@]cSHsbQ`^lUrrr&Il9%hSm(@ksIJLo<(RK-F%d71,+>l*/fr8aG./n[pto&n2GArA`p`bteBGBO#l9f_MFqi>NujZ_,;"oi<=D)OkYL!T=3)qqq'fk>94Doti`gQVH.pQb^TGu:%\%^7B@@M<38Z4j4V:C:[81MQP`1'%9,q^)jD'SXd2AT+p1[>E_]pU%e[0Ispm1(M;`a%QE*<j-f'(peZie3I$:MBu#aO3,%5P>GN*.%R41dl3lT,$dIG4D,$chdqXX]_-8"-0"1?AK6J>IHTB8%tmm!D$g!f,-iGH!m&qfC#ajkc#<=C)I5:L)X(Jf+KT#_X0e-52+4CE7)%RiR_jIM/f$VmH$Vdf/LN;Q9B#q)(6\;VF>6PW+'^\U8D[qm03Rf&]Wg9khRB:qW]33\"dJg33IB,Ygj-)`3%(^"8TGW"ZN24.YrQ%h?.m?,^GKSHTE3Td)^&Nn[fj?j6Om(e)K.fq-!(/9G(Rh-oF%E1V&ZPphB,j)VmoMGn1rI[S_=AV%tg*TP<RI(K-1BiaX1'b'_c+%\Md4NnSJSjY9QqD*fkcc_<r9-_#7AfI2"P[=Te)!m]GoAT=X3bd^*rc&UU_mX^T(-4L/kbkOq;e3,Wq;d."Jgl^,U`k2&2ahL-38%1-)#RTZf$dkXj]"O1)Q.%:j9S[2q]7K;CEo/3`hK:2Kq")_JtO@\\%3&DDWs@r,$RdTs(bM5Y\&D0'=1Q:(Q)1Q)EsX:]"Pk5At?%D%OBISN/WJjuRR"AV@]ufZZqp\8F6\q1Y-AOafMS//Qq$p"fO4F(kjV]^>k]DU4(WDs+7a;Z#G78?]cj:)/7/a%%)ZG'@]mq+s(%%gQVJ;fq(7,(*7WH\!MU%f+o"`c)fL1<+a_E[X@U"I[F2s*/g(.d0Y8Z*H>[=4/Mc!gQ2:.j]-Z<B",OJpSe\pBDZec<2n)P9=NH.%%sFD-^k6b#Tn!o1!hQ[0j6:^AQD^UqNqg.T%KQ#,O8$S[JGH%63RKitB9j"Sk`o&iAll.N:4DIla;`=7?`3F1(t,A7M!/V;-.4"W%N\U/dfrG["mN-!&VUj5NMKe7QT_+7;mIAJ2"'J7N]t/'fk+OG<Yof]E:8A-h'*d'ls.h"Pc'uaiY,%$ORJPb^Oms$*&"6iB!`&?2%,KBcsl2J!r3TP7J&%'kcs.kBX+EA0J:Z8hL8*F$W^RIk,`s4Lr*l\D3XDGaA0mQ<=Y,j0t='u6cg4tOJCk!\]?/NhDlPE]kDD'8n%Vc6ukDAJRrP>t!H8*605$39r9TQ!DD=+0?lmeehDbDES\fd[[o^LeDY`N2)KM4Rn!'C5\dr6fLqU\eHrP'VZHJqdu6q1:=aGtI$,%`dgr_U_au.<]qW^0PL($HW.o\imu]G(MFQVLNK'10<mK"M?u^P7L#Ai#8cnuHAl::d$C)j*1uC]%B`*FT]%b=G=2#T#Vm1Fh$=l+%)I=ZPYlTU2OFo&M`e&rsOFrJZ+1i-ZO*S4,Or"plV[A1N%TDu.ZQ#n>\lMQX4B6Uqk=fXLj3Ifsn.'HoA/U#H8#a`(RtV5",qK;'%U_\1A)`RONcHr1neUdHUk%K+'EK`qS4&.MHKVZrR8p$Sqa8rGF%dU)(kp)68:(buqi-o2fE'-l(qCb3i+pVksD[^gQYeOjI%il`2%8E/#1&$tB<\"";p]gfUHs'Q6n^jXoIMN>T8Rb]#;51XDTbNJ3F2/u41p;F-PlDk&5.WcbKs)C4Y>PLnJA`?H?m[h5iPu$Ft>-N6$%=f"35cRR8j\qL[dTbacb=>gE9F(>fRrdAp55(/1_>aF$Nd=G#Np!^JKr;"=(a-^0Gq,Vr:_7/M0)NPP`T^eh;mcPtgQ7kINe`Y*N%HK@q]d7q>@4nIc1CA!/HUoO?'K@IM[UVT15Gf"X0+6K2+]FZ7^#8p=iNq:FYb':dH]Z]FZANX>]q.CR@fKRe'h]Rl%a8S<FGf"XZ%6h69nT!04[n7,rj1[Ma>o=k0%mN-VaK?DlZO*e<hCH7%hA3?S3\&?n4loFMeID,B^7fUb%^2oaeEV$5DV(+E_?`1l?a@s1NGNI,G%9&]\:'5oTMd)dBipOH?8SG$%Sqf;TZfV$^&b-'(n!_]ZPHop3LL$)2Qk.TW-iS\F`=nYpjmbG?QSC&fg+qi7UCjr-@I`kMC9'1KL%`3b/"H0b!+690Qnae4ok3<oGNR)b3$mO$:qO+W+6-FXpSQh\dA>g69)=MP$Ep[5QUhX6TsAk4JsZD"o.IHnB-LQC]]qSaU%3e7fZ%]U'Y`\pV%`201(TS\Dd_F!lphO4fl!dsJV\Tl&c6I]lep2EAa*;qPc@P#CW$:%N?nY'%#t?#3cWPC'Bq-7?Zb.M*c:P'Z7YcuL`N%&=Y?3`*RIQ%OFEGF68SBhB`30ZM]&nj:K.Oc.#'.&R5sI)^htuN!,F=,7b*H3mMUkendrh8RE\"6#RbjqjX!:LBQ?Bfnhp04uo:r%`I#oE56[#RZ$Gu\LnO[gU)^fe*JDPN%+VNqCZYL_\<H5%FqoT[65;4)+F^.h"hdNAO=L/CONTf"j+6bImYJY8LopKhE=g]aAjhb$%WZ1REl@<;;-l/j&W-,C5i]oC$N&kO"j[Ki^BW2,lorV\(Pfo09*BCQ@aZ?^PQU=ar9'("1Alb-hZ&6%(0h\=*;_5Qg&I3e#Y#L.^%F+*;RJ_[/'bbb8<#]_qa@*cD^$%3\o$<J]%keK[m*W&!"3-$Hb(XHEX>N6XYEZ%sRV"4>YKBpd7Y?Xa=Ms+.fL?:i@Ml\*j`o>-d%7[11:7XQPck&Y+8[gGF@L?aLA@mbDa9Z@-RTJGZM,0#S3ROR*c0H?>&UUPh8TB6f!jLCGAF/:WE%fR>k/r&eP`^,h]/eJ+?EWe>`%g_i+UEV\+M0I+mQ4!PE*X7iHWA$25@d3A=>k@lQpPaJFOIX:!&43('e#Bn[](Z+'$Li^\Dr%J]hhfTQoEo\Shg+pjcrMa4;j#5b`%5[&Q)q*C'cH_11@RRO8rH]e9^f2rc+(JA&*e[-P].6.oJ^=\mBE?>bi0fhoKXj.<8KZp^/_P6omb]m@Haghr3WTEk:J)JL.U2eAY%eN"EqdVc+i+?U3=hV-)G37!/%\0i/236qR%P*@1R&8#8*?9^mQiIn(ZJgX;+T3gC;1$W_`5lJ1D.<C>cE8dH]o:'&&=4-h)acT,O%r49Up$p0U))^cGt>.f?,AWij#i^L)9mHF'lC<2$K+cB@BXD]XO6%RM0HM2b>J,K/O?ejC-S[nQ8FGP8V^t^_s2O2L0Gt!N<%:@H'%ri1UqVVXJ-WbjoS>4;9nhl4rMD=naPf?Rrh0dl9bH2)gCi/+@m.Mq)c:$?,-h/m[^YG_RR`KL@LC0*EeO*h+R^H?&rS*ZY4U0j$.%Y9n]sSSoFKU9si8^s?4cj3qc]aa]f?BmmIRo1_aW`nO+Ur6\_Kb^EE]MdKD!0RWiHS]"2h>`PeUV+V2>k&Fm6\t#3*[Ndr]ZD2;O%LYNEo(\\cS2>n]a2QBMbNf^=Qn8WN'DYA_LHrIt(#O`SJZiFo;b0QD5Kg`L3De7)Qd_VdAEY\4]D,Uk&;4?j#Z_YY4;hcd!b/>ne%AEJ.Lcp'4GZIfW)k.ZIDEru+)!FW?-SiBGo`(O2qH/`HT;_q(Q5?uHL/<ZqK.\U&`>aHuR]ln3I2$uD/c?ff*F/[pLj2Sd)_"[nN%b>Fl/8`clQpZ<KL+'@ehBIArP$)8,LJ?R5o7&0+n.$mKM,%`B,h8EdL+\N\`pAm:K!iTVNP]g7IZPJLipS3"s78D;Rh_e@]LKUL<%0mc%';Cf5:,bg_q"\9<JnT]VGcMtSD0J1I=>.S8lF/QeG>5P8sq>T&</gQ_r\bqI=?Sne-Ek>@6YPkq7Cqfmtf,EK+;DOS'/*uV)%HEm1tXO`Qq688Ak'Oho$JmnaBnUM+qIK6AMMJr4>fCn:iC8L\Ph5pEr$Y7cS<K]iY#1WS)f*]b=>57mj^hj,*eGSd`).j!d;iB(T%K!SqEq+F%Rp=B#Q?!2P-2pEjQWf#hpD>.7=IE=.L%X0l*m*;'-]lKAi2fH+I;Z$Go.c-J0cHE9aeQ3B4Mk*`1*qLNr&+<)DR`<9C%%JtI.4Y<P.MH5c"3<<q4pHoqKSIt@!?-"7]qjD81SBq'3c%1A:3C&<A-6Gmkisf15,#+*C@#<^[AWer7k:0?Y>o!p"$ZsK&YkIi?%7h9Rk]`+=NT,07GYCR`4E."SG%aMe-AicQ.%0PSqigBp.q^u<KGq3?mIG^iMk?,$]UjkIg"rnS91"PPk4j*+p-apDd#1UXdmC]r-%>tsiV*Nito&l:u;VuANp`9X:p#mW9miq7=[:LmiFoTtIU5G04pE\5Bdq`>\jFsjW\lfCuHZZd,AeOr?mhl7ToK!G%8FHIX!J4GC2%cg)QtpZkT6h]??[q_-+9qYhBtU7nRoB/_rMe0fPP`UgoARMuXl7]`@>b.i)-/AnAJr]uUmE_j[<?>#fu?^[j7+!l2*hO'"8'q'QP%\d(m@ZJ>HI+,q<&-/t\D0?\F)[:SrMET3YhI#teU'<OSs=CS<oS,<Bp4@+iXkr8p&Z!@ns9@HU(.p[#k>]/W6F2`E/f2h[o2Q_+B%C]d8lJHr7Am`#F9AV*QUYaLXk_GD-*9Ymc.#;oHb2cIeV4J8B'\=#[MrWY/X"uT?7""Ajt8J3W3Ss(u/7^M7`Xps:ZRqI#75UQp7%$"j;,d^OsdY`)]'_Iptl_0f[+]d,-dcIt4W\6MLr',,0I>C<ET3TjU]lqEYemUh]#WA^I5Hkfmn+6T1%5%gF'R.U<?XZBlB-$ng)%Gu:,=^6=-<`<A@qK:[?Z@!HW]QGO\(:FZrrY$[g4*kJ[Kd',gb)5fi<D3:BX[Ap_e>e$O#5ZYD1*pZtkRr=7kb_K8)2gd,\CuI<d%N@S[r93dc#+:oh%J`[+[gpPZK:'@lnb)&s)XZl<@:;B=E!U?*b&l:`G7$sGVLp14\Bo:)]Zc2XrbIun5q5>f!\JQifM0.6fDe<%C%,$CTK&>dGT1@sq"T-:8&Mi.\BPQInQ+)"%F<8]AI"3$#\`o97Z$lYD!m&8a]q/@GqM[&L%'LSgH(&6301\0I(GUch:"H@7bZ+-QU%@;\X/i,6P;(feI)/;.!,Wl3_RZ*5'K70jB4"lrLkKkq087.#b3n-bKl#<)9#]-.V?2?G@iKe9,5P_^.q$OX)QQuiR7B4>Y[i1jCl%c7M',:m[5Gamuq#WA,2Z5_==Db#iOi7)J$%"Ct(>ALpGIF)_=.'F.784sJFi)cALAq)4Y>DN(T<E_<9h`?"J/[6G/U_#;f9_E=rp%]r%j%.[3f<Nj9eOaPg5hiXd_A4ri>qfoJRF7#=_Cj!Km08oZ;4BcV1_->k_$A/cO-SY+*_k=)k(lY;`s"g32SH<aW^cIYpq_7\7_%Y=7Pe]=L8QET0Vb&"O6j02bS@?,)aL-XP*fGg>@Y\RU@6=@djIkJ0FTP=6%uo;+Yn3]26'X#dYonkA$akT`<0]K715LoBbN6K(3R%m2WFC-Q]S)E$7;uXR6Cq,']Zqqs'[/kIU+5:@3Eg#IA$0$bJX^S0*)+Sf\>8PI't).%VNmeQS."!Ns_"d@it[osTj.AE+hmf#fY,%BrCB_H!9:*-)2`X/34R<'[?(H=I-'!)?m5("C"0E?@L]o+ok[2lg:7e:N7u44$c3uP:IM\aW\lR2T>e4d?`W8W1LeXj,TbpL0;r6%MfQWk9&e.aggk&/raNETXBfLpH1R^jb8(q5cVcn)GNVGuSmCka1;D?mp\<UG"`YQ&HPOU#<L,3[hX8a`#+g(8ZZ#LEKmij3H_`"p%PVSLOp.]haYl^I:*25RODIAI5=gGS;H)g>^j*d2jhc!SMF6;2=[TbJPq7Ku2j#k\AZWl8"4C=ol6BXjW\h(UicZd0;g:'DLVLNf[%i6OcNNq-oG6=[&&(bO+f[pm<Zk'U!.aij.c+.K%Bq*V\pT6SVQT&7kY?5>K&3):&'^@P9o22cIETGi-*.f.4r4$barr)EE(eM3Se%)L?jI,!EpZ<("u-`FXP^"P)Z7]p;cTG'@KmWRRl(bCbXn)B`\#mV`I@kYI\UpWpj.jmQA7+XcN(')[NWVO`qd/#h_nr6Q%es,r`q%AWq-]\IXGD;_Htq(-c0<T?Tj%rHE8g6.ZA=(H]Us;Nd>oK!NSA=hmLQK$s-:K56WGJDjEn9'5+4li/5Zi6P7e9%*aR&e[P7*rZU5%G2^Ud!<"8o9?DhIh1Lrnies]@=d$(fD-KS+;R3lM-bg=pA7p$hF[>mW8D!71/8HTJS2VHj]skHK`*5Q/'mOW>8PLqFP%7_BL14:g%;q<K9[dV(T:!IFa/n6.(>mFC@W"3)u$Ci:DZF6lthX;a)kdV$AQa3WbBQir2hKK^Pec?Ri_rhZO79:e:&(&B9P"J!:/aE\jNNAsB%2`8Ru9"L`>bg<\ZAS;4DasniQW``?,$j+mP8h3PhYG=?<CT4m7@!:+a'cg[_<jE04T+,.M9d)2*?:M4kJ>o[*"D5^jQ;_<'0XYEm%ZV6jQ;j=@t,4--'LF*lE;rt*Va?"ldP"a#t2Y:63$-Y(;,dX3GWmEGNfnudR9\6V$4nM+,ZEg<hq@#5s>II.3R\l9hVNQXV1]fHZ%K@FPM@oG)gbVi-*HSn&\;(SNn=[L87Q3IaQ%@`1>T#`*F;\+cl%8;mQ/h/K3TFTFOD%DP(*P/:u=Tl*nFA)>385lfPi\%MBkbC_X%l!]^W!)<Y3QUNs>=0i>HMh#E*Y36oBRF!%>ZI`NI$#M)jj^F:JJN0]fLIJWY*?q6?YXk,AXC3'Ja<Fmog8_G0Z:J&I<gKS>/-:Y5%\sV=T-puT[PB4fEJO9e:)2;-l<bsFUJd.B"6C`Vf#dhAn8$E+KJ`9KtNs.0#5^cB"E(L4<D::S.J9.S][#W<U+<06HHas9h99f8_%Q[j-<MPA0<+Jiu!QBt6pZV1S(b9c):CoH3A"Iq8J3oHNZA1Ldj,i?Kci#MC8b9c'dl(lBHi1-O/ZA2.&q%Ahf1Ju9oY@u^P`)WOo%3(_cEfhCu58sk*=R"#7Xk[<=GQC89jTH6o>FZIq3Ub339U;;EPMPanHI'9K"<E#':-oo6)AO/H:IE`Pb(H^GO/j=#F2;eCJM!@4r%bh$1^1`0U].Vp[EIl1++N$af`4:JYO_UL,m*Z5pd/iY(J#RlC0dLFVZ:b%W"@B'B=NSpa+3ecdj>7e[@?s;u`oL)Q%.17sI6<$ZZ%.0S_"5W$_`>R8%KI*tmkh,65[=qm\ZJ/(C%I&&2HI*p&O-4DQ%3ag1t+SlAk5S4Q`//]W37LYH4^.)Nd9P'm(8L[)0-j4M<BPSA3%'SOOglQ+n/_sF5A(/E8a0=G^q#\ZShp(q@[#=>C6,F33j+?:i[!\l!X64Ci1YCTRoDeVI'BUF;Y9.#A.LpCal$?/e\M8NA-7CE>0%/gLQ:9\u5;1OdJ%l`mU[.]H'@%G#%>e-Q7[?kS:<&4b-PBiV0LcjiuD!CXcgPB9nmNQr]S_kncM@OY\=33BP7@X\=\<&]LJ-qB63%L..61FBKreaK1*^PBC%"66(^e0O'j-Ug"MRJKi9HHO?cOK==@U!Z81`>g*3MZ`b_JO$aaOWTZF?@)+/tD9p]H$8GBs'8XTKWN3+@%ess_h5nIECVb_MY"%34='`pl&I\JA3I?'I(@#gC#7k:CFeV*0ZVlZQ<"IPt2ihFhuRW()_(h5Un0:TTa`0E47L$]7%:k1Tom0!XE%S8IQpVTQL;LY4Sj;olQ`i@&+:/Vi@P[Xqps]4_8f8dGh0\>`D"Sp,g<lFf?u3G.[qi&92g)JWg2A'ejL%XeOZ^eB9YW8q>4#V]EU%_;>9eKY`cS9lCUTR*oRZ+c:#<7.l/>YD<`$8m+(*HOL,=&@>TgXU.KNkRG!Y53VMoNY-"Wr8JpFeYCkT=,4WuAAcM@AHBbM9ruI\%g;"k-HN5iI_\S>s;#B")J@Gu,]B@$j&Y,:0694GDe9$f3"F'@t/Fg'K!(0+K(.E\PT^N>B0GM*1\.JRTR$u"4f:ig3,ldoj7HQR3%`-Xj]'&#g29\ac\9[Omr+@;D8(cklaRM9LgTo'3.Bb%*KmBP7k:,nHQbb!ltU[eX9/Fnuj?:f&Q5C"]>$qXJnTcSaRR>!R(+I,cV%,D>Vu1DD:d/jp7O#K@).<5`Lh)\WMA@,t4TA*n<TcSaeHg]]+'U?FDF]%)MR<m`Y&$.Y$JXJf?/=DS]mZ^Phi5i?M0nE=Np4Dnbt%E4*bQJqf"=(!A?p)Hqf6%1TN+[dKO!ZlI<eWbhpW`+G\j\tk(r>Rg)o_H"uH4[U6lBG`a+"f!(6X331R'MY+?"dieaj1D0,#]YfF%KTJH]A#(?fG"c[.dM6'I3&jAg_MCYH)!M;,WRbAH)^24q#S?j(D=R=5.57S,6ZnB1KNR$pTglVFY-_cN2S-c#,2>X(!00Y6_RPS#%lXAM<f]]+cimkY!3^H>)-,seDJi;h'@HPAn'!GQ-?]\*aA-o)oi&7pMM33f0SJo8u84O4GN#a.6E1NHFbXbelr5,IG7_/S@N-+V;%EI#'VNY'1V'\>l'-qJ_XV3hq40J1mI-XpKJJk8^`bhcee3e@dX[`(QgeLo/>M%DFQ"<3mCfJX/i7Rr8c.`/I<4V3CB!fYdqDGAnU%GM@1UF;HHF1qT,rleCZqCSD2gcO8]Nd3Z[fd1KjO\gj*2#h!g!(L#;?r8a7/_ROb_o\QiJ9QXW,7J-jf@dF&]eV#F/Sf#b^#`Ghb%@oa8'L5mb"CSSfERO*;tF;O(S?$KG6A3C(8hQ7HY@bOe9%1pi26@b3JA:T4;r3He]VF3I>L"I+?1I-^.Sk92*D?(i+#9cJM.[CC%%QqrPh(\jF*/ckS$9M85R+jJN8@0'!<+qWSWW%+'Lh.#gj\jd,aW14P'$)E9JZki`%CTt8b9LWNhP#@%1:jYSb-&SKjUEmo+n1NpO%13JZ2F@&$dWm$K#C]\Q*63&<gC2iL&Q'#LFdV:=mdaeKZ;M\kGJVWl`q>@@VY$aeR(=FJ8foU3Rc*5c,i"ZkG(n&Yu1S(LLQ507n%+e*;88W#f20W?q3(lHEHQPDggNQmB!=-sR0!15Dr#Jc.k9=@[:Te06'4[Ot,Z*)c;7UH62fsE;">F:&!q!'WB)I](36jW;1Z46N!%"/?:6.!:>:BEikod&0;<C90EiVQPfY&b3`7+Wd8k=UMC?$siBO;1qLLVA_5Y*E/\CmR.?HM<(&YA.Vkm=!D,e+duuk\XGorH\XJ`%JAFOZ;<+^gkb-WH^K+UN,J^NT"3b,hV$k7C7@soPWikQ;irp!eSKTt*0#TXD>o7eXS=1F1ctQ6o)',4ea3m9.0b0_f#pt=b1R0C-%)E(??bg9`T8LR5<QP^Md/5m.bZI$k#FTHP"iqC]PE@Nq*\Wl+@$0:/<3@*d44&#0!c>c_;#Hisl0Gq]bi"A<X[]UL"gB8'dB2%F4%'r#,MJcfWF3ehAT5+2ikR-MJs^ZSS7>sbGH_/FF7Eh#c-DoVm$H0Vu?[_d=TPQL2f-:=j]+MVK6rD]");n#/rE61Z$7)U+%cohWr%&Ab?f+V\ijUaF.)V)cTOjboaXJu^Ar7[,_DE>]Q;aH?dC"HC?7(i3Q08a*%VeM[=YLXcLl,O>7cXqG0!8-5oI$M[hYkqp2-CNDmd%"bY`-6c7#P"DPFj-P8W!*e]V//j]i#&:sq5=7R-*6BH\9h.7<>Q>MI=/HC?)#(OP7Ab4gS%WRmNVZ[Jd'9*@#"4\edLqSTR=YtGB%fhB@pKEQqG(<-[i$6ZTe!<Q2X@cL-1^td4fP,BXF+:Rmm9\.19GCs=eBp831bN9eN0tL)+ACq6Ck\.FJ"BRJn?moQ'-Y,KM6E183%+93a*8i]P!;2>e1I>SE+'UL]-;i4]&Zo+(9"Fub)Ml<MqhQe`XG4G8sO$ON`HK9q-4fGJjfOZq.a9PmQTHCp;Qj"J[OkBppi;c2F%S.GaJO\1aiCYFRQRH+L"gLuEtWe,"Y+k3RR&:=r=d1f5)V(jpMX[rW^NTRCrS45Xc!@]jV<(fX7J["RipDb#QD\d(C5dPuq&DG%$%S>\FK.g*d!fG=VOi,aFN.e\oh-s7B%KMn%2:.5XML#sAD4%K[j@Yjol=!.uF;=#R8Tr81SWrpg)peDS_@;a[&^&]@#GdqYr_^&Gf%LpGF,O,3q<P+HE1eg2P1egZXgNRi"*0VO/r`Yd:0)_*"mXI-FU(j*52B?99fB]58oQk^QT"sSg66SkYh.>hRib0kQq$^5CrmLW5A%h%V#ai!;"Lo+YqKHkY3i-rh*3.98K3T:1lV0\9`lgT&mj#,2!*<,bGiPQHZW+I&B=A<p[YE]R3g[RNatAIC>1lCNRDUk?p4\DKY3%#l5lcU**@oJ-=^2iAAL\JXJ@-?Pd,T+ASdCB&k+gXJF"IbreIGW0ThO!\fPN_Z0n;F]&PT$'ipR2jb_@6ms#\#0_'gM(4`V#lHC4%Z%`g&3,5H?ZhIjJUO:!S4:&/kK`Z''7roh#?#hPC"IMO\"h,%7Q5p$JliH)$+;c4/NKBDW["M+&4Fi8_0[WU_g&dS9:i)!+,"M_X%"ZHsZW7]<!EQ-$hs$lSe*DZBa,*l]c"B)kWQq/E%"=HpAn)6$X_/Yg*K%q2&K$7bdE#$G$/_Ji*M/M>p2O3X6EF9t"_=ohJ0G$ou%2Hq)AhX#q6=Yd=1+GPIK/:a+n:'HF>O[=jMku:>q2pj.$%38Bq6a1Zq\CaB]O:a3)ah!mp::0@S$3HY),\$1D.`.Y`7e*k,\d=-8%KS4Ig<ItcOGMn0#EC;*W<k/i0$,NHAN?UZSloYj6+F#pYJTbEjgSPPiF''TugB6K+h%/F%#m&2Y]2>?g7(4`\1im)u0eh<`-SX"W%(5AX<FS/9c2**<sPaa4,R1_lSq4%GK%7tR&!4&,pfn().(9LPJg+gKu/6e5O$aCDE9idI2nQEfUA;2iJ-,)i^8LC!8aR1mr^r^4/%'r/bm`5(o_QZ!a81G-$hC2(m/eh-`i/J1:&nV4;jMPm96e.@f=iilnUbRm+(:E]olXb]YV"nJ+Y'AM.R.BI9oQif$8f-iooPKY?j%=OZIXTOl5Ed=XKaSHX%tBh,J'!"dg-p8ghe]EJQX1uP@<pDb#lO=cQp$F?%;:FY6`fbfYD%RXN<Xcfb8j2f#1dpsIsZ7T-r@K//4%05<F4(u8*'V'H\!6O7Ql+[d\q,1W2!@u[Y7K)_YY90m,+)"][WA!=QCOp)7!A>&B[#Y\9WR=\8Wap51X\`-#b8.[IL3dcdTa*9/A%)2\l;V^oum,TX=1(I2?6A7i0r6:`JVeW%26adOhb+lhrGnk,(iYXD9T/.Q/`NE\FbLr#C^7$qOXP^/^lWijT76qgLX5`u"GCkQh;%_%e%I5\3.68f6b:SWg#hW7jM\K#gZMDO7+$[T&G_2=V"ZJP#VD9fZ.KC[\98bH@)9Kmc=c^8[pnFD+=E6oC'8.Adm_;SY4I3&#!L%.stZ$CpkA"TP?l],i0Hqb=_E'XEdeR0kSOheSHfdR(S*E[]'Y2OE;tE/'/D=&m/dHUGYd1l_mCLT#mW\%G//We\O@7.4[YoZ48G'%6thbj)IPHm9c_m##QpA3FK0<;A[$JGI:OANJT;1<<eO&`Kt1-[qlW#'p=)TU"C7+[b*$WZhM-!-Uu@ll7$oOQIHNA'=6!4>DXm4\%$\A[UW^'q/$A#IULG4YnRAr?"m<`h"Y^/Q!fTmltK>`#B8sD5)-a&V]1RQC6*167.+=RMc2@NQu$JXf?6s6CQ0u-=f_[-Gh"T1.n%psF'R#c$0M-jUtEEO]g5M5;nnX7MaIe0NL'Rl%%i[3Aid[V^m8fn6Gh2.Mos>T-`O-O\+tm<5WDd,BE8#icR+G=.IsXt#AC%S2ps%b$*Af"05@f``.tO6].OLd^dIRd7TX+?USN.4)-M9&tEZqP]GghGcMC=JMsuB#UQmuXad75@52C$2od,XVQQIO1LSfD>L;75!OQuX%NkpEQSKUa?,"aTpK5"=4!D26ESWVg3?,t4!<(_scOQk/eaqGA`Tg,&8M/ZnM9COf0O3(uX@5c-hY\ArjA7k1jk%p5JFOO&KP`dV5%N4RRk5fhf&C<a'Y(^.30N%4NBK7SogAPu(="]-QZ5ap/D-FYg<5`h.2\;irl#i[sW7Fa)P!Ef\1:nm/#$O!b%0]HW2<J3g`6<'4=%]#Yl_aqu@;m^Nf2f"t/7*XJ$Gk.`DRY$$ns$`I;FSVXno]KELK&7&\_i;5thg4+e&,nN!dK.omGl-Lg*Bgol5JOIPQ:=_sALe6ik%mg1Zt$Vj+p2;j/M%)N;()T<"O%qb"#M`3n3$Q#/#hFSQA;i'%Wmub1!W(mr/R)99F[n4rBMo*t'ZNu5#+//+nW\_Rr&D3X[cOlo8%"u@rDbP"8U%Pnr`Ke2u/2;si+>`WjY,;R3pUKA*5`T@<#dj:qP/a;nfZa14Y@cB^'+N]N+;X`?J1'j'IJ;"Br#Z)g^+d5G`J\20H%ST[KN'VYjJ_(hVnL>pi=/7@Uk&3]u\nA#H;'dpDY/<3Af3's!T`ZXn:eW^M].><a[2K03@7WW&8dFVo#U9?##7$2LP,;LjdLsG#R%!ohHY+%-5\BF5?%`*=@`"`Y3V:(9\P"L6Pm1/(Et=DuSbP%Jt_QHb@c!\'6*R!6VZFTQ&*L[ZY^!P$m<&F.+U<jp+h?j&BMm97pG%d<SFr"?3QipLo#TM+4O;1"FrfbZO6(L+U>_;Ftu!,n'$0@$UPQ<&G;VZ7(CMSs1se`o_6`OD-/!_dlJsa8pF9(kg"lCoZ>iQGip5%(5>Hr`UVh:ZJ:&8Tp<QDA7E1o7+!;d^fpdea<CBuF*]Cm#cj%bi5rNf;[?c9YpabZCFfP&;'Pg\[On/3).p1WHTJ(aZF/dEAZBPp%J<+@T#^GfSPsqO^_\>/O!aJ+0h]VT.C_6=F+XZ6>Y,`mrMfDh94Y>a(`J,^^DFB:3S'G4RP8uC^&d[$s/1s\$e#;K1VWshQCWpb'%,h`i7A*YRC/?rt'Z^Ze97nLQ[I2YHu!/^N8:.5TNKH<91'(@4ZS[n`1X9b'?S^E(')U*,-V(ea3bnHD;e)%&.O!pb48Dhm4M8b]:%K2PXWAEN-G19J[F(kh)aqO[6WnFl9BG3goifGC'-:hV5SRVsr^G!1]J#1pBu#El.cs+u(S4F>D?1ad8iXm&Q3+@-&O!;<Ngkk<Q<%*c*8[@Ns_*];7+^69bc:p\]f*U_H5rceKiE^Ic'[YYk$o2W-`W,l/01@V5QPX6&*2-..Afa>En!h.8-S(\qaiVT'7^&*0ReJ@DQ5%oQRG&/]TGd1)Qn.LQ_r63QuX%MFj&DWmXtDDKQ<FU6^seWM[f=bO=`1>+TkIM-dd9OE[6,R!E`,O>4?4M3orMR:E45W2dgcVbXZL%DM1F.Xa+/@Vg)+*S6WX8aEFr?+,LU(,4aE";rlSbkNXZAIEGW<GA1?bs/g14N%d=jIqRDNF6a=dFd)54&KBqP:YAmjDY?-r'@O&5%D=$-6901DR'mm'RqI!=&kP<Ynm8HF@S/I*Am(U2HW_.R_1`dpn+a^o.EkAW6$ZrduGu;cf5s2"Pfo#B*3^jh6pLD@nlsdp&:0*T(%Fjl`"_W6#a(39B5E'khYXM\PjOZKje%(dgJg3-Z73%"NoO&_4XFD$P'S*em,3NC`BNHSf(qCK<Ce3Q,L?WBX'ca8":o4U3''FbY2%(l_rgM9W)\Uq5F(L<t^!g\S\:F>HOTB%Nnb;8*VW%TB5,$'dS^U6nGDVS%8"U#A(-D?i/WDCbMGP*+^.86/2II02?,`B:siD:]=4%k!n(UCF*842`1.J;f!UR@%L,V*WPl]2A[cEj5,SpB$jK.Dbc<sGttYLJtJp,@;ITBl:_XWQZK)"lG(>*J$k]ZL1EM8]&?g3jZejs%eRne.]P"uN-cbYZ0!5/Ykt_E$Os,i#mct9(70(gL7,u^g05b*\65;OZL'/Y&381m=TZkMGc?LIj-/`\]\lVp$ba,^nrk6H;OOP!X%BI,tl#jN&JQ&'=@(6XELaSe2:?sI(/'c\OOUEp`c)BEYm@0hj(=,\WY*a+nK#CL?Jf_D3ViDB.\9FQ6+eNpN9a/;M8&C'h`G]k^Z%n^4Xma_hr"]S[DY=ZDe!gp/N\g"P^`8X3+ia=H8P\;ss"Gi_Kp,"#hh%NuUd$]DD97!'Y*5J$0ifgWYj,-";u=!G:MS66c%,!S'J%3SJq2L$O>(#\H`qcgJ#h.MH0K.%2p&nq?Kt@_Fg5/;T%>:!m6UVU=HEGHuWt?KWpGB_ma!"_mOf'1HZM]Q*n\RD3ZFnb^sY^.cOJ%S,$oTNf"3hfI=Mj<hIm-iN-I"%/\*_]o!5"74@e]-1htjD9cRd.YPpH.N%V+J5D@U!m*(=<ZiD!e0)b=@38nn,-Y9KrDo;fYdL=`%#k6V-5^k!o"T04'[))S=8Z40CA2,++,F.B3ih'BnTH-&eJC&-:K^6k^&"[QL$0.8S*G/?Z,nZR/XQ)RZJVHFf+64cdR"1mQ6L>E^%eCt]#LPurF0]WK784+VMeO56:!j*J6B0aFqS>,mO6a2i'FU#u7+Rc/B+bK^PmD_2[Z9q"]5T^h+$U849+?U&L0.#:4PTgUI(2:J2%ODidSMio3nc&GdP1>fL^2t47`^h$=A^J(HaM5O-E[mi9:JK_KMV!pEDH.s;)a0qg^$]pj:5t"$L1ZD?t(o&qQ\'u%B4N=-\KM#Lu%elu2^grMEGKHh^kO#/g"F>CDbj.dqR=!G/h">UIR"g2s*EO).#HY]'eNeP*Ti+k0/mHFEd1&oVq?<B4dU4kheP#t\!@F5F7\5cT=%YuccU.!2&rLkY'1;^i%ZKaCj3<,I^8JAp.Q:PT3q7mPdjW3F(qXX`5&TuIZ:Oh.lefCPd&C>e3SdiIFVK?HTg`V)i0D7p.6L)+:S%F)O!*HR*96^>PAEFoX6Ta.*7gOE8Ni9<<5uSDd5O:WfT'bGpL"V8*hX<-:4F0K+kn_M60Z,BOi&Qe4?uD9ldXaKC"-r=ssR\=&4R%)NomCfS4@$l:#EB:\UC/=6"^uWC]DgGEOOmP#0u#>\^)a<CAYFSPo?bktRX+7))$;G";R!D2B\9+;2rqhm?8fprL,LkDjbM3,#Z%%RuQ3jMUr/]X05&C[I[3O%/US3b+G1!]=nom%n5O%A:1eQhs)`%HY"HVP*]CJPuVqdF6k,]?-JKCrjGTVrl.Dlm>2:o]XQeX,e1+n%jZ?_s+u]B_(B#G&Yl4[80(7E461!d(Z!"R@e,pK1)+2j)6qQ]UNkhTfD(N^.4a`1-,2P(/@As#boaYPH0I`+&"+2rIn4a1/Ar#V@%MA=7C:G'ucg2_[(!'+)F.]!&Ce]13@dd'PohdUtfaK[5_WVELX9i&-LZOdWDggAN4X.\`Aq[*DFJoXB0p`+?-GY?=2mk=4[WH,-\%jY8Qpo+tVRr.U?ge[mb>C#CS2/RdoQ?0B[/DkVYeh2O#nf@72FZn\3]Y*+o(?H3E<?ES4GV1RcYQ2<(0i_el-W.Hg6Mn5ZO_]Na\%XGfa`=U3(as(Z5k>I66Zju<#n1]fP5)YYQb'-eoL,`U,)kCU2(SFZXl5Fj:e\l1d6;e`j#>s`SuNkNlRs5N0JE*!uoJL*SI9^@CM%R^O9<$J-4JLZ*"ZQQV7Pp@T:oN&iXsld:m;6hD0m'3(B93TVE62SL`=#]7Sa&7<7b]sEf<]kP\W](@0pKQQIL6jTb:Bi5sm+n_.+%8A2b`UdgTlW6lV@qDrt+S[-#/G$K#9,g1b<.OVD8`'Ld+>Z6Gc=?E]Kgp-:[3"8E229;,p2rgXjSL&i,P$G)Y@M_0L;A)g];+(6O%YFs.E@Y_DqNJAh";Lc>d\k8]S=0t):NUf?_;K^3.&1nchU;()J:t<HHWK`Ia4MFml:igTWqTs^#q[[GkT:>Yg)AU!trTD@7I'oBW%X&0NV-mXYm<@5Vh)E!k+.'h!;A+tFUSf%C1iX0]`C>qiP^2oS(/Je;rb4HY>\jc7b7N(pkc.JC<%6"HNZDi\R^Vo5dg-:UGA8I,&%7!r1$:[o3i1AO/R?Ni4c(``T=/=@psU`kp2IN9-`-6gE)ken\6jAqcUC7ip4YL7tmC4ROSTM@m1`E,EFH9i4I`<pN9W\e#4Y3*$!%[)0LM2X\VaaE@95:neViV[7p5X^d6`@C:8U*1P6o_S%AD>S[p>l2_MQV[,s0aW]UO_4%jU2(rC%[&efI6iuH0URU9l(.A?d)rggr%3r)3g5AV[VRH&lIU*S=+AVg2D[+sUK;8RT/B+>Qn=Gp#RQF2f,>]H]W7ILP<>VAs:k(5f%MeuciK;asKY"RnQk6b2m<_5oI+YmXY%efA*,c$A5FY#BaH7E0O(.AuKH%-j=j/h4<JDG>)YcR7^.lIZXa;JKp]NVM_`@q$'N)IJ[VfD<C!I#@-Xg=l;)XpUN?eArMRL>/PA%+6Vg']%LeIQj9d9<39</(.>emDXmU:M,,`W3?b7($>)HGYgA2DKXmVH2baa'b'Mdk46Fo*-K8Z7^bu`54j&'hVINmfl"QO'fh:a/%pT^ft9mBrZ8U=PGMN9EIPNb1!Q)[7/OR#W?44gX*.+c8)n3CH-JJf,q-"BpH([Q7<N9<L9c-*$<qlH^?/X_)k=YhVY,<O:>M#qC<%[YMj\2$(h,1$l#jSckit#B]VsP/[\d`3"@N$q4[[G\CpK<H_9mYS$LiB)Y"FC\i`87Fm--:8o>eYFHN__49MDpgSBi`Z?]LH_S8_%@M%Y&G-ZNW?75-BcF2Y,>Rt+5U&UdjrMbpolYHLcd'LGY_Uf_%PHH6Tjk#agmMC#>`[he@5+Yle[ch+`Xl!XdXlrHkTNK:N6U;G:%;2CWDI#d5&]Q1Agq9kqn+&qd+\GY'D"q+rtWdUSn,M!^s:9ou9NU3@M$iHgISeg1h)%c+,'4M`)TsXhrTEo=E*=:)Vhr-m.d,HBq%8WXa=9nUN;I7^`Dr5c-i_iU`#9-N-t,CA'+n*t:+D5hH+C_U+Z!'@8DK>A]e\*q2<+c[Y%Q3"i8._tkLMgGGSZ@o]gm'8M,onVb4%"^Ztd0oJ;3;]6GR#<?]^rI?TAn,#<Uds+EObBr&>@XP;3Xk,0^%3Di$i<W;^oI?(]W=dc&@t/iaAT!oA.K?H!E(Q@LI1sgV$pXk:%94B-[=RYs@-ImVOMa8FR;oUN&_jrt7V+TPNa*baDCs#)U9iM.nr4h^OXY3WX"]i)b/U;2@+\/(&(J=piG06!S^f^&:BsNBD.8rX#%_1Go8>D;iYc:tjjFA[i#dqT7@P_n2&NXMa\!c>o"T]T=HQ+;ZU`f%UV0Ige`@l_<([7TK]Qmm(_:[H`>k3oEPPl-P>H^('mN]XO8%H^!>9VO7h>dZ%'BNp_RJfCDM^R\FX(h)D'07lECq>ZIBk/#q5L[fjTWY%N63FD,3b.Y?@qPWP&JkEp>,=pe#-Iu0^cPdB0/N`gXu%]BnSN^K_'2'M!(M#oLRYq!p]moP4AC5,(H%BRZ#fW!^\c]]ApUQWMrhcWh>Zj%e6LR]=_NBe;oZM>m"ac=du6+B3pdbO4Udq*O>d%Z_-h]6ncMr?M,i$(oQM^L3h<iIrN-P9GFLli$L/a:P]P-0kZ(r'R[4C1,k2ii-CB/eTlG2^!C$B`b,I\beb6DH<M<pD;)QsEreS)%.^S5*L21^F'YY3"1JU*[=)/p5pqU_-HV5t3hHc9fV^Wn9kRM=6d:J`Rm'$2!,DpU)QBp[+B:3%o?lh)8oHktser_f"Nk*A;9-LXm%?]nP:b%9/f%[ha9]>kYtrP`=`3B4)%[B\9@''j22lR&g@Xa*=>(:UjW@_"O_`gnehqUSQ#L\7!FaJ]G;1Wi''e%E99*];[B<tYo-%/]$/:d?aWEW`B:'0ErA$n!%J'f<&Q&"`MLCjo&b>)HFUrUHE/NFoL6d'e!f&"!sE>LA_@pim5mIh6`!qLKX+X1;;JdhouOn5t1&"%CgItPn\ePI0q/fj_>)bq?5sXpJ\/qH$^;fGoTPa\<adhS(PfunHSR6Nk7G$m_n87&_b5E<AmV.3iTr@g(C)8\l&mjoi^Rg^eBAPo%(FU=STn?r<grS`$B;D6jg;CWi;7of5$@Hg7g01d8%fBPU1eb/-%fF>V-?8p7[F`Pr#)4;S_T6)@M1LuT4CM\=7%'>:0JST6%`?4E%LchH_BBB=&YO,b,gheuq"Nq5_<0<rBcjbpQOkDSgK!je&;(B%.DJWTgIX@#a0ego_$q%=SiElb<3s+JdZ8%BR/X1)\E2E,)1@"tY%PM;gbPbkG$0qWPF19`Cr*c>L.I6]M+)-C8ZR;GCt$HUA5C1bIO]W@>qF#1]@GD;N:g7AZ83/Z5Nc;k-AY0Pn@b-4L4TB2Ms)uSKd%a<XGaFD/<?2e'ZgSeunA)V`G=K5\#!Z_$a7+T:k*KT31";N4)K+q^Uo;1Tc<IVY>Jqd(!Ec"V(e/WHr>`6hgk98L1(GAI#T>LrsU%8CY$ni)?r1;;ZSs%>oO131mHsZm2ifFXl_QG%X-\f!oF*O?Dc_L9Q;\dsGiJl&u)(1MC2#2#`$UU7obXTb</f$?n'TA;D-pFg(^C%PB\o.C9R+A!H,cnUL5>YN>qI8p<d<^B+TSc^9i:1QA4[r`Bo$1SP(HmCWN^Yn6?kI;HTZ[YCW_<+H^VFCZ?6<@VW.lmL`Ad-47h_%fpFH]VN\jQO09%7*4V/in<_i6ah3q[<-.LrIV$tN?`\aXe"$N/91-k:Ao1'X7G_EI*@6h*EZj#J93AceN:R64Y;%^uF=M.LlW8nP%ObT7c^jodX<44qW9t-gUCNh`;RDsi4/,)FaeO:*6^;#g&*:cbYaS+)!Z1oC+ec@[S93i/L!oe](Mqo+@_eR,F21cWH9,STrOq!Rk%(<j`[/(lK:P%t$=7+)MqgFObmHsJhe/0Q.=q^!t;h>]kGL7/A(P1pPqT3E4/Q!5J.Gp"iU^l/ZKP&\YA9Din3SEipqS:7[5pXs;4%Aq59XCpb)qp&Pj.^C-bN!S[8:S0cl-#?sd*:p?kkR=R3]K\ZmO9I:.CE:%HcJYcH>N$U3SN`6Qc`YO^P:OPtgO_h>aYLGP9QJ@-a%rOJW\<4OaCP\7q$X^fM,BLoWISL%#L8\o<i46GUHk2+cAK+B?T8'Hg"?aj,9d`gTU^PUj[U%*7\^=pg"1R9Z8ar&4!`A.!XZmZVJ%"i_@/$_O'ULFr&sV9XhY!e@LaQ=t+DcNg>pm.\edr;d0=\qHa1X/[-GA#!!8(E0KO_NTM."B;?9V3V0(;un=Gbfp=l+r=t?J;\lO%V%8-^_K#Ee9@=+Yf&#TM>.k39n)[/@NqQP/I)Q4<+t*derI-U!?!FK&$e-F<81cgV$/dVjUBAAb%34pOF+R3V'%$4(/;A=>lVb/q%$G$NI/>ZjFWroBY_Z#@PbbXjM\IN#LOeT2+J7E:5:ei@a0L4#<+KPV95^Ya9K1WK3/*c5$O\:\F^5&docVV6LL_)8?]JN-jY&5#t%F!K7un%oiNdlI,aYp%D)$)(8e<9tteQ@a+8<*]!V]JomhnNPZ72.d<p_6qE$&_WN-Jgdt&PT5#m9KRO(FBT:u>2mKH>O$rHf8"E.%W@FofMt1Y9j^"a(#1rd*Q0Fp2;+,#f[:(.aYm^o#VKOJr#MJe_-WJb3:.;7&?(YA&W6R!gOL?qkR7cVXgLfsZ=m>Lh`G2p2nr[kQ%?=M^<__G7&C)Gd.lpsg!G9k4ia<#@8aAO(>.%_'t&RU+Jp=1.o(1@jYka1&&XR&TWn2)aq["kE?ktO^<l;C=.V;!8:&nP'n9iB22%Q6C$k$B^Q,?u;BXFSVlD,n>suY+4sf+>#cB^!iG30kaMr>V]teD]5^e`VCM&,1e<os0NJ;0P)a0;j.h.6!@SN6dN$,Iqn1=92/"s%7!I1=-mb=^<2E91=+,-67]2(-q<d\aY$1+cTdGI'+5Q2$Q>!9B]nu01pui]=*dC?'-gr^.e#@AR)rWt2YB0HJe$?aX$:XEjk!"?q%_5EK1[sPEQ9ed-CN`0LilNh9(Ap%Q`&sC8*Y]?b&;Hmn%5A&_/H'VcT["Kbh[Y!kg&i,M.S_KkND+`n',R]m&)F7-AH?Orld?08O%25*&e_$TX?3Tbt'L7CKZ=^n*=[,SOE-;u;PFirQGA@;,qdj"l#Yp,S+VH]\UL,(k70<HRp&$c,8Alc"\5[rppPP+>QR7K_a+ZMcO%MjMo[,%uU%@L>8?medYid+-n_!e/I@b3>)DMBo*XiN#OD"7U"^aG&-5E?Y##P)q^r/u27N9BjX<4j64jK?NJEU@r;(YZt&I.gK8<%X,nO,S&`&m_C\'HBq7;JL7L#(oA3B',gZH]8t@FF0IPXD0P8gfoSC8t5=+Gn<ML"X9!2esk"l>(Yac7b&gV,.f;`==r+O2S'`A1[%SYd,\X@fnHaNLs(2$In=*J$?+KN%)!(kR6PjR6]Rs#SB5YEJC_7fI9,_OQ1CSkVK6FA:eN_ut`VZcm8^'<j$EBZqg]NUb,J0^d)H%d+X.HH)`fmJ-DdEXqE'h6,qraaTO04K<3i2]WlY1Pt\sp?fP;2">hBnJFSnmJ3XqjmNu<ZZB8`4&/a%=-=GeRU*H(V"V2$lo<86'%'-c_Z"tVGFk"I[@_.,p?,pTYXPG["="D0B.@K_u?jl>,%1a!`grfJ.Nep&$_+:4a@fjZBYG.gL'q//U`3$CJ\Nkt?iaTf]3W3mul%Yjb@c]>bL'&;s.SC9mraP'8=ldP3$%J;.VS&CZC/[VQ$aQ>Jn)g]k\kgs?Xj%EMQ.d??BfdEU$".V70+="\5#^eD9D5EEI7'G_fE%/4VGqbE9*Qf`J8OfNhU0<?KZu^)3"b_#0I"BtOc$lUA&YlQn4DAIB(DKkBjp9i\mM#]ieu6LPEuOEO]nf`VGbeCPj%+I5Do6u5+p%l?/k,Cd>'IC'JPXZ>BM2-D1Fn!jln$!(>;f$N#mB^"@J&fRMuQaQ?eh2Rs.Y;QBbJnZF8k5V<D@;O@WD;>4WiM?Se>f2``=fM/fs%fQ0j^lc.J51/<b%%B7\>fZ+XM?$`o7)Wu#nQMb+=XrHo`3Ce#t[6%24I)t(8@L2JsbEos"2m+B8g*g5URG1/6httiR6YDuUdeuu<%C.P`;OgQLt,]fr9aReuH/Aka=+?iRS<iDV-%"`sOggSIm4gN%HGF"PPm&(J`N:%6J$=rkRlJV.EPl#jUl:JUKQ-KrlV9oso:)^aA%8maHd'\&=9/,ZIpqfaW0=B.H_Wb#>XR85jhIpUPf<@,=t'FaZ$::CU$cKCG?#W,n4Q_ocgO#/<b_NSADZb+0f`d)RrAlNCM-ce9h%fJ>oK*-'U(q!(gqC"nV&hdR^rf<goHRUK"mRedRbmm?fF;`9^oT*]:'oCet'ABiVfHX$%RSut,JC!38gM=)r]5&#,n*o;=HI/U(M%?4DI_H$!O*D;'9WGgY"[4f\&bT77C)#*haTq#3b>o;,r4^<'sHde5i5j6@Ainm^u`8+IikZg(Zr:QufXHl?0EW>&Ku5a>&:9Z5H7%7+)XZA")m>S_9fOdh8+sFnK9KL32Y#Z3ZkX(*Aqb(Cce?Qb%7-d"sNadE,.6NQiVV5VutEo$2iL:6BVPWV1u.3G4uN8fZ3&_Dp;8%L4oede(8Zt7?Kl=.aN)NCChlTAa0*!)#:J[GT^_E$"G:4eC(_2GOH&2g8`iT6Brt#3uO?GrjLQk6JY0d,L&G.43lT#@k[N;-DAoL%Au!hG&RVZ#)%WGfj&>RdgbbaWj[OGfbKJ\S2(lH+a!78)Z2\3<rjeH3)jp0m0Fkik``JZ*;b:')6OqAA2)-`6cD7mWfLNrSZ;)qH%6\ioj$s@M)9$P,!Mf";_'C73`J`<$C,l79FL.,(Qg(2M\0h%\>X_lpE.*1oT,oUf2c[j_MD]o#;a,>/H99neYo#eYF_jD`R*90VH%Qf*C-]'#/)rG6Zd/%WgWY(=a6;_hKd0=s191G*C]OK7->'S8BVj_*!OMSBoiM5</t$E[D2)PIK7ajBT:69!)XM7t*b;a:ghdE)6T%-@%GI)8oO7na*?O9O,adeberE1>.]+fFjtgY_JZ<elua^d1kq*Z=?L5-SF9Wpg<<Kd`j=?flphq+O>K_PIAT&M]b`$*?ZYTbEVQ0%9.=W^*M+o'o^bIeg^`-J;/[GM*UJ/rNRSnj^/:sSVU39R@LZ-J\oA!2'K48d&^eEq;^'YoL-3#6=rL9@ld=UO9(n+A+\s!Zi=<fa%&u6MOG(NB<>NVd0'HB'C@ocq!mdk!TTpmNil]JM,ecpr._o^L@X8)G^=ChpjNA,`r.:S)Ja.'9`N9KI-Z?>X'\86D.8V3J0O>EZd%7F;=+`"g,9Fes#bKVPAUQCXjD>cGS)Fq?c?geS\e7q-'DUuH+u\[Yg]=^6r`&6C)<`:\94ZI\/fEH-\]0hYgi>9]Tcin8KeVBrZ>%*DHo]8WZkSX9j`'.qG^;g'PU"hQlnn9d+%:G6hZH;]"%!PNlN&1/'8?dCO@JNG:l<6pU5#Ga7au@_jB^38j0,Q`R[?9;<pqIUZ?#%<aOtWXkM>`&3/u[LA_@bmEa&T?#>MWLVEFm1;;JdQdiH-jaEW"[MbC]XPP4u40*%5Yq"(E4F[/;6O!R`mrYu$*>H81(%!U(:p=Rs%oX5UUMr&XWJaZ2W]e,;`^3TnG%mSLbJog(.NC0;`H*B#3F9[SoN^99*0iYcN.g66(Y/FFA5dF5FlN&3+CRS)I`DG#FI-=pfVZ,d[%"1B=MB*5QZCI7[g7L@91Q!U#CUe@b2%huk\d[-kgOu?]qIofPRaN&"`V#J+CcbL<p1;mE)W%\/MRTd=lAIYk#<f\G]aEn$?M`Bo;%(^n-3,L2>LX/\`uA,^'_5D+apbW"TWFBOBq=D@kD73gBO2-8mr3HgH`!CW8<1*X;p"a=ro4We[sXjL\\(Wj1c%(kMD=]'e4G`$SJ%O0s^]:i/Ycj.g15(95an=[Qt2:0>5ba@*I"C]4[EmV5C-CGH'c>U,N#:S_YsXFa_g\likO#Sl6MUq'0dB)[-M%4o]YFj[pF]a7PA%9TMSds4>C6l0&8sl!09&##`#<ZmHdO]6J.8Du1-=3_WgZ.@8"B]7ttBBuAOD?JtdeRCKFq:7I8_^0Vl'T4+F,odPS:>T8=>?ga$f%SZNFMB0rf6&O+4+&=(qMrF$J'<g6e!kKY-(d/J.4ZhB1IHHo(8+/NK9FI3u0otU:EPc\W@<3k#GlYTC^lZQ$K+>LUGN!n$rE@Uem%IKifpoH;rOjjWREec>0Rgl,GJ%FD?+[W!G#o2:V++cj$B%Bp@gQ7S94Y/S0t8/f!I%1,l`l$s>]V'ur/?c=qQ+$(P<P<)Ie!O2s<%Fe07>,jU!V/((i#-.C"7J$-CD<Nb4>jaj4]RkWef[,dbJrXqGdWYp7sT37_QfD3Tn+QAW*kK":*)A<_8PRE0U@e)MT>HCCM">GKT%?0+#tPX>l3JgYa@#"u]o&;U#,PQq0kip2!\+<B([2e/[&FR_O*]l#i_I\e-)07W$oguc$.q"9u2rI!'tH98h0*QoWQ%%7.cMqE0W%N$G_.>OM<;i[$jTs5->Fe7I[hQTrR=3ftmOok?f:P2%qf]uUF&+U<Sf`QE+u)(c<9cB]Z`V-ik-$t'8Dhb[`p1eY%o.GPaB"#?66%p1^W%Cc_P>BlBrXLglsm"aSADY`FI2;,iPVHabE2`,GbZOVCMdL\d)tpa;(f%S&X4/S-(Y^>K6h<@!Q!'N;k?*(Z3m(AXA.I*7HX%nZdlhOWjilg5nXIXB[<kj4VPZ@s8,$\Xp.M9e340<MnGY4"aJiA'ITaIM1\qea^O%`J,FnZXaV=BTb4YN/q(MKkt:H?hVD]#"'1o%7Q<j542EPsHJ'Aj\:_V%q\-CHaFn5j(_32,*Cj#[$K$Kd21^G2_FK40G2S-Hr5I+Wp<Ag`75i%hn'_/hSS=34^+qinc5Yr1F^&C9%cH>Pq_)ig'GEK.WgYD^A+[;%)L6Io$Z&I"gN8YDB;Gg_=po^s*f$A,8pK7EZol;D%3(`fX\sQYoE%lnGDh0\.E\9(VMksX^b[FjQ%ad:`IP>@FF4NOYt&2M+uf>k+VA:emT;EOSC.XL%m[&b/P2Tq@A?Q,2j%TOB_:#slWQO9`WUqEo7Q6P3rV_ff=Sp*gYa<8oJN>)01%r_CcV[iW7bIj8gqEp//8%_7c11#0dG@$38e*8^67h#eO`r/n8<0A6=A1dS8hb+/pGP';0CqUk8t=W,H@R)4Sn'e/e`j1Fg.<1S14%M(OTqY"Z$biEVdW"=(FN=Q7Jf8=s8s`2DrL;\8tKC1b<3#cU(.*B@Gn1@TPCbY1;j7bO1Y"#3aGacp"^iN#JbPcfQP_%fBo>86pY%5c#6!5ciJBIZ+"tVnA&MQnZnO3.6_;84GThf[:u_qnPA7d;>5<?0g%$ah>Lo$*X.K1b93VTh%FV`d05B4/q/4<:`+"hE2=G#7,;_%fWs#0F6PGLS.1S&a2L5Z-^HFW:bNU5+m25+=9qLP46[Q^C\_;g0G_f[m"^1t@&T*Le;5+^[D*h1M3MCJl34)OW[9FsDL*O-&oq9s%=E&?*SofpF.LTf7*Fl?`97J?-2WE%T`r26V9C])o(m^GG"eWRo%jcik;05LR!.BZl#UP+U3;]C\@&TWK\!%Hk@%kb/?k2i*:c"CP%IWdU/7[P[g>/l0=0^D*L^u3s08]t4AhW>8!@s*'H3boUf,qU?jBNdlC>dOp$Y]Zq7Q2s&4a>sKjafONZ=H/T]W`E)=/`T<.^*KSk%cR%+>>fg)E=Es8'P-KlY@L4X(OK<'4=/KW'V4hY4kS`Tf[/SE.0^Zru&)"r:YK%-WZmp=W!?aP=Y-br/kZDfPoaJ)&WXgssZ.O6J%1MjmV?Il8lpd'9QRkn2%#,SF:osBgJP)^N7nr[FL*'$[XZ`<LN%1L%.,="\GCXT:+-7Dr"lcKKJ\!?PEE_m'Y1d?c'&fh$Sj2aNc%=Y1'M8'\\)d>i`'*][8FOIf95EX^%sMF&BqLl[l!na_%NIqhK6@<U^JWMRVUCi9$h*[UcZ6R$>CX0T,G$6H\=-*K&$Q%UQ*"O%(%%J@aI+l]!dF92b75K4iA\h5[*39k.)YO%fDtVp)s)^1594?<;4V+d]aDG"e$4q3?27=Q\5dB9IpTpF\ITK;IICWU=\dCs7"$35uut%(a2he>l#nG*:<HjP*P3SiUF@J<[mrY]<_@L8j8ar&qc]H>pSk^rpXQPMA4k)hJ*2sml?NTY%q1eU*V7mh-EaULPkM8S)(gNa[YHL%!oGfo'`3,aD-Z0_&aqISX\\:FbU5o&%`fCuA8e#28ee0da.UYO.IQ]d_D+U6-C+W*$o=)91\NLU_i[JW+KXe*-V7nBb9>2h`S%O/%:g>d&-(H\35eD(ef_.WPrN0ujn<ao5lamQd9<>Lr[nUT8TqH^uBk%jR,B@\l![rK):d.nu3aLg*2d5GF.Tb)/Wte[qmICc/A;=`e%\r`DC+f2P7.oIp<**Mc-JhtRtXp*:uE0oZUE[-h]nCZp-,Ag_gg,UH4Dsedm(U^HgbRDm[&oqb:c'?0nj.Sgf'O6U[;A3!`mW*BE%gXOc-2r\BRZBoU4X-tIJG\kk<;agrU5!*1;j[eRX1qQBu0-XJ]*iX.4]"X=(H;(=$6_'tEe8/i;%@h\dePqifD:,,5gtRt3>If4U%/TX9<S;ql64lX0&.;,C#QAX7+q/_n9<>\!)I$s$H',*<rXhg$U5\]\[&0]*Me-CO#qCJ9!gtD^"1L2Wq\Dm>,N$7aJOnnV]Y?HdQ%.5&,.V0h(]W<,5<&29#'Xa#fl0(4,iTWc21:b'C2fL-5lZ3,mr*kb4GCOOl*8=U&+%-E,TVetGUiiqL8d#mdbN=XuoZ9-ruo8o58%;!V@R*C+)'""Q`DWjQP`,KTrd_H18ECT*!jQ\C2trj$,:6<1SD`tPHNq!UVpNi&lp;(+<2eGgaWHIT>het)_4N)Wi14/-)Y;KG9c%Hr`=J,jAA7jYL:;5]Sd?hdYiJVPG&p9mTWZ<_Fc&kheP8p/'hL\;<@qeUgY8A<[!H>A-6`hW;S*#KF\BQFXM/9[<gG,X5bj8UudD%FO"Z\4S>WhEKsWKh`n:^XJ\rK3AakplB56Y4K,N]%cp\m)\[qqX&P"@6<9pR)13ksV<OO>U>CHD.EbZNDMXPfV7qs7"jS8?nWU23%0X2/:^tYgF@I#7m5q!%$P=9DO3cVO`l6XC7E,+J,iF2I4j>U-/.9Pk&MPPCGBY'<6/dYS0*8Ch1ibFf@RWGV-=C)5N.a7I@8Q+6L%eKnTsI=0SAm+VW[!AKB@r%U^33:l6ll]Sb@f`G90a"^`I%&a07VOijM>7#t:Di%$(#*][gG#h/jcZMgV/J4s,LqJpQA6&BS(aSQo%`VooX6!ZiuoH*ch[N4D&&f`1Bg#b"kKQ$2R<qI*X'o;eU+@n89Kq^XtJ?9c.C&5rV9:."q#`.Ju6Z/&,*#EAN0p)se`*/LU>2J$q%n50VI2O::KA6tb"LJ^VJ10=35T)bL>dPDG9PdfLsD`^Zg1EM99e=>DoFiP(SQuM^<h]00-Aik-n7S<o;1LAlrEm'<`E+b2e.B>_:%CRh3KhLk,4VNe>HRXR,\EGfPbeL!o+*GoT++a7*Elk]q5>L^TfoH3&uVXW2"988950E*?sEd,&o'-@rmDm^ofemY[he&E=B&d^-a%DrVD:ned<1X<)1*^LHc^g8/_1OB'pkS,sh@'t`)0eg7YOS&/o1Q7=H":Nk+iW0'+b$\=Sc+(%TM%M5KS69X$`V0'5IrdQO4@p^ji%E)$G!H`jK2>)[Am75ZK(j''8&=i4EO(VUbej/@?qD2qb)k!5A99o"NqD-LQ2:D'$nVG+Z">cA8Qn072td7p[E%_3^8CL^"]IJHU,%e2-"A]LsWND_29`rTQ8YI%FBu\0U80k)(NGVbR>4c&bZ3jH/O,-s'&;kN<oan7/[>>a772U,BnR18Z2taio3pV;H/BiM'0>@lWUo%Ut!LbA!_WQ<mrj[f<MV09re]&Q\%Y;RdLRg9\bhb-f[LjaS]75J,&U9h3(UPPJR*A9r5.2Tc7V)-VjriiUk^<PJQO8IEZVt-Nq.J%=\%hp:AA\OGYZ4>/H%J$m5n">kO\)_TZL.'jU!*B-KX=qWiRnXeh9g$7jhY7/h)gu=$Z[i"@sP/A4i]?FF1ma5""/&g(LF'BQm+#%X%qtuDC^omPn]q.1,Di^j)fAF7:dM`)E-SNQRDP1?R\d;-]WUc%+]E6q=8(KopK0Y%'dKWf9GbnhE(N[#VSuLLgWph)6AHho5tD`%i2g$uL:MMfQRCknf(4f4%ZoN%C=I<5M_3ncf.]S=caZ7Sf5J-DHfA/_StmInmE),ChO]g^1@,k;m0O)i=)q;\R@JPoaOMB!-`k\(%b^%/5AU6JG466g.@QT6B$?9e7c(A+FNnC1@!\[=h8XCgh/%n'mZDm-V=^"Y*>CUsEU,<"9Iq4@9\XpmiS=76Z<"!Y<N^?g9R_<8>%a([K1gCotl]dH$*_d'I=f6*lB\_Eo94h"&J(g6TT83'/GQna9uQ:91DJH_=@<-_S8pAh2-;!%L.f=+7!)FpB]=j88]&:G_$U!*A,%hVBKXU>"m!e0P9n'B,;R7=9?;aJp?bdoW"B/5np5)s-KqGOLuW&hcqQ3rg4(+?Fsi`HgNm,u,@Ec>KQ5VrW![^ACrC@W(6'V,lqX%SG>\m&&%QgnD7X=[q6mGVB-)u%'XHbQ),N/ZLO`X"7UrZ]IDunCog3$!['5Y)-Q.]A0`8+\fsT<^bi[aQVd/!UcaA_)I5m.COKGk%)APeMUL_q*+u>sI9Dg<42fHgfJD?d]%mcKJAO3jO0t[W<&(HUG2B=<=OE`5K#Jk>l@7X>f\iBUGe[.d+gLEb"(;"#.@Rm,GWY%m5%Z(jWbeSkbufTFE#IQT+gdTM>_`-t<(H9uTL1%o[0(ui\XMk.7QNd:hN0b,XBQ*bdDlF'WLI2(hNKY_OkZIe+U3J,lj/('`pXp$=j%2V6X^3\B]@eh^g06aPC@LkWi4WkH\U.7Nfngg7b#qk.39?8%+4D^Fam<8VH>SBi[3:^P98p,Yfd2)Y0I?8j.rp%ZPnFj0V]ca)3h%kh[Z*lugP@c506Gbc,3Y+tu^AI]hrZ&_h3,PBCp!lg#N$m7u+KW0N^P<RK#s#9lULb[(NPO].Y6FiTZYc<p:2"Tl.Q-#$,Eo3tTk%CL(O3)=*?G33l!jq1<$jgcZP@XG*S+NqO!cg,BHqf"p7;+htVA9W`Bp`k!>H=O1?2Z-Kp!CF*I2$Z%BkSJ^[cTd<p6.s("8&\A%\%1]'UXF_=%He]GL'P-IadZg(brnW$+NZ`O_9X-9*O3e1gS!7M)[GR/TkLo*5fR:3&#o6,D@RoZ`'Y*,rqdZ0KPF1(^(EF?(SN#O?k%9I=h<h,FWk[<eiWC9]pjWK&R;>q,Er2qm`8ao8rlrEdP?/Mgq`?-H1FS.LS=cZjj)c'OIhm`WqeY)b4XWMf32pInM1-(n%UR*E:7%CY2eb[Y$mg!Soi_h*IB8'E+b;5<lXNn^%76ci<k)s7tjXr9&J)hu<@gs4@;Is1cHaL2ApVKY/V?iQeOH'C-/;$KM<)_\k]hmK\7N%NAs!j!kk#X2Bm5Tb([mKn4HsGgHuOO5S2)7^J^kABqqG)d.`ZDD\G+@&+.Yb,?&(EIO$,`OrK-'_FMima?#rB=-tsdVNe_=ZB't4%5+>:iniIc+kpp9Q*hhlU-CTl':2!IQ%CqUfQaL@OI*etQ+/k.ME;b>D3[)c`7kSeDZQ3ju%JPI%g'Fk^TrMMTE!FM3:_NEW(bmTT%Wo@PFCuEHg1IMEp/BD2oPdAKX/*4C=cd[mIU5dY5H!)q3GhA#DdD5/^oSKS]n0Pp\"[p4BESl<a(e6jH^<Q6GF@onWfnJ)lSdGl/%/$4[YQSF4VU*5a'-)#RmmPF+b2>\;A_0b8,@AD>CN/7cdYZhFMc\oG0J/L<p)?==3PT6YH!9cTW:B%37pc0I1"V69)o6pWdYbTfd%+2h86o.=RhrV=D,$4Wpn>_[JA%(9fC9+dl*hqH`SX./TIK]V*_#`BQ*K_n,)LA]7t($Trc[gH-Vrc<CZCt,kG?'f*B!aEa."G4j/%$4qV8]Op)FTSQ;831O4QC.W^o&5H:nW[M<N?,EE22r*ZE2h4_7U8slDUtPp5B?P.*re<.1C^(Ul*se]J=0c9*mOasuV[O3[aH*+H%2[Qj/!e@a1S%g`_7m6::\S(I6%:1qu.hLYb?W(qr/U+l19h6#:rVKNb);-1=HQi<@3u#A8OApmU':C>&ZV1t7hB]<%/6ueren($B%J_u_#\=Zgns0!Vd@u;CXTG<T4%Y&Cog!DTTh]9OoNg)>BN!i4$OpVgcM)=r[M$0f:1n)=*i*RA$&8?q3'W[o8nQZW0NV(2=cTFsA%SLU5&$?1;k>QDROi$Sa@)*j]F`30(:W6DCL%K`mWL`U2)%#<[Q_8/YD<\8?>ehr^dQ>Q]eN.].>(ncerNm`FL6jgll1XH7FfKAV"%"dg<M9gC5-[#'ASdiG"cGE`LmH3bQo?+k`/#2'S'>`=:dGTC/Io.c<QFOlg7[PDEn[)nh#cL'%[2\<Qijr^b6;nfrJ&M0RS=&l6c%<i'\*OZ^%uj9DA$E,Xq)QpXH/o3Wh=mSdml<kYscfe?FtKsnu\)\a-/lm&a1j8*[7qt[,&%il?AHMm0]'!GN?YM]?"\#3j<r%1h.%?>(5Dd\;7?>P&AE'8N[c5@/esLKnc"[h$S-kq%QN8FdOU&l</0aK67N=V(4Vg:>#1=HUDm@+g/jn?`]mCQOmDolFV:5X^DBo'k6B%XD&(NWpgHu95-p,3_1$c7tLbl*@Z^ON:5]]fW$,s]tnJA8Dc`X(9[13OZ+b@+bpNCpT;T%f/L-r<.FA8r)B_)?,H#u=SP.I3/)ZG%*$S=dH-@L"\Lk@$\=lhYgUh=oL-i$TbMN+B[<_jj.:V+q3PV!]f:`?JBl_H!UhdhC8!W$sLb1ZFHXC5[h@P(]f[+u#'7`Zm]sN88%d1jD6EtOiZlS0O/C^^J#&Z@O@>`@N9XjRs4[988)fT6p"Qqpsi3?=;_c=ImHbV]Kt=]?H1?i<[7L+%:?[9U@5]rCd.?F7agC4+[F%pF<a@?`;>e7<3=()D[/bq^nV&lebnA?ttlJ!FSWBkn)fV0%L%IolKG_K@h)\N&e%Kb0fi=?sPBXGe^s2H&(J$Xfp5Sc8>-Z`mS'(%\HN,4=sq&3!<MCTR<,J89T"%X<BjT\Ab/";"Bt5P%iXVjU(tdK<.V`lA],utLd.n!IhGospkR3O%Hg`+$Rb?c[_42W`0LnY(U7Q!%KGUnaNQ_#=[eHX`T44i9_-b,]?8I(%XgXOLp>2:ZX3ao.e[u/>&#uPSnq#bTe7)S&+Hk7Fam9hCm>]T\;VM['[!`P?^:E2KTr!M9%&6]q0Cd3Rgc;0Rf&DF8Q#arZ(7XrQs'hp@iD3q3;(SPChlkcAWQ1%(R&]Vj(X\!3<4F@#N[(+3'10^R8j$RFj/B<OihC9q<k(h0T%"GfT;a=KID]0'ZuZCp/%ZUb(+2I_j&/K/Sofd:XM5%JiY.fp6LKh;"Qfk$'lM/;k96=fc;q'!&FGh^_tofp0Y&*s6+/`G#^,m_iM%[:]gZ[Nm$qkF:q5J,HR?h!7bigSTI-eBYg?Yo(.8nge3)kYL)aS[@HpHte?+ofoEa]dF:M)@4X*.g:P93MQb2M)t9k+;f8aU>!Ia%(=HUJ@^s5nPJ`!0NK@aC06.hY0Vb8]J=kpmPR>nFTeQji%Re8:_eX$Q=H.h:o%8J/m];0$GP@&hZ;UO6ad]i:l9;Dc@5tAu1T2]?%2YaUqk<KXJ5EJ$tI"[=:"DH=6q3bX]*6@)?P>R?b1'83+hJV_68/XJ"S#1r<DL#PTW9fJ!`KM1LOPkAGiSoZ4Km(c%.k:IE2rYJ.%iWJ+(R&YgBjpTUjO@%'7B@&d;YAhG=84"k"kHcECL3^XrgbJem'a)c3Ye(kMV:(4,DfItUg&<Q[=4BY`KW?,r!7"G=;jh-,WfJ=?%,JJXJ+"a!&7iHuY!!HBKUp#eeSAi0\k9D<B-;qPOQRJ%.,gE,pVd/n!["OcD8kIk/$']/[#u*?:nS"b_I00l3CQ-LLSOZiQkpuUM%Ll<fS@0S-AC["6YTbM0Y]Mt)+96X?+F:h%,pGZ!QZ#7oA(ibEti,u;/qDYK?8sqpEFKb!ePAXesNp71tBDr=4far8M=!HU^fR+Q<%7%,DL&lMQjAEiOsdh`.],u!41:?p,:rPq,g'-AcuhpKMg_=4]Un_&VVlh&RNg"!&Fpka)eH$>UNMC5.V4[P$<&FN(-Sn$%KCFL*3%r?Z>";9j/-gSa+Dg+:i+rLq>>q2<n=S9eRZ%e]0L?gZKt^ekM*h_unp9^epK49B%Ze)3D>:4GbT@oa!Bpsm*TQLNbHCsa8=On,)"%BYl*J9Uh[onrHjBdYo5oRfr=81[6&*)1U5m:_f2\d2bPh1IW3aS#CMkZ!8#b%VRrL,O6k$dO5HG/(&W3T(A8jZ?9D'?fQ/'QnVT,%r_aL*X3LQ;O7@.PZB6hB2SMf'?^gdR)4.k-<B^qC?W>'"lm#s"3kZL-/X(F0nOi'M4/Z-VXlp#F0BG8p,>k04K]R[UB&Pn]bn$&Y%U"I[MA(-$L0T[2gC\U(&kfgFTl3p[,dru6$oTR>@K"`kM''7kDV[;6UCf(N/KqC'Tm\2#^&u3(k3.iR4?A!(KJn&W%:NJho<qBD&%BKRNKeAYC4oQON9[:Q'DmEg&(glXEUa.*Ii;"2SQ9?]5USDcrF:W^eeffku+i;5?[9m<jP5UPl#gGj`Y@A2E`aZ-:_Et]a,qCZrj%!7Hr<detdUUO-Hl(Ah^*A@lW=D*)^*:uA-3j)/&F?S-8?VO!Mdd(-o<!L6P<<D^3NcBLDRL?Frq^fth;=auj-7TH\J.$&(fS\4.'%#IG<$#n?/9+dUQ\K`S32!_&(`^?CiJ([.B8-HI*9[:LWAq(`C)L)u^6H#LgD_RiIHj#"<"):^?m5-cH6kQN[Sl)T/$m3ahlOCpO[%[Y?#f9.!f\(%<VS<ZOafl^5kq[1pJmr?Z>";9j0VgZRX/g0@b?%jA#TV`e&a*\W24*\.Ka,@P*.lO.7il`gdo2tODh;B:%A=ts7S%d?7(UpQss]WH'G/b$>Wi<^U3@[ENC^MNRe8,okM'4Su2Mr*c<,\k],,s.:(.+u]F6_g(6*APO.,_/H)/k2^[IZ<B,iI^i]O*t%AX%C=O,iq5lhjhe%9bYV3%W?Ynl6A>"H3hXJa(<Suq1#Z\mLUfQ<dAY_drX"n:%'n.[&>c:I>cHUQ(l>p4&ru6hp:`bMDVpRbl_C^o(%lL+"jH^V(?,h"_]mb.^q$f:c+O1Dk1=PZ@<BY(g+['S7*"a:aoV8M+poR*trRCTq3R$bU$F(>=)/;"`+0%N?YkX51R-#1q!J[Z$)%WQ9\tD\o)"F@W7<$cjr)5(^6o!U_0=be.4tW1F[Z0(t#jPN;*D2n5l=oQC7dV^N#aQ=6rZEO9-PMOQ#B<V8bSZO=Qkc(1A1Qt8FY%e_.oeYNji9ZO9<;PN(q$Qohp1nW(SZ?#74<VFP88O>GC/eXZ-Gb7X>jE@@>(F(TF/Nu>:`n`#gF0l'h(C>sKGK+ic;CuOsEN12.f%QPV!"QXfISH6?o_*M^e.=u)FGoG9\E-d%rU6+;-G@W^T#9$9DH`M@PKH'*/L=5Dn?3hIt9R(C2mVQ'f=H6p[VVq5Qq=/Qie@,rdc%oWtgin5a+.TLd:!\iko`ch1*`#!uk(Sb*DV-'lHsFH\uL]F2sU*,irA+n%$t9MUf;<DI]CLlF!E&X'n@a^7d6Lj2S*-*>Mm-I]%0%;8Z(&-esh@4NErug/.:\H:uI=P+:K#[84of[(1W$IgGu]<S5nE8J`3lK[m@_Fa#9m09h>K,uQ6m&("<K<_icg@s6)GS7p"Y+mUap%92:]:<)0pg>qr+JSW.JBl<eBW&sukVTlYR1R-pPg`do<A8u<6haCE1=k"P91S5D@iDJ,kE'g+Fto=R1u0C*:&2KV+Mh@fNn*USd0%r)Ph`DmOI!fU$`f0/iEK17E%[Tqa@3XZ]rdJVBBmf4Amh+oULu6ETN.@f?uOh>]-RZ^F8P7$'$X>e;@%27a?"JjmRi@p.AWD@Oa:%.S_F=`ja'#@I^utSN=\`E4=`+fJ`*iTh6jbb@k1fX'*4p.q3/Uh;H`@?<usPfcU7/&"9K4=__>O%1@S?]i#XtMf5>'=>-sKoYKNu%/Dk'RngR$!HLfNaW=h1;*tAQ@eCbDjPhB$4Pk&$1>e\_cIZXMLW%?"I+!tMI7>NDNUhst:FiqK!o>%;?lV-`@p9)nG6_2(e]Mkp0%0#\61bH6tJ`h[Z]EbL@,)FMo#(rJf+W<'j]>nZjjo<on3f*XH;)9Jj`IQ$XY0&s&L.I;*FO4V@X*2+Pk;3=e,kEns;PT$l5%t/1-%_l7DG/RM"t<d,3Giq0)/,uJ'pZjfoi^s]=OTNGQ&?+J4SUDnN-9GNm%\Z/YIRk<45\O='p],WE!<s<%%_.SVU'&K]gQ7h-65t;5?%.S[omKSalC:S*r0G[BLjU-om%UJ"OG?K<+8]s<aK3KVn_"1+3J>B4Sr]1XW+e)ZC?PO6MJ%4u9B85&1BVAj[9oG5Ic6I*]oQbW=O%OuSdNC*O"]N'qn50tb;\$/Uh$b52Qa3`3n:Vq]i%F4skfEBH&l7#?!.o90aM)J@c``>1i_IRn,:NChMW5C#P\ggJe!*(V!S@s69j%9;W/CIn=9lWa)lLb$Fo6.1I!qiUpK/!otSZ4$@[+Um,gG:;*nFhTB/<j<HA`_<DFT/Qg&P#LS_)ann`d1npN%:3TCTbM9dUH]Q1S%B2K]?3)>>[o#aR&D@q"Mb/9Z-a91naRQ+JM15W"UC#k;bW*2h;Wn(Gk<MM!2e];n_oW]]F74pp=Z8I2TQSEi)8Y606oEPI_do82X%0'II(NQs9AJ[?(qZG$r%N?DlCdHhP;12/A>nV<3*,f7fpD$a_[Xd/Q_ABO\PChjDKnArTPZ=$eW5?=a.C!;V5MYEEA.]gB94%<4@%Qr+nkkVJYq'rCs%*BI4f6$RZiBh2FZUH^ppSV][ebE7d@5go-AF!b!Vc6qp0F44e0Sf?K?0<_^KC^F]K%@Xdq.b4H[Lfh3@;!]E8%b[Oma1&7q[5MrigKF-]]d;Zk/e9:kW1$Z'mMn\NI*^e<VVWC%HgP"'-)_)@(dRK4AB%[T+M(EMe8;/:l_/psM2l:^mp!5@NTE")<%Er,eX&dcdl?i+<2b6r/0A\2qc[%AoN24,+nkGY*$,r#_0<chAFfHgQE_LDM4TJUc8;h'k%TZ=Jd"8V1cLcJ'lKdrLn,C15!7kQ?S%+ZX:)X;<"g5213:E'9udI`S8lcgu5oCdOF62VV77:emYUp^!#C>J=Qga'%]?"$'#AXc_^?ojcrS7]Cf>9'La?,jDOP!e[X1emB<L%o&)Id[LZ7sJZpJj6ujAP4j6Y!_<C;Q!OS7!;Q1dI/PlgAjs4[[3eH6p;Ie_V($g7CQ=)VRP5B%9_O]&KN%,rcmMV6:7)p[iF,\[L%C<>7$dGM</NJT.G-6o6<.+e25deFLg^*jfq/*E/+jSV^M3S0h%1g=DoI[WL%;NsX2jaR&-`pOjq8?a]2@icVLDm:Q0rnI/abPD)^%`b](dd\].cPltWPWoKqT4^?["&)384ooc/WO:22DjXaX\^^t9P`J0o<.^o?(iF<=1]P'/(^+mV"<Q.5:E)1M#X=#,C-LJ[d&r<`^%#:@0dBLuhhof%RT3gW/J@[+GpOA\7RA'iZn'G.Dq&,[[8du_G2M46kAO6(T:'H_j$Z_DFTT@\i>ErBa!]7I7LNS^L^I."7E9\;Qq%-qMGRf)hE+T"DAZ5\Hc=DP_TI\-X<qMiE-p9IF86nKF[@c;@0f3j_X$gCX:!f^/B7;c?jddUl#pZWHWX5Lo7jee6sZQGfeYqA2Sd%A:oC3-Xhi:9=9nkR&^;Q\*l#(3jTe?8].#US@G]5!NTpY(,`'X/b<'c.q%"Tip1.-VW2FuO[jg`=.J@@V2mYoAgMoi'Je.(,^"+_%>e';Q>tN**IE<T3T>,kY='0B]Z;O+Z[UiskLLZ0pKr*&gDm==>_^PKW1PVPW1,U4K@[&,1df&%2YKh*:(/C4XKi1X3DVInqh0LWe%`TRud%I\jqc\*eA+Pnu@oNT:f<1>^2U5I3\GEQgU+'.?(Pe("6%pIjYZVlpI>Eb#MKLA->pU7_#qE)n;H2?nUb\$V0c&BR!NF8^,%X$7AYfgS7A'gnD2_jaW$Gk"?A(=kMZ-H8G>dT7_On>^d7PR%C+]AAPJ7\K:+d$5(T-ebTTR;0SW=aT>8qS/nqeEaCO5MZIFdj#F.%LqY/)2CP6:ln=kfNDXO!R8RV_Ja*,-f9A1`8n6'5`2A>V;f`b5=(DF7-:Zu7],!jpV2p1QFLM6!/0iME=/sGXjr>H=r!Y&LN@kX9%Es%h=XK@N*<c,r+pG+]DRE+Y&ekBX_d$+kP4=XFg)*or]Xnk-"mK(K!,UF!p(U'ZuJ?;In9:e:ZGn8^q9@k&P,OJa7+@gWpg>7]u%_o5]CJI&%diEboQg"*_,G7:3b0eD_LA)/re!3bfaq9^+^".Co+VE'@D:#A7SGias]CRgP-`'l&ea>$.Ac_agRIhCl]MQ)jlRFbXc%Z@_2CZM]u4Zrlj_T`[[I69#.kh_CGFW=b(?k7EMG7](onA8H<W/Q410]?4*-4@."+A=&GCMks_m%k=d2@6ImpW0FapJ=sdUpH5!>%>k^HOq"SY9<[WkAE-U\(Qi!W-2%n+Kq%(c0mL`Z$?%FP]^9FJ=>u-.*8b+s`<7m\)biL/pHNs(I`G3&?D%W+QTqsts(=?Zt+eb]K%ep"rrThY>aCYNRF?k4s(W7=XC>,K8_8aale/?>)K`M5W+@(SfT9C@!8c<aUe$SK"V"2V4&N*T<]kTg%*Tq@r]@n;l97U>F+TD4GC%6dpK&BBEuF+&XeHnXR6u:YjN8)eF,TZ#WDOI_A-0V:=EtK?&3)YXIKu7.@[Qb+/C<9[uVBNIO')-MI&U37<HK9M4J'^bW&cieFAD%oZ'm`pG&+?c#q6'36H?,79i52Y'/3(hB,=^=2Rb-B88@?a:IE2Wr\L"@Oc,-$'1&dm8)ST"NI>XWOtb=7$e]$GTJW1%$&oP=,cSE%Rh8lPESefqrsI;>khO8+\>0Z:)AVjNZ(HUgh/0;QUhdMa_eurpG^YjZ@7jq+9iXj"bT*m.ps]P1XX4S[iUpc^^O?<@I+)r$f+"qo%qVtC;h%2;ImHCKA?>tk`V(S_XjbM4WIhFXb7I92%l'K;tn#[+[c3"C%9[kZK-KnuH*R@Me>h@HOW+q(LPIM*.$Lnj;kY`@"n)_.q%_g-4$krn<sUOU3V2s$`cKIhCo5^oW`p8f\m'B'#NNHUEfDiOnCqUEbXg^0?VF'$I!$mA_)D9==j:&Pt+eWbKJ:6-h[/E[1pQ>1We%A4P`*/QfZ9H9DgBeRl=d9$<nT<+L<)&^tE4>cD1K2f_Jh#@^:JSZHNZe^:>`R"h*s9/([gJaa0-Z="XWQ>g,YAPgj]'\^]/?:S@$%C]=Q(/DH"]i^DZ0hnP/ETjEDb`l$\j"'`%&69r<(U?,#l5h`<BQO*u`ZIY9kKKG`gPf&P`<3b?sPS#"@@lI=WM`5aR(gH:maEn->%S']*OSW5Il_SGoH^^M<U:$21/'26lS219r#q"O(XS"/PuTIMj^4loYk\md&l_W'&"8ipBN-+7n/(?;."mUE?)N,YQkn]q<$UCJkU%4bia_#EZ7G$q,OlYKFjdLiLh[8OTIBG*VUIqgQVR7i+5PKRBF\dD"%;6)6@-6'qiH_!"l$,.?IYXfs[.p;(Sgq451mbQ?5>LOk7q%p-@mMj?%kC`N?2n:Vk!18AA\(_m$_&'I<e!=bHoh0cg[QkMUn"CWI)I^@ZV:D7kM1k=@#]UgfKkfU9C(;-"!5BV-c0QN4<Q@M\T@%kH0pF8fmT?7QW>X4N.pddG,"*jG,A#>+T*#iG#-7=q:[RfciYE>?\0ko\8lX`+Y"o"B6gEN[cYrn8,)n#=N]H\Wd/g.e=G<b0Ti2%=\sc2T>!)2;lWPV`\up=cc9+7Cm?S,o"IgIQmt9%SN1rD<#"g'*<9I>EX9&jj/5'e577so`]4XF[H4hk7S6h_]<52J6o:T[Ynbe<%:(!$(7U+-Y<<'bA0-/24a/Uc8RG;Rjg99#O=!qIHH36rmXu<(Hp`;4<C.;^hlDhFSE`[NH6@,Lk,4kSEDm_7nN'5?*(%m_g%E.^9%R(*c_g6Oj<9:]V`fNEOrIVD?Vr(c*Y^@YED,1Z+PKIoh=+uJ@BIj`jqLA_h1f]U$1HNSl@s,T4R\MjctK4tgkl3IQg(esWLB#KZ)%-WXfshNB;)%qI<kR6%OY9J;0&9SoV7!R)O09tn)4kh1:&+X)u8Wd1n6"qt1aGMS-NBN%@:5LSS'W8ZD$%1W''M?oiOQOGq@j'Qj6%8IW040_FG/+[PbN'A.V"_3Y.#_c%aG[52g+9asW&P,;9bB^S5jEc1,r+e-kW:F$KS@TX"4OOig)F*7@c^PYSO`Zq?KC_mbG:e%f7%jTB:>XDb)7XgV]FR%]G':@37j;bbG5[kZdoofSkOebZ7`%kG\%6f0j^)\mM(\nuRLCuf4A:Ddj2O9_=JAfWW]b0KB8k:e!_?#_fO%aI>9ITml(c#bG+da7Q-9gW0a#kd&q`ROtZ->J.4i_gTUHc#QLW3t![3/uRIcG;$7Nh+a.M\N:B$X(GSA\&?=d[6M(JJ6`p>68L-m%K_/]%dNj*,e$cuMREZ)QB:?&s;Y,hSG3H/#b!m^@f:H3mg+XT1RpmhGc?r;T>cg3KP]l.M@B-&K9<Q9]InA6NWkor6b/7tunR['b%plOkPXkT-mQ0he2)DcaA,hkEW^2PibNld759aOA.FhuLkmL?^dVL9aP:<<fPcR99Un9'17l`[_F=OX0lWJI*O2>BhI_H36&CWaR?%j^P2hq.2=qg<BS]E6Pd;cMH@gK]hZ2R_OY1WFqo,lU=E9!g/6BHI5C'$Dim2:BBLH%#R<QDd_!Fjl3s^RDX^5VZ]ep"PkR9O8hTu%qGqS#$@8u\aTOn812[cQ9d7!nckO$?#:Znb#4`KEQ\D2,9;pRu[%roYLRO<fO'kpEIGEZCG/2/\LlFW&&Iq6*_8N"e=<06qFM(A;%QT0l;n6'.RnR8n7cDb5;7&`Mfa=D*A6b;;SN-'3;KLoX#5GF?Hfp^jEJUNZB4D9FfrR-tKChH;0e'qNeJmHfmP11e!3fslD,taHA%i"Z"'!@r6>=+!4d>3bt4<UT=qA=%;9Yb\4045kb/EcoH*&.KMHU:]>p&7lgl_JN=;c!?@UoGr_QK/^oWiu%J32Qf8'oCn4pINLYs%Qc]#;1V^%1$(!"2Q!Qlo^INj<S9X\[Z&ahY\HMff:Ch@RhdVpW/,m19'Ng.AN/>+gF`?a-'aGpRX9'SV>iH:i_4NT2"b>R/&'3\B%'p($7YV<fmpsml1FT5rf&hbZM>=BBe<)`(KkYj]*5,k=X=i%'B6k\T#n*&4"Z0o!*KQ0?2:=4*lN6+J#]T7\Ve+j8qj5ilH;[N[.%;&=V;&OZ9t#C<?n9LRMVfjjiYX6lW^.4UG<^>Vc]*?W8q_&4,#MOJqt9)1cel#9,d\9.frflTJ)!q_&k\aWN5$h_9CjA(l?$`-LD%Gbfmj#\!2HU*Q8*-7<.Q^fWQfZq4gWP5h\8N*"H4rL55rq.Ko>"99m/$js0oQ*m[?oY;Ja?i4[1&Se7!Ye_E;c_P&@*\'l9+h(iA%qSUk=Ac2p47j#MPZ4HB-7in-D3glm/5J";'HE<YGVK)&=V6q-bkL%;W],ie+20XTUOaP47PDEF?7ML&ZOA<"=28]`%[&S^d5ZVFs%jsohc20b^<^B(m[QCLrTn$%*M!slu`ZON#%=V)M>#Y7%Pl0f==]1O!.L)ORN8*\AHrl75h'YFMaPn,+p`P[ItKW*k?VHL29h'rH/%,ePGP(34ma7qen@;,f>b)CXDB`8DVV(0EZD-1<DTdRae+)qcqrYB/lQ9DkX-j)Dbh8]_:Vcj(Zf!5]B15h=et_pc`)PT8I>i#jZK%3u6AdAh$]X5T[@"#Wq?-88/8PM"%8)$k0hF<2l)"X^q0E5rK`g<4@6M'p5nsF6[*I^"SF2MPg9Jrcn15(6;:G]-kTk3otpg-#8n>%^fth;H%1[=:6i0@.JIQP1jRCmYXSjR:6$m2\4s)ND+o*&a81?1\^+2`Qc9Yk`%J`O$&LMb&)T+*=DK<1f"0$;CIElp.bu8P2Rk<B%>q\_.X"NRKC'^.0H;]$4c!2hq<5\*EVV?YY35^=OekiTm]$&;SU4VJrGYH<HgkEiG?]rJ?]d&TGdID>Ib3PtkD0oT#SZ*]F.<Z0K%LuiAB*k5^ooX1BS%dP^iOO4c*AorebqQqT;*B(&!'nR:FbUlQ"H?o.<.$W+8<Kh0(U>(2T3/)qdekC&)3m4T]P(MX^G"g'Ee@c.S%h.:.8T-UYF?u"Q1Ba`&>CWkm1,h=Fs13C@E(12s4atr:e>THDR%np'=2rqj7h'EYRU0Q'8E#1tc?5?]1p?Q]2,Oi-SM7*9=/?rDc%?;D3GeX,P6lTgnC_a7h7To`CB/k`:o'EW&\a/lr!?1n`k?]r2Go`iIj39lNaolJX_SlaUmqi+^98,`Ck?4G!YGKa.&[1pJdrFHQr%W^>'kEYl`_edu!:;_kK>.mE&3/R\qNj]M!J2LA8S_41EUPR!@PX^TKYDok$$r?ZnR<R,`bgh5cur4Vb6YX[,'&&[8.s55!oF#/=?%&&dqSYl?Hr?Z"r7rW2*=/sc@Nj*?Vj9b^sf)>hKW(O+dBJ%MRYL)^)u-`/eprg*5n`fM"("d9R<Dm@f1dmC(L_>"H:a)`6=I_H\h%L.Tf9B/Pf+,\R%A=I+o(2%6@q6k/b$V_*]MY^m*Jr)Im=1,Sc4S!XP'BerR7"clOc;XGptKGA#amr,2%K#cAEmS='1r@(a5jBr,P%*H1D2q(9U!LmXtNeIZ's<HOt3Y0'T/Y=muE+KB5F9+^M^)P1Ha"Dc*SjLljW3_dn@UH@W"FnU4?:4M5e%ZTWhC8Q3W?mkqi)!S]H%8"E+tL7t&^1XnQ3*\St8a(H=Xs,Wid\b@"Q9rBn,A58tm$=)04k!S@CH&ZIM'"KFPDiQ%[O!<SG:k#4D,a:2j_M`tn55R,n5,c=e%ZI5_:4-E(rQug&IEZTLUM3C]"o@k]9O%K7["C6>ERA:K#='>Y7RB^8"AV-"0?A>AsFCV'<pl]DmA*&,="qj95bZ8tqA5X!;Kr>,S%-;[%;9:V%oa^qfq2BeDWeX;NBUFK'*bG2Th+dc;=,m;\Za1e=9$`:DoP3Moka`OPQj[OMhbNmA`YD)pD*>T8<Ju+!@E%_nU"o]'f%LZS2N1u^/hh9dE4Yqd=kj)rRI\[Q+4&H.<q"B?dK6*s3iN%3m%N[j"FIq;'1U8=S=>IhMCfD7d5j^kUDD?#):<$F7"BZ#'/4U!3c%*p:#]4<B^]`]Z&C<cE0&S9dU=X'f]-@B>]i2;b]YhJ21qjn"!4jjCDR3g.MLQj]h$jML0[-/isG>W@`6OA?g&Q;=Pn'45maR1_)o%N??7?Td5um_+GH:/*;J)8(./PF"V]1c7/38n^FIXXrHIW1U$D:>nluKohL<[a9=:DUcF`6f/F<5U-e3qBmJrc/IW?:ducIla*a;%%9.gM,?P4/"b%8^eG.I3!-0^r>'E:[smS,9-N=X.e:!HNGU1VmT<l,kK_fO%ii%6sa]YDB[VokFqP`NjQ^@=bd;9M<r]2_f%Q%2C+%g$rmd^igd!T@oZbB7]U%^@JkL&g")0O;N+J[aLosPD89SA1"61a`>O0qL!Zn7eL?U,bmjSlpF7'L/2=th3rs:1:jld8'%VRBiZ6q%)>0;#7_QP^UJ@)tW)4Tlo/_BS.q*p)2j75?(_ShOFWt;.*3CNK<u%mLb%'fZ/QEDKducIna*b"99.gb3?]l>*b%*#Y2Yi8.Kp9Ho%D^0aRcVHDk:)YU.adKa+>-p;GK&>lD=ZI!</Q]uO$.4nj.f'Nr#$!efBnZ!GR)o%$LP]j'<?I5'_u>;giQodHh>\&$&')MQanTU,%J+l0$A.l-#8GF)3bPm9rFag[#@H-fgH$DBS/[&8err\iUD5TLD%<&N$YPB)cK3``GpZ"7D@R&b/NKq0o.to3VC=OL7alr]gJUM'F%a^tL-gab_sIg7\cDehUmAE:ual)$9q)%$`S`?Q4O+B0JWJFVk4[pWd(.1t@B8>/.@NVWi%,lnEOK9YUOn^S>g+)+(:B(N+43TU]c%%BdL?5*7L<M77!$[amj`jI$m:J?<>\(;jnS@ZO:8adPrdSi5ons)/SJ.$9Ze2mpRda_#h,=lid^)(kD@%2"ms!,DL*?:P$JVgY%I%Ht)B!>2*==&\&g<\4n5,(DL,&kY47qDA#$GGPR,eFtJ]rONYY#83HQ:.&BYpG+]@tASS)CkLC[XSk6^MNQ[DKEP+Uif@oA.0LU.c%n8:Pgb*%CfOR(E[M(\at9AUk80>Kue]DA^U+TS<*Kmb(X7MTG/hjsZOHl9U^qXa?=7$XX$,g*%''Vt7JU2t'BhnNWT'9P0UOlTKK%D4[)s7<YH@*`VO7,go0:eh"H%DZi6-BS`KB26G+D*<q0iiC94/*0,fR)*-Bt0f9S)>Sn."6+d7;LaL5S7gEX9>r+K%0Sd!$gn/In%g!MODKT-l&-6t=O&1)N:KIE6]_4,Gb6gDnO'2F_&0V%Jp@W6l9$_eqW;tLmM%'#iZ::X0Dlcad#FNc=C_!LGB/=[)kRY;+N[-_Q[%*cY.QXcj@B%.('DSrBJ--g^,8,aS`=ELlH*!EUqfU3!?=XmG-=^eW8JYke=cmBA7f\)9uJ"![JLDMk)V*#VLir')c5+u\k&_fuhX%"UBZ"kAuKjoXT4lf^G=O=\?q]&1bWQ$aFHj$'>DA>SSE\k0=5uFX2t'0c*f-aT^5l97lG.\Y)"F/uq1M,cg&gLp,%9&1s:`,55`Q%MP/,I)*teXBmbq$(VD'WPkUO>ku9[pST:?jfD5=1oZ4=QDM2+6l=l&#AF>8dd*-29bL%:KZ"+kH"&G::I;d5]_u!(NA42iQ3S>m;%4uAU*o,lU$k$da+bRK]H0kWod@h+J@3$CI:a*dC5Ou(2V95J^ESCo^\e*#aOCVOq@,^FMkK!,N*2>G=6LI><Qm^DUbkcPA%WI`"_%"1(uL/X^-;Ij%$BPt>+TDNYjs9Cch8KTK8V22&W26R'^S\Lg-Sc*\/Sl:@@Na';ra-'q^%0?L7njmq]$qol^uhe*0bP#liU`;20c%6`_GP:#qRO%ZFMNk2_=UlUVq>_K>a'9.hIG?]l\49#W@f(O:tURDbOM_*0PkK=>5@M:@MH/t<c&DE,HMnHJ6G%6drN#"=$X`ZWEk%m8VhfI%%IPcB,H%+ISc;$N132aIaCH]-G7D*=e%3P45kKI\3EUl"aj'Ms.u';"]NI_`jY/6b^M/:^a_LhdHAa3$T\BI5.Mq(3R29%0JR?7[QNbePO1_J]>WsoeTEG<[A?%fga&^<)=+sJ%jLQsoo8=3D?5F3@Z+>Y$EaJn["riMD7K*:2^i[(M-F26-^"6a[V-uBRN@^A%KfJlCs50p)4S:W;h&D)*]U@2m,P,Y:U82gG<n(FOZd,9N2g/;GS3u>#2V<2,,MJ4Z_N;U,V"BYZ&.YA[?G86@"q@U<!o.B1)kO=T%ZbJd#hB+.4!]d0<%qD8f`Y.GE'e,S#'000Xo#<`8:tF'%6GO0(($0qG!,!i/]<T0.NQj3O\&Ua1#T/)fQREt-Oqls5P[MS*NF-fc%g]7#R+'b^;[c@-[%Y6-sNs9$/LKmJCWHILp"S90Y3B@;1CC;n"3dkF"[r1"2rRn=.DLNlB!\Ph<irA!=`0-[(kcZVi1q5:&R>:f\%D(2$k's_sj1\ORG6Dl/`KUHT5RljTYO98I8[82A);L3GX_<F@2C6XV,#&oOh&(]IM$o`0ual?7VVbZF'Z;_d"=Bh:Iip'X7%[`>0%,t[0AMP6%oH"/G^#c$OV4/(LOBVan4l6mRr6+Y[Tj8g9k!SI\m+.;RI)X<biQ+QA^?E=qU7):"u,89K9)P1Ha"D]G'Ac3om)H"e"%UH9gaA`b3#./q!he\<rLkL@<2:L_$2I9De)f?t:nLusOn;Wf&U0e^ZKTu2jOjI%MCC"*I$:/fIQ>?X\bSj\'d"ZIt;9;hpTQR-C/%nhm9%;4^_gZ5.gcoqTXIYLLkIfWO#!VQhG9XLNH#SIcm6A'P0l.JRHPASrtp_=AJ-lI5<k]?cU1;Ags@.i\h:P5*0bm4RPRgZ!df%Ji.%IJKaE;Vl6dcA4A:^_H1Ip1%rD!eU'qA);\Y^+/d5Wbis:Bo[.5q4mFj3Gs2!0@*#BK50i^K06ng_h&;Lpip'('>/slQ[@r[_%lRb]/OlXr*<6(NAcJ0XoWk?D'*FEI?KlQ_l,8Q>&k4)P]7uM`51-Bk!&kgc;2!TbYZF?,d1pjkG5=Ui0RFCPTR-2u;'h.D,X-p[O%=pd;o.d@:6rF$/[]S/2%\.6)+i_.iWj+0)KD"?Eq1S#lU\C9iOnnIMU]BZ2F<gHf$GGlmm%:!#'!nG6\Z$>MrjRm+PD-:,13`n^R%*D'abbf*R$$>HonZEtN=+g"4V8?7_%8Lr517.6_0%4&>pU8=`pP]D7%KrHP\;MCV/PNatJ%F-*ZJ2J!FZHa(1N?[Po&KMPU3c3P;%kC7J[*Ek9BQ:9Cd?EnU`<r:#IX@mQ3=G?_)XaA.teWD]RK^#5_L-dMo[k'X2;i$gg*FbD5e:i%`Pj2=K+5_sAVKtRMIoC-9"]_ef%>M`pHikoi]R:%TMUTD5S9qs1_5%7i@?=%:5Z_st1@U0VuD@`?6l9JND5I#[K]pfXM$u$cqbOpSAm9(E9XF\=J"1)S-/\,D:G=d7B%,Sr56g',mEQGrNqf.=j?$\!c9_EPN];d-ZE&0K?3eVPC-l:@@Ia'<#SV%?bp0+"`.jRR%ba,I[VgS:^)rPdmkaFb\A/<E(Y:0ou#%Wh&rj?q3PhdP<r]3^tZ#8(+=LVT[h"$IQ*WZ2bbB+_F?V94FJkPLk9&SGH=!lW;LGI(8g%VXC[AbRP;\i*NI!UC,rtnKmLg0u7(7%7X9K?SPGG+h'r)Tq)!G:4a![Dl[IO1B%VV&ec!%H^O,;+pYfi`1)XG9k3jA'IH8B3m'/A5j,*:\\*T[_%E@:;Nud'iSVSn;O57A-%Xmto5*QYEb">PtnJV0nh>O0@Df/P@-ljbp9NKGrV*F:"]I3t$2NO6S/'(ac76-Zg^djH1u4K0be=k"OK-P5`p-3<Mk;U+rJ81uh^%Q4C9Zern4:cYdKk#'8JV8]oI^EnMHq:p&"ZD+TlV[*)g5f8bnrng`J.FpH?#o@`R$g)Z/oEN^BhakZ/NV2Gh*f9VtNG^+1eLX-G`%9/<0ZI<GisQm5jZ#HrZ=nSm1;fXfS9kJLD"m)49pL1I2fHrYbE/Cb;L3tQ[Oi/bG9^lh;gcQ$sBSE0&_Ub#e2Nqn'lh[W;RmZIEj%8,n_MG$&(P/EM>m)nEnn@%Ou/A1"VF%a2EWP!!r5E*<8_8s)WdZf;OVr(]<Nb]/F$HW_!IP?bF0*horB0b'>qf$]XCnXUNjn\c7N%VA5:+aRpSVkOu,09"YW;b>?QAhAJMK"9bQ9k`lcA+DF8M3:\U3TW(/>'!soIOe4@gb7S`SaMVc_Ps0U#RNQc)D8`1%2c>ugG4kA]%mMkO%FWV[`1q0N=>a07"<[u&Ni2%UQnF"EFZ;#^N@T1,pM+m2IiiVF=jdlf"oZ+7f/>gZ'ofBP0o2g0)I1)]35UkN@4h,a6U[3JN%3(Pl-AQT#Fa8<.6-<>Q#]:sQHpO<7^5)k>k[??\tD"6rM&\hVDqX!l-lB.:9,$8X@(_%*fL=`0GOfUg9-m3;;+.XQ1@X2c;^;>5@%G+]OhRdo?<P'JX_<(486Sl]i)M^Pb4/ml/,l\X893`Q)98"R/A$O7."e)$8C.S13>hPK.s:sCq<=&!0\6tatL]mk10c68:HQ*L&0%ja<JcZH'DLrS;OfO4U##adh)W9dLFr^V:BS>Yg45#MW:c2pf$;pUjq8B+73%cX@'gVU\*J0-20B`hEi:hb>]sl@]j#'p\`KR#J"I%@bMHpks2VmrMY'Fp'5K6^=Q-Z5aRW&Xs?SZce=5W4*A8?9AuS&rlgAb7(K5A#nJ;9(RQqn)_sU&Di'rYPOmSoNd5o@^!@`ckQX![%ZU`BHn@h1%Yjb)mkkKo+YTug1j5KCmP.Z:s<;Xm))K`ipb+rW%H)!Fs]'LU+jJ#UR,.TF*s7On)PS2++_"c&XDr-X;kYcom`H.L'%dH>Ua`)j$MaoZKO=;5$E)kA,7[1hs!nS-R'k6oM^C0n;M($9cLBf5oqQ<&.fKs7#<08.l<1j$cC=KNa5<HgSQ=`sb?bGtFn>uodh%'!`F9[1b!6l?i,ggd.;'1H/W:V4PDogOM+?K:E&#N-!*%bH*O`K&K1B9Zl\NIJ*nX;)Q*l/.M3a`UY_o?!_(,`j9f$IQh,:%\uB<%9UEE"i_n`@-.-];V$iYP0jP(6N4PsJQr3h)h/;)43TkF4k/%M+bfprW-cCf'R.7s2;C6[%M2t,(E-oN^lAWC$g[@7U8QafHk3Kn>%DSC5J2jY;IHglD#\sLa0C*58)^hhCg9-tJ6H49%XpS<XJGVDi#_lo5Ve\,]MXQF_J=`rV,P#_,3Krg`008.l<1p`4Q\9^e#Y1?qq%=!]>le``#rH(DRnhS:\El;W\<@=G[f53AEZMp-Qn[Lg^,k:>)62!BVWUA&8)0YF_;545(c+Yt4;a^Lc=PLa]OV6AD5Adu:d/p6=e%4=A:BHqnoUI)S.D4G\`F8^UZpdReJ&44ueDTB>O3+)kIjhW7E@4NG2(#Q.4NJ+Wo@hn'!ZlXYCNRG[lBMjWW/p&@l'7JqZm6%E7M%D+c6GRnHpIe\[]XB`a]L><ig<;IE[Uo+op1KHX$*8dJaE.-;"ZXNjIJZK<'=WQJ_gU]?\-J;c\9hfnS,#;Ek?incO8RW*:=c#uUq%/O`&,nJ*$M"BlQ')GNmLncZ:0Akq_'@2SWoi>R@T[S2"m`_@J8[bR8t:m9VPl5A-UcCE;q*L.W6&hff:9jctVD[.rZ!opVc*!rW3%'<-&Q8*JGfe8I06rWnP4SJpZH^mcREkU^e5Sg/?@"a%<*7=\1"AK]6o5]BXSq;t#@-Ptf@8*N?/4!7j&]1Cb*@&p9M\+V+T1%iTC%_N'!k9=P?ip5q)Z5!2=i3h@AhaZ_4AgDgm@E'B%ZWMC9CXMMC+2=H_MBDLAt1^m>CKkiCP]/+uVq_C+.'arWQ&BNQm^")W7!J.PM%mUDF5++/l:B<',SbC">!&QpLqmm]OUl>U#?BbXtA,&9`m8+(K'k_Ac]254$9'4R?I=f`',WVS.rg`+!Ue9q;m_o:fXfJ[%M-a8ps%N--DH%\oNm<+8btpG09]P3E4)orB*10$UZm=!bSL6e>c6g316dmlU$A)7e27I7k$"UUr>oducOGr$>d<DNAllbDH:hi#,j$=45da%SYg<BfKBBf)l![:gQF(>kB<BU0#ne`6k-e^k:d?lb$/\PM5I\`pllo!FA,>4L;u/'`C8gWjA2o=-9t(aRQ4+P]"+_f;mt-8d?W3]%[Fa7J62,gf/r="8U/B\68G]S$9bDGsg(l8IFifV</`Dqfr20J)A4J#I<)#o:-cAO<R'XS4E\;WeM3Ui$1YaGR8U6l<8*$NFV*J3@%oQ$33QoIp?8udT<18bqqh7KOE?C;2;4_J="/GH;'G"0p$'37knEGA-@b@X4n%0s!M\l5X$`!X@3?b:X..fa^bg9f!]Gh&tke;D!+%p?5+9G8!:=0L-gC+_f%Jjp^aFS4VRE@\jb"%%f8R4t4gWHP:[](Q>Z4_CO,YH^1E.hbp_MZY=^\X-^jFK7e8DX0e,t-Yg7s>-3@o%n1uCA5?]i,nErVrJgM/<T\G,S7Md8,KO"/47.uG:Q:+cG-%:Y$?E-&INF^3G(J/-Nij7s<MlaDK,4#1RO`d[ok>&S6bNnLXI'*)Y%'3Vgs8'QtPLg$,\d#k5!+3X!t"So370che@S//1NC#B<H`U>ChJ9ZQ8N1;A_25aZ41!cj,/1SHiUrkX*c$&cF)F<A1mY7>04VBJO%;1$e\E(55c3bF#*QAe,`=n",d0hqtm2B/9clqPb$P#Mk_Ze!OqMO9Q(O]II=Ld"4,+4a,[MYA<uO[[f_2"lU%W-V)hWnq*G<N!uN%eL>]F[G`E/mIK1LqP_S!SuJD90&&m?pP^`\S<^$"l+`)EK_Y$VF!c-)c7&-7Z.#[mVE<m'0e]m--sEg(E'_GXFj#r*p;G*U&V)o1%-VLMAbPSAT+mK/dBsB^^`gnehpth/AL\I-'aJgp<F2CW[@o?$!8'Ir[Jer'BpQ\5?@EV/:lDdYP?p\J^>r(CaF3M\n/NJm)^Vi\k%C.27/c`#.2bJ_)6[Gn2Eb:B)L=5L.F8s0Y1Q4>]=lZas7GY%/QBc4dGHENg)C*58/N6/AdQ:s-0^C['2b/>hZ2c5P(-%S3W-6NW]%6"TDS"nk+jGHXenh=AX)&m.8@Xp2HECdNMq*HQf)Q<[h2^Eg$YPmaZlmPFGqIh-b(rP_2@_$9;3Sa.5?BaL>[>C0Lc2^,+&Pu]+B%l"3s#"%`SjR'(mVWC8iDem?;9Beih4Z;hh7XK'50!O/Ue^=cFD@CF&.q3P#bh=X&D]Vp7]6ukbE`B%VKpP+Vod9H)p86QTAXAmr-%I%%LQhU[:&U$'<dWmH7b[Jm.f^O'/_fARnO.LBHtjR6F+ZN%%OQRmJdDlbe?-l"E$h;DEOF@IqLNNBS5_^8^@K(lP%9Kq!Y$(0E7%>&L0F'QZJuFt4LXH!(LsI]gf9>"7T/R[<]e\1*)t[@fY==inj%8G9@OYNTO$+@Wfab?@_XIuT5M("aKPH!*Eu_^=LueUk)GofV$2%p[CdZ27m!!r,Qj*2s^F[;eJaP<q'LCK!b;UJQ[`7pfYe%3\TH)2'i!#j!40%>3"RS"\I?[P%V#WA\_<_X]f=1YQ8Gr"bMMJ,r[>T%7BJ_`=j)t\.(`WeT'3D%2f$7qg=Jn+774AMeZeCP/U1"eXG<:qYj>sZ/DR<qX)N`][3-^OdceZn>*+nsc#BZu>WA%is&k7:ZP&<T%c]t$%Kk3<.Nti>C4ks#,XI+67$KblqL[r7p6aDn5IjKP?qGoI#<h-8d8!hscGHt]NRnm&8;UtQSn>P>Ve54@q<cj9u(YQt=D!=B?%\60u<D/OR(ir?%ujl0l`TQ)!obuuc3PBg:GaA,e9VSkFZ>04b+%Z5t]MMi2h&<k\XVjNWebpUq4\+T,*iu>nXap#UbFlm5JOkH)W%6&Cf5n9R(i=L%Pe<PEn<N'0QE67\"Yf9,l.`>F/S4>@JGiNT)BpDB4g4Z=-#41HBj_&r=ZQGn^;@&eko$6?SC`Ri\LNa^8-c8IZp%2[!%9*_"5(,O00YG5_a^0$d?S>N3#$,U/>Y/Cq4q,&L\(9@:XsFA$"MQj:L1<SbfL:"bfbde3Y5FtKb\jiI*&nfMmM?k9j$g3O:s%9,e9UCh#hZeeI5Ag5oHKWX9^F^%Y_#guk3oY+Bm(\aDXZ.&;qk92\0C,s^Kh9F3Q_A2I(ZM0lk)hTHT^H#G[E**l>.DsN><Wk<c!%H`XfoBWb.d)W5(&PQjFV(I9U,j^*4TCBu^@jjqt_h2i?[[s*&&)mZ6[XNZ>L,`#1;/`HMoUk.S.d$I0*&?6Vk`7?KEVZF-m7&:eG%c+TG,OhVfT8Q_9s]`HBF3>D'%7_&lBM.OG:)N3.C+@Amc*D*r4Ydu\AWg7`Y./Vf15(mu_`qZT6$WEY2;&@?@4A/95;ae7H`k?kE%9Pf$+e10`oPY.8/g198p<*_;RQGespdtX6Gqt'Nuh")gpZ:-h!A_u!M5,UsAS3[5*/!%j=pRZ>g>V"F#Gp\Q[+N^JbX&NV%FQ^m%%U+_6J.b0]:"J>8=XQ)*P$^^)(E.T:AgP7^>=cmct@7A1sH:cDVVYZfuFeP=dFhokCbmVa[&1*a=]Y;ai$PaR=_7`bg3prEA(&tUQ%b1<4.8$N8FFq3rjkqm]=%O#!`Dr$XGcsfIu\eC61SZicI3`8PeEo)%h"#H'ZeKU:RX"-/6bQ;q;H`,R5_)]m;b';>_LfA,hbLop_%a;J-I3[6gr*A\-m8Z!f9//7@>\@PsXmujStq[.82%+WEp*tuYT`iq052-HqVX^S1ua+gEOOrBoG[8\g$/_-lEVJ8GOWLDUNWnOmt%WCD<U7n/P/5t7U2lATHeTo>!@_%YhQF3Kp--+TbO^8+I:.TC;;H`u3dmYS3nG&"s.N!eT7A)nJZR`CcbX>'j;MiD0188<7`FNAf#%DAHPc1*2W/m)pXb)iQt'6g`:!qN2Ac;392(\N1s>6RX0i6h#bRo,MftGY,%dY:lm(U^EsmkZ$r:LYhnHD&_X&gntSiVal1%3/JOU%baDKRL!I^78.?iuShV,U;3G(:=-r9oKlS\b\_Rn3ES4ZXq$_U-Fu8R937McJ`jCK6)B0XhRLnpla4t"7,e$jU0A3B4(%uBoHac+Z%h(rK//_6<8(`5`&`o'\u230Gd=^rEi'cUZ5OjrZLl+$JNgbu7FA3_J?R$l(`VO0Hq%+a+Xr08t3?BXoYWBMP2>pe`E?1*[HR!$Vp%i!#O;U:*mqbN'Rc\\2(9qX,YFH`b-Og9TQP=2Y"EhY,83o9Ym"pjKBL^KHNQ>0Ob(>kKrU(U#_Yi]LSJ2?&o2H,JJp#1@'^`>1cA%^VlLbIc#YP&mOqJ=d"/3nR,[3nQTi+gI$7H?*[k%pA)718F[jiPH<!o0;T]%),*@s[H;>rmp9H!g\:SSJ4(CuS&FX]CUL1OfpJ\b%0lAsj?PSBMeg4Oo8Ent$M)&pd8*Ksrmr4[[\22:B70ka2g;b.8+V6&k,sRT6i2i9OUtQB:^D>"!.5G0G<=s8DMqe#?S-$",(#$R?%BbIa+'r):WDjAjg-LY*3MMo5"9C58,/OA*>/]T_ZF_*G!7%nE13]c?,g[\&ss2t^H6Z03#+MJie,Tj*h/ma1'J_u,S%^e;_6QQOQ%hlc_"&-rdUim"h==JH>9#2p>?8g2hfS[55o/u3[8.;JuNku/[rMpU+T1-@nk:*MG#NnVeVeMYsN8'N=haaJN:mi"@+'=_"fd51uM%+PN,(D82>L.^Id6,#+q2\&fXro%7s.pXgD18!9]HZBE32[WfboC$]*GW`YS9#cjkVGO])IiOMtXJXR0fHpBUN]c8s=Y:\FfbN'FN%@[dgQdup9=$0Wtol'BB3a\K<-:;5EGP-!T`:m[]%-UW#%qDCQRW)f!aWn!CeeRT"[26ioH*kO#1+oW:a<,a:rm[]*OQ4)>Zk\N9R%^C@E,/,cqc\97BS6T$%<DMN&P><-+-<a.I'PK?PCj`WH(I;6cZr#""aqUN"9*QQ5I+V)<?\,,TuGI<a4_O+M>aR0"gd2Ifth[=E=%Gu[Fu/s*-gL%[-ElF:Ifj=KK.>A@79+U5rJ;ikOiQV1N5GrJ_K^a^q(.T.6piu"Y^&8SpGDQ6`4R&\]&:"<b];`2,A<ip@MX4W0q%51;G"EL:[`<844Gb3HHQNfccIh3`<ugQ?/RJlDbOOR'u&bDJ-E6JWu3FNJ%5AO=?8ijRPnea/G(7UmS,1j7S16%HPm,HOHTaYXKs%4F9e42'LOeLMY%93FNV&>;dK:.I>6R%NA))lB^/!9Dtp!FT0gR#,8!PQZ3EV4<R<al/"G]Fs,M)+B<rW'2#RaZ78SG:jA$beNS9F%\OU-uG_^V%N4%o\DN#"lm:K"d#91Ong22dSQs@A0JV_5aMu@R(2'^iOJ8E_^3Go^@>I#?;afWeKG!iXV-"Gan?&VRF4AASZ\nm.j%CfQOJP-#q8S8M`a<ZR$W9p")/($)f<[:NQ"RDN!)l7gc/D@9B;IrSE#G3$]Xc/Dl5]V_BDm7kq"YSob/kA;&Fhf`TB0I+t]Kl"t;%3FN\(>;dOd.87tH%PpdAC;tRBHbDG^(^EFk?RZ7C7"8=X0n-Y&EhSSH""/:FG5uoq3[>(%Ea21B>>h<@j9diNF._67mNiInY1Xl*%2DTnnfO$ptr:sh$1(b/6%gM&QMt(#0q(5!*)fW@BN<h6i',M*RH:PN.*\T8'mar&bI>&E_nbYd2]Yrg=:3sRkY'#0BQ'm_I`Zl/F%&9D[V)\\ARj57PeoXF:'FQ$E>4R6:BHt_4$g.W?e1!';+^;kR(?&S*3)fQ39L&4X^`e5`]7\>L4[-T+CY)E/<$GQ<^2OYs,OKpgo%o&*9cmQD-;(*Dr;e^/rpVE)HQ?GV_dgXJ4DP6kh$Q+ANV)QQB.Vg/M>nI-%fS_s->I`;2^SY7a;m]Q(0(diro"[tsO.g":Z>T;@*%LrJ60FEu1!Lf-3l,LsP<#1+^<dSpZrW67k%rZ\Tk58:B2jat?8DZKpt,qA[-[0#/9]R<?'q<`HBLqP/25(StdR1Y_Ve>,'c!MQ;c%(@GC`#XSf*c/2GU^.Ln$aOKPf_L!+D9pTkUphE>f4VkaA6'tB4@NLZ@J6^$HEQ]P7n>[U)-^'S@TaB3?-!h43lSDUtlg*"j'bq(l%D5o9k.Q@t-EpEkTrj5NUhnX!bU&q8n(o)X9&hJ8Z@uT-kU:%9B,*f.R/A:7Wok$.=DPj#nS&i%@iR)j"R:%`taG`#&MiBM60`OM$%:lH3)8232@U/RLMlU_?diG%``'t_%dXI^7EFPnQ!f;BX])&A1b]mDFa1m,2oT%/qHZ1qBqBQug<H_fqs)f_RA5B4LAM<4tR8r/X(%;,L]!1Sdp>LZ%#@O+$cHZ<Vn<mO5CmL'=?'`PF4bd(>$GX4\d1@7M5r%J?`W&1EoG>FTiT)t$fs95<Hh@"qUtb\;JQjs";X<2pV`%&pE8;0G,G#l`FZRA=b*]10Pnp1@c[?k7ibGALr]HmQ_\u!Jq/X(fO@4(<R&J7bimlDO#*blFa;T/_OZoZ&$5)XG5K2;'4J'N?AOs%2%h3OereI.a4t:?,e$p[0A3E7jYlFV]?trr_J#LJLp)cjLm!_saRpEB&lKU0&s>>>g?4i=_+SfCH$r8V/sRmA"o!Ikm(I&C,o`ru%(GRt8gP>l@"@sSG7[(bu1aXLQCdPejNqq&rP2&+2^19SXPT-(7mDbO)eP3JB\,'/mDF@&cJ`Q*T-jcT+9F8NU8^0nq.`"bu7<s;Q%SM&HK$W>ibg+SN#pGL)>=fkU=5!#4jYQ<f)8/c'bPk\@&2T<^P+OU,&D!XY`AfjlW=A]?8[MFJ,4aQ^_eLH%\*uW$07VbC_2HjT`%_J"p+$);Vgor_eBZsJn7Xk/nuetk-s27_OT+8bJoGKDaYr'cPRj#CNG(_`'&RIMRX(6)4KnX>QhDT."iHV&)s?=0u^Qca0i-$O]0%h.fu+'S_+u/;G&&>Y(m?)&!h/=VV`8OP?^V9U$)7RA-Fi:hN<VigQ);T).R*H^T5s91?j.n!C]`BJ-NibfLP('b;-3!`m%RaD158%_k@rS?XlI3N51`iLOG0$Dp.5hi8)RlCe13n?q<c7^4p@V5/1ba#`*fjgQ0pPm.nBV?a!"glI`b^Q]nhqD\`0IU--qGc&oB1X-qR%%Z^?K8M+GAmX%/LUl4of($]m@2j5^j\^>kcIc^Cc8^SbBa?MZpMBP[\]G)<%0\QtL%H(=!s*g*jkW=2KK.Q&5ue0[$50dS^e0SH<W%GZa`E`riLoJ2@U(B8GoPFp`F?)N]d3UIsl=BE/X6b8JrZ_GFq5U>!e:&\Sb&?s_;L"40CnGb%+0&S2>\,C2ZS5d]<t3PFsPJZ/^d%7P+(_'Y-1O5BCWp(`Wn"oF"&BU]?Mceu(J>hs1PRP)m67=U#FoA3Wh7P=$d=gC/m$!PC*X=_QH#@XGA8r0Kj\\Z,3FJ`%qDQ%8)6%"u@_F=kAMgm4qm5?9]\$,5n'?G]?dF.hW`LnC#mD?91DZDJM&g!s37_U5?#s71A7q':8lA6BC-ApL<`=#8Q,iH%*V>3:1.qK'-TS%R[05$g9g`L7>E(Sf[>mF:0-fhY4G3j]SnS@1.rP!M4mq2hM:5?#L^4'J/ZD+G-`G(QOh^26*8TeJ'0C4",UA2LaCeT,\;@91qO-X%JFXL39,#F7Ya_W>gT2khh_cQO2D`=M(+mf)Oq@ok^U8D]V@0i%R3XD<WA]9+8[>M&K;IB+pH4"DqD+G*W3;&q+]*$[F30rJaBP)]%%Ejsu<>IC9aHZ/T'DkJiCati`VSVnWB7<,2cnRhpNU>+%=>?(X9a_S;7c3QU8%JocbLkJXR0%Z;M4,Nar(_8MTQg7@TmK=VHUQp6%U5:ogof4"Fli5i5!4$&J]'3dN7\J,On4Z'?(WDPDL-,qT[>\lZ0C,bV]GTF:<l33R[=NG1XaO+U&qfP5e^>bWI8W]SYOn]XbELVj%QAJe6^;UJn-ur7F@deNBS7SYJZ'!H0CRG'd+V?a5.JB0s$*r:uI5/GSjHo?90c_BJMM0>FnOT?J9ajc/DGJj:j"YNr6ZV#?N"2:0%1.eJ@i]6-:c!SqloT$U5`DeO5Eo:e\p'!USJW%`5?/-eBNF@)+0IC;YNgkeYnJIHGT=GdP0eMZ_:<'A/KT\jO";0")\.fTP=5"ZC%aeT1co]b/Qc+"=A,OI;P4F&';]o7fCL!dc^Ql7"h[7jr1^V+=JZ_&tA%$9gg(mb,Z#nDFOlt9"?J/s(CUr,:En2$rULX(na)VX=K%CF,3rLnb9mN^3O;N/[pj,M^bX&4S9p7q4;Wom(U8cusBKiFko\N'cNDG;NnFCX%lo@G0%a?^d`%V444\)3t\PG;LH+fs=n60f%%'%7kBd%@/B(L*/uCu(Qqg<ZrGA@T.r3S<VRFJ_JE00BGcmqNVLY$%@#Amb8+.]op+6KY/\s:;dn9Vhq]ZUb(Pq[+-m$',N]aYgsl-i%>RdY03,bD.e<@(T2/L2pO)&qsHn!nb>;u"\%*K;7EX!_H;-n8Ob=dk(Zr'C<51TAiBEE9[!8Q.lL+r=tj?iY*1a0q7=nZ^K6*eC7%o/_i#Q=H2ei63XNN%I#Xfm5Ng^u9m?.?JiOkR3Co2]"ofpH-Btb)=GE0`.t*3/6[L_gNXqgG[r-bmSmN%ZE'FJ^i[c*nPOJ!a$@7%3^kE,M36YL*0+N.?fL1@"8<E/Wm%Ge_R&(A'@F9ocPN,n.gF8icsf6FKW\cV[8h0.bf<;X*5f)!ep2,%C/K\-a_pVU9><nrS+@%^%jsi*)_`07+fTjOF2A8j1_6.4C0jerE?'nHS:9$__S"(3Q-2!DEQB%B/5#f7Jn[G,H<ocN)o;lN)Y#T,uFVJP4d6%GsqMq_XF6Nl*%`4$:+L!GQk7Zk0]6,h^L=RAVhpW.-oJ*T8q$M.SeF&pp26q2i^=`1R,@5g&pO?1sPdkONWGtQB1&c5=XQ>NZQmniXF1D$FeeV0ht%SK4+m7p:?W!`G6k>Vg&Uphq$;dMeE'K<4%1<pJk]MRKO,\os<K:V'SEAlsk_=RlAZ<[^/HGN=)\lde\?J&OJW/87$t3o2E="NRnf%eEK_eotkH@8$8n[F,ldk9rK72P!G^]/;U]oS'!BX''C^^$($[h!nl1:^7*Z>NlY'n>I6F4#bo=]m_hMe$g9,fTM2m(kYMq9-eqt6%jOgcnBYdCQ*d+p.@nL.G\-#l<e^W++j:+#GnoA<c1)L58Z-U"k(XX6Fh\)'Y*r<l;SG%XqakL'I4SGJAqokPtX*oa_\-Y1GGKC\_%qH4ifF5b>>(!^$25Y/t1M`Z"U%D4]c"\nhbXm4=)S@Zb.U=X_A38jIW\RWM=q7tGqf(=c\I=Z7<ap$_)^94Q*/IOF_i[f]VJ0cBD%U?6?#d6L+af3j`?XdrX$lcndr1Y'd)%45S=V9qY5a?uUaZ6ESa5IF#!GaK@4q9kKp'S%7A@a6O2a$#n?hUniJQ=Md:G[\dX\#dea%=cZ2$pX.?UQ<e+jUFRAGR4i3h,/MolRK>t<`rIQS!2_cG/#cAX$gPqOKG9m=L`:AOf:2sZ451\=aFurac)GLj,M=g#&=cI_H?d2'%mPo+SZr15T,+EubUN[uq>)(iKJL(nYDX5V!/:QpaMIC4;&(1*P]!p:UR!#f1oca!gVCD&KrF5-!]XQdW1UZYl2,UQH,m.Ym2<JX5%;ubVa$P%sg%Sao)H5G1N+.?M:q]>;*cQ+7kmDZ$?OFe*VeRU;)A*]#a&Jkl.;7LU.jmj,73\gEcKeu@bI!SVmK$B6dj)'r4jnbaJ%^HNrT:dXrW?\k2)<F".)-[)Sr^P^9/%'K(+gOi622V4DN;n6d_c07OQ$;sG38Q/WW=f&'P8(g[L[P+\D6uBW`@`-PjeW+E0E#W+&%Nl3?,R)C5eHuU,tVmijuUuJso=9Z9]481pJcPa:JO$g(rb:Go&cEY\Vp#@b+_WK36P'MA)E7,jQU%FK1HVE<jD(36lXrNTM9guS(%7qA2dg_a"WOa`&cQ^=J*/XP@C=o)7/P)E,?&Tc3p%jj$D(8g\jM)[C]-C"+4`jbT*/2BJ$5r:M(p$'!q]GX<&M4(fJh8oh^4!R(a%?t1*>bm>#4H#H8*+<HSsi.CO"P"lW?q%-lSVgT[5%!44gR&rfcDmEX+nG+K@]>kL`r*S#%[P#;1C;k7$P_3?MoJ&k`*^?2FTq)1!%N.56\.M2G,iP&WXCO0&A@m"$.ZA'57Tt.!G@=]#M0<^G#o7\WO<TI"-&9;(K`?j%`,1qmK)^V2H$kk:##V#ZaVq+.;TlbO@6#CIV%e@0@HLA#VdH9t[nkB^nV_Mm`fr[YDg3f'Uc<>C;k(B=a$W+jjWdJC7$edZ2)1(LJ;;HeH=hBbU$*:R^IItV77eF:QHcqE@KC"0SX%rN'l7SIZLe9CnBhYH<a8)Rh!<(&TiT!DNa7<,+U:O>Q7JaZR%kU=DO>UpamD-^hWN7D5`t.:a,RcfeI#$OqA8Fo?'t]-2>O%h(a3%P>Ak'#*78fO5qq)R!3jd$2(8D+f!jr2"]q5-.Y_hmM&0\9/sOY+2HMsI%)DCTfpV7.bT$<Jo?SPPB7tfl^(kF@db1M'(n?RZX75,%\(`6U`=es)Qu=2qJXO*OEZ#s%cBS8_7Y;SsR/P:^$H=<g99YKh1R#akA6I1D?XrrecZe^o+D5X39Rg*n1s'GcQX!g6RYN5j\`U^H%S-G1h2)m*h2alNj3[Amt/!uj_msXa69>=2Lr!Lo%H9P0iYR%eiB'1UrjSX,QoDhY8:+;MV5*ukYP`4IJg*rkQeRsi!!/BP8N3+i;%_fmD'[@"d4Fj:p^?e.6=/kmeE-$Pk"W%^L4d'G`L=dNjomCBW#k:-2D//#\Ic;#@+cWD!$,gK<o+\8f/VZ<-+XZ0*b'<7[_E:5,V%hTg4=K+ZVZI)<bqkqe'_@8=+jTr-i$?Erbq\b;5):9l^,<\7p*%*H>LDm<:P8FLod!u8l)JP,d8*iPm_og"3d'FC%@#:bs[*$qf^%;f5gsOJCXW;j^!j)M)J1RHRQp[:"&l-WXu635]TGS>S'Jr@qoSV`9jb;pn`nSt[Ycm9Fp0:6MLIfm/J;ED&t3"\6AF)m]-ZCLC(]%JbsnV#$5Pro+^E_XM]Hb0oRE8oDCkmL[=WJNbbcBU+eRj.7)"nrk$+e;N/6J_-k46?Bg`iK)J`[ar8(iPUsrEF*HtnVQsNgN702$%LX+;rBmf(tdiGVmLZH=db,\@KhpnOq.eo_8Lpp+[nP@([njejRc3nXt.9/lZ/P.:!@m]UBB]Cin)Xqc@8PrVgV2OCAGHnh[*d[8!%jt\l;CZ1W4au]6fY[bjNptM8.!_^;9Xcd2:;b6n=6YWYi0-O/Q45E3d[,5_JK/bm<j-b9@!:l.#,BMc;7d>!XZ2:eJ8.I`Rf201]%67g;ndudTe>Vr=^4liZeb:#rg$:oqcjD4W@]$1R;[m!mVhLc3tF.!CWLpo!(U&nj(>t]?'OB$"M#d/)-B8A0c)B@uoQhZMq.#067%Dqb`EgNGsu4S92JCtk(Zi7+okD*-b-`U-?W/_udF1[H/a\Qd/]c9V6;cOO7U*8@nX^@kT>E*-A`;n&%Sb6(]:::KW(n8W1/g'pTB%pABp:C/GCLRG4<=__Rg/cV=N'Y-D\R,)i7_bB*`,^Ct=NG/i8hFkntC(Y3f"Z"Yl$]3\.aZm0i`Q.lqcBh,[M3R5'-4#/ir]sP:>%r',,Rr>XY$UW8^!bd(qQrRr^7Bh/3+I-SYq*::rU664?o+4a933FgN5ea`:`2XOIh)s0&7='h>-e?DY/&BOr]Rs#o%%S5$Fh6F>$%k:^&a(=AN14IddBH8.K^gI<!W*IDNnNhkH?V_8l^fN3tO40tmLXVS#[Dk2=-i/SiCm<Z":PKhH>NkT!^,jj7_UR8G#2fd3NA&n*(%ds`W*G">HYL7R@Fkg6:EZ?4gO75sS9J[Aj`l?5`\G%u6cAjT"4qf]ooh[lS4dk8p@_0J^=A&%HQc,T]4h64/X&\E0d?4Ws5\'?)9%;0lPSHq$[5T9e7J*'?`q.rX4GUG!MB,F5WdLD]1/l0=[K7nmHCIiR]:XO"4k?\ua@=o1(6;^dC?2tMtEnf45%Tbon87/HI7T#B6p%A=87!i7RG?>9F4Mnf]'.`dKh(>X<8[1\7]NF-hQD+bebT]!`L.K\5AVM>kr.cd/H$J,%KJ5CE7r_nUTO+91JA5Q:O%rr4L]a1Jk*%7k`0IljW@P^H>on+E%8.bQ-UY'TfJad'.ht.;;qfY9X<@h1tFC"2Vr/rkOYrEI5OTPL-o?_3G?B0i\S[Yr#UnMmK[oK3Z#3n>u*"%geY[8HqFBlF!;/h5ch/oc&0U2jQ^#ueMS3b5DM\p-BSYgKJ#dc(WJ/nBHQ[o!'(Bu/f]Aj@qR'$7?KqSEgBY?K&^AQUO]bWB9nVc%e@p+N)L>Q*`TFjb,<*mZ<=2`f^[g5F#:4X8,]E7>VLg^:Hj6*W,%no^N1KBVB5B--.3k=1J_(-+0(/K"OP9Qnj3f(1CGZU4A8!Tk%o3s!/7:&26jSKGs9KpeYi[Y/J5l;oJ!J+\b1;It/qLC;E&'qJqYQCJ%MseEas+^"lQi9Z4]dQ8OiPqi6A.;phS;l-$kF"([9%;R8%G"fH_('*=$j$j@pcBKKH'jd8I$qNlrI3>q!dB=P,TK9b<mlFf[=HQhf*MUKm*dtBY0K9/BRZU6q"`H02A.1CC3iAg6FDXYTRnU"'%.Re6'J>hU)*Q*EK%F@8fKajhf/':4]`tj7[*E",bj33%Lpjo?.`#-:Ba'0AnR/^kpEcBQcE#qmlEI=KR(qNssE2df-U1Tba)1_A?%"J(Z=3p!/r]&mG6,8`E2_D,IHNrM.1^cGK=X5Fm$`]&&mNej'dQT,FaIs:]ZY*M:p(N!2*5d\FA3R0Zm14iJQXEWkC'@a:jaf^1@%`3'4@_+1)1J^;uiOb50,8C)OX$+(^:U%sr,Nf*0&BE"nTE0'u.$GR`FL#4WA9"H/nQTere5@o#9,9pZ<K+H@T'=a0@/t?5=IrlG9%`%E>9@5^BREP)=-L,GN0q`3A)5[,`,#`aRU5c&2OY]JeJ[;3kGjj7M]hQH5?#e+cWVICF1?$hQVL2`nt9UU1aeE_LUo:u'[+mJV?%`s@FGqqlnuk3r;Ss7,hJrl=n[s82'Dhu2u\2rFQ)G<^KO\"CG4cd/54rp[fYhu3;IO5Kp2j%mF=pZnaW])M9jLS$g0o'9(9J,8r`%T76VY+P0EUo5DA=rBL7uL]7H57r7J~>%AI9_PrivateDataEnd