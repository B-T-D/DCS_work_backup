%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 008x008.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 393 146
%%HiResBoundingBox: 0 0 392.4521 145.8003
%%CropBox: 0 0 392.4521 145.8003
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 3938 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD84FF7DA87DA884A8A8A884A8A8A8847DA8A884A8A8A884A8A87D%84A8A8A884A8A8A8847DA8A884A8A8A884A8A87D84A8A8A884A8A8A884A8%7DA884A8FD06FFA8A8A87D84A8A8A884A8A8A884A87DA884A8A8A884A8A8%A859A8A8A884A8A8A884A8A87D84A8A8A884A8A8A8847DA8A884A8A8A884%A8A87D84A87DFD05FFA8FD38FFA8FD06FFA8FD39FFA8FFFFA87D7D7DFD38%FFA8FD04FF7DA87DFD39FF7DFFFFFF7D527DFD36FF7DFF7DFD04FF7D7D53%A8FD35FFA8FFFF7DFFFFA87D7D7DFD38FFA8FD04FF7DA87DFD39FF84FD05%FFA8FD38FFA8FD06FFA8FD39FFA8FD05FF7DFD1BFFA8A9FD1BFFA8FD06FF%7DFD31FFA8FD07FFA8FD05FFA8FD38FFA8FD06FFA8FD39FFA8FD05FF84FD%38FFA8FD06FF84FD39FFA8FD04FF27A8FD38FFA8FD05FF7D52FD2CFFA9FD%0CFFA8FFFFFFA85252FD0FFFA8FD28FF7DFD05FF7D52A8FD2BFFA8FD0CFF%52FD05FFA8FD38FFA8FD06FFA8FD39FFA8FD05FFA8FD38FFA8FD06FFA8FD%39FF84FD05FFA8FD08FF53FD2FFFA8FD06FFA8FD27FFA8FD11FFA8FD05FF%7DFD38FFA8FD06FF7DFD39FFA8FD04FF7DA8FD38FFA8FD05FFA87DFD39FF%A8FFFFFFA85252FD05FF7EFD32FF7DFD05FF7D52A8FD20FFA8A9FD16FF7D%FD04FF7DA8FD38FFA8FD05FFA87DFD39FFA8FD05FFA8FD38FFA8FD06FFA8%FD39FF7DFD05FFA8FD38FFA8FD06FFA8FD1CFFA8FD1CFFA8FD05FFA8FFFF%FFA8FD34FFA8FD06FFA8FD39FF84FD05FFA8FD38FFA8FD06FFA8FD39FFA8%FD04FF527DFD38FFA8FD05FF7D52FD17FFA8FD21FFA8FD04FF287DFFFF7D%FD35FF7DFD05FF7D7DA8FD16FFA9FD21FF7DFD05FF84FD38FFA8FD06FF84%FD39FFA8FD05FFA8FD38FFA8FD06FFA8FD39FFA8FD05FFA8FFFF7DFD35FF%A8FD06FFA8FD12FF7EFD26FF7DFD05FFA8FD38FFA8FD06FFA8FD39FFA8FD%04FFA8A8FD38FFA8FD05FFA859FD39FF84FD04FF527DFFFFA8FD35FF7DFD%05FFA87DA8FD0BFFA8A8FD2BFF7DFD04FF7D7DFD38FFA8FD05FFA87DFD39%FFA8FD05FFA8FD38FFA8FD06FFA8FD39FFA8FD05FF84FD38FFA8FD06FF84%FD07FF7EFD31FFA8FD05FFA8FD38FFA8FD06FFA8FD39FFA8FD05FFA8FD38%FFA8FD06FF7DFD39FF7DFD04FF52A8FD38FFA8FD05FF7D52FFFFA8FD36FF%A8FFFFFFA85252FFA8FD36FF7DFD05FFA852A8FFA8FD36FF59FD05FFA8FD%38FFA8FD06FFA8FD39FFA8FD05FF7DFD38FFA8FD06FF7DFFFFA9FD0AFFA8%FD09FFA8FD0AFFA9FD13FFA9FFFFA8FD05FFA8A87DFD0AA87DFD09A87DFD%09A87DFD09A87DFD0AA87DA8A87DFD07FFA8A87DFD09A87E7DFD09A87DFD%0AA87DFD09A87DFD09A87DA87EA8FD07FF7D7DFD07FF7D5252527DFD05FF%A85952527DFD05FFA8277D5252FD06FF277D5252A8FD04FFA85952537D27%A8FD09FF7D7DFD08FFA852FD09FF27A8FD08FF7D7DFD09FF27A8FD07FFA8%7D527DFD08FF847DFD07FF527D527DA8FD05FF7D7D527D7DFD05FFA85253%7D52FD06FF527D7D52FD05FFA87D527D7D52A8FD09FF7DFD09FFA8A8FD09%FFA8A8FD08FFA87DFD09FF7DFD09FF7DA8A8FD61FFA8FD40FFA859FD3DFF%7D5327A852A8FD3BFFA8A8FD3DFFA87E5252A8A8FDFCFFFD1EFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                     
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T09:57:59+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T09:57:59+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T09:57:59+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>96</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAYAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9P3WqaZaO6XV5BA8cYmd&#xA;ZZEQrGW4ByGIovI8a+OKqFrFeXFra3AvpF9RFkkULEQQyVovwbbkeOKoj6pP/wAts33Q/wDVPFXf&#xA;VJ/+W2b7of8Aqniq1bO7DPyv5SCaoAsIoKDY/BvvU4qu+qT/APLbN90P/VPFVr2d2VHC/lU1BJKw&#xA;nYEch9gdRtiq76pP/wAts33Q/wDVPFXfVJ/+W2b7of8Aqniq0Wd36jE38vpkAKvGGoIJqa8O+3bF&#xA;V31Sf/ltm+6H/qniq2SzuzGwjv5VkIIRisLAGmxI4Cv34qu+qT/8ts33Q/8AVPFXfVJ/+W2b7of+&#xA;qeKrTZ3fqKRfy+mAQy8Yakkihrw7b9sVbtvWS8mheZpkWON15hAQWZwfsKv8oxVUuL6ytnjS4uI4&#xA;Xl5eksjqhb01LvxBIrxUFjToMVQVpJJqVkbuz1A+nMZBbywiGSLirsqMp4nkKCv2t8VRX1Sf/ltm&#xA;+6H/AKp4q76pP/y2zfdD/wBU8VWmzu/UUi/l9MAhl4w1JJFDXh237Yqu+qT/APLbN90P/VPFXfVJ&#xA;/wDltm+6H/qniq1LO7CnnfysakghYRsSeI+weg2xVd9Un/5bZvuh/wCqeKrXs7sqOF/KpqCSVhOw&#xA;I5D7A6jbFV31Sf8A5bZvuh/6p4q76pP/AMts33Q/9U8VWrZ3YZ+V/KQTVAFhFBQbH4N96nFV31Sf&#xA;/ltm+6H/AKp4qtks7sxsI7+VZCCEYrCwBpsSOAr9+KtMs8E9uDcPKsrlGVxHSnpu1RxRT1XFUD5g&#xA;8qWWuSpJdXE8XpxGJFhMYArNFPz+JHPL1LaP226bnFUZoVtFbaLYwRcvTjgjVeTFzTiO7EnFUdir&#xA;sVdirsVdirsVWRzwStIsUiyNC3pzKrAlH4huLU6HiwND2OKr8VdirsVdirsVUru0hu4Ggm5iNipP&#xA;pu8TVVgwo8ZVhuPHCCqlGoGq3D71MEAO5ps8vbp3wKg/MPly012GGC7mmihhaRikJQcxNDJburFk&#xA;c0MUzj4SDv40xVd5c02HTtNNvFJJKPXuGeSVuTM7TOWbairyO9FAFe2KppirsVdirsVdirsVdirs&#xA;VdirsVdiqyS4gjkijkkVJJmKQozAF2ClyFB6kKpO3YYq6eFJ4JIJOXpyqUfizI1GFDRlIZT7g1xV&#xA;Cz28cc2nBS1IZCiAux29Fx8VSeR26tviqC84+ZV8teXrjWGtzdCAxr6Ib06+pIqbuQ1Kcq9MVR2i&#xA;zLNpFlIoYK0MdA6lG2UDcMAcVRmKuxVbLIsUTyMGKopYhFLMQBXZVBJPsMVagmWaGOZQyrIodVdW&#xA;RwGFaMjAMp8QRUYqvxV2KrUijQuURVMjcpCAByagFTTqaADFV2KuxV2KuxV2KuxVCxsDqtwm9RBA&#xA;TsabvL36dsVW6zqB03R77UREbg2VvLcCBTRn9JC/AGh3alOmKoHybrA1jy/b6j6DW7XDSSNC1SFL&#xA;SM1Fcqodd/tLscVTrFXYq7FXYq7FXYq7FXYq7FXYqpRXKSTzQBJA0BUMzIyo3IchwcgK9O/E7YaV&#xA;e0cbsjMoZozyjJAJVqFajwNGIwKuxVCXjqLuwShq0rEEAkbQv1alB174qi8VQ2mf8c20/wCMMf8A&#xA;xEYqicVUopLlriZJIQkKcfRl5hjJUVaq0+HidvfCqrgV2KuxV2KuxV2KuxV2KuxV2KuxVDR/8dKf&#xA;/jDD/wASlxVE4qhtP/uH/wCM0/8AyefFUTirsVdirsVdirsVdirsVca0264qp2zzvbRPcRiGdkUz&#xA;RK3MI5FWUPReQB2rQVxKqmKuxV2Koa7/AL+y/wCMx/5MyYqgPNunazqOhT2mj3f1K/kaMpPzeL4V&#xA;kVnX1IwzpyQEVUV+XXFUZowmGk2YmZXl9FOTIpVfsilAS368VRBW4+sIwdBbBGDxFCXLkrxYPyoA&#xA;ByqOJrUbim6qpirsVdirsVdirsVdirsVdirsVdirsVQsYf8AStwSRw9CCgpvXnLXevy7Yq1q9rd3&#xA;ek3trZ3BtLu4glit7pesUjoVSQe6sa4qgvKVnqFnoUNrfzi5uIXkRpas7HjIwPORzykatatRa+Ax&#xA;VOMVdirsVdirsVdirsVU5lnb0/RkWOjgycl58kHVRutCfHf5YQqpgV2KuxV2KuxVCXgk+t2BDAR+&#xA;q3JSCST6L0oa7d+2KrtT1Ow0uxmv7+ZbezgHKWZ+igkAdN9yaDFXaZ/xzbT/AIwx/wDERiqpaW/1&#xA;eBYvVkm4lj6krcnPJi2526VoPbCTaquBXYq7FXYq7FXYq7FXYq7FXYq7FXYqho/+OlP/AMYYf+JS&#xA;4qq3Vzb2ttLc3MixW8CNJNKxoqooqzE+AGKoLy9qFpqOkQahZuZLS8L3FvIVZC0csjOhKuFZaqej&#xA;AHFUxxV2KuxV2KuxVbHJHIgeNg6GtGUgjY0O4xVatuouXuOTlnRIyhdjGAhYgqleIY89z1NB4DFV&#xA;TFXYq7FXYq7FXYqhrv8Av7L/AIzH/kzJiqlrWh6Trenyafqtsl3Zy/bieo7EVBUgg77EGuKqEKaV&#xA;B5cggu44l0+WGKCSFkBjb6xxj4MlCCHZ6H54Qqa4FdirsVdirsVdirsVdirsVdirsVdirsVQsaIN&#xA;VuHCjm0EALU3IDykCvtU4qrzwQXELwXEazQyDjJFIoZWB6gqdiMVQPl/TrDTtNFpY26W1tHJKqRR&#xA;qFACSMi9PBVAxVMcVdirsVUrm5itohLLy4F0jHBWc8pHCL8KBj9phU9B1O2NKq4qp29tb20Qht4k&#xA;hhUkrHGoRQWJY0AoNya4kqqYq7FXYq7FXYq7FXYqhLyOM3dhIVBkWVgrkCoDQvUA+9BiqG8z6le6&#xA;ZoN5fWMDXN5AgMFvHDLctI5YKFEUPxmtev7P2jsDiq/TbqYaLYS/VZWeRIUaJSnJA1FLnkyjio+I&#xA;/tU7V2wqmOBXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULGx/StwvEgCCAhtqGry7da7U8MVVLySWO0&#xA;nkiBMqRu0YCGQlgpI+AMhbftyFfHFUt8o3eoXehQz6jB9XvHeUzx8Sg5GRieKMzstCaUY1qO4oSq&#xA;nGKuxVRM1x9dEPoH6uYy5uuS0DhgBHw+1uN69MPRVbArsVdirsVdirsVdirsVdirsVQl4zC7sF4E&#xA;gysS4pQUhfY7139hiqLxVAWxvf0Zp/1QRk8YPW9UsP3XEc+PEH4qdK7YRSo/ArsVdirsVdirsVdi&#xA;rsVdirsVdirsVdiqGj/46U//ABhh/wCJS4qicVQ2nEG3YjcGaf8A5PPiqJxVStxdBG+sujuXcoY1&#xA;KARlj6YIZnqwSnI9z2GKquKuxV2KuxV2KuxV2KuxV2KuxV2Koa7/AL+y/wCMx/5MyYqg/NGiTa3o&#xA;s2nQ3ZspJShE4UuBwcNQqrRkg07MP4Yqv061uP0TpqLdyqYkieRyIy0qhP7t6pQA16qAduuFUywK&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhY1P6VuG5EgwQALtQUeXfpXevjirtW0+PUtKvdOkdo472C&#xA;W3eRftKJUKEivcVxVKtE0RbLyydMF7LFHG0yi5j9OJolWVq+nReKLtsDWnTpTCDuqf4FdirXJeQW&#xA;o5EEhe5ApU/jireKuxVpWVhVSCKkVG+4NCPoOKt4q0zKoqxAFQKnbcmgH0nFW8VdirQZSWAIJU0Y&#xA;DsaVofoOKt4q0zKilmIVVFWY7AAdziqFvFY3dg3MgCVgUFKGsL7nau3scVReKsa8z6Pq7QaaNBZ0&#xA;khvI2uP3xAW39N1agkJFKsoPGjca8cKp5+j4P55v+R83/NeBUDrlhcjSLs6d9ae/EbfVkiuSjmT9&#xA;kBpy8Q37spxViOmaR+Yy6jDJcyyi1kltmugZYlrTiJywR3YL6K0orlvV6H08KGefo+D+eb/kfN/z&#xA;XgSw7zjpHnybUOOhOF0kWgIpck3P1xbqFw3G4DR/DCr8PipUtXfhhVN/LGm6+sV7+npZHkNy/wBU&#xA;Kzv/AHNBSnpsPh/l5fF44qm11p1baX6s8guODeiXnm486fDyo/SuBXnkGjfmwI0kkmc3RgKSv60K&#xA;8nV29EkAtSjMTKASOBonx1OFD0f9Hwfzzf8AI+b/AJrwJYr540jzfM1onluV/QaK7W+jkm+FnaMC&#xA;AN6pY8eXL7Peldq0KqvlXTPNi3l3+n5ZmtPSg+qVnHLnw/eV9Fh8Vft1+Gv2NsVZDcadGbeURvch&#xA;+DcTHO/OtNuPqNwr4ctvHArBf0V+ZUl1bzK0sSKLdZPVniLgGFRP9hm+1cLylofscfTo1cKGU+S7&#xA;LW7bR0bXXeTVnJE7yOrsVVjxH7v93T4jTiOlK74Ep9iqTeZNEN9pNzDYwwC8lKEs4VOaeorSp6nC&#xA;QqZI+S8uJpWuKojTtIhj0+2jvYbea9SJFuZkiUK8oUB2ApsC1TiqI/Rmm/8ALJD/AMi1/piqUXHl&#xA;6V/M9pexQ2yaVDbSx3Ef+7HldgUpH6fAKAKluXImnYGqqb/ozTf+WSH/AJFr/TFXfozTf+WSH/kW&#xA;v9MVSXy3oUml6U0evvaXN29zI31lY0jQ/WJaxoqlV4/E/FV37CpO+Kp1+jNN/wCWSH/kWv8ATFUk&#xA;82eW72+tLSPRVtLeSK7jmuhKnESQIGPAMilgfU4Nt2FMVTv9Gab/AMskP/Itf6Yq79Gab/yyQ/8A&#xA;Itf6YqkOm+Wr+HzXq97ci2k0S6WH6haqg5RukaK5YcABVlbudqfQqn36M03/AJZIf+Ra/wBMVS3z&#xA;FoP1vSng023tkui8TAyARoUWRWdWZY5DRkBWnHfFVPypoeoafFdHVGhnuXunktZYwCVhKKtK8E41&#xA;cO3HfiDSpxVP8VdirsVdirsVdirsVdiqX6Xoyafc39wLu5uW1Cb13W4cOsW1AkICrwQDt/GuKphi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVQup6bbalZSWV0GMEvEtwYq1UYOKMNxuoxVicP5VaRBe&#xA;XzxXdwtjqS8b2xBARwFCoKrx+Fd6LSgr8PHeptWZW1vFbW8VvCvGGFFjjUdAqigH3DAqpirsVdir&#xA;sVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:D77DBEF0082068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:D77DBEF0082068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D77DBEF0082068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T09:57:59+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -145.8 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 145.8 li
392.452 145.8 li
392.452 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 145.8 mo
194.4 145.8 li
194.4 0 li
0 0 li
0 145.8 li
cp
clp
0 145.8 mo
194.4 145.8 li
194.4 0 li
0 0 li
0 145.8 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
13.375 124.416 mo
190.026 124.416 li
190.026 4.37402 li
13.375 4.37402 li
13.375 124.416 li
cp
f
gsave
20.2979 115.505 mo
22.4824 115.505 li
22.4824 113.32 li
20.2979 113.32 li
20.2979 115.505 li
cp
clp
21.3901 115.167 mo
21.5903 115.167 21.7822 115.088 21.9238 114.946 cv
22.0649 114.805 22.1445 114.612 22.1445 114.413 cv
22.1445 114.212 22.0649 114.021 21.9238 113.879 cv
21.7822 113.738 21.5903 113.658 21.3901 113.658 cv
21.1899 113.658 20.998 113.738 20.8564 113.879 cv
20.7148 114.021 20.6353 114.212 20.6353 114.413 cv
20.6353 114.612 20.7148 114.805 20.8564 114.946 cv
20.998 115.088 21.1899 115.167 21.3901 115.167 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
21.3901 115.167 mo
21.5903 115.167 21.7822 115.088 21.9238 114.946 cv
22.0649 114.805 22.1445 114.612 22.1445 114.413 cv
22.1445 114.212 22.0649 114.021 21.9238 113.879 cv
21.7822 113.738 21.5903 113.658 21.3901 113.658 cv
21.1899 113.658 20.998 113.738 20.8564 113.879 cv
20.7148 114.021 20.6353 114.212 20.6353 114.413 cv
20.6353 114.612 20.7148 114.805 20.8564 114.946 cv
20.998 115.088 21.1899 115.167 21.3901 115.167 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
20.4551 105.501 mo
22.6396 105.501 li
22.6396 103.317 li
20.4551 103.317 li
20.4551 105.501 li
cp
clp
21.5474 105.164 mo
21.7476 105.164 21.9395 105.084 22.0811 104.943 cv
22.2222 104.801 22.3018 104.609 22.3018 104.409 cv
22.3018 104.209 22.2222 104.017 22.0811 103.875 cv
21.9395 103.734 21.7476 103.654 21.5474 103.654 cv
21.3472 103.654 21.1553 103.734 21.0132 103.875 cv
20.8721 104.017 20.7925 104.209 20.7925 104.409 cv
20.7925 104.609 20.8721 104.801 21.0132 104.943 cv
21.1553 105.084 21.3472 105.164 21.5474 105.164 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
21.5474 105.164 mo
21.7476 105.164 21.9395 105.084 22.0811 104.943 cv
22.2222 104.801 22.3018 104.609 22.3018 104.409 cv
22.3018 104.209 22.2222 104.017 22.0811 103.875 cv
21.9395 103.734 21.7476 103.654 21.5474 103.654 cv
21.3472 103.654 21.1553 103.734 21.0132 103.875 cv
20.8721 104.017 20.7925 104.209 20.7925 104.409 cv
20.7925 104.609 20.8721 104.801 21.0132 104.943 cv
21.1553 105.084 21.3472 105.164 21.5474 105.164 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
20.769 95.4976 mo
22.9536 95.4976 li
22.9536 93.3135 li
20.769 93.3135 li
20.769 95.4976 li
cp
clp
21.8613 95.1602 mo
22.0615 95.1602 22.2539 95.0811 22.395 94.939 cv
22.5366 94.7979 22.6162 94.6055 22.6162 94.4058 cv
22.6162 94.2056 22.5366 94.0137 22.395 93.8721 cv
22.2539 93.7305 22.0615 93.6509 21.8613 93.6509 cv
21.6616 93.6509 21.4692 93.7305 21.3281 93.8721 cv
21.1865 94.0137 21.1069 94.2056 21.1069 94.4058 cv
21.1069 94.6055 21.1865 94.7979 21.3281 94.939 cv
21.4692 95.0811 21.6616 95.1602 21.8613 95.1602 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
21.8613 95.1602 mo
22.0615 95.1602 22.2539 95.0811 22.395 94.939 cv
22.5366 94.7979 22.6162 94.6055 22.6162 94.4058 cv
22.6162 94.2056 22.5366 94.0137 22.395 93.8721 cv
22.2539 93.7305 22.0615 93.6509 21.8613 93.6509 cv
21.6616 93.6509 21.4692 93.7305 21.3281 93.8721 cv
21.1865 94.0137 21.1069 94.2056 21.1069 94.4058 cv
21.1069 94.6055 21.1865 94.7979 21.3281 94.939 cv
21.4692 95.0811 21.6616 95.1602 21.8613 95.1602 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
21.3979 85.4946 mo
23.582 85.4946 li
23.582 83.3101 li
21.3979 83.3101 li
21.3979 85.4946 li
cp
clp
22.4902 85.1567 mo
22.6904 85.1567 22.8823 85.0771 23.0239 84.9355 cv
23.165 84.7944 23.2451 84.6021 23.2451 84.4023 cv
23.2451 84.2021 23.165 84.0098 23.0239 83.8687 cv
22.8823 83.7271 22.6904 83.6475 22.4902 83.6475 cv
22.29 83.6475 22.0981 83.7271 21.9565 83.8687 cv
21.8154 84.0098 21.7354 84.2021 21.7354 84.4023 cv
21.7354 84.6021 21.8154 84.7944 21.9565 84.9355 cv
22.0981 85.0771 22.29 85.1567 22.4902 85.1567 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
22.4902 85.1567 mo
22.6904 85.1567 22.8823 85.0771 23.0239 84.9355 cv
23.165 84.7944 23.2451 84.6021 23.2451 84.4023 cv
23.2451 84.2021 23.165 84.0098 23.0239 83.8687 cv
22.8823 83.7271 22.6904 83.6475 22.4902 83.6475 cv
22.29 83.6475 22.0981 83.7271 21.9565 83.8687 cv
21.8154 84.0098 21.7354 84.2021 21.7354 84.4023 cv
21.7354 84.6021 21.8154 84.7944 21.9565 84.9355 cv
22.0981 85.0771 22.29 85.1567 22.4902 85.1567 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
22.6553 75.4907 mo
24.8398 75.4907 li
24.8398 73.3066 li
22.6553 73.3066 li
22.6553 75.4907 li
cp
clp
23.7476 75.1533 mo
23.9478 75.1533 24.1396 75.0737 24.2813 74.9326 cv
24.4224 74.7905 24.502 74.5986 24.502 74.3989 cv
24.502 74.1982 24.4224 74.0068 24.2813 73.8647 cv
24.1396 73.7236 23.9478 73.6436 23.7476 73.6436 cv
23.5474 73.6436 23.3555 73.7236 23.2139 73.8647 cv
23.0723 74.0068 22.9927 74.1982 22.9927 74.3989 cv
22.9927 74.5986 23.0723 74.7905 23.2139 74.9326 cv
23.3555 75.0737 23.5474 75.1533 23.7476 75.1533 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
23.7476 75.1533 mo
23.9478 75.1533 24.1396 75.0737 24.2813 74.9326 cv
24.4224 74.7905 24.502 74.5986 24.502 74.3989 cv
24.502 74.1982 24.4224 74.0068 24.2813 73.8647 cv
24.1396 73.7236 23.9478 73.6436 23.7476 73.6436 cv
23.5474 73.6436 23.3555 73.7236 23.2139 73.8647 cv
23.0723 74.0068 22.9927 74.1982 22.9927 74.3989 cv
22.9927 74.5986 23.0723 74.7905 23.2139 74.9326 cv
23.3555 75.0737 23.5474 75.1533 23.7476 75.1533 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
25.1699 65.4873 mo
27.3545 65.4873 li
27.3545 63.3027 li
25.1699 63.3027 li
25.1699 65.4873 li
cp
clp
26.2622 65.1499 mo
26.4624 65.1499 26.6543 65.0703 26.7959 64.9287 cv
26.937 64.7871 27.0166 64.5952 27.0166 64.395 cv
27.0166 64.1948 26.937 64.0029 26.7959 63.8613 cv
26.6543 63.7197 26.4624 63.6406 26.2622 63.6406 cv
26.062 63.6406 25.8701 63.7197 25.7285 63.8613 cv
25.5869 64.0029 25.5073 64.1948 25.5073 64.395 cv
25.5073 64.5952 25.5869 64.7871 25.7285 64.9287 cv
25.8701 65.0703 26.062 65.1499 26.2622 65.1499 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
26.2622 65.1499 mo
26.4624 65.1499 26.6543 65.0703 26.7959 64.9287 cv
26.937 64.7871 27.0166 64.5952 27.0166 64.395 cv
27.0166 64.1948 26.937 64.0029 26.7959 63.8613 cv
26.6543 63.7197 26.4624 63.6406 26.2622 63.6406 cv
26.062 63.6406 25.8701 63.7197 25.7285 63.8613 cv
25.5869 64.0029 25.5073 64.1948 25.5073 64.395 cv
25.5073 64.5952 25.5869 64.7871 25.7285 64.9287 cv
25.8701 65.0703 26.062 65.1499 26.2622 65.1499 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
30.1992 55.4839 mo
32.3833 55.4839 li
32.3833 53.2993 li
30.1992 53.2993 li
30.1992 55.4839 li
cp
clp
31.291 55.146 mo
31.4912 55.146 31.6836 55.0669 31.8247 54.9253 cv
31.9663 54.7837 32.0459 54.5918 32.0459 54.3916 cv
32.0459 54.1914 31.9663 53.9995 31.8247 53.8579 cv
31.6836 53.7168 31.4912 53.6367 31.291 53.6367 cv
31.0913 53.6367 30.8989 53.7168 30.7578 53.8579 cv
30.6162 53.9995 30.5366 54.1914 30.5366 54.3916 cv
30.5366 54.5918 30.6162 54.7837 30.7578 54.9253 cv
30.8989 55.0669 31.0913 55.146 31.291 55.146 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.291 55.146 mo
31.4912 55.146 31.6836 55.0669 31.8247 54.9253 cv
31.9663 54.7837 32.0459 54.5918 32.0459 54.3916 cv
32.0459 54.1914 31.9663 53.9995 31.8247 53.8579 cv
31.6836 53.7168 31.4912 53.6367 31.291 53.6367 cv
31.0913 53.6367 30.8989 53.7168 30.7578 53.8579 cv
30.6162 53.9995 30.5366 54.1914 30.5366 54.3916 cv
30.5366 54.5918 30.6162 54.7837 30.7578 54.9253 cv
30.8989 55.0669 31.0913 55.146 31.291 55.146 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
40.2578 45.4805 mo
42.4424 45.4805 li
42.4424 43.2959 li
40.2578 43.2959 li
40.2578 45.4805 li
cp
clp
41.3496 45.1426 mo
41.5498 45.1426 41.7417 45.0635 41.8833 44.9219 cv
42.0249 44.7803 42.1045 44.5879 42.1045 44.3882 cv
42.1045 44.188 42.0249 43.9961 41.8833 43.8545 cv
41.7417 43.7129 41.5498 43.6333 41.3496 43.6333 cv
41.1494 43.6333 40.9575 43.7129 40.8159 43.8545 cv
40.6748 43.9961 40.5952 44.188 40.5952 44.3882 cv
40.5952 44.5879 40.6748 44.7803 40.8159 44.9219 cv
40.9575 45.0635 41.1494 45.1426 41.3496 45.1426 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
41.3496 45.1426 mo
41.5498 45.1426 41.7417 45.0635 41.8833 44.9219 cv
42.0249 44.7803 42.1045 44.5879 42.1045 44.3882 cv
42.1045 44.188 42.0249 43.9961 41.8833 43.8545 cv
41.7417 43.7129 41.5498 43.6333 41.3496 43.6333 cv
41.1494 43.6333 40.9575 43.7129 40.8159 43.8545 cv
40.6748 43.9961 40.5952 44.188 40.5952 44.3882 cv
40.5952 44.5879 40.6748 44.7803 40.8159 44.9219 cv
40.9575 45.0635 41.1494 45.1426 41.3496 45.1426 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
60.3745 35.4766 mo
62.5591 35.4766 li
62.5591 33.2925 li
60.3745 33.2925 li
60.3745 35.4766 li
cp
clp
61.4663 35.1392 mo
61.6665 35.1392 61.8589 35.0596 62.0005 34.918 cv
62.1416 34.7769 62.2212 34.585 62.2212 34.3848 cv
62.2212 34.1846 62.1416 33.9922 62.0005 33.8511 cv
61.8589 33.7095 61.6665 33.6299 61.4663 33.6299 cv
61.2666 33.6299 61.0742 33.7095 60.9331 33.8511 cv
60.7915 33.9922 60.7119 34.1846 60.7119 34.3848 cv
60.7119 34.585 60.7915 34.7769 60.9331 34.918 cv
61.0742 35.0596 61.2666 35.1392 61.4663 35.1392 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
61.4663 35.1392 mo
61.6665 35.1392 61.8589 35.0596 62.0005 34.918 cv
62.1416 34.7769 62.2212 34.585 62.2212 34.3848 cv
62.2212 34.1846 62.1416 33.9922 62.0005 33.8511 cv
61.8589 33.7095 61.6665 33.6299 61.4663 33.6299 cv
61.2666 33.6299 61.0742 33.7095 60.9331 33.8511 cv
60.7915 33.9922 60.7119 34.1846 60.7119 34.3848 cv
60.7119 34.585 60.7915 34.7769 60.9331 34.918 cv
61.0742 35.0596 61.2666 35.1392 61.4663 35.1392 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
100.608 25.4731 mo
102.792 25.4731 li
102.792 23.2891 li
100.608 23.2891 li
100.608 25.4731 li
cp
clp
101.7 25.1357 mo
101.901 25.1357 102.092 25.0562 102.234 24.9146 cv
102.375 24.7734 102.455 24.5811 102.455 24.3809 cv
102.455 24.1812 102.375 23.9888 102.234 23.8477 cv
102.092 23.7061 101.901 23.6265 101.7 23.6265 cv
101.5 23.6265 101.309 23.7061 101.167 23.8477 cv
101.025 23.9888 100.946 24.1812 100.946 24.3809 cv
100.946 24.5811 101.025 24.7734 101.167 24.9146 cv
101.309 25.0562 101.5 25.1357 101.7 25.1357 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
101.7 25.1357 mo
101.901 25.1357 102.092 25.0562 102.234 24.9146 cv
102.375 24.7734 102.455 24.5811 102.455 24.3809 cv
102.455 24.1812 102.375 23.9888 102.234 23.8477 cv
102.092 23.7061 101.901 23.6265 101.7 23.6265 cv
101.5 23.6265 101.309 23.7061 101.167 23.8477 cv
101.025 23.9888 100.946 24.1812 100.946 24.3809 cv
100.946 24.5811 101.025 24.7734 101.167 24.9146 cv
101.309 25.0562 101.5 25.1357 101.7 25.1357 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
181.076 15.4697 mo
183.26 15.4697 li
183.26 13.2852 li
181.076 13.2852 li
181.076 15.4697 li
cp
clp
182.168 15.1323 mo
182.368 15.1323 182.56 15.0527 182.702 14.9111 cv
182.843 14.7695 182.922 14.5776 182.922 14.3774 cv
182.922 14.1772 182.843 13.9854 182.702 13.8438 cv
182.56 13.7026 182.368 13.623 182.168 13.623 cv
181.968 13.623 181.776 13.7026 181.634 13.8438 cv
181.493 13.9854 181.413 14.1772 181.413 14.3774 cv
181.413 14.5776 181.493 14.7695 181.634 14.9111 cv
181.776 15.0527 181.968 15.1323 182.168 15.1323 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
182.168 15.1323 mo
182.368 15.1323 182.56 15.0527 182.702 14.9111 cv
182.843 14.7695 182.922 14.5776 182.922 14.3774 cv
182.922 14.1772 182.843 13.9854 182.702 13.8438 cv
182.56 13.7026 182.368 13.623 182.168 13.623 cv
181.968 13.623 181.776 13.7026 181.634 13.8438 cv
181.493 13.9854 181.413 14.1772 181.413 14.3774 cv
181.413 14.5776 181.493 14.7695 181.634 14.9111 cv
181.776 15.0527 181.968 15.1323 182.168 15.1323 cv
cp
0 0 0 1 cmyk
@
grestore
21.2329 124.416 mo
21.2329 123.066 li
21.2329 124.416 li
cp
0 0 0 1 cmyk
f
.16875 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
21.2329 124.416 mo
21.2329 123.066 li
@
21.2329 5.72363 mo
21.2329 4.37402 li
21.2329 5.72363 li
cp
f
21.2329 4.37402 mo
21.2329 5.72412 li
@
gsave
0 145.8 mo
194.4 145.8 li
194.4 0 li
0 0 li
0 145.8 li
cp
clp
21.6943 126.503 mo
21.3374 126.503 21.0713 126.678 20.8896 127.029 cv
20.7075 127.378 20.6235 127.903 20.6235 128.603 cv
20.6235 129.302 20.7075 129.828 20.8896 130.177 cv
21.0713 130.527 21.3374 130.703 21.6943 130.703 cv
22.0518 130.703 22.3169 130.527 22.499 130.177 cv
22.6743 129.828 22.7651 129.302 22.7651 128.603 cv
22.7651 127.903 22.6743 127.378 22.499 127.029 cv
22.3169 126.678 22.0518 126.503 21.6943 126.503 cv
21.6943 125.958 mo
22.2612 125.958 22.6953 126.189 23.0029 126.636 cv
23.3042 127.091 23.458 127.75 23.458 128.603 cv
23.458 129.463 23.3042 130.122 23.0029 130.57 cv
22.6953 131.017 22.2612 131.242 21.6943 131.242 cv
21.1201 131.242 20.6797 131.017 20.3789 130.57 cv
20.0776 130.122 19.9307 129.463 19.9307 128.603 cv
19.9307 127.75 20.0776 127.091 20.3789 126.636 cv
20.6797 126.189 21.1201 125.958 21.6943 125.958 cv
f
52.6655 124.416 mo
52.6655 123.066 li
f
52.6655 124.416 mo
52.6655 123.066 li
@
52.6655 4.37402 mo
52.6655 5.72412 li
f
52.6655 4.37402 mo
52.6655 5.72412 li
@
47.813 130.57 mo
50.2202 130.57 li
50.2202 131.15 li
46.98 131.15 li
46.98 130.57 li
47.2388 130.303 47.5957 129.939 48.0508 129.478 cv
48.4985 129.023 48.7856 128.729 48.9043 128.595 cv
49.1284 128.351 49.2822 128.141 49.3667 127.966 cv
49.4507 127.798 49.4995 127.624 49.4995 127.455 cv
49.4995 127.189 49.4014 126.965 49.2124 126.796 cv
49.0234 126.628 48.7783 126.539 48.4707 126.539 cv
48.2539 126.539 48.0229 126.581 47.7852 126.65 cv
47.5469 126.728 47.2881 126.839 47.0151 126.994 cv
47.0151 126.293 li
47.2949 126.181 47.5537 126.097 47.7915 126.042 cv
48.0298 125.986 48.2539 125.958 48.457 125.958 cv
48.9819 125.958 49.4014 126.09 49.7163 126.357 cv
50.0313 126.623 50.1924 126.972 50.1924 127.414 cv
50.1924 127.624 50.1504 127.826 50.0737 128.007 cv
49.9961 128.197 49.8564 128.421 49.6465 128.673 cv
49.5908 128.743 49.4087 128.931 49.1006 129.247 cv
48.793 129.562 48.3657 130.002 47.813 130.57 cv
f
53.1455 126.503 mo
52.7886 126.503 52.5225 126.678 52.3408 127.029 cv
52.1587 127.378 52.0747 127.903 52.0747 128.603 cv
52.0747 129.302 52.1587 129.828 52.3408 130.177 cv
52.5225 130.527 52.7886 130.703 53.1455 130.703 cv
53.5029 130.703 53.7686 130.527 53.9507 130.177 cv
54.1255 129.828 54.2163 129.302 54.2163 128.603 cv
54.2163 127.903 54.1255 127.378 53.9507 127.029 cv
53.7686 126.678 53.5029 126.503 53.1455 126.503 cv
53.1455 125.958 mo
53.7129 125.958 54.1465 126.189 54.4541 126.636 cv
54.7554 127.091 54.9097 127.75 54.9097 128.603 cv
54.9097 129.463 54.7554 130.122 54.4541 130.57 cv
54.1465 131.017 53.7129 131.242 53.1455 131.242 cv
52.5718 131.242 52.1309 131.017 51.8301 130.57 cv
51.5293 130.122 51.3818 129.463 51.3818 128.603 cv
51.3818 127.75 51.5293 127.091 51.8301 126.636 cv
52.1309 126.189 52.5718 125.958 53.1455 125.958 cv
f
57.5967 126.503 mo
57.2397 126.503 56.9736 126.678 56.7915 127.029 cv
56.6099 127.378 56.5259 127.903 56.5259 128.603 cv
56.5259 129.302 56.6099 129.828 56.7915 130.177 cv
56.9736 130.527 57.2397 130.703 57.5967 130.703 cv
57.9536 130.703 58.2197 130.527 58.4014 130.177 cv
58.5762 129.828 58.6675 129.302 58.6675 128.603 cv
58.6675 127.903 58.5762 127.378 58.4014 127.029 cv
58.2197 126.678 57.9536 126.503 57.5967 126.503 cv
57.5967 125.958 mo
58.1636 125.958 58.5972 126.189 58.9053 126.636 cv
59.2065 127.091 59.3604 127.75 59.3604 128.603 cv
59.3604 129.463 59.2065 130.122 58.9053 130.57 cv
58.5972 131.017 58.1636 131.242 57.5967 131.242 cv
57.0229 131.242 56.582 131.017 56.2813 130.57 cv
55.98 130.122 55.833 129.463 55.833 128.603 cv
55.833 127.75 55.98 127.091 56.2813 126.636 cv
56.582 126.189 57.0229 125.958 57.5967 125.958 cv
f
84.0981 124.416 mo
84.0981 123.066 li
f
84.0981 124.416 mo
84.0981 123.066 li
@
84.0981 4.37402 mo
84.0981 5.72412 li
f
84.0981 4.37402 mo
84.0981 5.72412 li
@
80.4629 126.65 mo
78.7202 129.373 li
80.4629 129.373 li
80.4629 126.65 li
80.2808 126.048 mo
81.1484 126.048 li
81.1484 129.373 li
81.8765 129.373 li
81.8765 129.947 li
81.1484 129.947 li
81.1484 131.15 li
80.4629 131.15 li
80.4629 129.947 li
78.1602 129.947 li
78.1602 129.282 li
80.2808 126.048 li
cp
f
84.4941 126.503 mo
84.1367 126.503 83.8711 126.678 83.689 127.029 cv
83.5073 127.378 83.4229 127.903 83.4229 128.603 cv
83.4229 129.302 83.5073 129.828 83.689 130.177 cv
83.8711 130.527 84.1367 130.703 84.4941 130.703 cv
84.8506 130.703 85.1167 130.527 85.2988 130.177 cv
85.4736 129.828 85.5645 129.302 85.5645 128.603 cv
85.5645 127.903 85.4736 127.378 85.2988 127.029 cv
85.1167 126.678 84.8506 126.503 84.4941 126.503 cv
84.4941 125.958 mo
85.0605 125.958 85.4946 126.189 85.8022 126.636 cv
86.1035 127.091 86.2573 127.75 86.2573 128.603 cv
86.2573 129.463 86.1035 130.122 85.8022 130.57 cv
85.4946 131.017 85.0605 131.242 84.4941 131.242 cv
83.9199 131.242 83.479 131.017 83.1782 130.57 cv
82.8774 130.122 82.73 129.463 82.73 128.603 cv
82.73 127.75 82.8774 127.091 83.1782 126.636 cv
83.479 126.189 83.9199 125.958 84.4941 125.958 cv
f
88.9448 126.503 mo
88.5879 126.503 88.3218 126.678 88.1401 127.029 cv
87.958 127.378 87.874 127.903 87.874 128.603 cv
87.874 129.302 87.958 129.828 88.1401 130.177 cv
88.3218 130.527 88.5879 130.703 88.9448 130.703 cv
89.3018 130.703 89.5674 130.527 89.75 130.177 cv
89.9248 129.828 90.0156 129.302 90.0156 128.603 cv
90.0156 127.903 89.9248 127.378 89.75 127.029 cv
89.5674 126.678 89.3018 126.503 88.9448 126.503 cv
88.9448 125.958 mo
89.5117 125.958 89.9458 126.189 90.2534 126.636 cv
90.5547 127.091 90.7085 127.75 90.7085 128.603 cv
90.7085 129.463 90.5547 130.122 90.2534 130.57 cv
89.9458 131.017 89.5117 131.242 88.9448 131.242 cv
88.3711 131.242 87.9302 131.017 87.6294 130.57 cv
87.3281 130.122 87.1812 129.463 87.1812 128.603 cv
87.1812 127.75 87.3281 127.091 87.6294 126.636 cv
87.9302 126.189 88.3711 125.958 88.9448 125.958 cv
f
115.531 124.416 mo
115.531 123.066 li
f
115.531 124.416 mo
115.531 123.066 li
@
115.531 4.37402 mo
115.531 5.72412 li
f
115.531 4.37402 mo
115.531 5.72412 li
@
111.633 128.323 mo
111.326 128.323 111.08 128.435 110.898 128.645 cv
110.716 128.855 110.625 129.149 110.625 129.513 cv
110.625 129.883 110.716 130.177 110.898 130.387 cv
111.08 130.597 111.326 130.703 111.633 130.703 cv
111.941 130.703 112.186 130.597 112.368 130.387 cv
112.55 130.177 112.641 129.883 112.641 129.513 cv
112.641 129.149 112.55 128.855 112.368 128.645 cv
112.186 128.435 111.941 128.323 111.633 128.323 cv
113.005 126.161 mo
113.005 126.791 li
112.83 126.707 112.655 126.643 112.48 126.601 cv
112.298 126.559 112.123 126.539 111.956 126.539 cv
111.493 126.539 111.144 126.693 110.906 127 cv
110.668 127.308 110.528 127.777 110.5 128.392 cv
110.632 128.197 110.8 128.042 111.003 127.938 cv
111.207 127.833 111.43 127.777 111.675 127.777 cv
112.186 127.777 112.592 127.938 112.886 128.246 cv
113.18 128.554 113.334 128.98 113.334 129.513 cv
113.334 130.037 113.173 130.457 112.865 130.773 cv
112.557 131.087 112.145 131.241 111.633 131.241 cv
111.045 131.241 110.59 131.017 110.283 130.57 cv
109.967 130.122 109.813 129.464 109.813 128.603 cv
109.813 127.798 110.002 127.154 110.388 126.678 cv
110.766 126.203 111.283 125.958 111.927 125.958 cv
112.095 125.958 112.271 125.978 112.452 126.007 cv
112.627 126.042 112.809 126.09 113.005 126.161 cv
f
116 126.503 mo
115.644 126.503 115.377 126.678 115.195 127.029 cv
115.014 127.378 114.93 127.903 114.93 128.603 cv
114.93 129.302 115.014 129.828 115.195 130.177 cv
115.377 130.527 115.644 130.703 116 130.703 cv
116.357 130.703 116.623 130.527 116.806 130.177 cv
116.98 129.828 117.071 129.302 117.071 128.603 cv
117.071 127.903 116.98 127.378 116.806 127.029 cv
116.623 126.678 116.357 126.503 116 126.503 cv
116 125.958 mo
116.567 125.958 117.001 126.189 117.309 126.636 cv
117.61 127.091 117.764 127.75 117.764 128.603 cv
117.764 129.463 117.61 130.122 117.309 130.57 cv
117.001 131.017 116.567 131.242 116 131.242 cv
115.427 131.242 114.986 131.017 114.685 130.57 cv
114.384 130.122 114.237 129.463 114.237 128.603 cv
114.237 127.75 114.384 127.091 114.685 126.636 cv
114.986 126.189 115.427 125.958 116 125.958 cv
f
120.451 126.503 mo
120.094 126.503 119.828 126.678 119.646 127.029 cv
119.464 127.378 119.381 127.903 119.381 128.603 cv
119.381 129.302 119.464 129.828 119.646 130.177 cv
119.828 130.527 120.094 130.703 120.451 130.703 cv
120.809 130.703 121.074 130.527 121.256 130.177 cv
121.431 129.828 121.522 129.302 121.522 128.603 cv
121.522 127.903 121.431 127.378 121.256 127.029 cv
121.074 126.678 120.809 126.503 120.451 126.503 cv
120.451 125.958 mo
121.018 125.958 121.452 126.189 121.76 126.636 cv
122.061 127.091 122.215 127.75 122.215 128.603 cv
122.215 129.463 122.061 130.122 121.76 130.57 cv
121.452 131.017 121.018 131.242 120.451 131.242 cv
119.877 131.242 119.437 131.017 119.136 130.57 cv
118.834 130.122 118.688 129.463 118.688 128.603 cv
118.688 127.75 118.834 127.091 119.136 126.636 cv
119.437 126.189 119.877 125.958 120.451 125.958 cv
f
146.963 124.416 mo
146.963 123.066 li
f
146.963 124.416 mo
146.963 123.066 li
@
146.963 4.37402 mo
146.963 5.72412 li
f
146.963 4.37402 mo
146.963 5.72412 li
@
142.974 128.729 mo
142.645 128.729 142.386 128.82 142.197 128.995 cv
142.009 129.169 141.917 129.408 141.917 129.715 cv
141.917 130.023 142.009 130.269 142.197 130.443 cv
142.386 130.619 142.645 130.703 142.974 130.703 cv
143.296 130.703 143.555 130.619 143.744 130.437 cv
143.933 130.261 144.031 130.023 144.031 129.715 cv
144.031 129.408 143.933 129.169 143.751 128.995 cv
143.562 128.82 143.303 128.729 142.974 128.729 cv
142.281 128.435 mo
141.987 128.365 141.756 128.225 141.589 128.022 cv
141.42 127.819 141.343 127.574 141.343 127.281 cv
141.343 126.875 141.483 126.552 141.777 126.314 cv
142.064 126.077 142.463 125.958 142.974 125.958 cv
143.478 125.958 143.877 126.077 144.171 126.314 cv
144.458 126.552 144.604 126.875 144.604 127.281 cv
144.604 127.574 144.521 127.819 144.353 128.022 cv
144.185 128.225 143.961 128.365 143.667 128.435 cv
143.996 128.511 144.255 128.666 144.443 128.89 cv
144.626 129.114 144.724 129.394 144.724 129.715 cv
144.724 130.212 144.57 130.591 144.269 130.849 cv
143.961 131.115 143.534 131.242 142.974 131.242 cv
142.407 131.242 141.974 131.115 141.672 130.849 cv
141.371 130.591 141.224 130.212 141.224 129.715 cv
141.224 129.394 141.315 129.114 141.505 128.89 cv
141.687 128.666 141.945 128.511 142.281 128.435 cv
142.029 127.343 mo
142.029 127.609 142.106 127.819 142.274 127.966 cv
142.442 128.113 142.673 128.183 142.974 128.183 cv
143.268 128.183 143.499 128.113 143.667 127.966 cv
143.835 127.819 143.919 127.609 143.919 127.343 cv
143.919 127.077 143.835 126.875 143.667 126.727 cv
143.499 126.581 143.268 126.503 142.974 126.503 cv
142.673 126.503 142.442 126.581 142.274 126.727 cv
142.106 126.875 142.029 127.077 142.029 127.343 cv
f
147.425 126.503 mo
147.068 126.503 146.802 126.678 146.62 127.029 cv
146.438 127.378 146.354 127.903 146.354 128.603 cv
146.354 129.302 146.438 129.828 146.62 130.177 cv
146.802 130.527 147.068 130.703 147.425 130.703 cv
147.782 130.703 148.048 130.527 148.23 130.177 cv
148.405 129.828 148.496 129.302 148.496 128.603 cv
148.496 127.903 148.405 127.378 148.23 127.029 cv
148.048 126.678 147.782 126.503 147.425 126.503 cv
147.425 125.958 mo
147.992 125.958 148.426 126.189 148.734 126.636 cv
149.035 127.091 149.188 127.75 149.188 128.603 cv
149.188 129.463 149.035 130.122 148.734 130.57 cv
148.426 131.017 147.992 131.242 147.425 131.242 cv
146.851 131.242 146.41 131.017 146.11 130.57 cv
145.809 130.122 145.662 129.463 145.662 128.603 cv
145.662 127.75 145.809 127.091 146.11 126.636 cv
146.41 126.189 146.851 125.958 147.425 125.958 cv
f
151.876 126.503 mo
151.519 126.503 151.253 126.678 151.071 127.029 cv
150.889 127.378 150.805 127.903 150.805 128.603 cv
150.805 129.302 150.889 129.828 151.071 130.177 cv
151.253 130.527 151.519 130.703 151.876 130.703 cv
152.233 130.703 152.499 130.527 152.681 130.177 cv
152.856 129.828 152.947 129.302 152.947 128.603 cv
152.947 127.903 152.856 127.378 152.681 127.029 cv
152.499 126.678 152.233 126.503 151.876 126.503 cv
151.876 125.958 mo
152.443 125.958 152.877 126.189 153.185 126.636 cv
153.486 127.091 153.64 127.75 153.64 128.603 cv
153.64 129.463 153.486 130.122 153.185 130.57 cv
152.877 131.017 152.443 131.242 151.876 131.242 cv
151.302 131.242 150.861 131.017 150.561 130.57 cv
150.259 130.122 150.112 129.463 150.112 128.603 cv
150.112 127.75 150.259 127.091 150.561 126.636 cv
150.861 126.189 151.302 125.958 151.876 125.958 cv
f
178.396 124.416 mo
178.396 123.066 li
f
178.396 124.416 mo
178.396 123.066 li
@
178.396 4.37402 mo
178.396 5.72412 li
f
178.396 4.37402 mo
178.396 5.72412 li
@
170.968 130.57 mo
172.095 130.57 li
172.095 126.678 li
170.871 126.923 li
170.871 126.293 li
172.088 126.048 li
172.781 126.048 li
172.781 130.57 li
173.908 130.57 li
173.908 131.15 li
170.968 131.15 li
170.968 130.57 li
cp
f
176.777 126.503 mo
176.42 126.503 176.154 126.678 175.973 127.029 cv
175.791 127.378 175.707 127.903 175.707 128.603 cv
175.707 129.302 175.791 129.828 175.973 130.177 cv
176.154 130.527 176.42 130.703 176.777 130.703 cv
177.134 130.703 177.4 130.527 177.582 130.177 cv
177.757 129.828 177.848 129.302 177.848 128.603 cv
177.848 127.903 177.757 127.378 177.582 127.029 cv
177.4 126.678 177.134 126.503 176.777 126.503 cv
176.777 125.958 mo
177.344 125.958 177.778 126.189 178.086 126.636 cv
178.387 127.091 178.541 127.75 178.541 128.603 cv
178.541 129.463 178.387 130.122 178.086 130.57 cv
177.778 131.017 177.344 131.242 176.777 131.242 cv
176.204 131.242 175.763 131.017 175.462 130.57 cv
175.161 130.122 175.014 129.463 175.014 128.603 cv
175.014 127.75 175.161 127.091 175.462 126.636 cv
175.763 126.189 176.204 125.958 176.777 125.958 cv
f
181.229 126.503 mo
180.871 126.503 180.605 126.678 180.423 127.029 cv
180.241 127.378 180.157 127.903 180.157 128.603 cv
180.157 129.302 180.241 129.828 180.423 130.177 cv
180.605 130.527 180.871 130.703 181.229 130.703 cv
181.585 130.703 181.852 130.527 182.033 130.177 cv
182.208 129.828 182.299 129.302 182.299 128.603 cv
182.299 127.903 182.208 127.378 182.033 127.029 cv
181.852 126.678 181.585 126.503 181.229 126.503 cv
181.229 125.958 mo
181.795 125.958 182.229 126.189 182.537 126.636 cv
182.838 127.091 182.992 127.75 182.992 128.603 cv
182.992 129.463 182.838 130.122 182.537 130.57 cv
182.229 131.017 181.795 131.242 181.229 131.242 cv
180.654 131.242 180.213 131.017 179.913 130.57 cv
179.612 130.122 179.464 129.463 179.464 128.603 cv
179.464 127.75 179.612 127.091 179.913 126.636 cv
180.213 126.189 180.654 125.958 181.229 125.958 cv
f
185.679 126.503 mo
185.322 126.503 185.056 126.678 184.875 127.029 cv
184.692 127.378 184.608 127.903 184.608 128.603 cv
184.608 129.302 184.692 129.828 184.875 130.177 cv
185.056 130.527 185.322 130.703 185.679 130.703 cv
186.037 130.703 186.302 130.527 186.484 130.177 cv
186.659 129.828 186.75 129.302 186.75 128.603 cv
186.75 127.903 186.659 127.378 186.484 127.029 cv
186.302 126.678 186.037 126.503 185.679 126.503 cv
185.679 125.958 mo
186.247 125.958 186.68 126.189 186.988 126.636 cv
187.289 127.091 187.443 127.75 187.443 128.603 cv
187.443 129.463 187.289 130.122 186.988 130.57 cv
186.68 131.017 186.247 131.242 185.679 131.242 cv
185.105 131.242 184.665 131.017 184.364 130.57 cv
184.063 130.122 183.916 129.463 183.916 128.603 cv
183.916 127.75 184.063 127.091 184.364 126.636 cv
184.665 126.189 185.105 125.958 185.679 125.958 cv
f
100.221 139.21 mo
100.305 139.281 100.417 139.308 100.571 139.308 cv
100.711 139.308 100.844 139.239 100.956 139.099 cv
101.068 138.958 101.145 138.804 101.187 138.636 cv
101.502 137.398 li
101.551 137.174 101.579 137.02 101.579 136.937 cv
101.579 136.824 101.544 136.719 101.481 136.635 cv
101.411 136.551 101.32 136.502 101.208 136.502 cv
101.061 136.502 100.921 136.551 100.795 136.642 cv
100.662 136.74 100.55 136.859 100.466 137 cv
100.375 137.139 100.313 137.287 100.277 137.426 cv
100.263 137.455 100.25 137.468 100.221 137.468 cv
100.137 137.468 li
100.095 137.468 100.081 137.447 100.081 137.405 cv
100.081 137.384 li
100.123 137.216 100.2 137.048 100.313 136.88 cv
100.424 136.712 100.557 136.58 100.718 136.474 cv
100.872 136.376 101.04 136.32 101.222 136.32 cv
101.39 136.32 101.544 136.37 101.684 136.46 cv
101.824 136.551 101.922 136.677 101.978 136.832 cv
102.055 136.691 102.153 136.566 102.279 136.467 cv
102.405 136.37 102.538 136.32 102.691 136.32 cv
102.79 136.32 102.895 136.341 103 136.376 cv
103.104 136.412 103.188 136.467 103.258 136.537 cv
103.322 136.607 103.356 136.699 103.356 136.81 cv
103.356 136.929 103.314 137.035 103.238 137.119 cv
103.161 137.203 103.063 137.244 102.951 137.244 cv
102.874 137.244 102.811 137.223 102.761 137.174 cv
102.706 137.125 102.685 137.062 102.685 136.993 cv
102.685 136.894 102.713 136.81 102.783 136.734 cv
102.853 136.664 102.93 136.615 103.027 136.601 cv
102.943 136.537 102.825 136.502 102.678 136.502 cv
102.523 136.502 102.397 136.572 102.286 136.712 cv
102.174 136.853 102.097 137.006 102.055 137.174 cv
101.747 138.414 li
101.691 138.601 101.67 138.755 101.67 138.875 cv
101.67 138.994 101.698 139.099 101.768 139.183 cv
101.838 139.267 101.929 139.308 102.041 139.308 cv
102.258 139.308 102.454 139.218 102.622 139.021 cv
102.79 138.826 102.909 138.616 102.964 138.384 cv
102.971 138.357 102.993 138.343 103.021 138.343 cv
103.104 138.343 li
103.119 138.343 103.133 138.35 103.146 138.364 cv
103.161 138.378 103.167 138.392 103.167 138.406 cv
103.167 138.414 103.161 138.419 103.161 138.427 cv
103.09 138.707 102.951 138.952 102.741 139.162 cv
102.531 139.378 102.293 139.484 102.027 139.484 cv
101.852 139.484 101.698 139.435 101.558 139.351 cv
101.418 139.267 101.327 139.14 101.271 138.98 cv
101.194 139.12 101.089 139.239 100.963 139.337 cv
100.837 139.435 100.697 139.484 100.557 139.484 cv
100.452 139.484 100.347 139.462 100.242 139.435 cv
100.137 139.407 100.053 139.351 99.9902 139.281 cv
99.9204 139.21 99.8921 139.113 99.8921 139.001 cv
99.8921 138.888 99.9272 138.791 100.004 138.701 cv
100.074 138.616 100.172 138.567 100.291 138.567 cv
100.361 138.567 100.424 138.595 100.48 138.636 cv
100.536 138.685 100.564 138.75 100.564 138.819 cv
100.564 138.917 100.529 139.007 100.466 139.078 cv
100.396 139.148 100.319 139.197 100.221 139.21 cv
f
13.375 114.413 mo
14.7246 114.413 li
f
13.375 114.413 mo
14.7246 114.413 li
@
190.026 114.413 mo
188.676 114.413 li
f
190.026 114.413 mo
188.676 114.413 li
@
10.7222 111.72 mo
10.3652 111.72 10.0996 111.895 9.91748 112.244 cv
9.73535 112.594 9.65186 113.119 9.65186 113.819 cv
9.65186 114.519 9.73535 115.044 9.91748 115.394 cv
10.0996 115.744 10.3652 115.918 10.7222 115.918 cv
11.0791 115.918 11.3452 115.744 11.5273 115.394 cv
11.7021 115.044 11.793 114.519 11.793 113.819 cv
11.793 113.119 11.7021 112.594 11.5273 112.244 cv
11.3452 111.895 11.0791 111.72 10.7222 111.72 cv
10.7222 111.174 mo
11.2891 111.174 11.7231 111.404 12.0313 111.853 cv
12.332 112.307 12.4858 112.965 12.4858 113.819 cv
12.4858 114.68 12.332 115.338 12.0313 115.786 cv
11.7231 116.233 11.2891 116.457 10.7222 116.457 cv
10.1484 116.457 9.70752 116.233 9.40674 115.786 cv
9.10547 115.338 8.95898 114.68 8.95898 113.819 cv
8.95898 112.965 9.10547 112.307 9.40674 111.853 cv
9.70752 111.404 10.1484 111.174 10.7222 111.174 cv
f
13.375 94.4053 mo
14.7246 94.4053 li
f
13.375 94.4053 mo
14.7246 94.4053 li
@
190.026 94.4053 mo
188.676 94.4053 li
f
190.026 94.4053 mo
188.676 94.4053 li
@
10.125 95.7783 mo
12.5327 95.7783 li
12.5327 96.3594 li
9.29248 96.3594 li
9.29248 95.7783 li
9.55127 95.5127 9.9082 95.1489 10.3633 94.6865 cv
10.811 94.2319 11.0977 93.938 11.2168 93.8047 cv
11.4409 93.5601 11.5952 93.3501 11.6792 93.1748 cv
11.7632 93.0068 11.812 92.8325 11.812 92.6641 cv
11.812 92.3979 11.7139 92.1743 11.5249 92.0063 cv
11.3359 91.8384 11.0913 91.7476 10.7832 91.7476 cv
10.5664 91.7476 10.335 91.7896 10.0972 91.8594 cv
9.85938 91.9365 9.60059 92.0483 9.32715 92.2021 cv
9.32715 91.5024 li
9.60742 91.3906 9.86621 91.3066 10.1045 91.2505 cv
10.3423 91.1943 10.5664 91.1665 10.769 91.1665 cv
11.2939 91.1665 11.7139 91.2998 12.0288 91.5654 cv
12.3438 91.8315 12.5044 92.1816 12.5044 92.6221 cv
12.5044 92.8325 12.4629 93.0352 12.3857 93.2168 cv
12.3086 93.4063 12.1689 93.6299 11.959 93.8823 cv
11.9028 93.9521 11.7207 94.1406 11.4126 94.4561 cv
11.105 94.7705 10.6782 95.2114 10.125 95.7783 cv
f
13.375 74.3984 mo
14.7246 74.3984 li
f
13.375 74.3984 mo
14.7246 74.3984 li
@
190.026 74.3984 mo
188.676 74.3984 li
f
190.026 74.3984 mo
188.676 74.3984 li
@
10.9521 71.8525 mo
9.20996 74.5747 li
10.9521 74.5747 li
10.9521 71.8525 li
10.7705 71.2505 mo
11.6382 71.2505 li
11.6382 74.5747 li
12.3662 74.5747 li
12.3662 75.1484 li
11.6382 75.1484 li
11.6382 76.3525 li
10.9521 76.3525 li
10.9521 75.1484 li
8.6499 75.1484 li
8.6499 74.4834 li
10.7705 71.2505 li
cp
f
13.375 54.3916 mo
14.7246 54.3916 li
f
13.375 54.3916 mo
14.7246 54.3916 li
@
190.026 54.3916 mo
188.676 54.3916 li
f
190.026 54.3916 mo
188.676 54.3916 li
@
10.8115 53.5181 mo
10.5034 53.5181 10.2588 53.6299 10.0767 53.8398 cv
9.89502 54.0498 9.80371 54.3438 9.80371 54.7075 cv
9.80371 55.0786 9.89502 55.3726 10.0767 55.5825 cv
10.2588 55.7925 10.5034 55.8975 10.8115 55.8975 cv
11.1191 55.8975 11.3643 55.7925 11.5464 55.5825 cv
11.728 55.3726 11.8193 55.0786 11.8193 54.7075 cv
11.8193 54.3438 11.728 54.0498 11.5464 53.8398 cv
11.3643 53.6299 11.1191 53.5181 10.8115 53.5181 cv
12.1831 51.3555 mo
12.1831 51.9854 li
12.0083 51.9014 11.833 51.8384 11.6582 51.7964 cv
11.4766 51.7544 11.3018 51.7334 11.1333 51.7334 cv
10.6714 51.7334 10.3213 51.8872 10.0835 52.1953 cv
9.8457 52.5029 9.70605 52.9722 9.67773 53.5884 cv
9.81104 53.3916 9.97852 53.2378 10.1816 53.1328 cv
10.3848 53.0278 10.6084 52.9722 10.8535 52.9722 cv
11.3643 52.9722 11.7705 53.1328 12.0645 53.4409 cv
12.3584 53.749 12.5122 54.1758 12.5122 54.7075 cv
12.5122 55.2324 12.3511 55.6523 12.043 55.9673 cv
11.7354 56.2822 11.3228 56.4365 10.8115 56.4365 cv
10.2236 56.4365 9.76855 56.2124 9.46094 55.7646 cv
9.146 55.3164 8.9917 54.6587 8.9917 53.7983 cv
8.9917 52.9932 9.18066 52.3491 9.56592 51.8735 cv
9.94385 51.3975 10.4614 51.1523 11.1055 51.1523 cv
11.2734 51.1523 11.4482 51.1733 11.6304 51.2012 cv
11.8052 51.2363 11.9873 51.2856 12.1831 51.3555 cv
f
13.375 34.3848 mo
14.7246 34.3848 li
f
13.375 34.3848 mo
14.7246 34.3848 li
@
190.026 34.3848 mo
188.676 34.3848 li
f
190.026 34.3848 mo
188.676 34.3848 li
@
10.7485 33.917 mo
10.4194 33.917 10.1606 34.0083 9.97168 34.1831 cv
9.7832 34.3579 9.69189 34.5957 9.69189 34.9033 cv
9.69189 35.2114 9.7832 35.4565 9.97168 35.6313 cv
10.1606 35.8066 10.4194 35.8901 10.7485 35.8901 cv
11.0708 35.8901 11.3296 35.8066 11.5186 35.625 cv
11.7075 35.4497 11.8052 35.2114 11.8052 34.9033 cv
11.8052 34.5957 11.7075 34.3579 11.5254 34.1831 cv
11.3364 34.0083 11.0776 33.917 10.7485 33.917 cv
10.0557 33.623 mo
9.76172 33.5527 9.53076 33.4131 9.36328 33.21 cv
9.19531 33.0068 9.11768 32.7622 9.11768 32.4683 cv
9.11768 32.0625 9.25781 31.7402 9.55176 31.5024 cv
9.83887 31.2646 10.2378 31.1455 10.7485 31.1455 cv
11.2524 31.1455 11.6514 31.2646 11.9453 31.5024 cv
12.2324 31.7402 12.3794 32.0625 12.3794 32.4683 cv
12.3794 32.7622 12.2954 33.0068 12.1274 33.21 cv
11.959 33.4131 11.7354 33.5527 11.4414 33.623 cv
11.7705 33.7002 12.0293 33.854 12.2183 34.0781 cv
12.4004 34.3018 12.498 34.582 12.498 34.9033 cv
12.498 35.4004 12.3442 35.7788 12.0435 36.0376 cv
11.7354 36.3037 11.3086 36.4292 10.7485 36.4292 cv
10.1816 36.4292 9.74805 36.3037 9.44678 36.0376 cv
9.146 35.7788 8.99902 35.4004 8.99902 34.9033 cv
8.99902 34.582 9.09033 34.3018 9.2793 34.0781 cv
9.46094 33.854 9.71973 33.7002 10.0557 33.623 cv
9.80371 32.5313 mo
9.80371 32.7969 9.88086 33.0068 10.0488 33.1543 cv
10.2168 33.3008 10.4478 33.3711 10.7485 33.3711 cv
11.0425 33.3711 11.2734 33.3008 11.4414 33.1543 cv
11.6094 33.0068 11.6934 32.7969 11.6934 32.5313 cv
11.6934 32.2651 11.6094 32.0625 11.4414 31.915 cv
11.2734 31.7686 11.0425 31.6914 10.7485 31.6914 cv
10.4478 31.6914 10.2168 31.7686 10.0488 31.915 cv
9.88086 32.0625 9.80371 32.2651 9.80371 32.5313 cv
f
13.375 14.3774 mo
14.7246 14.3774 li
f
13.375 14.3774 mo
14.7246 14.3774 li
@
190.026 14.3774 mo
188.676 14.3774 li
f
190.026 14.3774 mo
188.676 14.3774 li
@
5.21436 15.7505 mo
6.34082 15.7505 li
6.34082 11.8594 li
5.11621 12.1045 li
5.11621 11.4746 li
6.33398 11.2295 li
7.02734 11.2295 li
7.02734 15.7505 li
8.15381 15.7505 li
8.15381 16.3311 li
5.21436 16.3311 li
5.21436 15.7505 li
cp
f
11.0229 11.6846 mo
10.666 11.6846 10.3999 11.8594 10.2183 12.2095 cv
10.0361 12.5591 9.95215 13.084 9.95215 13.7842 cv
9.95215 14.4834 10.0361 15.0088 10.2183 15.3589 cv
10.3999 15.7085 10.666 15.8833 11.0229 15.8833 cv
11.3799 15.8833 11.646 15.7085 11.8276 15.3589 cv
12.0029 15.0088 12.0938 14.4834 12.0938 13.7842 cv
12.0938 13.084 12.0029 12.5591 11.8276 12.2095 cv
11.646 11.8594 11.3799 11.6846 11.0229 11.6846 cv
11.0229 11.1387 mo
11.5898 11.1387 12.0239 11.3696 12.3315 11.8174 cv
12.6328 12.2725 12.7866 12.9302 12.7866 13.7842 cv
12.7866 14.6445 12.6328 15.3027 12.3315 15.7505 cv
12.0239 16.1982 11.5898 16.4224 11.0229 16.4224 cv
10.4492 16.4224 10.0083 16.1982 9.70752 15.7505 cv
9.40674 15.3027 9.25928 14.6445 9.25928 13.7842 cv
9.25928 12.9302 9.40674 12.2725 9.70752 11.8174 cv
10.0083 11.3696 10.4492 11.1387 11.0229 11.1387 cv
f
.3375 lw
13.375 4.37402 mo
190.026 4.37402 li
@
190.026 124.416 mo
190.026 4.37402 li
@
13.375 124.416 mo
190.026 124.416 li
@
13.375 124.416 mo
13.375 4.37402 li
@
grestore
grestore
gsave
198.052 145.8 mo
392.452 145.8 li
392.452 0 li
198.052 0 li
198.052 145.8 li
cp
clp
198.052 145.8 mo
392.452 145.8 li
392.452 0 li
198.052 0 li
198.052 145.8 li
cp
false sop
0 0 0 0 cmyk
f
211.427 123.542 mo
388.078 123.542 li
388.078 4.37402 li
211.427 4.37402 li
211.427 123.542 li
cp
f
gsave
218.364 114.704 mo
220.549 114.704 li
220.549 112.519 li
218.364 112.519 li
218.364 114.704 li
cp
clp
219.456 114.366 mo
219.656 114.366 219.849 114.287 219.99 114.145 cv
220.132 114.003 220.211 113.811 220.211 113.611 cv
220.211 113.411 220.132 113.22 219.99 113.078 cv
219.849 112.937 219.656 112.856 219.456 112.856 cv
219.256 112.856 219.064 112.937 218.923 113.078 cv
218.781 113.22 218.702 113.411 218.702 113.611 cv
218.702 113.811 218.781 114.003 218.923 114.145 cv
219.064 114.287 219.256 114.366 219.456 114.366 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
219.456 114.366 mo
219.656 114.366 219.849 114.287 219.99 114.145 cv
220.132 114.003 220.211 113.811 220.211 113.611 cv
220.211 113.411 220.132 113.22 219.99 113.078 cv
219.849 112.937 219.656 112.856 219.456 112.856 cv
219.256 112.856 219.064 112.937 218.923 113.078 cv
218.781 113.22 218.702 113.411 218.702 113.611 cv
218.702 113.811 218.781 114.003 218.923 114.145 cv
219.064 114.287 219.256 114.366 219.456 114.366 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
234.424 104.773 mo
236.608 104.773 li
236.608 102.588 li
234.424 102.588 li
234.424 104.773 li
cp
clp
235.516 104.436 mo
235.716 104.436 235.907 104.356 236.049 104.214 cv
236.19 104.073 236.271 103.881 236.271 103.681 cv
236.271 103.481 236.19 103.289 236.049 103.147 cv
235.907 103.005 235.716 102.926 235.516 102.926 cv
235.315 102.926 235.123 103.005 234.981 103.147 cv
234.841 103.289 234.761 103.481 234.761 103.681 cv
234.761 103.881 234.841 104.073 234.981 104.214 cv
235.123 104.356 235.315 104.436 235.516 104.436 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
235.516 104.436 mo
235.716 104.436 235.907 104.356 236.049 104.214 cv
236.19 104.073 236.271 103.881 236.271 103.681 cv
236.271 103.481 236.19 103.289 236.049 103.147 cv
235.907 103.005 235.716 102.926 235.516 102.926 cv
235.315 102.926 235.123 103.005 234.981 103.147 cv
234.841 103.289 234.761 103.481 234.761 103.681 cv
234.761 103.881 234.841 104.073 234.981 104.214 cv
235.123 104.356 235.315 104.436 235.516 104.436 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
250.482 94.8418 mo
252.667 94.8418 li
252.667 92.6582 li
250.482 92.6582 li
250.482 94.8418 li
cp
clp
251.575 94.5049 mo
251.774 94.5049 251.967 94.4253 252.108 94.2842 cv
252.25 94.1421 252.329 93.9502 252.329 93.75 cv
252.329 93.5498 252.25 93.3584 252.108 93.2163 cv
251.967 93.0752 251.774 92.9951 251.575 92.9951 cv
251.375 92.9951 251.183 93.0752 251.041 93.2163 cv
250.899 93.3584 250.82 93.5498 250.82 93.75 cv
250.82 93.9502 250.899 94.1421 251.041 94.2842 cv
251.183 94.4253 251.375 94.5049 251.575 94.5049 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
251.575 94.5049 mo
251.774 94.5049 251.967 94.4253 252.108 94.2842 cv
252.25 94.1421 252.329 93.9502 252.329 93.75 cv
252.329 93.5498 252.25 93.3584 252.108 93.2163 cv
251.967 93.0752 251.774 92.9951 251.575 92.9951 cv
251.375 92.9951 251.183 93.0752 251.041 93.2163 cv
250.899 93.3584 250.82 93.5498 250.82 93.75 cv
250.82 93.9502 250.899 94.1421 251.041 94.2842 cv
251.183 94.4253 251.375 94.5049 251.575 94.5049 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
266.542 84.9116 mo
268.727 84.9116 li
268.727 82.7271 li
266.542 82.7271 li
266.542 84.9116 li
cp
clp
267.634 84.5742 mo
267.834 84.5742 268.026 84.4946 268.168 84.353 cv
268.309 84.2114 268.389 84.0195 268.389 83.8193 cv
268.389 83.6191 268.309 83.4272 268.168 83.2861 cv
268.026 83.1445 267.834 83.0645 267.634 83.0645 cv
267.434 83.0645 267.242 83.1445 267.101 83.2861 cv
266.959 83.4272 266.879 83.6191 266.879 83.8193 cv
266.879 84.0195 266.959 84.2114 267.101 84.353 cv
267.242 84.4946 267.434 84.5742 267.634 84.5742 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
267.634 84.5742 mo
267.834 84.5742 268.026 84.4946 268.168 84.353 cv
268.309 84.2114 268.389 84.0195 268.389 83.8193 cv
268.389 83.6191 268.309 83.4272 268.168 83.2861 cv
268.026 83.1445 267.834 83.0645 267.634 83.0645 cv
267.434 83.0645 267.242 83.1445 267.101 83.2861 cv
266.959 83.4272 266.879 83.6191 266.879 83.8193 cv
266.879 84.0195 266.959 84.2114 267.101 84.353 cv
267.242 84.4946 267.434 84.5742 267.634 84.5742 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
282.602 74.9805 mo
284.785 74.9805 li
284.785 72.7964 li
282.602 72.7964 li
282.602 74.9805 li
cp
clp
283.693 74.6431 mo
283.894 74.6431 284.085 74.564 284.227 74.4224 cv
284.368 74.2808 284.448 74.0889 284.448 73.8887 cv
284.448 73.6885 284.368 73.4966 284.227 73.3555 cv
284.085 73.2134 283.894 73.1338 283.693 73.1338 cv
283.493 73.1338 283.301 73.2134 283.159 73.3555 cv
283.019 73.4966 282.938 73.6885 282.938 73.8887 cv
282.938 74.0889 283.019 74.2808 283.159 74.4224 cv
283.301 74.564 283.493 74.6431 283.693 74.6431 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
283.693 74.6431 mo
283.894 74.6431 284.085 74.564 284.227 74.4224 cv
284.368 74.2808 284.448 74.0889 284.448 73.8887 cv
284.448 73.6885 284.368 73.4966 284.227 73.3555 cv
284.085 73.2134 283.894 73.1338 283.693 73.1338 cv
283.493 73.1338 283.301 73.2134 283.159 73.3555 cv
283.019 73.4966 282.938 73.6885 282.938 73.8887 cv
282.938 74.0889 283.019 74.2808 283.159 74.4224 cv
283.301 74.564 283.493 74.6431 283.693 74.6431 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
298.66 65.0503 mo
300.845 65.0503 li
300.845 62.8657 li
298.66 62.8657 li
298.66 65.0503 li
cp
clp
299.752 64.7129 mo
299.953 64.7129 300.145 64.6333 300.286 64.4917 cv
300.428 64.3501 300.507 64.1582 300.507 63.958 cv
300.507 63.7578 300.428 63.5659 300.286 63.4243 cv
300.145 63.2832 299.953 63.2031 299.752 63.2031 cv
299.552 63.2031 299.36 63.2832 299.219 63.4243 cv
299.077 63.5659 298.998 63.7578 298.998 63.958 cv
298.998 64.1582 299.077 64.3501 299.219 64.4917 cv
299.36 64.6333 299.552 64.7129 299.752 64.7129 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
299.752 64.7129 mo
299.953 64.7129 300.145 64.6333 300.286 64.4917 cv
300.428 64.3501 300.507 64.1582 300.507 63.958 cv
300.507 63.7578 300.428 63.5659 300.286 63.4243 cv
300.145 63.2832 299.953 63.2031 299.752 63.2031 cv
299.552 63.2031 299.36 63.2832 299.219 63.4243 cv
299.077 63.5659 298.998 63.7578 298.998 63.958 cv
298.998 64.1582 299.077 64.3501 299.219 64.4917 cv
299.36 64.6333 299.552 64.7129 299.752 64.7129 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
314.72 55.1196 mo
316.903 55.1196 li
316.903 52.9351 li
314.72 52.9351 li
314.72 55.1196 li
cp
clp
315.812 54.7822 mo
316.012 54.7822 316.204 54.7026 316.345 54.561 cv
316.486 54.4194 316.566 54.2275 316.566 54.0273 cv
316.566 53.8271 316.486 53.6353 316.345 53.4937 cv
316.204 53.3525 316.012 53.2725 315.812 53.2725 cv
315.611 53.2725 315.42 53.3525 315.278 53.4937 cv
315.137 53.6353 315.057 53.8271 315.057 54.0273 cv
315.057 54.2275 315.137 54.4194 315.278 54.561 cv
315.42 54.7026 315.611 54.7822 315.812 54.7822 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
315.812 54.7822 mo
316.012 54.7822 316.204 54.7026 316.345 54.561 cv
316.486 54.4194 316.566 54.2275 316.566 54.0273 cv
316.566 53.8271 316.486 53.6353 316.345 53.4937 cv
316.204 53.3525 316.012 53.2725 315.812 53.2725 cv
315.611 53.2725 315.42 53.3525 315.278 53.4937 cv
315.137 53.6353 315.057 53.8271 315.057 54.0273 cv
315.057 54.2275 315.137 54.4194 315.278 54.561 cv
315.42 54.7026 315.611 54.7822 315.812 54.7822 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
330.778 45.189 mo
332.963 45.189 li
332.963 43.0049 li
330.778 43.0049 li
330.778 45.189 li
cp
clp
331.871 44.8516 mo
332.071 44.8516 332.263 44.772 332.404 44.6304 cv
332.546 44.4888 332.625 44.2969 332.625 44.0967 cv
332.625 43.8965 332.546 43.7046 332.404 43.5635 cv
332.263 43.4214 332.071 43.3423 331.871 43.3423 cv
331.671 43.3423 331.479 43.4214 331.337 43.5635 cv
331.195 43.7046 331.116 43.8965 331.116 44.0967 cv
331.116 44.2969 331.195 44.4888 331.337 44.6304 cv
331.479 44.772 331.671 44.8516 331.871 44.8516 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
331.871 44.8516 mo
332.071 44.8516 332.263 44.772 332.404 44.6304 cv
332.546 44.4888 332.625 44.2969 332.625 44.0967 cv
332.625 43.8965 332.546 43.7046 332.404 43.5635 cv
332.263 43.4214 332.071 43.3423 331.871 43.3423 cv
331.671 43.3423 331.479 43.4214 331.337 43.5635 cv
331.195 43.7046 331.116 43.8965 331.116 44.0967 cv
331.116 44.2969 331.195 44.4888 331.337 44.6304 cv
331.479 44.772 331.671 44.8516 331.871 44.8516 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
346.838 35.2578 mo
349.022 35.2578 li
349.022 33.0737 li
346.838 33.0737 li
346.838 35.2578 li
cp
clp
347.93 34.9209 mo
348.13 34.9209 348.322 34.8408 348.464 34.6997 cv
348.605 34.5581 348.685 34.3662 348.685 34.166 cv
348.685 33.9658 348.605 33.7739 348.464 33.6323 cv
348.322 33.4907 348.13 33.4116 347.93 33.4116 cv
347.729 33.4116 347.538 33.4907 347.396 33.6323 cv
347.255 33.7739 347.176 33.9658 347.176 34.166 cv
347.176 34.3662 347.255 34.5581 347.396 34.6997 cv
347.538 34.8408 347.729 34.9209 347.93 34.9209 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
347.93 34.9209 mo
348.13 34.9209 348.322 34.8408 348.464 34.6997 cv
348.605 34.5581 348.685 34.3662 348.685 34.166 cv
348.685 33.9658 348.605 33.7739 348.464 33.6323 cv
348.322 33.4907 348.13 33.4116 347.93 33.4116 cv
347.729 33.4116 347.538 33.4907 347.396 33.6323 cv
347.255 33.7739 347.176 33.9658 347.176 34.166 cv
347.176 34.3662 347.255 34.5581 347.396 34.6997 cv
347.538 34.8408 347.729 34.9209 347.93 34.9209 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
362.897 25.3276 mo
365.081 25.3276 li
365.081 23.1431 li
362.897 23.1431 li
362.897 25.3276 li
cp
clp
363.989 24.9902 mo
364.189 24.9902 364.381 24.9106 364.522 24.769 cv
364.664 24.6274 364.743 24.4355 364.743 24.2354 cv
364.743 24.0352 364.664 23.8433 364.522 23.7017 cv
364.381 23.5605 364.189 23.4805 363.989 23.4805 cv
363.789 23.4805 363.597 23.5605 363.456 23.7017 cv
363.313 23.8433 363.234 24.0352 363.234 24.2354 cv
363.234 24.4355 363.313 24.6274 363.456 24.769 cv
363.597 24.9106 363.789 24.9902 363.989 24.9902 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
363.989 24.9902 mo
364.189 24.9902 364.381 24.9106 364.522 24.769 cv
364.664 24.6274 364.743 24.4355 364.743 24.2354 cv
364.743 24.0352 364.664 23.8433 364.522 23.7017 cv
364.381 23.5605 364.189 23.4805 363.989 23.4805 cv
363.789 23.4805 363.597 23.5605 363.456 23.7017 cv
363.313 23.8433 363.234 24.0352 363.234 24.2354 cv
363.234 24.4355 363.313 24.6274 363.456 24.769 cv
363.597 24.9106 363.789 24.9902 363.989 24.9902 cv
cp
0 0 0 1 cmyk
@
grestore
gsave
378.956 15.397 mo
381.141 15.397 li
381.141 13.2124 li
378.956 13.2124 li
378.956 15.397 li
cp
clp
380.048 15.0596 mo
380.249 15.0596 380.44 14.98 380.582 14.8384 cv
380.724 14.6968 380.803 14.5049 380.803 14.3047 cv
380.803 14.1045 380.724 13.9131 380.582 13.771 cv
380.44 13.6299 380.249 13.5498 380.048 13.5498 cv
379.848 13.5498 379.656 13.6299 379.515 13.771 cv
379.373 13.9131 379.294 14.1045 379.294 14.3047 cv
379.294 14.5049 379.373 14.6968 379.515 14.8384 cv
379.656 14.98 379.848 15.0596 380.048 15.0596 cv
.884 .769 0 0 cmyk
f
.3375 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
380.048 15.0596 mo
380.249 15.0596 380.44 14.98 380.582 14.8384 cv
380.724 14.6968 380.803 14.5049 380.803 14.3047 cv
380.803 14.1045 380.724 13.9131 380.582 13.771 cv
380.44 13.6299 380.249 13.5498 380.048 13.5498 cv
379.848 13.5498 379.656 13.6299 379.515 13.771 cv
379.373 13.9131 379.294 14.1045 379.294 14.3047 cv
379.294 14.5049 379.373 14.6968 379.515 14.8384 cv
379.656 14.98 379.848 15.0596 380.048 15.0596 cv
cp
0 0 0 1 cmyk
@
grestore
219.456 123.542 mo
219.456 122.192 li
219.456 123.542 li
cp
0 0 0 1 cmyk
f
.16875 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
219.456 123.542 mo
219.456 122.192 li
@
219.456 5.72363 mo
219.456 4.37402 li
219.456 5.72363 li
cp
f
219.456 4.37402 mo
219.456 5.72412 li
@
gsave
198.052 145.8 mo
392.452 145.8 li
392.452 0 li
198.052 0 li
198.052 145.8 li
cp
clp
219.918 125.628 mo
219.561 125.628 219.295 125.804 219.113 126.154 cv
218.931 126.504 218.848 127.029 218.848 127.729 cv
218.848 128.429 218.931 128.954 219.113 129.304 cv
219.295 129.654 219.561 129.828 219.918 129.828 cv
220.275 129.828 220.541 129.654 220.723 129.304 cv
220.897 128.954 220.988 128.429 220.988 127.729 cv
220.988 127.029 220.897 126.504 220.723 126.154 cv
220.541 125.804 220.275 125.628 219.918 125.628 cv
219.918 125.083 mo
220.484 125.083 220.919 125.314 221.227 125.763 cv
221.527 126.217 221.682 126.875 221.682 127.729 cv
221.682 128.589 221.527 129.248 221.227 129.695 cv
220.919 130.143 220.484 130.367 219.918 130.367 cv
219.344 130.367 218.903 130.143 218.603 129.695 cv
218.301 129.248 218.154 128.589 218.154 127.729 cv
218.154 126.875 218.301 126.217 218.603 125.763 cv
218.903 125.314 219.344 125.083 219.918 125.083 cv
f
251.575 123.542 mo
251.575 122.192 li
f
251.575 123.542 mo
251.575 122.192 li
@
251.575 4.37402 mo
251.575 5.72412 li
f
251.575 4.37402 mo
251.575 5.72412 li
@
251.297 129.695 mo
253.704 129.695 li
253.704 130.277 li
250.464 130.277 li
250.464 129.695 li
250.723 129.429 251.08 129.066 251.535 128.604 cv
251.982 128.149 252.27 127.855 252.389 127.722 cv
252.612 127.477 252.767 127.267 252.851 127.091 cv
252.935 126.923 252.983 126.75 252.983 126.582 cv
252.983 126.315 252.886 126.091 252.696 125.923 cv
252.508 125.755 252.263 125.665 251.955 125.665 cv
251.737 125.665 251.507 125.707 251.269 125.777 cv
251.031 125.853 250.771 125.965 250.499 126.119 cv
250.499 125.419 li
250.779 125.308 251.038 125.224 251.275 125.167 cv
251.514 125.111 251.737 125.083 251.94 125.083 cv
252.466 125.083 252.886 125.216 253.2 125.482 cv
253.516 125.748 253.676 126.098 253.676 126.539 cv
253.676 126.75 253.635 126.953 253.558 127.134 cv
253.48 127.324 253.341 127.546 253.131 127.798 cv
253.074 127.869 252.893 128.058 252.584 128.373 cv
252.276 128.688 251.85 129.128 251.297 129.695 cv
f
283.693 123.542 mo
283.693 122.192 li
f
283.693 123.542 mo
283.693 122.192 li
@
283.693 4.37402 mo
283.693 5.72412 li
f
283.693 4.37402 mo
283.693 5.72412 li
@
284.479 125.777 mo
282.736 128.499 li
284.479 128.499 li
284.479 125.777 li
284.298 125.174 mo
285.165 125.174 li
285.165 128.499 li
285.894 128.499 li
285.894 129.072 li
285.165 129.072 li
285.165 130.277 li
284.479 130.277 li
284.479 129.072 li
282.178 129.072 li
282.178 128.408 li
284.298 125.174 li
cp
f
315.812 123.542 mo
315.812 122.192 li
f
315.812 123.542 mo
315.812 122.192 li
@
315.812 4.37402 mo
315.812 5.72412 li
f
315.812 4.37402 mo
315.812 5.72412 li
@
316.359 127.449 mo
316.052 127.449 315.807 127.561 315.625 127.771 cv
315.443 127.98 315.353 128.275 315.353 128.638 cv
315.353 129.009 315.443 129.303 315.625 129.513 cv
315.807 129.723 316.052 129.829 316.359 129.829 cv
316.668 129.829 316.913 129.723 317.095 129.513 cv
317.276 129.303 317.367 129.009 317.367 128.638 cv
317.367 128.275 317.276 127.98 317.095 127.771 cv
316.913 127.561 316.668 127.449 316.359 127.449 cv
317.731 125.287 mo
317.731 125.916 li
317.557 125.832 317.381 125.769 317.207 125.727 cv
317.024 125.685 316.85 125.665 316.682 125.665 cv
316.22 125.665 315.87 125.818 315.632 126.126 cv
315.394 126.434 315.254 126.904 315.226 127.519 cv
315.359 127.323 315.527 127.169 315.729 127.064 cv
315.933 126.958 316.156 126.904 316.401 126.904 cv
316.913 126.904 317.318 127.064 317.612 127.373 cv
317.906 127.68 318.061 128.107 318.061 128.638 cv
318.061 129.164 317.899 129.583 317.591 129.898 cv
317.283 130.212 316.87 130.367 316.359 130.367 cv
315.771 130.367 315.316 130.143 315.009 129.695 cv
314.694 129.248 314.54 128.589 314.54 127.729 cv
314.54 126.923 314.729 126.281 315.114 125.804 cv
315.492 125.328 316.01 125.083 316.653 125.083 cv
316.821 125.083 316.997 125.105 317.179 125.132 cv
317.354 125.167 317.535 125.216 317.731 125.287 cv
f
347.93 123.542 mo
347.93 122.192 li
f
347.93 123.542 mo
347.93 122.192 li
@
347.93 4.37402 mo
347.93 5.72412 li
f
347.93 4.37402 mo
347.93 5.72412 li
@
348.404 127.855 mo
348.075 127.855 347.817 127.946 347.628 128.121 cv
347.439 128.296 347.348 128.534 347.348 128.841 cv
347.348 129.15 347.439 129.394 347.628 129.57 cv
347.817 129.745 348.075 129.829 348.404 129.829 cv
348.727 129.829 348.985 129.745 349.175 129.562 cv
349.363 129.388 349.461 129.15 349.461 128.841 cv
349.461 128.534 349.363 128.296 349.182 128.121 cv
348.992 127.946 348.733 127.855 348.404 127.855 cv
347.712 127.561 mo
347.418 127.492 347.188 127.351 347.02 127.148 cv
346.851 126.945 346.774 126.701 346.774 126.406 cv
346.774 126 346.914 125.678 347.208 125.441 cv
347.495 125.203 347.894 125.083 348.404 125.083 cv
348.908 125.083 349.308 125.203 349.602 125.441 cv
349.889 125.678 350.035 126 350.035 126.406 cv
350.035 126.701 349.951 126.945 349.783 127.148 cv
349.615 127.351 349.392 127.492 349.098 127.561 cv
349.426 127.638 349.686 127.792 349.874 128.015 cv
350.057 128.24 350.154 128.519 350.154 128.841 cv
350.154 129.338 350 129.716 349.699 129.976 cv
349.392 130.242 348.965 130.367 348.404 130.367 cv
347.838 130.367 347.404 130.242 347.104 129.976 cv
346.802 129.716 346.655 129.338 346.655 128.841 cv
346.655 128.519 346.746 128.24 346.936 128.015 cv
347.117 127.792 347.376 127.638 347.712 127.561 cv
347.46 126.469 mo
347.46 126.735 347.537 126.945 347.705 127.091 cv
347.873 127.239 348.104 127.309 348.404 127.309 cv
348.698 127.309 348.93 127.239 349.098 127.091 cv
349.266 126.945 349.35 126.735 349.35 126.469 cv
349.35 126.203 349.266 126 349.098 125.853 cv
348.93 125.707 348.698 125.628 348.404 125.628 cv
348.104 125.628 347.873 125.707 347.705 125.853 cv
347.537 126 347.46 126.203 347.46 126.469 cv
f
380.049 123.542 mo
380.049 122.192 li
f
380.049 123.542 mo
380.049 122.192 li
@
380.049 4.37402 mo
380.049 5.72412 li
f
380.049 4.37402 mo
380.049 5.72412 li
@
377.077 129.695 mo
378.204 129.695 li
378.204 125.804 li
376.979 126.048 li
376.979 125.419 li
378.197 125.174 li
378.89 125.174 li
378.89 129.695 li
380.017 129.695 li
380.017 130.277 li
377.077 130.277 li
377.077 129.695 li
cp
f
382.886 125.628 mo
382.529 125.628 382.263 125.804 382.081 126.154 cv
381.899 126.504 381.815 127.029 381.815 127.729 cv
381.815 128.429 381.899 128.954 382.081 129.304 cv
382.263 129.654 382.529 129.828 382.886 129.828 cv
383.243 129.828 383.509 129.654 383.69 129.304 cv
383.865 128.954 383.957 128.429 383.957 127.729 cv
383.957 127.029 383.865 126.504 383.69 126.154 cv
383.509 125.804 383.243 125.628 382.886 125.628 cv
382.886 125.083 mo
383.453 125.083 383.887 125.314 384.194 125.763 cv
384.495 126.217 384.649 126.875 384.649 127.729 cv
384.649 128.589 384.495 129.248 384.194 129.695 cv
383.887 130.143 383.453 130.367 382.886 130.367 cv
382.312 130.367 381.871 130.143 381.57 129.695 cv
381.27 129.248 381.122 128.589 381.122 127.729 cv
381.122 126.875 381.27 126.217 381.57 125.763 cv
381.871 125.314 382.312 125.083 382.886 125.083 cv
f
291.7 138.297 mo
291.7 138.052 li
291.854 138.052 291.987 138.044 292.093 138.017 cv
292.19 137.99 292.246 137.925 292.246 137.828 cv
292.246 134.154 li
292.246 134.029 292.226 133.937 292.19 133.88 cv
292.148 133.826 292.1 133.796 292.029 133.783 cv
291.96 133.769 291.848 133.761 291.7 133.761 cv
291.7 133.517 li
292.736 133.44 li
292.736 137.828 li
292.736 137.925 292.785 137.99 292.891 138.017 cv
292.988 138.044 293.121 138.052 293.282 138.052 cv
293.282 138.297 li
291.7 138.297 li
f
295.171 138.367 mo
294.891 138.367 294.625 138.297 294.387 138.158 cv
294.149 138.017 293.96 137.828 293.82 137.59 cv
293.68 137.353 293.617 137.093 293.617 136.806 cv
293.617 136.597 293.652 136.386 293.729 136.191 cv
293.806 135.996 293.918 135.813 294.058 135.659 cv
294.198 135.505 294.365 135.378 294.555 135.294 cv
294.744 135.21 294.946 135.162 295.171 135.162 cv
295.458 135.162 295.717 135.238 295.954 135.392 cv
296.192 135.546 296.374 135.75 296.514 136.001 cv
296.647 136.253 296.718 136.527 296.718 136.806 cv
296.718 137.086 296.647 137.353 296.508 137.59 cv
296.367 137.828 296.186 138.017 295.947 138.158 cv
295.71 138.297 295.45 138.367 295.171 138.367 cv
295.171 138.171 mo
295.541 138.171 295.794 138.039 295.92 137.765 cv
296.045 137.5 296.108 137.15 296.108 136.73 cv
296.108 136.5 296.095 136.302 296.066 136.149 cv
296.038 135.996 295.989 135.855 295.905 135.729 cv
295.85 135.652 295.786 135.582 295.702 135.526 cv
295.618 135.47 295.534 135.421 295.45 135.392 cv
295.359 135.365 295.269 135.343 295.171 135.343 cv
295.023 135.343 294.884 135.378 294.758 135.442 cv
294.625 135.511 294.513 135.603 294.429 135.729 cv
294.338 135.861 294.282 136.009 294.261 136.163 cv
294.232 136.324 294.226 136.513 294.226 136.73 cv
294.226 136.996 294.247 137.226 294.296 137.437 cv
294.338 137.646 294.429 137.822 294.568 137.96 cv
294.709 138.101 294.904 138.171 295.171 138.171 cv
f
297.116 138.835 mo
297.116 138.667 297.172 138.521 297.298 138.402 cv
297.417 138.283 297.557 138.199 297.725 138.143 cv
297.627 138.074 297.557 137.99 297.508 137.877 cv
297.459 137.773 297.438 137.66 297.438 137.535 cv
297.438 137.318 297.508 137.121 297.647 136.954 cv
297.431 136.744 297.326 136.505 297.326 136.232 cv
297.326 136.093 297.354 135.953 297.417 135.827 cv
297.479 135.701 297.57 135.589 297.683 135.491 cv
297.795 135.4 297.914 135.33 298.054 135.281 cv
298.187 135.232 298.327 135.204 298.474 135.204 cv
298.754 135.204 298.998 135.288 299.223 135.449 cv
299.32 135.351 299.432 135.267 299.565 135.21 cv
299.691 135.156 299.831 135.126 299.971 135.126 cv
300.069 135.126 300.153 135.169 300.217 135.239 cv
300.279 135.309 300.314 135.393 300.314 135.491 cv
300.314 135.546 300.286 135.603 300.244 135.644 cv
300.202 135.687 300.153 135.708 300.098 135.708 cv
300.034 135.708 299.985 135.687 299.943 135.644 cv
299.901 135.603 299.88 135.546 299.88 135.491 cv
299.88 135.407 299.908 135.351 299.964 135.309 cv
299.72 135.309 299.51 135.393 299.342 135.56 cv
299.426 135.644 299.488 135.75 299.544 135.869 cv
299.594 135.995 299.621 136.114 299.621 136.232 cv
299.621 136.435 299.565 136.618 299.453 136.771 cv
299.342 136.925 299.201 137.051 299.026 137.136 cv
298.845 137.226 298.662 137.268 298.474 137.268 cv
298.215 137.268 297.983 137.199 297.773 137.058 cv
297.704 137.156 297.676 137.254 297.676 137.367 cv
297.676 137.493 297.711 137.605 297.795 137.695 cv
297.879 137.787 297.977 137.828 298.103 137.828 cv
298.677 137.828 li
298.957 137.828 299.201 137.857 299.426 137.905 cv
299.649 137.96 299.831 138.059 299.985 138.207 cv
300.139 138.346 300.217 138.556 300.217 138.835 cv
300.217 139.039 300.125 139.207 299.957 139.347 cv
299.782 139.48 299.572 139.578 299.334 139.64 cv
299.097 139.697 298.872 139.732 298.67 139.732 cv
298.459 139.732 298.235 139.697 297.998 139.64 cv
297.753 139.578 297.543 139.48 297.375 139.347 cv
297.2 139.207 297.116 139.039 297.116 138.835 cv
297.508 138.835 mo
297.508 138.99 297.57 139.123 297.697 139.228 cv
297.823 139.333 297.977 139.41 298.159 139.466 cv
298.341 139.515 298.509 139.542 298.67 139.542 cv
298.823 139.542 298.991 139.515 299.174 139.466 cv
299.355 139.41 299.51 139.333 299.636 139.228 cv
299.761 139.123 299.824 138.99 299.824 138.835 cv
299.824 138.591 299.712 138.437 299.488 138.367 cv
299.265 138.297 298.991 138.262 298.677 138.262 cv
298.103 138.262 li
297.99 138.262 297.893 138.291 297.802 138.332 cv
297.711 138.38 297.641 138.451 297.585 138.548 cv
297.529 138.64 297.508 138.738 297.508 138.835 cv
298.474 137.08 mo
298.866 137.08 299.068 136.8 299.068 136.232 cv
299.068 135.995 299.026 135.792 298.942 135.63 cv
298.858 135.476 298.697 135.393 298.474 135.393 cv
298.243 135.393 298.089 135.476 298.005 135.63 cv
297.921 135.792 297.879 135.995 297.879 136.232 cv
297.879 136.386 297.893 136.527 297.928 136.652 cv
297.955 136.779 298.019 136.883 298.103 136.96 cv
298.187 137.044 298.313 137.08 298.474 137.08 cv
f
300.664 140.083 mo
300.664 139.951 li
300.664 139.945 300.664 139.935 300.674 139.925 cv
301.433 139.083 li
301.545 138.96 301.639 138.857 301.712 138.769 cv
301.781 138.686 301.854 138.588 301.923 138.48 cv
301.991 138.373 302.05 138.26 302.09 138.142 cv
302.129 138.03 302.153 137.908 302.153 137.78 cv
302.153 137.648 302.129 137.521 302.079 137.398 cv
302.031 137.275 301.957 137.177 301.859 137.104 cv
301.761 137.031 301.639 136.992 301.501 136.992 cv
301.359 136.992 301.232 137.035 301.119 137.119 cv
301.002 137.207 300.924 137.314 300.88 137.452 cv
300.89 137.452 300.909 137.447 300.934 137.447 cv
301.002 137.447 301.065 137.472 301.119 137.521 cv
301.168 137.57 301.198 137.632 301.198 137.711 cv
301.198 137.79 301.168 137.853 301.119 137.902 cv
301.065 137.957 301.002 137.98 300.934 137.98 cv
300.854 137.98 300.791 137.957 300.742 137.902 cv
300.688 137.849 300.664 137.785 300.664 137.711 cv
300.664 137.593 300.684 137.476 300.732 137.369 cv
300.776 137.261 300.84 137.167 300.928 137.08 cv
301.017 136.996 301.114 136.933 301.222 136.888 cv
301.33 136.843 301.447 136.82 301.575 136.82 cv
301.761 136.82 301.933 136.859 302.094 136.937 cv
302.256 137.015 302.384 137.128 302.477 137.275 cv
302.569 137.422 302.618 137.589 302.618 137.78 cv
302.618 137.921 302.584 138.054 302.525 138.181 cv
302.462 138.309 302.384 138.427 302.285 138.529 cv
302.188 138.637 302.064 138.754 301.913 138.886 cv
301.761 139.019 301.663 139.107 301.614 139.152 cv
301.061 139.685 li
301.531 139.685 li
301.761 139.685 301.952 139.685 302.109 139.681 cv
302.266 139.681 302.349 139.671 302.358 139.662 cv
302.398 139.623 302.438 139.47 302.477 139.21 cv
302.618 139.21 li
302.481 140.083 li
300.664 140.083 li
f
304.464 138.094 mo
304.548 138.164 304.659 138.193 304.813 138.193 cv
304.953 138.193 305.087 138.123 305.198 137.982 cv
305.311 137.842 305.388 137.689 305.43 137.521 cv
305.744 136.282 li
305.793 136.058 305.821 135.904 305.821 135.82 cv
305.821 135.708 305.786 135.603 305.724 135.519 cv
305.653 135.435 305.563 135.386 305.45 135.386 cv
305.304 135.386 305.163 135.435 305.037 135.526 cv
304.905 135.625 304.793 135.743 304.709 135.882 cv
304.617 136.023 304.555 136.169 304.52 136.31 cv
304.506 136.337 304.492 136.351 304.464 136.351 cv
304.38 136.351 li
304.338 136.351 304.323 136.331 304.323 136.289 cv
304.323 136.267 li
304.366 136.099 304.442 135.931 304.555 135.763 cv
304.667 135.595 304.8 135.462 304.961 135.358 cv
305.115 135.259 305.282 135.205 305.465 135.205 cv
305.633 135.205 305.786 135.253 305.927 135.343 cv
306.066 135.435 306.164 135.56 306.22 135.714 cv
306.297 135.575 306.396 135.449 306.521 135.351 cv
306.647 135.253 306.78 135.205 306.934 135.205 cv
307.032 135.205 307.137 135.224 307.242 135.259 cv
307.347 135.294 307.431 135.351 307.501 135.421 cv
307.564 135.491 307.599 135.582 307.599 135.694 cv
307.599 135.812 307.557 135.917 307.48 136.001 cv
307.403 136.085 307.305 136.127 307.193 136.127 cv
307.116 136.127 307.053 136.107 307.004 136.058 cv
306.948 136.008 306.927 135.946 306.927 135.876 cv
306.927 135.778 306.955 135.694 307.025 135.617 cv
307.095 135.546 307.172 135.498 307.27 135.484 cv
307.186 135.421 307.067 135.386 306.92 135.386 cv
306.766 135.386 306.64 135.457 306.528 135.595 cv
306.416 135.736 306.339 135.89 306.297 136.058 cv
305.989 137.296 li
305.934 137.485 305.912 137.639 305.912 137.758 cv
305.912 137.877 305.94 137.982 306.01 138.066 cv
306.08 138.15 306.172 138.193 306.283 138.193 cv
306.5 138.193 306.696 138.101 306.864 137.905 cv
307.032 137.708 307.151 137.5 307.207 137.269 cv
307.214 137.24 307.235 137.226 307.263 137.226 cv
307.347 137.226 li
307.361 137.226 307.375 137.234 307.389 137.248 cv
307.403 137.261 307.41 137.275 307.41 137.289 cv
307.41 137.296 307.403 137.303 307.403 137.31 cv
307.333 137.59 307.193 137.835 306.983 138.044 cv
306.773 138.261 306.535 138.367 306.27 138.367 cv
306.094 138.367 305.94 138.318 305.8 138.234 cv
305.66 138.15 305.569 138.024 305.514 137.863 cv
305.437 138.003 305.331 138.123 305.205 138.22 cv
305.079 138.318 304.939 138.367 304.8 138.367 cv
304.695 138.367 304.59 138.346 304.485 138.318 cv
304.38 138.291 304.296 138.234 304.232 138.164 cv
304.163 138.094 304.135 137.997 304.135 137.884 cv
304.135 137.773 304.17 137.674 304.247 137.583 cv
304.316 137.5 304.414 137.451 304.533 137.451 cv
304.604 137.451 304.667 137.478 304.723 137.521 cv
304.778 137.57 304.807 137.632 304.807 137.703 cv
304.807 137.8 304.771 137.891 304.709 137.96 cv
304.639 138.031 304.562 138.08 304.464 138.094 cv
f
211.427 113.611 mo
212.776 113.611 li
f
211.427 113.611 mo
212.776 113.611 li
@
388.078 113.611 mo
386.728 113.611 li
f
388.078 113.611 mo
386.728 113.611 li
@
208.774 110.918 mo
208.417 110.918 208.151 111.093 207.97 111.443 cv
207.787 111.793 207.704 112.318 207.704 113.018 cv
207.704 113.718 207.787 114.243 207.97 114.593 cv
208.151 114.942 208.417 115.117 208.774 115.117 cv
209.131 115.117 209.397 114.942 209.579 114.593 cv
209.754 114.243 209.845 113.718 209.845 113.018 cv
209.845 112.318 209.754 111.793 209.579 111.443 cv
209.397 111.093 209.131 110.918 208.774 110.918 cv
208.774 110.373 mo
209.341 110.373 209.775 110.604 210.083 111.051 cv
210.384 111.506 210.538 112.164 210.538 113.018 cv
210.538 113.878 210.384 114.537 210.083 114.984 cv
209.775 115.432 209.341 115.656 208.774 115.656 cv
208.2 115.656 207.76 115.432 207.459 114.984 cv
207.157 114.537 207.011 113.878 207.011 113.018 cv
207.011 112.164 207.157 111.506 207.459 111.051 cv
207.76 110.604 208.2 110.373 208.774 110.373 cv
f
211.427 93.75 mo
212.776 93.75 li
f
211.427 93.75 mo
212.776 93.75 li
@
388.078 93.75 mo
386.728 93.75 li
f
388.078 93.75 mo
386.728 93.75 li
@
208.177 95.123 mo
210.585 95.123 li
210.585 95.7036 li
207.345 95.7036 li
207.345 95.123 li
207.604 94.8569 207.96 94.4932 208.415 94.0313 cv
208.863 93.5762 209.149 93.2827 209.269 93.1494 cv
209.493 92.9048 209.646 92.6948 209.731 92.5195 cv
209.815 92.3516 209.864 92.1768 209.864 92.0088 cv
209.864 91.7427 209.766 91.5186 209.577 91.3506 cv
209.388 91.1831 209.144 91.0918 208.835 91.0918 cv
208.618 91.0918 208.387 91.1338 208.149 91.2041 cv
207.911 91.2808 207.652 91.3931 207.379 91.5469 cv
207.379 90.8467 li
207.659 90.7354 207.918 90.6514 208.156 90.5952 cv
208.395 90.5391 208.618 90.5112 208.821 90.5112 cv
209.346 90.5112 209.766 90.644 210.081 90.9102 cv
210.396 91.1758 210.557 91.5259 210.557 91.9668 cv
210.557 92.1768 210.515 92.3794 210.438 92.5615 cv
210.36 92.7505 210.221 92.9746 210.011 93.2266 cv
209.955 93.2964 209.772 93.4854 209.465 93.8003 cv
209.157 94.1152 208.73 94.5562 208.177 95.123 cv
f
211.427 73.8887 mo
212.776 73.8887 li
f
211.427 73.8887 mo
212.776 73.8887 li
@
388.078 73.8887 mo
386.728 73.8887 li
f
388.078 73.8887 mo
386.728 73.8887 li
@
209.004 71.3428 mo
207.262 74.0649 li
209.004 74.0649 li
209.004 71.3428 li
208.822 70.7407 mo
209.69 70.7407 li
209.69 74.0649 li
210.418 74.0649 li
210.418 74.6392 li
209.69 74.6392 li
209.69 75.8423 li
209.004 75.8423 li
209.004 74.6392 li
206.702 74.6392 li
206.702 73.9736 li
208.822 70.7407 li
cp
f
211.427 54.0273 mo
212.776 54.0273 li
f
211.427 54.0273 mo
212.776 54.0273 li
@
388.078 54.0273 mo
386.728 54.0273 li
f
388.078 54.0273 mo
386.728 54.0273 li
@
208.863 53.1538 mo
208.556 53.1538 208.311 53.2656 208.129 53.4756 cv
207.947 53.6855 207.855 53.9795 207.855 54.3438 cv
207.855 54.7144 207.947 55.0083 208.129 55.2183 cv
208.311 55.4282 208.556 55.5332 208.863 55.5332 cv
209.171 55.5332 209.416 55.4282 209.599 55.2183 cv
209.78 55.0083 209.871 54.7144 209.871 54.3438 cv
209.871 53.9795 209.78 53.6855 209.599 53.4756 cv
209.416 53.2656 209.171 53.1538 208.863 53.1538 cv
210.235 50.9912 mo
210.235 51.6211 li
210.061 51.5371 209.885 51.4741 209.71 51.4321 cv
209.528 51.3901 209.354 51.3691 209.186 51.3691 cv
208.724 51.3691 208.373 51.5229 208.136 51.8311 cv
207.897 52.1392 207.758 52.6079 207.729 53.2241 cv
207.863 53.0278 208.03 52.8735 208.233 52.7686 cv
208.437 52.6641 208.66 52.6079 208.905 52.6079 cv
209.416 52.6079 209.822 52.7686 210.116 53.0771 cv
210.41 53.3848 210.564 53.8115 210.564 54.3438 cv
210.564 54.8687 210.403 55.2886 210.095 55.6035 cv
209.787 55.9185 209.375 56.0723 208.863 56.0723 cv
208.275 56.0723 207.82 55.8481 207.513 55.4004 cv
207.198 54.9521 207.044 54.2944 207.044 53.4341 cv
207.044 52.6289 207.232 51.9854 207.618 51.5093 cv
207.996 51.0332 208.514 50.7881 209.157 50.7881 cv
209.325 50.7881 209.5 50.8091 209.683 50.8374 cv
209.857 50.8721 210.039 50.9214 210.235 50.9912 cv
f
211.427 34.166 mo
212.776 34.166 li
f
211.427 34.166 mo
212.776 34.166 li
@
388.078 34.166 mo
386.728 34.166 li
f
388.078 34.166 mo
386.728 34.166 li
@
208.801 33.6982 mo
208.472 33.6982 208.213 33.7896 208.023 33.9644 cv
207.835 34.1392 207.744 34.377 207.744 34.6855 cv
207.744 34.9932 207.835 35.2383 208.023 35.4131 cv
208.213 35.5879 208.472 35.6719 208.801 35.6719 cv
209.123 35.6719 209.382 35.5879 209.57 35.4063 cv
209.76 35.231 209.857 34.9932 209.857 34.6855 cv
209.857 34.377 209.76 34.1392 209.577 33.9644 cv
209.389 33.7896 209.13 33.6982 208.801 33.6982 cv
208.107 33.4043 mo
207.813 33.3345 207.583 33.1943 207.415 32.9917 cv
207.247 32.7886 207.17 32.5439 207.17 32.25 cv
207.17 31.8438 207.31 31.522 207.604 31.2842 cv
207.891 31.0459 208.29 30.9272 208.801 30.9272 cv
209.305 30.9272 209.703 31.0459 209.997 31.2842 cv
210.284 31.522 210.432 31.8438 210.432 32.25 cv
210.432 32.5439 210.348 32.7886 210.18 32.9917 cv
210.011 33.1943 209.787 33.3345 209.493 33.4043 cv
209.822 33.4814 210.081 33.6353 210.271 33.8594 cv
210.452 34.083 210.55 34.3633 210.55 34.6855 cv
210.55 35.1821 210.396 35.5601 210.096 35.8188 cv
209.787 36.085 209.36 36.2109 208.801 36.2109 cv
208.233 36.2109 207.8 36.085 207.499 35.8188 cv
207.198 35.5601 207.051 35.1821 207.051 34.6855 cv
207.051 34.3633 207.143 34.083 207.331 33.8594 cv
207.513 33.6353 207.771 33.4814 208.107 33.4043 cv
207.855 32.3125 mo
207.855 32.5786 207.933 32.7886 208.101 32.9355 cv
208.269 33.0825 208.5 33.1523 208.801 33.1523 cv
209.095 33.1523 209.325 33.0825 209.493 32.9355 cv
209.661 32.7886 209.745 32.5786 209.745 32.3125 cv
209.745 32.0469 209.661 31.8438 209.493 31.6968 cv
209.325 31.5498 209.095 31.4731 208.801 31.4731 cv
208.5 31.4731 208.269 31.5498 208.101 31.6968 cv
207.933 31.8438 207.855 32.0469 207.855 32.3125 cv
f
211.427 14.3047 mo
212.776 14.3047 li
f
211.427 14.3047 mo
212.776 14.3047 li
@
388.078 14.3047 mo
386.728 14.3047 li
f
388.078 14.3047 mo
386.728 14.3047 li
@
203.267 15.6777 mo
204.393 15.6777 li
204.393 11.7866 li
203.168 12.0317 li
203.168 11.4014 li
204.386 11.1563 li
205.079 11.1563 li
205.079 15.6777 li
206.206 15.6777 li
206.206 16.2583 li
203.267 16.2583 li
203.267 15.6777 li
cp
f
209.075 11.6113 mo
208.718 11.6113 208.452 11.7866 208.271 12.1367 cv
208.088 12.4863 208.004 13.0112 208.004 13.7109 cv
208.004 14.4106 208.088 14.936 208.271 15.2861 cv
208.452 15.6357 208.718 15.8105 209.075 15.8105 cv
209.432 15.8105 209.698 15.6357 209.88 15.2861 cv
210.055 14.936 210.146 14.4106 210.146 13.7109 cv
210.146 13.0112 210.055 12.4863 209.88 12.1367 cv
209.698 11.7866 209.432 11.6113 209.075 11.6113 cv
209.075 11.0659 mo
209.642 11.0659 210.076 11.2969 210.384 11.7446 cv
210.685 12.1992 210.839 12.8574 210.839 13.7109 cv
210.839 14.5718 210.685 15.23 210.384 15.6777 cv
210.076 16.1255 209.642 16.3496 209.075 16.3496 cv
208.501 16.3496 208.061 16.1255 207.76 15.6777 cv
207.459 15.23 207.312 14.5718 207.312 13.7109 cv
207.312 12.8574 207.459 12.1992 207.76 11.7446 cv
208.061 11.2969 208.501 11.0659 209.075 11.0659 cv
f
.3375 lw
211.427 4.37402 mo
388.078 4.37402 li
@
388.078 123.542 mo
388.078 4.37402 li
@
211.427 123.542 mo
388.078 123.542 li
@
211.427 123.542 mo
211.427 4.37402 li
@
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (008x008.eps)%%CreationDate: 27/05/15 9:58 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6Bj3>QdkL_!!WE2"W$k"$Mn=SNn,"^EVfIZFJ9,";Is?G>PKMJ@VH70nBAPZ2S7<,1e!3O*V,F:gP&,<JrR7c(>47sJs":0[%8PZ=`P1FG4Xikl;S)%eKeU-.."\[C=>euX6$Ph5"MIjlm%BH/FVMnh3\)2YKlE1%W\,B@roh+U`]A$O`Qi=(pdYH@soV@r4Cf]FW%;q[.9rOL?iegp.U=1+ZdjamV#=aAm%Bf'Tq5@:VemUBA-D#gW_(tW=0+[Pn]3s"fYhO6[:q?]JlYO-e4a$"ZT53)+pomRu?!0I92%Pn%a,7EQ1+r\o1R<e#&[qV>o$d;D,0BU.CskH!>87'B8I5=8K"VQGqm(\Ot,ZeDTmhPcTDck38Pe+la3U.4-?MLchi7U!9oKZP.p%n>uUZU]-n)oM3)'X*4l*2S/kY`rD\YbF0bLjHD\dqe=WnQ`W_!;5XK:-7h2ofBQ(0)1TELXM3.!+9]t;.<&/O^=W6Qf^7f3[!aZG%Yo8]0%]Y$0]7bN-_/ZC0\nGGZ.Wr.,gH')/VAE4^YgZcAP#]Fo>I)]H^L@bWV.HG[XEN:m,aA@%5fd[qOdo1.jGpj3pI8rG8hVSR%&a4DI;01fT[+-?B\1n.[pto]`'<2WHqYb_u[K7m[l-R6k8VP'';Sg<Wd^`DdJ[d'X8AD:6Ko"DMMU<nTqc2!3eO%^[DgM$$5,am&%ri%Ap)?tTC2LLf_%'$>s(GWs\:O&n>jCtFlDj.X="%jF8r%\[/AJe7d0Idfle$bs/D*o2q#0h_6:s-5?'RYO/-rh`_WDX&Z/=#-b%W<?c^'mNo](^@WYWPJ*tKtKc$-M.ps8<)[Z]ZHbG8Cuc58jSs)'1tQ[=A-alBG#VY)/'V06G"*_aLfeGpk3#$,5;:7KMM_,Zj8jh%h=)5RcmG]TE0Jc^V4_,`$"YS$J2-j"jb1[-MhFam8_t^E-e&g`$#QJ]TUa,[Pp$+"'XSB7!>CS<Bf10*,R/al'XWomQuIbl$giRB%p][cEnqU"-3C)L98jW@4P=UgL$/mD6+)5=I!0f;<@59)"&["JM_DfINdW.Z;:ep3uob,JB?DI`$#A'QN9J`Abn2=u<Gm`qk:FJ[(%)qmf,6JdDl-j-SEAXR/:^-akMC*;6TFI;;"dl*khBF<,jeh<Ca$/Z&3K^5F?_De-X8VFL2cjlmSm0#LrT0+M$#j%jp&oAsN-bLT>%.ek+5?`1AsG>_Sp>FhA)puLX&d;GiUNrHlLNXi=cmRWacfoZA5`&J'A45=5N14!*:">>%!Q6lG>rXu7[dsm6ASiD5A58_DuTC\EI%94`7:5b,UMT4sJGc<p.gZH-t-@WboIho5kGiqt,&2E/`rk:cXtb*L3Riqt,&[^O7qk:cWYnUJKKKC%N[aHc[8^W9d35"-u9HDPFl%Q&8`$Yi("(gT]U#k:]*6E3l(W`[s2QD?Gl0XKG/u6Ll?sr6#RJKn`,k[g,S&A+3A"DmPU=):boXrKX['OhZPjo\7B8/+@8=iBJ^m%)Mq+,Sro3"0E,UMFToYk!lHnRZKMVi7Y"WSR)rPVIXg]T6ASB;G6"JL-1HZ%M)f=WDknZJ*0ld<`,sjm_?mWFd7u(j&7,FcWgGCY%3oNH&XIu-lF<HPoYr9L,?%JnOKp5Xias[$,L,$hD6rW,ClLu8qc8eFfTG"hnlDV3c.[2<dlsQVo'6#^pLiROFh2rYB\%Bo3`\$g^%nS,>JjbE(enrBdp\E33<e]^;8a<gRfM/+Hi2/SH0+trnk_'l40@6cJVb%X:fpo%;j2ir3`]#Yu1!T4<(#Mrq9YU6q<PI3KTG4V;]%lQeWXo1'tP;N,QY142X=2.FhCo$VB+GDn=Ws&`LQgJkWV]hO4fqLWBNr,mQpVO0MmODA5;Y\qU?\0kHKTmnbRM/Ejf!,K4*dnBHL%LZ]K^LBBJ<m;C,.B+I/=[mIGmg>JFBb&<@hZASZ_`)b<k@Y=Zfa^6;JgC5;PG^354(J8LhhY,kPJ"[jgd6ujP)t8US.#D]=DMsSc%9/0!edT6("oe9QU23F`1H>`<m/Abs",PGBJpeqE0'!AKZ%a)R(9:c+lrcbkJIZ&6";34l\TTM?ZloQ^nWFgHeZb@PZ4_OCA^,b9\%pFBg-C9],Ur`:H?>Z[UN<%iMMK;ZM1_D-R?^s=RT>JqRp[otYVH]rBEp(mj(H>HW2dVUqtn)PAdNh<!?rD/1O)"@"WUGaUXBYgK/%FbHAhcR6sZoOtkkrordXI^N+\)n#BT4ak_[^7f$#j4E2][sfqm9**>Io:JLe?DobC\PP\ZB!ki=PDA@5r0.)=I_/kbea@lHY7p,#%l]6@uh%A"S8@;Gj?WXk1B[eESC9-&_@lVMVd.d]+W?NBD\/eZ[V"JW/K,B>M_*pI$KG4t=`Mf`hs%%&dl`F?Oj!I"HKG.HE^@O8h%%s??jh4NOoqP)e`EjY7)*'4=6.$XaYe8^(IBH=PfK*H+c"hZ^0FSgR">#=JA)UQC:1\O_Sfke<FX.><kRpQ=_cZr7G=VA^MoBWg?%D"PF]I1dYMeS`.leuYMDg$@8)_QX&"IPk:dUkm[73RkLP3j9$S56%R)l5416UOl.1F+jBGZG<2o?!%@k^,C6<dI$q*c$D$Cgi'V#%e&">tMlGBVAGrMmc2M3*>s,-9e^O=nn\"DB5u"%AV"AY!U1*.Zo^+3K6Ho<U(?Uq22h.PDHg&Xk"StntQI:QQqaW)@6f=H?'L\[6%C8iC3HV:>[&_2g=@L>tr*;UiuGuAM1OlBk#:0pjb$O]3u0/]uhE:T;Ug#SDP>Y/%BJC'.#)e]=+0T<)DM*)u>"_dm"$:]h6^]<G[%<jpFB7eGjfqi/N#^D_%+NGA2`r*)c0GL<0g<0Nj7-1SdB5,bpHJ#_tYfX*^oJE0RQ3F1E.?&$(4d]N9/>r9u7eGn9!Dq,d)l>*0J%kl43]1ZYdWZdGmV2t5HeSuE?KH<.4Y<-J-5Vr.=7VpDBA$[!EgK-ch,ek=(GZhK7J>3"d=GQ=ajfkS1-CIi*Mi)'2,Ke?,nIYUM_%Va9,F;MB2-:*WbQofC06BYFA4Id]10l!ED"lF\i<bA.OdB<2")fg_dPP>Tn0e4t3aL[H?K?U)f8e!'iK%FhOq^Rfn.;&+FF:q1ak%G]8=>La=r@a\&>*ZSqjXX4]fC(>tt,S*'bKO)"9A(9hN-`Q.pA47m6,UYDm`2/uRa<UX")8@q>=5TYr95H<O/(%DP9\+b(hir;"J%s-m7qElu%C1n$;O>A+n8D%R,LhUcVWrq(cg4FT,cf7,@FW\F-sh>1IoD!WLZ.>E&@adeo>oq(&iHN!Qh;F"ZAB'"MD%'0njikQ'?%s+o8hUkcXuCZD&sq)IY!U_]W3,BY:78eeI8)q_78Im6tjXVb#l-5tt1[HR=lg8uJMr',!:U].IHJcrO?n(_&T1<JAGhQQtW58sWM%c,SL&@edhM3H+q>hs,GVf\`u/*hA?;O_na+T)RV9e,;tqT95*VHh'l'Dq:@ArEAfb7]l\&h'-&PBY#Dfc!!Ml+)KIt^%)(6m;:%8%?8-6NqO9@#;*W^9f6/6]LBmKZIBk"L\qOtspbup@?j$BT@kAUfrdR,]Nc2QJ'CeEe5oaDXekti.?ea+K/c>m#ABAmud1e+89Nk$&%E\Trtm4p??cui>!/h&/6qVJ>17RX!4"NZ=4WOsL72O1;E5H;D<*]"GB((ZI7Rkp%SS[9?<r`Qp[d68eg#KHJjPBO,10Ar`8k;BMX%-Q?\>6a5>"TZ#::UuTVDZ6s@30O!TQA'ql.UXs3\s#dB+5KO#VZAc/)g:BO%-4t0V(-B/341A]Y9(jY\,82lX?Sb]7EM-74;,N^^%pXVBb!cJG)b#bu@)o9IM,h_jpY1IC^4muC?%7fA9G1.BprAG0]1)m=,,++/YhFC!31/bdg<>5P;;Yh2j?ZoPm[J`V/gO],Q-$32=%$W98'N8<[:DWReLABK0tn+I;AkUAB8L*CDt)I[=k2Ln#E-/Wm%OTL>Qs7De?<^#:)GMAb66mr'q0=X:WC>2t!d6YEq+OGU8=*mHe%17SiX]kDWDLu7UNN\IucH;NQu^"Fq[n(No5J%81Xh<l?aqUMWn2'[VRrVD"HjcU0R(Q3IADCk^:W^4LNXZ!5^2eJg9gQFolZ,s,9%)FuV?c*9C(C*<l/QlQRs.iunreMePo%k^Ja-'hOGdkCmha/(csOX6R,CV"'].4d)$BWQ**2Jh]oI6N18'KlPh'$ElJeO,&sdr!cR%-G>,Zhl9E),h#0!J0is4mf:a:eQ/I>J\!`l7M)5:&HY[bK`H9ATZJLiC0hUOSH-Vt]-Fs1`"QJTWmPUDAYJ^E[9jGo$O\`cCVioT%gT&g(>A82+&bL?U3Np3*>AR!<Fi7<\2Ic7\\t>oMQ=7ds/Cq(g7#NdY-sHq3>I^qp!#`%mST`WCIKc]AW3OFmkW;71$aeX'j@]*I%^<q7F7M`uqnWXM_!T%QuA[=3NSea;1]P8Rc(N`6+I(p/,K7DCUo)%Z<YjKD0]54\7Ab_SR[PsF&_O)!GU2a&HmOeO2Ds_GE?5n"E%d`%u)ht:(k<cr'&p8%69H4s<O$Z?J!j.>1Fa`;^nj?.hj"#"I9JN[.\"kr9]3HGl1b-B!$Eqs[q'I-[t]3DBpJ-`q_S2q0]2_Fg$%=JYGPi`D/>kAW'M:(ci%m3t*FZ=<"qla-*7XOh7T?bZq4]fP04-N*5@Ke0t0p/PLLA@qk=n)a\V$RO]ErqpkbGb0MCX`^eOZ_]SF%8%!I#Gl);E[F5Ym]B@4K=YVaS6!7/48UJMfc:/#<DZ=H.l_3BfU"@!J:pER#f'O3nnf+DV]NSRSg1n$dq(7a%5U#:Dog1W4$N@Eh%,)XlSY`)6PA\<F$,*)\H$E\l9S>SWa;u;D"d#5d1edduL.KBs+G_(#GotWbZ08.nF9+$-U*`*JDRXFt0?cfI[UoF5-F?/Nu$IBsU%%i7DZKI.8uEe<iN(B&c:jE`f"V@<'kC-T':ia!WZ`.aNQJr\Y#GGP#!CXq=CcE<^g6E^j&=L<V[K\-7&2hR7jC@qtJT3&5Bjt0JH%G.PHBNqj/9k#_f)Qec%+ERHia9bP-u?+fLI1h2d<[l^k<2NacpR@+8KHBIJ0`<E8OPibrc.-mV]Isf*6Nn8#)9Y$j%=4j_n/7Mkk%;gh02c*%\26u).u6VNZl&5$%jd/t=mX8db`>?IHcCWGo;/*[ZDYA2*nD'B0*>R,SehrqBi0?tMIBQJpM5i23BIprO2>f2Z,khitZ%!ed/6eP>(aR,pZE"i^>Zmq,e[Hj=prVYBf8$8W0f9W.^[V\"RPVlC!NDao(a\W<[IG2K(jJBE8L_iW_!*?#b(D^!QDc:>MD5:l:A%<3G$\&%3C-Yh:Vt+Q=mk(D:&?NSU.K5KpN',ou"bTto#V_Yk5uJI/FO8>h>B<:Ce(4B5_UPqKCu+fs4@NV?Hf-Tdl:!Uh$<;ZnN@%d<<PE",d%)?86Fc0a*nSY@buN?c[iLd]\.tb?Zs)G9[M)HJO^E-2G/>W)*SVJT6Z?\nQm8(<.TP$89O,USrdi87ZF,:f3?j]'XG(%h/)[?Q`*H7XL*Z5>uW5ge>(W6dc-fm/\#OD7]Y\5@UMZ:Tjp!7("*pP5t@nu>q=6p"Hi7k*[;pIK['/Cc"8!BH_&]c-,.><+\ZgY%_J,A[H^o:D]-jX4`@DR0h\;XVJ16b!cT%R'fdQ:FZAkUcF:*NV9Mtr8\>K'Gkr9Lk6MWn)TEM;@-+Z]h-E`M&5qrS!^``af?j:tM%N=HjN>+`W'i)o8V1Mf78bG!4=biO3L;1^Bb$#`6E_-Vu&n=Y.2iFQr$/t0IqHZ`^qf2"X*g96Us,A="AOmkWsBg>UKjm%k(Oj_Wc%Wb@[<KS=*P/ES[og<Pjk]$\C\FPsNNHcJBZpnRe[SOUk^EhHO83g`'M?N$XJM!RV6nRTNhcD<hgFY\j0.58OnOr=H$J3?O?!A6^3%6Yr9ZG'>OO>R+gCXRiLhM`JOqoidT;o8!/;[?&$/h\9r'FA_-1:AHjH?qFY9k\lc:g"W,\P@lDrnh96NPs8:2=3cbc9MXDHaXe-=%c;N?>r9EHc-?jQEBC[,Ro]YC<+Z'/)Gb3#!hNTf(d\.j"=)MYjom3L"44SXLmgp(4rm]MZ?WP]O9=9^?j6LT.iMFs\Y>qRa4I()]%l_RRhgKe*1h8jf#p=B!*hQ!uiHsN\Xn$K-tm_bSp^8p$q<)tnXhW23VZUJY,ViinHEJu`WgXS(TX/FdtK!eutk2-O/cmfE2>FGD1%:!_l=T?U'4^Y+.7ji"$1q(o"KSY,G@8],7H?F%gT(.rbK1feKO_UctTmtc@d0-9`s).cd`c)9eX!b?HrWqT[_4g9Ct=1:!7%T<bS%T!b-3.R1BqY6_AgP\S[VAJ+<-n##uL.j"hd0(KRSdC]!og4ZakLL-0!/!#BV+"rVZ;e[`IWE)5`5J'4H^2tI3qj.>KQ<oQWl@S"s%.?]/+\sA!&\tds3NDKRHQRAYW1K3\$?_uSNQbq8=ldXSiY*@!rW)fohCWcaD)O"+NdP'@i;XO0DWa'A3qGj!,p*M8[`U%U)nBA)<%de75K+L':^]`[XULqT/2LGrcT.a9,2*anKU[@5YC1[%904Wr:oWE!-daio]6VV6a7h8GSQcLnd1<!p<ZWV>%n]R%OXT,XkRnQEW.%]bc)II9O-?$EV`.r]6[fQ):jYC6;Im([Wg"p\ZO)0qYhBO+Y)PV7i;I>M64.<#/K7J)k3"le?l*"f^?N'jE`iX`U<.DGHaN.E?n&%8sRH;$Eb(ZZF?sUAG3?P=:2(8.W+?UY5Bg+Q8W@?Zf\Bf;JO7`rQ4sUD<pT+XJaOK*GI#7UscB#c\edO]4L6B>`bZ-\Ud@sl>><T%;d!)%g$uNDi;Tkt:oQ0`Ib#uE6'[b4_mr:l;^n`#<4i%@\Gj*eFQQflq9k3?=Qt;5>a5@?]jHlHT5t[E(>lRgn'mEdmrGbKQ!V_B%h?,8ks#?k+f;TI!U"+$R=8SP"s%3gOlt'aVH,[PHcJCrsV,u!t'7E"2qmQ0"\mF,EqcA*R](PuCqY98Yl/V<sY,>0&$a'-sX^8%2%<;KuoO1j\-J#,ZM4($%:V>=6h]Xr]1EaW+`g%5#55c(rVdT5CDcaQg<BON*krj]1d.UDtlQ(h."Yt@7,jtj.3<R#eM:%%GB3eo4c%Al`Pggat[N?KN"^T[NbR8FucV4-cA&pRX$7[4>Od.I=I?=(nH/[<YP@1MEH-O\.QNj^#>=b]eE#Wu7kCJ1F'*&ZsLL!c)SNn#:DX%BkP:*Q*/7+$a*+pO*jGZHGPlH;i@K#GGS5Gq5^\NW)iJt[C]:S1]?.QGjV^6HZ>6M\p.EJY]lgIJ%6]>>J9lLGe=E4kApEu^$%TQ%4M<nC^TN0[IXpn[j7edAIUmcJdfFA3),/ACZLmDM]'4KT=Rn8C]D$#bT=-p1DGo0'kN9nSi^;X&9:7kg$%D_JI@>/IH8oM1DCEtX%Dh2gKbdZ/fi2<d!^R"eh@ZD=i`tNBp3rs8(44?:7QTap3f?C_k_0n?$=SbaaaqK]iVltI1/]KN;k?$bjk%4BO^!=>-1Vlj/b)7dq%dfGKBA=q)F^pegf:HCRg:Hu%Ibu;BTP[e'mQ.;e*[o%3BQh8(kH]#7X'DV4%om2&ubd$EVo^9V%i7"ff_q04mdlh8Z64W/17Rifg%/I&kimmpY5F0*WEZV-mfo,"=<2>X[Z=SDI2SVrj%\IH=:\BiGpXYG%Pn*/Q^qQ]f0:!J?Z@;0/Q"?t&RIE@nIM,Ub'ZQ:kZ;u0EH%o.=Mhp?Z!?oDO(<*sI0p1AUKD#sPMSWO&M<)lJlc@UWque[%t^2nKaGbf\$/*=_)23's]AWmJ`Z^;sgi:!J@J<'7Nk1M@\Po)glg%9m9En^Qs.nPJtPaCC]%+M(P+_/@^YH=R#ahnpVKRWA-DYfkK<$j1\GD%(CG3Q(fGc[iAML<;CZYmT1k)0/-eJq6^qeXbi<Xk>O^D%f$WWj:hacmHIAe"2u-<8'?5IN_r0)6WNUYLl#tNUC$mm`;T.E,`NN2)NT7PODl`/30[(Q/!\1m3$uY;tV5LlDI<Socg``n"Qof]j%=1XnNpf347@^t-ER6UsdO!Lr-n4,*919K<4HMiap+$!Q%]@p>28Q,!@kGo>#cC"NYg:B9[/PJE$rIaAU[25=2bmtcb6:Au\\1b0q%mV!+ds-93/2D0e;kNgVE4"h?gPDa_LA$n*s]:`)N*3V\&?1$^=4$riN&?OSI;nk$rX7l78)4@Vl(=]Fk)4s10l;j4"j:C"P!pi1Y%$63eWdoJN*LauAXNS\:;UL)7:O#-OSJqgpuH1<Z>Z7S!/AT*QjI!L<m:;^W1B9$teq#$^Kh'np?:CA`GE*h8IZW[2,.X<%'d\jeE%7oCg0M0f/h6)o:!=(^$Z>pj+A#ukB2.uuoaq[V*R=UlO<FKJ8H9&:=M$m64YIJ>$bIckD<)D/cshS-P9p4;7N)(7_:M8tf&aKP!Y%cq%bG<8_$j,*V1JIoiA+`DQ?*"[;@8XBF9ghr/rY`TK@(NUDPf3UXVBR&+WUfm?(AbADQGNp37t5,.4Sb:Qn?=D;S7lukf%,(+2R%mS_kTCjZ;/pU%om)aI,H.o/>WmoZB0:hstcgq?TBg]"l!a7=VIG3eCX>T-2&VQO31*/66fjKcH`%<S3GOA_[2e#N79@@Bf<5hWVc%/Q_>%)['*U)hA4M$/HBZ,r^h)].!u@.Gp8g;_pL4)Ap7*W.cur$=lj#UHQB/FGFWe%LDn%=SAEIEL;!lh#2,.E6,4`r-BBD-mn>*%eVTcf:e=F)q+E^Y+8<,oFL>OB0p#t:h:`AR-kdtU+E9G.lp9I+_Yj`].juT'5350=PbGPX[sdLEh1"be2%jUYHG2#^qj58&0.]L:%o7J6dD$Q)@WGJ6tn^m#$Wu't2"F?#SXE;Q#Gr,3nd"0:hh]V0$"%ROi*is!^MX<RW[bZ,\4"R4al8f#c#Z:Q.]`=4UcR:XO,`/c6%6<(0^a$ge;IeK#Hk9"Xo_L6m"r*&%h*K_G4MoCh:p;to7arlYaJF'p+0$SDG-cD%)JF#1A&sJ8a&Un"@N]hU,`\Gl8%Df<0CEnGa%*LOA1=1q'o*6"(ca#ckiJnG+-D"Hd6'6dpGh^eS>'4^?nRlB5'0db&]k<GFP<c`]!ZR5,_`9!"$26![_Grm`D,'R(7Hrplcac90U%mi(U^)hePaTGBpfr$br++X'l/Q&Ws#[r7[n&E7!^7!F"(b]#aRe9p/)d.P(B<LgUehqX;EC-"ZK1C']GfR#1UiGA.'(GpRk1d^3(%J8@([i#V@kirh4BirRtgmSn2LEYgeY$0K.A,Y^bQpL>.ma*oojc6DIS\,k5V@K=(.F3XGV$YPVYh4Nd]:Vh7&nRud$0E6A8('LgN%ZnI](P[M$TDa!g&j2Wq[kN$a)LU@(K*?2<h3k0+p+r7M4\p0l'?qkf!bMC.f.JpI8mc&TM0((emF%)Ds+s]]p-Us(Alo?4lB?e:f%:[CZlf:L`H%ucU[K!I[:Ri/&:`:EB5Y(jj8q/BG\@nkhWE=^6mH`W/7E+"ik*dfJ*2Fu3U]n'%'Lq(d_*\7`WHJ%45MFB9I.b<c;%"_^*gmooj;N#:=^9S"_Bi-(sKJ&qUDd@!IM&1<h^m7Qh/Y&mKiM8?gCdqh!$c7m?!Q9bVH\oqf56u,3/0M)&`^3:\>WbK#ZVPURQ%Xj[3a6ofgi4.=sXpPsVg2(7K+ncE<LTa"ol192c]!3TVSPVLM@0`=h^/E.*\kX%-eShCJ0<AWY&%;6K.jZG?5@Ja=:;,`8anRaR@%s&S$IH^>k1)ssjgNf]5Nh?p1c]3\C)%%S`b,)&Nch7M.(g]@_o\/LF537CF,]44Ao5!@7'$h7Uln;OSLiF"tCrPTpf+>W]f@%_]U%CS_*\$1bE?J$Xg;\-DXH\geUSmT%,.=-F.R^@Or^VA'ZGnHH5hGC9t\0EKB+=QU+$BYDaIJ48dPcDMl+m^O#A0kUAG68$[Bgs+q/%(<mMD8'&\^d4QGt2S>pjETstK/[Xsk\W+G"@HkBkA&I:4[qMc9GXc%e`HX`#KCYM<Hl]-KgN2-Oo?<lt3jPt<,V0u4HRX'3(YaY"%Aip1#EIbS9@#*T["cM<DN"C5Gi/RWGX<lBBO2EPZCa4j[D!U%01U:*.kdm;j?@.YlBtUtpE\?aF$cpT!X_AWI!*EKd]bjU?L*q'N%KEk/s:)/_#E(W8%22eebTe!dL0"Dd$=<Pe*s&doeLtXfV*=WTs+h[!6ifAiEM)4$@!f:N:2qR*[mg1K<=;[uHECRk3\5V]m2G?O\%^6AHg"833r/X7?)1^#r"@q!#I%-*3/hhR2#(sg;&4^de!$i,07fkC0M*S(Z)`^1<K$69SJ#?Qc`Q=LXOa<bd^>b$ea&'NX\iSSso%9C98/+qg$'!PX*:LMm%d[X4#S^N\Q\noT^n!djZ9XPOt3[OK7+Fn+\;-'DfTYEoL];@Du0&3m@UnMDFNdYis>W=f-#b<7Dm0""Sc%@:3Im'nT"P1eCV(De_MQHUm,_>]\@/]F"Wp^'*7"mm%cJDHf@A]m:?)m06C`ZKfrfrkTG9\5Y.l`KPr*#2HM3NoT@;<.T,OgX+3S%/rbZUP2]UX:Uoq[FBiH@>La6g^,$/RpMmoPmle#(3di?1W%;b`:QRTG'fUo.MpjV;%\F@fL)deo%(]D]4?7KcQ+Aa7Lp\3cLFt]A%%^H8YO[DY8>#5DDSQUoA6Pl=[8$`@hcCsj3P\8A=AIB!36Pl=[a3O)i22<eHK?hSe)_Hgt4G+.1fJmp8]I(e7+524X13jAci(tb<%8&c.(TM2#BR7bs;>+Do&k5dk#iL=+X7"p^:[XTbq?,Kb^;jC\QVPi>`PBS=Xm.GiQq%VoghNse<T']MpP#%Y\e)9qC_PL4R)W&o4%94<8BRB=-IL8TX^2*ORKqd$rTO$<C,_t))[@d:eX6DF/[lS!n4DXPSG&C[CG.XG,bL1*+h.4T?Q7T<dD*((=/15C!'>%+nQql1<"%rU<KChiGAe,^_+5@*mOFl&?95hFbKs`$\XYG%#FPA2g-OOM`BV-.rV<R$3p+N"W/Mq.[eZT0E?dK"$=;du[Of\^=GcL/uMY9ujr*%i'e\lZ[#QbU\$[?9s.N[:OE&Zq5X:/TO\YR6qO9+M*l44@<g]=90[*-O-gZfQ5q2h`kmIH6sfi!3hA#3HM__VkqM0D]cad7.M'ae%"W$<D%?\^*'/^s[aQ%UVc[V@)"g*ATdj@ET^rJEp_F;nnA.V>u6B5'IKVjPgn-O7Me@+0F9HSI4[f!^3">eE69Rn[/Nj4;al&CHL%.Rb\C0))@o+H)\%`,DFb?6'-g_UCmdE\-K(KF!T`Z=c(6DAV)4STY(@BB&cn/2mU(^+h^]mhd.</]UY]Ld:Jj&OF<mng),nMdP?W%p5SO"D6ioMistGPSTVgtH\!T>bejD^O+hl:#sTCuP]VLF3H*26["P$I\20_L^(2Z1EJ"Zcr:HJq"jJQMfb'JflaJ5$j7B#M7J:e(%1a$<ZrusX*prnq3<UM6&Ad2oEGk`>WaV!c-iTY>7X2E7'p<.19o`N8+7/kgkZt2oorqERna8>[Bnb<eS]]4"=#PKN4k#cUc.c<u-%H#@aeU3oL0@ZVl%*"L.W9,*Kpc*5[:`2C\hf.`rS&XgLD7-88<0Hq1'@f[10]ceUUD@7]X:Q6_GUJ<BVVW5TI@ROc#`j(.%TpQif%b2E!8f?!,(+dkhjA5[Eqcpj&:^hU:UXc7rf+iu_H3U^CG>p)_bh;r*`.:FI,-P(@eU+a'Jjo),?e1bN<4GcC1]:>K5;&MFlIN]a+%:6h3Q(,X+N8fd":SWFF$2/R>VjJH@0=6TNKBIK[;"\4oL#,S'cl:*rrXKrGLDA$cT%2)SdI(*F`h1NM1;,Tp'=jhb4&2Z/QcFZsB%6s)t@RLIR,`J5W.iKBhb2bZD?i*+Q2oAQ@.;3OkPoAO0@=cA^Ya7Cie)0&#VNs+O]--Sn#1*=e+>B&BnE7*6W*;OR/lPi#f,=Xk%%luP]eb(oSNbO>;_\F\\7-a^58Tok[aBHGplRIr8H`EaI(<i^j>Q@Nf$4ctcd^M:gC',d)*V>>1YE5a<N%4D['O;KGd*TP8&l8Ftk%gDN?K`1uj]-'J`11'Gml':hQ!rYQp4"UDu/mW\r^CX1B8M*Db!Lm[#f.W>UZ5(P1=QYFMu>+^Tp+</q`jP(14KVNhQ_!O+f`<^Cp%1mZU@8[`"e+qZ>#pH_o5]2.e"4%dftL?-hi*c*;'8Dllt^HG'gqk$$=i/!e+IP?K[WFr@?[84M=]Y.8Us,5.;0KYTqB]61SeEXuY%D]7jO)6)/C=5SNoZAd<!nRSFZI#fKs'sNWA,8Kdg`fZAjGXg"M"YAMhe=^<EU[tst#NjX@%1?Pq,I\Q$]A\?;2nTHXCW51J4%^um%h^CD^<4G3(N&;?q3<qan`-p9;3.HsJ3u'C1]Q1qi\5[:=7S/:QfF]iK.U9Jn.-+FdL+TPR3t]3ffc]6Z)+gE$k;t9dXOs>S1"L.@%=fdguK(]>Y:2*2=7LDqK*-3,T*5%RO]srSkf]&F)2G)LN",;T_?J#lcr5!rSVKFt>ep#P*W+#nnKA7?2pYS>)AUlGT>Wr)=DI->8%bEK?+Xbo9Lr`$F14kX!lp1I!_M`()A?Y<]ZgZkq[lkgOcV9Qk]WO,g`LJ%ou4)?Un2SChI)KTq3@tj!7/SFL(Df2mV(Jifu7<c&l%dbF;c(k*5MeN`3%bF*NMZJ/)EL0\_l;CdVF`09P2Yo0'?#FB1,K.;9Uc*5r/Y_>]_pR*VYpNWOkA2h#5Rbqj.-@h6Uph%F,h;gn1%V=Vl'?U5QQ`oQ3inad<Z@<[&?Q?W$;Q=8CZ\F?P`h8a_9s/6*4f[[l[#u>Jk/)<7th\P?`?3X35e>;?$8l#[k$$B<Q4oRqDI*kI\%r[!n?@FQ>._TP4s1uIhVPb^\0J`5XHZAr/bBmPQ`Yd;j1L#'0lO8Y\h%;_4mR;RfKfgs*-UPX,L]+?h+]>s1uS>b'c\W:fmgiJbU%-94<ZQ].3i]LgCe5U>[:&VmO0j\t(Qa^k9Wat[cREB0D[pV%)^M4>Y;XI:a`Alq3P]PI^uR)'R7&f#E<5T!)0\6i"BR50F@:ZQbR%rj#gj\;&)XlmcU4N$k+?O$`;M_W]ZpI^sP&GG^=h:$3>^@WugP0:U6?QS-k2PDQU0K%DNnR8"K./]X>T2cA-dFuGoKjMOKO8'IiO%3=.O/cJA68O\P#*9BTqr7a%\#Rl@7bSk\C79?5Xja-KFi*CEm\*SYEm^2,jF>WO5B1TkOT5O%1+oiSQbr)Z>-SPA9;;G*Tp4P=h*%o(,#tGbf.:^Ke?h:MH243^6TCKZKmol!ggbNgNQ(70OSo/rkY_KF'XS,F^;La%"1Jo?3sTX)I%BVXr!-o=l_mP\`BF"G8]ZULqs]%CuME@5rg1-B@H\Pc7/45A0Ya9q;p$ngabER2P$In6I+d917M$T0$C)L2m3X#8'LUpi0F%FZg%B+j?:sU;)Xu7UlYmj84KV+!pHuM%qKk0hd7k4ZUtqtb.c]W"+c\_Z^8!a$aSr.8lMS>RESjh6qqd"Iqs*2'XS(ahh"tK7j\r]3mT9mhW"X3:Rl`nZ.7qbHO)n<,h"8n.%.qjPkKd6@,klH$(3=?u[GUl3<P+]RCa$9MrVL(e>-L^UiTlP:umWcbM_>QlD_I,s<\I5jfHXf,Sr+jX%Z(^n:L0ep;4*E@,20Z^J%KO&[94&%0fR_*,-PD?j6c>uU.s$_.R_JVQhgdU*W&[4tQd5?,aX:2f+cF\<8IEc'QF5]1W,=gnG[7`OG*aaZYJ@H[GZR?R;l0do!%Z4ERB12>T:DWF3s^n$5ep0-KE]&Ag04B\3-OY^D>rO-YjcUri%kn[q#U,oGm'3W[&WJEX@P$m;2'4DoNSFL2*_4dje)f9)epM?IL%H06hJ-AY+W##DHB$6b>8(HL&a."j.sNpcE8jk0-`-1`kU*KsaK]QcokWPr!'O;D^bA)[gO7$Zu-`,T$=amM_?CLZ\AGLH]/2rVD,%Y#>?%Q&gFXP@#1Tiri3ua-aDURL%]ZG7g%(i^D58KlA5;\[fNo4lkT3Il;g9qe6J,.Gf-,IEkiKS]ZJE*JA&o,e1Z%4Z\G)8/uc)%+8=Y_bC#8<a:Ng@&E"H!em-!GN`-##F`Lnc]X'[_)NVKL-Fo@Yn=ISF<//>J%.dHpmV[8,So3c&iGSGgas8q$d9;.6iE1!-,AS(2%GMFM/L;>h(--U`V17uYNVS(<giP5nH,M\NM?nNIG;dOE%9R+Gq\c!oNV!nY#hX$)L)t'GDh8E!g]airV'\A@.I#m:L%-5-^/[>$.%gNs=DOLMF4^*Pp)oC6c.H0GT-@Iu]a(f/'i.MWcG8CJqu/I+2c%%Z9NY0.4-UR40YI;q/0cj^e(]pZu+qtacE_ja%c9YO@`G=L4`%TJIHIM2C+t\2YFT4]nH?-:$[PjpZ2[ma:0I/5EAWNa'(Ter"Hh>c`54:#%S&YU$+/DW!L4CIsiPHBUIJ$0P=o]7rMi-/qn'KT9Kf%I=.m.kkj]`/)f?on`@:;#-QTtIk6&/lYZ3fWIiI,\fK+>O6iaV1$,p2$H9daS5aY3=\t.E^c%-:N>NdPn-gK`C(/]WdKgD?iP:,T%pb@?1IZX*.ZZ8qBPY7Lb^$G6"IIFh]2Lg1\dXITCd'rBUP1t3P:oPm"WtT&"nDM*ba>*DEQ%jLiFs^8Tb(o:W?JV3/Tdoe"Cl>.e%>>IGQOI$ZOL=cBL=d0"=Pq(3e;!+B)3G"fD*lZg54(7Fu38nhNdSYWIh4D9koMg]"5J)\fpU0K3F:VS.,W4sW&'fsrc'Zsc@B[*(%a`>VMY2)#=;U]Z[2pPF:R=BI:.VJ8Mnju*C`ai+3._c,J_``cS\ijW7qMY*B]@4m6J4cpa=)+S@dPF[qAD[RBhu0V69"25].rM=]%_:(OH7T2!jk#RA2EeIqT-.S.m"/GKD\%!$F*9,U[]>*G9PGm$@RWm?b?`ro:3_LXF-fJU?Ql@Cb;tZZ-25hL=gLQ7IbZ;SZRg(&^%51r0=k:\4<=qs_/a`h*]E,nV,e>?RC^#]/VbWnEPhUX16/1DFfA+##/i6uti#.4/.Bed%s`Q_#5fV9<ST,9%taX^grDcG:nb["Cg%Ae@AZ^cnm],iL<"l#reL>%&]P7u<#b0C=j,>*KqtRjL8[C?o;Nc>B_m7ZK4PfdjqQ)e6]<,-NQE3[_Z=l#n4Z.u`BX2o*:h+h[`[%jnSX=a2\f5(`+/6gD\+qp!X\:/;Kf_'J!\"'B9YX<"-bT4)=B8jDrI9EL]`Jh??r+LYZ'mJZarONa/\3%gE9Xq'"]L`6V$i#cLc.%j8;JE*cf;#[-rQE(I"s=o^/K['?P./:-"4r,Jo]Q)!/7&9%S!Z8o6XF^HHH]PFZ^!"ll+o&=hPlFu!e@Dqmc\n7MV9M1B&W'QNbd%C.tUsmPRGGatn,h@.^9s"I3rL9Gk))H]997E\^Mng#1,p__uOC]lGB/;7Se\3#8c>R>bVf/!l)2H([;'Eblk(3,gXBkXI^DHl4+9%0Q%AnX&gXn!Z\#P56oQsN@3!Q$s@k9(Jg'V"W00'0_,GA+;BZMeFVK*'fudWD@W?>3PBF=!9<Y!Dleni"W00'0ZG(m,RZ;D%Ud6?%>BgqA3h^/i<SgCEa<!cOik\u@.:8kt7q?JU]9Fu6,`;+sb""#,mU(>jTBEqa^Z\S0JGYJLHmrEc.,=<Ynp/PZqeIhGF,aXYfqj)1%Sl/fW)'Q^MVC).UW+>Z!,s*&\fR*Qb'/b$8hp?"'H1(>5hn0egoc3j8^X/k&NkS;'D`hZ"`OaYSnnb80h!5c*X'^JVaq8Y;Hu]jT%]%>9S@<ZV^oA!e5L/#R7\,$Ptad%7_@W3YqZ?uPeDtP(Fr^qL?he7#Q\G,iRBAMNM`c/+gpjW0d4&i!Doo#;H3SM/qY5U,:1#o=V%6eq"j,jtI;FCG/NP'd/E,oMr42PtS?HE1D33.J#VrPD(:\@\E/me)Kf+5b."mt%tE%<Wb"iZZYJ5/'m?TS(4gh4Z?"$1@JE[[,s`%f.T6LKgaih^Xk,d;h91WOYjqgIKQZnh<Ge+(La-el<_6p>Q+IUL6CH[([_c&AYkA6]p"JAA'95g^XXuWh[d6K0AI$+]oR)fHi8>r%jJ/NCr*I-W/.qXH`P0qWr)URo283UH&,!/2rNI:]_nCNX\,)r,8\/@"]m^9od`.Sa/`,b/f8`;UlSk7k*qs!U3;;s&I]m,RXa\C[%iu>H(GjjZ3p0KsB(@Nu-rg>4Wn+H8[VBn9#-e>t[i=fsRY4WY"oaAOb04OVn58cZW<^5R*ifW[%96=ptd.dB^dLeY.=i9.;QR&"7%H6;&.ameq'^JX`1Z$ZEN_V'#u%Ge!=o"BKlc;#J[?GH!>QMXF[iU?I29-86;>!A_6;"sg?:YX":iR.,e$_OkSHf_L+qY>+^k"`u#%p\Mk!=,qO/?``(9,N%fGi#'%Cp#EH=Gcr2*XRE9?_J/Tdh<PlK&=\QGm)H]i07:`.i7LTpqRPk]"t,3"@6F;\KeG&HS.681?GGu6%rQ)N4UYkCX8FfQ4-#;M^cUoY_$k@K4K*06S]o7#gl0@u_^kmpc(;,CD2Vnu$PN\4?kg:cp'.8OB]$_1,/p5i\<O;*jm%r'P(aBcV%lNS0rO_ZRqd-Gk?hF@bZ.sm][qkGU>Gk5X4,*5TcR6"U//P*4M9_%MaUT*(1]aEb$o?fb8S=<gZb0=aODb<+[7iRZL5FY.)TitCB%\!Qb:C[#JIqXF:W9`P+)]f5V9p1>=GD@68pDFQkCem:8\4tkN&kD.(Ma$oqts1Xr(s-gOUaD'bn',P<YWU/eWF8;\=?^kn\5F^Q`%mX!&9b$6$jbtP+CgICngrU+Rkk@='hCHp;bZ"S,hkN_0Jq,O:Gs0S@phS68VQdqLHWNs(L.91i1m7H'PoNA[#@aB4Eehu_G]u_Y^%[AUdrTC>gqMtrXt_KA.-YU<Q,g[AU\pX"Z<k3P\><F8gNl-eD(Zb>mPg&X!ThViL+q]pYtjQt[AqSAaFZS4I;F8OGBXu_gSD<])W%Ff'UCH$+>93n<L2O^+aumJU\'=j,;;QZS97LLu#+*UO.+Wu\Wf:1@h1EcI5,VWp#A4));Ip5Z'JTVe9ESB*1>-^1f5\DIpe2*Xj;%)VNP7q6!W1_:N=c*k0I5N2'9f@_LE$hHMZ,C.f:go(-DXH<kqcChp.j2m7*?;V@$M,P-f^>^\E8j9!S/H2c9GAB*B%oqd:7(Un/>%X*r@LfY>.LT&7,jfn"(?\L5W',jja9Ujc=YmGaOt<:%rJ?A.K*Rj/aB_@6;gcf3S3iec>T5Ku3YpPTI*D?p,FalB",'YEh.T;;U9%X\u6:.>J[*]-GReo@]bYm*>%%S=fV%:1Y<:q`42/h66ASoAYCTq)A:\6%&04f(jrmpn1Q3(M](d8)'NjOC)r`-c.KK?Wl?_]_LDj%X76DuI(uAf1USjOO>&!L/6#S2mN9P]MGW*B<.H!F7Ff+XC/g+s<(+;!8WS/>^m!RXVY`T!e/Y#!'Q=Ys&K^m5PEa,EX,K5WnFK*m%VeFATCDTNKTl)/8<QJ%rh<n_iTNXtY'!:g"\:A?l2_EQ`W^#ToPs1/LnRg7=["R,PlH/Z7p695Yd5._Jk1'b)=YVqjJX_T&d9]ET%>2sX7Z*\L2^%>5!0_[XJ(E9Jl(_(:mo7$,,nsm>L=)r4<%47DLePU>I-[.I'$Xhb>4im5D:dmu]pd22@dKLa)OsAka'3>S:)e/jC%*;R$gVs_?>F/qG&/FVS:lBM7t7gRso.'eC#+4Tk,M4E1SD&GplR_b$rmYtB?XZBHcTd'<6.\)r/<5IZ7Hgn2CY&^H3[_/VUQPJ/6%pL8]6)0ZJM@WcsBn\$f$=]sV0ILd^kDVpu4GqAcYFtF4Q#KriBp@!o)+m@_dDK>hKiV)C?<1pl'Y$r5g]B6RV4Us?hh:GE.r%$O6%=C5CHd5L]:Ue-WZi:[\Y4k>c8ZNSj"naX+P]61f4\@7lAG2[*9@qTjU.U;aO9CI#@1Sj=l=lnk;#8qr)\8FLn8IsRgGs\(jF.uKI%9UnciktA@:hU^HE[uDsbgba"l]7?ZX#b^9uE\l_73rE6Q8#G;?.N#r`Qg+[!j%9AT!W-oAiMM,/->u*`+MP'YoIQB+GU-u.Dd=g^%OO,h2YWiMB?GGU7e9^(C%p?H.p8=E6ANQ.;eTG[V?oE.^N7I32;:8hGJ_U'@C6Qhg9'*bJ[Y+u.b?ShTLi>nWh-QLZm5pcWncbG"%68K`$EO8!2hsN%Iqg!iYbc@:6[e0.$;5].cqb4ebe33E`FpCZLF<AV#nDKBNQ3'3/\@G`+)k#L/SXl0u/$-Y/AgX]\Nl]Q%o$Lnn%J+^1<=X_RcA`cc9VW$cbAmn&4Ko]CaIsA;`a`Y5k9Kr&'");i;-o%:-+?R"e%g+IJ04=+>o$-"0-.m"?^/]U7qHRre(LPasB$P9Q%/s^t4Q?VeW]oDWUfa6/B.L!!Ahi>l\r5c><hUMa,D2_([NQQ>ZeT^VuhVRMR<hAnEP8hR2b6Jt&ASnIFla1kj4g/2SEMb;;ZE5m$%CuoOI]+.I/m<Hl=aba6nC&-A&B6$j$Q![D+hk!!U73chDK3MW7nQb\2pcsaF3I$:KBg@`%3,Clf>9FVP\LC17HKE`?n]CW;.U+@f%qF^ljj-h(V6o?d2i4>2_kIL8^LQCV=iU!CFqR+atNPT^ljm#;o;ta_s?`@P9Qd9_W"-G*SW!i/,iIK1d07$Gaj]T+)SW)!\M[*n\%Md,kok3)*tl.4-O6XKfL-uP8n^DadX\LDIFfp#NT+N&QW-bXPtT^?QCN?mabDBm=HbjVsY;_j24rL(rUVV[.JN\iafdp3EDYA!\h%PP@k5e*scAeS0#>Y'r#4Au:A_i@m&K2`&"7aa\LE^l0>MP^+?6=QkA,4O<)0lc@N"D<<V^f"t?8S&mOVaLJZR+5guBMQ[%X;m%!d%_TqT6l:CcV3r:=;k,OH;J$m%s>C#XDA@>g'j,_i`I:s!%eDQI+)`tMV[)$aO$]5.t`EPPP<\jF+b7<sP(feX@D+;P3C5SMa5'1_$%gXhOING@$S(j4mg,p($hO5\aS+2?8[bU>AAF"sH'G<X#YFctl2%i2479@5Y1L9*D>bla`.DpK>!a3_=<m]RqA.qCEu"O<OZ**jGu%0:"L(P(KQK[mqD5NjQOjG'[+:YKcB[)u93e%%?AP+48$oj_4VE7;$>8qtPK=2d`2Sb!4F?j7Qlj5IL<-UmtNQ8U\!U:S$$.O*d'P%90_mGq,DODTQRH&RC0SB:OJ*Ak#K@?@MNj(Jt6A+-aT#MXnfuma2Z*KFa'g&G<\sj1EYcRcIp$7[5q7=\uSPQd*o?))._K_-1DH[%1c(GA?*0,ko@+KF,JG6b!f6ZKV[)Q^T^a>NS`h*A1WtNOoNE[[$Hq&B:O_^rb3M]IT4d\A(gO&pM2:eq;V@0Q`u+Limo>0$Fq6BL%'CY2;Z?tbR;LZ[Jp39*47%ViPTPYXMHIS7cp^c=@Vm=G-$-DT#?TAcieXIq.X<`DmT)(Jb;=G`VpD[Hf!PJ:+O^eBjD"OZX&,G!j%*Gso^4/bF^#TncY0f[JT&^2cWhTa$[P=$8u*l^8;=PcFJ`T.X1\\,T%?Uc9]p&Q(Vc4AKarO)T`*W<9oL7>5boM_b@::JE)jiNr7%r?^JsHij@cnM.PK:00U@2X^>q>0X%J1"e"@2EthX&*8C'dgI7$4Tk$Mme@DPZB9R>OfV=)>\%8(;k@C@5[Mn6K/(HGVm6]4"fiLR%)+[s0df*5ATtJ(PnqjH*qMcGSa-Tnk*lWiM.jGA@fAnEQb)S1b(0EBcPN0i6W6U[N-L+o)2E/F3NM'd1bmi&T^[<t2*D=bmL?r.g%3p,&-L?r/Us4FH`J'>V)'Yg"gT.(?"43Ge)c)t^ARp%,%J$/1Tc^@K+j7acdn;^o4A-mj7a-k`+0+/Op[\+V?-*sggh`ATgEJFJ&%=,1Ck@ue"p3B*r(\Dn:@7S"^==2O"q=:\fQEnHfFOE9Kf`$tU&Nhda8$QRJ<#3IR+Kd%11*uT\O3p\NrdmM0r&nsJP`.NI5nLZ*m%b[/2b&q=<uen=i$i"mJ&?#"Oq\G01,e#clVBfC9/;R%TubeUcHhb8ajK8o<^1UEoIjusT*OE'ssc7_,8CZ<1IWFXQY&9CltVVWtS%R#goZgIAM0R%;-Aq"1cUqhs][f]TP2[uD_X1"OY4*]>W'Im:oB-/id-k7%3qPUGu\+UAu^gW4hmXD]&CkKi9qAYWE,*M[i=D[=[:%V3b>1A36cjhZZ79mbDLF(C;.@*UedZ.g7Ro8H(rlA$NrHns9\)M]M5kq+Cn;<dF[J_.0_\[DnP$n4qm@.g;!Q%XUbG;SckJ6NhjS%Ju=WWIr4&KJ'-FH:NfS)^&,$H>I]tdBL0q?8odFLmF.YJn']em:M]Uj9Op5_nJF4"EkYO`Nq(l2=;;lKQhR\SO]3c8]P?FXAf*T)%D>YA/'JETBMP&LaDnu[L^/O`Y(1:6Vjn=VY:+omsqU!p]XV_P>f%Uom$?c+"6#fXrcpT.t'>4.#m.d\FcR??-9bYqbB'&EXG7!mA%oh#RnIa:mTkJTK!r,joKecmHlct7[;&\l7sDZ+maMU_bk^jGNFg<T(L.<gM7I[505V6;],9g>^T0/YDDJC"UIE9k7)B\&<h9r;4O%,2;@oS%&,YYPac9SN;+ZWtX2Fm-Jq#V*^YklmDn#AdBophYf:s=85rHHd\V-iB+co8ng(.XK)C9ZHJXP`WWF-0EJ-J'Me#6=6'o.%P^DS`"V2(N:b>=)pW&d1Snk4oJP:#bTWXp4c;GEWf8a,f=R>S6:per8.$@+J^d2m%Wr&9rIEmG8a25d`991-Uro1ZTM4K5fPh8+t%UeFU6A5NloNXpd7@#!<86FHB5.br/=(`S1%M[2`["F+6%U**MD,sgKYJ1pY9pBMn/\30oA+L^Hsdib_<c%mi0<&;TEe3;\,F"C?J%_!2VgUk)YI)0O+$/<6H(iED't(5ZL$eB<C!*SRu8nN&GWbFqag=ui+,R2,Bm6kNKFB!GAlNWl0hC%.j9ZnbaRCQ"f:O?PrbQh@'a%oPtefSoqCQ[:M<3N`Lo(Jb9H"pBON6]p*]_kHFg7\<aa3c;?d)Ej<`#]m]O;MlC20XieVeI%XuC-j"KAY+FfE*?20%kMfZ/8&kg2%#WakC1IN6&Z5Gqhk">g(0eX7r7c_ceq;IRdT_+i2#j+78:Df5SEam>Ab.'9Q8*%2t[P+-T;(J&(pl*9;d[5)FjD`#u0jDMN4?)V_%N2KqRht81aRdl:Ofkbo)jRQ!$R<k.]B9oiEdUmc4k8cS_rk=7;QSckr&s;*XSqp@a5N0tT=o.N0*ASRXi8+TAj0+khR.9Uge";Q)%i"bZ2d%:O]7If\aZ-T_EFsW`Co-iaZXdV95!N$s5UZBhF]^SJ5**Y!H3"Nrd\(0</o0AjMHJ`*@4P<1LDRmG9k<MJmD3sh1"/4lE%h#aPH*&8$8326rZq<oDqEWcWabf`(`B/"`n-#'#c-B8b3?Jjohl>W1>o=)1XF-0'KJ(Q+D9lCCi0_ma]i^et)[^HPF4-f%LVjA5P%gcrA4M:46=,$6%4R.2bA+G1%FMcIm$XY94;^tE>+n34=$o(MCB]YBprGOj]`(O%0U3G/D1._2+mZ4KqQ*ma)e$E%K7n"3;([ib(?%pPnd:WQ*Lpm0'`H/nCbf4R5mjr-;IYM5O-!;rS0ZBOlD5j>jm)6j&_FBaJBdf0u!dI#W*[53Cdmbg.H[YAo_,)nr<LRmp4j/U\N#%k8hP:r)Njlh\B9thjq^##t_pO>7&Ut]i2o*2s$n63CQ$IkAQn=AfBZL9_1BYQ+(g1lV#[Ve@`"+l"-/%F\<Y6I#tcra/H-*Ns2FZ%FZO^TCje\n\(<=YI['Xe74`ZXXoV5fU#r`QEckSYA]s[GY#<q6]WrNV,.h%9'LQA`-[T2Wl*9fL,DN0YZ%j?fGub($+4QD[cjZT0%Ta+AOK(L,r_!L&CEK^;,Qa"'l`6U;UAeo$oR@.2b^elg?6?fAL?-u(4qM@eg.'cG=mQ7rSTm"2BefVO5L'NfE%f56\.L-p&5L0Xb%UoE\$3oOmGe16Xln@@5BBN<h*jV#jAKT*m=P?<c[aC5XtI>Er_5hrVT_Ro3Y=UXnmpZ$Oh78D8Qh_d)97g3Xk+a^jm;_,><-#B#<%"%X'GiHTp7hZ$_QR?hE[/_r22`Nu1K]mJOO]Jj$YHtk*1gt7nRb>t`Nl.5/:p&Fa/mC/^kHE3ZE9G]Y59=qg%?EV&NC\9Nu&57R.%Kbt"3TP2,94J9U"++W!onh5@eF(b&[V-<jEh6)'J$fog.'q@dN*2r\`cXi7mPlGEE^p\b[B)ZH5*&<,gR0DhOJPjhhr$<L9HY7`^%/MFb9g?,dme\qGU\,3;1]Pcdl7sjS!G&Ppb=hZLfg3;9$<qkQJ.c46D0.JIk.rREF(-A;@3T`[k*o<.h2%>D;)RT/E>$B3FQ)u7P%F$d)ofFMsiG"/,0CI0*,h"P=qidB=lm_I`+*PbqlP)lI!aZ@8.b2T0PBO^^-"fG)@3CX^!QNc4&6FPqlM>$#?8.KUk]_S-c5;-Sg%?3<2Ci8e2r*hIkuaE00*3!OUO#\Oe**]T+(@C:o*p5qrHr)g7UUjkIk75VGFA&RS74j*.pVma!m*2rOuqF,\=[ZY'S3o%g3'2V)@%VtiGHea'ZD#mW9mlLfHs:1U"0o[h814.r>CH6^P8#J3"gm9Z[-fB\X+C@<WC<j,MgIB.'!"VpFff`F1B!KIXW5AuGOh9UG)I=%+\%l+\](CBpp,Lk_?JSDE\!;4krj'JG7!=lq8_)6o4AW;JL:Z4%]CfEXE+b;g<4IoG9j^/7np5=tFS]KV7f<Ftm+jr>rB7W\J(^GU>%%QUm1o^T,N><gV%2Ko*^ib@/s;:UCHk@>V/\CpF]shukL;Ur*]OUUqX\(8ooE[WT:ZIC3DJc^![1?!Co2gN;$9Ymi[`#<c0lF#GZ/%/JCgar8!Ue&<9A'2[-?Z:$SZ&G>n!eSBt,)m\Z)B^LW?s;E)QTOOET^,gkWm3'#IR1qSe+>5'S_\X&R:FJ?,s_&)%44DT0AbD@Y<%N@bZmq9mdHQE\juCYu/OEZ'U,9WYC6Z_b\8S7eh+2c6P6Ro+@)qLi2I+LnsBg#*,SZ[<]=3WEX%M+(()^@e_;TM@/rb=M-a4Ii35%c90$!3&m^!@#r!6'rs=#YKqV5he=?LfV%I;D\-2YUo.h,.*`/9X=-6k'e\R.%4q+q[mjN_K.F*/SeWlhnE[R'jgW)Q0$>LG6jZ/P%H%?:r?1jI;!O'-k-C!q5:Mcj@;'W@HCeXm;L`HREbY8C;==\g/`FZd:E]<f7YIIOqlAA7i`_'kn)n+OkRh`Gh=(m"].25'chV%HU%,`9.B1gj,$(WCcr*oVae=YrSf)m1%dM-0#o.s$DARo/h)J2\5iCPENjWB:GKBpUh?3=6RSI*Sp6@ueOqh>+T)c%E>?-U4Vbal`a;%X=/(tA)nF-;$>5g,/Au^jU3f=&[ic*mo:hJ%CGSZ2FC*d2gc1X_NrU]:5&8!]YY3sP>:<+9l09b4<,ls3@1S,lI#tj=nts#(lNAJ%`331$NYV.118Yna+H*P(@ps+UN2%MH1_>[9W(;"dUi9A?D),PE(tImcPs?@JgZ+3,1^uN;qC@>tH%Md&WiI`db,A?2aU9>60GU9<%"=oam#%p?t;Ge9.,8@u)8S*Z4>Y6cP,EBiiRZ/Y)lTGlOTA+VC&?!4rf<]!ki(OZjSed[WjQj>4U9i=<cNWEUVj>Bd33ad,a5.&m%09V`n\op)b:V<3+nXR]=I)cXZY`R(Wq147p-]K7AR4nC3fW12l?Ic%:jVJp2J3!2LqE(=#MM-<$+;>l]ZM]g7IIWELr2%UJ=kslp%7Gp4\pQ]+&4P+jk@;>Oh+3^1K;qQ^/IX^XGG^_342"@uO,Ot]amEVFo%WLM;7Rn(of@r"i5`A2Y=t@?OANB2-GuE_2,D.>8/oZks%MWAt(=FmUb)C<1>$FPCO0>Hlo@fSspG'>UG;d:jE4@i$*j@[^"jG^Vt`)qQ,f$_572%Z/5e+&@U0M>Sk;9g8Y,jt"O:A1":0:08i%lD8[2@6W7SklTo$H%s<<m[_GLMkaTNm\fdC*8c+6(Y97C<hSng([)Lkh(B"K^kkQBrRSV\kdR2]-ZXgS<j)9m^FAV4+OKAh+j0E4%3afTNi6A+@F7Xo%n#JSNS5J&p\Jq\gG@E,pAZ>Bm5L>(i>Fi48>\?YqP"3U)/A%V%F22G>ZU1^)Is-,,kHRR(q6Y1AdFAAU(?kBp%\]U7!+&uM8l>+:1c#N"-Yu5I7]PX0E4NqWT0!&D9R3&e!kGRl.MfG8[)L-]\b`TqhJnj6>WQrnk@lQb3nGLd8G)RfI#+hFobPqDB%eb9#G9eE&bG@gSqX&Th"#?0;,Jt1Hi592/F5B#-1)m+bXTCm(o:6Y]'oH/ILG$7qJ[%cmMLCV[`f@2?(S!J-["6;F)(H8r(EoX:Z%BXb"t5LYMj\iDm_gb#E?e"l=d._Cq:7FXlSW&/gbK/Lb`7,`2Z8oLC&DuPss7XpFs;O[OXR?AsAki&/t`ub*J)hJ!PQDO4^qYj>a%fAOWSPUso[9@_IjW>&%ZYgQl-`AS'\WnIsL^k(aU<R>;U7PONc#;lak*Me.\A6CQ6&jg5H"]W:Q<M4BD/\hi9QnBVNVW')hWuTV/%`!057jqfRA91oH;YUKrj74fpF-Dr^m/Z>*Io`@fc1t@-X`/kE36Sub_0Z;I8$U]#7ZI3[d4j19M$o;H`_kh1udP8\+1eWK%AXZBO%j"OK]bd;ml.j+m%Ys,9tW0Td-UJtq2e$RZ45e.)8+r&Dt;$_GC;H-jOV'(W)&1Ibb&aZYq.Hm43M*rcrc*.qFDumhFa'kJE*"us!%Y>8OR,>-lSV-B%>>C*,F"f^i+<H:+5O*]T",]QgAp%3b5(&'pfgq=CZ=r;glb+op^rPGj/PfeaC^^`c"?BB#?ItW"pXQbB++SCl.%::3ut.6B\^9A`u1Ms>(Y<(f]DOjOtNeZ#/)QE3/%/7fJt6@`aL6<\'O,.a`c3G8Rf#I2If4WX<SR'#X#L=hZcL_,XM)H=e)*2Z>o%S/*em"^S&7a]q1kP,J^6#\aK66Qd9rO.d,MVG3fsnt'[>MHEJ"+H9Dj9LumdWOV7],Cj=GS0FaEMP5qR$P;/K%cbgsBK1opAHF):%8HQ@Mfn)WIEf4@&rY>&i6dT^LU0'=Q#It@#2'n]j)@l+!KRpl].FaU/G:BWXK.iWA0l.k-$7+pCr^DS`j>1fn(:f.O"qXKd0L/LV%D`!Qs<)HW54q'5YS#DOJ,8)l8,-i@YO;qfL+S$S/WQ;J>$^d#8,ukVY".AIKSI%`X(j&TL<.j`Y7-SC>."nOdB'Y2`PU`Yi)\X+r%AQO".>"H4q&lJg+Z:2&&#]C]<E>ELeS5$XWJXN#V`c+[3Q\eda0oX5hUAh'Hg20RnM*.#5>Gp&jZqSAg*JcDR*3)<,$$hefRY07U%fFl+D"W9m+7:[=X!@*imMP`Bf9S[G_(o!uf;)q8S!NU=,+@<PS!\tJoS3ai=%(D0=2O4@KJ..OS#]C#'<RqFnJd6sCWa]N^ED*'l%;3K9Bne*5e1rgrs9UeKpFC\?UKb.gq,!0HLm5E$mX9se^ZSdjfe7ca#7@FAcD]+>8k&Wq\6bGI2NLV8Ffn=*+*c@rGg6$m(r6Gq\%BLC/%8!SoR,XikG6na(?`Ba_1#jd8%+oFb1CAQj\@R>2%-YboCC/I$RWAGV45]#d(+UIod>%\rnl3`:0(,b/B6.&!R)R']UHNP_%%DI\JS>Ik(@):5@^!(/P!.kP-qdZc%XX:NEX=&c2bPUb#fQ09is*9iJT+gcY36J`s4U0(#W".U;DRM+BCqN/uqDQ46L`@sa'"UK#g%LN+qc9Uo%o5(T>r.aE03\KDd!r$%-B^B4G5$!];;aPk$X,n3P!6&#`A@$ml8LE21)A4:$#A$[9J/ql02n0Ke@<^F$"g8Y7O-4/U4%"iZ4(%>+[LZRchY1sN6Y`)'iXd=F+']N]'$.q9.!m1pUV^l(XrD+1m%#hWQSVCuqVW[QpkJd1;8.:QR*Fkrdq;2RUt9J%hm%JjSu%Bq]AX!q2Pu8N+LR-CWe+ZA?RiUCB!*Y3O5_#/P/-.'oR]Z7=9S5^;TSN:VR0U0Q]c$&mq%EHX.D"c9bN(26\G(%a^Zd%VsD$^.<K%8gMA&",2^CPbgIG!tb`L6R/I]^Ir!0+++Ag$$'imBV0h]2.[cB!O#+HnU\LVU<>7J64c9F"c*2iJ,muZ+U5Y'QmKRrb5gCMN<P+E%WaPmWdB$,oJ/!*r]uONZ@P]TDdR_>DI3<Z:U$kjY1f@SO*'l-4:dCI>!UuOEBFtS#LgJ%9&LjMUY3H]^j*-;Wk`"CB>_)>+E>W<i%a2Ak7lP%pmWT$V7PRE(_8MA5Xr%%/aQF$gjJr34$8uf^75dhT:&Z4j/%R_-N&/-!$k?SF1qVY"S<&BCTK/[KGV&GqWJQ$-2?c6=P%d7jneS'Y[O(P)sLBet;p3YhjM=ZS,0RD;"j[c%"]?kuIE0uTe+#RJ;Ql$FD)(b;Kf9JBV8`TiQ?%E5!D;5-<;1kM51%N;,U!bh0R%"Q"c-3iiuSV3"+8C4_(0JI/RJXq0cKA6At2$<bmmkS>;RFWADH^_(QMn`g6pEhYP>3T5QpgsV+d.fYD'+!tmAXJ#+s[T+ZA!<_cm%5k?_L1c,G\+Ms3H;.OKXS9HE`l%:X?=TQ-i#7:he20%+f9W/(;,R+@,@=ol6TZp"p!J6b6b369n>sC$h-:F^CbgaGb)R't__hgf,%:]^b8%`uXhKH[BeYZ"4T#%rkeJ`$u@*@2'"",7JEE6o_H)P-"f#^K43,XX,ZO<m'k',%SO0"Fe!/-tOP8/#ekcu"n_!Q&']@@RQB%'B^%4:>dHH9&M]U>`akJH;S;9?ZH+``%@>kKL(_O;NIVFGfTm"b#W'YFs+Z;KP9#f3:BaIdg'6-Z_G7d)AU-22I5VI_D"nWN8u[C%fF#Qb&4A>$'N(!SDAX]L@n6s:IfMjb7ifK@9f6o>ZD)1<Nsu[$K#$]!/f9W+$&CjBQ7>o?ElU8-"JV!$+HK?l)Zacs8.2Pp&Fp`!%U96i(1)hi.&lr)=155(P&kGo.>EgFs/O4R@3/hj-,N;DVeHr><1i\7+Z3?Z+,o9ufrY>)j8^rb\JSI#9+lt"E[BWso\g`BM%R_/$%%_NP.H'NoK51gJb'4bBW.uOlHYV`unfE1jmj2td1;1Uk16'FeJ6Zc<U&;*L`be&]O3rkZeZMX\W+d<KK>=BGT5X5N3H]Q'DeL&gD%9MgX`MUfNf<Mf.]U-LFiJt3Mab!W*QN?c3s-()<fQ;@_JLMb'A(20J>]'FsI]4$R2W<G^HAW^^._V<(=S-'`Ek7XuE@3m:Yo:+2\%aM]C7-r]]?T`6`u((?$'SrHHZOjFLFMcE8G(/8dV#9lhh/&V\P]+iig_)H%"S5]TYmUDBA)&Du@$SWUs>@\p8:_%[:q^JU_=FARs%2!0G?\VDAK@3(\'`Q63YQO%Y1$3nYlVMo$\)Sgq2qbGE7KM[Fo.b.!`X\LgV,>l?PR)@!/$(I/W'tOP_c$k3G1'@l"[TWs+])ecX%3a!DTBt%i0Yr<*s@+b]fen"Um"%g'r2Ll>qQA'XTXp^LtB#-r8@(N.*84#".K[>[,.],tLWfr`'#i22NUM>K\W/3:0Q(^JRZ)i1b%P0%SoJK>[d7l*Q%"UK#`K/p&HQlH=8qF!4sOrS'iZ5nL@`<LKe:7'c<PlM7j$JCY$#DOrWb"9:&BFHU1Q-okp:i)'(XCE([$/L[R%1Da_gJTOY;Lb0ENMTiQn""(rR"'1YWqLGVSd&;1C<PX#eU>+c`jTpI_V+[m,68lS\Q>VSV:lisL>JpYf;fu.H4*)rQ,YB;F21]]I%_OJSR%MK[+LJbE>Odh:VLZaV67kS-4JR%@j;1D$/eKIf,em4T_JT4?D56,c*&JIg14_&%lX5h!_eVQjc30HNF1qR./VUJ2sD8\,6%;]OG@)hurX+hD9:M?JM"Rn[.=A0SJu<'rsHCDn=a@[e3d2f8]8JrpUK!L6@KFc"$G!/<U`<([B9Z&*$G/W2kf's!m"Q;>VL[\7A:%V.A5<Td*!XA/kTJ-35NXA7C(lPEZi5=W2jZGk2/l+LNHmdfOGVJB2D7^_6qhN*$q4V!8kQkdjGA8]V^`&/4b[&LrpSC=HF<RcDsJ%7*fl$&a"UsBqc10*o=ZtPQK_+FSJ+3&d[K\9Q1prY(L,^7=0u-fnAO5'cJ3LBd*mLGT)!+=&di&-GY^g<QM=Dr2+$=WsUX;K&%]c%:QoVs_-n;lJS5dl_1GrEf[?d5"spX2=^qS3Cr&54<lqqR&8*^cV%(:N,Y?G;AMgB]U9P,tN1n=$"GSC:UC1t4##Qi^,"lH:OTQ7"%Dd+-2(s$e2Lh'BuP&.!^Q7<JNVCJgOLEJR#$6X"Q2).M*,bieSVR#sC>`U;JBkdd_U+%FDkS>ihPZjo9U1-_g'b#fg+uGOIhLKiH%qj"6#l%.->:#HPj&%63</ltKn&PifORs!4s8Jailh*AZlP$MQKK'D3S4!QJ3i0h#0>'#L-qF)5=q)Kei*Urn.++dE[g^Hq9pHs2c%"E+GPU82"&.HK&!R`3Ys^YR7!2;qhCW^mYh'Zdj3dO[Y.b8AH;5JuROLt*knP*+hpS!!*Z`%*k9Xb]c?[fSWj'ZCVQ7G*To;hZSD%-gX;WENRO]$C'2#.1F'ScKd3=JXSs]/a"fCk]9GQ1#V^2mK9AEq\YiDmY?U-A_mb,^<4)k>"U.s*<?gi,LfD2I7T-8>P+VNVFfEj%30Xd^6"^MJi<$pXE/N0nnrlr4E1KiY9#`GIlEB+P#KR\jK;rInq^`r92@Vr:$ji2^'g[T`(aEnJV.kZX@apE%,)C&NWh?[<,.(^1%&cLm[GTYo;#sF,D76;G5gZa^!EFPQJkeQ>FZLElgL;b@K86oNPV#CVfYpSaK/gKBV\5Xoul)k_Ydp#sT@W/*]31Z>^lZ?12aILO*%4Q2hG*$nU,@0*-6)PYqfCfhF:bCU2"QDfD6octKKX!r[Wbna\djV]DC>HmtBcGQT$\eq3tl%XdPH"XNVcAY[/W<F&pK*aiba=bsI%as0Q:5a;A&Xt3>*6jQjp#3/tHQoM!gI0)Vn<=[Uujc3lane3AeQ;6#:`+ac)M`\J*M'^NRB4]&-JHLfj\VQ%%4<uCc.3ou;qeCk>%[i.S,b#1&$Fs+S^"D(<FCN$E[#b.+X@5)tg<;4"R0P>Q\@#@Z1arnoRf*(u(SH1sB9iS"Sdl)S9#$(bZQ+>i"C7&jOMRtaYFrqQJ%pV8p'=9^K>i]r$%fYquL%l@.g7/MW[L2+5X(j%mj'F+[I2NGr>5enO0h\'A9Y&[4ko^_h]qol#`-Cg:E9g!?a0G#@\1Nc\;#S9Ch%H,'bRToep8WX.%:>U'7PU('hmfE(JR;397ML;r0_X%_Ru--'FOUY$06=(lt0&>-2#!4nOHRMUo[dUg6C+c*;JGS`/A5_pbF_%TqE%edY8+JfGuC>C[<<at[n2bNfg81T-*LE)&DPntJP*:k2r.V&A]![P!D(!W""@MVCo0ocZ[5V[>`:ge=MKJFN7eR)9)^al*r7:ZNmu%b2GCVgl[OsINH65FNLm@=*K@+JYig8!C6.cV5$D.cJfE;U1j&CZ:mP)!J.-3K$&+id!cQrPb2IFrI`]LoHI$Fl"HT'h@Y%nK^O_*%$<%;c?#9l)Eq^(G3elq&$1&`Zo*YF2OXf\&fO4phQRmbL?'\o>\h'mXm';QqLYn&,7j_QanNJHe@=8p-1^HB-RK3F;?+35h6%k_L%f#MnA;.>GI#ll5PO/2i#ZPeR64iQE&$s&Y?I5jO*PB!=B7hd8l\go,P'bglK-!?bB5tJt84)U]S\g=qO^^,ohn-IhoKPN)jE=Qq]%S4TeCJWZHLc>HCd-ka#I"M[Zn_(3==\T>!?",lEQ`PiJN\+-bUb9as`q/%jKK_TBkS/S--+J4\#bljD-1>SB9jodGM1_Tut&d_Qb%A5E9!;RtHTN"LTu*FK_;'N0Kl6ZaL"#lrG[%0lrQ_#g\eMkuN!B2\KCJqRBZT\1^/KQk\YHa$G6oJ"@fJ`!INe+a>f0uFP<l]oSP%&/e_66Zo,K!'sY=5Vs.6!<BB(P7/tQM8Rn0,b8*`jb7!B!)\QOiRPbF4BlqNKI)e^N!>tMe\M\+;k[b6)[M]i;.JC0$j@QIK,0Qq%Tk__&!7&t8D\8("U6-:P6m7^ZKkT*Sl11^Kaco336Xn\f!$@+."@5_pTj`ahR&U63XL(Z*'2'e81b:C)^e\)k9Q<<oA/U]XL#<n8%OSZ7K9JP?7C-3IQ$fkek.Lg[^-lga7T^L`?$E>A[:&SY9RfG<7Q;(fT(+Z4)$P4M#Rk2eS;Y5Jk''?'S6V]9T>"H";bL_hHs2"eW%b];pI4K:Qs#MB+<YSe,j+u3LBL?>>0"2iq^f#ZbT]-U&;TT^qM<+OR!(?[G\i5F%ed4lRpN5!=U>_tEK=a*lRdK1aV"pjm)W*e6E%4[Khg)qG?9_V+G<dNU^X@HO&j-C,i]`kb#$Ogo/TaC]aL-B7Y(JSkr0=sq*6%lbo]-XNF\:#:j9_\pj^9Y?O0]8L'nnQoP<>uY?m%NGMk?/6#5tbbHn_fQk<R!>l=U@8@.O\nqc1Ool<.O9!1iQ\3EEN3#4Jb>P'JVm[Q]!P<nXdi<!4@#?*3rY-6p$"`OG_G=IGh=VU1%7nB;m-qMQ(U(dtHhC]"R>0el_*2:u?Ch*Z/b[s7)o'f8rl)DN5l7)j/,Jt:N@>qMU])Y5sCtGsOVF34oYWP0E6P[K/%`I1B%`<1N%K8I-N:48-)k>9.14GRsT'+.(f>o!#s>BY-hX2$%l'G5FNgMg5,n_c!qa^U_V38FXh[uS9E*`tOR9A.6u':DE`E]D@C(8^#VSYr[N%ZbjZ:4^T%<l&%0S:uDTiB)RSc^t&WmF2\\)EX\/)M6IFZZUAZl&>AV<N+bCB`&e4-:$=p6-IU!qdC^:dV?qYcG2^NF*fV:e23OYa%V0CZWN['p"=>"nF83G<hOp),0(kXinB:'YSZ2-jP16NVp1U8$XGicqlX8%A@<nM/_=98mR#+K'7h,2h9Y+T/fM(S.+_%9`_VKNG;%Cq0Nj>0eqnT#'_+\dt]rG;;oRmt[W>=`9!]W\e^p9i5SIKn'JT[C5/)%\Q1D/rN]f'=C6F*<:!u"Z\,ABH/q8b!]hsOrTcDZ5p2p%KdTX`1lJ0uMpjEd(3ad8'2.9ENg1@BAI^9Rj=VJd4LkQj%O+>qh&'*S9mg'%!0[]#!FfgWg\QFDcuL$tUUt.QQ@"Cb7M86,:0!Ei%g_'8-"2L(ulN%!1$Va!ms2<+EFJfqqU;IV(].+i&J1VB:_,eMjM<5B'2"D]CC!\%)P>!gTWD5)(@kA^QkggZ'A>XHD]-r?:K/R$a%72a#uEAmC133,&&Jqti"?D3KUial@B?(rUI-^CPq6hrJWHNOi8VX)hfB`Wa]:u5op/lOeF?#tiB[LS`/\#lWu#_B*;L.^@`0M]A4%dh!k_f`2RNVP/#eWFkg+,WMj/<[)FD*lT\=aCR:$!o\s!0e?e%9rSCBjRGg1mB4a-)eh<,7R9u;\3fEq+M;h:`d(r79;[V`1(#em%,/JP]#`pW*?oXn.ene21NfHd-L`q:N$B9O,&nJQR)Ts>J7$]G=&f&lkZSod5'G=WN8MJ=V^NJ?X&6WuR/@$Rm]Yn6'ZPc4WWAI/%%LKS:,gJ`ZL%-pWt)%[.:BJ]-?a`.g#bQJ^`,cf%i;Q@'l9JJhT`)'aiWD6!PdY,UGh3(4<"UK#eLG9Q0Sr^"1>_5'[b$)eUfK%)4%Bb>6`jRd:T,+e5B4U@t9FHb]#L;@k+*/*!q6TIuBD%_1EWH:F#=%ET(=JI=`&Q$;Ja)pOp;*p_SM%Eah3=PAH'JNYn"m\:Sc9cRr%9jt>)k_'ju8;D*F(l0AImK8hE`HIMuK<8r+,+WQB`76"dR0l5`-`0JU4@OR7d%*4^D?7UYa'kJC*#%KK*2KFCR>H`oEG!@5fGe`Y%DQ1-7kAg5RjOWP'CP+je/4Egc;.'X(m[>aPLi/UJ8L81f1rPY!"a5_Pi_#45&_n`G7\"+OM*'A&5/@]k<"VosPO8!0ei9qDJn$12%j8_Tq1d5j)TE8^UBMAb%h+:'HK&AFe*L]D&CDhotp2`ot8%_$:PFNoDDbd_s13b,.FB@E-F8.V[:auMTA)p;Gf_a0+p?5i)_3C=E%YSR]jq"uDXgZ9!OjT:D9bo@C@Xa,>H"4!n*DE=]Nl&1-qH&m[X_;]JF<X285(5>(],f@$[K2kGWQZE/$.cPK/$c5o0_)N)f-I+#?%S]FMpPJ_H2[j)]moK58PcHpTKPX(6<3+B>K?T#l>T`%l'K=9-6_:c'38.gI3"3#unark0R"W6X1%$T.I=aab/AQ4eP`l[@+OZ#qt%XU$+,Fni`=IERX^3Nh0Sj?M.iLUWrN@qZ[]JI;Tg%m2cXksF,iA@MGeC\[A3fA]0Q-R(<@9l-JaUWchQ9;3hkU*toKDi03/[S!\4%R^\![K4l+L`t]5![o"Bh!=<d;Yg[s"l#=_tMgR@E%_%Ga1EuQjo<im`>H+/*iPU=6r39hI1Rp9b4O::3ebNT"*]ZMee`Tpn7h(<G%%[bOcX6H\lIs;W-N_sqbQP/^:n-l4sdbaV)h"etHh0:N-%+Xf5!KOL%mmn%"<QE;B)rc9%lu9aT3aAua+tq:.*+cY-*=!mN><J0(%8:oT1g5orCjA4:piFuQ2N5oU!SihjZ?GVD6cZ1HRd:qhpCpA+&HO6&opk<9lC*K<'n[IqR51HgBG<`]k:dA0C,]Bp>m\NmjnhI$@%F16T0H[Vf1n;FnhEgc55s%FW_99#DkY5c'"-&fqO38`hGf:]qDP/@r)+E^-Wb()1j"!kb.X)S1(N<M'$,`*dhRU+Ehc[nErYZ.Be%o6"NS`bS8Ok/)=lBPG9.0WIptD=pA>7''mYH1/EnB99S=f]XS$AfKE95TY^*7<8=FK^sd[?_[V2g=U10+`S[kOqK]FEab`MW'5bj%^ItIuE[:?@?m=L@-C9;??BCCHQ-3+(gdQ*#<YN[n[RY^'M<RiOMt\J5ddfbH\5c1!IDVd`,tGfSinZEW0YqKbN7-i42iX]PF//Vk%bN%eLW)!\11WoYK&eEd@Nj]ffB-2-$id!b_"5['/?K@Fg="=A%Qag90M<d$,\mVWe?Qe33=@PcE/2Sa.=/'mjXOgI*Hf;"LDs"0j%I*'-C=4A!ZF$6OEbH:G4E^79IIQQKD\!debXM)\G,O)Gea?Cj>3,ZH:j"IiI=#&<)Rhr$.mdOHbaE:b#CJga8p>EIcHM>]^MfRn8%F2qhFHVM42]Y1P"S17lW::[RH339Pp&Z$Z>G5phg+Ppk5ibEmW%p*O*U>WFYj)nm#_Ml`O`E"=!7>F[i>3)R.FEh\FT5f,r]uTe,%n_F(l+"7tl.*^jr@#6[Q_,,MD<ia1j9ZF1Ma"q/uYsE^)"/_8h.m!"6>)TH&B[VTH7%]`X?&S#k87[bMebH]BjnFnhT6\b<Q9$39%a88Ce0t2S[#m0*,1[K5@C-!oOp*(T<Ur.$oqi&VV\=N:2Ie!(lJ'NI13DMO0'^m8"A1"o=[2ClOmf(d;k2DCU6Xcu5&pkZRSb?+5%=W5jt>X(^.=_1(u=c$QhID&teSLNDc_Op"/kWgs"mVZ3A22k<?3NL_jn,mq('KReLC(?`7Z,fT`l*/sa5/ZqNGk'jYMT#1gf1'$Z%_cd,b4C<.#*YS+F5emCk'(W%G;54/!=bq!aj#;V5.=c-+ZfH`c2Uk^U:'=Rk0+!ggSpV>0&OqC]ZALK`\bqA?ntNjU-hTPW<0[Zm%!ENW=#1>79J/>ikb]fk`q);bmj$"c'Qp)X6:Q<2URio'A8\*9<Pe0tg[$Nk6OC3-n#\,'h'p'Jp=+l'EnYBsV=q;ef/o>HK/_)c8%,iAqmKp>_`X,u.WlN8CY6-S@'_j7)FG)7Hu.!9L(":%RB3=4Tk:,XY;Eu37)"%:)*.Z9q>R5]k.>i6-^"8443S0bjZAel?fGgmFY%$k]U!),uMq6t9Xp5F$iSUh62@DnR+A+ja?<Q`t&kJd./HpX(NfKfF4%d=H%4M_T&kT\P\7E2*b@+C$3()cJ(EU9gT$I/cfO'.RI,%)S_cDojP]$7\B99RqC84^?@7q+Y,'A\4''$[?S;Q:Dk0k%2mJ$])tC5j]ln62N^jmZmRb2Vi&X_Lm0,(:N-",iAl#IpTJ13MG-nX%Dc-D/C%/e_6&CFEluoA_"bKW@A/?+4^8si8DD)/I+WtcmD3aSXi9-(mSVYKHXdDD&ET1=r>Cn]Ea('0HX2*Ag)4=\F[5d&!aHnKG%8b(0o*Od4jmV;RVX3m@[f/>/Ggq$lATVPhZgE=j>,Z%qd)sg!@U++k/B"$-.L5hp;-.)sN#AdaPRBtu,eA5ACQ\>R.Ug"i0Z3Xq5%G@V_ICh#CmQ-sY\7@dLC0#^(P%Z$@M>uuu7<To!pRTcmU2jFDKSPh):.0Dr(Ia2YQ`=((Z,^,p.HSSNCKtb("PJkh0?%HEl.ubtr%))>1mk/d.Sn<uk5Q",b<,#K0(6/B2`@U\K\^0*$Ajd91p5[!:eG>$R#.g:7S1n+W!5+fVZHV1]t\P/=<2%]uM-4lLeBSN]5#Do-8%d*ZB[*;5Q::apSt?kI3#&IqJZ6j/Mi6onsu1=qPjHkguCXE3D1-24(r61$E62+.Y=$u3I/Z(u+D(8AI0Q:DI05S>g.Z(uHm/%To)%q1("4FIO?N:`lu<?<P#[gX1^Rf/seDp22TZjeWAZCdKJ#O:/iT!$'7Gej4BbnFRF0nqf`3+D_<f-VejL?W73XH':`6Q)@BFU*-!@%j"5s!8S(NSFmCB_ksBGm[tZ%$dU[H,)`-kHNlJj@'\iU(qc2-A1Od=@\4!prX(dUR<IYGb!@Ya!BcmiICqV3H(Gi409!Lt6+4Ef<%'Q%2^Z6I_<+'-Z@W_c*<'#9i#Cp0iS]!=F,!LZM:<F%^Ur%!TqV#;nD!5aud>eKJHM6\in%MY>!gX0?(=Ii#@>%dVF.[0#),P:6J%@YXE,#SB++!D.VA*>!&(fhR;tO?2k:"B9Rs,nGmi*!(<N@kQbho!EnYTHRLMA"UKiJ$+qF0.1_;6"l'N^0%2+VhoZ,QL@6Qi0+eL%0hP!$<#M89cUBJ33Wu+"":2aRC0X"@qWZF[Ya$r%'J=+>+G;`7I$D&cNBEKQJ2A5CJ5pm[FfL#%)tG,A[d_oqo*OcW#jW9;&"Vp9%#?GNqH_q(+AVjP$^<.)T03!VW:tJ`qCG(H4+V9o`rtNO4+S<o$B7O'Y/FoY>(S)]3[1hrfnMk4]DYEu``*N$TZ+P:r=C\Hg<"&g2%KH<j`CmJq&%&KQt(e@k:L:#q?)3E3^`t4[F&_'QM'pnSR[`;hB2E4$'ObE(PEkEDsj$'D0^9W5Mf,VQR;$o0(5#e]Zp99)kJbl(?%dR,StDF!EV6-]P8`nBF4"_Keec>k;eLZNOF@a#K!30M1)h#raH:J7hY=7WoO3ouF8H'X8!C\][P$K_XM)B^MBQ$=[<,)@r6fZP;Y%3.elKBP)5Q%ks;t-$F!VRTDO-=YdXXAQ!<R@ERZ$o$+2VVBYSOUDJ$:k9/BX)8l!c'GDY+e!aFQOn;[$8"!(2_C0SP_o?4@LbCgm%TVW%3FY'ILIppP$-4)Rb2k/mPAdjA!TK>2_M$u*mYnj4b6se9<ZFr#o:)S(#dHNa$?t82EGdcC-"`L%&p)KXLUdl#*8@o^`s!eP]%I?rPd)J(?f>Cjisg8mgI%+URl<@OhCKEDHrP*EkAoui\P9f\Za@()@?0oe'q1GQ65P[p=O"-Q:Wd?GTCF<V\hEX3G$`d;bM4inn6%r8S,4WsTa0+$#7W,j(7AXXoXLH_.Zo,"a-6!*,LE\1V2V77<YrFB[F@"#WUS]h*Gf+Di:`+cpKBb3XZtV9L_;5Gf:aA3_cEa=NS"%,^<S),u+?:D/&I+Mhi$m1mNPePF6?\)'(H&EN99hNGLA]9"'"O\5Cgg>>M6A^3a)82dK/K_p4ae1@/_Sp\d]JQ[5S-O]TjAnSBeL%k\:2<?#)Jm79=7<Ho119@X.B=RS(K7.K9ELa-r'#hdT^"P+`'Y2`Nb0O+jn(RY,a4JAFgg1(EuI^3QNP;l_B>hmfJM[Gf]+d/$s?%bJ(WqUKVEI3%YPcH>\/GP0`=B.=YsKZU?o[bBN.#2&$o8opCi66[)PLL)fkn3>WJ)+(4^Ujc4q0G50?ZEPGG.=>X@N.6-Q*KDn7n%M9mD67.J!%`0g3?+uf@@#etkSHWL:,(/Mc/Vpo"1jBBM$!Q+oA`,r96X-rr`!n6.I)"tb;?'aq?R"M.Ab5a*8a*8%L6m8!p30XO(%4bXGM&-r:R'0^K4@![sagbljulj(q/!a911Wp2(<g<"7QNe,O_TqZn?G$$bkT!d:6<0iIm'bEM-fQKN$N3SaQ'-+P9<.+\u*]>2(%NS5`M7=.N/VQ+054HQbpZ@/r#WK\RCQIM>Je%a$<V%X-lPjeg/B.cG]07MQ:baAk`NPF^Mc`Z1U0d'1W:e3%S&4W_C#ZCoB*'c=j%C3?#hA0;G:*Oi1GGKILQ_3Uk,3E7o+Mf)l"+?F[[hS'%i3UM)?'1Icr.Yo4_ZKbf,JHT"Sd\AW?OV,EToBf_?a#dig/:q)%GI>`Y%&D=e@dWDFokQ9-WVIN@_UeT*qb%M)$RlZ8$H.EoIVGP)'>3f-e-,*]!X[kuoSI.[sgj,B.=ii9/F8RqMLoB%SCQ;ctRdlhc5FU<>%4\XNAM8D,LXc`%%GjcVn*`tkV->tL*dV3`^45FOGD?KXiaj.3#`@]$4VtZnR=7Z/NFNU3rjB3[uXlYb%ZY,FEef?:JhsM>6oPig+%k5^;ZIpdj[K%*Y`$_\hJa[9T[=]oL^3YhNAh#StDjQ,JC>OJDX.P<Hb`fMdb[R_%6Bs=KUZ3.thl#[YVcs@bC)L.N&@WMW,1uDgT%S3u"n_j/Y56lLg*.AH^)E$0P)>k4>RQ_?S*\5VLa@Y?rUSNWU1$Ff.\geGhrj1#J1%m=K&R$-oa/sAX\\=BFY_*Aoib=PH+jDsDn%jiEP,H/2O1F7LVU.CtMj++!Fs2q+r,7$h;Ya,*QKTnYM-5^9aXfW9l;:Kki+HG6D`N3ucO^3dN#8,rQ(WP\Ju4rj^arH$2n!7c!P%bf;ke]CSrsH-UKcn'A65jKiAo7oKGQa4<%`XdZW&MH5mJpB8q02B(O2$`N-hMFt8rSNYk\OfS0!TIf5e-LTi0(!07FH:oL2k3b1I%"jW-2c%'iu>t+<.KRm&iAHm:io+c/t9<9PbmX8kGoThjBK"F:Dq>fBY")74f>jDOt_0JHEC0WTtl*))j)=!0unZ^kf-=Z60<B-hV%8jqpO*K7TiXrNjJ1o\#s-!dWn0?f\IM[s?Fhl:6(9/g$p]-H1uJGJ/2CT8!h/MpNSnVgY-Kr?1MM?Di!B/s"GnW_YFgl,09i>WW?%lE(tl]X62B/mZF-:QhT&-+_hS4!<CjJ11l=->+"Gg[3!R(l2+K$nmcp.1FAZd(Q2DG`&o%!BBeS)Y$BFT;iKs]INtX'Cflj*u]sa%KM4eb3$bpI4%WV='Z%&@LoK>FfT7%J@!&$Q@Ap\X/'Bbs;qr8oU5-kf=D2kbEal0^1&/Mrgj9(copq--ZQJW4Ll@CllWh[c6`$r<%;+C7.?dUf)mb0;$PT8?1m#Z&mi<gS+JW,`rZekAO)j2BSn`NTQ.gAjUUn$"hHl]?.p9XoWnWbTZ-nd_B$0=-)kQsr[Vhf%A[D]8S%fHrpZHC8ql:G:N*<EUAD#0IqmrH$2ni&*Nm]Y2*VVolR<Pl&NaNaJ%%qTH[FH<4h:&&@IFh.IXa3`fi)1C1=MJ]i>#O,0IYk$T,1%d&LBo$$,@>A$jd?MQ.p7$dHL?T\!^L'V;>XeK+[#9YfDE'%)&f>^-)Q)H3^?`hkld9i]<F(C5WRSMLm!&FZ&tc2b&iGi[*Q7Oh!T%CaV7PaF29aR/UDMF;)CI[A/XH_]\XmNK5jPrR.]nn&(5eo%ai6O<YCiA1YAfi3RtdFN>KZO<Ji7j^:73rP?\lCf8cVf=/0$9qhC_%]YV@:h1]QmpXTIlLB?O*<pq38a0@m\QOP4QXUi:]16ud?i5U,lg>1sdYDF`b]c8S^NgC3C3oAMD<rVef>3!aBB]:q%b^\N+1ctt]%%*2O>>[6K(%>8%_NGc2SS:K#;\']I6?C1o!YYAjKn)K5j`+*c%E"X$QKo3I].ltpto)f=fFh'"2KHgP`,%[C]V%d5"_Db%\Xf%bD%oXjGG>*>erJYmN/!4!A=+S76naoS]e\`D!=?91r7j%=P5PrNfVUc&-+d!qR:5&$!R?At!<VJ#1#n@?u'A(XGm3h0F\Gu9-!hl6#=%r92`hqmdo^I)Gc0APuF(>UMK8A0OiMUJ;)ubR5#H'9;sHB=CM=pc6/J*1-lM]b%c_!Kl:k&RcYo.Ap:_1]WKOWJO4)HYa3.4Bd7;%<F,R;&*4VEN%ClVMF]a^]aA*U\oNI]&EU@0HZQ\QCF^#T&5.+7_Ars=$^`]cCN;miH\%_W<8b=8*QI2)HCp%X+2e$^)t"hJ.a5K6%*J9?UnT?*:.sIJ;]gSsFAa2o>X4Z`"p&,B*dP&9qd3kqcJtR&#7\]L4@R*slpF:H=d+'.e:0F=f=+jDt@LQ:gP_lW>M,t'Ib9OmV%B2Zl,hGg+nn<sUN7S[H!*clc.&kM;,7+sj/ZC1:HVpI@'Um/CSSPKms@S\S0O"P<E_=guL"C3CShJ/iH+PsGTC&bjnA!+/7\EG1A%?CQG<&''+F5*I<X7er*"b!Ch+8ep2-^t!5E?9+g@0f^8##nVJ!)29N'<:':Kg4"e_)9>_ZnP_Gue:#AL$quEVX8t\)D>K?4+spkE%O9Zjb"-SRqg;F[6U_Gcm=/6&`6`5GC]NUYBNigRX)I?>YFmh0=i=CH:LSPE.EVspW7LUUIZtkOiZ%?$n\$,!`&h7(*Bc^J_EZa?F%!PjWT6Zb_tCCq3aGX]WIe(EX?+j&Aba::RX+1KRlaH(oO_[LVu,Zh*J59G_gDI?nnFcg/e&OQt4+C:/Fle@kWLC@UW528[Rj=;<S%<8R"0C+9AE&sV[QfGVA?aL)dh*lWX=N7gpUnUVMh\e$#;XMgA7a=)GZHc)01HM!Zqp6b:]]tH$N6sm\3Wj%cXENBf`G;FtVn_P]=%jd6eJp/Qi3E2X(\/\%O7mGY`il&dGX\1KjA*Y@dI^m#45PB4n$$iG+HSEirG)491:I3qI5%/(cXY_+LcAU9\Om$2dJi8_VB#fg6q%f#='M-'hQtoptrN(F^rP])^IAe0,cQ?=7iJ2hn`93SB32:K$5r9rL`^:^]Yan/30OIlFC4nqsP-kbUrRNu8OlhO.@1L<[Ho*M$9M%E!rAM0&Ct_^BC:Bf\HYgSI\+Umf\_Miaie;@B-2/2,$;ZCFnF24@bPI+.<D6&)^_TOS1n<,:rDo![!sWkI)$E7cZaNT88[Q"9$7X%kT`^H%"kP>=5J.N,Fdp+n(::OqK3:kNL6&4m.HqGIYT>ne,2o0:8^DJ"h'lr:D7L]!@V"bhq(Q6)-e>NI'Yolli?'%CA=kc%RFUE%0m.psF=rGA>J0I>@>o,OX,18>6@7?;kQ)?qlLL_r:u:;c4nMO4YO#V3Hk?q(@[P8A9oQl/CMu`jjZjO_C5kc05eMRI;_E`lPZ-FF%i29N8>^+>=A0/e[1Qh6<_#J?U*^gBaYH!NoK40-Pf4LTH?nW,XFB!XE70S!cVmbJ+=K[i#,=/aEQO"YHGXt1IDT@"/6`aK7Zf1Mu%GYI\Q>)Z_*A)[Wt-cGM;K4F3K0LJ;4>"MF])+6]a>;btDk;7pAK+C'G8_@B([gq(sr4bS]'`#nsF_%qkI9"roX=5CVaK<.UhT:PQ%,48rlnpkuZ!iA'c2(>$-]td=>b$".sqli0mhIfaJa(YLX7QZEj=sVHQIV$%5Dr_hskrAALYq@\P?Xd0W?JhaNG6jJB,t\tYAc!Ou%LE#e8f6smSP6A:hP:[ke,J=9);a;,h?X9240](U6m?Y=eP#,WIFdjG6g2khSNqK!?EifV0VeV(5@Gd.QF,7^4!djP_]LsN[cojh3%Z?oZXIfG9h!4SE\!>+"$>7smUWdra>)PK8;f"["I(J[]IW70P\jrqllIL*E&Gr'c=8X1C8r<F;0+BFRR#9i*r.l51m,L]]V6PdXI%,1bk4dn;6mf]tWlr=6(fOPUF/gNZdWW"\230[rA.J1tReOFc1HHp:<Y2M<U$@5,2F&U@*%VpH*ThQ?P62h]MWUmPX#_/Lm@ZU(*:%:Ld*Om\Q;6KH4Yqj[qH0"6A:CG#"1'lnF#;hEG\1.i9c$F<-6uF`Bn],[JC0C6@e3Gi&S"*:TDe9A8+YUD)_42O]%V*_5TREUmV,%ruf3!`!@E+dnk/bRM"LH`Y9S;*I8#'DRV#]:-jG;hl5pcL_,K"%%m+V5Y=*4)QY!9YJFgdicpLQKmX?,hWZliHt=bhJ)oVkSr)tG%#r-hlS^&'#&Le>+k_AUN8uN'"Ip-LpH\<A!%nZU3q,"2b!MO:dHt@NBd]33qH<,cX&<Lus1m`\EBa0I#`4cOG#K44i0P,dbj#lnP%![jNaB=F)l6h33ST*^W%"9!umkTE>1,4EVuOhqopi""T#*IEWFQZ*WlVkbN?DsDX!7..8*e4DUomlQ-j,cpV-)u/KDmmZ$pFaj6,%:;>;3=oFSEY65o\H'4cg:uu!cana]3d:VmU,W7qFL-!O[=`OKj#"0+s=33%!M`qV>]`6[\(:Ftf[`>a[n6Q=9\>c';3$:f`N_2=J%n<*k!J5/h[Aq3upV`eYA@+;SO'p9?Z/%hBG$(&dd^?_)$Kn).V1UpN].#H(6e:WCpG\AYM/a"9+Dp,+jA31DbG;*Z\eTBGSm6tV*%;2=7&p_fBQZ*U?Ck6F-%AUl9rR\3J3f#Ja1BGFi!BToD_R(m-1lh;CD;EY_6RAU2W'G1?PK,QGXgcdSI4j]_mR']2-gmfk`SrmZV%Em&S;7s-A2,#BONDYU/Dp+rn-0ce<J2%;)TBIYduJaS&5mi6Bi=A=QHem@F7&p7;oFN7h#NEpe6k2(M`r#Eoad.\XT5$Q3c@a)QG%6K_b&V%\6^P4-e[CYEEXU3OHH.*IKRMRYDGXL(sVQ]Y=&O"ck7s$iV71)5o?1,m<X`e98CK-?:%c&+K%iG(+Yag31:_K"muJE"ec%1@T`$8PVq+'R%*VPAHFFUPPnhDam@)d#'g-19@,riK5m:XH4J8aKe5+N:_KbG,7&A?q#HF=;)kl10Gf9V]0;DRVZb@CTk/t_Mb\d%l&ogRp#muZrm/"D6%gV6lJCH+nbS^\6]Y_NPGW_r/W!PHObgoj(oX(0Z`./$+ZdFT:!9N`X+0qcTIQ9p17BFh'<('=bI;j6knCH&%/c-SPnV-Db9^"7Tg?FHN@J"cPY[7a07(/_kSA/(ZLG:_6\Ho.HaC2V39acFoa"W.0k1FS@,796Q!_>>lFO[o*kN'iP/2c"l<H.Qg%Og^T.&L##=!hn9f1Qsb5TR78=1r^=dL,6l/B$q(ZY7)$<\1cc^c;KO^T@BPr-P<hg@#D`UHYLd`]%!MP^9Sm^h1I,uXFiYdq4=\L%6`FSQ7\Ot/-RIYkQ$arG+?Z>M;6tA=QDGX$Hg_'M"=QjeAO'0VcecV`e=(W4>LE2<,;^42^"3/`(5h+qOluTYV?^/XlT>'NaHNN&%'+Ni$6_C@7qr6MHLM>EQH."?oj!3H64ZT^;XlZ='jkkeA&[:H\eWZ8GB3r!Ifd\B^@@7$0Yp.:\?A[47l+\&W(C9DA_W+'-BqfoC%o"i$7P2p+AI"V"<Q#A`Nj,<7F&9U[^7="ZC,5JEA4W'>%=8AUEh#NTu-Bt6n(=(n>A.OG:c6,;9]&mbbN3>e(!=HY[Y"3ilR3p*H%!(8Y4m)$H)HN@V[:t@DK>Lr.XTt+rueD:ZZ]pim$psm(g-)Od"DI)*h.o855N&)?I1J@k3-0kFTI?DJ3+HX"_I]VWNX2rT(RdfYH%93=NpUV5)4GA@tD/l7fbARoQ8NZt6+V^T-All$@@_ACn+cW=$U?$b(r7n5'[T!dc&;-#[U!TD/EN`lo4SbtaQ$*fqm$_QjfF;ASZ%IsK0KJ0QVU=k,DZXtM[!h/o]#1[OomG,+eXs(^(8$:R<M!3QBp"h&$';dM4HO(fJ::=LF]1O-MCm::FN$ls=A]F=%9p]A?DfdE?E%E.Qsdl*;+m+ULf[P$El]#D9qT9c$\E@bm/+M#u6AT+K;3#a59K]K'ZNWEM$MC%7%3HmEh*bdR@r%M9::j*L^uOXur"d?8.%\*!B]%23]G`5LNf<8p<P;&eXL"^hPoXZM#J$I478$Q1-RZO(/udG(->*[uc5*]+I2/bD.%!I2hpBK0?aW4]f`QTdP+G\h1<J@^^cE(d)+t%d5tUX^YEJLldE@c4=.9*,R]9>Mg/ea#B<j3QeXE!2:Ie#(X9XZEr/<DC";i$3<`kr*PmU+#S^Q8QCZ="5)Ao,auMqV4Of#imC6^g%mHJ=UaAf23*#/`\'11oR,/TO\[Ku]O\RZEq<hAF`_i:TS:dXrHTsN+0XO6)?=,@EeVH0QA0^m+Veh[V:=HZ=;S+)Lk$+J?+(tO7F%o#R#/9)1+0+N9Lkh6:e):K:\fh3@<]YtX.>Ze*/a[.R9RBbUN%a_-gQi3ZDA=4kJPK_5a0h^cY=3^WY.)2Pkc20S&-7'(S;1EN3d%V<mm>a8g^PS"QJBE`dbkV5WKV7chk-jDL7XWc'oX;1J`4fhr&"-nkrunqlG7,*?)R-ghp=N[Y^0[LjA*(RARj^tLYf&6&o&RqTK9%fdqGj'%mke;5SMIm^7XEiZf7=QaSd!Sps1I%K/n6C.jo?Bb&UmlCK=Z[3^sV&(qQ"c:*[3BM6do*[Y<e%V;b_&d3=4XG#=N15GCE%Zf#)P37ClE;X+</<^=XFL7WPZS*K<[D0]#h7G:@B(/n+o=PPA,aYa$l58^18ik5h(7@*FAPGZblbs=X\][hidBE7U6aU!)B+c`P$%&m_+ShS*0=f2*-6DUR4COW7:go2bgE`bE_uh0'o',%8JP-;<otS5EtG/jtYhTLr0]@lc&?I9-X8c1"/5@VNpA>NdQWSlI,/XQ;f\%_S2"U^qlUA-D%:!6Q5*MLF9o5N,-B(?me.*SIAh,G+%<>VR.;>Q:3=)(-sf^n>`eDnNI`C70pEq0rAQJ><dqW^=,$#5tOj01H"Ho%*i!;MRDVe,oZ<W\0JS0!;)LZ.Tn)CQVmfZbI(WF<*>66@O`MF^b`?RHPFq-Q]l<[dWpG9"KY&B#mKIS>-bFO`BeK(l4V^sglZd3I%WaYnR<('Ic\daM0F3Jo;2'"k`H]adeeD[qMI`CJhoNYq1@%u8"4aJ*.)H8d@DNL4:iUAeM6CM4KOV",]mCJ2SL2D^imf<_8%iF[_%Vkt4,'IC#mhm4>llo+:YD&7B)@F]-VH=fnmI/U(gH3uNPa]X",YD[6G&;:AP3RW<Un!l\h!NY@%aVp)M1m/?dNU/VQpS!MsHLS\4%/E9=-6[cRV%G(8T@beC3"2^!37&F-+G0pH'[(4(g9\>PhnN0UU!5^E6&L!Wnq%>A%WRj3Yf:G6@7"[?toG);J=b:`.KtN8\Fr%t"%btWS.Cf3glBn97GTE`CL4u)H.gaWD6lLMh?7=L*+@haN3L12*f)l>cI]jo>(R_WgRUS8LV.lY:W"I^_K@?cl*CP8qqN</(,^Uu?5%BW7:rEnqE)ml#ZsGa\5aR-:.L!>oBcV$9l[67@539Y"ZE+=`.;Cn6q>r^%GjLT.E]cNXF/gJTJu=:+)H-L"S.mtIP_hsg'_g+/>j%^<=?1MWZ,o\ISk3Q&8]696PDHmY:WP&D]uWe!;f=PSem<G..*JB7&5Oc&CcB'/*gGCh6RK9opo-PhV/3JA_XRog0;4XO96P"@Z.)%+DPqT?]Aj+1V7ms`6LVY7Y(OYL7pN2Wd0,g;RI\'P\Xla:dpoH)ct&0$5I$g&/oS/V,O@L@1*?JkAq?Kgq<_U/d#KrL)RLDMjV`j%&k5#l3dLmGW;.g_4"k.,Z?8L9oKXa`,5KfXCWYrrKX[amLH"TuXuBW]4DbRbiI@?WpP!#+L"e7[!ktp'?a+!bG/!8d,@R<e,`)^)%Q-46,qLWjM5?/8o\,\:C:^UGV,Z,lHD9'ibh:5:$Nc_,#4#/Uu2;bX/H"Dd'<C<()gkMP@)RD/oAJ?^TWXb[39ioZ.@[A@]:7-/5%FU@\jnY:L<1JdGsL1GMA9j"rdL!tO6(j6ab\R\u#LGP@1-o%c528:^Sc#_1<VNq$K*B?ks3>?]js.r`MEa8/`K<%<);N#]XG)fYZ%(Ef(9keH3A#'MHB;QP[[CoO$,\1;bY!V%lM(`fMA9g5"=SKHjY0=)i!bd[qV#t1[$\u&]=cRsl/XLC4Ro#R`nj()2M62(Jo9kPG^%+^!N209"R@*TP%a=^kN#)[E00B%4"kDHKCo+MQbU.`Wq'-`h[[Gh<tFKU#f29%qLM,h"iqZ2GB8'L3#):+&lo>I2If/HBJV$;CP2%-5@na#^rY1kSp7%]4&:61ei=a%pOHbE:OpF*1^3I3&tYjoj!%UCuniT$$?NJnr(2FTIX1;!?er;=$A&,TqdO`<L_2b,\16jr-cI^%!R^!#9Va:"ITq)Xm.P4-V1/%cl.4Cb][b108=I\E`,YmqPX@dN3.Cp$'(%u,>9#P0"5j`3ZS4f1JM\1W>"/%r91?(cb]RhUbDi"?%`./B2H8E-`>[-u^]jhTZDK!Ms+9PE?SPM1tglui>mF!;r7(:Ek3u9>"IEi=hTRF"`QL!cVOPV8""Z,d3o#m@R588Gj`b<MTL%u"D%d#bM1,@Wu;^oep)`.Z&YO*B2LR(BWGc45LK6Km;<7iferWmu/HS`"?W9bG+#'CTb99A[\FVI[K.\12>q@*n6]Z@KoV"2neY:dqd$%jrIp;1]p*!MSJ\IgN+RFBrO"R.^Z<A'_<X0@[[+e[^K`]B2b3rAsT\5FY+e"SS0aoZL3OHngsJpP%=Fk[q%'<^9(PdS<F+$'igRk%]H]^'3MuY(>n9<&%:.l.3;>Q\,?(.LMRaXo=MSfWFI[VP5cIqAPoJ^f>P1<)PHUs_._!i^Kg0_?a//T+VH'=[Ee7_9Z)<5;S"M,Q%jZ7fBi`E/reLGao3&!h`=<7]:<3%L8&Jn85Q]I"<]'*s#&Q+sHHO=5Fnic$X[/c.'JP60Fc%AQlSSGif[<^B=eFa@"@a\+TQE[/U%.O\at!s?p]c?Hu&./sCH3fOC>ELi`(M3\>F6u+@,+_Of?;G(J^P_hf..=..FOWB`t:\[QLh4^]+XX7lp4'lif-7BCI8%K]I]aGZq%b_\1,1i4N$eeq>4'4<5I_b&SbS<Io>n"TUE5.-JW4=SfHCo_SIA559824n$RR)2sI.^cF[X'm4-&D)sEQ<&hu&9h8]Lf?0AG+X:P%Ga@A3VgIg2TLkN!=1$nM8R7S8l!0sDi.*+nLk_M2FLQ6!U,4C=oQ(5YN^'p`PHQ2[de^Ch7;Ur9*1aNaP+j"hf-4\--mC##T"%(#%NXV74ae)EMFU[^X;@eZ,;4th8WRe$&p8[g)C8<p.XTE]d-_ae"cBBNY&Tf`*B\.B-%W/DK<hQK=8ZlS='N7f2&duRq!dEBh`-%)j%d3?JsFLRK&bZkibFIobHBdu6n6X-;2$)ja$0iY6S]nJc`!!6BTGTL,jnP'f1"O)b/j;Rfj^<NGPF0gfIV4e/F&s^+_`]2hr^#T<9%=.8a-bag9OfJ2Xu1iZ[eDu,-UX<+bZ4o'VpD+fpoQ2@K[Fm))oGDI'l&QfZF:!=j_YUhNDWoQ2g'ei=q'!"s].@hkeD1&!M-<O7O%Ec-5LMs#.a<F>TT&Y\$HH7-qQ(W*NmeD9E6>0_7_3r0FkFfDN',^[H^MW!D8`V.XneO10RgDm@fT.$32_H000c7o)'ghNQ)7jM/u%%U"2\6.A^C-4Wr;N1Q8Kh*U379A27;j\Z-u,poTBVN&L;V->kr?Mac!=LP7-,IM$T,2HrjmUVUg!4(rlm9>8d<uGmaVTLc&]`=2n%$N=-Kb>7Tj'I2&+oJb#?o1A9ZL-2j+?S1"V1rY@$WVi%\aam`i64jdh9Tfr$G9lGP(GH.A)ChJ^cE4L:FeLlk(7=jCD9d!rGD\pO%^Nf7O7d9Z)qG_fbBMK'",\im8aD%S?B7P3n5b.,@,oaJ(BAI/bDEco%lS_pc%3RD)W[dH/ZV9I#o:)kR@X"qhh'CnA,77uGK^2p$%EBhod8Ws]>537P"&Mm3PG\3N(ifg%V_^b/Z`-$=hiDeD'e9)qc<90I0\Br#J4]'6]Rq\g2!h69G#Hg]KejR-p@Lsk1[dg0FRh9Yn%&2;36SFeN@D_O$>%BWct7($qb<jnDsdu%,%O?b2ZAk-b\m2W6p4JF%('P%Uf18X7a.PU*n$-?E#^+g9V>NJW7qN3a'")3)@YE2r&%kT[gY$@>q;m5b@\AXYrhZ#YCd_:#I8JB\`V!U#!Cll!eQ,?#5;VQ@uuRK4!6WFQo&9Iq)V:SQK9EJ\Z>(k'6"kEdl!L:qtsms7(M%jNH;K',O:N\IuAW();R9#?I0$[!7BOq^0QU5U6li\.i\iFoq6"jeeukiN$8VjK:t@H%]5%.O(bVFVGF83Im?b,u<&0&X*b3/\*2e%Ipom*V^/k(^Cmlr&dBo)ht59%qXj*6fTHX[1E/qLpG:Ke0E?.:['WrAA"jqLVV29@5%#SjI`Gu?p?HSHj0a>iG;X+FQ&:<&R%,ZY%ZIc8"en3pDiLT)j1B:\i!2HP@1@/>@BH5L^B)Q1ogEGTN7]*0(\<#*L3k'Q;oS,r_EB\LJpdJeYSIkn9'(W(Q/!als>Xa%]D[>t(%850?T>#@k'-K-uM!mDK5nR,kQbhE1MZ#M<t4qc$jGhnk]Ci6l36UG00[[UT*8<+[KRbY,Mco6oc3"[X7;dt].s%6p%Ppm,P1'umL%5Qms.VIqCGIEoGVfcq>/d3=4Mm$V,+$n)oYRu3\5JB3G&*l"P=)R#YT4S)BbMc.5^!sj=-\&Fm?9<Vom4J0:[3cSML[\4P>=nWGk%0I4,lR7Ueed\g0Q;Modj)]+$03g_Nb#5=,`mujN;@hNu=\Zl]A=LU3/#ES&nLbr,>JM\3@89_IaZF!jdq@+$FMB#U@=%b.sA>4)L%_FC1KV<K>3`!ou>CY)IE-acUoi@cC&2PK4@UGS($G!8T-F0[A6R8ceUh9r@s`[nR2!SkOeFbG?Yl0QoX/0,Y[P]ZVtoNLB`&7jQ/%?JiK.PZtKb-(-o='XLkQ.p$7hG[\T@55"21P^kIN)dPV2<7I*Sb9a=X"%PSZ72?SS13+6qpDoZMffF56G%;fGHtR2\RcJ;sD$AVd%0RX\-e/8r.2Q7mr]A^%3<+4*X5?G6[pdao5=tdY$2YSu'>0Rkt&sM]af;PdR-]L62Z8OKTfg;J^4s@KN"5t-TND/)SZip.M/mj09%"leWl-mm\rQ;l!0MOs.t;g2GSY+BP7$oT"sGsKOCEX1'mHYVQPSf<hdJE3C26fGl!=0I@T+</9\VLCVD>.'D;UN5&ZI_?3M5fuD"%pI!CdG5j$c*8VoZ/#[WW?e$J5\)f;`VCCk'ZnA?n:$\[oJWqZ`9kJK,i!-"nXIs>Xi<@%bF^N=<,#k:khGtW5a!&pDLZ`oohS3f;%L/;@s*nf7+g\4Rq#kVSa41dJ0,b$@QQ(n+%b&u0h<%fQ7\*Ud!U&52;W#D^#@(c,?m7Abb.mkN?]9:)5mAoLkl*c&\cgh2o$[(eW%rLs]tm7P$p_H3IMA77ZQY#ft!iZGIj_i]H$b;_`W7jQ9Ic\Ug[rik">(CsIm1m\okNZMeC8S3.V]!A`.?:R5O"*bi'l&%X!lF..:%ElrRle&UlPf(-'V\L(AfjVqN1N81&'in7MLpZ=Xe9d'`BJ.i;OOu5S2@6i?%L-5Q!?A;+6XABi5&JD%`WL/U.7dXG;kbi+S&a5Q$%O:X>UK4F#+@Tj@[H)ZSMi(5>'4,5(pQh$,6%C\BcVGH(`q9&]b:j]pfA>m/A[>NC5`U>X<X_?l1."[t+C3^Aj%s%Mi0P/&!aEZdJ%*C_*-SD-fHO3$@kH'"inbCmUH3".h;Y14[P_7c,Y;WM-)8h+o2XA]EC--Q).d\IlO<@D*sOaN8;D9!4I)<18;e0M&!BFf80D?,5;%"=&J__?n7?-7%sBSK]hd%-/#7b/chkX%5snZ+6Cd*qp5"8N#&`,_R6bbZMoE$)]+[e7nBUo2'!l5Esp<]G\EH;!h0$;D(G<A(^CY%lhe);0"XmS,B]TSin7L!N*1`YOkC*N3di3Y7ZoLi,soTB;^Zprp+@[\?O=h<Ji&R2B"/CtR#NAUV93W8]k)cPGW,XJ(/Q:!Ce6gR%=&PlqM[2]c*,q<dF%i&CP$I:hA0]&-JuiBub+]1!cNDkAMl2c$$$XRCY,&q'RC*DBDc==o4Y<0$N_Q#@EgA71h5Ek]9Q*k&LCKaN%Zss-3RZHl2nd2Xk;P%LjI1Tfp/UFn07.iu;bQF0t3>mop&j_,r?]_)K_Q\!s#>IVi$(j_Lm$V5h%G7MKcK+"We[*VD;+*(M8cc$@%"eb#u&3[]5R7k,HoRrncFrE\s@;9lEX6u[c0qGM<]p![;ZDgF7,E6PE./cZOJX1H!V#LW("\,\OoU`)MTn_fn(Q!I[BgKo^lCM.U%e"nH%/LU'R/kjL^\YoZ<q-mQj8K`?sVXI8<$$\]_7NZ,Xa-oOVeLUu#8R0Jbf]&"[%gs^qi>pa*Yf_4Fr+9Bp[5L\E(1ie?cV)"@%fCHK546;OIHBsG$C\^Y>A$G_d`HtUl2Ep)>lm6+U:`#7Mle$ET.V=?<anN"`7dV!i69EQkfI9H4^rRU*%159@X1[\ba%AD#:+1Ds%NQ8ARTD-Y+GOJsDp>rtneIqGk=^ftSF6i_2Hp5#7q(jOmV;g03^,rf](f8qR\=29cZRU\t7=t]-ogT1KZ58ihK;bI\4n^R6)KQQd%lIEJd0in%!lkUI)pH/Maj5d;-4$uDNn<tPKQ"Ue=gKX@!%<ktuL`<9s#IQ,d8>jKBp$+*ualQZJZ=e9<1N#:7m,*UU^/T;^UBtu>%X6M[9/H`QGI(+M*`X@MCfDSDr-bQjWe@oXQDPoXHPBHk/e_DKr2p0M1g\6Q%FluqET3*l!/i(Eeag7ReJlpRmG,WN'4`R*(HZ\Be%78=r)/5Ua:YW"3qs"Qn8"^DF0%pQn07>*%IJTea/GF9S$'[[MCn9#9JaEcFK6O]J$G3ocD%TbK+%LXt9OT)Sd1_Eo,anU`""**t6%meO/8@ofI@k:LZl*4YoE]hY_m#(jpq%`aQ%!Su^SZZ<e%</C<nOqf,P/I%H$mAJO+jeJLsCHAq4Z1/"LS)niUf\+KEn$=##WWgN]%J*:]T2OMoUG?l.V3RtF+d)6c\6tKB5&oY+-n<bmc8&Qb$_5^bnKUSoCrBkp31]X'Q6<0:]+bB1cX`**0&/!k;?]0T@FMW2b=Y<3^%X_#'?3Aa#_n`IdS5"Jcs!>?NERZ(%?]u/+$LkXlEl7a^^Z$Z4IB5(E+em[5&)pn=pq0W9*jj2NJ//?L^nk#(A1XDGH=<^oilk5Ua%/N)$]j`S6\Oqo#JRTJo0Ko2+iQN62TPrJJ\W0r4'bDrO(8i_.1Z5%j=Z9qi4%^G,B%R`So^m"*rILtn<=sFGk36-]@#/"qjCi>+3%A!B?:A3$M\2PlpJnW*QH7/A9)#TkLfXJ3VWe(iom&J`>Y#_+XVrpg+J[OeN+=[IMqCM*MF7\:;!l)^C.777L/fmKYlO#Dl==M/Q^%:THJ.4DTr_hIt'Dc\OU[\Q.nA#/AL3J)Sm+iZA&1.%1NZ1Wsr:5OJpCFCL,4-DI86FY*0cCafV%U9"iiTfJXeng]2=m*p83&8"9p%XEt1.-D2\l%A!<NV]0d8f]f:rkIL'W4tL]^F7</YHJ5CQbqa+GVVlIs!`B]m3bD/4'4+1g=fn0T=d^7rH)9e`8/9gY$B/E+?Dmdc%/AT5(ojpdD$Q;"!qSJ0[,3CmGpu7/mN=lIl&N(>&ch"=o=)2*8-Jn@G>B?s](eqY,Dh70Z=P"$p%%o,f(kG8k!5*C$odAo]BOi;@%+-JR`m\Wo^D0/'l=.KCfMiNo1o[RDMK.1SqYDjf/=E/-Hd#;F(iJ':T6j$"@,,+#tlSPZ5ReSXL`V'k(UtOZ3;7L@BrE9L\n4@sD%<$EgDmiUN.[BE\0Q<-RN?@:Bn(Sa)7$]Y)5dH-ndM"lpOb]n)A1-W7>/T?ns[P@s2Be6Fa4tcTWHV^^3F=BKtE9q;@ifdP0eLEn2%f*@nEin7L!1_qJ"`_4Cj!l&-J(?9]P\$qC26u9q#NYe!UWAJ&n[hC\/*`RPk=ZiD]<cPGk(pBgoa$RE(BCbXWV"D(%:%&1hf6@(f%ToqB:QuW1.%IiNl"4=O$Ne<1e:@]-@K_j4<))-uj>\5hZ]F<tNKrq7D&t@;CN6!ji9mSi)O&E[je!d;N.QZs2#@usI<CI#%+3NP]%B59g0VhccY4a`JN/F]X[DUr9<H3&5'U-=+cdSBO&:@A[)4Re5e9rGD:bX7T#grT1dGoXFEXnA$#DOltRn99hW#RDiN`1kqi;0Wa$%lS_Jm^f&^@:`@I&UJ@$G6#QXE/ApHdC8t*^F)2AJ/[Lj8KIFK]c_@6ciUCS$%tdJB`Sf+:f<;K5!=^pN"23>lQ>f6C-9QD(4jY2]%T<jOq%o,j=VpjG[jrqlmmY$@8\W:'Yf&'%AG!p9X'k[Tq0F0m5DisGDqpOeXn&peLlMWBn;C%u<KPf[H>Gs]kLuJB6Rq_odAZj\/%_)_[oo<uug3qiDFI;]d0rVpR&jZe4idsq/%rnm_J0E;"4fDkHshuDeF^AR4ks5hiss7Th"rp0T3rU'&\rqqgas8BF!If7GsrqarJ%s7tFL\pjJ>c[Yu^+929)hgbOf+91B)ru9$Z`'44MTDnLJs/.OM(G&K_1&~>%AI9_PrivateDataEnd