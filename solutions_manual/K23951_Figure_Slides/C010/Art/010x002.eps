%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 010x002.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 396 140
%%HiResBoundingBox: 0 0 395.9990 139.9336
%%CropBox: 0 0 395.9990 139.9336
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 4792 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD5AFFA8FFFFA8FD7AFFA8FD06FFA8A8FFA8A8AFFFFFA87DA8A8A8%7DA87DFFFFA8A8FFA8A8FD61FFA8FD09FFA884A8FFA8FF847D527D7D847D%7DA8FF7DA8FFFF7DFD60FFA8FD0BFFA8FD05FFA8FF7DA8FFFFA8FD05FFA8%FD6EFFA8FD80FFA8FD70FFA8FD0FFFA8FD24FFA8FFFFFFAEFD05FFA8AEFF%FFA8AEFD18FFA8A8FD0AFFA8FFFFFFA8FD11FFA8FD0BFFA8A8FD04FFA8FD%05FFA8FFFFFFA8FD19FFA8FFFFA8AEFD06FF83FFFFCFA8FD19FF83FFFFAE%A8FD06FFA8FFFFA8AEFD12FFA8FD0BFFA8FFFFAEA8FFA8FD04FFA8FFFFA8%CFFD19FFA8A8FFA8FD08FFA8FFA8FD1AFFA8A8FFA8FD07FFA8A8FFAEFD12%FFA8FFFFFFA8FFA8FD06FFAEA8FFA7FFFFFFA8FFFFFFA8A8FFA8FD1BFFA8%A7A8FD08FFA8A8FD1CFFA87DFD09FFA7A8CFFD15FFA8FD05FFA8FD04FFAE%83AEFFFFFFA8FD04FF83A8FD15FFA8FD07FFA8FD09FFA8A7FD07FFA8A8FD%0BFFA8FD07FFA8A8FD0AFF7DFD07FF83FD0BFFA8A8A8FFFFFFA8FFFFFFA8%FFFFFFA8AEFD04FFA8FD04FFCF7DFD07FF7DFD0DFFA8FD12FFA8FD15FF83%FD12FFA8FD14FFA8FD05FFA7FFFFFFA8FD09FFA8FFFFFFAEAEFD06FFAEFD%0EFFA8FD11FFA8A8FD06FFA8FD0FFFA8FD11FFA7FD15FFA8FD05FFA8FFFF%FFA8A8FD07FFA8AFFFFFFF83FD06FFA8A8FFA8FD0AFFCFFF83FD11FFA7FD%05FFA8A8FD0CFFAEFFFFA7A8FFFFFFA8A8FD0AFFA8AEA8A8FFFFFFA883FD%0DFFA8A8A8FD04FFA8AEFFFFFFA8FD0BFFAEA8FD05FFA8A8FFA8FFA8FD07%FFAE7DA883A77DFD0FFFA8A8FD04FFA88383A87DA8A8FD07FFA8A87DA87D%83A8FFFFA87DFD0BFFA7A87DFFFFAE7DA87DA883FD0BFFA8FFA8A883A87D%A7AEFFFFFFA8FD07FFA8FFFFFF83FD04FFA87DA883A883AEA8FD0CFFA8FF%A8FD0DFFA8FFFFFFA8FD15FFA8FFA8FD0BFFA8AEA8A8AEFFA8FD19FFA8FF%FFFFA8FD09FFCFA8FFFFCFFFA8FD05FFA8FD0FFFA8A8FD0BFFFD05A8FD17%FF83AEA8FD0BFF83FFA7A8FD12FFA8FFA8FD07FF83AEA8FD07FFA8FFFFFF%A8FF83A8FD04FF84A8A8FD12FFA8FD0BFF83A8FD1AFFA8A8FD0BFFA8A8FD%17FFA8A8FD06FFA8AEA8FD07FFA8FFA8A8A8FD06FFA8A8FD14FFA8FD09FF%A8AEFD1DFFA8A8FD08FFCFA8FD15FFA8A8FFFFA8FFA8FD05FFA8A8A8FD05%FFA8FFFFAEA8FD07FF7DA8FD15FFA8FD08FFA8FD1EFFA8AEFD08FFA7FD1B%FFA8A8FFFFA8FFA8FFA8A8FD06FFA8FF83FD1FFFA8A8FD06FFAEA8FD1FFF%A7FFFFFFA8A8FFFFA8FD19FFA8FFFFA8A8FFA8FD05FFA8AEFD04FFA8FFA8%FD09FFA8FD16FFAEA8FD06FF83FD21FFA7FFFF7D52FFFFA8FD1CFFA8FD09%FFA8FD05FFA8A8FD21FFA8A8FD04FF83FD22FFA883FFA8A8FFA8A8FD1BFF%A8A8A8FD08FFA8A8FFFFFFA883A8FFFFFFFD07A8FFFFFFA8FFA8A8FD11FF%A7FD04FFAEFD23FFAEA1FF7DA8A8FD1DFFA8FD0AFFA8FD04FFA8FFFFFFA8%7D7D7D59A8A8A87DFFA87DFFFF84FD11FFA8A8FFFFA8FD24FFA87D52277D%FD1EFFA8FD0AFFA8A8FFFF7DFD05FFA8A87E7DFD04A8FFFFA8FFA8A8FD12%FFA8FFFFA8FD24FFA8A87D52FD1FFFA8FD0BFFA8FFA8A8FD25FFA8A883FD%23FFA8FF277CA8AE7D7DFD1CFFA8FFFFA8A8FD08FFA8A883A8FD26FF83FD%25FF7E7D52AEFF7DA8A87EFD1DFFA8FD0AFFA8A8FD27FFA8A8FD23FFA87D%FF7D83FF52FF7D7DFD1AFFA8FD04FFA8A8FD07FF83FD28FFA8FD25FFA8FF%A8A8A852FFFFA9FD1AFFA8FD06FFA8A8FD04FFA8A8CFFD27FFA8A8FD25FF%A8FFA7AEA8FD1DFFA8FD09FFA8FFFFFF83FD28FFA8FD26FFA84BAEA8A8FD%2BFFA8CFFD27FFA8A8FD25FF7D52A8A852FD1DFFA8FD0DFF83FD28FFA7FD%26FFA87DFFA87DFD2BFFA8A8FD27FFA8A8FD25FFA87DA8A876FD15FFFD09%A8FFA8A8FFFF7DFD07FF83FD28FFA8FD26FFA87DFFA87DFD16FF7D7D537D%7DA87DA8FFFF7DFFFF7DA8FD06FFA8A8FD27FFA8A8FD24FFA8A87DA8A87D%FFA8FD13FFFD04A87DFFA8A8A8FD05FFA8FD07FFA7FD28FFA8FD25FF7DA8%7DCFA87DFF7EA8FD28FFA8AEFD27FFA8A8FD24FFA87D7DA8A852FFA8FD29%FF83FD28FFA8FD27FF7DFFA87DFD2BFFA8CFFD27FFA8A8FD25FFA87DA8A8%52FD2BFF83FD28FFA7FD26FFA87DFFA87DFD2BFFA8A8FD27FFA8A8FD25FF%A87DA8A87DFD2BFF83FD28FFA7FD26FFA87DFFA852FD2BFFA8A8FD27FFA8%A8FD25FFA87DA8AE52FD2BFFA8FDFCFFFD1AFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T10:10:30+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T10:10:30+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T10:10:30+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>92</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAXAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh7q6EbRwRkC6uA4gDAstUXkWalDxG1fmMVWpp6H0ZL&#xA;l2uLiHcSElV5VrX01IT5bV98VaOmxIkgtXe1eQhjJGa0Ir+y4dd677Yql2qX3mS1mhW3gtWtQ8az&#xA;XU0vDkrMqkBafC3X+b+GFUZcz64tjcvFawm7RCbaNJTIGfwIdbcf8MK+I64FYmuufmhBSObR43Dz&#xA;NFBNxSV3HF2UyLFOscSmgHItRR/MxAwqm1tdedxqdutxaq1l61yl0wWFV9L1UFs8Z+sNJURli1V3&#xA;6cQdyFThP05+lpPU+rfojj+64+p9Z50H2q/BStentiqjo51j63qQvhJ9V9eunmX0OXpkbgeiT8Ab&#xA;7Jf4qdcVTTFXYq7FXYqptcRLcJbkn1ZEeRBQ04xlQ3xU4jeQbE7/AEHFbXl0DhCw5sCVWu5ApU09&#xA;qjFW8VU4riGV5kjcM8DiOZR+y5RXAP8AsXU/Tja26K4gleaONwz27iOYD9lyiyUP+xdT9ONrapir&#xA;sVdirsVdiqnPcRQIHlJCl0jFAW+KRwi7KD+0w37dTtipK93RBV2CioFSabsaAfSTTFW8VU2uIVuE&#xA;ty4E8iPIkfcpGVDkfIyL9+NrbmuIFuEti4E8iPIkfcpGVVz9BkX78bW1TFXYq7FXYqh4fUe8nZ+B&#xA;jj4xxAULCo5PU9RWq7e1cVRGKuxVR5210Li3I9RY29GdHU8SWRXp8Qow4uOm3bxxtFqEM3oXDW8k&#xA;kfoFkitAD8YbhyMTDxCryBruD96lG4qp29xDc28VxA4kgmRZIpF6MjCqkfMHEFQbdbXEFzbxXMDi&#xA;SCdFkikHRkcclI+YOIKg2qYq7FXYq07FUZgpcqCQi0qSOwqQN/c4qthmhniSaF1lhkUNHIhDKync&#xA;EEbEHFQUPqdm9zArw0F7bMZrJnJVBMEZBz4g/Awcq23Q7b0wEIIU9Pt5nmk1C7hSK7mAjjQEs0cC&#xA;ksiOalefJizcNug+LiDgA6oA6o/JMkq1h57GaLUrWNJHkaK0uYm2MiyOUt6PQleE0or/AJDPsTxy&#xA;Mtt2Mtt0wtLZLa3WFDypUu5CqXdiWd2CBV5OxLNQDc4QEgU1e3S2lrJcGN5fTFRFEvKR2Oyqo23Y&#xA;7bmnjtiTSk0rYUuxV2KqcNxFK0iqR6kLlJUqpZTSo5BSaclIYV3oRjaLddW0F1bTWs684J0aKVKk&#xA;VRxxYVFCKg9sSFItLba01Ce5jXUY42t7By1tKWLPLIKrHKQOK/DE3xArvJUgAKpaIB6sQD1TbJM0&#xA;JqlpNcW3K2KLfW5Mtk8oqiyhSo5bE8WVijU3oTTfAQghS0aRbu2XVeBR9QSORFfgXSClYkJUDsxc&#xA;glqMzAEimCPeiPemGSZKNndLdW6zrG8asWCrKvFiqsVDcewYDkK70O9MANoBtWwpdiqWpdRpd3dv&#xA;bgrdTTkVcck5LbxNyoCp48eI+eKqkz3luls811EF5hLhzGFQlzRacpAVqaIu7bkbYkoJXNfvbrI9&#xA;+iwQowCTqxdCrE0LfCOFO9dvfFKjfwXUVwuo6dEs9xIqwTxu5VXiHMxNWhA4SPUn+Qtsx4jIkdQx&#xA;I6hWttMgisxDIkbSM/1iZgG4tcFvUaQBmZh8e6jlsKDoMIFJApVspLh7ZPrKqtyo4zqpBHIdxQnZ&#xA;vtCu9DhSlcsMiai2kcFOnagslzQBPhCuDdxsGVg6zPMm1K/FJ8QouQremFb10TvJs1Ga6WK4t4PT&#xA;d2uCw5ItVRUUsWdtqCtFHepHvQWi1bCl2KoS7vbmCQJFp890pFTJC0AUGp+H97LG1fowEoJQFhfX&#xA;cF9LDPp0tlpso9SCRlg4xy/G84kMEknFWpzDsPtFgT9msQd2INHyTlHR0V0YMjAFWBqCDuCCMmzb&#xA;xV2Kpb5g/wB4Iv8AmMsf+oyLIyRJMJZYoYnlmdY4owWkkchVVRuSSdgBkkpRLqeoSal+50y4nsbb&#xA;kFmXhEzz7oaLNLBWNVJoeLBiaj7ILQs3yYWbR9neXE7MstjPaACoaZoCD7D0pJT9+SBZAorClRu7&#xA;iWCMPFbSXTE0McJjDAUPxfvXjWn04CgpRcahqUV5FdxaNcJEfg1BqWzyNCqsUZfSmeRjG5+yAdi1&#xA;AWpkST3MSTzpMb/UEg027uoHidrVHJ9SRUjDoteMjk0T3rk2bWiX8mo6NYX8sXoS3dvFPJAd+DSI&#xA;GKVNPsk0xVG4q7FWK+XdedbnRdDESmOTR4rtrgOpYMoRODRg81BBqGYcTuAajBHkGMeSZarqc8nC&#xA;1061e/EhIu5IiAiRBikirIzwoZaqV4h6r9o9ACCe5BPciodRvJJVR9LuoVY0MrtalV9zwmdvuGG/&#xA;JlaOwpdiqXXJuotSSRZIzGVU+i1A/pgkTspI2A5RN17fLFVk+oSXEckR0i4vLSUFeQa0aKWM9wHn&#xA;FVYeIyJPkxPua0nUbp4DBq0LWt0r+mpmEYWZXZhEVZGeMuyr8ag7N24kVYnvUHvRLuLKbnJI7W9z&#xA;IkaIRURu1QPirUKx4gCmxPh0kyRmKoOkUGp/Cjcr1SXevwB4QANv5mVuv+TiqjP/AMpHY/8AMHef&#xA;8nbbI9UdUbc3dvbJzmfjXlwQAs7lVLlURQWduKk8VBOElSaY/ZalrF39YuzY3apOTHbfVzaDhHG7&#xA;cSwmmP7zc8xwFOnauCz3Is9ya6Xc38jvHdRFOIUqZDF6orsfUWJ5F36qR9228khMMUuxV2KoOXTq&#xA;TtcWkhtp5ZI3uSBzSURgrxdDsCVNOS0bZakgUwUxpUs72K69ZVBWW2kMNxGa/C4UN1NKgq6sD4HE&#xA;G0g2iMKUu1rhKtrZLIq3M1xBLEjct1tpknkPwhqURKVO3IgV3GRkxkq22mhJY7q6kNzfIhT1jVUA&#xA;Ylm9OIEqnWld240DM2EBQEZhZOxV2KuxV2Koa6sIbh0mq0V1ErrBcxkB09ReLUqCrDoeLgrUA02G&#xA;AhBFrYLspcR6fcvzuzD6qyBSqyqhVZGA34lWYVWvcfQg9FB6IvClSu7u3s7Z7m4fhDGKs1CTuaAB&#xA;VBLEk0AAqTsMBNIJpLNO0KRdOtLXUZfWS1it0S2jLLEHgjCksRRpeT1NH+GnH4aipAjtuxEe9OMk&#xA;zdirsVdiqF1BeCJdJD609seSKK8uLUWTjTqeFaDuaYqseNrECSAxx2ESu88JFOPVy6NWg3/ZO3yx&#xA;Vu01ewuraK4WT00n/u1mBiZqgHYPSux7Yql95BHZW8ltYlZ4ooaJo+z0PqAq6b+oqpz+z9kAKF49&#xA;xVMapOLa5guraK5gbnBOiyROKjkjjkp38QcINpBtSvi6rC6yiILNHyrWjB24cdvEtt74pQV3HJd6&#xA;wBZ3Kwy2lvJDcOFLtGbmSF141Hp8vThbqTxqpKkGhidyxO52R9rY29s0zxA+pO5kmkdmdmY+7E0A&#xA;7KNh2AwgJApKtft7367pMtlwRVugLirvGWQgkrRNjXcmvf2rkkpxBbW8HP0Ylj9Ri8nEAcmPUmnU&#xA;4FVMVdirsVdiqX35e0uU1FebQELBeRhvhVC/wz0bYekWPOhX4CSa8VGRO27E7bphkmSC00zz+pey&#xA;mREuOJt7WVBG0UYFKMtSeTmrGtCKhSAVyI72I70bkmTsVdirsVdirsVdiqF1C2mmhRrditzA4mh+&#xA;IqrMtQUfZhxdSVNVNK8gOQGAhBDHvM2rXdzp1pLpWpW+myWs1pqGrxXUyQyR2KTfvllNW9MVidXr&#xA;/Ky164QbUG06t7k6jdxz20jjT4UDhgo9O5aZFeNkcmpREbsKFj1qpGR6r1THJJdirsVdirsVdiqQ&#xA;6xDBDpF3pTJI8U0EhtnbdeTMeMVVoRwLLQHqNt6YVTeCxtIbSKzSMG2hUJHG9XAVRRR8VTtgVVWK&#xA;JWZ1RVd93YAAn5nviqBty9nqDWj82t7svPbSM1Qj7GSDf4tyTIm525D4VQZEbFiNiv1iQx2XNbZ7&#xA;thLCUgjqGLCVSDXYDj9rc0232ySSvgBsNO5Xtx6zQo0l1dMvHkQCztxFaDwG9BtgAUMfX8yfLnJo&#xA;5BcJMGVRF9XlJ/eSmGKvw0UuwOx/VkqSvk836Pd/U5RFci2N1EkVz6fFS0lt9Yjfiat6Zjb4tgRg&#xA;VOZ9c0u31SHS5Z+N/cLzhh4ueS/FvyA4j7B6nFVS2vhPd3dt6TRtasgLMVo4deQZaE7dt8VRWKux&#xA;V2KrZYoponhmRZIpFKSRuAysrChVgdiCMVST99dn9ByIxjt5B9clLMvK1WjwAF2d5fV2jkJ2bjLu&#xA;NgYc9mHPZPcmzdirsVdirsVdirsVdiqE1TVrHS7YXN6zJCXWPmkcklC3QsI1Yqvix2GKvIL3Qv8A&#xA;HaXWn+YNKGl6vaX0tnd2MDn0bxBJFdNFNJz+C3ul9C5HD4wY5WWrE1gdmJ25M+0Xzdo8GnRiTlBZ&#xA;yai+laVcTyKZL14jxluGLcAvKdJdyfjoGG7hckBSQKZZhS7FXYq7FXYq7FUt16L6xaRWnJkNzcQo&#xA;HQ0YBHEpKnx4xnFURFcSRyG3uFaiIpW7biEkJop6fZbkfs/d7KorFUNqNobm3/dhPrUJ9WzeTlxS&#xA;ZQeDHgVbjvRgDupI6HAQgi0psLg63q0V+olgs9NWkcMlVZrmZKSCRASoMKnhQ/EGLDpSoG+6Bvun&#xA;5AIodwckySufyv5dnhEL6bbiMEECONYyOLBgAU4mlVFR374qiJNG0iSRpZLG3eRwod2iQsQg4rUk&#xA;dhsMVRmKqUdnaRTyXEUEaTzU9aVVUO9OnJgKmnviqrirsVdirsVS2D/lI77/AJg7P/k7c5HqjqmW&#xA;SS7FXYq7FXYq7FXYq7FUFquj2OqwRwXokaKKVJ0EU0sB9SM1QloWjJAO9DtWh7DFWKadqfl6888a&#xA;lDpzzNqVnqsEWriQARep+iZTH6JHUcNmrvyB7UyJ6IPRf+X/AJa0F/IOi2hebVbOB5Lq2ub6vrs8&#xA;k0klZPjetDIRQsdsklmuKuxV2KuxV2KuxVA3nx6np8X8hluD8kT0v+Z+KoyWKKaNopUWSNxR0cBl&#xA;I8CDiqglm0ckZhneOGNeH1aimMgAgGpHOo/1sVWNaXk0Pp3N2QeQJa2UwkrT7BLNKwqe6kHFVHy/&#xA;/vBL/wAxl7/1GS4IoimWFLsVdirsVdirsVdirsVdiqWwf8pHff8AMHZ/8nbnI9UdUyySXYq7FXYq&#xA;7FXYq7FXYq7FWGab/wApVq3/AIES/wDiOwZE9EHoi/yw/wCUB0X/AIwf8btkksoxV2KuxV2KpZ5j&#xA;1eXSdKlu4YGuJh8MaAEqGYHiXpvSu3uaDvirHrT8xZ7q/gsY9FuRLK5jLOGQDjIkXIgIxC/vPUNf&#xA;91/F7YaVGaH5kuNR1W1W5sljMtmsizxtIwilkYmW3bmqVIEKkmgodqd8VTi01O6nnvI5bGW2S2JE&#xA;U0hHCYAkVXjU02r074FU/LGq3Oq6NDe3MYilkZ/h4PHVVchW4SfGvJaGh38aHYKppiqW+X/94Jf+&#xA;Yy+/6jJcjFEUyySXYq7FXYq7FXYq7FXYq7FUtg/5SO+/5g7P/k7c5HqjqmWSS7FXYq7FXYq7FXYq&#xA;7FUv8w6W2q6NdaejKrXChVZxVQQwNae1MVY5pv8AylWrf+BEv/iOwZE9EHohvI+ix6h5N8pXDUH1&#xA;A+sxqwJUcyAtDSvqhCa/sgjvkklnmKuxV2KuxV2KqbW9u0yTtEjTxgrHKVBdQ3UBuoriqpirsVdi&#xA;rsVS3y//ALwS/wDMZff9RkuRiiKZZJLsVdirsVdirsVdirsVdiqWwf8AKR33/MHZ/wDJ25yPVHVM&#xA;skl2KuxV2KuxV2KuxV2KuxVhumqR5p1UkUB8xKR7j/D0AyJ6IPRv8oL1L38t9EuEjkiBikT05Rxc&#xA;GOZ0NQCepXbJJZjirsVdirsVdirsVdirsVdirsVS3y//ALwS/wDMZff9RkuRiiKZZJLsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:F5C738E30B2068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:F5C738E30B2068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F5C738E30B2068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T10:10:30+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -139.934 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 139.934 li
395.999 139.934 li
395.999 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 139.934 mo
395.999 139.934 li
395.999 0 li
0 0 li
0 139.934 li
clp
gsave
0 139.934 mo
395.999 139.934 li
395.999 0 li
0 0 li
0 139.934 li
clp
gsave
268.713 139.934 mo
379.439 139.934 li
379.439 17.1284 li
268.713 17.1284 li
268.713 139.934 li
clp
379.439 139.934 mo
268.713 139.934 li
268.713 17.1284 li
379.439 17.1284 li
379.439 139.934 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 139.934 ]ct
[111.733 0 0 123.812 268.21 -.503334 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 222 
/H 246 
/M[222 0 0 -246 0 246 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNdj
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNdj
_uKiWhAk\Y!Z9c2hZ*`Y(u?+m!!4(q)P[;n!!3=""m5je"&B$U!!36u"6TXb"]#+%L&_8pru^D(!ZM(W
h>dTqru1&#!Z_4[iW,bS!'0-@!'0uXhuEa;jT#9@_#VCR!NOW3!!10Kh#IKV[)qJ2!Re$B!9=+\/k+q'
!Bi6o!!+i=k5YQP0*$\+!m1HBkPtY`gY;c0f`1+7!WUC%!2TYr"s`:2!>Z(@!9!nY$5hq+!?qca!6"p>
#iADA!!4n4&_m?f&Do8-!!5mP#bV1Z!!31'&*X&q#?V)`!!34(#jD<l%Ti`3!/:IU#ldp*l2UlDrt=)e
!YPGkkl:cbrs7K^V#UKgk5YKTq>fIS!))JT!)($+`;fs]hZ<!B!S3gq!!/VAkl:bAFe/Tp!!+!?kl:`T
.G=b&-qNS&!E^9=!/:IUK`;&QlMptc\Cpo`\,Y[m!WRo1!2TYq9BcEW.0KAGiW&u].d6p59=t8D!!2&5
lMpuUhZqj8!!WJ]8a??WK]&@#jT#<[+mT+0$s3Sb!!31'&*j2r+B84<`W3gT!WSVS!!5pq#MfCZ!!3B)
;<n2_RK&o[i;`jDkl:]VfDknEkl:cP!!%TN!^5EOli7(EJ_0r'JDfbo!Y+$QhZ0AN!X`$2li7&a*r>ro
!!+->li7(g=:2eC_>jX)rt+Ms!WSD=!<)s!P5jkK!Y,0#T)dgM!))VX!'o*8!(#oN!)*7jJcGhn\a9@u
A)@=>!!32YB'fR!\B<V-U&Y3X2!k8D'j183h>dRY($tu%2*\bS_>jW:iU$UHDZ9ak!!E9%!WR0,!!2!W
SH.XL!>l73!!#[C!!#[Y!!*KGquD?L!#bmq/FNQ?!T.M?!!6Zf!Ug!i/)M?%!2BMq"]u#t!!-1:p]01O
!>S`)!!3@,"M=`P!!4/?0^euC!WR/l!!E9%DZ9b+!!4kS*h35i!!#[Z!!#[A!!#[Z!!#[g!.t7OScII4
!!.W.e,TO-JaWR>fV$puUAt<D9()`\*`Mb4hZ*[T*q'(08L_4N_Z0_Ks6fpgP5j)5!rr?$Pj\SQs1Oj$
irB)^/a`T=6.>l75jeUQ/-G\J`W3aR!X@OenGiUphauN%qZ$[ghZrZO!a4CbScIXJ!WcC9nGiUk=:`m]
!Y&65nGiV&=98@#JcGoR!!WC8nGiUps&%8G!`8n%nGiW#rrq3YT)\jamf3>\p]0%K!))b\!)'s)^An=I
hZNEL!M%co!;c`set)@3!Wq7mS,hFH!Ynf<nc/\=8C@J=81F'/!E^*6!.k1R!!%$=!qH<l\,XkV!WT\#
!!36%FP?ef!!#[^!!*0OpAitK!@\-@!!#['!5AL7h37F1!YF6Ef)Y^K!\rREo)JfSh3n?$!!,h@o)Jgn
=:!=T!XDg0o)Je<:\b!B!!<3$s/bel!YPGkdJs>,rt=o'!NZ7R!2';m2?NFL!))tbg].=Inc/[l34T%)
!!5%8'_DA+[)phuqu?c=[IaG#']1g:!8mhY$!7<%!!+i<ci=)01\:YK"'>j(!.k1Q!':,qoDepGs3L`H
s4d/G!Z(eufDqQE!))n`!=BV7!8RVU((9^6!)'d$^]4DN_t=!2+Q"<k!;um!+Q"=7!!0pQQN5qD!B<.5
!!3=+"jd5N"]ts$!!,&>p&N)4]Dr!&p[nLf,6&k>!;QTr,6&k[!!2`bRfM4D!>-";!!#[;!!#[a!!*ZE
q>c*Iqu?d2h_t0.!Q_[o!!0IKp&G.Ph\=cESH&]m=:"U#!Bi74!8.>Q1-P=2!XMm1\cBDD!YbSrp&G-n
gXZB#!!1gRp&G.Vrt_%'g].=Io`,".$dJ_Q$5W:7!)*(eJcP]K!Kl75!!4n4&^C@X&Do8;!!1o=fDqHB
!@:M8!!3C-"8)ZJ!!34(#kn<":F<RO]`8)4s7ZKp2ZFE?!;ZZs&cXfa!!3,#QiPqB!<P7S!!#[9!!#[c
!!,%\pAfdFr;Zm#heDic!S3gc!!/VAp](A/hZDC0SH&[m(AIk181F-1g&M.%8GE/c'j.mE^&S39s)n):
!WT[Y!;ZZr\,Z4'!d+GDQN5hA!)*%d!@\,p!!*0OpAb1do`0RDr;Zn%hZioW!_D2RbQ%\Khb!YE!X@Ob
eGu0@!YJN8q>^R+=9A$ngAh9U=:b6.!WcC8[/do@!b;66q>^Rnrs-sPqZ$[%s&&Um!X8U6PlTV?!)*(e
!)(H7!)*(e!))n``W3OL!S=%A!!2#/eH#:C!J',)!!/bFQiPe>!D"^:!!,t=aoDG`;u-Ip.7s76JcPTH
!WTn1!!3+aaoDI*s7u]r^&Q[aRK*@<"Sr)u5k>!,!!#=]!!*0Q[fEu>!\<.Jqu?e/hZ;4,pAb6qhdlWb
!Z^)JQN5_>!X;a0qu?a3=NCIC=;:Z5!X)U0p&K[Eq>^RNruV(<!c\/?aoDJDs)@l9!Zq@qec;-=!)*.g
!))k_f)PeDq>^Lg[/dc<!Og2M!!32YAC:JP!!6]g!W<!!b.*]:g&M.05PtK^=;8gV!>JZ6!!,;AoDjIC
q>^QPs8;p!!WR,[!!7->!W<!!s52<+RfEHs)Z0R89CMr5!!#[i!!*rGZiI]<!Y+$QrVutLi6VJu!!2#/
rW!!ch[PeMgAh9V=:5$-!?P1Z!!,t=rW!!,=9A'oJcPZJ!Y,0#rVut^s2G$>s-3K_!_E>#df>j;!)*4i
!($&RfDkn:qu?^iZ2j=n!ZKo8ci=9'huE`]hal&np](LhhZj,]i.TGW!ZKo6e,TOR:BgFlgAhF#;ucn!
=:N7M"q=Z9!!#t@nGqJI!X2@'l2^,M!Z_4^ci=9<rr<$'s%q/EoDf(lrs&N(s-_46!Z_4[df9A.q#JtG
!(6_c!)(61!)*:k!(6AYgAh46dJs<Je(Ofq!!M2%!1_ZZ!!LlD!-R2K!;lftd]:dr!A6ge!!HCB!%:D.
!7UuO81=NW=O-sJ75*j)lMpt-s3CZJs+UN_s3Ui=!!N>3!/CO"!!3,DdJs:P,P_>k!!Gpp!!=^h!!F_Q
!!#[`!8RVU+pZNr!XR[Yg&UjI"A@Vdh_N+M">SdIhbDQ"rW!!oh[%X1!WcC6ci=1Z=9DY2n,Uu=":&$2
=:W[X!Y/<5k5aiK!XSg,ci=2JrtbVnciE_="?-8os&IDG!`f7+d/X/>p]/nG!_WMd_>jX1!))h^h>dOK
ci=,hhZ;F2pAb9Ch9!M6!m03Fd/X7K!8hqG!!+!?cN"#8:-J"FeGoY69L[8-!E^9%!:0[eK`;)"!<3#D
!;-?ks3CZGs+\i"!)*(efDkss2AX.0!Z!L7n,VAH!)(T;!TAdd!;HNq2W$F0!!5(92UDF)K](,U!E1/g
!!3F.#jhWC!!3F.#g`PP+B7A$li7(dRa;$94T@Og!;6Bo4T@Oj!!/Mfc2[i1pAihG!)(*-!))_[i;`jF
k5a]G!^5EOci=('ciES9!8l-'!Y+$Qc2[nQ=9AF$e,TJN^]4@:nc7PI!WlI2c2[o5rt*udoDemk^]4B7
dJsCM!"Js!bl@`:cN!r<mf:c9!)(W<!))DRkPtY*\^1<Vhp2;n!!(p'!!0UPbQ%Z-2#I@(!!$-:!!$-k
!8mhX2*]:b!WV-6!;-<ls1eU7s3UfJ!8mh#!!*oFci=&=mJt]9!)(Z=!=Tk,!9jIb)W**n!!(p%!:p0j
hpDE*/)M>j!!3=+#Q+SQ!!$-:!!$-j!9*t[#$;#P!!4/?0\c[%!!*&7!!*&H!!"\RruT>`!)(Z=!))\Z
e,TJAci=&=iW/3C!M7ul!!(p$!;$6khpDE)fV$@e!@^Y<!7q2N=MOn:=RQ7M!!,Y?aoDIRs4[PJ!!*&7
!!*&H!!3,5aoDGE/^XOu9C)Z/!!#[>!!+VQi;i-C!X@OedJs:)bQ.;9!8l3)!a4CbaoDJD=;(K2fDknR
^]4@:mJu>K!YJN8jT+EC!X8U:dJs:IciES9!<:II!b;66aT)<6rW(FJ!)(*-!))k_huEaMa8c9RhZMd:
oDemK^]4Aldf9@L!T.S3!!3m;!Rh#K=RQ7<!!$-L!!-1:irJ3A!ce5Adf9CJcN*M9!<:LJ!WrCD`rH*4
rW(IK!)(*-!))h^iW&sO`W-%qPMZB5!!(ol!!(p*!!/8=`W-$7-.;ho=RH1<!!$-M!!+EBi;i!?!WT7M
!!*&E!:p0js3grKX8g0>!B(#Y!7h,M9>CN-9CMrB!!*-\`W-&th\=rJp&G*M^]4Ale,TRbh_kJT!!3I/
"4R;N=R?+<!!$-N!!37)#iG^G!!54](=W<as31Q9!!*&K!!3r94N.:#9DnkB!!#[-!!#[\!9F1\9>gf2
^r,"/pAb3N^]4Ale,TNc_YsPU!!,&?e,TJNli>Q9!*I_N!B<*r!9X=_nb:N5!<:7Co`,!le,TOAou$h2
&JP*CfDknE^]4@-mJuDM!>,t(!94%\'&PUt!!(p'!:^$hhph].2W#4e!!*.'!!q*T!*I#:!*Jdlj8]5e
=9HJA!YbSriW/TN!<9h7!<:RL!^-Ju_Z0[0e,TJAmf:c9!)(fA!))5MirB+BhUMT+hp2;n!!(p,!!1o=
_>jT_:=T=E=MOn:=RcCQ!!,kB_>jV9s5<tN!!*&7!!*&L!!E8%!!'q;!<P72!!#[[!7LoJ9@X"C3!.t;
j8]5_heCXA!8l'%o)JdJec5bbhZCUo!E^,g!!$-:!!$-j!9X=_'j/9P!WrCEi;iQO!<9h7!<:UM!d+GD
rW'k:!)(iB!))\Ze,TJAeGoSBh#QL9!a4Cbf)Pg.blIA9!8lB.!X@Ob^]4EJ=97"R!*I#:!*J[ikl:bc
=:r=K!b;66i;iTP!<9h7!<:XN!X8U6quFY8!)(lC!))YYeGoSBec5\CgAp:7!S=$s!!(p#!;-<lhq%i/
T\-sY!_=d@fDknR^]4@:mJuMP!@^Ut!8mhXs1[(b!<:CGnGiRhf)Pibs1\O8!%J-'!!#[-!!#[_!9O7^
""_.d!\<.JjT+oQ!8kQl!8lE/!Z^)JrW'b7!X;a0fDknRmf:c9!*IkR!X)U0h>lL7!\jWqfDkpOcN*M9
!<:[O!Zq@q^&S069@j.D9>CN-9CW#F!!#[)!!0OOj8eiQ!8kQl!8lE/!QqqM!5SX91I'Ll!*JXhdf9AM
fDkq:2;A2j!!1pUfDkpOc2dG9!<:[O!WV&i!!*HGfDknE^]4@-n,V\Q!>u<Y!!3Ve60&%>!!(ol!!(p0
!!5ID%Jp.B!!34($J>CZ=R?+<!!$-S!!3L0!o!_7!!3W08D*tCs31Q9!!*&P!!5^k%D)T?9@s4E9>CN-
9CDlG!!#['!!.c2irJfR!8kQl!8lH0!T8Y,!5\^:+B7"o!*JRfeGoSOf`2%P+P?bS!!/Mff`2$PbQ.;9
!<:^P!WSRu!!#C>!!#[-!!#[[!:0[c6eh[t!!1u"g&M-1ciES9!8lK1!Hm;4!;ulu=;oln!*I#:!*Jdl
kl:`&=L\>3s+]\:oDemk^]4B7g&M/.s8)f1!!#[F!!#[\!7CiI9A':F9A9I'!!5gN#ho=Zhp2;n!!(p2
!!3G`9tLE)!!3[5!S[SS=MOn:=RcCW!!31'%_)K?<<!6e!;-<ls1eU7s4[MT#ldp$!58F59A0@G9C;f/
!!#[G!!#[F!8[\Vd_+<7!8l'%o)JdJgAh8qd^]AW!!,MIgAh4U^]4@:n,VeT!Bil[!!3,`joG)T!<9h7
!<:dRs8Vio^An9Y&).'a9C2`/!!#[H!!*iZfDtdKj50ma$f(d_hou/n!!(p4!!*MKj598)k?.[b!CHqE
!!$-:!!$-i!:Kmg!^,LFmJu8H!"7ripAb3n^]4B7h#IE`o`+C[mJu9?!$Btr!))YYeGoSBg].<hj%JtD
hZ*ctcej<ThZ*Z6bQ.;9!8lZ6"9F25c7$+$"TSN+6<G>d!!$-:!!$-h!:^$k+BUr6g&Tk-"<@IAPl]bB
!<:CGnGiRhhZ*c[RK*:<\cDR,!?Fhh!!#[-!!#[_!:0[d9-(8;"%(u(;saSW!!(ol!!(p7!!?3Xi'I);
\c;g?;cjUh!!$-i!7CiI=Ps/]&Qhs=f)XM)"%iOm?/P\_s3C]9!!*&W!!?R-s%'U!q#CF]9A]^L9>CN-
9CW#N!!,_YXT/HAhq'LK!;-<lhnT3lhr4V<0A,0"oDlE%!uP-2#3#U_=RH1<!!$-\!!<Ku=;fTgf`2,'
s8Ok6!!*&E!:p0js5F"\2#mT'ZiKk$!D=p$!!#[-!!#[]!:g*j/5)uC"9tIT]b9c6p&G*M^]4Alj8];q
^>GIcnc63#"9BrR2?Mq>!*JUge,TJNj8];a2cqL0dK%r#"9lC:l4`4Y!<::DoDemkj8];rm/OR!Z2jY"
!Wu(*irB'P^]4@-mf<"\!Y7p+VZ6i9`8?j`n,W1_!8kQl!8lo="9b%J_\_bA\,ZU63`mck!!$-f!7_&L
=QKMb-WiD4cN)St"<%+:YQX(g!<:7Co`,!ljo>MeYlFG8Y5n:s!Y\3.jT#9R^]4@-mK!"^!Wl".dK%\q
"#J]hB]f?qhp;An!!(p>!!?olgG?)7nc/as9NW%m!!$-:!!$-l!;6Bp'j+-7U&Y9Ts8R35!;$6ks1eU7
s5s@aFT;A#n,T`o!AR70!!#[\!7CiI9BH3T9/4`md/X8RhqpQ\!!(p&!:g*ihrt+C4Q#%"XoRtl!tn^4
$0_Ei=MOn:=RcCe!!<R)=;%2*")%Z66M1?O!!*&7!!*&`!!>Ugs((KsYlFet46QYE9C;f/!!#[U!!,/S
bQ-#j"9OM=ar]jK!8l'%o)JdJlMq&/b28*YX8q_i"!^o4"R?$f=MOn:=RZ=g!!<?g=<j:8"9P=truh"8
p&G*m^]4B7lMq&1s8SeplN"0i!Wbq3l2UfWm/YW9!))SW!Z=W3aoKcg":qotV?lPh!8l$$oDemKm/R7p
VVeclW;uDf"9LA]/HP5=!*I#:!*J[i"onW(/Qae1QiI7#g],4upAjpf!<9h7!<;Ed":3!HgCWQKYQ+_4
9*OY^!))YYeGoSBli7(j9+/c?cN"%pe),K>!!(p#!;-<lhsLIHHJd1!V?$&b!sV1r*:<e,=MOn:=RH.k
**>W6aoKTb""XEOMs^QFs3Lc9!!*&e!!A/Zs!t)Ll2Ui09C2]Z9>CN-9C`)\!!,_;OT5JThqq0,!;$6k
hnT3lhs^UJ:#Fi"k5_L^!tSF6%e'Gu=RQ7<!!$-j!!<^4<Y*4NaoDN@s8Q*g!!*&F!:g*is6p!j<WE(r
VZ>r]!D#fN!!#[-!!#[^!!<3$8P"g@"*reR./j5>!!(ol!!(pI!!=Y!hg+8_W;m#>=@NJb!!$-h!7LoJ
=RlFo"\)T5_uRmZ",d-Y/Fic@s3:W9!!*&i!!=ePs,*TPkPtWV-1Ls89>CN-9CVu^,lgSq!!W\)hmO$q
!;6BmhnT3lht-mO&%:Al#iYi`!!E?S=>L$N!!$-g!7UuK=S)Rr!]*q0!Q"iY!!EPFs4n7Y!!*&D!;$6k
s7?9o&DdB)#bh=_!!3<s$hF>u9>CN-9Ci,c$VLX'L]@Suakr*[!;?HnhnT3lht@$Q!fc*Z*8^ap!!<?f
==!P>!*JRfeGoSOo`,(>=?Zo'!6>-C*rl8:!qlTos3(K9!!*&m!!E@us8O15!9X=`(eXo&!!#[-!!#[b
!!30o)#XHS!5\^<3o8b$pAb3NciES9!8mMN"'sg@3hZQ5!!<R'=;1E/!*I#:!*Jsq";=m5$35\Y!'gVc
s(_9.!<9h7!<;cn").`75i;X:!!,&Pp&G(cmf:c9!)*"c!D>Gf!5SX;B&D?#q#CEPcN*M9!8mSP"#\ij
AtB"]!!<s<9F:Lp!*I#:!*K$s!sq\((&\,a!!@6@s#TrU!<9h7!<;ip"$6J^ESUVg!!,_Kp](:emJt]9
!)*(e!AdB]!5SX<"-_W])#F:5hp)5n!!(pR!!F.Whj";6!9!n\!@:i/"8`&u=MOn:=Si($"$0O2!W)kK
!!EA)s8<l5!!*&7!!*&r!!F5;s/uLY!20Ao!_X4'!!#[Z!7UuK9DSVi'2&D<!5JR;&\R"o#5nN%hou/n
!!(pT!!ELthn9Yj!8mh["#j=2!W;uu=MOn:=T&4&!@_,/!r)bI!!N?8kl8=#r;Zit^]4B7r;Zs)])V%/
fDqQE!Y7p+qu?^ili>Q9!)*4i!Wu(*[fF/C""`']EW,q<hol)n!!(pU!!@/sf.N?hhZ*``86?c/!!$-:
!!$.#!!='?8-\_e`W3UN"#0cTJGoNKs3Lc9!!*&u!!@]Ms"^#Cg&M.'9Dnhj9>CN-9Dnhk9.K]:JcPTH
"]F7970)5\!!V6[6fHp$f)V6>"VFj9$ijDu!7CiN=9&b.=:hqA\c;n<s8Pdns3C]9!!WB&9)nosQN5\=
"A;)^!)(*-"A8^p5tgkNJcPQG"+f@UhnT3php:23!S%1<!!=9E6<NXUdf9JP6<G>:!4`(0PlC^.!:p3i
rrJAcPlTG:!_XS-^]4F/*D>r'JcPQG!t*$)0>[\k)W/49dK#[8!s(Gb#jq]C!!<C,2?L/a\Gu^=rVn_"
!;-<o*<5:3OoX,7!>A,A!!,_&n,S%?pAb6/eA;1ddE^&<QiI.H7dU3,!!,JRY5l'4!U]p3!;6Ems,R04
!!*WW_>jT[*:<gH!42_-#N&8(!:p0l8Dac<!7UuM!a#rN!!3U3!V-5B!;$6m#QIfB!!6!s$ISp=!!#[]
!7LoJ9<eK(!!.9#d/`e=!T/6d!7UuL)d(#Y!EL0/!.k4C!!.lT_uKi<NR.Zi!!#[]!7_&L8?W$#!!2#,
d/`k?!IEXa!7UuL<?9'Z!?>2/!.k4C!!3+^`W-$ts3:V0!!#LW!7h,M8Zi'$!!5UH$detL!!3G`99'#&
!!3R2!lt?C!E]m"!.k4D!!5mp$ci;L#ldlK!0mNa9CDl5!!#Zn!4;e-c`YUpq#CGqdYn1V!!,D?a8c5n
7-aim!3lM)s3T6qo`,$7s,[6.!!+,Ha8c5F,4>M`!:^$j,2XWf!!4>$--lRS!!3=+"S;]G!!3:*#-S$4
!!4JH-e&.j!!4GG.$"AU!!#[5!!#[Z!.k4@!!01JaoDIfYg!02!!+]>o)RDC!CANC!3uS*cMu>np](?p
du=@U!!*<HaoDG_$1%YD!:g*k$K"=s!!5LE$d8U7!!31'%.aJQ!!3O1!iuC.!!3N-:=B4>!!5al$]G)6
!!#[7!!#[W!.k4A!!.Q,bQ%\%K$"(W!!+*?nc7DE!E:/@!4)Y+OoNi0qZ$ZsQ&5Ri!!#L4!!#CM!6,#A
!!1u#f)YRG!H[.X!6tQF=<#Nc!?##+!.k4=!!3+Tc2[lts3(J(!!#[b!8%8O9<8,s!!5gN#hK(Q!!3D_
:Q,;"!!3[5!RLfJ!a$$"!.k4>!!6."#g`PQ#QIlK!07*[9D&;=!!#Zl!3ZA'e#1asqZ$YmeVX@Q!!,M>
ci=(s7d0o)!:Kmgs2WId!Q4rZ!0@0],6d`?g].?Y-E.!L!!4M)*nC>i!!4.t.#@rN!!3=+"O[8O"]trl
!.k4?!!4YM+OU5k+9*n5!0@0\9Cr5?!!#Zi!3cG([*7&#rVuuA[YFk0!!+i?dJs;41Ze\W!3?/$f`0V)
q>^Qrh2;9W!!*EGdJs:c$gI_D!:0[e%,XA#!!5:?&'=m3!!34($Ma\W!!3L0!ic7&!!3T/8D+"@!!5Of
&;gJ3!!#[?!!#[U!.k4;!!.i4e,TO,Lr]RU!!+6Ap]0+M!Dt&>!3H5%RfD"?r;ZluSqmBj!!#=7!!#4F
!.k4<!!32YDq4miD;PB7!0$sZ=;^f5hZ*Zn=Jc)$!!33$Ib4W'!!%BG!J^["!!#[A!!#[R!.k4<!!6'U
#1rnW#2`M$!0.$\&Qf)/!9!nZ!E]r1!3Q;'>Q4o[!!3?(@>+^+!!#[C!!#[P!6,#<!!1ZFg]79Q!M7r"
!6G3A81W<m!@^V'!.k48!!3,7fDkr`s2P+s!!+MOqZ,IQ!<XmN!3-##/)M?%!!E9%(uHs$!6P9C#$;#^
!!37)#3Go;!9sOc0`N3J!!4)=1<'<O!!#[g!8dbV9;MWg!!0XPgAh9T`k7!*aoDH!4k]l:4#c4#JcP'9
!TF(4!!3,`_uP\q!=Tb?!9!nY'G$u>WrN23h`BNm!&t#:&VL/-!!34($JYU_$!7;i!.k4:!!3`35hl>@
4oZ/4!/ggW9DJSI!!#Zd!36)#NSiLk!T&oi!6Y?C,Z*7r!DXp!!6,#:!!/kph>dWX!<9!P!65'?!B]':
!B:,A!.k46!!35ZC#/gkB&<[/!/COT=;Ll9i;`ln=JPqq!!36%Fl!*"EW6)o!65'>9ABLI9B-#(!9X=`
=l0GA!!3;\?,HYu!!3a7!WE)Y!!-18UB%4m!b;66huEc\rr?_b!65'>9ATXK9Aol&!9X=_fppt#!LMQW
!/LUU8gsW<j8]3/9VDHb!!3,/huEh`rr@WNa8c5n"5j.[!\rU5JcP!7!\`FIiW'#qh_MtIM#[S_=9SR&
jo>Gb=9tQ"W;luVru'er";h(s!!%TNa8c35huEaMh>kOqU]:G0`8Uas_>qB(!5nj<2`fpu!BE.!!.k43
!!2H`iW'#Pn\P9[!!3ZE!94%[&eUi<V#UQ0h_sNq!]/^JJcNai!WlI0j8]5d=9IL^JcOm4!YbSrj8]6@
rt`ENK`D0I!!)'[!)&sbV#UO[guJG;gQhg>JcNai!@:J$!!,eAhZ/6.jT#=_s5X.\s006<L&_;W1]RO<
!!+kWT)b_g!X%=hjo>HjhZNiXJcNdj!WcC;jo>Gr=977YJcOp5!WrC=jo>HurrTn7L&_3HrW)*]!)&j_
V>p[,hZN'B!X%=iquD<K`W-&S=97Uc!WcC<g]5=oU&Y73rrVBa!s8L?!.k3e!!#[S!!#[L!.k40!!1l=
kPtXHh7irA!!,e?kPtW1:7hN\!!3,$kPtXas8E"M!5\^:1]lk@!<P19!.k41!!5%8'']Gu&`5L\!.t7O
#m"-0l2Ukf=9tJuUAt?VrtFYt!YYMqr;_EL_>jR/kPtTUg]2p+iW'"s^Zke"]u@VaK)bm4!''6D!B*!/
!2BMpp[.5G!UBX\!.k3g!!*`El2Uhp'AEM=!94%\(>gk5!!4e1(V9[#!!*1(!!hij!X;a0RfK5a!Z1kp
li7)Bru(Y5JcN[g!))SW!)(uF`W2V2!Lqd/!!1cDr;_EL^An9^9'cNY8h&QrJcO[.!Oi$p!!3,0]`<Wa
!rr<'0'iQ=/H_ODTE##rhcfFJ!a4CbquD<K^An::'(,`$&Qf(h!.k4/!!3<'AF9F!A,c_F!.k1P!!#[Y
!!#Z]!2';nC#9!]!!35ZCAIp^!5JR8(0Ku)!E^,k!.k4/!!7<C!q60k!rmJU!.k1P!!#[[!!#Z[!2';m
hi7+*!K5k1!.k3d!!,nAn,NJ6;:kl#!8mhXs.f&`!M]V(!.k1P!':5N!!**_QiNf[!]o3Mnc/_%h`UW5
JcNUe!X`$2nc/^m=:*RZ`W2P0!^Qbtnc/_&s$HS_JcNF`!))e]!))#GJcOR+!Q_kC!!0UO\c@<^qu?a\
2=^_J2*RH/SH&]jj730NhuEKPJcNIa!>Z.8!!*KFf`6U(h#IKph^e=!!\<.J\H%3]r;Zm&=9eBt!X;a0
R/ifY!Z_4ooDeqHruUq8JcNIa!))k_!)(oDJcOU,!MS-;!!1ZF[fD![r;ZjJ8Ful_81U#,ScAf*s7?9l
s1e7-JcNLb!<anE!!+MOec::%h>dT]hc'4K!`In[[K(mZrW!!#=:k0+!YJN8Q2mNW!XA[1p&G.urs&,r
JcNLb!))qa!)(fA`W2G-!cQrsp](?rhf8DkJcN@^!>nr4!!-1>fDpL'g&M2'rrMlp!Wi=O\,_*\q#CCf
p&G(cQN3HS!T8_-!!.i4p&K[E\c;b0+nu$<+]HqlJcOL)!WSV`!!/Pg[K(mZq>^L]p&G(YQ2mBS!^Y]Q
q>^R*ha-o8JcNC_!X`$2q>^Qu=:3RYJcOO*!_E>#q>^R*s%'NtJcPWI!)*(e!)&OVRfEK5[/'b'[*8+A
JcNC_!C&@9!!+i?df=t"gAh9SgA1dMf`/8XJcPZJ!?)=A!!*EGP5q*Q!Zp5Hqu?dFh]D=gJcNF`!X)U0
qu?d%=9R%P`W2A+![.Lnqu?dJruh"8JcN7[!)*.g!)(iBJcOC&!N+BE!!1QH[/bdYpAb4G7f35e74a](
QiI0+s82its2Xa3JcN:\!<jeI!!+;Je,Y(#fDksXhbF(M!__DVZiG[Xp](?s=:Y<1!Y8B6PQ7*O!XJa*
rW!"!rs82rJcN:\!)*4i!)(`?JcOF'!I!B"!!1u#Z2fIVp](=6=T/:$=<!D'R/d8Cs8E!!s+g+EJcN:\
!)*:k!)(Z=JcOF'"Q4_/Ic.F1JcPQG"B?HB*EA1$R/dBiOT:ODmf7q>\GuV!rVupfcN(rbPlLqVh[n[7
o)O@B[/^=<=9;S5df=t"eGo_Irt59+ZN,RWoDeqc!)&ITPlLm3g<f?iJcN1Y!^]OId/\aueH#UKYlK@U
o`,%70HZDWQ2gtGh`1**JcN4Z!XVs8ciAXtec5b7s#mRdJcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/D
JcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07T
oDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(p
NW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXt
e,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/D
JcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07T
oDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(p
NW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXt
e,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW=Y2JcLB&
`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLK)J,~>

%%EndBinary
grestore
np
grestore
gsave
0 0 mo
395.999 0 li
395.999 139.934 li
0 139.934 li
0 0 li
clp
306.043 47.7284 mo
306.736 48.9879 307.242 50.1924 307.571 51.3252 cv
307.712 51.8085 li
308.679 51.527 li
308.538 51.0438 li
308.184 49.83 307.649 48.559 306.925 47.2433 cv
306.683 46.8023 li
305.801 47.2874 li
306.043 47.7284 li
cp
308.024 55.1204 mo
307.916 56.4666 307.49 57.6284 306.775 58.5959 cv
306.475 59.0005 li
307.285 59.5993 li
307.584 59.1948 li
308.418 58.0691 308.908 56.7121 309.028 55.2003 cv
309.068 54.6986 li
308.064 54.6187 li
308.024 55.1204 li
cp
303.825 60.8533 mo
302.77 61.3081 301.518 61.6082 300.082 61.7222 cv
299.58 61.762 li
299.66 62.7655 li
300.161 62.7256 li
301.69 62.6042 303.05 62.2832 304.223 61.7777 cv
304.686 61.5786 li
304.287 60.6541 li
303.825 60.8533 li
cp
296.165 61.6091 mo
294.899 61.4536 293.602 61.1912 292.291 60.833 cv
291.806 60.7002 li
291.54 61.6712 li
292.026 61.8039 li
293.379 62.1737 294.723 62.4461 296.042 62.6081 cv
296.542 62.6695 li
296.665 61.6704 li
296.165 61.6091 li
cp
288.533 59.5605 mo
287.321 59.0726 286.113 58.5129 284.925 57.8908 cv
284.479 57.6573 li
284.012 58.5491 li
284.458 58.7826 li
285.675 59.4196 286.913 59.9933 288.158 60.4943 cv
288.625 60.6822 li
289 59.7484 li
288.534 59.5605 li
cp
281.489 55.8827 mo
280.372 55.159 279.288 54.384 278.25 53.5667 cv
277.855 53.2552 li
277.232 54.046 li
277.628 54.3574 li
278.69 55.1942 279.799 55.9871 280.942 56.7275 cv
281.364 57.0011 li
281.911 56.1563 li
281.489 55.8827 li
cp
275.25 50.9572 mo
274.277 50.0212 273.371 49.0492 272.547 48.052 cv
272.226 47.6641 li
271.45 48.3054 li
271.771 48.6933 li
272.621 49.7221 273.553 50.7217 274.552 51.6825 cv
274.915 52.0315 li
275.612 51.3061 li
275.25 50.9572 li
cp
270.241 44.8417 mo
270.051 44.5313 269.87 44.2198 269.698 43.9073 cv
269.208 43.017 268.812 42.1541 268.505 41.3246 cv
268.33 40.8526 li
267.386 41.2017 li
267.561 41.6738 li
267.887 42.5547 268.304 43.4624 268.816 44.3926 cv
268.995 44.7189 269.184 45.0439 269.382 45.367 cv
269.645 45.7964 li
270.503 45.2711 li
270.241 44.8417 li
cp
267.697 37.5581 mo
267.692 37.4345 267.689 37.3122 267.689 37.1912 cv
267.69 35.9527 267.945 34.8539 268.429 33.9053 cv
268.658 33.457 li
267.761 32.9994 li
267.533 33.4477 li
266.97 34.5503 266.682 35.8143 266.683 37.1912 cv
266.683 37.3258 266.686 37.4615 266.691 37.5983 cv
266.711 38.1012 li
267.717 38.061 li
267.697 37.5581 li
cp
270.987 31.2505 mo
271.973 30.6712 273.181 30.2536 274.599 30.0351 cv
275.097 29.9584 li
274.943 28.9636 li
274.446 29.0402 li
272.922 29.275 271.591 29.7284 270.477 30.3826 cv
270.043 30.6376 li
270.553 31.5055 li
270.987 31.2505 li
cp
278.5 29.9185 mo
278.605 29.9264 278.711 29.9351 278.817 29.9447 cv
279.984 30.0494 281.183 30.2488 282.396 30.5341 cv
282.886 30.6492 li
283.117 29.6693 li
282.627 29.5542 li
281.371 29.259 280.127 29.0515 278.907 28.9421 cv
278.796 28.9321 278.685 28.923 278.576 28.9148 cv
278.074 28.8771 li
277.998 29.8808 li
278.5 29.9185 li
cp
286.19 31.6826 mo
287.413 32.133 288.635 32.6588 289.842 33.2506 cv
290.294 33.4723 li
290.737 32.5685 li
290.285 32.3469 li
289.049 31.7406 287.795 31.2011 286.538 30.7381 cv
286.066 30.5641 li
285.718 31.5087 li
286.19 31.6826 li
cp
293.327 35.1698 mo
294.459 35.8635 295.563 36.611 296.623 37.4031 cv
297.026 37.7043 li
297.629 36.8978 li
297.226 36.5966 li
296.14 35.7859 295.012 35.0213 293.853 34.3115 cv
293.424 34.0485 li
292.898 34.9068 li
293.327 35.1698 li
cp
299.694 39.9322 mo
300.691 40.8386 301.627 41.7832 302.487 42.7554 cv
302.82 43.1325 li
303.574 42.4656 li
303.241 42.0886 li
302.355 41.0872 301.393 40.117 300.371 39.1874 cv
299.999 38.8488 li
299.321 39.5936 li
299.694 39.9322 li
cp
304.915 45.8809 mo
305.325 46.4917 305.702 47.1083 306.043 47.7284 cv
306.286 48.1694 li
307.168 47.6843 li
306.925 47.2433 li
306.569 46.5954 306.176 45.9535 305.75 45.3196 cv
305.469 44.9018 li
304.634 45.4632 li
304.915 45.8809 li
cp
false sop
0 0 0 .502 cmyk
f
300.029 6.83213 mo
301.146 7.52134 302.247 8.26669 303.329 9.06375 cv
303.734 9.36218 li
304.331 8.55163 li
303.926 8.2532 li
302.822 7.44053 301.699 6.67979 300.557 5.97548 cv
300.129 5.71119 li
299.6 6.56784 li
300.029 6.83213 li
cp
306.45 11.5473 mo
307.451 12.4045 308.433 13.3053 309.393 14.2457 cv
309.753 14.5979 li
310.457 13.8787 li
310.098 13.5265 li
309.122 12.571 308.124 11.6551 307.105 10.7828 cv
306.723 10.4554 li
306.068 11.22 li
306.45 11.5473 li
cp
312.16 17.1286 mo
313.047 18.1106 313.912 19.1261 314.754 20.1716 cv
315.069 20.5637 li
315.853 19.9326 li
315.538 19.5405 li
314.685 18.4805 313.807 17.4505 312.907 16.4539 cv
312.57 16.0803 li
311.823 16.7551 li
312.16 17.1286 li
cp
317.176 23.3548 mo
317.951 24.4327 318.702 25.5359 319.427 26.661 cv
319.699 27.0841 li
320.546 26.5391 li
320.273 26.116 li
319.539 24.9765 318.779 23.8591 317.993 22.7668 cv
317.699 22.3583 li
316.882 22.9463 li
317.176 23.3548 li
cp
321.508 30.0784 mo
322.173 31.2339 322.809 32.4075 323.417 33.596 cv
323.646 34.0442 li
324.542 33.5861 li
324.313 33.1379 li
323.698 31.9346 323.053 30.7464 322.381 29.5765 cv
322.13 29.1402 li
321.257 29.6421 li
321.508 30.0784 li
cp
325.15 37.2043 mo
325.699 38.4239 326.216 39.6551 326.701 40.8946 cv
326.884 41.3634 li
327.821 40.9971 li
327.638 40.5283 li
327.147 39.2729 326.623 38.0261 326.068 36.7912 cv
325.861 36.3322 li
324.943 36.7453 li
325.15 37.2043 li
cp
328.061 44.6591 mo
328.483 45.9314 328.87 47.2087 329.218 48.4876 cv
329.351 48.9731 li
330.322 48.7083 li
330.19 48.2227 li
329.836 46.9259 329.444 45.6312 329.016 44.3419 cv
328.857 43.8642 li
327.902 44.1814 li
328.061 44.6591 li
cp
330.16 52.373 mo
330.438 53.6873 330.675 54.9993 330.867 56.3053 cv
330.941 56.8032 li
331.937 56.6563 li
331.863 56.1583 li
331.667 54.8311 331.427 53.4986 331.145 52.1646 cv
331.04 51.6722 li
330.056 51.8806 li
330.16 52.373 li
cp
331.318 60.2719 mo
331.424 61.6123 331.481 62.942 331.486 64.2566 cv
331.488 64.7599 li
332.495 64.7558 li
332.493 64.2525 li
332.487 62.9118 332.43 61.5571 332.322 60.1927 cv
332.282 59.691 li
331.279 59.7702 li
331.318 60.272 li
cp
331.339 68.237 mo
331.23 69.6078 331.062 70.9228 330.838 72.1804 cv
330.75 72.6758 li
331.74 72.8524 li
331.829 72.3569 li
332.059 71.0657 332.231 69.7185 332.343 68.3169 cv
332.383 67.8152 li
331.379 67.7353 li
331.339 68.237 li
cp
329.925 76.0389 mo
329.531 77.3527 329.067 78.5869 328.538 79.7392 cv
328.328 80.1966 li
329.243 80.6165 li
329.453 80.159 li
330.002 78.9621 330.482 77.6842 330.889 76.3283 cv
331.034 75.8463 li
330.07 75.5569 li
329.925 76.0389 li
cp
326.613 83.1727 mo
325.854 84.29 325.018 85.2968 324.113 86.1905 cv
323.754 86.5439 li
324.461 87.2605 li
324.819 86.907 li
325.774 85.9654 326.652 84.9074 327.446 83.7382 cv
327.729 83.3218 li
326.896 82.7563 li
326.613 83.1727 li
cp
321.053 88.6182 mo
319.948 89.3108 318.773 89.8738 317.534 90.3034 cv
317.059 90.4684 li
317.388 91.4194 li
317.864 91.2544 li
319.173 90.8002 320.418 90.204 321.587 89.4711 cv
322.014 89.2038 li
321.479 88.3509 li
321.053 88.6182 li
cp
313.724 91.1762 mo
312.933 91.2718 312.122 91.3201 311.293 91.3201 cv
310.802 91.3201 310.304 91.3031 309.801 91.2688 cv
309.298 91.2347 li
309.23 92.2389 li
309.732 92.2731 li
310.258 92.3089 310.779 92.3267 311.293 92.3267 cv
312.161 92.3267 313.012 92.2761 313.845 92.1756 cv
314.344 92.1153 li
314.224 91.1159 li
313.724 91.1763 li
cp
305.903 90.6807 mo
304.666 90.3955 303.402 90.0133 302.117 89.5313 cv
301.645 89.3546 li
301.292 90.2972 li
301.763 90.4738 li
303.088 90.9706 304.394 91.3658 305.677 91.6615 cv
306.167 91.7746 li
306.393 90.7938 li
305.903 90.6807 li
cp
298.485 87.93 mo
297.452 87.407 296.408 86.8215 295.356 86.1723 cv
295.246 86.1041 295.135 86.0355 295.025 85.9663 cv
294.599 85.6984 li
294.064 86.5505 li
294.49 86.8184 li
294.602 86.8891 294.715 86.9593 294.827 87.0289 cv
295.903 87.6924 296.971 88.2917 298.03 88.828 cv
298.479 89.0554 li
298.934 88.1573 li
298.485 87.93 li
cp
291.742 83.7081 mo
290.689 82.9202 289.654 82.0834 288.639 81.2019 cv
288.259 80.8719 li
287.599 81.6319 li
287.979 81.9619 li
289.012 82.8588 290.066 83.711 291.14 84.5141 cv
291.543 84.8156 li
292.146 84.0096 li
291.742 83.7081 li
cp
285.713 78.4841 mo
284.775 77.5541 283.858 76.5863 282.964 75.5845 cv
282.628 75.2091 li
281.877 75.8795 li
282.213 76.2549 li
283.12 77.2715 284.052 78.2541 285.005 79.1989 cv
285.362 79.5533 li
286.071 78.8385 li
285.713 78.4841 li
cp
280.387 72.5269 mo
279.561 71.4892 278.759 70.4227 277.982 69.3308 cv
277.69 68.9208 li
276.87 69.5045 li
277.162 69.9145 li
277.949 71.0207 278.762 72.1016 279.599 73.1537 cv
279.913 73.5475 li
280.7 72.9207 li
280.387 72.5269 li
cp
275.747 66.0131 mo
275.032 64.8906 274.344 63.7469 273.683 62.5853 cv
273.434 62.1478 li
272.559 62.6454 li
272.808 63.0829 li
273.477 64.259 274.174 65.4171 274.898 66.5539 cv
275.169 66.9784 li
276.018 66.4376 li
275.747 66.0131 li
cp
271.791 59.0584 mo
271.189 57.8662 270.617 56.6595 270.076 55.4416 cv
269.872 54.9817 li
268.952 55.3903 li
269.156 55.8502 li
269.704 57.0834 270.283 58.3051 270.893 59.5121 cv
271.12 59.9614 li
272.018 59.5076 li
271.791 59.0584 li
cp
268.544 51.7436 mo
268.062 50.4934 267.615 49.2352 267.203 47.9723 cv
267.047 47.4939 li
266.09 47.8061 li
266.246 48.2845 li
266.663 49.5643 267.117 50.839 267.604 52.1053 cv
267.785 52.5749 li
268.725 52.2133 li
268.544 51.7436 li
cp
266.066 44.1378 mo
265.72 42.8409 265.413 41.5428 265.146 40.2473 cv
265.045 39.7542 li
264.059 39.9569 li
264.16 40.4499 li
264.431 41.7651 264.742 43.0821 265.093 44.3973 cv
265.223 44.8836 li
266.196 44.6241 li
266.066 44.1378 li
cp
264.463 36.311 mo
264.275 34.9799 264.133 33.6554 264.039 32.3418 cv
264.003 31.8398 li
262.999 31.912 li
263.035 32.414 li
263.131 33.7514 263.276 35.0986 263.466 36.4516 cv
263.537 36.95 li
264.533 36.8094 li
264.463 36.311 li
cp
263.9 28.3565 mo
263.904 27.3727 263.937 26.3975 263.999 25.433 cv
264.022 25.0777 264.049 24.7261 264.08 24.3781 cv
264.124 23.8768 li
263.122 23.788 li
263.077 24.2894 li
263.046 24.6453 263.018 25.0047 262.995 25.3678 cv
262.931 26.3535 262.898 27.3491 262.894 28.3528 cv
262.892 28.856 li
263.898 28.8598 li
263.9 28.3565 li
cp
264.619 20.4406 mo
264.874 19.09 265.195 17.8071 265.575 16.5939 cv
265.726 16.1137 li
264.766 15.8123 li
264.615 16.2925 li
264.222 17.5453 263.892 18.8665 263.63 20.2537 cv
263.537 20.7483 li
264.526 20.9352 li
264.619 20.4406 li
cp
267.013 12.9144 mo
267.6 11.6839 268.263 10.5498 268.993 9.51452 cv
269.284 9.1033 li
268.461 8.52291 li
268.171 8.93414 li
267.406 10.0182 266.715 11.2018 266.105 12.4808 cv
265.888 12.935 li
266.796 13.3686 li
267.013 12.9144 li
cp
271.551 6.54685 mo
272.515 5.63459 273.554 4.84671 274.662 4.18623 cv
275.094 3.92842 li
274.578 3.06388 li
274.146 3.3217 li
272.974 4.02064 271.875 4.85404 270.859 5.81585 cv
270.493 6.16186 li
271.185 6.89287 li
271.551 6.54686 li
cp
278.217 2.57934 mo
279.436 2.18611 280.714 1.92011 282.046 1.78602 cv
282.546 1.73557 li
282.445 .734042 li
281.945 .784488 li
280.545 .925416 279.196 1.20568 277.908 1.62136 cv
277.429 1.7759 li
277.738 2.73389 li
278.217 2.57935 li
cp
285.972 1.76538 mo
287.234 1.87275 288.533 2.08772 289.862 2.414 cv
290.35 2.53403 li
290.59 1.55647 li
290.102 1.43644 li
288.725 1.09837 287.375 .874445 286.057 .762397 cv
285.555 .719733 li
285.47 1.72271 li
285.972 1.76538 li
cp
293.634 3.61249 mo
294.822 4.07375 296.028 4.61993 297.249 5.25323 cv
297.695 5.48498 li
298.159 4.59144 li
297.712 4.35969 li
296.461 3.71054 295.222 3.14924 293.998 2.67416 cv
293.529 2.49197 li
293.165 3.43031 li
293.634 3.61249 li
cp
0 0 0 .503 cmyk
f
376.156 48.6824 mo
375.822 48.9855 375.416 49.2778 374.937 49.5496 cv
374.302 49.9107 373.585 50.2086 372.817 50.4392 cv
372.335 50.584 li
372.625 51.548 li
373.107 51.4033 li
373.938 51.1535 374.723 50.8287 375.434 50.4249 cv
375.97 50.1208 376.436 49.787 376.832 49.428 cv
377.205 49.0899 li
376.529 48.3443 li
376.156 48.6824 li
cp
368.982 51.0226 mo
368.865 51.0252 368.749 51.0265 368.632 51.0265 cv
367.432 51.0266 366.232 50.8905 365.117 50.6207 cv
364.628 50.5024 li
364.391 51.4808 li
364.88 51.5991 li
366.081 51.8892 367.356 52.033 368.632 52.0331 cv
368.756 52.0331 368.88 52.0317 369.004 52.029 cv
369.508 52.0179 li
369.485 51.0115 li
368.982 51.0226 li
cp
361.626 49.1013 mo
360.402 48.2105 359.867 47.2101 359.866 46.2641 cv
359.867 46.1949 li
359.881 45.6918 li
358.875 45.664 li
358.861 46.1671 li
358.86 46.2641 li
358.859 47.6129 359.636 48.9071 361.036 49.9166 cv
361.444 50.2118 li
362.034 49.3965 li
361.626 49.1013 li
cp
361.753 43.3373 mo
361.931 43.2143 362.122 43.0944 362.327 42.9781 cv
363.185 42.4904 364.191 42.1184 365.273 41.8708 cv
365.763 41.7584 li
365.539 40.7772 li
365.048 40.8896 li
363.886 41.156 362.79 41.5575 361.829 42.1029 cv
361.601 42.233 361.384 42.3684 361.181 42.509 cv
360.767 42.7949 li
361.339 43.6233 li
361.753 43.3373 li
cp
369.143 41.5099 mo
370.471 41.5525 371.785 41.7627 372.969 42.1356 cv
373.45 42.2867 li
373.752 41.3265 li
373.272 41.1754 li
371.988 40.7716 370.588 40.5494 369.175 40.5038 cv
368.672 40.4877 li
368.64 41.4937 li
369.143 41.5099 li
cp
374.937 42.9782 mo
376.312 43.7593 377.071 44.6994 377.309 45.5988 cv
377.439 46.0849 li
378.412 45.8247 li
378.282 45.3385 li
377.947 44.0946 376.965 42.9725 375.434 42.1029 cv
374.996 41.8544 li
374.499 42.7296 li
374.937 42.9782 li
cp
0 0 0 .5 cmyk
f
grestore
260.192 104.61 mo
260.192 109.792 li
260.691 109.792 li
260.783 109.792 260.849 109.809 260.887 109.843 cv
260.944 109.978 li
260.887 110.111 li
260.849 110.146 260.783 110.164 260.691 110.164 cv
259.821 110.164 li
259.821 109.424 li
259.391 110.014 258.844 110.309 258.18 110.309 cv
257.844 110.309 257.521 110.22 257.213 110.042 cv
256.905 109.863 256.662 109.609 256.483 109.279 cv
256.305 108.95 256.216 108.609 256.216 108.259 cv
256.216 107.906 256.305 107.565 256.483 107.236 cv
256.662 106.908 256.905 106.654 257.213 106.474 cv
257.521 106.294 257.845 106.205 258.185 106.205 cv
258.833 106.205 259.379 106.498 259.821 107.085 cv
259.821 104.982 li
259.323 104.982 li
259.231 104.982 259.166 104.964 259.127 104.93 cv
259.069 104.796 li
259.127 104.664 li
259.166 104.628 259.231 104.61 259.323 104.61 cv
260.192 104.61 li
cp
259.821 108.257 mo
259.821 107.785 259.662 107.387 259.344 107.063 cv
259.024 106.738 258.646 106.576 258.206 106.576 cv
257.764 106.576 257.384 106.738 257.064 107.063 cv
256.746 107.387 256.587 107.785 256.587 108.257 cv
256.587 108.726 256.746 109.123 257.064 109.449 cv
257.384 109.774 257.764 109.937 258.206 109.937 cv
258.646 109.937 259.024 109.774 259.344 109.449 cv
259.662 109.123 259.821 108.726 259.821 108.257 cv
cp
false sop
0 0 0 1 cmyk
f
265.42 108.343 mo
261.633 108.343 li
261.698 108.821 261.898 109.207 262.235 109.499 cv
262.572 109.791 262.989 109.937 263.486 109.937 cv
263.764 109.937 264.053 109.891 264.356 109.799 cv
264.659 109.707 264.906 109.585 265.098 109.433 cv
265.243 109.367 li
265.367 109.422 li
265.42 109.553 li
265.35 109.7 li
265.208 109.848 264.958 109.987 264.598 110.116 cv
264.237 110.244 263.868 110.309 263.488 110.309 cv
262.854 110.309 262.323 110.1 261.898 109.684 cv
261.474 109.267 261.262 108.763 261.262 108.17 cv
261.262 107.631 261.461 107.169 261.86 106.784 cv
262.26 106.398 262.754 106.205 263.343 106.205 cv
263.95 106.205 264.449 106.403 264.841 106.8 cv
265.233 107.197 265.426 107.711 265.42 108.343 cv
cp
265.049 107.971 mo
264.975 107.558 264.78 107.223 264.465 106.964 cv
264.15 106.706 263.775 106.576 263.341 106.576 cv
262.906 106.576 262.532 106.704 262.219 106.959 cv
261.905 107.215 261.71 107.552 261.633 107.971 cv
265.049 107.971 li
cp
f
267.051 106.332 mo
267.051 107.011 li
267.271 106.744 267.508 106.542 267.761 106.407 cv
268.015 106.272 268.313 106.205 268.657 106.205 cv
269.021 106.205 269.358 106.291 269.667 106.461 cv
269.977 106.632 270.215 106.87 270.385 107.175 cv
270.554 107.48 270.638 107.801 270.638 108.137 cv
270.638 108.67 270.447 109.126 270.066 109.505 cv
269.686 109.884 269.218 110.073 268.661 110.073 cv
267.999 110.073 267.463 109.805 267.051 109.267 cv
267.051 111.496 li
267.938 111.496 li
268.029 111.496 268.094 111.512 268.134 111.546 cv
268.192 111.681 li
268.134 111.814 li
268.094 111.849 268.029 111.867 267.938 111.867 cv
266.181 111.867 li
265.986 111.816 li
265.928 111.681 li
265.986 111.546 li
266.181 111.496 li
266.68 111.496 li
266.68 106.703 li
266.181 106.703 li
265.986 106.651 li
265.928 106.517 li
265.986 106.385 li
266.181 106.332 li
267.051 106.332 li
cp
270.267 108.137 mo
270.267 107.708 270.111 107.341 269.801 107.035 cv
269.49 106.729 269.11 106.576 268.663 106.576 cv
268.213 106.576 267.831 106.73 267.519 107.037 cv
267.207 107.345 267.051 107.711 267.051 108.137 cv
267.051 108.565 267.207 108.933 267.519 109.241 cv
267.831 109.548 268.213 109.702 268.663 109.702 cv
269.107 109.702 269.486 109.549 269.799 109.243 cv
270.11 108.937 270.267 108.568 270.267 108.137 cv
cp
f
272.713 106.332 mo
274.724 106.332 li
274.814 106.332 274.88 106.349 274.919 106.383 cv
274.978 106.517 li
274.919 106.65 li
274.88 106.686 274.814 106.703 274.724 106.703 cv
272.713 106.703 li
272.713 109.18 li
272.713 109.396 272.799 109.576 272.972 109.72 cv
273.144 109.865 273.397 109.937 273.73 109.937 cv
273.98 109.937 274.252 109.9 274.544 109.825 cv
274.836 109.75 275.063 109.665 275.226 109.57 cv
275.371 109.513 li
275.495 109.568 li
275.549 109.699 li
275.491 109.822 li
275.396 109.919 275.168 110.025 274.804 110.139 cv
274.44 110.252 274.092 110.309 273.76 110.309 cv
273.326 110.309 272.981 110.207 272.726 110.003 cv
272.47 109.799 272.342 109.525 272.342 109.179 cv
272.342 106.703 li
271.656 106.703 li
271.466 106.651 li
271.408 106.515 li
271.466 106.384 li
271.656 106.332 li
272.342 106.332 li
272.342 105.23 li
272.394 105.04 li
272.525 104.982 li
272.66 105.04 li
272.713 105.23 li
272.713 106.332 li
cp
f
277.297 104.61 mo
277.297 106.903 li
277.533 106.647 277.759 106.466 277.976 106.362 cv
278.192 106.257 278.436 106.205 278.704 106.205 cv
278.993 106.205 279.238 106.255 279.44 106.357 cv
279.643 106.459 279.812 106.615 279.947 106.826 cv
280.083 107.036 280.15 107.258 280.15 107.491 cv
280.15 109.792 li
280.559 109.792 li
280.651 109.792 280.718 109.809 280.755 109.843 cv
280.812 109.978 li
280.755 110.111 li
280.718 110.146 280.651 110.164 280.559 110.164 cv
279.371 110.164 li
279.279 110.164 279.214 110.146 279.176 110.111 cv
279.118 109.978 li
279.176 109.843 li
279.214 109.809 279.279 109.792 279.371 109.792 cv
279.779 109.792 li
279.779 107.517 li
279.779 107.249 279.683 107.025 279.489 106.846 cv
279.295 106.666 279.025 106.576 278.68 106.576 cv
278.408 106.576 278.176 106.643 277.984 106.775 cv
277.845 106.87 277.616 107.092 277.297 107.442 cv
277.297 109.792 li
277.704 109.792 li
277.795 109.792 277.86 109.809 277.899 109.843 cv
277.958 109.978 li
277.899 110.111 li
277.86 110.146 277.795 110.164 277.704 110.164 cv
276.518 110.164 li
276.427 110.164 276.362 110.146 276.323 110.111 cv
276.264 109.978 li
276.323 109.843 li
276.362 109.809 276.427 109.792 276.518 109.792 cv
276.926 109.792 li
276.926 104.982 li
276.427 104.982 li
276.232 104.93 li
276.174 104.796 li
276.232 104.664 li
276.427 104.61 li
277.297 104.61 li
cp
f
290.62 107.093 mo
286.567 107.093 li
286.378 107.04 li
286.32 106.905 li
286.378 106.774 li
286.567 106.721 li
290.62 106.721 li
290.811 106.774 li
290.868 106.909 li
290.811 107.04 li
290.62 107.093 li
cp
290.62 108.424 mo
286.567 108.424 li
286.378 108.374 li
286.32 108.239 li
286.378 108.104 li
286.567 108.053 li
290.62 108.053 li
290.811 108.104 li
290.868 108.239 li
290.811 108.374 li
290.62 108.424 li
cp
f
297.083 109.792 mo
299.918 109.792 li
299.918 109.647 li
299.97 109.459 li
300.104 109.403 li
300.236 109.459 li
300.29 109.647 li
300.29 110.164 li
296.711 110.164 li
296.711 109.614 li
297.465 108.933 298.198 108.242 298.911 107.542 cv
299.244 107.215 299.472 106.975 299.596 106.822 cv
299.72 106.668 299.804 106.534 299.85 106.417 cv
299.896 106.301 299.918 106.184 299.918 106.066 cv
299.918 105.748 299.79 105.466 299.534 105.222 cv
299.278 104.977 298.97 104.855 298.608 104.855 cv
298.285 104.855 297.999 104.948 297.749 105.134 cv
297.499 105.32 297.337 105.55 297.264 105.824 cv
297.196 105.961 li
297.071 106.005 li
296.943 105.955 li
296.893 105.833 li
296.893 105.692 296.97 105.501 297.124 105.26 cv
297.278 105.019 297.491 104.829 297.764 104.691 cv
298.036 104.553 298.314 104.483 298.6 104.483 cv
299.062 104.483 299.459 104.644 299.791 104.965 cv
300.123 105.287 300.29 105.65 300.29 106.057 cv
300.29 106.228 300.262 106.384 300.206 106.526 cv
300.15 106.667 300.056 106.823 299.922 106.992 cv
299.789 107.161 299.549 107.417 299.203 107.758 cv
298.335 108.62 297.628 109.288 297.083 109.763 cv
297.083 109.792 li
cp
f
gsave
0 0 mo
395.999 0 li
395.999 139.934 li
0 139.934 li
0 0 li
clp
283.854 63.866 mo
278.29 101.529 li
279.286 101.676 li
284.85 64.0132 li
0 0 0 .502 cmyk
f
285.107 58.8232 mo
286.322 64.7388 li
282.235 64.1362 li
285.107 58.8232 li
cp
f
285.107 58.8232 mo
284.984 58.8486 li
286.163 64.5881 li
282.431 64.038 li
285.218 58.8831 li
285.107 58.8232 li
284.984 58.8486 li
285.107 58.8232 li
284.997 58.7634 li
282.039 64.2345 li
286.482 64.8895 li
285.161 58.4592 li
284.997 58.7634 li
285.107 58.8232 li
cp
f
grestore
349.908 69.3413 mo
349.908 74.5234 li
350.406 74.5234 li
350.498 74.5234 350.563 74.5405 350.602 74.5742 cv
350.66 74.7095 li
350.602 74.8418 li
350.563 74.8774 350.498 74.895 350.406 74.895 cv
349.536 74.895 li
349.536 74.1553 li
349.105 74.7451 348.559 75.04 347.896 75.04 cv
347.559 75.04 347.236 74.9507 346.929 74.7725 cv
346.62 74.5942 346.377 74.3403 346.198 74.0107 cv
346.021 73.6807 345.931 73.3403 345.931 72.9902 cv
345.931 72.6367 346.021 72.2959 346.198 71.9673 cv
346.377 71.6392 346.62 71.3853 346.929 71.2056 cv
347.236 71.0259 347.561 70.936 347.899 70.936 cv
348.549 70.936 349.094 71.2295 349.536 71.8159 cv
349.536 69.7129 li
349.038 69.7129 li
348.946 69.7129 348.881 69.6958 348.843 69.6611 cv
348.784 69.5273 li
348.843 69.3945 li
348.881 69.3594 348.946 69.3413 349.038 69.3413 cv
349.908 69.3413 li
cp
349.536 72.9878 mo
349.536 72.5161 349.377 72.1182 349.059 71.7939 cv
348.74 71.4697 348.361 71.3071 347.922 71.3071 cv
347.479 71.3071 347.099 71.4697 346.78 71.7939 cv
346.462 72.1182 346.303 72.5161 346.303 72.9878 cv
346.303 73.4565 346.462 73.854 346.78 74.1797 cv
347.099 74.5054 347.479 74.6685 347.922 74.6685 cv
348.361 74.6685 348.74 74.5054 349.059 74.1797 cv
349.377 73.854 349.536 73.4565 349.536 72.9878 cv
cp
f
355.135 73.0737 mo
351.349 73.0737 li
351.413 73.5527 351.614 73.938 351.951 74.23 cv
352.288 74.5225 352.705 74.6685 353.202 74.6685 cv
353.479 74.6685 353.769 74.6226 354.071 74.5303 cv
354.375 74.438 354.622 74.3159 354.813 74.1646 cv
354.959 74.0977 li
355.082 74.1533 li
355.135 74.2847 li
355.064 74.4312 li
354.924 74.5791 354.673 74.7178 354.313 74.8467 cv
353.953 74.9756 353.583 75.04 353.204 75.04 cv
352.569 75.04 352.039 74.8315 351.614 74.4146 cv
351.189 73.998 350.977 73.4937 350.977 72.9019 cv
350.977 72.3628 351.177 71.9004 351.576 71.5146 cv
351.975 71.1289 352.469 70.936 353.059 70.936 cv
353.665 70.936 354.164 71.1343 354.557 71.5313 cv
354.948 71.9282 355.142 72.4424 355.135 73.0737 cv
cp
354.764 72.7026 mo
354.69 72.2896 354.495 71.9536 354.181 71.6953 cv
353.865 71.4365 353.491 71.3071 353.056 71.3071 cv
352.621 71.3071 352.247 71.4351 351.934 71.6909 cv
351.62 71.9463 351.425 72.2837 351.349 72.7026 cv
354.764 72.7026 li
cp
f
356.766 71.063 mo
356.766 71.7417 li
356.986 71.4746 357.224 71.2734 357.477 71.1387 cv
357.729 71.0034 358.028 70.936 358.372 70.936 cv
358.737 70.936 359.074 71.0215 359.383 71.1924 cv
359.691 71.3633 359.931 71.6011 360.1 71.9063 cv
360.269 72.2114 360.354 72.5317 360.354 72.8677 cv
360.354 73.4014 360.163 73.8574 359.782 74.2363 cv
359.401 74.6147 358.933 74.8042 358.377 74.8042 cv
357.715 74.8042 357.178 74.5356 356.766 73.9985 cv
356.766 76.2266 li
357.653 76.2266 li
357.744 76.2266 357.81 76.2437 357.849 76.2773 cv
357.907 76.4126 li
357.849 76.5449 li
357.81 76.5806 357.744 76.5981 357.653 76.5981 cv
355.896 76.5981 li
355.806 76.5981 355.74 76.5811 355.701 76.5474 cv
355.643 76.4126 li
355.701 76.2773 li
355.74 76.2437 355.806 76.2266 355.896 76.2266 cv
356.395 76.2266 li
356.395 71.4341 li
355.896 71.4341 li
355.806 71.4341 355.74 71.417 355.701 71.3823 cv
355.643 71.2485 li
355.701 71.1157 li
355.74 71.0806 355.806 71.063 355.896 71.063 cv
356.766 71.063 li
cp
359.982 72.8677 mo
359.982 72.4395 359.826 72.0723 359.516 71.7661 cv
359.205 71.4604 358.826 71.3071 358.378 71.3071 cv
357.928 71.3071 357.546 71.4609 357.234 71.7686 cv
356.922 72.0757 356.766 72.4424 356.766 72.8677 cv
356.766 73.2964 356.922 73.6646 357.234 73.9717 cv
357.546 74.2793 357.928 74.4331 358.378 74.4331 cv
358.823 74.4331 359.201 74.2798 359.514 73.9741 cv
359.826 73.668 359.982 73.2993 359.982 72.8677 cv
cp
f
362.428 71.063 mo
364.439 71.063 li
364.53 71.063 364.595 71.0801 364.634 71.1147 cv
364.693 71.2485 li
364.634 71.3813 li
364.595 71.4165 364.53 71.4341 364.439 71.4341 cv
362.428 71.4341 li
362.428 73.9106 li
362.428 74.1265 362.515 74.3066 362.687 74.4517 cv
362.859 74.5962 363.112 74.6685 363.445 74.6685 cv
363.696 74.6685 363.968 74.6309 364.26 74.5557 cv
364.552 74.4805 364.778 74.396 364.94 74.3013 cv
365.087 74.2437 li
365.211 74.2993 li
365.264 74.4297 li
365.206 74.5532 li
365.112 74.6509 364.883 74.7563 364.52 74.8696 cv
364.155 74.9829 363.808 75.04 363.475 75.04 cv
363.042 75.04 362.697 74.938 362.44 74.7344 cv
362.185 74.5308 362.057 74.2559 362.057 73.9102 cv
362.057 71.4341 li
361.371 71.4341 li
361.181 71.3818 li
361.123 71.2466 li
361.181 71.1152 li
361.371 71.063 li
362.057 71.063 li
362.057 69.9614 li
362.109 69.7705 li
362.24 69.7129 li
362.376 69.7705 li
362.428 69.9614 li
362.428 71.063 li
cp
f
367.012 69.3413 mo
367.012 71.6343 li
367.248 71.3779 367.475 71.1978 367.691 71.0928 cv
367.908 70.9883 368.15 70.936 368.419 70.936 cv
368.708 70.936 368.954 70.9868 369.155 71.0884 cv
369.357 71.1899 369.526 71.3462 369.662 71.5566 cv
369.798 71.7671 369.866 71.9888 369.866 72.2217 cv
369.866 74.5234 li
370.273 74.5234 li
370.367 74.5234 370.433 74.5405 370.471 74.5742 cv
370.527 74.7095 li
370.471 74.8418 li
370.433 74.8774 370.367 74.895 370.273 74.895 cv
369.087 74.895 li
368.995 74.895 368.93 74.8774 368.891 74.8418 cv
368.833 74.7095 li
368.891 74.5742 li
368.93 74.5405 368.995 74.5234 369.087 74.5234 cv
369.494 74.5234 li
369.494 72.2485 li
369.494 71.9805 369.397 71.7563 369.204 71.5767 cv
369.011 71.397 368.741 71.3071 368.396 71.3071 cv
368.123 71.3071 367.892 71.3735 367.699 71.5063 cv
367.561 71.6006 367.331 71.8228 367.012 72.1733 cv
367.012 74.5234 li
367.42 74.5234 li
367.511 74.5234 367.575 74.5405 367.614 74.5742 cv
367.674 74.7095 li
367.614 74.8418 li
367.575 74.8774 367.511 74.895 367.42 74.895 cv
366.233 74.895 li
366.143 74.895 366.077 74.8774 366.038 74.8418 cv
365.979 74.7095 li
366.038 74.5742 li
366.077 74.5405 366.143 74.5234 366.233 74.5234 cv
366.641 74.5234 li
366.641 69.7129 li
366.143 69.7129 li
366.052 69.7129 365.987 69.6958 365.947 69.6611 cv
365.889 69.5273 li
365.947 69.3945 li
365.987 69.3594 366.052 69.3413 366.143 69.3413 cv
367.012 69.3413 li
cp
f
380.335 71.8237 mo
376.283 71.8237 li
376.093 71.7715 li
376.035 71.6357 li
376.093 71.5049 li
376.283 71.4521 li
380.335 71.4521 li
380.525 71.5049 li
380.583 71.6401 li
380.525 71.7715 li
380.335 71.8237 li
cp
380.335 73.1558 mo
376.283 73.1558 li
376.093 73.1045 li
376.035 72.9697 li
376.093 72.835 li
376.283 72.7842 li
380.335 72.7842 li
380.525 72.835 li
380.583 72.9697 li
380.525 73.1045 li
380.335 73.1558 li
cp
f
388.564 69.2681 mo
388.564 74.5234 li
389.842 74.5234 li
390.029 74.5742 li
390.087 74.7095 li
390.029 74.8418 li
389.842 74.895 li
386.916 74.895 li
386.728 74.8418 li
386.671 74.7095 li
386.728 74.5742 li
386.916 74.5234 li
388.193 74.5234 li
388.193 69.7847 li
386.983 70.1655 li
386.855 70.1929 li
386.733 70.1377 li
386.679 70.0063 li
386.723 69.8823 li
386.868 69.8076 li
388.564 69.2681 li
cp
f
323.79 3.50684 mo
323.79 8.68896 li
324.288 8.68896 li
324.38 8.68896 324.445 8.70557 324.483 8.73975 cv
324.542 8.87451 li
324.483 9.00732 li
324.445 9.04248 324.38 9.06006 324.288 9.06006 cv
323.418 9.06006 li
323.418 8.3208 li
322.987 8.91064 322.44 9.20508 321.777 9.20508 cv
321.44 9.20508 321.118 9.11621 320.811 8.93799 cv
320.502 8.75977 320.259 8.50586 320.08 8.17578 cv
319.901 7.84619 319.813 7.50586 319.813 7.15576 cv
319.813 6.80225 319.901 6.46143 320.08 6.13281 cv
320.259 5.8042 320.502 5.55029 320.811 5.37061 cv
321.118 5.19092 321.442 5.10107 321.781 5.10107 cv
322.431 5.10107 322.976 5.39453 323.418 5.98145 cv
323.418 3.87842 li
322.92 3.87842 li
322.828 3.87842 322.763 3.86084 322.724 3.82666 cv
322.666 3.69238 li
322.724 3.56006 li
322.763 3.52441 322.828 3.50684 322.92 3.50684 cv
323.79 3.50684 li
cp
323.418 7.15332 mo
323.418 6.68164 323.259 6.28369 322.94 5.95947 cv
322.622 5.63477 322.243 5.47266 321.804 5.47266 cv
321.361 5.47266 320.98 5.63477 320.662 5.95947 cv
320.344 6.28369 320.185 6.68164 320.185 7.15332 cv
320.185 7.62207 320.344 8.01904 320.662 8.34521 cv
320.98 8.6709 321.361 8.8335 321.804 8.8335 cv
322.243 8.8335 322.622 8.6709 322.94 8.34521 cv
323.259 8.01904 323.418 7.62207 323.418 7.15332 cv
cp
f
329.017 7.23926 mo
325.23 7.23926 li
325.295 7.71777 325.496 8.10352 325.833 8.39551 cv
326.17 8.6875 326.587 8.8335 327.084 8.8335 cv
327.36 8.8335 327.65 8.7876 327.953 8.6958 cv
328.256 8.60352 328.504 8.48145 328.694 8.32959 cv
328.841 8.26318 li
328.964 8.31885 li
329.017 8.44971 li
328.946 8.59619 li
328.806 8.74463 328.555 8.8833 328.194 9.01221 cv
327.835 9.14063 327.465 9.20508 327.086 9.20508 cv
326.45 9.20508 325.921 8.99658 325.496 8.58008 cv
325.071 8.16357 324.858 7.65918 324.858 7.06689 cv
324.858 6.52783 325.059 6.06592 325.457 5.68018 cv
325.856 5.29443 326.351 5.10107 326.94 5.10107 cv
327.547 5.10107 328.046 5.2998 328.438 5.69678 cv
328.83 6.09375 329.022 6.60791 329.017 7.23926 cv
cp
328.646 6.86768 mo
328.571 6.45459 328.377 6.11914 328.063 5.86084 cv
327.747 5.60205 327.372 5.47266 326.938 5.47266 cv
326.503 5.47266 326.129 5.60059 325.815 5.85596 cv
325.502 6.11182 325.307 6.44873 325.23 6.86768 cv
328.646 6.86768 li
cp
f
330.647 5.22803 mo
330.647 5.90723 li
330.868 5.64014 331.105 5.43896 331.358 5.30371 cv
331.611 5.16895 331.91 5.10107 332.254 5.10107 cv
332.619 5.10107 332.956 5.18701 333.265 5.35791 cv
333.573 5.52881 333.813 5.7666 333.981 6.07178 cv
334.15 6.37695 334.235 6.69727 334.235 7.0332 cv
334.235 7.56689 334.045 8.02295 333.664 8.40186 cv
333.283 8.78027 332.814 8.96973 332.258 8.96973 cv
331.597 8.96973 331.06 8.70117 330.647 8.16357 cv
330.647 10.3921 li
331.535 10.3921 li
331.626 10.3921 331.691 10.4087 331.73 10.4429 cv
331.789 10.5776 li
331.73 10.7104 li
331.691 10.7456 331.626 10.7632 331.535 10.7632 cv
329.778 10.7632 li
329.688 10.7632 329.622 10.7466 329.583 10.7124 cv
329.524 10.5776 li
329.583 10.4429 li
329.622 10.4087 329.688 10.3921 329.778 10.3921 cv
330.276 10.3921 li
330.276 5.59961 li
329.778 5.59961 li
329.688 5.59961 329.622 5.58252 329.583 5.54785 cv
329.524 5.41357 li
329.583 5.28125 li
329.622 5.24561 329.688 5.22803 329.778 5.22803 cv
330.647 5.22803 li
cp
333.864 7.0332 mo
333.864 6.60449 333.708 6.2373 333.397 5.93164 cv
333.087 5.62549 332.708 5.47266 332.26 5.47266 cv
331.81 5.47266 331.428 5.62646 331.116 5.93359 cv
330.804 6.24121 330.647 6.60742 330.647 7.0332 cv
330.647 7.46191 330.804 7.82959 331.116 8.13721 cv
331.428 8.44482 331.81 8.59814 332.26 8.59814 cv
332.705 8.59814 333.083 8.44531 333.396 8.13965 cv
333.708 7.8335 333.864 7.46484 333.864 7.0332 cv
cp
f
336.31 5.22803 mo
338.321 5.22803 li
338.516 5.27979 li
338.574 5.41357 li
338.516 5.54639 li
338.321 5.59961 li
336.31 5.59961 li
336.31 8.07617 li
336.31 8.29199 336.396 8.47217 336.568 8.6167 cv
336.741 8.76123 336.994 8.8335 337.327 8.8335 cv
337.578 8.8335 337.85 8.79639 338.142 8.72119 cv
338.434 8.646 338.66 8.56104 338.822 8.4668 cv
338.969 8.40918 li
339.093 8.46436 li
339.146 8.59521 li
339.088 8.71875 li
338.994 8.81592 338.765 8.92139 338.401 9.03516 cv
338.037 9.14844 337.689 9.20508 337.356 9.20508 cv
336.924 9.20508 336.579 9.10352 336.322 8.89941 cv
336.066 8.6958 335.938 8.42139 335.938 8.07568 cv
335.938 5.59961 li
335.253 5.59961 li
335.063 5.54736 li
335.005 5.41162 li
335.063 5.28076 li
335.253 5.22803 li
335.938 5.22803 li
335.938 4.12695 li
335.991 3.93604 li
336.122 3.87842 li
336.257 3.93604 li
336.31 4.12695 li
336.31 5.22803 li
cp
f
340.894 3.50684 mo
340.894 5.7998 li
341.13 5.54346 341.356 5.36279 341.573 5.2583 cv
341.79 5.15381 342.032 5.10107 342.301 5.10107 cv
342.59 5.10107 342.835 5.15186 343.037 5.25391 cv
343.239 5.35547 343.408 5.51123 343.544 5.72217 cv
343.68 5.93262 343.747 6.1543 343.747 6.38721 cv
343.747 8.68896 li
344.155 8.68896 li
344.249 8.68896 344.314 8.70557 344.353 8.73975 cv
344.409 8.87451 li
344.353 9.00732 li
344.314 9.04248 344.249 9.06006 344.155 9.06006 cv
342.969 9.06006 li
342.876 9.06006 342.812 9.04248 342.772 9.00732 cv
342.715 8.87451 li
342.772 8.73975 li
342.812 8.70557 342.876 8.68896 342.969 8.68896 cv
343.376 8.68896 li
343.376 6.41357 li
343.376 6.14551 343.279 5.92188 343.086 5.74219 cv
342.893 5.5625 342.623 5.47266 342.276 5.47266 cv
342.005 5.47266 341.773 5.53906 341.581 5.67139 cv
341.442 5.76611 341.213 5.98828 340.894 6.33887 cv
340.894 8.68896 li
341.302 8.68896 li
341.393 8.68896 341.457 8.70557 341.496 8.73975 cv
341.556 8.87451 li
341.496 9.00732 li
341.457 9.04248 341.393 9.06006 341.302 9.06006 cv
340.114 9.06006 li
339.92 9.00732 li
339.861 8.87451 li
339.92 8.73975 li
340.114 8.68896 li
340.522 8.68896 li
340.522 3.87842 li
340.024 3.87842 li
339.934 3.87842 339.868 3.86084 339.829 3.82666 cv
339.771 3.69238 li
339.829 3.56006 li
339.868 3.52441 339.934 3.50684 340.024 3.50684 cv
340.894 3.50684 li
cp
f
354.217 5.98926 mo
350.165 5.98926 li
349.975 5.93701 li
349.917 5.80127 li
349.975 5.67041 li
350.165 5.61768 li
354.217 5.61768 li
354.407 5.67041 li
354.465 5.80566 li
354.407 5.93701 li
354.217 5.98926 li
cp
354.217 7.3208 mo
350.165 7.3208 li
349.975 7.27002 li
349.917 7.13525 li
349.975 7.00049 li
350.165 6.94922 li
354.217 6.94922 li
354.407 7.00049 li
354.465 7.13525 li
354.407 7.27002 li
354.217 7.3208 li
cp
f
363.025 6.04736 mo
363.367 6.19873 363.629 6.40723 363.808 6.67334 cv
363.987 6.93896 364.077 7.21582 364.077 7.50391 cv
364.077 7.94727 363.896 8.33887 363.535 8.67822 cv
363.175 9.01758 362.723 9.18701 362.181 9.18701 cv
361.862 9.18701 361.532 9.11963 361.19 8.98486 cv
360.849 8.84961 360.609 8.71143 360.474 8.5708 cv
360.408 8.4209 li
360.458 8.29785 li
360.578 8.24463 li
360.737 8.31055 li
361.194 8.64746 361.678 8.81592 362.188 8.81592 cv
362.618 8.81592 362.979 8.68164 363.27 8.41309 cv
363.561 8.14453 363.705 7.84619 363.705 7.51758 cv
363.705 7.29736 363.634 7.08154 363.491 6.87061 cv
363.349 6.65918 363.143 6.49268 362.875 6.37109 cv
362.606 6.24951 362.335 6.18848 362.061 6.18848 cv
361.87 6.13721 li
361.812 6.00049 li
361.867 5.86621 li
362.034 5.8125 li
362.353 5.81689 li
362.688 5.81689 362.963 5.71533 363.18 5.51172 cv
363.397 5.30811 363.506 5.07227 363.506 4.8042 cv
363.506 4.52686 363.393 4.28223 363.165 4.06982 cv
362.938 3.85742 362.641 3.75146 362.273 3.75146 cv
362.017 3.75146 361.78 3.7959 361.564 3.88428 cv
361.349 3.97314 361.177 4.09424 361.047 4.24805 cv
360.938 4.35645 li
360.852 4.37646 li
360.724 4.32568 li
360.671 4.20361 li
360.671 4.08545 360.799 3.93652 361.056 3.75635 cv
361.417 3.50537 361.822 3.37988 362.271 3.37988 cv
362.74 3.37988 363.126 3.521 363.427 3.80273 cv
363.728 4.08447 363.878 4.42041 363.878 4.81006 cv
363.878 5.05811 363.806 5.29248 363.661 5.51416 cv
363.518 5.73535 363.306 5.91309 363.025 6.04736 cv
cp
f
gsave
0 0 mo
395.999 0 li
395.999 139.934 li
0 139.934 li
0 0 li
clp
307.217 7.11609 mo
316.029 7.11609 li
316.029 6.10949 li
307.217 6.10949 li
0 0 0 .5 cmyk
f
302.045 6.61279 mo
307.722 4.54736 li
307.722 8.67822 li
302.045 6.61279 li
cp
f
302.045 6.61279 mo
302.088 6.73103 li
307.596 4.72704 li
307.596 8.49854 li
302.088 6.49455 li
302.045 6.61279 li
302.088 6.73103 li
302.045 6.61279 li
302.002 6.73103 li
307.848 8.85792 li
307.848 4.36766 li
301.677 6.6128 li
302.002 6.73103 li
302.045 6.61279 li
cp
f
367.236 56.6417 mo
367.688 66.3616 li
368.693 66.3148 li
368.241 56.595 li
0 0 0 .499 cmyk
f
367.499 51.4517 mo
369.826 57.0249 li
365.699 57.2173 li
367.499 51.4517 li
cp
f
367.499 51.4517 mo
367.383 51.5001 li
369.641 56.9076 li
365.873 57.0832 li
367.619 51.4892 li
367.499 51.4517 li
367.383 51.5001 li
367.499 51.4517 li
367.379 51.4142 li
365.526 57.3513 li
370.012 57.1423 li
367.482 51.0842 li
367.379 51.4142 li
367.499 51.4517 li
cp
f
grestore
gsave
0 139.934 mo
110.726 139.934 li
110.726 17.1284 li
0 17.1284 li
0 139.934 li
clp
gsave
110.726 139.934 mo
0 139.934 li
0 17.1284 li
110.726 17.1284 li
110.726 139.934 li
clp
0 17.1284 mo
110.726 17.1284 li
110.726 139.934 li
0 139.934 li
cp
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 139.934 ]ct
[111.733 0 0 123.812 -.5033 -.503334 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 222 
/H 246 
/M[222 0 0 -246 0 246 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNdj
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNdj
_uKiWhAk\Y!Z9c2hZ*`Y(u?+m!!4(q)P[;n!!3=""m5je"&B$U!!36u"6TXb"]#+%L&_8pru^D(!ZM(W
h>dTqru1&#!Z_4[iW,bS!'0-@!'0uXhuEa;jT#9@_#VCR!NOW3!!10Kh#IKV[)qJ2!Re$B!9=+\/k+q'
!Bi6o!!+i=k5YQP0*$\+!m1HBkPtY`gY;c0f`1+7!WUC%!2TYr"s`:2!>Z(@!9!nY$5hq+!?qca!6"p>
#iADA!!4n4&_m?f&Do8-!!5mP#bV1Z!!31'&*X&q#?V)`!!34(#jD<l%Ti`3!/:IU#ldp*l2UlDrt=)e
!YPGkkl:cbrs7K^V#UKgk5YKTq>fIS!))JT!)($+`;fs]hZ<!B!S3gq!!/VAkl:bAFe/Tp!!+!?kl:`T
.G=b&-qNS&!E^9=!/:IUK`;&QlMptc\Cpo`\,Y[m!WRo1!2TYq9BcEW.0KAGiW&u].d6p59=t8D!!2&5
lMpuUhZqj8!!WJ]8a??WK]&@#jT#<[+mT+0$s3Sb!!31'&*j2r+B84<`W3gT!WSVS!!5pq#MfCZ!!3B)
;<n2_RK&o[i;`jDkl:]VfDknEkl:cP!!%TN!^5EOli7(EJ_0r'JDfbo!Y+$QhZ0AN!X`$2li7&a*r>ro
!!+->li7(g=:2eC_>jX)rt+Ms!WSD=!<)s!P5jkK!Y,0#T)dgM!))VX!'o*8!(#oN!)*7jJcGhn\a9@u
A)@=>!!32YB'fR!\B<V-U&Y3X2!k8D'j183h>dRY($tu%2*\bS_>jW:iU$UHDZ9ak!!E9%!WR0,!!2!W
SH.XL!>l73!!#[C!!#[Y!!*KGquD?L!#bmq/FNQ?!T.M?!!6Zf!Ug!i/)M?%!2BMq"]u#t!!-1:p]01O
!>S`)!!3@,"M=`P!!4/?0^euC!WR/l!!E9%DZ9b+!!4kS*h35i!!#[Z!!#[A!!#[Z!!#[g!.t7OScII4
!!.W.e,TO-JaWR>fV$puUAt<D9()`\*`Mb4hZ*[T*q'(08L_4N_Z0_Ks6fpgP5j)5!rr?$Pj\SQs1Oj$
irB)^/a`T=6.>l75jeUQ/-G\J`W3aR!X@OenGiUphauN%qZ$[ghZrZO!a4CbScIXJ!WcC9nGiUk=:`m]
!Y&65nGiV&=98@#JcGoR!!WC8nGiUps&%8G!`8n%nGiW#rrq3YT)\jamf3>\p]0%K!))b\!)'s)^An=I
hZNEL!M%co!;c`set)@3!Wq7mS,hFH!Ynf<nc/\=8C@J=81F'/!E^*6!.k1R!!%$=!qH<l\,XkV!WT\#
!!36%FP?ef!!#[^!!*0OpAitK!@\-@!!#['!5AL7h37F1!YF6Ef)Y^K!\rREo)JfSh3n?$!!,h@o)Jgn
=:!=T!XDg0o)Je<:\b!B!!<3$s/bel!YPGkdJs>,rt=o'!NZ7R!2';m2?NFL!))tbg].=Inc/[l34T%)
!!5%8'_DA+[)phuqu?c=[IaG#']1g:!8mhY$!7<%!!+i<ci=)01\:YK"'>j(!.k1Q!':,qoDepGs3L`H
s4d/G!Z(eufDqQE!))n`!=BV7!8RVU((9^6!)'d$^]4DN_t=!2+Q"<k!;um!+Q"=7!!0pQQN5qD!B<.5
!!3=+"jd5N"]ts$!!,&>p&N)4]Dr!&p[nLf,6&k>!;QTr,6&k[!!2`bRfM4D!>-";!!#[;!!#[a!!*ZE
q>c*Iqu?d2h_t0.!Q_[o!!0IKp&G.Ph\=cESH&]m=:"U#!Bi74!8.>Q1-P=2!XMm1\cBDD!YbSrp&G-n
gXZB#!!1gRp&G.Vrt_%'g].=Io`,".$dJ_Q$5W:7!)*(eJcP]K!Kl75!!4n4&^C@X&Do8;!!1o=fDqHB
!@:M8!!3C-"8)ZJ!!34(#kn<":F<RO]`8)4s7ZKp2ZFE?!;ZZs&cXfa!!3,#QiPqB!<P7S!!#[9!!#[c
!!,%\pAfdFr;Zm#heDic!S3gc!!/VAp](A/hZDC0SH&[m(AIk181F-1g&M.%8GE/c'j.mE^&S39s)n):
!WT[Y!;ZZr\,Z4'!d+GDQN5hA!)*%d!@\,p!!*0OpAb1do`0RDr;Zn%hZioW!_D2RbQ%\Khb!YE!X@Ob
eGu0@!YJN8q>^R+=9A$ngAh9U=:b6.!WcC8[/do@!b;66q>^Rnrs-sPqZ$[%s&&Um!X8U6PlTV?!)*(e
!)(H7!)*(e!))n``W3OL!S=%A!!2#/eH#:C!J',)!!/bFQiPe>!D"^:!!,t=aoDG`;u-Ip.7s76JcPTH
!WTn1!!3+aaoDI*s7u]r^&Q[aRK*@<"Sr)u5k>!,!!#=]!!*0Q[fEu>!\<.Jqu?e/hZ;4,pAb6qhdlWb
!Z^)JQN5_>!X;a0qu?a3=NCIC=;:Z5!X)U0p&K[Eq>^RNruV(<!c\/?aoDJDs)@l9!Zq@qec;-=!)*.g
!))k_f)PeDq>^Lg[/dc<!Og2M!!32YAC:JP!!6]g!W<!!b.*]:g&M.05PtK^=;8gV!>JZ6!!,;AoDjIC
q>^QPs8;p!!WR,[!!7->!W<!!s52<+RfEHs)Z0R89CMr5!!#[i!!*rGZiI]<!Y+$QrVutLi6VJu!!2#/
rW!!ch[PeMgAh9V=:5$-!?P1Z!!,t=rW!!,=9A'oJcPZJ!Y,0#rVut^s2G$>s-3K_!_E>#df>j;!)*4i
!($&RfDkn:qu?^iZ2j=n!ZKo8ci=9'huE`]hal&np](LhhZj,]i.TGW!ZKo6e,TOR:BgFlgAhF#;ucn!
=:N7M"q=Z9!!#t@nGqJI!X2@'l2^,M!Z_4^ci=9<rr<$'s%q/EoDf(lrs&N(s-_46!Z_4[df9A.q#JtG
!(6_c!)(61!)*:k!(6AYgAh46dJs<Je(Ofq!!M2%!1_ZZ!!LlD!-R2K!;lftd]:dr!A6ge!!HCB!%:D.
!7UuO81=NW=O-sJ75*j)lMpt-s3CZJs+UN_s3Ui=!!N>3!/CO"!!3,DdJs:P,P_>k!!Gpp!!=^h!!F_Q
!!#[`!8RVU+pZNr!XR[Yg&UjI"A@Vdh_N+M">SdIhbDQ"rW!!oh[%X1!WcC6ci=1Z=9DY2n,Uu=":&$2
=:W[X!Y/<5k5aiK!XSg,ci=2JrtbVnciE_="?-8os&IDG!`f7+d/X/>p]/nG!_WMd_>jX1!))h^h>dOK
ci=,hhZ;F2pAb9Ch9!M6!m03Fd/X7K!8hqG!!+!?cN"#8:-J"FeGoY69L[8-!E^9%!:0[eK`;)"!<3#D
!;-?ks3CZGs+\i"!)*(efDkss2AX.0!Z!L7n,VAH!)(T;!TAdd!;HNq2W$F0!!5(92UDF)K](,U!E1/g
!!3F.#jhWC!!3F.#g`PP+B7A$li7(dRa;$94T@Og!;6Bo4T@Oj!!/Mfc2[i1pAihG!)(*-!))_[i;`jF
k5a]G!^5EOci=('ciES9!8l-'!Y+$Qc2[nQ=9AF$e,TJN^]4@:nc7PI!WlI2c2[o5rt*udoDemk^]4B7
dJsCM!"Js!bl@`:cN!r<mf:c9!)(W<!))DRkPtY*\^1<Vhp2;n!!(p'!!0UPbQ%Z-2#I@(!!$-:!!$-k
!8mhX2*]:b!WV-6!;-<ls1eU7s3UfJ!8mh#!!*oFci=&=mJt]9!)(Z=!=Tk,!9jIb)W**n!!(p%!:p0j
hpDE*/)M>j!!3=+#Q+SQ!!$-:!!$-j!9*t[#$;#P!!4/?0\c[%!!*&7!!*&H!!"\RruT>`!)(Z=!))\Z
e,TJAci=&=iW/3C!M7ul!!(p$!;$6khpDE)fV$@e!@^Y<!7q2N=MOn:=RQ7M!!,Y?aoDIRs4[PJ!!*&7
!!*&H!!3,5aoDGE/^XOu9C)Z/!!#[>!!+VQi;i-C!X@OedJs:)bQ.;9!8l3)!a4CbaoDJD=;(K2fDknR
^]4@:mJu>K!YJN8jT+EC!X8U:dJs:IciES9!<:II!b;66aT)<6rW(FJ!)(*-!))k_huEaMa8c9RhZMd:
oDemK^]4Aldf9@L!T.S3!!3m;!Rh#K=RQ7<!!$-L!!-1:irJ3A!ce5Adf9CJcN*M9!<:LJ!WrCD`rH*4
rW(IK!)(*-!))h^iW&sO`W-%qPMZB5!!(ol!!(p*!!/8=`W-$7-.;ho=RH1<!!$-M!!+EBi;i!?!WT7M
!!*&E!:p0js3grKX8g0>!B(#Y!7h,M9>CN-9CMrB!!*-\`W-&th\=rJp&G*M^]4Ale,TRbh_kJT!!3I/
"4R;N=R?+<!!$-N!!37)#iG^G!!54](=W<as31Q9!!*&K!!3r94N.:#9DnkB!!#[-!!#[\!9F1\9>gf2
^r,"/pAb3N^]4Ale,TNc_YsPU!!,&?e,TJNli>Q9!*I_N!B<*r!9X=_nb:N5!<:7Co`,!le,TOAou$h2
&JP*CfDknE^]4@-mJuDM!>,t(!94%\'&PUt!!(p'!:^$hhph].2W#4e!!*.'!!q*T!*I#:!*Jdlj8]5e
=9HJA!YbSriW/TN!<9h7!<:RL!^-Ju_Z0[0e,TJAmf:c9!)(fA!))5MirB+BhUMT+hp2;n!!(p,!!1o=
_>jT_:=T=E=MOn:=RcCQ!!,kB_>jV9s5<tN!!*&7!!*&L!!E8%!!'q;!<P72!!#[[!7LoJ9@X"C3!.t;
j8]5_heCXA!8l'%o)JdJec5bbhZCUo!E^,g!!$-:!!$-j!9X=_'j/9P!WrCEi;iQO!<9h7!<:UM!d+GD
rW'k:!)(iB!))\Ze,TJAeGoSBh#QL9!a4Cbf)Pg.blIA9!8lB.!X@Ob^]4EJ=97"R!*I#:!*J[ikl:bc
=:r=K!b;66i;iTP!<9h7!<:XN!X8U6quFY8!)(lC!))YYeGoSBec5\CgAp:7!S=$s!!(p#!;-<lhq%i/
T\-sY!_=d@fDknR^]4@:mJuMP!@^Ut!8mhXs1[(b!<:CGnGiRhf)Pibs1\O8!%J-'!!#[-!!#[_!9O7^
""_.d!\<.JjT+oQ!8kQl!8lE/!Z^)JrW'b7!X;a0fDknRmf:c9!*IkR!X)U0h>lL7!\jWqfDkpOcN*M9
!<:[O!Zq@q^&S069@j.D9>CN-9CW#F!!#[)!!0OOj8eiQ!8kQl!8lE/!QqqM!5SX91I'Ll!*JXhdf9AM
fDkq:2;A2j!!1pUfDkpOc2dG9!<:[O!WV&i!!*HGfDknE^]4@-n,V\Q!>u<Y!!3Ve60&%>!!(ol!!(p0
!!5ID%Jp.B!!34($J>CZ=R?+<!!$-S!!3L0!o!_7!!3W08D*tCs31Q9!!*&P!!5^k%D)T?9@s4E9>CN-
9CDlG!!#['!!.c2irJfR!8kQl!8lH0!T8Y,!5\^:+B7"o!*JRfeGoSOf`2%P+P?bS!!/Mff`2$PbQ.;9
!<:^P!WSRu!!#C>!!#[-!!#[[!:0[c6eh[t!!1u"g&M-1ciES9!8lK1!Hm;4!;ulu=;oln!*I#:!*Jdl
kl:`&=L\>3s+]\:oDemk^]4B7g&M/.s8)f1!!#[F!!#[\!7CiI9A':F9A9I'!!5gN#ho=Zhp2;n!!(p2
!!3G`9tLE)!!3[5!S[SS=MOn:=RcCW!!31'%_)K?<<!6e!;-<ls1eU7s4[MT#ldp$!58F59A0@G9C;f/
!!#[G!!#[F!8[\Vd_+<7!8l'%o)JdJgAh8qd^]AW!!,MIgAh4U^]4@:n,VeT!Bil[!!3,`joG)T!<9h7
!<:dRs8Vio^An9Y&).'a9C2`/!!#[H!!*iZfDtdKj50ma$f(d_hou/n!!(p4!!*MKj598)k?.[b!CHqE
!!$-:!!$-i!:Kmg!^,LFmJu8H!"7ripAb3n^]4B7h#IE`o`+C[mJu9?!$Btr!))YYeGoSBg].<hj%JtD
hZ*ctcej<ThZ*Z6bQ.;9!8lZ6"9F25c7$+$"TSN+6<G>d!!$-:!!$-h!:^$k+BUr6g&Tk-"<@IAPl]bB
!<:CGnGiRhhZ*c[RK*:<\cDR,!?Fhh!!#[-!!#[_!:0[d9-(8;"%(u(;saSW!!(ol!!(p7!!?3Xi'I);
\c;g?;cjUh!!$-i!7CiI=Ps/]&Qhs=f)XM)"%iOm?/P\_s3C]9!!*&W!!?R-s%'U!q#CF]9A]^L9>CN-
9CW#N!!,_YXT/HAhq'LK!;-<lhnT3lhr4V<0A,0"oDlE%!uP-2#3#U_=RH1<!!$-\!!<Ku=;fTgf`2,'
s8Ok6!!*&E!:p0js5F"\2#mT'ZiKk$!D=p$!!#[-!!#[]!:g*j/5)uC"9tIT]b9c6p&G*M^]4Alj8];q
^>GIcnc63#"9BrR2?Mq>!*JUge,TJNj8];a2cqL0dK%r#"9lC:l4`4Y!<::DoDemkj8];rm/OR!Z2jY"
!Wu(*irB'P^]4@-mf<"\!Y7p+VZ6i9`8?j`n,W1_!8kQl!8lo="9b%J_\_bA\,ZU63`mck!!$-f!7_&L
=QKMb-WiD4cN)St"<%+:YQX(g!<:7Co`,!ljo>MeYlFG8Y5n:s!Y\3.jT#9R^]4@-mK!"^!Wl".dK%\q
"#J]hB]f?qhp;An!!(p>!!?olgG?)7nc/as9NW%m!!$-:!!$-l!;6Bp'j+-7U&Y9Ts8R35!;$6ks1eU7
s5s@aFT;A#n,T`o!AR70!!#[\!7CiI9BH3T9/4`md/X8RhqpQ\!!(p&!:g*ihrt+C4Q#%"XoRtl!tn^4
$0_Ei=MOn:=RcCe!!<R)=;%2*")%Z66M1?O!!*&7!!*&`!!>Ugs((KsYlFet46QYE9C;f/!!#[U!!,/S
bQ-#j"9OM=ar]jK!8l'%o)JdJlMq&/b28*YX8q_i"!^o4"R?$f=MOn:=RZ=g!!<?g=<j:8"9P=truh"8
p&G*m^]4B7lMq&1s8SeplN"0i!Wbq3l2UfWm/YW9!))SW!Z=W3aoKcg":qotV?lPh!8l$$oDemKm/R7p
VVeclW;uDf"9LA]/HP5=!*I#:!*J[i"onW(/Qae1QiI7#g],4upAjpf!<9h7!<;Ed":3!HgCWQKYQ+_4
9*OY^!))YYeGoSBli7(j9+/c?cN"%pe),K>!!(p#!;-<lhsLIHHJd1!V?$&b!sV1r*:<e,=MOn:=RH.k
**>W6aoKTb""XEOMs^QFs3Lc9!!*&e!!A/Zs!t)Ll2Ui09C2]Z9>CN-9C`)\!!,_;OT5JThqq0,!;$6k
hnT3lhs^UJ:#Fi"k5_L^!tSF6%e'Gu=RQ7<!!$-j!!<^4<Y*4NaoDN@s8Q*g!!*&F!:g*is6p!j<WE(r
VZ>r]!D#fN!!#[-!!#[^!!<3$8P"g@"*reR./j5>!!(ol!!(pI!!=Y!hg+8_W;m#>=@NJb!!$-h!7LoJ
=RlFo"\)T5_uRmZ",d-Y/Fic@s3:W9!!*&i!!=ePs,*TPkPtWV-1Ls89>CN-9CVu^,lgSq!!W\)hmO$q
!;6BmhnT3lht-mO&%:Al#iYi`!!E?S=>L$N!!$-g!7UuK=S)Rr!]*q0!Q"iY!!EPFs4n7Y!!*&D!;$6k
s7?9o&DdB)#bh=_!!3<s$hF>u9>CN-9Ci,c$VLX'L]@Suakr*[!;?HnhnT3lht@$Q!fc*Z*8^ap!!<?f
==!P>!*JRfeGoSOo`,(>=?Zo'!6>-C*rl8:!qlTos3(K9!!*&m!!E@us8O15!9X=`(eXo&!!#[-!!#[b
!!30o)#XHS!5\^<3o8b$pAb3NciES9!8mMN"'sg@3hZQ5!!<R'=;1E/!*I#:!*Jsq";=m5$35\Y!'gVc
s(_9.!<9h7!<;cn").`75i;X:!!,&Pp&G(cmf:c9!)*"c!D>Gf!5SX;B&D?#q#CEPcN*M9!8mSP"#\ij
AtB"]!!<s<9F:Lp!*I#:!*K$s!sq\((&\,a!!@6@s#TrU!<9h7!<;ip"$6J^ESUVg!!,_Kp](:emJt]9
!)*(e!AdB]!5SX<"-_W])#F:5hp)5n!!(pR!!F.Whj";6!9!n\!@:i/"8`&u=MOn:=Si($"$0O2!W)kK
!!EA)s8<l5!!*&7!!*&r!!F5;s/uLY!20Ao!_X4'!!#[Z!7UuK9DSVi'2&D<!5JR;&\R"o#5nN%hou/n
!!(pT!!ELthn9Yj!8mh["#j=2!W;uu=MOn:=T&4&!@_,/!r)bI!!N?8kl8=#r;Zit^]4B7r;Zs)])V%/
fDqQE!Y7p+qu?^ili>Q9!)*4i!Wu(*[fF/C""`']EW,q<hol)n!!(pU!!@/sf.N?hhZ*``86?c/!!$-:
!!$.#!!='?8-\_e`W3UN"#0cTJGoNKs3Lc9!!*&u!!@]Ms"^#Cg&M.'9Dnhj9>CN-9Dnhk9.K]:JcPTH
"]F7970)5\!!V6[6fHp$f)V6>"VFj9$ijDu!7CiN=9&b.=:hqA\c;n<s8Pdns3C]9!!WB&9)nosQN5\=
"A;)^!)(*-"A8^p5tgkNJcPQG"+f@UhnT3php:23!S%1<!!=9E6<NXUdf9JP6<G>:!4`(0PlC^.!:p3i
rrJAcPlTG:!_XS-^]4F/*D>r'JcPQG!t*$)0>[\k)W/49dK#[8!s(Gb#jq]C!!<C,2?L/a\Gu^=rVn_"
!;-<o*<5:3OoX,7!>A,A!!,_&n,S%?pAb6/eA;1ddE^&<QiI.H7dU3,!!,JRY5l'4!U]p3!;6Ems,R04
!!*WW_>jT[*:<gH!42_-#N&8(!:p0l8Dac<!7UuM!a#rN!!3U3!V-5B!;$6m#QIfB!!6!s$ISp=!!#[]
!7LoJ9<eK(!!.9#d/`e=!T/6d!7UuL)d(#Y!EL0/!.k4C!!.lT_uKi<NR.Zi!!#[]!7_&L8?W$#!!2#,
d/`k?!IEXa!7UuL<?9'Z!?>2/!.k4C!!3+^`W-$ts3:V0!!#LW!7h,M8Zi'$!!5UH$detL!!3G`99'#&
!!3R2!lt?C!E]m"!.k4D!!5mp$ci;L#ldlK!0mNa9CDl5!!#Zn!4;e-c`YUpq#CGqdYn1V!!,D?a8c5n
7-aim!3lM)s3T6qo`,$7s,[6.!!+,Ha8c5F,4>M`!:^$j,2XWf!!4>$--lRS!!3=+"S;]G!!3:*#-S$4
!!4JH-e&.j!!4GG.$"AU!!#[5!!#[Z!.k4@!!01JaoDIfYg!02!!+]>o)RDC!CANC!3uS*cMu>np](?p
du=@U!!*<HaoDG_$1%YD!:g*k$K"=s!!5LE$d8U7!!31'%.aJQ!!3O1!iuC.!!3N-:=B4>!!5al$]G)6
!!#[7!!#[W!.k4A!!.Q,bQ%\%K$"(W!!+*?nc7DE!E:/@!4)Y+OoNi0qZ$ZsQ&5Ri!!#L4!!#CM!6,#A
!!1u#f)YRG!H[.X!6tQF=<#Nc!?##+!.k4=!!3+Tc2[lts3(J(!!#[b!8%8O9<8,s!!5gN#hK(Q!!3D_
:Q,;"!!3[5!RLfJ!a$$"!.k4>!!6."#g`PQ#QIlK!07*[9D&;=!!#Zl!3ZA'e#1asqZ$YmeVX@Q!!,M>
ci=(s7d0o)!:Kmgs2WId!Q4rZ!0@0],6d`?g].?Y-E.!L!!4M)*nC>i!!4.t.#@rN!!3=+"O[8O"]trl
!.k4?!!4YM+OU5k+9*n5!0@0\9Cr5?!!#Zi!3cG([*7&#rVuuA[YFk0!!+i?dJs;41Ze\W!3?/$f`0V)
q>^Qrh2;9W!!*EGdJs:c$gI_D!:0[e%,XA#!!5:?&'=m3!!34($Ma\W!!3L0!ic7&!!3T/8D+"@!!5Of
&;gJ3!!#[?!!#[U!.k4;!!.i4e,TO,Lr]RU!!+6Ap]0+M!Dt&>!3H5%RfD"?r;ZluSqmBj!!#=7!!#4F
!.k4<!!32YDq4miD;PB7!0$sZ=;^f5hZ*Zn=Jc)$!!33$Ib4W'!!%BG!J^["!!#[A!!#[R!.k4<!!6'U
#1rnW#2`M$!0.$\&Qf)/!9!nZ!E]r1!3Q;'>Q4o[!!3?(@>+^+!!#[C!!#[P!6,#<!!1ZFg]79Q!M7r"
!6G3A81W<m!@^V'!.k48!!3,7fDkr`s2P+s!!+MOqZ,IQ!<XmN!3-##/)M?%!!E9%(uHs$!6P9C#$;#^
!!37)#3Go;!9sOc0`N3J!!4)=1<'<O!!#[g!8dbV9;MWg!!0XPgAh9T`k7!*aoDH!4k]l:4#c4#JcP'9
!TF(4!!3,`_uP\q!=Tb?!9!nY'G$u>WrN23h`BNm!&t#:&VL/-!!34($JYU_$!7;i!.k4:!!3`35hl>@
4oZ/4!/ggW9DJSI!!#Zd!36)#NSiLk!T&oi!6Y?C,Z*7r!DXp!!6,#:!!/kph>dWX!<9!P!65'?!B]':
!B:,A!.k46!!35ZC#/gkB&<[/!/COT=;Ll9i;`ln=JPqq!!36%Fl!*"EW6)o!65'>9ABLI9B-#(!9X=`
=l0GA!!3;\?,HYu!!3a7!WE)Y!!-18UB%4m!b;66huEc\rr?_b!65'>9ATXK9Aol&!9X=_fppt#!LMQW
!/LUU8gsW<j8]3/9VDHb!!3,/huEh`rr@WNa8c5n"5j.[!\rU5JcP!7!\`FIiW'#qh_MtIM#[S_=9SR&
jo>Gb=9tQ"W;luVru'er";h(s!!%TNa8c35huEaMh>kOqU]:G0`8Uas_>qB(!5nj<2`fpu!BE.!!.k43
!!2H`iW'#Pn\P9[!!3ZE!94%[&eUi<V#UQ0h_sNq!]/^JJcNai!WlI0j8]5d=9IL^JcOm4!YbSrj8]6@
rt`ENK`D0I!!)'[!)&sbV#UO[guJG;gQhg>JcNai!@:J$!!,eAhZ/6.jT#=_s5X.\s006<L&_;W1]RO<
!!+kWT)b_g!X%=hjo>HjhZNiXJcNdj!WcC;jo>Gr=977YJcOp5!WrC=jo>HurrTn7L&_3HrW)*]!)&j_
V>p[,hZN'B!X%=iquD<K`W-&S=97Uc!WcC<g]5=oU&Y73rrVBa!s8L?!.k3e!!#[S!!#[L!.k40!!1l=
kPtXHh7irA!!,e?kPtW1:7hN\!!3,$kPtXas8E"M!5\^:1]lk@!<P19!.k41!!5%8'']Gu&`5L\!.t7O
#m"-0l2Ukf=9tJuUAt?VrtFYt!YYMqr;_EL_>jR/kPtTUg]2p+iW'"s^Zke"]u@VaK)bm4!''6D!B*!/
!2BMpp[.5G!UBX\!.k3g!!*`El2Uhp'AEM=!94%\(>gk5!!4e1(V9[#!!*1(!!hij!X;a0RfK5a!Z1kp
li7)Bru(Y5JcN[g!))SW!)(uF`W2V2!Lqd/!!1cDr;_EL^An9^9'cNY8h&QrJcO[.!Oi$p!!3,0]`<Wa
!rr<'0'iQ=/H_ODTE##rhcfFJ!a4CbquD<K^An::'(,`$&Qf(h!.k4/!!3<'AF9F!A,c_F!.k1P!!#[Y
!!#Z]!2';nC#9!]!!35ZCAIp^!5JR8(0Ku)!E^,k!.k4/!!7<C!q60k!rmJU!.k1P!!#[[!!#Z[!2';m
hi7+*!K5k1!.k3d!!,nAn,NJ6;:kl#!8mhXs.f&`!M]V(!.k1P!':5N!!**_QiNf[!]o3Mnc/_%h`UW5
JcNUe!X`$2nc/^m=:*RZ`W2P0!^Qbtnc/_&s$HS_JcNF`!))e]!))#GJcOR+!Q_kC!!0UO\c@<^qu?a\
2=^_J2*RH/SH&]jj730NhuEKPJcNIa!>Z.8!!*KFf`6U(h#IKph^e=!!\<.J\H%3]r;Zm&=9eBt!X;a0
R/ifY!Z_4ooDeqHruUq8JcNIa!))k_!)(oDJcOU,!MS-;!!1ZF[fD![r;ZjJ8Ful_81U#,ScAf*s7?9l
s1e7-JcNLb!<anE!!+MOec::%h>dT]hc'4K!`In[[K(mZrW!!#=:k0+!YJN8Q2mNW!XA[1p&G.urs&,r
JcNLb!))qa!)(fA`W2G-!cQrsp](?rhf8DkJcN@^!>nr4!!-1>fDpL'g&M2'rrMlp!Wi=O\,_*\q#CCf
p&G(cQN3HS!T8_-!!.i4p&K[E\c;b0+nu$<+]HqlJcOL)!WSV`!!/Pg[K(mZq>^L]p&G(YQ2mBS!^Y]Q
q>^R*ha-o8JcNC_!X`$2q>^Qu=:3RYJcOO*!_E>#q>^R*s%'NtJcPWI!)*(e!)&OVRfEK5[/'b'[*8+A
JcNC_!C&@9!!+i?df=t"gAh9SgA1dMf`/8XJcPZJ!?)=A!!*EGP5q*Q!Zp5Hqu?dFh]D=gJcNF`!X)U0
qu?d%=9R%P`W2A+![.Lnqu?dJruh"8JcN7[!)*.g!)(iBJcOC&!N+BE!!1QH[/bdYpAb4G7f35e74a](
QiI0+s82its2Xa3JcN:\!<jeI!!+;Je,Y(#fDksXhbF(M!__DVZiG[Xp](?s=:Y<1!Y8B6PQ7*O!XJa*
rW!"!rs82rJcN:\!)*4i!)(`?JcOF'!I!B"!!1u#Z2fIVp](=6=T/:$=<!D'R/d8Cs8E!!s+g+EJcN:\
!)*:k!)(Z=JcOF'"Q4_/Ic.F1JcPQG"B?HB*EA1$R/dBiOT:ODmf7q>\GuV!rVupfcN(rbPlLqVh[n[7
o)O@B[/^=<=9;S5df=t"eGo_Irt59+ZN,RWoDeqc!)&ITPlLm3g<f?iJcN1Y!^]OId/\aueH#UKYlK@U
o`,%70HZDWQ2gtGh`1**JcN4Z!XVs8ciAXtec5b7s#mRdJcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/D
JcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07T
oDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(p
NW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXt
e,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/D
JcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07T
oDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(p
NW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXt
e,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW=Y2JcLB&
`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLK)J,~>

%%EndBinary
grestore
np
grestore
grestore
gsave
127.068 139.934 mo
237.794 139.934 li
237.794 17.1284 li
127.068 17.1284 li
127.068 139.934 li
clp
237.794 139.934 mo
127.068 139.934 li
127.068 17.1284 li
237.794 17.1284 li
237.794 139.934 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 139.934 ]ct
[111.733 0 0 123.812 126.565 -.503334 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 222 
/H 246 
/M[222 0 0 -246 0 246 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 222 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNdj
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcNdj
_uKiWhAk\Y!Z9c2hZ*`Y(u?+m!!4(q)P[;n!!3=""m5je"&B$U!!36u"6TXb"]#+%L&_8pru^D(!ZM(W
h>dTqru1&#!Z_4[iW,bS!'0-@!'0uXhuEa;jT#9@_#VCR!NOW3!!10Kh#IKV[)qJ2!Re$B!9=+\/k+q'
!Bi6o!!+i=k5YQP0*$\+!m1HBkPtY`gY;c0f`1+7!WUC%!2TYr"s`:2!>Z(@!9!nY$5hq+!?qca!6"p>
#iADA!!4n4&_m?f&Do8-!!5mP#bV1Z!!31'&*X&q#?V)`!!34(#jD<l%Ti`3!/:IU#ldp*l2UlDrt=)e
!YPGkkl:cbrs7K^V#UKgk5YKTq>fIS!))JT!)($+`;fs]hZ<!B!S3gq!!/VAkl:bAFe/Tp!!+!?kl:`T
.G=b&-qNS&!E^9=!/:IUK`;&QlMptc\Cpo`\,Y[m!WRo1!2TYq9BcEW.0KAGiW&u].d6p59=t8D!!2&5
lMpuUhZqj8!!WJ]8a??WK]&@#jT#<[+mT+0$s3Sb!!31'&*j2r+B84<`W3gT!WSVS!!5pq#MfCZ!!3B)
;<n2_RK&o[i;`jDkl:]VfDknEkl:cP!!%TN!^5EOli7(EJ_0r'JDfbo!Y+$QhZ0AN!X`$2li7&a*r>ro
!!+->li7(g=:2eC_>jX)rt+Ms!WSD=!<)s!P5jkK!Y,0#T)dgM!))VX!'o*8!(#oN!)*7jJcGhn\a9@u
A)@=>!!32YB'fR!\B<V-U&Y3X2!k8D'j183h>dRY($tu%2*\bS_>jW:iU$UHDZ9ak!!E9%!WR0,!!2!W
SH.XL!>l73!!#[C!!#[Y!!*KGquD?L!#bmq/FNQ?!T.M?!!6Zf!Ug!i/)M?%!2BMq"]u#t!!-1:p]01O
!>S`)!!3@,"M=`P!!4/?0^euC!WR/l!!E9%DZ9b+!!4kS*h35i!!#[Z!!#[A!!#[Z!!#[g!.t7OScII4
!!.W.e,TO-JaWR>fV$puUAt<D9()`\*`Mb4hZ*[T*q'(08L_4N_Z0_Ks6fpgP5j)5!rr?$Pj\SQs1Oj$
irB)^/a`T=6.>l75jeUQ/-G\J`W3aR!X@OenGiUphauN%qZ$[ghZrZO!a4CbScIXJ!WcC9nGiUk=:`m]
!Y&65nGiV&=98@#JcGoR!!WC8nGiUps&%8G!`8n%nGiW#rrq3YT)\jamf3>\p]0%K!))b\!)'s)^An=I
hZNEL!M%co!;c`set)@3!Wq7mS,hFH!Ynf<nc/\=8C@J=81F'/!E^*6!.k1R!!%$=!qH<l\,XkV!WT\#
!!36%FP?ef!!#[^!!*0OpAitK!@\-@!!#['!5AL7h37F1!YF6Ef)Y^K!\rREo)JfSh3n?$!!,h@o)Jgn
=:!=T!XDg0o)Je<:\b!B!!<3$s/bel!YPGkdJs>,rt=o'!NZ7R!2';m2?NFL!))tbg].=Inc/[l34T%)
!!5%8'_DA+[)phuqu?c=[IaG#']1g:!8mhY$!7<%!!+i<ci=)01\:YK"'>j(!.k1Q!':,qoDepGs3L`H
s4d/G!Z(eufDqQE!))n`!=BV7!8RVU((9^6!)'d$^]4DN_t=!2+Q"<k!;um!+Q"=7!!0pQQN5qD!B<.5
!!3=+"jd5N"]ts$!!,&>p&N)4]Dr!&p[nLf,6&k>!;QTr,6&k[!!2`bRfM4D!>-";!!#[;!!#[a!!*ZE
q>c*Iqu?d2h_t0.!Q_[o!!0IKp&G.Ph\=cESH&]m=:"U#!Bi74!8.>Q1-P=2!XMm1\cBDD!YbSrp&G-n
gXZB#!!1gRp&G.Vrt_%'g].=Io`,".$dJ_Q$5W:7!)*(eJcP]K!Kl75!!4n4&^C@X&Do8;!!1o=fDqHB
!@:M8!!3C-"8)ZJ!!34(#kn<":F<RO]`8)4s7ZKp2ZFE?!;ZZs&cXfa!!3,#QiPqB!<P7S!!#[9!!#[c
!!,%\pAfdFr;Zm#heDic!S3gc!!/VAp](A/hZDC0SH&[m(AIk181F-1g&M.%8GE/c'j.mE^&S39s)n):
!WT[Y!;ZZr\,Z4'!d+GDQN5hA!)*%d!@\,p!!*0OpAb1do`0RDr;Zn%hZioW!_D2RbQ%\Khb!YE!X@Ob
eGu0@!YJN8q>^R+=9A$ngAh9U=:b6.!WcC8[/do@!b;66q>^Rnrs-sPqZ$[%s&&Um!X8U6PlTV?!)*(e
!)(H7!)*(e!))n``W3OL!S=%A!!2#/eH#:C!J',)!!/bFQiPe>!D"^:!!,t=aoDG`;u-Ip.7s76JcPTH
!WTn1!!3+aaoDI*s7u]r^&Q[aRK*@<"Sr)u5k>!,!!#=]!!*0Q[fEu>!\<.Jqu?e/hZ;4,pAb6qhdlWb
!Z^)JQN5_>!X;a0qu?a3=NCIC=;:Z5!X)U0p&K[Eq>^RNruV(<!c\/?aoDJDs)@l9!Zq@qec;-=!)*.g
!))k_f)PeDq>^Lg[/dc<!Og2M!!32YAC:JP!!6]g!W<!!b.*]:g&M.05PtK^=;8gV!>JZ6!!,;AoDjIC
q>^QPs8;p!!WR,[!!7->!W<!!s52<+RfEHs)Z0R89CMr5!!#[i!!*rGZiI]<!Y+$QrVutLi6VJu!!2#/
rW!!ch[PeMgAh9V=:5$-!?P1Z!!,t=rW!!,=9A'oJcPZJ!Y,0#rVut^s2G$>s-3K_!_E>#df>j;!)*4i
!($&RfDkn:qu?^iZ2j=n!ZKo8ci=9'huE`]hal&np](LhhZj,]i.TGW!ZKo6e,TOR:BgFlgAhF#;ucn!
=:N7M"q=Z9!!#t@nGqJI!X2@'l2^,M!Z_4^ci=9<rr<$'s%q/EoDf(lrs&N(s-_46!Z_4[df9A.q#JtG
!(6_c!)(61!)*:k!(6AYgAh46dJs<Je(Ofq!!M2%!1_ZZ!!LlD!-R2K!;lftd]:dr!A6ge!!HCB!%:D.
!7UuO81=NW=O-sJ75*j)lMpt-s3CZJs+UN_s3Ui=!!N>3!/CO"!!3,DdJs:P,P_>k!!Gpp!!=^h!!F_Q
!!#[`!8RVU+pZNr!XR[Yg&UjI"A@Vdh_N+M">SdIhbDQ"rW!!oh[%X1!WcC6ci=1Z=9DY2n,Uu=":&$2
=:W[X!Y/<5k5aiK!XSg,ci=2JrtbVnciE_="?-8os&IDG!`f7+d/X/>p]/nG!_WMd_>jX1!))h^h>dOK
ci=,hhZ;F2pAb9Ch9!M6!m03Fd/X7K!8hqG!!+!?cN"#8:-J"FeGoY69L[8-!E^9%!:0[eK`;)"!<3#D
!;-?ks3CZGs+\i"!)*(efDkss2AX.0!Z!L7n,VAH!)(T;!TAdd!;HNq2W$F0!!5(92UDF)K](,U!E1/g
!!3F.#jhWC!!3F.#g`PP+B7A$li7(dRa;$94T@Og!;6Bo4T@Oj!!/Mfc2[i1pAihG!)(*-!))_[i;`jF
k5a]G!^5EOci=('ciES9!8l-'!Y+$Qc2[nQ=9AF$e,TJN^]4@:nc7PI!WlI2c2[o5rt*udoDemk^]4B7
dJsCM!"Js!bl@`:cN!r<mf:c9!)(W<!))DRkPtY*\^1<Vhp2;n!!(p'!!0UPbQ%Z-2#I@(!!$-:!!$-k
!8mhX2*]:b!WV-6!;-<ls1eU7s3UfJ!8mh#!!*oFci=&=mJt]9!)(Z=!=Tk,!9jIb)W**n!!(p%!:p0j
hpDE*/)M>j!!3=+#Q+SQ!!$-:!!$-j!9*t[#$;#P!!4/?0\c[%!!*&7!!*&H!!"\RruT>`!)(Z=!))\Z
e,TJAci=&=iW/3C!M7ul!!(p$!;$6khpDE)fV$@e!@^Y<!7q2N=MOn:=RQ7M!!,Y?aoDIRs4[PJ!!*&7
!!*&H!!3,5aoDGE/^XOu9C)Z/!!#[>!!+VQi;i-C!X@OedJs:)bQ.;9!8l3)!a4CbaoDJD=;(K2fDknR
^]4@:mJu>K!YJN8jT+EC!X8U:dJs:IciES9!<:II!b;66aT)<6rW(FJ!)(*-!))k_huEaMa8c9RhZMd:
oDemK^]4Aldf9@L!T.S3!!3m;!Rh#K=RQ7<!!$-L!!-1:irJ3A!ce5Adf9CJcN*M9!<:LJ!WrCD`rH*4
rW(IK!)(*-!))h^iW&sO`W-%qPMZB5!!(ol!!(p*!!/8=`W-$7-.;ho=RH1<!!$-M!!+EBi;i!?!WT7M
!!*&E!:p0js3grKX8g0>!B(#Y!7h,M9>CN-9CMrB!!*-\`W-&th\=rJp&G*M^]4Ale,TRbh_kJT!!3I/
"4R;N=R?+<!!$-N!!37)#iG^G!!54](=W<as31Q9!!*&K!!3r94N.:#9DnkB!!#[-!!#[\!9F1\9>gf2
^r,"/pAb3N^]4Ale,TNc_YsPU!!,&?e,TJNli>Q9!*I_N!B<*r!9X=_nb:N5!<:7Co`,!le,TOAou$h2
&JP*CfDknE^]4@-mJuDM!>,t(!94%\'&PUt!!(p'!:^$hhph].2W#4e!!*.'!!q*T!*I#:!*Jdlj8]5e
=9HJA!YbSriW/TN!<9h7!<:RL!^-Ju_Z0[0e,TJAmf:c9!)(fA!))5MirB+BhUMT+hp2;n!!(p,!!1o=
_>jT_:=T=E=MOn:=RcCQ!!,kB_>jV9s5<tN!!*&7!!*&L!!E8%!!'q;!<P72!!#[[!7LoJ9@X"C3!.t;
j8]5_heCXA!8l'%o)JdJec5bbhZCUo!E^,g!!$-:!!$-j!9X=_'j/9P!WrCEi;iQO!<9h7!<:UM!d+GD
rW'k:!)(iB!))\Ze,TJAeGoSBh#QL9!a4Cbf)Pg.blIA9!8lB.!X@Ob^]4EJ=97"R!*I#:!*J[ikl:bc
=:r=K!b;66i;iTP!<9h7!<:XN!X8U6quFY8!)(lC!))YYeGoSBec5\CgAp:7!S=$s!!(p#!;-<lhq%i/
T\-sY!_=d@fDknR^]4@:mJuMP!@^Ut!8mhXs1[(b!<:CGnGiRhf)Pibs1\O8!%J-'!!#[-!!#[_!9O7^
""_.d!\<.JjT+oQ!8kQl!8lE/!Z^)JrW'b7!X;a0fDknRmf:c9!*IkR!X)U0h>lL7!\jWqfDkpOcN*M9
!<:[O!Zq@q^&S069@j.D9>CN-9CW#F!!#[)!!0OOj8eiQ!8kQl!8lE/!QqqM!5SX91I'Ll!*JXhdf9AM
fDkq:2;A2j!!1pUfDkpOc2dG9!<:[O!WV&i!!*HGfDknE^]4@-n,V\Q!>u<Y!!3Ve60&%>!!(ol!!(p0
!!5ID%Jp.B!!34($J>CZ=R?+<!!$-S!!3L0!o!_7!!3W08D*tCs31Q9!!*&P!!5^k%D)T?9@s4E9>CN-
9CDlG!!#['!!.c2irJfR!8kQl!8lH0!T8Y,!5\^:+B7"o!*JRfeGoSOf`2%P+P?bS!!/Mff`2$PbQ.;9
!<:^P!WSRu!!#C>!!#[-!!#[[!:0[c6eh[t!!1u"g&M-1ciES9!8lK1!Hm;4!;ulu=;oln!*I#:!*Jdl
kl:`&=L\>3s+]\:oDemk^]4B7g&M/.s8)f1!!#[F!!#[\!7CiI9A':F9A9I'!!5gN#ho=Zhp2;n!!(p2
!!3G`9tLE)!!3[5!S[SS=MOn:=RcCW!!31'%_)K?<<!6e!;-<ls1eU7s4[MT#ldp$!58F59A0@G9C;f/
!!#[G!!#[F!8[\Vd_+<7!8l'%o)JdJgAh8qd^]AW!!,MIgAh4U^]4@:n,VeT!Bil[!!3,`joG)T!<9h7
!<:dRs8Vio^An9Y&).'a9C2`/!!#[H!!*iZfDtdKj50ma$f(d_hou/n!!(p4!!*MKj598)k?.[b!CHqE
!!$-:!!$-i!:Kmg!^,LFmJu8H!"7ripAb3n^]4B7h#IE`o`+C[mJu9?!$Btr!))YYeGoSBg].<hj%JtD
hZ*ctcej<ThZ*Z6bQ.;9!8lZ6"9F25c7$+$"TSN+6<G>d!!$-:!!$-h!:^$k+BUr6g&Tk-"<@IAPl]bB
!<:CGnGiRhhZ*c[RK*:<\cDR,!?Fhh!!#[-!!#[_!:0[d9-(8;"%(u(;saSW!!(ol!!(p7!!?3Xi'I);
\c;g?;cjUh!!$-i!7CiI=Ps/]&Qhs=f)XM)"%iOm?/P\_s3C]9!!*&W!!?R-s%'U!q#CF]9A]^L9>CN-
9CW#N!!,_YXT/HAhq'LK!;-<lhnT3lhr4V<0A,0"oDlE%!uP-2#3#U_=RH1<!!$-\!!<Ku=;fTgf`2,'
s8Ok6!!*&E!:p0js5F"\2#mT'ZiKk$!D=p$!!#[-!!#[]!:g*j/5)uC"9tIT]b9c6p&G*M^]4Alj8];q
^>GIcnc63#"9BrR2?Mq>!*JUge,TJNj8];a2cqL0dK%r#"9lC:l4`4Y!<::DoDemkj8];rm/OR!Z2jY"
!Wu(*irB'P^]4@-mf<"\!Y7p+VZ6i9`8?j`n,W1_!8kQl!8lo="9b%J_\_bA\,ZU63`mck!!$-f!7_&L
=QKMb-WiD4cN)St"<%+:YQX(g!<:7Co`,!ljo>MeYlFG8Y5n:s!Y\3.jT#9R^]4@-mK!"^!Wl".dK%\q
"#J]hB]f?qhp;An!!(p>!!?olgG?)7nc/as9NW%m!!$-:!!$-l!;6Bp'j+-7U&Y9Ts8R35!;$6ks1eU7
s5s@aFT;A#n,T`o!AR70!!#[\!7CiI9BH3T9/4`md/X8RhqpQ\!!(p&!:g*ihrt+C4Q#%"XoRtl!tn^4
$0_Ei=MOn:=RcCe!!<R)=;%2*")%Z66M1?O!!*&7!!*&`!!>Ugs((KsYlFet46QYE9C;f/!!#[U!!,/S
bQ-#j"9OM=ar]jK!8l'%o)JdJlMq&/b28*YX8q_i"!^o4"R?$f=MOn:=RZ=g!!<?g=<j:8"9P=truh"8
p&G*m^]4B7lMq&1s8SeplN"0i!Wbq3l2UfWm/YW9!))SW!Z=W3aoKcg":qotV?lPh!8l$$oDemKm/R7p
VVeclW;uDf"9LA]/HP5=!*I#:!*J[i"onW(/Qae1QiI7#g],4upAjpf!<9h7!<;Ed":3!HgCWQKYQ+_4
9*OY^!))YYeGoSBli7(j9+/c?cN"%pe),K>!!(p#!;-<lhsLIHHJd1!V?$&b!sV1r*:<e,=MOn:=RH.k
**>W6aoKTb""XEOMs^QFs3Lc9!!*&e!!A/Zs!t)Ll2Ui09C2]Z9>CN-9C`)\!!,_;OT5JThqq0,!;$6k
hnT3lhs^UJ:#Fi"k5_L^!tSF6%e'Gu=RQ7<!!$-j!!<^4<Y*4NaoDN@s8Q*g!!*&F!:g*is6p!j<WE(r
VZ>r]!D#fN!!#[-!!#[^!!<3$8P"g@"*reR./j5>!!(ol!!(pI!!=Y!hg+8_W;m#>=@NJb!!$-h!7LoJ
=RlFo"\)T5_uRmZ",d-Y/Fic@s3:W9!!*&i!!=ePs,*TPkPtWV-1Ls89>CN-9CVu^,lgSq!!W\)hmO$q
!;6BmhnT3lht-mO&%:Al#iYi`!!E?S=>L$N!!$-g!7UuK=S)Rr!]*q0!Q"iY!!EPFs4n7Y!!*&D!;$6k
s7?9o&DdB)#bh=_!!3<s$hF>u9>CN-9Ci,c$VLX'L]@Suakr*[!;?HnhnT3lht@$Q!fc*Z*8^ap!!<?f
==!P>!*JRfeGoSOo`,(>=?Zo'!6>-C*rl8:!qlTos3(K9!!*&m!!E@us8O15!9X=`(eXo&!!#[-!!#[b
!!30o)#XHS!5\^<3o8b$pAb3NciES9!8mMN"'sg@3hZQ5!!<R'=;1E/!*I#:!*Jsq";=m5$35\Y!'gVc
s(_9.!<9h7!<;cn").`75i;X:!!,&Pp&G(cmf:c9!)*"c!D>Gf!5SX;B&D?#q#CEPcN*M9!8mSP"#\ij
AtB"]!!<s<9F:Lp!*I#:!*K$s!sq\((&\,a!!@6@s#TrU!<9h7!<;ip"$6J^ESUVg!!,_Kp](:emJt]9
!)*(e!AdB]!5SX<"-_W])#F:5hp)5n!!(pR!!F.Whj";6!9!n\!@:i/"8`&u=MOn:=Si($"$0O2!W)kK
!!EA)s8<l5!!*&7!!*&r!!F5;s/uLY!20Ao!_X4'!!#[Z!7UuK9DSVi'2&D<!5JR;&\R"o#5nN%hou/n
!!(pT!!ELthn9Yj!8mh["#j=2!W;uu=MOn:=T&4&!@_,/!r)bI!!N?8kl8=#r;Zit^]4B7r;Zs)])V%/
fDqQE!Y7p+qu?^ili>Q9!)*4i!Wu(*[fF/C""`']EW,q<hol)n!!(pU!!@/sf.N?hhZ*``86?c/!!$-:
!!$.#!!='?8-\_e`W3UN"#0cTJGoNKs3Lc9!!*&u!!@]Ms"^#Cg&M.'9Dnhj9>CN-9Dnhk9.K]:JcPTH
"]F7970)5\!!V6[6fHp$f)V6>"VFj9$ijDu!7CiN=9&b.=:hqA\c;n<s8Pdns3C]9!!WB&9)nosQN5\=
"A;)^!)(*-"A8^p5tgkNJcPQG"+f@UhnT3php:23!S%1<!!=9E6<NXUdf9JP6<G>:!4`(0PlC^.!:p3i
rrJAcPlTG:!_XS-^]4F/*D>r'JcPQG!t*$)0>[\k)W/49dK#[8!s(Gb#jq]C!!<C,2?L/a\Gu^=rVn_"
!;-<o*<5:3OoX,7!>A,A!!,_&n,S%?pAb6/eA;1ddE^&<QiI.H7dU3,!!,JRY5l'4!U]p3!;6Ems,R04
!!*WW_>jT[*:<gH!42_-#N&8(!:p0l8Dac<!7UuM!a#rN!!3U3!V-5B!;$6m#QIfB!!6!s$ISp=!!#[]
!7LoJ9<eK(!!.9#d/`e=!T/6d!7UuL)d(#Y!EL0/!.k4C!!.lT_uKi<NR.Zi!!#[]!7_&L8?W$#!!2#,
d/`k?!IEXa!7UuL<?9'Z!?>2/!.k4C!!3+^`W-$ts3:V0!!#LW!7h,M8Zi'$!!5UH$detL!!3G`99'#&
!!3R2!lt?C!E]m"!.k4D!!5mp$ci;L#ldlK!0mNa9CDl5!!#Zn!4;e-c`YUpq#CGqdYn1V!!,D?a8c5n
7-aim!3lM)s3T6qo`,$7s,[6.!!+,Ha8c5F,4>M`!:^$j,2XWf!!4>$--lRS!!3=+"S;]G!!3:*#-S$4
!!4JH-e&.j!!4GG.$"AU!!#[5!!#[Z!.k4@!!01JaoDIfYg!02!!+]>o)RDC!CANC!3uS*cMu>np](?p
du=@U!!*<HaoDG_$1%YD!:g*k$K"=s!!5LE$d8U7!!31'%.aJQ!!3O1!iuC.!!3N-:=B4>!!5al$]G)6
!!#[7!!#[W!.k4A!!.Q,bQ%\%K$"(W!!+*?nc7DE!E:/@!4)Y+OoNi0qZ$ZsQ&5Ri!!#L4!!#CM!6,#A
!!1u#f)YRG!H[.X!6tQF=<#Nc!?##+!.k4=!!3+Tc2[lts3(J(!!#[b!8%8O9<8,s!!5gN#hK(Q!!3D_
:Q,;"!!3[5!RLfJ!a$$"!.k4>!!6."#g`PQ#QIlK!07*[9D&;=!!#Zl!3ZA'e#1asqZ$YmeVX@Q!!,M>
ci=(s7d0o)!:Kmgs2WId!Q4rZ!0@0],6d`?g].?Y-E.!L!!4M)*nC>i!!4.t.#@rN!!3=+"O[8O"]trl
!.k4?!!4YM+OU5k+9*n5!0@0\9Cr5?!!#Zi!3cG([*7&#rVuuA[YFk0!!+i?dJs;41Ze\W!3?/$f`0V)
q>^Qrh2;9W!!*EGdJs:c$gI_D!:0[e%,XA#!!5:?&'=m3!!34($Ma\W!!3L0!ic7&!!3T/8D+"@!!5Of
&;gJ3!!#[?!!#[U!.k4;!!.i4e,TO,Lr]RU!!+6Ap]0+M!Dt&>!3H5%RfD"?r;ZluSqmBj!!#=7!!#4F
!.k4<!!32YDq4miD;PB7!0$sZ=;^f5hZ*Zn=Jc)$!!33$Ib4W'!!%BG!J^["!!#[A!!#[R!.k4<!!6'U
#1rnW#2`M$!0.$\&Qf)/!9!nZ!E]r1!3Q;'>Q4o[!!3?(@>+^+!!#[C!!#[P!6,#<!!1ZFg]79Q!M7r"
!6G3A81W<m!@^V'!.k48!!3,7fDkr`s2P+s!!+MOqZ,IQ!<XmN!3-##/)M?%!!E9%(uHs$!6P9C#$;#^
!!37)#3Go;!9sOc0`N3J!!4)=1<'<O!!#[g!8dbV9;MWg!!0XPgAh9T`k7!*aoDH!4k]l:4#c4#JcP'9
!TF(4!!3,`_uP\q!=Tb?!9!nY'G$u>WrN23h`BNm!&t#:&VL/-!!34($JYU_$!7;i!.k4:!!3`35hl>@
4oZ/4!/ggW9DJSI!!#Zd!36)#NSiLk!T&oi!6Y?C,Z*7r!DXp!!6,#:!!/kph>dWX!<9!P!65'?!B]':
!B:,A!.k46!!35ZC#/gkB&<[/!/COT=;Ll9i;`ln=JPqq!!36%Fl!*"EW6)o!65'>9ABLI9B-#(!9X=`
=l0GA!!3;\?,HYu!!3a7!WE)Y!!-18UB%4m!b;66huEc\rr?_b!65'>9ATXK9Aol&!9X=_fppt#!LMQW
!/LUU8gsW<j8]3/9VDHb!!3,/huEh`rr@WNa8c5n"5j.[!\rU5JcP!7!\`FIiW'#qh_MtIM#[S_=9SR&
jo>Gb=9tQ"W;luVru'er";h(s!!%TNa8c35huEaMh>kOqU]:G0`8Uas_>qB(!5nj<2`fpu!BE.!!.k43
!!2H`iW'#Pn\P9[!!3ZE!94%[&eUi<V#UQ0h_sNq!]/^JJcNai!WlI0j8]5d=9IL^JcOm4!YbSrj8]6@
rt`ENK`D0I!!)'[!)&sbV#UO[guJG;gQhg>JcNai!@:J$!!,eAhZ/6.jT#=_s5X.\s006<L&_;W1]RO<
!!+kWT)b_g!X%=hjo>HjhZNiXJcNdj!WcC;jo>Gr=977YJcOp5!WrC=jo>HurrTn7L&_3HrW)*]!)&j_
V>p[,hZN'B!X%=iquD<K`W-&S=97Uc!WcC<g]5=oU&Y73rrVBa!s8L?!.k3e!!#[S!!#[L!.k40!!1l=
kPtXHh7irA!!,e?kPtW1:7hN\!!3,$kPtXas8E"M!5\^:1]lk@!<P19!.k41!!5%8'']Gu&`5L\!.t7O
#m"-0l2Ukf=9tJuUAt?VrtFYt!YYMqr;_EL_>jR/kPtTUg]2p+iW'"s^Zke"]u@VaK)bm4!''6D!B*!/
!2BMpp[.5G!UBX\!.k3g!!*`El2Uhp'AEM=!94%\(>gk5!!4e1(V9[#!!*1(!!hij!X;a0RfK5a!Z1kp
li7)Bru(Y5JcN[g!))SW!)(uF`W2V2!Lqd/!!1cDr;_EL^An9^9'cNY8h&QrJcO[.!Oi$p!!3,0]`<Wa
!rr<'0'iQ=/H_ODTE##rhcfFJ!a4CbquD<K^An::'(,`$&Qf(h!.k4/!!3<'AF9F!A,c_F!.k1P!!#[Y
!!#Z]!2';nC#9!]!!35ZCAIp^!5JR8(0Ku)!E^,k!.k4/!!7<C!q60k!rmJU!.k1P!!#[[!!#Z[!2';m
hi7+*!K5k1!.k3d!!,nAn,NJ6;:kl#!8mhXs.f&`!M]V(!.k1P!':5N!!**_QiNf[!]o3Mnc/_%h`UW5
JcNUe!X`$2nc/^m=:*RZ`W2P0!^Qbtnc/_&s$HS_JcNF`!))e]!))#GJcOR+!Q_kC!!0UO\c@<^qu?a\
2=^_J2*RH/SH&]jj730NhuEKPJcNIa!>Z.8!!*KFf`6U(h#IKph^e=!!\<.J\H%3]r;Zm&=9eBt!X;a0
R/ifY!Z_4ooDeqHruUq8JcNIa!))k_!)(oDJcOU,!MS-;!!1ZF[fD![r;ZjJ8Ful_81U#,ScAf*s7?9l
s1e7-JcNLb!<anE!!+MOec::%h>dT]hc'4K!`In[[K(mZrW!!#=:k0+!YJN8Q2mNW!XA[1p&G.urs&,r
JcNLb!))qa!)(fA`W2G-!cQrsp](?rhf8DkJcN@^!>nr4!!-1>fDpL'g&M2'rrMlp!Wi=O\,_*\q#CCf
p&G(cQN3HS!T8_-!!.i4p&K[E\c;b0+nu$<+]HqlJcOL)!WSV`!!/Pg[K(mZq>^L]p&G(YQ2mBS!^Y]Q
q>^R*ha-o8JcNC_!X`$2q>^Qu=:3RYJcOO*!_E>#q>^R*s%'NtJcPWI!)*(e!)&OVRfEK5[/'b'[*8+A
JcNC_!C&@9!!+i?df=t"gAh9SgA1dMf`/8XJcPZJ!?)=A!!*EGP5q*Q!Zp5Hqu?dFh]D=gJcNF`!X)U0
qu?d%=9R%P`W2A+![.Lnqu?dJruh"8JcN7[!)*.g!)(iBJcOC&!N+BE!!1QH[/bdYpAb4G7f35e74a](
QiI0+s82its2Xa3JcN:\!<jeI!!+;Je,Y(#fDksXhbF(M!__DVZiG[Xp](?s=:Y<1!Y8B6PQ7*O!XJa*
rW!"!rs82rJcN:\!)*4i!)(`?JcOF'!I!B"!!1u#Z2fIVp](=6=T/:$=<!D'R/d8Cs8E!!s+g+EJcN:\
!)*:k!)(Z=JcOF'"Q4_/Ic.F1JcPQG"B?HB*EA1$R/dBiOT:ODmf7q>\GuV!rVupfcN(rbPlLqVh[n[7
o)O@B[/^=<=9;S5df=t"eGo_Irt59+ZN,RWoDeqc!)&ITPlLm3g<f?iJcN1Y!^]OId/\aueH#UKYlK@U
o`,%70HZDWQ2gtGh`1**JcN4Z!XVs8ciAXtec5b7s#mRdJcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/D
JcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07T
oDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(p
NW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXt
e,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/D
JcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07T
oDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(p
NW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXt
e,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^M
XoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?
ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#
c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FS
PQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpB
mJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;QhJcN+W!)(]>JcO7"!8k$]
JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y!)(W<JcO=$!8js[JcPHD
!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:`W22&!8m;HJcN+W!*IVK
JcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG!8m5FJcN1Y!*IPIJcO=$
!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW>CG!8m/DJcN7[!*IJG`W22&!<;Qh
JcN+W!)(]>JcO7"!8k$]JcPBB!*G?`PQ1^`n,S%?ZiC)!ciAXte,TL+YQ07ToDeknO8tOG!<;KfJcN1Y
!)(W<JcO=$!8js[JcPHD!*G9^Q2gpbmJqh=[K$;#c2`Frec5^-XoO%Rp&G(pNW>CG!<;EdJcN7[!)(Q:
`W22&!8m;HJcN+W!*IVKJcO7"!<9;(JcPBB!)&FSPQ1^@n,S%?ZiC).ciAXte,TLKYQ07ToDekaO8tOG
!8m5FJcN1Y!*IPIJcO=$!<95&JcPHD!)&@QQ2gpBmJqh=[K$;0c2`Frec5^MXoO%Rp&G(cNW=Y2JcLB&
`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
`W1SjJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLK)J,~>

%%EndBinary
grestore
np
grestore
gsave
0 0 mo
395.999 0 li
395.999 139.934 li
0 139.934 li
0 0 li
clp
177.898 135.799 mo
177.898 97.6832 li
176.891 97.6832 li
176.891 135.799 li
.746 .676 .668 .898 cmyk
f
177.395 94.4028 mo
178.771 98.1865 li
176.017 98.1865 li
177.395 94.4028 li
cp
f
177.395 94.4028 mo
177.276 94.4459 li
178.592 98.0607 li
176.197 98.0607 li
177.513 94.4459 li
177.395 94.4028 li
177.276 94.4459 li
177.395 94.4028 li
177.276 94.3598 li
175.837 98.3123 li
178.951 98.3123 li
177.395 94.035 li
177.276 94.3598 li
177.395 94.4028 li
cp
f
178.236 90.4473 mo
178.236 85.9238 li
176.373 82.327 li
175.479 82.79 li
177.229 86.169 li
177.229 90.9506 li
178.236 90.9506 li
cp
f
174.416 79.647 mo
177.379 82.3716 li
174.934 83.6392 li
174.416 79.647 li
cp
f
174.416 79.646 mo
174.331 79.7386 li
177.162 82.3426 li
175.036 83.4447 li
174.541 79.6298 li
174.416 79.646 li
174.331 79.7386 li
174.416 79.646 li
174.291 79.6622 li
174.832 83.8335 li
177.597 82.4006 li
174.247 79.3194 li
174.291 79.6622 li
174.416 79.646 li
cp
f
178.317 73.7403 mo
182.495 80.1294 li
184.735 75.7707 li
183.84 75.3106 li
182.39 78.1304 li
178.884 72.7682 li
178.042 73.319 li
cp
f
185.786 72.623 mo
185.282 76.6187 li
182.832 75.3589 li
185.786 72.623 li
cp
f
185.786 72.623 mo
185.661 72.6073 li
185.179 76.4245 li
183.049 75.3291 li
185.872 72.7154 li
185.786 72.623 li
185.661 72.6073 li
185.786 72.623 li
185.701 72.5307 li
182.615 75.3886 li
185.384 76.8128 li
185.954 72.2958 li
185.701 72.5307 li
185.786 72.623 li
cp
f
grestore
170.547 112.4 mo
172.013 111.693 li
172.16 111.693 li
172.16 116.757 li
172.16 117.095 172.174 117.305 172.202 117.388 cv
172.378 117.579 li
172.467 117.624 172.648 117.648 172.921 117.654 cv
172.921 117.817 li
170.656 117.817 li
170.656 117.654 li
170.939 117.648 171.122 117.624 171.205 117.581 cv
171.377 117.408 li
171.41 117.335 171.426 117.119 171.426 116.757 cv
171.426 113.514 li
171.426 113.078 171.411 112.797 171.381 112.673 cv
171.361 112.579 171.323 112.509 171.269 112.465 cv
171.071 112.398 li
170.961 112.398 170.809 112.444 170.614 112.536 cv
170.547 112.4 li
cp
f
172.776 88.4497 mo
172.355 89.6157 li
168.817 89.6157 li
168.817 89.4492 li
169.858 88.5005 170.591 87.7251 171.016 87.1245 cv
171.44 86.5229 171.652 85.9736 171.652 85.4751 cv
171.652 85.0947 171.536 84.7827 171.303 84.5381 cv
171.07 84.2935 170.791 84.1709 170.467 84.1709 cv
170.172 84.1709 169.907 84.2563 169.672 84.4268 cv
169.438 84.5972 169.265 84.8472 169.153 85.1763 cv
168.989 85.1763 li
169.063 84.6338 169.252 84.2173 169.558 83.9268 cv
169.864 83.6367 170.246 83.4912 170.704 83.4912 cv
171.191 83.4912 171.598 83.6479 171.924 83.9609 cv
172.25 84.2739 172.414 84.6426 172.414 85.0679 cv
172.414 85.3716 172.343 85.6758 172.201 85.9795 cv
171.983 86.457 171.629 86.9629 171.139 87.4966 cv
170.404 88.2979 169.946 88.7778 169.763 88.936 cv
171.322 88.936 li
171.639 88.936 171.862 88.9243 171.989 88.9009 cv
172.117 88.877 172.232 88.8291 172.335 88.7568 cv
172.438 88.6846 172.527 88.582 172.604 88.4497 cv
172.776 88.4497 li
cp
f
159.142 44.1646 mo
159.313 43.7593 159.529 43.4468 159.791 43.2266 cv
160.052 43.0063 160.377 42.896 160.768 42.896 cv
161.249 42.896 161.618 43.0522 161.875 43.3647 cv
162.07 43.5977 162.167 43.8467 162.167 44.1118 cv
162.167 44.5479 161.893 44.9985 161.343 45.4644 cv
161.713 45.6089 161.993 45.8149 162.182 46.0835 cv
162.372 46.3516 162.466 46.6665 162.466 47.0293 cv
162.466 47.5479 162.301 47.9971 161.97 48.3774 cv
161.539 48.8726 160.914 49.1201 160.096 49.1201 cv
159.691 49.1201 159.417 49.0698 159.27 48.9692 cv
159.124 48.8691 159.051 48.7612 159.051 48.646 cv
159.155 48.4204 li
159.225 48.3555 159.308 48.3228 159.406 48.3228 cv
159.632 48.3584 li
159.682 48.3735 159.796 48.4282 159.973 48.522 cv
160.151 48.6162 160.273 48.6724 160.342 48.6904 cv
160.451 48.7231 160.568 48.7397 160.692 48.7397 cv
160.994 48.7397 161.256 48.623 161.479 48.3901 cv
161.702 48.1567 161.814 47.8809 161.814 47.562 cv
161.814 47.3291 161.762 47.1021 161.659 46.8804 cv
161.582 46.7153 161.498 46.5903 161.406 46.5044 cv
161.278 46.3862 161.104 46.2798 160.882 46.1836 cv
160.66 46.0879 160.434 46.0396 160.203 46.0396 cv
160.062 46.0396 li
160.062 45.9038 li
160.294 45.8745 160.528 45.7905 160.763 45.6519 cv
160.998 45.5132 161.168 45.3467 161.274 45.1523 cv
161.38 44.9575 161.434 44.7441 161.434 44.5112 cv
161.434 44.2075 161.338 43.9619 161.147 43.7749 cv
160.957 43.5879 160.72 43.4941 160.436 43.4941 cv
159.978 43.4941 159.595 43.7412 159.288 44.2354 cv
159.142 44.1646 li
cp
f
184.698 67.8369 mo
184.698 68.4619 li
183.892 68.4619 li
183.892 70.0474 li
183.158 70.0474 li
183.158 68.4619 li
180.63 68.4619 li
180.63 67.8984 li
183.402 63.9233 li
183.892 63.9233 li
183.892 67.8369 li
184.698 67.8369 li
cp
183.158 67.8369 mo
183.158 64.8569 li
181.062 67.8369 li
183.158 67.8369 li
cp
f
206.087 43.2041 mo
205.741 43.9561 li
203.93 43.9561 li
203.532 44.7598 li
204.323 44.875 204.946 45.1655 205.401 45.6318 cv
205.792 46.0332 205.987 46.5054 205.987 47.0483 cv
205.987 47.3643 205.924 47.6563 205.795 47.9248 cv
205.667 48.1934 205.506 48.4219 205.312 48.6108 cv
205.117 48.7998 204.901 48.9517 204.662 49.0669 cv
204.324 49.229 203.976 49.3101 203.62 49.3101 cv
203.26 49.3101 202.999 49.2495 202.835 49.1279 cv
202.672 49.0063 202.59 48.8726 202.59 48.7261 cv
202.692 48.5088 li
202.759 48.4458 202.845 48.4146 202.948 48.4146 cv
203.148 48.4497 li
203.206 48.4731 203.304 48.5327 203.442 48.6294 cv
203.663 48.7817 203.887 48.8579 204.114 48.8574 cv
204.458 48.8574 204.762 48.7266 205.022 48.4648 cv
205.283 48.2036 205.413 47.8853 205.413 47.5098 cv
205.413 47.146 205.297 46.8071 205.064 46.4922 cv
204.832 46.1772 204.51 45.9346 204.101 45.7632 cv
203.78 45.6299 203.342 45.5532 202.788 45.5327 cv
203.938 43.2041 li
206.087 43.2041 li
cp
f
gsave
0 0 mo
395.999 0 li
395.999 139.934 li
0 139.934 li
0 0 li
clp
189.212 81.0477 mo
186.951 84.9659 li
186.766 89.0115 li
187.771 89.0575 li
187.945 85.2568 li
190.335 81.115 li
189.464 80.6118 li
cp
.746 .676 .668 .898 cmyk
f
187.12 92.311 mo
185.916 88.4697 li
188.668 88.5947 li
187.12 92.311 li
cp
f
187.12 92.311 mo
187.24 92.2734 li
186.09 88.6036 li
188.483 88.7123 li
187.003 92.2626 li
187.12 92.311 li
187.24 92.2734 li
187.12 92.311 li
187.236 92.3594 li
188.853 88.4772 li
185.742 88.3359 li
187.103 92.6784 li
187.236 92.3594 li
187.12 92.311 li
cp
f
grestore
196.742 82.8633 mo
196.742 83.0352 li
196.354 83.0737 196.037 83.1509 195.791 83.2666 cv
195.545 83.3823 195.302 83.5596 195.063 83.7974 cv
194.823 84.0352 194.624 84.3003 194.467 84.5923 cv
194.309 84.8843 194.178 85.2319 194.072 85.6343 cv
194.496 85.3452 194.92 85.2007 195.347 85.2007 cv
195.756 85.2007 196.11 85.3652 196.41 85.6953 cv
196.71 86.0249 196.86 86.4487 196.86 86.9673 cv
196.86 87.4678 196.708 87.9238 196.405 88.3364 cv
196.04 88.8364 195.556 89.0869 194.956 89.0869 cv
194.546 89.0869 194.198 88.9517 193.913 88.6802 cv
193.353 88.1528 193.073 87.4692 193.073 86.6294 cv
193.073 86.0928 193.181 85.583 193.396 85.1001 cv
193.611 84.6167 193.918 84.188 194.317 83.8135 cv
194.717 83.4395 195.099 83.1875 195.464 83.0576 cv
195.83 82.9282 196.17 82.8633 196.486 82.8633 cv
196.742 82.8633 li
cp
193.997 85.957 mo
193.943 86.3555 193.916 86.6768 193.916 86.9219 cv
193.916 87.2051 193.968 87.5127 194.072 87.8442 cv
194.176 88.1763 194.332 88.4395 194.537 88.6343 cv
194.687 88.7729 194.87 88.8423 195.084 88.8423 cv
195.34 88.8423 195.568 88.7212 195.77 88.4795 cv
195.971 88.2378 196.072 87.8926 196.072 87.4438 cv
196.072 86.9395 195.972 86.5029 195.772 86.1343 cv
195.572 85.7651 195.289 85.5811 194.922 85.5811 cv
194.811 85.5811 194.691 85.6045 194.563 85.6519 cv
194.436 85.6987 194.247 85.8008 193.997 85.957 cv
cp
f
gsave
0 0 mo
395.999 0 li
395.999 139.934 li
0 139.934 li
0 0 li
clp
187.601 132.764 mo
187.601 94.6476 li
186.595 94.6476 li
186.595 132.764 li
.746 .676 .668 .898 cmyk
f
187.098 136.044 mo
185.721 132.26 li
188.475 132.26 li
187.098 136.044 li
cp
f
187.098 136.044 mo
187.216 136.001 li
185.901 132.386 li
188.295 132.386 li
186.98 136.001 li
187.098 136.044 li
187.216 136.001 li
187.098 136.044 li
187.216 136.087 li
188.655 132.134 li
185.542 132.134 li
187.098 136.412 li
187.216 136.087 li
187.098 136.044 li
cp
f
grestore
192.689 112.362 mo
195.905 112.362 li
195.905 112.537 li
193.912 118.495 li
193.416 118.495 li
195.208 113.087 li
193.557 113.087 li
193.223 113.087 192.986 113.126 192.844 113.206 cv
192.596 113.342 192.397 113.551 192.247 113.834 cv
192.118 113.786 li
192.689 112.362 li
cp
f
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (010x002.eps)%%CreationDate: 27/05/15 10:10 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6H#RgtFs$G?]m9(+7Ltq^)JQ"p#TsG:+@4rBMk)q1mea^3,k-rk#Qc+K^6p@H<3kPI;c,Oi.CN/pCfd^VG%.upV+S1-="HG!%'j6Ac;CokSV+;h2r^irV5?nqis%&uR52CG']b_Im_<!bnY<EN]gUI(Pl#TV'Vq^T6Pj_8U6Kossrm&$;k;[+9%lf3HLbf_P3o'0!%_IgNZO5l/:@SqsFj.h!h`"%umBU$.r6MQX-hFj+emr.foqKfPsRBP/(j^Pc()g<VnbEeYKfdlV=lTE6)Mrek='?0>"NPccD#b>N6%`I+Of^!5-!4R_;QO;H1TpP!'op&=Y/?QF=p@PJ,uSC&U+C*YBo/:;*H$`2&+I4i90'$]STDTUoW4G]NTmp#U6SJ6`R_@n,W.gJ^^%!_K?cDtn!%IoWGtX4_fm>WVD2=]W_2gMHP;]ZuXh@:!nB@KLnbS\M9@Zh6HB;1K&M6A/>7WI,LlP![T!6C9kXr!Pq:7RS_n_RfZC%L&AF#Sb)Yn/mi00MHB+JKc_[2k(>rt=nIn@ft9!#X#m.ESPU,QTGV1d8i`4kP0E"]1WA^G=9=Y9o#W(lB<,,03iValnK,h:mYjau%O=FAXI[7/mmQh%mQ$d;X]M#4Dj*AHWNXEET''+m3"Cb-B`s2daaiCoi'E/AJ`]#7e#g2u7asY@:&qqU-]HX/Kek+]"<=;l^dWj8%%-A5Kdc;b64V+)\]1WhmpEI:X6s-WGNd7m_>YNJPf3J`J;=-Rf_I'7@k%(<?re<R<C_EV?L&g)6c#r)`1)PpEASfN"Z8c=kLq2R9$%=WIX),7"G11E;.q=:@BW8LZJ-JA6X84:MGOBct3_Ahrj6HRg(j=Q(t3$ATd*3"3(/iCl^51DYU&Yo(E9`B\V)0>rae+;T?W:Pb90%6EF]1hFo9T8MUTl1)Y>*ab7S$Fs[=;1E#lrUR9HPk[?KWVspSU4@#\O4s:]+#sKLJPY!>RHNkdJ:P]*!Jkmf(`!Q,iPR0P4(R,1h%+XP,UQ84[15,$d$(IFfhO=0'8b9(1Z\_n.\A24]CeIPL%Gg*\=\-/Gj9ic:(4enRq`c;=,V)jcK0L.0;++-CIX9Mh,feZZ=n/#P"%q4np@>[d(fq;;p860VMM_^D3!6JrMd62BH&eKU1i``JHjj=&+M:bKkN<+h.R`c[*Vpa5NbQ(1\^PV]mQ^+<ip^/tdM&-kfT8LBZ3%hI`Tr:SE1*$*fkF6hqQpfXpVZEM.C`[j9XimP)qk*11h@1+^P),],e,P8#>OP$U\%b4s8\@pE[B1;3eN;N44YA$eTS.<h(=H_3H6%@$EIlACA]eSFM?1OJ-(QX(XSAa5N>k<RE@S:Q"Kpl'CC:O["(pOWd<FQ!0K`XOI>K,]OIR<k'=#.a]d.bL0s?niTDCJ!j<t70isA%UASSQL('aQAT5.H+VpgMAV`b,DriW>1s18;UJfrG&b.i-UASRn,hR%s08%059!Jrh01.eFIOfmc3#Tr36f#R+X&o"!qSiGsnd3-C%0U,._igEJ&$=W!O'k+jT>T!H,3./_%m!0jFJ!&:f^-tpN</Qr4KmE4U)#T?tfoo)V)N:IY66m:;_)M(2-Gr%+06r`phb8iU6gRMr%NY4gW+r*kZOJqqT7!`'r.0QJ&OhYVp:%Bk<1.AsSGaW;!Y)5r&o=UM-qMh=A.$s.\j2Mf$d@:L"U/Wn3noOLdSgKH/bZX$:?I4q,%`YA4qjdT]?-A!o5-U/FC965u+Sj_XH1_3W)R;Sj]=^D^%M7QI(RgGC)4JLn,_imb8`4@9k.<Qe.m4nH/\YB2`]j-Uai!E+(Uo%1U%)a]NN5O^e/.hf$>RWjF*=0<up#plar,t]]\#_/%Y$M87//?`.p5ZndPO:i1*PqA^[9h^gZ>*8p]9.3T:,t_27ZD>nrOTs*BA4]eD%c*Ca=<G<i@7T+UXV'ehaI@d8,A6;!oC06^JO9$XI;B]tVA<)OPe'qblPamu.M]u.58pM=3Qdg&/E`^@;aRXlXB@]JM=(YC0ZpZ3e%,N]`'X\G8'@WY4'")kL[WMHOCN@;2%hZuht%,unEarH9?cfqWt:<,`%dNoTf`MM:J8T1Y@+t9COe6"@501]7X:=Gk@PNbXmX22/<%PX)cAE\(5D.-71(;>giZHE+8'U<^a.q+Ecg/%QI]8uUen97eF5MDiCThUK]Dj><U:rKH>1<JHSb`K4PsPWYqq=*-d77;5ncUS?<b%A1^[,f4l5QMMrmHk/0!XadOcYTsa,gRM?dYCl>+f.:,bNC]RE80A-YFqrG,J'&UWJ.iQ@_OL9b=+c%$c;^0n*b4DRK*OYl=hgq+t%RkIna>&M_KP?\0RG+S5p`^qVF7F>;XVF!pN8ekhm6rKb^JrU"7ekRd&+R33&&0dd@;GG=-8+$OO]SNBJYFrI5R5Ct?78B8I/_./X%.ZcV5aZb6Fe$>-LKT[V1-^7!$'h(_o2MIqLegPg5U]n,Z"OMS:X[lXA0D^^1:Fo">DXn"],tNZUYD0fLIZq6/\J%;eAV,E+,fNaO%auUuJ!\LZ,s,^b3^bTY>=4M>*nt[]='4SQRjea#79UBdO;5L(W;Pcie,*nfO,q1!G^nm-'QcWm-ks!RZ\4XKcD8)<>-$@R&.\-U>%VlAroAgH-*E(rcR/5>J0dSN+mBaIDB8<uoRaA>WSNBmo5G>b4f6M\o9:lWrc$1pit91*3j2,L-lqC*<m2V*XO47qrD/9O\>XU!dp%_uo=)Ug2EKYVoHL9j3C=8^Z[^atDc8:7#uTUW'qnbI9/+=d/!ZeuRnAq2.>!^XFQ7q>,Mn:#"(QB<,SV]24*Y1rh(o&j9GPhNLHN%eae-"U%G5K(lme%(O>1e21%oh3S,n?jtH$AkHGerI+u4ceFUCjU#N=N-r\>jo1o"@]M*fIJ"+3Db.fB,DjApWBY*hM^0%P:P*JD?%V4;T[>HK_XHG,[tAZJQE/uQ?eplmn_&frK9.q(=Kbu\Zq_D(fnNM=V3,(f*BNJt19CM0B/0BHqhg?b`'E#."e]raqpFKIS;ebe(.%F1Y[0b/nB?af1371_eq6O$)"X$`16D@o-Z1@K_*SnS8$Uj[*FGk<L(PkL>^K@^0lPbuUtTQUVi04I:+ucWUp^cYbDY`BrrmOXF/M%HF@!1>Scp8T@N6&>H?8()fH([*"bSRh%XVI[hW"WF)G8r.s[RqrAm;UDTN3>cA2X)gXrbcCZ?@D:LM_Or`Ls_F82(oj_pLL&*LH4%pkW%em!Z-fic4frZaY4XfAYU:gf?sC`$h-sc,#6p2)jUNVF+Os=`R'V8"=Z#1\,%<I!JA:^?suAkDJlpKQH9HnG]9eep$h/%R2ar%'+Uq4j@fJM$;$?oqO/1?4^6,D_5C86?T?7Fm!tt%UL>$YrR.sBO>E$IC5%Ab,WRa>)Tk;iZr:$g`uZtOJn3^OK1SD@5a0,T>,;s%%etSf4V;J(0iE+tN\<3nB7XoJSrrRI&9QK-`E_P2k4.!:MX8D5u0fJ,#1a$*;T6L,F6tO:QeuSUM^.MRtmJM1nc?-3ccX%<CL&,F5%ZBR>MSAqW*Cn.pslrei`:H.lJRT.MAG$hH.f:AC6U-dDIO4,"g.dN2_S`-?/I'.F<X*Oc?]2L1aQ?,H+X3dOo/;gsu8+_h)>^(e0%ZU=tb"#2/8Pu=_N3Y&"0c^\(e6I&^ar-2O#N2kr!.K,`6q=:CV8AAW9X=e83=Wn,X-0a4A(UH_29N!C&Eb4Q^k685mZo8,MrVJ+g%X/(EU`eOAefVI_/RD3fI/<L3Jn55@,B)MSUD"1hj&/36iIU)oS,!P\?X48a7'.jBsq0FqhUoSP<q">!g1g;PB$'.X=et)sU:JO81%\M0_q\\'O/F$s6N3',fgMFb+X>.D)G"/0&tW)9]^*Ns%Jm/aiLj,16M,V@"):3/1G#>;J2bPPJVHokaL=[f[DgM2hmcr_=\_>'r%%MFZa3p07t1AanCca#9cEPb!U\CJ^JilCpPg3rf+[V(P330GI)'Qd7NB?`@9cj2)Iq9qqVAV4[urn=5c_-BkfJYJ'c*PI5qK@c?lX%1k2kT>NPbIAY/>"I$S?laa@#"jmAdO=9#ge\ri!LXD)D04g3241nPYNk1bSprOQ^"?t3q&(40Ws&nu88e9/KEFks^>bm.]Af[TW=%MBu-W=K[R&Sb*DYo5Eo1RqqU.9#J\^;RFFF4Hm4>1efX9WU4#=dj=!Ro+1+U#3ItPebV]p>Ko/]@IH4'*YO&ke231aE*gW9cnoK;%lG\HETg6[]-JqFi=4Ot%Lo/;:"RtA81a'i'At+t:d\kdPQ98fUm^;8'%.45W%+om::o\HrMqd>fVEN;7&$M=8"aGS^'kCW,Mma\a%e/<jl>$N=RS=EQio#&lh-f6mfVF6V[lV`F?V3q3t-!S&k%jKD7fGTOa67R")M:CcTXmd<T7+a++Y7jZf9Zf2%a]*)&-(>RK+sL`>%Y#=c27:BH3c.9g"8C^=IZDqD?X\u=fhTHZBMSR7KSFQK&=e;.JCiDp$K=R/K>rS1dCara@;,g>uEm?W7r+/<cE\2d0Y?#'1=!VmT%&,A1,V_WESnV,28Yp]qADSB:!Ul_LKd0g>0:o$Rg1^It6B4/jE'Oj$8@`nH<@\K$1f':fVNFX49P;Ka[K5+Gqb@7/3GQF!nh]]"C%7AuL"<-YN@G.pZF>qXC&)HT+5(-.d9(6bP<Xjjh"]M,S8Y-,H`;p4JQ_h8-br-+s\3RsY23bjr&`n717)cG?*fj_C3.G:Y5/BV0r%77+Fp!E5/TBStmP;6rf4;mKoqI&2gJ-$q)ek*nkPgeu0%#a')E,_$_:-D5'HV<l#p1h%f91oa/W6W)$YV8#rq)_d2KRikYp\=?.a%i-?Wj2Qo''qT)m-fqMTE8;&f%;*NS'*?]Ye>:S.*M/(LQ/-5;o8K\kWPlU/A+G3>NWp,_'`*,]@]3J4HDoNGNqJN!-@*:l@okZd0%r>)NVemD?5715qsr]?N7[FU!pr@;+JbAp0h;dpoeepoU,Zb[;O5II:T_\%5Q94b3"Whh.d=LUm@g<-ft"OrR`Y`%d]Y#jQ>7g_n8%)Kj")##23X0KG?1bf<@X`MSc38T_4376iK5Ts-t<!II_;Un\_.c8c["\>J`X@;YM_4;E;i=YR=u1i&*<<VJ6WA';=4OtE[la216n%W%,D@!H_Y6X1<V\Ylj1]YEnLCa6I7oUb(6&(VZ(dP-!NeX^S<e;g#NnhO.^-E\9_s$QDZF:DR5eep"WgZ&/7uR]b,8l,+*39Y,Ok%eSMAg6pRcR;l<8g9+-0i(+F8qkppOYcXBK&GA=uIWB>W@=QZelh;7oZMYVY&r8s"-^6U-O9YeuC[Z]20>i,=QIUp!<SZd?5;cgrN%]`%1dgV_K/,](`K&j)U7'0XJu1M_'$nNb<D4M7o+k2_580JXu6$QKsFp,%e!)R;!1.2;B>jP?!Np%+mB.+MS1k$uSQ,%]?YdeMKn%WN;%s=^<sSP.Gfo$Vn$apSH%[;=Z#8`YJ0phED0e)W.Oh8dtk_?%d5EGMaZ4X]Z!tAb3JU&YK5E*MH^^)H^Y4"j=QsR&YUXa<W)M%1`>MT;9Z%(AgCn,;:@Na'S$OkId>-(OiRMh)c($-oMMg.d6DQ??BL$5;7:?[M=@ZC(ZI"+gk'"ee2pQeig'(9=_63F8Yh7G==g_-%-A:PHbnnV<GuLa?CA/P@5+=`.Y#q[;.4aQ81n%kg_M7C]UIbu;!2IYJ05X4_.O.Y,Z0UM/mC5U5dF!qIbtYm?C)bQ#<833\;f*b^%L2,cBM,&"pA?/bJ%IpHu%=@5;9VYXo=/<6L@ptI$cIK4S8Q#m>''9ioV?P9,ha!+%>+I>sa4p.gd>.R8[\C5h9c>(A#C3pfW(TjV%SMs["VDOL6]WK$L`$VS41dd!tIp(%l@-X_YXnY)f):*n=&?S_(h9o=__a^69WEihrXGd7>;^l%%VOE2nVQ'j<Di+1bnZJ@HZ$Orj%%j]H.FrF7#V'8Zn>*k>l?fek(rGcQ2dk"h9$9d$XP6?eDT0.sT!QX\3a-GBH9"Aii[3RIAj4ctP6!(/b/J*OIR&r*>Z4U*eB/JnQ%b4.+&ATk*WF89"uWmlukPtKRspPrD`!^sUPCZcC+U4(d&2"cHp7:M.f)G]DO&.=eF?@:m/<Cs5tD.6nolUq+D3TI7RM,]#cPr('j%-k`eFXD3gkW-)(M0kqJ$Bo/QM_(;UTCS@-#\_".3cs2_^3O[@F@<Y;=(5<m<H;TW-WT;:0L1k&IE]b9iPIR9Q7F_aENL)n-nl<rW%ZR%mg^,1jI3>bkXoZG-^SrS/_eYie"M`FAU)4)O/@=YHF]Z['s[ef"@AM`ZZFXQ$V8>Xuq%S9c='\@6UVR$Tg&:Rh$UmT0L%.i#F%e&_Rtar;Z;P-@QA'N[jaeZ0scfc5W2?lKaf?j:C*KaMN<8iPm!TNLJgd:td=it5iKk46ZD.j6L0WSVAZK_.kM$P1,+0YOQK<$e<+%C+TsTWZ'"B@eg'fHrSP9lY<q<k,CXEbj/7j9>t@!T;H?Unrtg9M<EE<%&L88jQJ.ZkW0`+>4gOr0JRr\rq:^_VbaTA=t/4i4gC:N%1quBD7tL.TY-$!+7c@?0MR4ui^bb*k"*u(QF8-n`*<HQ[hb#LP6pmq9#U?-+3ZU8BN6^crpc8B<MKa1)\fQB?6?$sT4<Ql@OMB0J%'7lS=H6W#/2Kpt7^H%QR^#9HujeouZe7SL0jU'.,\]4P7RguoCFS]Utj]Oa*\\-Mto'$"2cS^#5^?+pgm&+)ugkroCV[eGqp*!Mc%ZOs8F[1u#5l6\KsG!6p;6j(j+@JKP8EpPneNpHqZSFVo65KbDpmV6ljl6>YuX=hdN`G3lLq8kd,VL0699imAd\^Y'M?op.ZT=X)R%ifTCk944F#U(NEj_H!X&QZr1G_)2uKMn2A2I9TOJ."nF&hQpJ.jXJt!?(QA:!(HLXM\br&ErP"JVOTFm\6,&<GL>B(QkckaV@J3:%Xbh(8Q$j<Q>cnYo;C$nnRts68OBF`l*X-tCjll[,oUK\n@B.X\Mp=?<_Yq=H"UUPHEk0#=PWIKSg4&_5P?IuR2<5?MPBTM-K71W3%#^ME-XB\\8HEn2Z.@E6P\nj_QJX`ZBVWZKn]D@OZVTFbcAp-j%b*:D)/\8ulQ$#8-F2r3X1S*kOX:5W'.n5q-n'?Ca_\WEEa#$^q%0</j!$o]tVP%hFU+?K$>At3T)i0_](-T6o=Fgu48REE$dXg#*F<*!n>^V"BOl-SF1E5ddL44W@a@1b9f&4pbIE8P!;*NBX4(PCh(%=re]P(,K5<)Ud/ME'#gVUmVkW\k"?>JlYXr:9#\R(KBN[NL>g!Km%K<I`"iTa0o&D1QD1eC^ncc*H#/kUfN>0f#C3q`gNu":4rGq%b?gr;CI?PU]MYO92p!t"m28OWkD[Oj[<fW"@bdtlVL=l5aM?r?Y\'+KQT7(JcqM8&lcU47GMeWcP%L+o\N0-SY&U=[>^Rqa*')AW%.b_.B^#(mrQM"X%=Jmu3X21cFQ>-3j-DS]TE0=FcN:E"o8409Gq(gK"LRVfnWT_O:Hut`5aY_cp\]JDXbq`"5.jHDr?)Ak`QL2QF%q!?c#lDA!e>8'@)dnH,!>63"pe"\X8lcdgJE\T-2dX6N:kg2,%R-F$8l,kj3Xm6GDqC7n"/n281h!S'OdQ#_;J9rY"4#plBBk=Qq%1t19e\\:+ApC5<W`pM#%V2R39R80BFDOd46ApUb+Z_5L+js"F7p)oUCQt1L_j\BR01#kr/hc=XH@aT^7VIp9H`$Ut>[HcTeFdZcd%Yf!:F[u6!/7T[Y,>dGefBp.`U*R0hU@Z"0s5Du%gR9g"Y3i2?d/n[[fVS^^Pn@Z3*bM;p7GT8L32RG;RDsn\66%8??Rq+T\eXOEZ%H#QC"Zp$:G/#eF`oH'<4idbC_)FAAM[PR<&9RS`r;AQZ?=r<IGR]Pg1*M&Sd$aWN>pn]]>VP.dD-+J7r1CXbO-^V3.%Y3Ze?BcR:%:1)Re4C=E8GL<7r^S/-s#r0p!%A/ZoIHCD&2J_1?fs@ocG7g;$)*BL3/'i?6%lX4;?*gH\d.b+1H7E*I@X:t*-?#)/(`Z8]`M[YG%&`(oTPWtAqY2)M=:J9;fq[U+"o>pdFpp')4W%bN&DZ98hHTIrbeT!.q*u>+l02:>1*\GVBk"dY]hFnbLV&Tm;YOu1-baZ6cSKFAo%go7QVDhd[h]!QZN$PRHtVgRC3roqD]<_;;<_=QL4W79!IGe3(Pn@Qo:*iI#UPc"s14*R;d##*p'>@4SXRm+O='bVHT:IU<"hINKZ%c/'edh3\J95$\kSe,-"<02!*cbN9c`F:BiBO-i+*a&anaVGA"^R6KJt@r[hhi#+J!4#G9[VadI;Nt5%MSrR],e7QXs8`-=M/*FCf%k=4H#c`,3M%*V8u@AB_VLU1d]VdsJ<)AsmB7Zu,R)*1A>K/<2I/9;T4(n(d(!>tVZ?"8et"#BFq]+#iG#g9`jWQc]9lk*/4)h?eT%3#H0A7a*NtR?6cI[8.X.=s"D^"5^.t+f>,=T]1m=Cp69]Ah%ZgY=)#NA/Mk,%lTgaG=[a4-KY1%rIq3Y&$]u"Bc-8sBoKG\e'UbG%C;V=GE.@m_V0JeRpQ]Qg\NMdoPVb[EH.,Htba[-7UJ++)JHk_oW2u(p:7Z*<CI"/!F>^>"atu%:fWSghlbC_`WnRE%Nks1g"1Lcu%VK51#VOdn=9F6'D"J\Z0hDcN;aCPhE(^so0;j0lc:<ZAbQ`1-GmCp$1FR3D(.?#:MNAI,Iq2@)*@kjG>nrP;QBog1h;s99YC[*_u%PHq+D`7cT0XlNpYeiG.9GC"aCC)Sb\Is7@<?W1/GPF/%Z;=6i!OW\4!NfU2PU_Ld2+26:Np(6hf\Z\ok6J/S$/)"Oq7=V"\goGfr%=,(eNi_Z8m<tV<)=$2Z]ebg")0HHW)GY;b<Nm/T@LtTqJ+m4A4i_pFCST]o5hNbC6!UW-F)(=!rU.nWi'[9;h20oT/F["oQ5;ono%$ZX=)9obfs>isPT4^X_A8D[Js56kUNG<[9kL\:Ic'6P79N'+%JToSa"@`[r6+!?_nbt,F&/JsW2E/R,Th%(+F?1A7h1YdR;A##Nl%UeDS"mLr5#du@K?+!Tsc17M4jQOr9Z>W0_p5FU0\()aeDYJG[uHm>NMK9#D\C&Pk=gg1FVrKVL<g6>`L;UE$h9T1&b]Zi9+b`8o'%N61I9a-&<(HtU]JLOII3Y0g[IR\SD]_CQjM(gCg?=^';7;,!&'mLsnAe(Uf2Zs+L6j+XM%JL!Bm,d%a86#(d@G^#UBfkWp62sk/u%,4D=qhF=J-(t35rg2%^D-(W48/D>YM/*5JuV.bFJh<bqm7ROl5/I_d;RjOr,7dZEi^[<$TCVN0fdkmEIElS?8U#<YB#$D8?(?XC.%8BBO]R8fBZ_Ij+.k*nr8$!SMgOYN@TA,Os?d4%Y1A4`X36H2.MF\0^H0_Q..lJ5!@PFp):BcWaACfTr0IJ`c)2;-<&GBbcg*/S5=%<uW%\K36.PoTEpB9%=4iUcOc4lpf[L_Q>%D/#Z3ZD*oXB72[OIIEmqWl+)_@;'CcAPNT8W^:rWGk_3/=a_51LjQ9.j3/?8<p__3H%9seNd+Y`:<b&*uPIS"J?W,C9Bl0Hs&G3=B#o@b7eY$nWlHcjTImBjT1E\Pm@)I<fGl8+>F,ctp@e<l>nT"AAuR<RoVWj>]TYlS.&%^S,.Gh<3D>?cflHa6J_E`U)+4h"kk8_OtY++gJ.I[j4VqS1m%U6"1)MK:(4Letc[))TU.'?/q=+U:%hBMIn)"UtRMAX\\8BOLc0B%V0>&Zb#!'+`/Z/;Y?c;V2TAp'TBY[1<[RP/#&F^4=eC1b<4/01^mu?lC"Y+_N2V=)'FssD464\/9l?7kD6hTf0^]k)2`D(<#_?4d%.JAOAk(Hi=!JfD^:UGPned,]tMtuLMY8\@>R^AMbo.Y<8U_=JS/7p^sA;co!,kn1!U2X#Bn>W:kagVG8ppB,kM*;$MeY%J;UaKhg%;F>"X5X!&V.b_I=TH0(/`l$paof!iYgGT$ZFa'$p(6sh])h<WC%"Q'>RdiQjiDAi62eKUtVdS/kkbQe20E61r('OAJPgA<+>(`e8%T0B7!fq6T(*0Z:*4sKsWJZ^`.6,=#n/o38c5fHHOJP*5&=]uON%)d&]=qtDoX17+29f'Cl1.+C([]e/jKLKHE<`ucUdURW#EP&1:%^RNN1BI7<8MDisUd?s$&KO#$;9uk.Pdi1+@ik;d'%VXV>V@sr6A0M8&6CS-V8b-=XX4kS+cg;o-$m4]c@aKuiAPBG@5+O,Fj*B\!%-#b5JK0(P]TUBN@G,8j?g&<^KB:?nmS]Sh4?0NZ3.rD.:2L%0piO5UQBa1DZ9='@,0XDE1C+^)mRR*f(9DXCIXeL)7Mro!5Zq<t#%"6C<Z>`n*iP.p$nX$A:SP@lr.B5%?XG2/eB%=i%,[)eUjrA8q,I9FE+\Y6?oA:&`-=KEE=n(rRmOYDi6`7M0K,mcFm4#>aALsNT\%qcinCaS&e!g)DDrF_e]+P%mt0<c'T?NK$@6SYU"EVb?\pg?@4TGaaLFN0JL0[$cr*"ra>THE\1LFKeZ:UdE)u/[p,)M.tQH9m[\b%<[tnU^cSXbD^O]a=&[?U=%-uOHR7q-e^g3/_f6tJ-MUbLj"k9.g\_?$_jE.,A=;3#U=F-D%2Q'h1[8Z%G2'E<KJBfW:$SR#Df1'&%'8r`WJL?:sc(aSR(9RP,'$O#'[:kl;:[5%i(6-nZG&",7FK@'__gXY;YJ&A+/CoHdM.(ZMa)@n:g'Z;gT]nMCC/IO0FD0H&&N>#-%]+E)?VdXH__R']TD=>#e7;uI##^U+0)`R2j-Ae=t=^+AM7[D+tqKUWBEN`]Cl_)ROmFC?lEIYIBZ*^rGT\aeFRbBJ'OG]oFYF\U-%/KN"d&@tibG,io2)Mci0:bt:_BXtuqfd55tAi5]^["$<"2'h9&e[L8YCs6((*;3USCu;,K(4hc@I/A9Hl//hCZu)M9N7hnSpZrBl%*H!A>3PK:BJ)=Z&8?Fo-S[X?8NceQ>Y8*hsf^.L"[:1t`Nr/R4MG[S+O7ujo%?KtZe?GVuA2@;QXl3FC8hl",Z3_*-`O%KB+1A]j%9A,&.>^EtSmAt&"-#-JLoEE`*Zu;bpg+fm]mG;c\Vp"AE<4hmABm3L^/TT($MDlV^P+)"\Bt;nL23WIuiTIB$SjYE-l(pf$PR(d\%dPab&9.fBICM9)u5')lk)Pd[rrS5*^hGH?rf<fXfY6)LqY6FTn4&EMtgD1E;^3X:%m08_o\,ugH9?UTPihS5:CHgEfD*V<lB6JUt%/1K%&nq#ob>E)&',"^.`M7:"bPprlaSkXu@8qnPu=neo1>j]Zk<n]NCLT$0N"/k';QaZ3I-Wd4>#9>rRTF3r*efJoCGB\Gu)D]if%cnT=h\IY7=#9A$sG/K)ql'e"FSN*q=fS@c+K22%Sm+@*=0N6YWcH'4o*?R=X%m&tAN_Y#dX?Gb]hm^mYkc?r2^lEQTLJDc^[/6PV%f.1)"TkeJeeD$,M%#LB"d/$S9fa(bEAi'/`Jm>B9]4d#++N\BuPXFdUg@CWRe1<OAR85R%<t\I.rbk_!RIu#i;G(.Hm8[h`:V&!P%`pN/P99/.PGS;;?JMl(m2K^`jm0Z>7pqR@-D18rUnmo*<90[m1.0gMr/X9,>rmL#sVOb7Q@sW3Zr48/UG*jnFe849iMC;E$3@TgI%/ot"3RL<q8^TY61=[+q[pX\_L#-m"l@QJ5)TBWa<D4GKl.u8b[keUANa3JQ,4!E@"G&(Y>LoF1E\'iAtQ0b.*\*3Fm^_l[F+KAk+%_oC=WD<dg+F%fN[mNOXR)qSmYKY(i:DU0YB1T_17NN;Xp@(:bcRSdnCaY_b]UA$^USiELQD`5$Obd(?o[P;bK9cH\Vo(5Y`U73JQ%Dsqei*JU,\B@cHbjp.dT!]04c[Gf/MhlK7]_2n'%gAe!V1MLFgRau,V#N!I?'H3.;qoq[#<V]bMEbK3n#JPmt"M$P[%&Q=7d!#@f%Po39E^1@\/2&g&$krHHN&o6VR@mu`-<>6']2UJ[887d+T$QQKr'5`kAc&P,(_D.VU9Oe$09Y8hhhUHnlDI6H89n6ARS'#X$``mf5%aX9qB8`HVN#n?(7.1[N`7_5_U2a6-,_;<_TG%0(eX;cGhB:;4Eo?`SLcGEi2>9Am"Y3?]Ajn(_]c"lO%ZTI/$dsZ1TZTH9:`_W?Q%SCtF#S/ojZ@u]&M%/Tmt5Y^oV1E0`,Q%,<q.D2YOYtEPN).o=aqWR]l--8m:O0%0t1fd+1F4eR3X]@AtcWf[q/O3IMV"&@>F;f)I%+1'!8S'sI1Ncr>>AFLT1G=Me#6)!XLD3$(IOou^LWHJbUH(_Q%,@ftH([Md,Rej^$&Z)%\nMSV5gb,&@aI(&9ac+GQRklg'$c=V,%FD"&i0JMo6Znlo7@n((8)`rjH'#S!o)4XpGmJ&di;Wl;;A/odJcoRb\J^s&<?*G9,Z#J!&n9MLsliKq.>*ZG)V*o'\Fag8FgN?9G%=^Gk*LMG@B<hDblR+WAEmnaiN91Di@g79]O7kLO!Z/n"r:[(ugaJ<M0_]9PQG'?rthhHf9qj@3GP#<DmF2,;HcOHp+_607C[`t7@%PKS9]Suph$^mIl%8(FB1--Jm,VTs>\NI'ojF];M,+gh()6_"'oXe44sN^'&u>#JH#i?4I^SPbmR_qF[gkg1DHp9W+j`3ntq@c@pM%U.8sfrc#m6K&--UCMk`9i=@=1qV$/DYi-+*q](cZr8A(Lj_]IBg\u0G'A=biToPI^6pJ-*4mSeeZb&2mXB(fb=[HSgmYOmos)-N@%T#bLb?NDBh2m-7cFT[ed)^O/.7]5Kq47+pRFk[cbr5>)&dhPY2fZRY`DJn\i;Ws0mF.N,[=K=NTU$";-;aT%WCJka&eSs,^"Kah<%Wi7XMRqoA81Q%8r\$dV*<2^FQef+j3gDMS$l&@(&EZ-Y'(/-T*`3Q.%,SbCnZ$gdc;VBsS3]3oYCsr/Ni0JP8l])*+5'sMf,A''p%`]5Sh4jsh<%K+33mA5F15MHURZ=>I./SsO2RdE0mF<bY?,;n5"@5q]BRRcXLG<Acan%.J?$E8-b,8L-q]&AbYl#c?U$E<5P;U(5Q%DXP9If.aqiCfg[QflW^G<Xm(Xe8X;k?H`=cgJ2#4N*<LS]>Bue935EXP]PdM%,BT[Keqjn[p@s/N[m25KlblnWY8IDL)gkC]#%To%$rt$l#?Ha5Xdo`ie8:;oYDfjV=(aKDd]M.]gc!`"+>I(JFd_V'e==r\''j4W;U$r@&]<aH8^/%fW!f)co@<]Voh(G1iM'qlKO_c:%@&I]Z1n=6pl5ipt%+$lD1X9dKLIA3GH9p]cg@\]j2g^kUceYKTZ%:TWbkC[THIcFF8nPME+p[a$o@.3[3ZF\%D_EFN^<:%BiEq10%#du3\A)o9-k?u7h-`o=nL#:RZlcB"d[cka+\opP?lg-NL\[J6(ITC"u\fPie]#nX1DYk1jG.#%XcEC7[S[7'o_VE$=0%J79AU87Y%@5g+\;e;uDcYS!9->0?&G(Zimj]`2E%UeWe^0rO)2r829l0.3HXdOrM\A/%rI",tt@<Z[$j`bl`j^D6IhDWMU\rUbiJ"8CeYfg8H%&oR'*B:<-iRT#3boF)ch"X_O=1>QUT-).POp@Oh&kMlcSD]Ei8<f4`RAa=T&Ms0W>c=2Z*kAo4J.k2uck.[d4:9Df>RoSja[<_-=%BW5F0r;'gSHI%>`[NCL26ek\J-<BkCh,tD&Rj@B@mS3F\[="1.;=BjZQ/0)EcDX$>lc;d1?+8!)dk-`bm>"9d\8apc_6glLXj'N"%N09p0WTh=-.gJd%)hC1H@gNU$C3%pV'hPEK5Lo%28dgf(1WLO"b?Vd'2+5T!=1&9$GJ*1!.+GFIFRDk9j@e*DB1g5$F@HpMdTrC!%o;4>7V6b=8A4td$k3J;goVOFNQJM52lY+l'[Psc)i57gC47oE!F:puK3j%go_jermQd3[hFQQ;11i@JYh4)^2QVLk6m@#u)fJ1nN%dRh&f]B;n$j@cDp_fX(kcDYpNXE@UXl&8\4]Br=*7$9o+:NsJ9N9\aYAE/]_l&:#SXF!S,GgdNVj_-BRk2(2<=*Qh!VUHmr'&P:$%=n`5,jHpBp3r9o_`1,&nQ]A2^Fjli*aHt3IVS#[:l&66goGQoCRngp<H*tT7B;Bro3hsEq6[p4]a51o-^3!*;'lCjXcDZIKcKK/p%Rnd6oad:<0\C-T^2Vi;q=5M^)VDB]`r_33T]]ldK=UY9^4ArQh5_Bg'[gRA?DJCq!>%i(RV*/0:_Qf<Y>r-%nZbP1AFiM+QDVnN.%qqd"'pXRsi=f[SnC%oHPbGS=q\ms-4U5m2mDH[:!<_8JNr-#6CZg6K$GQk4[Vf3;52=1G.:-#X'b'Y^.CF"JF=O2I8R8!"(BSKlq%l))T*"0m`dh/D(uA7lg^Q##g3D=V/f%L0[Re8q_YrJ6ckgtA:2kieHs=^S6_]!Le$A9Q4'C\s=M^#i(68q?G#GHFTO)-h77r2'da%D$hk#F!nA\Q5ABA(QY"lF(b5P\B7^i1NS,8*T!o8?eX@e\7EL`aC2F(?!6H'+20/FUi98(NZI@XG942sf:"bK[HCMboAXk9liF_/%["Y8tY;EbYDLD5`RGqs>OdY$f9"8BS$-&Q$&XBX#+h^AX*1CWUdFQlpceSB!If.WkK34>ni%=;M,)P",Mem/f'M6NoNc+1]jj`jD%`Ug@b4!nMVe#1[":G#:0D">fPV9O,+2c6u):LZ78R[!53m&FR_Q@@9c]f0B#e?)XM+Xr'CSUl9e*KLk#XW:oK]kP?*kMEXA<iQCf%#$hLGk/oL.32-Xb]_9YUd!J!"_)"N0m]jU=$FX4X87Kcn?4edE?q;?@gK5_=G(ZFBJ+(VQdB4^Hoc6D]:8bS`67UeN-%K8KB@Vi?%G,I8p8#qBH>Y<Um:SO[96d(JuULNV+eSquZC8ec'Y'p>m<c5D\F"pb6Y2"!:eh#&6\8+MBc#:+-dIXV;Ij0N7niBjiL)]PA\1+V8%Z*`UeH0/koiXL+up)imi_ODgJpRX(LiNCk:)k2kqHe-r@m+S`)]2#pt%DHadF0%O=e)(5Rk3ZrmDb7G3HsGof?TLctfD2!gRSK&$%Pf%B"*=\VdCY>r&VJZ?VG$U]i*lZ_/gW,)_%;IjdXS5CHf[jb/%JO(I@PXI-ds?\<RW^#p4#+i9(lf,r?Ot`9EYB^pT?V*.R,+O^%+Yc&^Bg-I7j]KXEd;cV7Q2>a\R&lgFcDmc//Bt"K+4pJBSX??o[<^BNi4)2?.b/"Kd-Ns1Up'B<FqQ=ahRDqK\/q$?fZ="Gq`_.f%XWL8KIa6J0GHQ:WDT_:.O)*2,2dO4=\/Q&:o5SX"L1)PD%4!g&5m0SuiOVO!"ph5;3<EbH@Y3,&"-9qeWU81ET1o"rpJUtc`N@Y6%kgoH,q0Y"m^<Nc9hnK'L9MQFnmRsg>LJI393@91+\DaR8CoT;ApqtYYG7W9T;cVOufZ'+F#<I>oQ!]]b)d`4:I%3.?Pfn"jAtFM2%rdi.fk<qIZeN.LeRl_V`AL[`P9]u6_GBB6Nb:h\h[W(3;1:r=dA)Wlb*]!JFWsqK%X/`ka!M,RPB6`R;B]>KCZ+P'/X7uOe4&fbq%028U=A/al[#?OjeB)Za^(7EGWKJiV#^Z]R1s3N%?ke+pC;P33N/lT4I6C-N*?1Ub=l(*dA<X7Q^=8jPX@,?r<q/u3E`u8FlP+7LG%\atsR\;b`dA)lZs>%o<TW=OUW>mp4DNBu$]Zku!+:'S&8EKW"5jO(+7V<i)hZuM#WPdP:*_[MBQpCHT]VcqkZAPQ.OE*o+"j;,A1%9srRHOrO.()CBRnD65ScP(Il5k"`uEI+i>@!R8>[RZ4FLG.l=mm*W0b:Jt*U-*JYBHCK39g"`DMN@ZW:C=oH73_@hZF0OHJ4tS:J%N+\"%d$M&W/hN2(K:=30jskdA4eaf8l&Oqo`R-2-Hbm^R@2$C2;sW60h+n8c9t%nU%=_)'9GaRm:X_p#^[:j%Q4Aj0T-$^MA'+R(%9kTbDcQKOTZ!">O#d(uKA(hs2(eJbjk+LAPV@ib.X*BD*=,qjWFE*80c*TYPCc9TM%X/]eXHk17ZC/^Xr`2f9da"fpmi"r,\;=7U%hd1'PO_iq?PdBLb6tfg+S+YMECY*6t8oCf2J%Ju^VO1$H(:8/.J[ouoe]FaJHK,p<bW"kBE!0.dNY7B/%!9UV;nJnt=*`MC"`/YP%'h_/AbD]G1f(U(AV+^>LKu=mJ2K$!c%I99"-.^;,V\P4L=h/@.@nfuV>:S]SnCWt8%IV*1K@uQ.e5Nb.D0Q*8o`<QUA]nD1NAMLL%!,?i?/UIM%X?>7,:U]?gB\*Knkmcuk8[NT7T&FQ8gKoDRI/o8Ql*]g\BU>>\D5DY65eB412TEfR?@[3I!1U((=aL1p127_#V8&7U%m8;@m*^%<9HqbotM:\',9DP$I7+%Puq3Zk=GiVNnFS@(Ed\V=<pEOnX;SH1DiS)&2:Oe\aj'9a)BuM.\;Ei!iP$L8*/c*bWRc\6M%[<A`\CM-#BH`s'q6oEidfCmlo\pOCW2_R)ZHFA7*T4QE)45ZsCfU]@BCu+F/oPCJ/h!8U$X'Z86Po]Wd)#,AbFg%E7LL%I@:Nq_"%(H)^Ah<NUP-WfWG(!SnP>.`D4qGt@kn#mGop$6GNddFetem<PWQS.(ZB>%[0h@A)up\NS9YO(U^5E.i`Gg%!sEZ=cL.?8aE%@pLK%XHe/2XD?8./$2J4mc(?t2WjgPh<S_0g=b9ch<\H4qtKW'm.5+@X']**n[705);iKdM$>H/.(7lN`N"W=rL-s6DVXPjm@M1,i&e^*%c[&N@qBdGiK7!P8=K/j]ca$kV.lGT>os;B_ce)a+om?Y=]7\A@d^nJq.CPLIo6W1*eZWQ?2n@Pd\f5%%+(#u]qAH*gD-$P9hs4pG%8sB/ICu=PkIB0!Z)II9/%sb3[rMUb&_S(EL\,&,?Xf.rh]m_PZV01&+>(*HD>s$X(?GFd3j*'naZZ@3qkP+gUhs/hII=1F^O8_>W%G45+QVP6<;ce(%Mom?Xr-IZ-Z;9.8$Ib"U9HEMB,me*p#eZ[*Ye\3iPjfO!3Ru9A>f<;#LS(bU.:Zmb:>L.'a5/('0ZRkS*leE@a%][a474]g(FIO<OsieA@kVb5#(qUmkj^%6ULXQR!uGB1*@YFgsSQnm5JBZ8]:f?\cqc?9\AI]oC:Y[+GtmG@/A`%d`C+^;J.cfVaC%_gD>um2kWh?GD5TU#oB?3L:6EoogoWn5_d(C%EA$lY#SrlY&3/[<\sJonn`d@iaCkVkm$N3SAQt7X)&.p#8<%dt)>mlXtXH+$6s0%o6^E]P)LDjfp[0OB;PA4)M^]/`e!sTmasP<FF*AdiC$*QB"j!KD7jf"-df_L;(#.u-d!F[oMe7jF2]c$R+8FL'g)/T'uk4l[<u)Z%jAjH,FLbGS$FOXcBiZ!TUIV?eS:CPc_P2QFQ"sc=HGRW2QX'O5UIm4:]jAnoNYP?!)`o:^A%/&'`*Ita^KQWkhq]ZsY2a=N5e`f8%%R_]4dt9/dGFP;<RtIJ,a;;LJY%76S9>7DVZof-e:MenSbiH35_L'nhq:3jJmVr0M^g>e09YKiJhHY*2DoR^!qrRb"E9ZdAEp'UN%QGT]*^"&OEJ\^b[f_srG@DR#7h1$+i+6U[YePa`=l(.4D?'fL%FOhaCh<g4t#)6a#9O]HeA_pZEEc^3Uc"co62I*@QpP?Q5qG5!F%[Eun?]'Kd64Z_[Hg[bT7@ssNpgKT08G$KdFk$n;/X1fM@dYYm'ZWR-GUB5%JX!6.'ga@AscFZU+Zce7rbbFGH`N9YOX+:;<AP'(\%ZU=Q]rnYKZl%)a_:[2Lf#[Z?](NZ`!pl[7%cCqCfD^Dn#qpe_>e0iWYcYRO3\Uf-gKWUTK*VP@cI7Vc:PKM+L31nFK9%Em+`2jhr%@QNjNhPUi>q0dR;B(BJMF$I=+bk96Wl][75r`X1`'C3D9:[cO4:'oZIdrWLarF:UE4s+rROE>[7Uh&-^R`#'e9a$t(%o-abQ<dKo%Wq^FV\JAQ+gH-?Kn*\N>2cAH(U(<c;]kgM0*BL.IOV?o]&&V_,Zaqt_p4n#_dPlWBc5dRi6qZNQA;'gX&qdMe+[;m;oI"@lNiM/Q%dO2_onRp:e8sCS_c]+g7meb5tr5&O(*P+FU\0XJ.4R,GAH<,JKWd_07H7;&q;a37$jQ-Vqon,m-8sKdfH8Ltu"93u'&TuaOn:_R%%eZ4.<(!Oc1I.VkTIXY[jK-k#WT-)5ZBY2%%ZQXpMDFX\M&/JjCZ",$Dk;bbh'l\KkM@<`s(mAM1IRH"_lcVI1Kl2Pk5;tU]UisS<%Nu\)Q(YC1*,Cu8",-R*;i#2$0`6(/DTQNM?8b*O(V?^m#RS+b8%7DT7Vk,ihlYpGf;2k3=<MPQ<otakd;\E^WFcEtM>YUC;oXCE.%_bEU[amO+?ZJh@RnRR#[E8j!**EfD\\)X;JBFSE;ib7C0F65Jd&j2NX"fYh:",_nuIW?`#=TIjg`NiRrK.IUDh^o/hA1@Qm+Wg>/%gUB76^Cg0XNNd>X_n\Ak2[@4ArT"%Y()Vk`ek#pE+c%mCoac)Rfccp<^,_e7@!%2g,&,)Qfsg<5E_<ErS#d`2F$VS6R?8Oq"XR//%%*<(k#gDXG?pELn'P&bB30s,J-O7\q8jb\.a`R#hK@B8Dre<CmAKQPnjT/e8;D"1,,<o!1EYkWbp<d$Q`DIDNU:YjhTOFYN24CE7%.+En\Ds*%X2t#Dnm,ZB>0YXp?p$90sgA\p]c<AB1X9EB"I^2uq:@BK0()*9K'ojUHcR7/2Dqi?:lE;-J@]Cs/Pt)hc&>LlsY5Ohe%VI>>[;keXuI6N.SDgd_t4u_i/V(ZcT@am`]9b[C/@s"$%"9^m;\X@DV(4M:)&l\=D)@W9?Y17%Q`\%L)52)?U%6$IS@Jno[&*=\j%rON.gLHLbW:UdJPjXHlhl+te%m!6;)]j0f,2L<<a9pKXADpho'8Y2NML&shCS&AE'0DN*)`=d-:#u5?cQqo?B3*GB7UbuJEg/D$4%9P<Oc7\oUWNmdcX3_r!q?nu26N+G4T)2IYC.f"nec9'h'o:'u21i.6&WjIVm]C*)__5)C#T@BL5#=g7Q_R'OQ2\ukpYfjA!(it[C%qI\\2iUR>D<VFlt\N90Lm[c&@`r&2nY0i6C6$U!&)N+iti?ROVY3aKH4OpI`j`R+)JQV7g67e.(L`Ms'Kn`Yk0-G\5\WaX`'<p)%%2P!!,hoqDSr9(Du6^n>Nm>8<iWJ.,:@XRKj\;r%4`[;/kS^M*@?b=KfrFuDWejcOY6>!Goo%UpK/^IK/12#J>rqP3tjDoW0'c]cX%fr/c9Sla0Z16gd=mSXBO2KdYJ]+.0mEc"9-aK_6+7dA6+V11Uh9O3a3?_6M>93Pka!gfo4`N>e^`!90CbJ?R49EXfeLQrM9g)-TH%o*e#IY*LO`f%+J0*:?KM'KU/`eMQIL=A(YIog86c0$d"!-]YCV;SLEIC@]VKl,!YR'p]*a<EI>!jc:j#dlV1el%YTVG,Pf5+2S&J%Mmq\3)4<;2ea9H'mN5fmS/kDg$]1A3iJmL-H@_^%Mu2P6L"epGP:H,0EASD('o:i)X>?sunce4:[iO#+-+A`m2s9qZp]_\U9]$Al%F@5M_$;MkWQ(i%$DI:cSD'nt7DPuDK'@VU![Q/[nf'&Nr*XZ,>d?1.%8XK1SZ4(>e)2?@.jM=q5N9?MMl^9&bFsQ$hNCCl_*H%4A%:aF&gZuHLmEtEa(L`4X!kZ_#0SZ7n-\#&G^R$lbmWVtYLWJ/Q!IG:#N&$K9n<q`sRN*1]n[VaI'4dH8[>?h^r\1KmjcfRhhY%mCE%I2AGTZ9an81#!^V-\8b/D0C&]aB5?Ph1ecS4f+HKn^cH6g?7pRVkoqbXHVXA7dKMj[*@l:MG&9"<7EaVQ5F?mB@AUpZsncYeY.qa%G2KmGer!aAK/mN&9Gu'2.jO]*AAZ@nAE\3@)Y[:Bg%a[KC*keo)Hr)HbMts#S6%ou"1RmPff.ZNM0/FO@P(Ql3#tQGB@kaIrRLa0%id=bYb/F-De!\k(AhJA7fKVT?Il6V9\.cSaF]TEK)4AsuO%G+Pq<>.d4utbKSRP(oZi.<(B]8GA^:h-[S]JjO2l-)Klc@o[k&NMP%*V-$;F+)["Bj.MtE0j@`cpJAcaI$>]PhL$#!s>>@EH_gK5a\0+4f4bVd_7R(:=N=`1X"LnFAGI'I$8oQT6s[(iFaMRD`7"U@;)Ol%:.3RfPJc3ra3fW)VgB.p[GC5WgoU8BAl?6^\5e"4j`YiPZ'K].o8U2\Zg:7d]$c)4cIq/oI@SZqI=9>%36=@i0".%H,45YQQTM9n%$bdRf0-UF;p.$.L!BAlZ>8;J*kG"bc;k*VQ%An^?;$]48UT>QR\8p^]14HOC&gNB+Ga<_N-:gMO^IiuN:6*jP8II;_9H'M)j]R(]%Agoncg@:<fAp912j>,bJjj\OT58WH'V1#Ue!2(kI#.N(?Wm9DRD-o?Ig#3G8=-C\Dbu!XajbjPtXIE6r_qNl=V-2!]p;&XuFUQ/7%(8`j[RuD(N9BuLe$o.#WpK2,\>-sY7BJo[DV1I-9C2RqSL00_V*A'6f?Yn87-XA.31=BY/g:E)%gg-ES1X0(h-ekir[ZntoDFqOq%/?XgMlTiIKMJFAF7dANT*G[sSg/K[4))G0o2O03f+$3<f+4G*lV([-nRfZ:JXh$t4LM'nf`F-^I4j,FocQSYLqX"U5i2sl-aTP<*%XgpRWDkaJ/P(n3,(Y@;Klp.!:lfQ]hgoDZpf.PCX)g-$<mV^?LZo^Y'A9#S7StF.+XB2hl;JgK6gm*-lUOn]`\"!imc6*>205XEP%[Zl3h3S:d<rRLl2[cb\7P'@h#S+YmT\"%+eHF4ed4Q7?^_=20lBRYo=eF7j4o4+Uh27#FZgo!N&9W[\H@QIOE)QBrhYg)igBK0.6%*I7!01<Q3(dE+_"O7co><3g>RNA2qJPclI<,:@bPgEq5f89U$]i="K0*Gl=)_*43*ESG0M?&Y2rOlQ61cJ)9eUEo[fF64\(-G4.Y%:,N>m:YOHMIO]:+bh5^1,SMhChqHFpqMh:,R]3ip:8FF[ffPggGunl?Gbg4peP>kV4D)R5Ak3uJib>efqsp[#:TGN(Z?arWQWAAQ%\)M,0\$a6-9#W<ls-ONsWu^nq4DMjaC53]%Y#W-eZ*2K4lLn"&Hf3Qe.XCJHm+GEFbFpD:7jCWR7K(q7Cdbm.5Lap]UOHjMZu_\E%EMHH:l($6X^)U*b79e3^V*1Y$'p@;f61lgA1pm98I(pjOEUMC*EIY6BVs8mE*X[h*'$r>aeA87L3o/3=kp)3p&(K(EK;!<TT1!)G%84d9K,p>;n&Y@@oDf!I4k%mTXga46'Fth.dSR-:Y#=L)]d-TSE(jaXi$6+J[9q]%O!>:WbhJOTGi\N@%2j1"H5p"CdGO&i%FruLj%6c(o9Wp[gmVWO`t8Z*qn40(V[+$;O0??S0,eB>S,lqatTo[UmrO\..-LG&iiO83U!E"7'bCTWc'/91%5"duq=.tb7)5tS9D[8*uU%Kc5[6oH#NV/2:QkTONM"dWI/s+m<!p!7]f&:@+fYj=h@FC0NG$NYN=k>UJm"emp,kY*njL1-o>7@!6%)=Ca^@Akg0pnX@*09$Gk_%Y*,YUJ:l]nU?j6i9/6n;:OIS/GB@l@oL4,QPB7-M'B7*eNQ;7]Sla+Ojk>T[*"4S!b,?)Y2H4m@S_-\(-&X#T)[Xl2V)ep+Pu&u&%kS'VUHYE)'eVd^m!&o_EdFN#.XX+FU7C'%)YZ%J0e=(F%<\_DTptDNp=oP,15jZMJM,7>J-/htT,_jiiBqjFL\iia=O_)(>.g`U_%[V'$'eT.Wa_QH98;lQ!@AtF[E#(7,A<16nObkOm=C7ce,imoKNP08"OHWZD&;O7$>:o)Nk&!CNYh/>hNQ:l*Z[<3YM)HYA,o-hJr%A[W7-XTp5bGW'-WU/W0QQ4INM1'nU3ZRb2[[>_MknK,<.:Q_p%,ZHPM<\`)Zen-Y\AB^,>-=_?OCp_9dU"&Ue8:s`#eKuuEZ[Abg%fe+XA'WJH4K>'bqZ!mO2Bi%I!,S:54Z:/Vh-nVa4iR4,G<JrufDMq2D>ktjS^Gn'603XT0_kYGBB0bj`QT7-k>^"]AOrr=WL%enZ%:"-qTkiE&08FWeKLubHuiR!m!n_;e\GW*jb]a6O92a_dCigh/+IuY%,YAeqar4*d]PBaDi?C/<n(-'tnk="\j2BD<9%k.B143AU=%NN+&!4NF=_A'+n]a4p6<?[32"R(/#H%s6YtCu02MC.&A.o562F<BX1?4La5NE?6:ciL"quJY'WiV_1JY+Nu5u5I1[6LCNAM8k.gi%n`f%J'P8@D]PRLh3=m&ECXB[kB)YMk@oG)Vg@3RZ'`N,b!@ho<(Z3ltTuk1MUQbZ+/JBagA^q88^9Jg1_7%LE<Ue5V:<8V#Ru*m.%C*^NBq.;Xp[,BY9r8F$#CE1-S1P$0jB0J,NRT!rcSW2_[R@6OB^-7XN4#r7+`OG7?$L,I`3d@iFo0gT/Y=mj8rcD1]4?X-E6G+=<%'f%W[OaVKKQimbqN?jJ4pAC(<nfCC"iktrVGki>BclR?#.`8`Gr%6!Q85J#qaj3=/`O!_rYlE''\b-t`ni)gI0\f\Qqi;d&e@ok<%H0T!,</-mO+k\S+XBpo9DRn6QR-/R7K%h:_<Gb5e*u9pKAHbsq=BUkue>>S\4se[nTP"_dH9se*p0a89_TUg>FhF!?+G9n-W7f7^%miE_pmaPq"PKBV%G,%[3'"aT.W2IWP:DRk;VoR#LLDct*h]hI/N(Qs'r?7'ZK44g<a#/,,=4R:)$&DQ[T/^nAKM,E)Ic=QtdEIO[%haqElG)X_(JIspgb-``\U?C,QU)>78kt$.+[sY.1S($&#4bM\opm-Opl(,u5"tknX"J:LQlbkh]Db-UfU^qF../&o]>*!]aqCI6=%@SUno-8oDi"4b(OO/O2VM=QULF$%9:U,c:jUXY3l\NaC(_4[n+7%4VAj*oC`Ec-l3VFbV)R0,Gh05t4oM.oI*)@\d'TkMC/hn1W)%X)$8&<MALG3[PjGp]Ae1P]GkZ24rdOJ#Akf?f']&96KF-di[I>/hBCXWVg<fQZpjc_*[;seJnd/TYq-uo`6)%r;b%GUu'&PDW^gT%Vm<9\gqg@H[t#h[5=PN!8I'!PqIYod$[Jo`f<?jBk8M#UhZAk3P\Z4^&YN,\4F]p[.si,I4e*KRc]fZ$!A:;$06+V]o[H=b>?P7%%?&I10U[s[r^.e>V\=9WB+*+?ube\I7.R%uHVr)<;PUa_$W/l_c\3^XVj(K"H\dKfY\HYr/5P&q?@>h?3@[6>>+:i'`I\\34rDf6J%Mdgngq/lq@$A.k(k?jim.6H>WkR>kDHTaaPVFM=F$FVGll5q=\A;sRUqO4#si/lU+)^%@hG]mBq4#14B.,\Ic\q-/]HW95Hd"*=0%8T:o80]lW_7I=^EeEL=(QE7pe5NZnu)GA1)VPmW\ngm6h@aR3aJXRV%Dl4@k;_I<2LOELs#mfha:@YDm'X*.*:j#$U9"Ze-fSL$r%%/Rr'?TOjsJ$I>i(X!1-o'M5LS$.`K@61h>OLi$E#,H1J+AG2(g7->AG&.7#*CbMGqo*btN]?:X.BfcM$Xm^\H!38'+W!tGh/MWd%S?[,`c<'Gh;J4rHD!Pbnb^E>nQB@Uul%:"OV4<E?htP6\?AbIT5NVZ#IWh*+bOX)jS8tjPV<HZ@IiB)_nl!pMWpaOh4OXt+h6F\Z%bk[,XVEWDMoRnN1[3m,g!!+H<8P;,8JRROjLnX@TZ4K^u-15qhrUl<&BIjjfP`E2Obg9i=W&kN80K#VA>bG:J,fqh0VE!;nW3kDU%JZD^RmARDK9qa.ZM]J)6].%R\YI0B_X5+KO5Y@eMP12YOL6FFdSS$+Y>dM$'2pLnK%IHg.qr@pj?/6D?KR)'=GRJ4k!i*kgRC$_.%EB&+Q:bS0_d([6YR5nu\YrnabC97)>1<O3nGqRtjo'6q@hd;Gf#o&-UD4'\fPIVm>>/p4,n\eO;E8l[$'qb'68K-s>6Q-.6L\P!(%8aS&o79m.%B6=[@`L3BB-V]BW!f:]Nii-'ZK!N5s.nV12Ko>TD)OC1g9:[X*_%kQJh$TLYn8#DNA[K=N?C#;6,"a^!1ob$%;)N;9%0nHL?8k_bsk"_b<:-sr/"^l+>=MX8?0O\KW`IsZ??!4kb2k6nV^>,bq.dqIJ`c#@`e)@`=me%!h\4B\7%7J;n!RI^Mjep?K7dSPg%HV0#aN4,Mo"pl]9`e7jh'k=<k<Z5\Ka4G#[r&Pb[`hM%A_:]AL>lm'r9+Tp+&t/s9*[BL<*4)^%hN9_@K<cB8gSonsH;,$>''sMV%n;`n`@7#T-!I?/bf4Uj:XS,#+og5LM6.C>+@W3p`L-YmRC.kN0-S0AW.nBu"q\A4mp!#'7FWC"6-nts!JVeM(B'*.@V!,94+@`2*%ABaN0O>22?!?((N11hi0IQIU?8d"*U'+nqb%*k<,dP_uD@WZ@-r.:o,g!t=sTK*JQV"U]eP+sRbl?"GI8ODXjl3L]rMel.B,n9!'%V5$=jOnD]K3g9n9e[]\0gG3##CK<s],1BsY)3E+of^/N,r&Ci#p<N%7ZXJD?4A;B-:Pse.[<tOcSaPBo$"rii00R?I>%0Ol?.8<f%)p&7qG5CEZQUB2K:B(m=@tl%,aMtsbJVE`o3.jIc^?k#S/^M^e%1Gp*T$qrq(aGZu?HFEg25.T;#ZVCuDY]CE-1rF^hAoodA9CJO%.K\3N>YVn/NH:A/`Wd3]jb$]!iXg:D:Hh!d<IK<I))THN:TNdPA*5?%*':r9?8,REfXfpeGT!N$Q-InN(T2.2m>XsYjeBVE,]AX`%4lue-ha,,,ip'o2$)q`+0$p<T0B^r#J=,]bi=R`6igLaM-OJIn>k!EeA]AQ`Cb.hKCT1TkC7(BMLZ@.gG*]MR760BB3VC[8It)<U%FD%<dT&'dV`ZlkA@<$kgE6BQPruEOE=6GHc$(h%LNH0F8Sl`Uc3'RSX^ZQ8s&.]T0U^!?6'GA.qG6IHjrR!&U5p5R:Sr)?XWt6Nf%&e>Hac44J1`Bta'>Ul6YQeCoC_V+mbR.e('?^A,foj$YT7..2T+K.?5<@Q,eSh$d\nuu5_Q#>g7*Ur=EXj@:-pC$QQc\\9.q4Or*%'NYrU[NHiE94d3rcBEbqF8%SqVe.NkI?I/:q_$ougW)\GMm:quWD6Me](8k^22c@BTPAe%.ZBM%G(QaYq5MNaWa.SMeb&c=LV&Hl%W1'<M$HrG>$***ZR!)/bHl%&,/7$DtQNnOK2[S0[fC(4$+`s$k?PQ2Vg!B4h#Oc4'3:[SD,;CQ!7%HXm7"0e3FSWd.9]J0ZO)p_2%SBh'&C->S,X;B$UD"TUI3!AWP/FP-cSE!?[pPd%]E"3Or\2+be4S$:Vj;FZ\beZ="jT#4g*VYRUqN#j?.h5=MJirjfr)b4OhNFOM%4*f,^i]K9\S2kh0P8,6>.-AQMV:j)DlD-DW*qIJQSAUuAIp0A+-W^eDSGT@I,:DX^EIe,5J:.l[A%iL-7%Br9a;9bhUWsON+E1(!%(^(b[D8-47V&,uC;.gHm)Pq!P3[$r?+Lil"WGF^ZmM,G(6jPdG(V]Yc!eETZ&-rC?JNt=h#Qt3[5TgUD"9O->[##n(n=/nFiS$Zc%RihW3cgq"-%t9o.$%JQ\Sq8SOs6pipDW#I0If6&!8O)kA._gHop$hXh*VfU%m8\V;i"q+)rSk"V5Q"?]o)!(aLVBDTs2N*maq+%7%pql4.nD8B`+-osB[/9'4nK3O#?=3NdX,iiR48ACD?_R)u?\ggj?7XpB6h:BY,Mk$%J+ugg])UQ4T6o(8rl+efk:_12l%;LNUdP'V%iP59+^RTcjH0fp/htKA5;idIYigJee[iXNnjnamrQ@@t[<@VK#^]1sY:EP#Q,>..9QSom:O$E%0ceePom>'btAUo%!R/19Tb1W-<%s72q\s$rOhZ[_OMJ*p1^mP]Ob><i#A*teDA(hl(gG>LKD^Gu61aWk+'@'8GV"on@]DPqjW"/VU]=1\X/'Bjl9"*\$Hqj0Y,rT&I"%H2'k\'1TVo^q;MFRJ13oCM>u0lola;_a]T6`6gEVq>"rO/PX1,`aA96r=AnXiknm-dX03Pfjgf3IGj!gGjt\KSq$72kDKnb`CHQt%OP8XQY?l>pXiI&\GYH=Cf"3i\F7>GfRMPB/JPZIFINTROI.$rndco<;qI?6=CDcN(J&'Cr+/jCA/As'V+07YZrtG.aC0TYC\T[n<%kf+P>cOTsPqgYjD&FCZELf]>XpP`$2qu.,?hU_S=./_p<IspUU]pG?/3n],iqu]-;^G+>XZ4O2Js![_^^@Ef7s6a[)^?>EuO3/=;%I1>D94TAp`s7sf%Nr@_q\Ub4[XROd7^Xe]fIa3;'gI43k2=R`34p'a"_p>jmS+lr%ec+4]\aN+-([[/O@E\pc[mq\On]E!!XVJR!%D_(f[fTY)C>+';_\ObWtn.1(`"a8LX]")/?*+=%S;-Lj?^*+'T!:9Ph*VngC>K(kZH]m-;Sc(=JLBR=6oSP!6lU/"lJ%>$O]Vn!8%m6]M;$KX,Hn->Ne^CZ2rn94q`n@ekFbX98K+3e?c[DC"o^tsS1!I+[O&?cLS^0<79:NF'$l8o)TJ3Ugs`7*WncG4a"k^AYk3<Y^"%H'_nq2["L/rk&HJjKlaMI0S846[e[JCY4j+0%=YY^^oAH;q'5J]]?E:H?f]q0<k)FD0b$WCY4j+/u5oRYC5p=oIl`Foc!<<c490j%)-FQRfK\jKGV+9*gBEiApQltHi5\dFdOi+tZbmj]%'3c%g)KgimsBP$I!A@uLHY>K=M;^i)R"77f><<pG]q_LSUpGJGV*se.:*B(%?K9^IO)YBT;rP.*=f6KRI!EnKLNWJ&XJ`pNOL&i_2=TQ^T,lM-1U*G`Y<gIFJX=Z;GN%nmDOl@OP^)G5eh+OF5.jO$LNRnIel1TT%b?6doP54T"SK6;G)-B[oQRle*`(T40]6JL$]4YM7#J="rlS`'!+5XuC_qI6UlT*n"b#u4D')D#LT,lMJ)-G2g02^"9"##cIn+,.?%Xe(+:>jrBflnS"Xpjd"4^!&?qQR6@+KpT^_4?H5fSMRLA'4-il4XOJJ+7SVN"YX^'gIm^9a2CX0".gOa#dZ=kSg.R!S38c:$6Sd(%YXZ8N+/G5IB9/%=^]ut`bT&:Ta7^h#=YK7Wq!a`t%XSVsKJOl[Jt2K8c^bTMmHh'tJ92"HF$:fTl]C'co0GDVm^8Q*p6^@dTDjVe%s7rLhVS`hg=jD>MkKF1@qspST*<pn>MZ:G^I/'u8IK0+K(]'Z`XI"0lI/)e$:YtuVabLs_.[b_Mo!\udn)Uqj%mLD4pesENkMLV]%k?#B.^3119M%:^N0J<Jar?dYri=BpB],`02GCc>m$%1P)o#Xgo6h-]-lm_I0pos^^;b@GQSamEEP?n=55P,VRVm,p=pQ=s@Zof-b%HYPZ#+8fIOddqp<Nm]lc]r*.;<<Dla_AQ^rhgZ4:^V15+kahiO/SEB5:W3R;pKrsYlRtR'E,Wfjg?\_NnUmJ6`d@_rr;Z^6nG=jI%rPJH(J$6=cSPe8]HHc\nB;fai(X<3b3C*3HJWHSp_4;1Rs'D;'K_i^890Pn\CJ`nbmtdkDS7bFVA(MeL-GLqukkUpd1%^&.PAp7!%WE71,n>j+?c447ri3W=0rBL$:W#+(sriOL.+"].q2hoB6"4SFB,NJmuqC_YU5A.bP4F]H^qqheSo[h-4ou"i&(P_e+n/-P'qLX$G%[%SOJbFM8/*CCp.^'Aj"6bWHn2h/E>BqrBsFINe;:QQpQ)q5thj^I+@)t/3!pL4'5HOgM?g:N7=`m?;$d!L.3rBNM3I3Do\55UKB%ONPU.cTJ^!h<T^i`m?.VTH9ai+<@C&`9Y:\msk8l?h=713];N[)ql;OTY<.fb6Qren/pMBqKU<"=,>-&kJtAdX&.^RdD0+)H0u(5%NM0?9!2';X^jer=OFdGhr:%`JM_r@.`:t-]hh1NkU&NBPp=AqaW,E*HnDWGDf/3IKY!'^Rmtc0(d[bKp^\eXn]6ftIoo6ct++Tuu%^[_qd\A2_[!W_sZ_OYck(V`$1s*a9i4to3i&+tpuM@[KeBohSP+8kTaJ'%G#+s%8%q;A=B_-%6j-ZCF$8"][W+V*cVK+T2U?dHQD%"7`\TrKsACXFo<`IH)\4cVWL9oR(mY5)P/_M9W4D1#LsWLLg7F'cMi'`ZXdpq8qX&o>*r0D#DCnrAc?7^Qj'=(?uikaH'tZ`XLkg%j,9Q,id3AG!qHN/r9lE!4==j%p)MCT6bFK<_s%.!A_;e1e9!f!rn#YPlSmi7hgB0"&?d1[0+;[o]6\Yh]ORLu+52&EU)3Us8,g^o%4)Y2tq#A9nr7Rtp"7_E1O*2R"5OkL5o@.=C'\#WimpY1Sks2n.JFrqVj5-'s!pL1'\5NQ^GRD7_^jjQ+p,h50ni)!3rm<r'^!&Pl%&?c1a+1eGrn,N=4;j6dNE.*1cQIGf[n5GO&GfT?`I)#J3gu\.WF?Co.%ZFcQJ*20MRLTH%k/G11B0KIHC/Q)VE+d>*1epJ%J&"/m%bZ?tc*KL6R3stkm&;]KPBEMXJmPU^3NIUu!?"ZPfDnLb8a'4,%O(Re&HV[?C!au?oX7U=TJ*g6@ORun>rlU#r>NTA`WTcYjbV8hN%#]14roDX>J!7&lAEo=XDM!'e*'Roe7^G5WT,>V$(-\/fai/GaTV?;B_L/6\+KXM=Coe's)#8EjRn&do.'`=3]0>7\c[m)_jmGPSq%&(CPEhd:YD1(X`GJ?oEPNIWg,?4q.*n4ullnSA?H97q?;OO9JBcOk-b4OC_7Q0_G5Jj?\sIkgu]q74n&q"^hb_[bV[aPU9J^^3TN%MoFmM*,RLiNf`E43"Hnj`,d.80-,NqprB$)qUEF7T:-6?r(dt:h[emB5;aGe7&PQ\F_Ek.lb,""n!TpB_--13`+o@dpMBe:ii2/r%!o1oj*tS;$3$F-'21W:CTa`GurVicfd6P:$X499Z&W#V1K<JO;lN>IC47hXW5G/8L6:;r&,Q?6QKC:H&s4n3WRL[,_3rImMs80tM%r);'q5Wfh?h>q:gIdlsdGZ$T:rkT+C3eT.SSs0]fij&$sOam<U\GPkHC&#`RJ,@cG'`BstGtJtdLgC)Lr.ML)r.W6?aZo97Pii#E%+$Aj85m3otJ@i\upQ^L]\^UuSYQ"tt^OQu\Lj'&BIlt(m(Z0_sdsTKVG!kl?qs+j_)F2o#.Jo9g?iE<i-i"nscOJ7!KYD"No(q%U%T7?kO<Zf2la:!QDNX1'Z3,N_E%coDGHR#/'NWt&Z0)1_%J+kh1U\HS8J:"``md\?A"+b\'OOg$!Nut:##<m"N@>u:YGV8d;L]5R(%Yh/1qdO+4=rFO;.4c;I6#fLe7[!2<7X1>C1qqUm9,7r0)i2b=$h\aH?kj@!:h3IUDLt;k#8Hn#$DPZsSrBL%emqt8GKHpV-!]Y6%%g8$C:hq;%>kmW?hmn%VX1'HTZih&t/I/WMhrXVLHC&Clm]:]#toYV2^M^ASd[Gls+r$H9Mi%2Qbn5@Qi6Qhs.rp%QXJ,Wg#5E)u@%mRoTN(4g]?J2>QGNS=7"8PANcZnp2DM!"iLl_B`W1Sd*!m_84TO%U;knO`h+>/B#qG4:[`^d908"5qHoBX8]I>>J>7oK+*+M!'BI%R!JJc?PItXMcOh(_]?`&`,i`'54>:af?d$_L<g)h*21\%*WgoV*.ND'=$QWGR0U4KZen>=o`#BhYMk4H"JSQaq#-7f)n,<c4.>Z8%05]2-07<0q:IH'%nN-4)O8Klq>O!p;%H.QqUAO_\SVPEbr92JRn*h-B5;>_8`2c>hP?$:c!<0iR"9S+<poVKP[si8[Jc"iq_iHr<%/I9:1LNNPLr'__>Nt;3%#m,[&4J9D3&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\%]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822%)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP%4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8%+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$%"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=%!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDKTY;Q\]`[O=!ms*&^*+'$"6pg,d6"#8+V;<hl5KfP4.s;2&A822)ZnDK%TY;Q\#Qt3[5TgUD"9O->+:ne]!eEU!?T]GB#Qt3[5TgUD"9O->+:ne]!eETZ&-rC?JNt=h#Qt3[5TgUD"9O->+:ne]!eETZ&-rC?%JNt=h#Qt3[5TgUD"9O->+:ne]!eETZ&-rC?JNt=h#Qt3[5TgUD"9O->+:ne]!eETZ&-rC?JNt=h#Qt3[5TgUD"9O->+:ne]!eETZ%&-rC?JNt=h#Qt3[5TgUD"9O->+:ne]!eETZ&-rC?JNt=h#Qt3[5TgUD"9O->khpW^9=\$1SosDG45B@[cl)YmRB>$2<QD+lF2f_j%5WIm6nNt/3j9%S0b(lOsNaS+C$%Z2D$!UHI6@k4O((Ec*R/F*,<]!?cfl?E3F-IX`NgOn?j4rO5gl\Zsaaa05(ZGS\P!a1@3dDgf%Ku;2S4-+tW:'_)qih$n0R<&MALeig2"_WW!q8,HL#__c#:C'Cac<r3i$Us"`&h=`TOT:Ce-9)+4LbBa)6tehZ#R6fcN^,G\$cJbb%EfB`]K-:jX'(U#CSeO.",I%:N&jkFc&Rn(3e/&LJk^-_N/'@D-&0E3TPAHqsJLDU_L4l3Q'GF#.,j#Ji"VO<2OGruPc&X+gjF\^O%n3qr6&><"k"h5C@SI^lc6Hn+b\tih/`M*?@;33"2JkSMIYV3lbMut?m-l8UX^kEuF1DgDoG_$!Z'Z6Uu.8rM$Kqj`F1dn?u(C3UK%!)FF:q1]!c5WB&"(%ap=;!4OF0,iu)KQSGF1e&rK(adJgK4-0#,XP*5r/F*mHl+gcOP#5-5^+VMGnT`UZ#GYd2F=>N7RbTk!Wg/h%@*BDr`F@+XPgg[C,UX9Pq1hN?%>E7b!/_j!+UaE#GS1Q21m?o$]/`dX:ed`h8F_t,&<X^MKLkQO6m@<j<(Sc1.Y-"^#p\+mT]Sfh%K/(5-<<t#l@>X-[:lOlq&lkd2KLcfumn%VapZ0h\`.gk63u&*e&:OA;NZ-jVd0ibWWWYH)q'*'\aXonoieck3*Y@"c`1j99AL1$H%L%;ir=OA8)7Vs0VGOWll+_4<K%c2IuC6TrPb*16XM7A55+H*8(O=q.fM?4s;0MqlWM1Bo6!'V5B1.>rG,PhDW5r]\rM!.2C&MPR8%O;@sT+;BY%1k^^V'EYHMIYS"KFY"`#;)*'V:kT*e0VHZBiX5oW.[!=f+<$9=W)c7'ZE`$B0VZp&V^eBj0,>3Xfb*$NLI38N,#(JQ%Jm?g)U78AL&f&om'13U86lr:9M/8>Q;OFHEVf5n88mPASnqO_K3o5t0:!pGl999B%Opf:J=r"qG^4O-/5>T4c=+qB'==>(aJfl0U%">^E/*"d<3&e21A$P?Q;&ekpEX:.FG]MCnHTNP+^(blr_OFZnn'ZNS\85_cZ:n&9A"bYf-,"2Pfl7ka?,FSagpkVjK1,1&RQ>83k%=WKtV+!^&TUg\Y0@g2!TT#ki:eI\tld'c7-a!+oMV%=suNNiNdcfcRM4%)Fqg8mV\,(YOuP7]FcBFpgS,6;iHLHqRV7#2%L77@MC%ibLXm%+4A'__c@BeTo<LT^nZo&e0Q6f>O<n1#4SXR[=YkrQn$5Z6O3V,V!@Q&etV7ce]?"%`>'7\o_At$=;/!OU#;=pnHo(K0cC)%0qK&h)%?e8&>hJH!0KJl(=Yu&.]1K]"LSFF_[mrTCMK99Ck2-Y==s,25RCnbbdn-Z(h?0`#Z2?MiaOH,#`BkR&2.1s-m^)&'DND#%F4"rcAOsBm@;SPcaM.;<*#9-R:rt-i8Hil#$\Eo7pLL:Ud7D'PTq!UA\p-%SBj^t-M/=*_O]hd!aeQ[#P6*qhbW[bW&R#J`"q`Qd%j9p'oW#-)gBF$160V%\>ZnY+YM.:]na8ne%815)`<$n/hn3J\.1&Rij'&g^?3YjG(!APahB)rtoQ*Le&5):=Q*=rC&&/%<#M))rc%!?+4L91n0+NTFH39kB\l,A9W$=<>Tkq0b!!aMMU3cn,U/>f3fp;ooj]Q5un5KNLd4%guhiBl,YIqZ"$KY!JKsjaH%`8n&$>FTVpn%L<JkbiH4hYdsZlP8:qT_Xi*r>KH3CD70_Ei)3DYq3(78rKi=\8$H.*;NpV]qCa[5fO=G'V=,\/0JsB.tN+6?3OJmOuV48(!MT[)>%WAjc\qOBaU,I'?-^?<2Rs/1J%H01XbVk<CTn(jn-VijQ<U.(`H<br,"(j0'KdZ=]<X`SD3fjhO)87<I:'Tt"+B!j&KZ^"Hp68$-P%BS-H;6u2G&eiS.,=K8rq?)gNF&lOch"PP90i"XqK8kC*gA=QMRPM_k&[B"0;-!R?;)Tf-7$cm4/S&D?N99J0_5)%g-nl'2''hR4R%`EfD4P'*jXBOi&6e\S<)=Di1XO$P=[)MY]nH'$s91_qe_.DlTVB<L&NhkD!q!=^?t\ah2Ic:MU#Rpj-)*V`)3[1,kf:ZYQI9%bQ!%];'`q8D:Z#cChJ-mno">D(=cS[C)@(IFG-E\l;F(c."q5@g0b1Q-AN!.'$SC=ka?7jWk4F`D-"kh.eX@AO2M#h5/?:=l?YEBhaiY%[Ftc6Q&Ft+Hf=+k\dGDmhpAlpdN0TZBeQ5XW&[D$^"-l;Q)c['1mP)Y@m1h.U_0i0S9fdQ#Ce0WKA*>j!]?pYg:h:MVkSA03@+&q%Op\r\A#[\oHSi`YU?Y]T5,RbEYB&oD=%Y;loNi^4<:^eIV2QS4/`KF"-IcA^;m",`6G6]=:0unJ14:X7oX/5Jr[G-OY*M0fRO#V,%NQ,V;2:[#\<`EX:V,:X4IX:GT*Rud-W;o@'\FqLbgb7=n.gGB/Uu3._HPNnVOYI/ba=A^1To*TDBXF\"7ccDR2r]j'&Pg@87Ca4=%`8"pdLJfU]O&e=sBhV$[>,m404?fbs6>.YElY&0;7b^R?PP6Frath*;e;gbc,an7!]XVs(jJQ`/7,fTuKqp@HV6$im]qh4[=W04g%ehbbLPUk?Xj%Hu4#ZWqO7WPpm+nrRM((i,f,S4J.=L<F0qE%lbS/E)ZXi<9BlqG+d<+0it/-Y.F^TK?6iaagnb?31RIBsRdC7P]V%P!ZNj""TLEeG?I=\iqqTW4#?(Sc,jX\OaEI18GUW4,bhP-s\H'=fKnIMALGn>A48!jKW6Z.m]cbl""!LMliGfk4UT7D`)WS/]]Xb%%DA%@,fq<u8Q0=VPNELfUH+6`Ue>_W'>kLbWUYl03YN<%8Nmi7CK;1L@u4`D/OQ<Xj#\-$nPTg:ZF#S5#*r+hTgY'rG+^;o5?p:W%$r,6M75`JlSuCI'5o[:9L7Gehf*;=6X`q\HJuegr1.`gHThq70ZpF7bZFN?1VnI-fSBe\]ojLD)>3kH[[`,O/i,V7C,RJ<9<(W6\%@T8%m$8ZdP+%d<Vq]lKaC!q:lZ]J]"%:h>U3QdG27F#8[=6ih$WE%(ueMCtn3ErAA-(@7`jDr\l;VgItHVc.!4;oG9DPL)kh68.-%,Q1mqS\$.^C[H"BccW0:Wt"/Q9p0IF\a5S/=btVd.@REi%^.`r%-hT*P#f^3-/*XH.;>68,dD@CH1_nD;P1d?V9C9`pDTV;@8Rs:%o0YtO`Di=2Pm"4f=X(%P'=U,9I2b&>=p/]Eh1Ri=qAN/"8Jdj9SKtT]P?YYm`&'Kc:6l)GNBCcpN0CiC7cVrH%]RB5d=!sUQ\*gI%g+cC`$F+0BE3s*rUk]thb?;s2%\&Q#74,OV4u_SoFDq&J3T[Ic4@B9+SXbfC*0m(b"l)b4U10Tm9+MK;87H>/,tuf>,h+_C!EN&p%JC>(Xk6aj43hAMFG.hi">#TABQ_?%Ff<?0]![CjNZ"b2_Yb[006gK:Gomohd.uQM![)ubpb)J\tWRfG*3fUL].C@[kVat$pj[pJ*%/Q^"k'puQ<lGT5Eq4M8XG.43)_H>6la&5^[LR^4[HBoGK;cj[69"8F@2!jqEQcOM+[-d@^3]4^jOLUK4LokR.)="#_:SDt[iRD`4%:o.)rmm7AWD.N2bcd;A@nmB:UO\+]*es6b>X!WDl3[N5(Z"6K4?J>_RUj.!pS(&L)l4AV,FnL,:`C:JI\[IjOHgM"j*d%u^RV[jN%"6(&f.f3Qt/HDo3V%.&lTGB(.7S2#Fm6Z1![;/Mh9jZ"91$SmK'kg"#,W_.M8aC[NBi52)%,/o$M<mbrkWDA;'A5sCHJHJ\,k8F3%.l5j(n[2??3g3:4<i]>jac7^G--p*4,d)KtPOV=i),O<Dj2s12]gd8o]@T)>AbTp)Vm9ftCOMIbZ&Hq0]Lfe_G2+'`b25,<flbhr%A1l34fCFm/BUk+BpRKf4`!.[.&>PLFA]o8^FQW$km]reVRkp@$@f>5aPGQJr-Y7'Aj"V(2bGaO.MQMPMAbN6gH<p2YCTVSl2,i,1%PJM^2F</sq,sX)JCKu-5jtrudBIL^2)=s;!>rhT&DYcF0l%YhQojhXeS6\kIAR0SfX;uU;:h:b%g_Y=#[<;!Z8(_@-@Cq^KeIQ6R%KPo#^j^9Y%a]_]FQam%./<f'k"B<ph\@Nm9C"*mA:?u/0qm?%85(qDiLVae7=Cu9eZ?S0AR)YRMo[(q#AJIP`[:1`:YBdi^P#2Lr%[$EJP80<^-XcLSI0<$k#ofJ/F*9tu&Qhhun(;dZ\mUZ:M7NYgK\3Y*qD-aN&$[De"05clikmB^_gdlk!1rL)r/8gOp3!ik+2bHYJ%g_e+WEMEq6(,sD2o&<-<Pq6g;R`j\[RD->FEE_\Mj/3Ei,qhrsERS7;Eo,i^9gh#mFgo;UA6'U0Q*J8PR9cT@,8(jMEC,7\oHfo`%H(*15ns$7u%G'\93_>DSE[bd<ARQ-J)e_+2O"UqkA:$h?<0GcMT.6EXNKs5pGq.Juc(M?oQME#Mi_>SlolK=K[:*&ud%ThB>I11P%d<S8S9HhJ+/k'TB1)M`O+'EO??7!jM?L++YVe%SW-5KLZ6Y..5[uAH6)6^?_`f2h(>s;)o`7n_7e!+CtQFY3i;f4"gPcd<d;etF[%qB.'(_iQW;<uX*BGFIr9r;&Zsf@K8?`&Z[e1p@";#+;Wto`i\bpY!p6he-!@ZHH$9Lp9;JXY5rb:*st54O7Ui,Kn(Y<N>?WJ^0EI%Ve*$6%a_@4m6YP.q=n,f>@C2RA1*/<RYI266^d\ufTX8<n?4R2,p^Tb^IHcr8J\?fYA)CGKHtj@)iPM')Ap%l,4Dp'PRl/*3E(Zr%"KjJsf^^Yl?7-t'R6p@/_Pu9p.qJTbLLdMDX:NW%UTF_iC5SApH$Q*7EhA("fthADU.sYN;b7/1ZgX'mWcfTHKisR@R<bK[3D+(M%38+VR`MRcaht&2@$.`(+W[\PVBfdF@5S@5Qj*@[F+4&1$d):aj2+LU*j,>Q9WM-<%XW#:!K1H$J<KJ@=X3$"=+HsL-\e+JA!h(\`%)bAp1HdOr@P452]-_\uEVMl?Se4l^eeiU$1;^5=5M8,mOS<?!J<L3KP2*[ohA'2)H-/'@G4LlZ><O2TsXX7tVN7+UL8a9bQhFcJ0%>g.fpkp\4hX\AIfNCE.B,V`.Bik%Jl69C%:Q`>6gHn'fJ'&,rJU#rKXon6kG8[9=A9B0mChq;111TB,HP=07/$<_5J7OOUcra_NG%cT8=9PVljS6-d*lD\/u%]Oc^BFZBuNQBA$GSA*!iD7GoU/S6N^"!hSoSXUnhIs!E,/Ea^2SW"T*CS%G4Ya.:P3fgX[h<#Wm>-U]"%eXFpmC%Dd.:m@-coAj^299'R9ed.6r*_kWb?'@5(`O;t3o"L)ELmlFpffQ>2?0]^L_e4=GND]U9Pt^l9]XabNUK!a`A`XfmRo[dC%>V3?Sh0Q&$C)`u>M)I3V_[>5C>juHm4E^A3gYUu?L3h,:(hN%&j(ks$Q\r#VWIIiDs7m\SN^sK?#P2P%%RV"#>MAaY[8UM8Q!h-'%V86j%p^qdQ)##hp]d`hQG1)b8#'H#O+5P&0U?f7X0$\(Xg/GCOV3"1B2Xn`L;W_3S8P`7be-s\l:WnqkXmBu-Be%&A(PQC+,YcNP%2O,o?g*DN?3kLX4/>9PIG,+o3W/?XgOFlnH.Urk9m0TUa<8istFF'8d:7]$F1+IQ59'n2RdHj//C_7a`+#pF.HECkV>j5LiBMO`p%[;HV@oOWk]7BFj#-$JRkagNa0lR^oWeE'<#pM"o>fC8#Xe5`[sXg>N<1R1BkW]/]:o1&S5SSUr0<.I%J8K9CAOG*=&P9e[bU9Ea&%9GZ0DMCMf:+\<o8jt2J0n!3O?HAV7i64Uk4<-=Jrn5^NSWRJku+Sp4!F8J!h(J?ZE17_u(LGE3*VOV<M0;6!S8NCuTDlTJ:f$_U\%&h1_r5:%=?hT]EN9R>WrE=0=DrY`*egl!Mc=Y6k@m50HsgN_B(;m,`;$[Sl$(7o-R>b)Z8.Oij&CEh`CO^IEBFbmU4K*.in?]uk*%.CS;MVNuZ+SOt^J)RP\P=slm\7EX'I/aYG1Mb*]>V3Xq]@n2:r87FoT/P5u`'(H`O\,*"+?/;FT+o4L8fCeknIj=?dZdas'Rk>C1%al-(&?7I0k'</T<'#U0dem_gL,)I(SP&^MgA21)#F!X85Ra)BH;/OpCGjk#BQmR,8N%E>d%?2p>'YKb^U/ROEHB:+PCnC(g_[WKB%-IiS@'`_E^H^nZ[msp=HAa=YJL86TOclB!fFh'X"TTB#4G2A(Si=3T:QL7sYMl2k3H7hWlmqGXsC55SbZlt8.MX8#W%^^1kdd88^%=5ln@*?@qVA5r1mDq[KI'#PsKS@Zrc;LGdN+_e!<^0fF1ZRq%G=LQ1(CTQ$sgu/rQC,lcf7XqGC(KZ[F4&'B']5!RV9&@[s=PjN4%Mt(u9U9,O_E_jAra>[;/e9'o)%hSt^:OJDH_TOojRhS^KAZI[$>A3j!&M<Qh`S#PdB-^u&o%Fd(_:+,>D0BIa&P9L)S0d`4.M#t_%<32R^+giMej',EjRT<d2[;g#.Bs5\_[[_?l,d,:pFg;Q/IF"hu!c=7_kkKN2=WhIK7&NkO]]ZgX,-13V,-$6?G:?[T-\n[(BO[a)%&GQ5A<Sb#fJL$8f]3Y*TH0<mI,N*8\6#4W@CeBB7f?u]i;0\8dQ0(E52.J/e\M6Ag0\Ng&9t`DY+ecjfdkuiM/4EY3;nOC%'r,1F%>O%r?G?&BQX*`!g[Z7`Kn"$8fYB/B@@o6<c=_,1o5F(L;g>jJ%M1*jo6@tN@4e)hd2CMF;(I#&n9$?b;dl_W[ca7RflCsO^b,,B!%4LLEMnTkP7Nu1DSGtW8U4k0nn5HT2V:9pnJROsNM,G-[5DeX@DlHEU<Bgpj7e3?AR\.:SBa-+TmU(TuJ8A9hmZWg!]dV4:WnV)W0%-gunNQFqIg8/DmrpuK&8HrO]mR1AJg$@.`gC!L$nbOfA&*5$'g.ir.]R2eu(`cPNs1YJ.33`;pe@WBL'<h#gJ/a*!0BpWWdVoKi3%A[Gmk8aRI=K,9ROBQocgF!m1i2>9nGF/Xdf2l)PZ>96_=Z>0$2jM@]E]jqJM,0Ma5.XBlZ?9T*V.bZp4BKQ=9d95<j:GOr`6ldIl%HqLru(=SaV,`sH#a>GJnMe3+!\S3Q(gX,;JoZ)2td6Nl<7jk(WSoJ6'[a@R%:J?q)2eu5*b$cG+fudFaU6BUHD8BBBELU2o[.ifY%0)U)^[=9OEP(O/J#,RdSY9n5+gW:?o;0.nQWqenIQ>K4_4@,BH,Y=aTI5;_^Ega3[M:9A:<*!.[,iak<<7]/I6DNpJ.B%&8(0T/:%XZ/if9N+f$V2WWRb2p^M9&A)2=f8\e6)oSjE@`7XkQ[VR[O!\hW.2/,n6O[II]kT$7T8(*+H"^VnriA-i1u%"TM'/O':T[:WS..#%3nnfbWVm3i233WJYs`W&V[WkkSn6]f1G\1:mq,^:PUt!=d-l?7,HJp2%QcKSadQ$EL$AjOV&(sl.i5LWqikYWd[h2Yl.M7q+\VKG%.#a=)YTdL*g"`9mdiLN?%@9dq70Q3e2dBPiYf/BNs49]W#@hLsPGar7HkC:R-:u1g)d10D*DR8^71rr*ja)hgi)5`?1Q^^RE^2C\%gIFbZiECY(PqkDTfINQ"Zqm8c2G5ju"f.@P?B1Jpjh34f*dU"Tcc6<iL?$s=L'D7L[UY:RM1"rneN2$tRJ`AZo^s5@3\aV26:.m'%ChU0BWDplZrdp2"dU=EXccE`5g*W<*)j0Za!Kq]!nYH/UBuLLSeo&5R/?h[bplWjc)1G,BYIOSoMZThAXW;5DaEt3/^3lpi\bkaT%k^CEc8K=4db\D5cK'*tSI>WeOgn3`s<$>sdb'kc!dB&j&PE:#R,>7SR#'*=pFm;ZWW9G4<6@%jOqT!,+UGHVss$ec;opRVT;$VeM%HW?c0AYI?.^221+Dk(tZqPTk=&ATIZn;,4cc3-=F5jqi=nB0c@.U$rK!-`)/Ra_?0&h9BBC\^_+Q=6guVM\!+c@n\k3Wr0%[f`N_%rBQjm^s^rG\\8F+95h2t+[2p>KO0f[[/=6rWP95m[G6u7j0NJ$<@HI>S^(O.dj;*!jE^oMQ!>JRZCnT_PhB5-PKoG2_r3_VGXdK!%ip6OQ<]>bs/3:=)U8=D0r>\SM4,1?(V%cnA[Tbp?k?[t(BZIWD_q8YKGc=PA6Zl!;&l.0C%b3Sio/.O;0ZL;_e$-O0Ct-*fY,6hN%Fi`$Ggm*n'XLX=bE1<5AQr]O-:[rcegLE0e1M[YHnYkcd2Q^jX0=nZ8M$tK?/>!:+Bh+O#?]mf^O(2td=q<Z3'ls2fo:K_r?lPT)%"r;:i.;t$-f6jV$.T^[c=OE*81*WO5aBh]b7,R-1-RpIDl.B$U[[1j9b\3OqF4GB`.edUfY*pW0ddF-Z$dd;(9'^McX!WZ4\VfDG%;(9ogl;GVXen%*%@pR*?B<4asAB)2W>:-Gp[,hU03q*p.Vm]\Cg:Eg>-AcSf&U9HqD)Ih?-^iR0Sg`=RPPdEmV'%.1+ChaB!K$'`%kg[>C:6Gp[hNC`Il<#6ucH!F"\XmB;P!7#h.5SP]8S+)]MTEM:.>flF6UfBo;5?0GY$Fa9ja",<)q`V:7%W-dLB$=8?0*P3dCcm7%.[bHOM0iu[?g2O1S*i0qJnh5)X7EVT9dTLu5t/+(4GV\5$7dsEorfqDI*f7kV+k[K@USo^:H%=Il%UWm#1E(O.p$HiP$A\.R?X$^%+>$J[CgFmC<RT;uBWWSj86]0hK:YgjbC64g=8sTV:dQ&0NaW,1j9=%>cUN7E>uD"qQekUe<[e)Jb8&E9oCaYJ()0qf/er*D-(g4U%FfT.8ca0]Td-*eH(,RF3mW8(2*?Al#]#;Dm)VrNG@R6c']!VTBcU`X77VSu86";%b'oc,BFTQVLZD(49Q<,n8SRb0ae6>s1b1,Mf%NRO=mh,RYR5.+BBcen?>?e:47Y+YG=SZHHA93`caBeig`"4l&g"JcWX8`jgYbc7i;jF[eK3u"&cHH:f]<^nDS\mT?f4YdsfI\B[h%dQF!%/R"?gB3fQ+Z=(#C5aH8lbjq!BpEE2In/=3gTR/as+Qc,C:/-o@N-CVQ;NfL5b/>]>87K%`^22V#W@e]B`OgLY/V@d.YXgV$%Tk9DR=]B![Q5)<T7_:Nh:)Gu336693K8aZ0bHr*TF*+6$[)6^X[Utoo[#`Xj@:YAa6li3OgDihndh&t3G84p(9u+&#^?6=0I*[B<%):>M3B3/-@cVgNN/PAYUGZ4H8B'g`$ZfT@)Z@,BJ,Ss(t-)XM]@U0MC@nZR\8[gq8J`f]f=]'7KZn]rB]uM^jFc5]d&!J9b$uf5&%<dJAjYKf_XgC_%YT-Uu),4364U9-p7j!LW386V]B[bOmu.S57nC+X:/RC:mS7_0#Ta$FL/A;qUGMMU)IC_!!]2Rn;F8LDWsSY@A9%<KWSFO:sa<aUk*N85*)SVtM]bP"[:sQ@(/\QeP0eACZu_kfH.\6T81/4=QTT40p,j+krZU$*nMdF[mq#)3%7a0[ou\hXqN/<R-bm%:[njuKO.6EV<&s/9p0.IlH6fq42Jqb-FE>`S&B"?E?LGkJ<8sVkbq.FF3s41<2W/p^,qBd^<rkR*"PW8;(FRdm]C_>k&fe7L6e1a%Cn:E9F:fa70;Rr_]Tb97+.+=D*0SC+]QH!]j`t(2'G]qEAX[-e:Hhn$96Qo9qGJ>JX_a0a,kROj>u\dA7Ljk`!?!>6KBS8qNtk8e%1=&lIhFW+(<aEkdl?u30G,uJLdJ4*.9m,IM5MURYGHJmR;ci-V[(QdWLH6r.!Hkj;,4"UO.9,Al._S".\g9>I<g@j,HJXh%[nIRC%'WZ)\cY:)ZAE[Q./2MC%5URc_c_@^u[K*RcI#fOe%)BT=A1lF+,3([EP0cEQj`Iop:f9r9Tp-F$Y:2i%M]0e6;E(B$pH#E+g(HWs%]],LYAboN7=dEoiSK,f#@('Z/39eu!Xu'-Q&hCNRoF@IWh*1<a.ZqT\r@,X^2d&BJ8ZQ\bV^;PIL!*J2"ii]?P!hr.XXdAMfL@nl%mJ.ldFAFIT$8RpjJ7TBqEi0][]%8tLGIHQiQ-m!:DS6<GYLb44UC/rTT'US,Z=)=c9soC48/uJ6Y8_nleVEoP@Bkrkf]WCS=tLWF%PuJrf@qhXEGfn-2-4ZP8+%=K&5p)N!lXb/BS$-)Z2[u)_Pt;I,Hdp/._Y\jcii.]+'!!t\g*h"OjM-*$/F@)V:@tRNdQj*T+Uf[)%Xs=NgHu?>#akL6?I+C^Bl?&1@m%rS*h1O4^A93Me@,$DjX#Hl$4r,YQ09XN_c@pu_N08q,C<WN)RlVKeGK3>+bVgXcUYIuN`PA]H%U+F(r<I0`5cp>XCMGZeY@J<QoBMpK]6`NT'd&(H4:X53WVD!*m7J"Qc:-:DAC/-RG<j/Igd^QbSR_(.]QKF5HBbI-YUC0=T>9]fm%Q:/%!aO8@^hb$%K\9;e$@ZB[d,9%sY<D?PmEr"(/EJmkK[b\PTCcZ6ZWO<32'MZiN`6f?LP44JY%bo'%K9Vg([7TRgZte\t$*HuB%qff=LNCR)H\Z:s*hH-F=j:skAZs!jZns+''[mha-pNWZcn.bV7,pXBoOebh`6JH$6AQM"9pqDtV+):0]QBJ,m[\f9,p)LV6JJ67/%T39uL.4/`7QF*_DXd58j7q4Qf04!6uenhZmN!uA]Y4lr7bmSJk%r;t\I$!`rK8+p!C\^XKFVY5,qka/+;p0;[d]CE\I0r.p7ZrN"%HZ6mKGCK/s>,.!Nhs4gE(LAL8g8O-)@4[Gb2rZa'PL5uP)^INfK&Q!K3`oX>GL^TPh34RRNj9J$GUh.DnD_$A[qFAp:2+cs-K_CF%Cb$5fAW7C_BXKFTdDU3@gpUq@;*h.WQD,+qa+kj!?fu0,$K8]B?.$V-]XM&Fn_MVb)s:`c-iHa(g,PGVb>j_S],SqNMsc=t`jL%`%Dg%8)B[4k"X4M$,ZDd(_mN+9l39H09YgTo!TqmSAdWlRQ^$N$8LH7oSP&uiVD0;kQ.R\LBdpuslFKO:rqP:)Y9Yu-Z#>al@+S!6*%S'jBX:?mkri*P`L5#Y!jemM_-FWK$sM*[/$4[,*-_;#\#jmpU,E[f\,f1%(MXo1`e5\CnP'R[YIG<fnk.MSE_0n_&LZP]F6'7#5.%G^`RP1:24n&sQQ?an=SE;a]Vh:;3hqWA`I>b5QTdb>h*mRW?Wql*\6QO[!4:5bBBB?6n="/d8e%F<XM9)BFSRCMfiHer#.LCQgeZ%joS*DW1A(2SXks[_PGNF]p^3']gN:ng;]IT)-K+heu(E;!Nu#W&r"QX[U$J8M8S<sXJ.;g-d*MUQ*I.HDCOC.9[.mHG\NEpD6p<D%/`3obj3uj1M4AeS+2#""+E8QOE@6s0+([tu6XRj""PL1DX^'>4pNN(t3P$tkHEaPqQ0]=OA6UVFM\q<fX#rG=^c=-79ZW%tEk$d5%[8Rt#"@Eg5n5p;jZb`K696)Hp_\=8nnV[*&',Ohd7MM;,AejQ?M<'%!)EZ1=:.BXoca,Y1].+cP7V.8h1`9d.\d#]oF^U]346lZA%;ft71(7gDLhUXs3^&Ki5=Wf3SMf,"ukW8ucZT_2j%Z$FmA'*jCF^Eohk4ib24ff&j5MV\OJ1['i3YYmge&lje6BtT[8rLDi'^g91%8QJ]P:QhBg.f&d0+ir7!7C%cU%#,QcbII0sbCN,<I9(*b\QYeg-(@7@FCh83;5Mm%s)^$-pk$BoEmGc8<]-4:3d;^Bcch_TT&TLW%G4Tqp[%e&\3`91ca?)&tm^S0qgZRK<4t"\8n8=11OcS(TUs8VAneDt@Lg.,MXf\b0jnFL)SVk]I^Vr!q/7Z/*A`#4Dj*Uui,`Qum%K3SaLZ7),;4N1NG1a"Fa>-MCkgaZ+*Q:<4LV05`bg0,G@R0t$+Cjmm-jSTjMj)pfI\,K<B;+'Ks6f..RbstkU*Pp.+\7mgL.oR('%^.Xor)]]GG*Gp3=He4Bqm+fpaN0><"h\W3W[BAl$;kXIoVhTGPjRhXhlXXO\d5>sN<B%E38T<C(2POh3nT#=OF01N=`Krfd'%R:f%S<mN\Keq)tibIC*^)q=W9uA7B.^VhE$@GL$\0lKE$VALS-GS-RGbqhW8G4KudA7c,l[,1#>-AWtCY_o7YH-Xi1M@M)aEY<EcT1^)%1iNoZkA50?X4<bH,\`5DFM!aclX5!YL@:Mfr6hKR9#o>4Jgi$lj?6h;/=m3So;W'Fk_H7^pl\;tZ9"hnlDIRnPA'MFGGrl6#8pgr%gZi<FSttab60clMQF40OEYJ3d31EQcd)/0!=3+*m*<.CKcMu6s'1O%+8^uOfV/*Ig*m45j?97^#gLg5FNdiLNHtg<1Ef6hC[VMk+%7Ap(FL+9[L2?2MjVQP&2hr9>j)'nGo+ET*4a]E!eP/)9a'r$.0]@JR1j]j]NZkSEYDuL_FmcV_t2G&:f\(8*+P/UI7$FoCR+)b<N%Vm8sHc=@_8RE."5d4YtEOl_Gd;C.aP0%H8ElnWR+,+C3nagF@V[TLO>VM[='/8Z,q41[ajRgr1'-kr+2R=?_b;b4JFQSPg=&X&Tc%Lp&URTp94WTt+c8OZo(%`gaeC-VISeSX$=NN+_"WHj20pHF'ToF#JT?8(F@2:>"*E^;Jj^EZUDsXNS</4<;4]gt(RL-@&s;g;aYM%+2!lpa?4^t-1e^;#7kj:N?je:>1DctkZT2fE[#J/X<e3(=Sd2=@BD,D8THk]g,oJeg"l@C:gNMMYtLF;<Yd!=Cb@$E0GH8o14;D7%J#TE*XXeaP:0Ksl]sSOjWU%\kI0lT"Ht&"Fg73;(<cU="#eeBEjb420*6KljXlSc1+u+eI96)Hp_\=8nnV[*&$Puu\4qsH$?5;_j%b.m2-`k%]/AGpO=+'QG76#l%J#th8=g?Ud+O*=-&UGeFLg/1rM3eFGVO<dd<Tr`F%P.]L'ONB)F77`k)?#4eoUJOPNlRB3,`Ju]j%H*QD:[PVnKo/&&Va>tfSm)a)^]LBPuD6YXHi\;5<pE4/[P'<nQ!W8Uk`r,YU;fX;D20k13c`U>iaI62bGd2$,M>8`uM^ib066?]^%lki[@ekkrLoKC`]me>/^6uDeg:U=@Q9a$r^"[o^D8'5Be4MU%?jF%WEQg[V6Z$-SYSW5n[K6QSD,[FSHM:eR2VmBNdX>"Ig;.ol'%kq7n&k:Q-Hl_StPehG!1<9CY\$I]3]!;[*0q*+X!Rt@0[0![7rPuFNtaVgb&Lc.:)!igN.;FXa2f7jK%eT&9%\o,D.]2c-s9L$])%);`'[fiNgO=]!&nj\r'eQ^:"QIQEQiD)9CU1.`>DG\=HK]$@a<7[aF5eriVZZ?EQ=E2V^r\hH%`=cAgDiH#6SY']/L?a?u9HWp#t%,G&5DAVl5'K#s`O?1Zsp\Ki'*H9L:m#e16eDe5'Y"(b2uJriq/:#.[[[EE2[GVP'0,sF^_?\G_1`JA/nq(,3>85A]3)>R*Hq35s3%hghm*ifcU/Xq;RRjc`.rZ+pfKUJKE^*(QG?4e^)(`HZW7fD.RF[0u;)rk,;ZDLJ)M#T&(nY4O,1U#tB37W.j+#p1*6M:X<qd=a-X%<Z4*roNG`]Bk6-oPjW-k=<_\RAb(JOlB%>Wq-48TYL;ZI%dp=<HehRA?fO\Cm,!q/$-iPlmH`A3pr$=EX/2)V7NjEKb,1qgQ3C5#%.Tn!m,1,PVO-]Ohd5U6!V+(,rPQF$N,Hl6qA1)Y[A!'sH8O-`D>1KeI!BVP%h<:RV'tDu_$G!QbW3Q``=R\gH20"m>7$0\f9F%Pe%4saQ/jDPi9FYAkdaWLHu4;B>oNPEfU,r]`j$2H1PGSWBDS9(u]@%d8]%4&J5)T\?qa8*;X7Cgm$UQ[1If(fkbW+rGhU)nmGZ)Uc1%)LoukD\?ll8T`0Gf07?1"eS9oKo?C*UE+R!gO.YkgH7\MM`a_=#+9do7V[\#lcN/nL&sN9?]%`#,P?oeOD.$TU=Y^(Q+M_r06P<(%GB8:u<=S3'3K[8r:/Ql#8XEerVlX-k`Y,&,_-78C1MQJ=/TN[0@`@ZEH'V&+0eXI:Slp&#h#e5[&KI!/8S;/%Y3;aA\D+*g)(Vb/%U"0RQM,%Y8dc46!2;Zir6n:SA8JFsGg!g`-nHG,ciR"DXD-+nKeKJ*4[$I\3@VRid[)R4VM2Z8tC4*=`U=J_5P$)>ReB/@NZ)0BQ%hS.HRJX6,R<q";pbVQDg8>b^-U@&niO/3n?XljH$k).XR_l/m+>#Zu<>K7:#/IcVh/L@AU>(*T<a_0,6<RjQ#dd<0%?T%-0:">SD%UT4^lD%J2Eq*"O[j_:jnk3;V:DSLn2VQYj29'RR,=o$Wq,Fd4FfkIol(3`U'2s,8]Zk%^T26mmTVdN;d1254HG'N\e>:<:ZK6#Sk%S_Ps2-bH>@aP+=C]j^\OIFO<q]ek(sbNZK*G7iTjKVo]B!\$glkU!e3X`ls_s1"T]UrK3Ij;UE5oqUn+`t[W]cI:\+DAc;qRr*<d%hoQo!S*pNO+':>b\%dF[`9m<oGMi)Get]^q5OWjh]oP>Hp.(^%lHp-FV$G9A_gc1`[;UB`_iL@7FS!4jhRidVrG1<2\!NsQ5$qih%rn5=_oC+JGiOd[CXk$G:T,r=RI:rHjrAhW[J#9S!78aZ:Ud(^pKH=;YEIq2=dj%XOEm)$gc*2>+&)VHE4obQ_zzz%!!(Xt=!#(jhm_JuBs0SqMUCF2l+nl1:AVLlbX8RMJ,0KF#/@V:oT??73I1:"nbpjPPKSHn4nGDQi]A)CCVOl*e$#CVFKG9:ps.!^%55j1g*uujq0RqC&J)7nP+.h87s+T>do=3#lL>t=DnD]kV[2U_ZE1HU-kCo>EFl/*!jLE;1?uPSbPs<*1^OP/?RE"irG>GCAL$LsI%E2Jbf,<p\6D]Sb^]-fP]3ZbU$LT^R-XJ5e(b'2\s\c$$Ar4/5LJ(Lt&\VqOlYh7d0,Q!P+T(cLb[[G,)'C5[7hfB<%2J3d+=En_q%@$AdeKa06!8bgWFIIbB"]DAF<')&^.kgc<\pKX_JAeFajJMjn-m2+P@Mr;Da6$!4E?%;%i[)5%Lfb:.Q=/Q5d8c!o9AKR:cfUqc]%*rF9%Qs;B=JAKZ"o?pU`DE:rq/^.@`h,uLk3o\.('o.(bTrY(,-<P/7nbV-'pucRegcV_.B%],42:LsqJ)d-B:&j5Lhd,IA+ttW>%p)iEXphsL:hC4+8qmhJbEqe9lV`)TecJtf^/@$o/-.M[aZ>jj`JTD02XL\",16"/M"6i%UkPHlYC0GA'(#rNm:RZcRin&DAE+?$k%c]W"Dd=:_U:ETA_>:+?IC4R,;T7768ZV(g8^8pumCVP/2e$i%pp[WoU/pksdIUpL]]N_;9(0E;?5Q9d70AQ-MQ^mGil\AidAW2)@%!p>`<rttd^nNU^eC,%ZOJVE+C"./ASDI2Beah)+Cm5<Sa>l"_6n*u5Js5q,+mm$EKa.i#ohCZ>WO4'DT`bmS3$`k1jDXF^P5BKB@%0>jCBh/YFFXY^hcFsHkbE&O6Ng<hb/WtpgR>u/[[Qt/,UFp$:\^N@BV&&$=GbHrXB\"(Qh);7GEHV)6*$*53*D=?A//q*atm7H.d%Gs<^RG:1HqoQRSW!9_4;\o5:G^V!uqg'&SUXUM?N03#F-hL@Qg0F,#$MXc(,\!D;8no!-[mn@mJqiIAaI$hqp=L2Q8g#P8N5]\5u%M4Nd`a=_"q<FD6`%NG9TXBAKY]s.okP'9R0p-JBp]?FKWBsGm+LQ-Qaeem1hi<.oMM,i2l]Nas\rZqe&je$YXegdm2GDD0##M*!R%rC:K+<b5(tDP?\eF)ka2*qRro>-,m&@C*ZMCJ=<U^qIJNIF[\g8p?'8q@9U3=f(Z2\ZdQ,=N.niAp"@04BRkhG-7p(*EM^uYZ]b4%2(r",S=M12@#%ar4)EVp@*OU0-th":($r0IGDAoa%]jr]$KZ(B/@uqr_VJYL\cZ`>/:0CH(<^NL]l\JN\__lpDjIr(9p9.s_d9o9%ls0"pRQ&DpcDJ^hg0lYk*Oa]aYSMe$/SEOE=m`F0mge+>*E\68ZBhh2Z]'([bBJ`4m2];e_D7F`=g3j.fZSJoSa@G"Mo%68ZWXMK%G/2pBbIIh_CuoJ6/<_)nG?E1Zgjuk(/5nQu--Kg(g`=tPCjXg#WLV4rA[)@*%Qg6E])ug\=dF(dCR2pL\3'&!QK\h+ZBV[uZOD#m%h-nXUZCJ1*L2o0Vb@$**\iX^D/AiJ@b>?L(@+"AGC3PHXJp[gS,2\N94;8Ra%f("P<Ok2-QI)0uruq<d$g4Y4o<HBuCePVt%eT/3%A\C0aloL4-I;O&rMAI:8][)9aE]G)&7C9t;"3:+`l.3sfo.%*<:B,4*qbFkOa5l?HL*(oacg4l3q^\#dY1$pDlp0Zbk!_h=YG?2[%h-hjOmtNo1F:[898ToL%7IQ\S3m8e5Z[&i)G'Ms?hdTmTgF:=MT!Sq(cq?U?2Pn)o)b97"F]jrL2K._pLY&,!o6ij!`tMPP]m6W`%P0fe!]&S_8qn(,QH81taRg8O;B8aX>lp1CGq=#1:;Z-1COCd/3^5T_cckZHWn<X*$$/,2gYPl[r6i4mZl3r.U`jQ!21Z^R796UJ7%3<8*uNlHM>bm:WTR.i/Jhh3`OOO((,IT*t5q*FaXnpKe.-a1/Tr&\L3+8ehM_[a0([jP(f;I&++nU"jg*B6FMbjNMYrMfa[0=2i!%l9jknM[TM2bgHucJ!?!.#Nb8X5*N\$co62u_`dT8b,8UWq2:#@YqHOb-Hs=:P[BYn'K5(5WdI`Ze[bCpNVhpD`ftCkpSs9M2/N&W%0PrmJ5#I]3Dj5`Zq7,V)\*\P9HR<r$qp=DqC$f2[^BrAp"+S?MjU^GdjVM$JIcP)?ONY\:gbh*3Y'YTTDo0'=Jb"B_K>O>[!NX2e%"%W+ankFVT@fs<W@CK_Kpm\Kl4-8:?rq&D9a!..h!p:'L+%+piV>U<_YPI:dT)4,S$"n#YZL^l*k$R[!1>2]-_loGmC1%(QjaoGZ%U\gT2s5/7H&"N0:n2K<Bm-q/NhT*rlq^n"tlji_Aq3uKPS=DS8G0b@7r[+.l*QXhugc'6F/D1m@K"h7Uhk[#fn\n`3h^'p=q#"4b%_;Bn^Z3/c5mrA;oC]<.@AcBCjQlX3X?G)?eEhIG>GOcg.J)mtLi,?J-Fs),`_ANif>hjG.id97UgjJ%;Nt2-nIhT9F@?Jh`K&u(\%a1kEq%R2Z#]^sd(/;(\DfaaLlhRmf?nA0/:@or[eQ`mUL0tA5%-E''Cnr=Tlr*6K+JpfJB6KO-No'^/R5,UM4>JrVQ_!:E9nUFn6%qiKsBa#s1$Djn?0/%8<WR^X>Goq?eB<4D>H]6j!QHRl"dg3Wh>i575FaZV_(6MpP-oOU6ED`,<Oj1,CBGCAQ6T:!)+UV^Zn*h(k?%D`tnmK@U:+NS>uT"o0)SoM$&#joMRpr7gLPHf@<4YAHCMjH&3*SDV*^X21hHTAVd1eVC;u[jj2qQ%r\`kr`tH\p:=Xp,Kh$nWfmA%/Y@=S0h^^L(nWNi5C_O9!'p/8<;59mm/D:21)&l@.=5d!$5O_PVkj.2H0[0mB^[A:f)f?BTJh>Oj]73cYPA!AG+B3r2TtUWnZsD-%UNt$O&'\;n!-X%`.fIne^9eLp8GZCHIc9dG]5)H3]_)9_q7,SV%GW;So(rT#5^-j<3q-E]YipJcIcH#5^N&hMH0]H&d'kdoNlZM3%!Pip>fR[Pf2D"1'V"ks+8Ul+<""Xg%Hf`T@U[P\<>E@V0m+Wkjrs,b(`HeKb^_oL`$W%d.GN^RkO2'aG=`<)T!1&Ulf?d9:l7F4P%h0IHCU#V3X>87-]`Ll!M\c,Mdrna>olZ"8u]oh3^B7^F]YdE21UuF:b^(IZld!a!2-glrsbKb%Xh`:E&D3N0+XiCh>T3aIePjXg.%[iPO>.l=G)D9&B"(FG`')s^"<\HB&Cn9<483dKPop"0TI-J(J2c+h8O,ZkrJ>D(F[4EgOUk,ldVr%5(XrT5@*Mp=DFT@3C``RrI`%./c[4d'jPe=@N5ec'+-Z^[AQ@c<Ch=T3h9\%m4oR@cjct!4.9k4$[Z*9+G5^=$80#p_)/qSepOh#6;*moAM>TUi1b.;hmSNs6AV$%O+2G&SiQj*#5$/9C0R.uDOjGumV(\V00Qhl97d.;%Jj-#J%onWQ]G=tpZm>&g<X.n''pM"qsi1Ur1-J&+#VoiIE<"?]_Hq=fP?SP%NEPt]O.X#MM,E77@*tW2-1rk1M!L8VI/:Xfm[l=G`!*q#im5AngDlYLR3f4!Eh7>/!%\Ia\E0nITl1Xk1(O0+2LTq"Q>lo/%-4g/%F*'<G4Z_'##]&c,/.2FTg>>"`HbF#'Fpe!+?b$)V$aGHqJ41UL*WFoRh_Wf%(N#3i!/goLeX>RQR!],%#;6&8WItMlW^18ql"oWA%_YX&.5ILOE[nSP"$,H-tG:l^]FO>Y\gIe")E4GT=4/Sek!3=3`h);hAGPqJC4-qWbkFXp2o]mkXSX*"NX=@9m^5CYl\k?s#/B]&]%!%\JlFMm8PrRp"j)g:i@1>OYm^`l$fTMlg&Nf2b:<pqWp*U3VU$M:H]Zh\c6r^Os6Y5%3s'a%i4Tl4,^\#mr/Ac;lL!/gi*Z]WtC%[0&'E?+K=ZGQ_DOq!o@N=+8_Lo7@d)Aei$g%)='+oq?MG]<4;;j,SW(k3riXGBs`!E:3YHc!NU2-[/9[m.@cjh`5uTYMSmtCe+b<%8fU!5PhWG>?Mr_HId_t$Yl)04kKQRS!*59o^[*?$[n7P::3$?MoQfl@a^$!6q'YspoTO`rZUt5!/9`,H^H4YF5O!@l_!Lj]*L!P=%H1.R*g?.H2o@=(q<@<:rQ[Su9B$^0r'*,i7JA2+=*q2)g`WQ2E^j*ZP!#Q7A)Z\n!Ifj(@i,8US#Q,$]nUS@T0HT^B!6,-?#/GK!%hZ+K(p_s4n!Ik2Z4Q(,XN!K7iJFS0)!AGSa2ZUi"rW^/_^u#,/&,7(DirOW3?p*@c!/q0\%=mu!^B$#0n2C?e"9&M?Gei2:(_?B\%!94*0"(47LDZG_$r!e2HJA2+=*q2)g`WQ2E^j*ZP!#Q7A)Z\n!Ifj(@i,8US#Q,$]nUS@T0HT^B!6,-?#/GK!hZ+K(p_s4n!Ik2Z%4Q(,XN!K7iJFS0)!AGSa2ZUi"rW^/_^u#,/&,7(DirOW3?p*@c!/q0\%=mu!^B$#0n2C?e"9&M?Gei2:(_?B\!94*0"(47LDZG_$%r!e2HJA2+=*q2)g`WQ2E^j*ZP!#Q7A)Z\n!Ifj(@i,8US#Q,$]nUS@T0HT^B!6,-?#/GK!hZ+K(p_s4n!Ik2Z4Q(,XN!K7iJFS0)%!AGSa2ZUi"rW^/_^u#,/&,7(DirOW3?p*@c!/q0\%=mu!^B$#0n2C?e"9&M?Gei2:(_?B\!94*0"(47LDZG_$r!e2HJA2+=*q2)g%`WQ2Ezzz!!'759E5%mzzzzzzzzzzzzzz%zzzzzzzzzzzzzzzzz!!!#-ET4p-:V>jb%O$**Vg;A-<S[eV>s6fOVgE1_3WCK1_G5kaRIf'#o9N>q_[Z0U\E>p6nB)V6WCWqOB^?oJZH^T),UQ%uAZL6OD[^AJI-eI4ap<_M,%CN!Emf<;f8rS`O_5-SWIC0'Q$a0m&&7K.SQU[NWt$.UXkB\":))f)X*e"\"6m*qf"pV$1TonW!CqnD`<_cP-c=7i-_e(V#<Rh0lt%hN_X%\uk;jd)5<6j-SuUq8N7fV'@Eu@f!hhrKBRLekV`C<QVJSXBSU.ldd,kkCS*^zzzzYY2,]I+>rL^Lbi"%Fnc]H`VIr7=)si'F-2iF?J5>M'C60WD<'k*?b^[QlET@GUY@,^s+Ym_7:X;\2LO))j+=195C)Kqnbr!KP?32/[9l*Y<d\<SS@AO2%IEt)>\bH(2^Lu\KRA153Fo:1:1QQ<1>]em`lY"NO1QUk9(I,u\Oo<,Qii+GXK(FHk^ATjIk>1Q<>lP2`J*u5g,<88CrjpuJph+eH%DO>Q/AFC%7q6='m!u@-i]OQ!Za'SR_1CO5cA+t$^4*k;>]2(rj+(7>$\aXGlMrQ29s4P-L*ggch/-<'FgigL\Qa7&1>VqZ6T6pIr%NB_UZ:X:<QC%K`Q5Ip6n<<(/dm'Qq2D!0P+\9f"-K-c-3$@]VdcEV)=Hg7ma7d7*O$dt72rVju(0_MY7kFXp2TAM?5@d3uHV1[p,%WLVdd[$k0cZRi_pA/9=+NCPH.o;Y/Z:G#8Eh#-1)^N8njh`SGp>2d`3D`2C.h$<r!4d2B7`V%!Xd.9\6>`S/8b]WF4]_K0=#]'-T%&$t?b[C8nJNoutR:N9KI?N<]smmgsLi;NiA'[Bg%la(+?CD[<)Iq6n"?1udTe,h/?\*fkFs5_,%n(Qa?>W\N'do`CFj>EPnn?'/n%iY9oE.u$:g(+s6d*kZl%msio;o7ElYS*]S)"lik]TTT2oNm2jY:0T<S@f1]QbMus>jf^<tg\980^P^2OrEKNO,sD8_rh&5#d/MR)%DI<PS`Pi'7fi?k@aEs(obAQ$LZJ2q^&]!8`'.<e(JT'Fqk$sH@hik]WFu(290cQ,.AuHJI1%O,RA!_]/N1OC24it=tD!"r9/s>Qj%p&j5h37G:1Bs(Mh,%nKYR+F%6D?0#-Wn2abL<grfTkB[*:\&B`PPm8DLP5AaN271i4hf\-^\;"0rh\>4]NarU:eL1OOF??]A1mr.%L#7"0HI74f_rS045/(5=>W#idDP=cDF9Z+_C4R,[q9Ek0o:G%!Z;]YKlpCCh4+[2]O#sRXanE'_Gn,Df9(ilZbmfe@a?HZ?1>a*1%p)R8AVS%7c(%rpAQ?)AFlp5f_[nbC]RI:V)o+%iV\G*iF\pY6mYU=_*jL+qZ%UR:Bl-?D2?kr)>)s\!8Z(UrSc4I)"T&e]ol$qjV%`/m.EXin(RQ+OqGI0\>jjLp+kIGaq%fjU06%\*,3=C\[0j-=[o<U?rIGDFH.%]jr[.cp#%=VX$"in\%L\-$MQX@bK7='!-IX*f-D%[-tf!(TUBXVSOb7@?p9kS)t_no4/TYfecfS47%[5_kqP]ei[+/E],M8fa`Anm]^cG")HaEF#f^:bA;sIFEcBJhLRP&QFWM[P@_/>%?G&@9[s)43!m=cmVTlF#@5$IX[bEmJ(4g$KB@CH1mBDrG%QiE,YSMq(/8):s)==Ypmg_G640TKSALqK#@+jms]>KqU%:n/7frS:&%45fP2ShmnZCQV_rE]-RVaUYgBXCp5[YUrd6RjH6e#M^>C3mW!TefqCNj_WL!M]Hb\f]as9)5LgmB<u1fm!u^cStBRSA%N02C^cWG%%]a\qfIU-Z4!^,cS;k@ZgL8Y#%\!Xt%]i+5,7/WD/@$;eh/KE8GM"I?4.lL>pn&AJ>E@rWOiuFF/@$;[gR$*0G8T"U*rl,kk2[71%3j<k$$XMh62C=>qLLURLmJG>6PKW)gB'5`ah*Uk,I.`NAb:*lbred?$[n-6p0!ei]aWfDhap61LOA9.SjlX.l=PDU@GJ*,\^;#it%pl:9h2/dW)74MsAA5V^__"#1Y]$RobQ=2pj)>KnlIY;Q1HbVJ!fX^:Q.-5:%bhEW24g4#FIRoMIY5!A8<+RAL4f<DB(YSP,S,`.j%3^Yh:k$?7JKmD@&o)81=0.s'ql+8+^[+B^DH-)a1pANr%s7[/3pWm1CR0/6<NP!^Yr[*S@#Kg]%Di0nL#,#u:`krgVqrjL]AH+CQ%=b=BpA(i)u?).=pHjB7qm^)!MfXFU^GO,'KbWJ)aRkTR;DP_8IUjT#K^A$X]bW7e(L<u@EO2(Niq^Glc5PWcaen5a7r(WQT*@Uq9%+"7]Bf=cPYH]b"?nGJ#fk!bM1^N/o^&'n]l)#R*qKcMSV.,QFhb/[NXVUDJcm?&@^dC5&`hu<%D+.m<#n2Fe0G+a5W0Ibm-s1n2F%c\6;lp[%WJmXFl'aZ\,,]*a$$VI^#3Nc3&^asY=bYl+F?bPiZOO$C0jEoL?uqS;!AF0u,3"6BcA6hpgbMk^N;mec+8rfG/)FFV2G%`s2#l@CLD&]9E3XIEIU>5'mIY*P+Ii^:-`1rJt:Vb@a!4"b.32edc6RT6ebsj>gbVs&Fh]0e:ei!clHfDqmkW4&c-nqiW$\j7hJM%_V*T#?'i3bTE"Uh-8!mkls90@l(0mqEV/Ximfr\a3"nB84eK9'iojON1B7Q+s,k#e8*/`g\,=!6?@),:YNCJP#qofoZ<uJKqD6b$%]*$7SI8)CWNZYoY+5Q$Djb3'_4gP+/C!XTPKUqHpp0*,**+6=el"J'1XAc\*^_Iq3r!iWPCq%;+SP]O5akMl+T:?pN@'Y(@Z27W-%IhT+.2NPOsiQgA6jlXUdrb3ul?bKri2>g0FHS"4u1LU$h@/gE-BJ,"](S0[FbKtZ4H&T1fGGp)CiV2@3^52J+c!-6SnmC92H0&+F%T3O6l4i$>Mqnf:LhlCtqhS&V`:-Z/\!0"aL?hT\1G2@oGnc.grIVR_SJ3Cnn%o2QhaNHe&D`("<c_ru`\S'cFJ@u2i%o=4S=69n]%2_aHb.KIZp=s*OKe^sN5JWaBpGl#K'^M,^CJH8f(<ujK@FoJEP>rut)B$)V7]nY!]ilH96<X%i0IXU6,8*O5Ao@@E;co3XBA%mEk%]_)8Tk/F=f^['PNo2]ELco4nsdPqsm4u?&,o9Jpu@i!GJ;;/2W^`l']!3OGH&l2j(p\4#8,?ScJiS3C*6f(?)QAZfQ[jhCE#i/MW%X#GH@,sIF_YAX9TiW")QjI1A[!Pn;Hc/BVO9pk&:$c[_bcD#F=]=_P!q5jP7"^c`=jCRr6j'86qA^DH[o@="on&DU7a1,tgeo+.O%2kZ?5pf7T$(-_H7TA)lnDkFK[]A_GP9j[i1?M06J<Wdk.L@,hM2M1AD=XG2>acEaa\/PH")u6Y1SaP!37-M8SV!g[k+.9Sf!:5S-%]mFeuVf)FG6hAmh9V?_W^N%R&'9Za;\a`50D$GD5A<ES_O@`7')[Vh$hla_8m-37OQd8ls(ZIZmDK72^.m7f6!'"%n?Cff17K"i4%4T@=jO7%#n?kqVgT"T:;\p<VH'D,#%J,GabN<r1\1=3K7W==.>ndiuLPl^\b>\ErY8H9NsG9/uFlN<'MSbZ+YO7],a+Tem*r:ug0%)aAi.D]P@W*lL:Vmb]+2k2aJ)>7U^G"atTFg6@pD\mhgg>^l/gXG8qlbZ,/RB$KMV?X-.Zrg]krJ'e2F`P3Mpo(Y=i!+66!S"J3=%2!<[UQh]CaaRNV`E1rU$!LOetXml@>hde>][A*-As6R.c_1X)d1XPmVWK$^8QTdTJ]RTgA+67\:rHb^"+C?(olt7D)FkIG'`!=)P%6%)Aj>E0<I-a3@<JT'@/BuYr:J47DKIg`_G1l!hZBQ)rok@ait'Y\P0?XH.W.%XuioUTjqp@p3!!+6\cCX;/,Cq=q7VJQprfE#(g%rqWt:H'%`Gbp)Kgm`iLcrT=r*%iGA*5i+U#]beFrWo5Sa*bbTi"Zi\?c*K/#%+#MirkhY@%tIZ4cD8nAe7jU/nQ13Ts0HX5?pYKV%kCN&+TJl&/"6[+X38`\6lhP`u8M^?IP<ZWqEr#2!s06`"@=6?bHgL"K:L6(6SH)blXuq(H[nUt2hJQG]488eX'Ro;$cQE"i]-fQ(%k1sU[@hsS`JF5\#2X2;!^$DcV>IHWC!E^'">9@MLm>Ut&O:PUddFfuR^ktJ9[%_JCSI*L;%4hJp!W$CQ[978M??j&%ft[%_^nU>[%2b^CPXSq8b0D*I<I)?eO7H!GuleHYhHfW0es*i5O)u/mo*!"pPq3@GaGkb)&R[i$pDdU8#o'0SqktBZj%)A)eHJg3\@J@J1_1DO@%$QidPH2GpWP@afr-6I]i:U4o(1A[R&!.a>*gk1g&54\8?nA"38rB=kZ!*ECl3d-!sIXlmqmf7mkn^T]J=+Bhu8bKL9aXcMU$NR5&%rr+SL"9?Z;mIMY)JCssQ"(47LDZG_$r!e2HJA2+=*q2)g`WQ2E^j*ZP!#Q7A)Z\n!Ifj(@i,8US#Q,$]nUS@T0HT^B!6,-?#/GK!%hZ+K(p_s4n!Ik2Z4Q(,XN!K7iJFS0)!AGSa2ZUi"rW^/_^u#,/&,7(DirOW3?p*@c!/q0\%=mu!^B$#0n2C?e"9&M?Gei2:(_?B\%!94*0"(47LDZG_$r!e2HJA2+=*q2)g`WQ2E^j*ZP!#Q7A)Z\n!Ifj(@i,8US#Q,$]nUS@T0HT^B!6,-?#/GK!hZ+K(p_s4n!Ik2Z%4Q(,XN!K7iJFS0)!AGSa2ZUi"rW^/_^u#,/&,7(DirOW3?p*@c!/q0\%=mu!^B$#0n2C?e"9&M?Gei2:(_?B\!94*0"(47LDZG_$%r!e2HJA2+=*q2)g`WQ2E^j*ZP!#Q7A)Z\n!Ifj(@i,8US#Q,$]nUS@T0HT^B!6,-?#/GK!hZ+K(p_s4n!Ik2Z4Q(,XN!K7iJFS0)%!AGSa2ZUi"rW^/_^u#,/&,7(DirOW3?p*@c!/q0\%=mu!^B$#0n2C?e"9&M?Gei2:(_?B\!94*0"(47LDZG_$r!`W+zz%z?u_S7zzzzzzzzzzzzzzzzzz%zzzzzzzzzzzzzz!,U]6M*%>Sc^Pu$lB/K0mp8(qq`Xr7%l1_YOo&N`1IW4]R[;,[6pTI^=2I[?:H>VGlM5FF*I*K43iEI+Ffu[R_S_n*j'9fME\!([r&DkO:pT6Tcp;G\>f%Tf_Y$Z\RTsYE,%W8G<iD1oK'Y;Vibs.A/N2I[WWmp39cDdG@A<Riql5J1Sqgb<U4;Lg3,e%2>_0D"j+CL]nt]H[UVQKJ_L#Ld$YTS)`]g^(pN*+$89%K,K>T6^+6[g0V4q_n.;J^AeTS;f,WT)LkMeTA20p-eAQWo$5t^]!8?Qj/"/?<)&;iEpH['KPJD(D0o<\o,H9U<%`dWW12FN7;+9.%(MY=TqMjE<;SHj(lHgA+h=c'=hK4A];Ntf4qoKl8h.F6_""p&7kB<Wj($A22)n%*JV,uC7akAZ()pqTeKWnnO=V\R$D#!5CX0LBW%>Kb_J=VZol_)4g81`V5(BUjo!7IZ9]gR\'+=kdiGZ(Kf+p*[IoR4@IJVC9,RrbaiPS,u?h=NF82ZD([hhX+iX4+qg(rP97VVuKGr%YRP3^eKJL'SR+0[8u58MP<>[")mqOT(BL#JIHu*C\RrbTcuME(A<gH`hh,^mmllG.R3ZdOi)gbJ'`7a+2&<aFZ)jp?0+Z%SZGae`%@>P:i1Qo[6q*!Ih&pW6$^e`L'La&N4,tY=@:eB3?DlsO[[LJCePV2EokEYSL>:^.7%Uq,kN\PD%65!R(Ffi7+Q?>p-fP$./0`70/%`,_k`*CUTmg*Z&3YM#q@LI*Hlr/e=d<(dCuOD$goXqe8'PEdkk2^1mt?+HVHVJ;&9WSl@%68VR[;I6i4K4uf\0:?/'1Y/h(WT<eQ%6.R6Q)F+sP;OtZ[Wd*2nS2jj(e9!EYa=K=t#&]A?51NV0Ztr',QSZW@eL7d6Vg*PS-9%j(p44^[VG83#4W!QdP`gYE=Xl"?12b8"%<80:-$-t,s@R_]?oE>]Le:CV>/L@+\oFE1'19&8<8_`slkZW9c<<oXKCpMc!_i9SR9f&"jF_12.Q,VfZQ05'8U\Z6-S?jCo<Vcql%\7CF.;djHD(9J/nqR284Bkts'nX_9l`T_/j$0>)#(I\hTa-HnNba'QS;=s^RF[6*'WVl6a<E"fR[NS5JB'X<Oa_Mn5dNf1)24\E=%7Bs*1;B8I`+aK&#P%0Z.M`EXlVUqJTW'kU2'g3qJW];"r2VM=c:q9mTB&XfqT1RUNK9ou7+Sc_Q#+T_ajnd+uI75W^K#k?Y2&pcb%l\(t-W^E?C/!1!LDn.:IC6[eZ>4Y`t/5dt*&;4_nn2*=$"]J@/L*Waa=5S&GF.mAC%%94]eV4HI1dPpqC8q;t`&X)Z6U_(E$:r]U%X>R[bWfEN0"Y(]^PFOuc/c2?gR9?Fef!u9(NHgA(;=%7RQRYR9,L(e5b)]QnZ*TW.V`I7NM4GVD(*rFLfLnqG3S-@djpo\^<IdjK%Y>-Cc=/emj'O%L<Racb\)U)9"MD[D$&icAf-UFc_4\LsUa<NEs7?]:":;OM#eGUV1BT,pD,Y<uGAVk>gBfcX7Qg2GVRe6TYA5FM&%.bUGC:G5.s/bmKS>O99Ro7lPr,\a5WOsG>'2G$?6>M`:]'NI-beqsbB<G<`;JsYgi20Q%hH0U`Yb\+%UDL7\Z'YMAN`Xsc$S.Veu%e'&"k]p+8/Fi+Zp@7abFD3BeQ6h6hkI+C*-P^8TG0d_dKBS]X<WRVGT[7nK;Q=[%R);*q_!'l^sf5/.Z]SgSc'hHnqj#hS-R`9>4%>Z6`[C8glk,URXC:J'NM/o#3%@$;j^er^;U4VVl(=C1<(hGZL%P3=4#`hnk##OT2:8R"^8ZEeU)$22m(;b=*C,a\+Sor`\k9B<e9%%<o^fSG+4`Plt&JUTaJ?7or?$-<X%`-nb1!/D`c,V"-*uU`lhgf@Z3F`N=AN'q?")D:L:SNNKXX3($td0jNuunO'J,lug-kQ>f?s%PK7MgBtesE\WcbJIOiA_NFjH*K%1i:`OQVP=s)k6`c,7]/tT-0Td9::ZEJGW^f;'Pe6"02`i8Q-La5OmA`lWpTZAn?Z;E/q,fM@J%X]6Q*QR_Q*J)mUQ6ue0YQ:obg";JCs,tX:=EL*trKjp9M]XP2r9Ta1_;no+hORo9RKk+-IYEZP'G&f";-FrX^LL.Br'j4g6B[3oP%W@"ild!AIQL=ASj]<(!;VcoqF/5C=bA4aj"<[oUtbI#A)e-ICA?D[LTqH%J_kG6+<_3gplWH(GZM,H.4eXGM27BNs2_k^&*f(>r\%aD-kCE5e9jk=t9=qR=JC6%/)G;XW!F,aM4P0@SO_3@4]b5r=I5,Xt6fXo4qol%T_NRIrN/O>4:MC:Bt9''s`,XKp?"nkk.(e=iY2%AUa(.%e%QUQ9qF18/qi&7EMaT0JX\fg8*BHZIDc21(<I.fh#5WCT+YLcQf2F"I]$WJ$r<9lBj?+Q*FjAmnU/4c.c.9[X<&=OgDtq%1;5UpCE@,VYDnhOT!`NB4_TQb1?YJ"V&Ig\o'`OQZ-n0"ic!F?&F)`BIp8h249]UQ,;,,f6fjFTClK/&.U%9L`#tZ+cudZ#;Dh1L%YGj(lP3OY8:nNpS[?n@M.`Kgg[T/?Ha.HVOdJ/nN8PuV%gS>HROtEJ4n5V(/q2MP3V-s_/XjYqY:`l,O.C$"`N7$m*aX!J4cX^`^%>d@pUUI:9VkU]:m`k%M,@d@'/!*VSJFFJifBf*el`c9a(P=7ds9DuJqH?*)F,Wrm-)ZG:5FU>.`f?$nj&mq3!nC3$`,0;`6j4@Jl%o=ic+3&SaN'ogPM9d'VDk&k?`M7aXAD21o`I^"R&MPoUmC=(b7YurP0->mR6fQa:AAhJ5s4\KUnC8M%Sot@rak1D[A:SiA;hQoB`%O!LiI9pS2l5-@L=RH%&/d:S[?[j6g]C)=j5V6&+s;OSLQpP'EU7WeEP;eb4u=\Cn%%]3h3UbWjJ7+Tj_>f5\Jei;]sSJ)a/WPn+#%q[b#e<@&*5UOf\;K]`?R'=gN_\apECjlXdH6/"Z6mA<hd:+LCg0i%.5Mbs(eFqa:\V)(q'%FB.O9@ZRpO`p"Y9BDK=fbtaCUl=hV%2&hu6+nDt.g?tudo9"UeBPHg3o@V)Q*lNr[e*Op%%e$"fD!5bH5Ik:jo:6?@G'Mc;BM6$PR]N8]3/tEi(Kml8E9WgT`:,leWetN[%4cl%3qF&#U.UJPW,tSb\b,D#%)j8.T6Z-YiN5!lkoK-3:k!i7LQ+AkW@%-!u9:Td.<1^\kr)Ti.Bdnm/dksi.,RIOb4Q>K5As1*r%@P=GLP.n)9b,:DtVI$0RPhmd=:T]MmY;6iV&NVD&+im$M-'P--97sQKda0C>?;k!a<g(<#H(!YGXER%T3ft_j-8)83FFq_^RVHUW%SL.)ESnOt=V+3j*&Yl/YG!15QQ?f)J1"<ra>KXTWhj\J^L@atB9nf2b<D'?+?u!sV5tTbRIBYU5?-CrZohpBf8JNbIP&5hn;d!-?%0D9FGbYkiCXbN11]/517\XQ<UWYq,!JX>GaiD*C9GT%QA5#]]uOu-'TZRMu@fdt^*9jsSd\4'=hq<6rE]s[Z!DM39rc^Ao)Sifjc%W&-Ld_a^Q0]$cuFVt41[1T-B>[?_$LXE?!1]gU;g#oGeT<inmofdQ'[3+ko8)Ub-E.iDI:]F@FNYB-iq4ane6Fia$NN7K%,o[HW(%Q5Jn:8pn$k8"a:fQ=8D@<Ko9*FDe4d;-Ya`=6j0:-?6Fg;<_$$P-&sRpV*H?YdMc*q-4l7qFdDpH)@lA]o:lKmABZlaaJkL7"[n1%AuL&VH$'6?<Da\.a@p2W]!uKR8cGX%G-9D<HFHW!K2b<p-JPM9<@2J/;A13bX/hmk$R-7lkrl!TCm0:_LRd6a+i8#p;''I>e[l=G%5E]_\Y^)[]kqM&^Rd/B>nUtq"Bj-Ra#!.kWidGIk.a,GY#1pk/]?&Iq)M>DS2Um/N><BL-RjNCs;4lVul@iE49I2TVJp#0`e_OJi%VV%nJ<'/dTTe,kSGr:m\/[*@FN*BjmB"9WKAZ69@JuiRh9?M=tQg7td`NkB$_bN\TKrBoGD<*a.`sa/jA1Fg[!JroPJeQHf/[`tt%6?/)P>*UA;1fm3/RqBt-R8gjmHFDR[MTP++IXK36fI>]Qc]>1K_E0oAjq6d/h7l_Ad;?l`q8eUZqSAY>?9</dXcL-hd0Dl1aCAG8%IW4\f:Hn@.8(Si.ie\b'lB.tcI=M+:qKkI%k`\g@cj(XuJ+A"PoYVqGYN3`"S@J/BGHLgno`)h"~>%AI9_PrivateDataEnd