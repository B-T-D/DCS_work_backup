%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 010x022.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 325 281
%%HiResBoundingBox: 0 0 324.0151 280.9751
%%CropBox: 0 0 324.0151 280.9751
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 112 8%%BeginData: 22978 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C457E535A535A7D5A535A535A595A535A537E535A535A537E535A535A%53FD05FF7E5A535A535A535A535A537E535A535A537E535A535A595A535A%535AA8FD04FFA9535A535A537E535A535A7D5A535A535A535A535A537E53%5A535A537EFD05FF7E535A535A7D5A535A535A535A535A537E535A535A53%7E535A535A53532F292F297E292F292F295A292F292F532F292F292F532F%292F2953FD05FF7E292F292F2953292F292F532F292F292F532F292F295A%292F292F29A9FD04FFA82F292F292F532F292F297E292F292F295A292F29%2F532F292F292F53FD05FF532F292F297E292F292F2953292F292F532F29%2F292F532F292F2953542F542F2F53542F2F2F54532F2F542F7E2F542F2F%2F7E2F2F2F5453FD05FF53542F2F2F54532F2F542F7E2F542F2F2F5A2F2F%2F54532F2F542F2FA8FD04FFA92F2F2F542F7E2F542F2F53542F2F2F5453%2F2F542F7E2F542F2F2F7EFD05FF542F542F2F53542F2F2F54532F2F542F%7E2F542F2F2F7E2F2F2F5453532F292F295A292F292F295A292F292F532F%292F292F532F292F2954FD05FF7E292F292F2954292F292F532F292F292F%2F2F292F297E292F292F29A8FD04FF7E2F292F292F532F292F2953292F29%2F295A292F292F532F292F292F53FD05FF532F292F295A292F292F295429%2F292F532F292F292F532F292F29545A2F542F5453542F542F5453542F54%2F7E2F542F542F7E2F542F5453FD05FF53542F542F5453542F542F7E2F54%2F542F5A2F542F5453542F542F54A8FD04FFA92F542F542F7E2F542F5453%542F542F5453542F542F7E2F542F542F7EFD05FF5A2F542F5453542F542F%5453542F542F7E2F542F542F7E2F542F5453535A537E537E537E535A53A1%76A176A19AA176A176A1777E535A537EFD05FF7E537E535A537E535A537E%77A176A176A176A176A176A1535A537E53A8FD04FF7E7E535A537E535A53%7E537D76A176A176A176A176A1765A537E535A53FD05FF535A537E537E53%7E535A53A176A176A19AA176A176A1777E535A537E5A2F2F2F54532F2F54%2F2F9AB5B5B593BCB5B593B5B5A12F542F2F53FD05FF5A2F2F542F2F5354%2F2F2FA1B5B593B5B5C293B5B5B59A542F2F2F54A8FD04FFA92F542F2F2F%7E2F2F2F5477B593B5B5B59AB5B5B593BC2F2F2F542F7EFD05FF5A2F2F2F%54532F2F542F2F99B5B5B593C2B5B593B5B5A12F542F2F532F2F292F295A%292F292F299A92B593B599B593B592B5762F292F2953FD05FF7E292F292F%2953292F292F76B593B592B59AB592B5939A292F292F29A8FD04FF842F29%2F292F532F292F297D93B592B593A092B593B5992F292F292F53FD05FF2F%2F292F295A292F292F299A92B593B599B593B592B5762F292F29535A2F54%2F5453542F542F549AB5B5B593C2B5B593B5B5A12F542F5453FD05FF5A54%2F542F5453542F542FA1B5B593B5B5C293B5B5B59A542F542F54A8FD04FF%A92F542F542F7E2F542F5477B593B5B5B59AB5B5B593C22F542F542F7EFD%05FF5A2F542F5453542F542F5499B5B5B593C2B5B593B5B5A12F542F5453%532F292F297E292F292F29A093B593B599B593B593B5762F292F2953FD05%FF7E292F292F2959292F292F76B593B593B59AB593B593A0292F292F29A9%FD04FFA82F292F292F532F292F297D93B593B593A093B593B5992F292F29%2F53FD05FF532F292F297E292F292F299A93B593B599B593B593B5762F29%2F2953542F542F2F53542F2F2F549AB593B5B5BC93B5B5B593A12F2F2F54%53FD05FF53542F2F2F54532F2F542FA193B5B5B593C2B5B593B59A2F2F54%2F2FA8FD04FFA92F2F2F542F7E2F542F2F77B5B5B593B59AB593B5B5BC2F%542F2F2F7EFD05FF542F542F2F53542F2F2F5499B593B5B5C293B5B5B593%A12F2F2F5453777D767D777D9AA09A9A9AA09AA099A09A77537D5377535A%5354537EFD05FF7D767D777D76A19A9A9AA09AA099A09AA0767D5377537E%5354535A53A8FD04FFA17D777D767D769A9AA09AA099A09AA099A1537753%7D5354535A535453FD05FF777D767D777D9AA09A9A9AA09AA099A09A7753%7D5377535A5354537EBC93B5B5B59AB5B5B593B59AB593B5B5BC2F542F54%2F7E2F542F5453FD05FF9AB5B5B593B599B593B5B5C293B5B5B5937D2F54%2F5453542F542F54A8FD04FFCAB5B593B5B5C293B5B5B599B5B5B593B59A%542F542F5A2F542F542F7EFD05FFBC93B5B5B59AB5B5B593B59AB5939AB5%C22F542F542F7E2F542F545399B593B593A093B593B593C293B593B5992F%292F292F532F292F2954FD05FFC293B593B593BC93B593B59AB593B593B5%772F292F297E292F292F29A8FD04FFA7B593B593B59AB593B5939A93B593%B593A1292F292F532F292F292F53FD05FF99B593B593A093B593B593A093%524BB59A2F292F292F532F292F2954BCB5B593B59AB593B5B5B59AB5B5B5%93BC2F2F2F542F7E2F542F2F53FD05FFA0B593B5B5B599B5B5B593C2B5B5%93B5B57D2F542F2F53542F2F2F54A8FD04FFCA93B5B5B593C2B5B593B599%B593B5B5B576542F2F2F5A2F2F2F542F7EFD05FFBCB5B593B59AB593B5B5%B59AB5515293C22F2F2F542F7E2F542F2F5399B593B592A093B592B593A0%92B593B5992F292F292F532F292F2953FD05FFC293B592B5939A92B593B5%99B593B592B5772F292F2954292F292F29A8FD04FFA7B592B593B599B593%B592BC93B592B593A1292F292F2F2F292F292F53FD05FF99B593B592A093%B592B5939A929993B59A2F292F292F532F292F2953C299BC99C2A0C29AC2%9AC2A0C29AC29AC3777D777D777E537E537E59FD05FFA0BC99C299BCA1C3%A0C3A0C99AC29AC29AA1777D777D7D7E537E537EA8FD04FFCA99C299BC99%C9A0C3A0C3A1C3A0C3A0C3A17D777D77A1537E537E537EFD05FFC299BC99%C2A1C3A0C3A0C3A1C3A0C3A0CAFD067E537E537E5999B593B593C293B593%B5939A93B593B599B593B593B5532F292F2953FD05FFC293B593B593FD05%FFA0B593B593B599B593B5937D292F292F29A9FD04FFA7B593B593B5A8FD%0AFFA093B593B5762F292F292F53FD05FF99B593B593CAFD0AFFA8FD05FF%532F292F2953BC93B5B5B59AB5B57693B59AB593B5B5C293B5B5B5937E2F%2F2F5453FD05FF9AB5B5B593B5FFFF7DFFFFC393BB75B593BCB5B593B577%2F2F542F2FA8FD04FFCAB5B593B5B5FFFFFF7DFFA8FFFF53FFFFA0B59376%93A12F542F2F2F7EFD05FFBC93B5B5B5A1FFFF7DFD04FF7DA8FD04FF52A8%FF7E2F2F2F545399B592B593A092754B7592C293B592B59AB592B593B553%2F292F2954FD05FFA092B593B592FFFF5352FFA0B5927693B599B593B592%7D292F292F29A8FD04FFA1B593B592B5A8FF527DFFAFFFFF7DFFFFC29375%4BB5762F292F292F53FD05FF99B592B593A7FFA8527DFFFFFFA853FFA8FF%A87DA8FF532F292F2954BC93B5B5B59AB5B57693B59AB593B5B5C293B5B5%B5937E2F542F5453FD05FF9AB5B5B593B5FFFF7DFFFFC993B575B593C2B5%B593B57D542F542F54A8FD04FFCAB5B593B5B5FFFFA87DFFA8FFFFA8FFFF%A0B5757693A12F542F542F7EFD05FFBC93B5B5B5A7FFFF7DFD04FFA8A8FF%FFFFA852A8FF7E2F542F545399B593B593A093B593B593C293B593B59AB5%93B593B5532F292F2954FD05FFC293B593B593FD05FFA0B593B593B599B5%93B5937D292F292F29A8FD04FFA7B593B593B5A8FD0AFFC293B593B5762F%292F292F53FD05FF99B593B593CAFD0AFFA8FD05FF532F292F2954C39AC2%9AC2A0C29AC29AC2777E537E537E537E537E537E537E537E53FD05FFA0C2%9AC29AC29AC2A0C29AA1537E537E537E537E537E537E537E537EA8FD04FF%CA9AC29AC29AC3A0C29AC2A17E537E597E537E537E537E537E537E537EFD%05FFC39AC29AC2A0C29AC2A0C2597E597E537E597E537E597E537E537E53%99B593B592A093B592B59377292F292F532F292F292F532F292F2953FD05%FFC293B592B5939A92B593B5762F292F292F532F292F295A292F292F29A8%FD04FFA7B592B593B599B593B592A1292F292F2954292F292F532F292F29%2F53FD05FF99B593B592A093B592B59353292F292F532F292F292F532F29%2F2953C2B5B593B59AB593B5B5B553542F542F7E2F542F542F7E2F542F54%53FD05FFA0B593B5B5B599B5B5B593A12F542F542F5A2F542F5453542F54%2F54A8FD04FFCA93B5B5B593C2B5B593B59A542F542F5453542F542F7E2F%542F542F7EFD05FFC2B5B593B59AB593B5B5B553542F542F7E2F542F542F%7E2F542F545399B593B593C293B593B5937D292F292F532F292F292F532F%292F2953FD05FFC293B593B5939A93B593B5772F292F292F532F292F295A%292F292F29A9FD04FFA7B593B593B599B593B593A1292F292F295A292F29%2F532F292F292F53FD05FF99B593B593C293B593B59353292F292F532F29%2F292F532F292F2953BC93B5B5B59AB5B5B593B5532F2F542F7E2F542F2F%2F7E2F2F2F5453FD05FF9AB5B5B593B599B593B5B57D2F542F2F2F5A2F2F%2F54532F2F542F2FA8FD04FFCAB5B593B5B5C293B5B5B576542F2F2F5453%2F2F542F7E2F542F2F2F7EFD05FFBC93B5B5B59AB5B5B593B5532F2F542F%7E2F542F2F2F7E2F2F2F54539A9A99BC99A099BC999A997E53532F545353%2F545353535453532F7EFD05FFA099BC999A99A0999A99BC77532F545353%535453532F7E53532F5453A8FD04FFA1BC999A99BC9A9A99BC99A12F5453%532F7E53532F5453532F54535353FD05FF9A9A99BC99A099BC999A997E53%532F5453532F545353535453532F7EFD8CFF7DAFFF7DA8FD1CFFA852A8A8%7EFD1CFFA87DFFAF59FD1DFF7DAF597DA8FD17FF7D7D52A87DFD1CFF52A8%528452FD1CFFA8A87D527DA8FD1BFFA87D7D52A87DFD17FF525227A853FD%1CFF52A87D527DA8FD1BFF7DA827A87DA8FD1BFFA8535252A852FD17FF7D%A8A87DFD1DFF7DA8A8FF7DFD1DFF7DFFA87DFD1DFF7DA8A87DA8FD39FFA8%FFA8FD1EFFAFFFFFA8FD1DFFA8FFFFAFFDFCFFFDFCFFFD94FF535453532F%7E53532F54537E2F545353535453532F5453532F545359FD05FF7E53532F%5453592F545353535453532F5453532F54537E2F5453532FA8FD04FF8453%2F545353535453532F7E53532F54537E2F545353535453532F5453FD05FF%535453532F7E53532F5453592F545353535453532F5453532F5453595A2F%542F5453542F542F5453542F542F7E2F542F542F7E2F542F5453FD05FF5A%542F542F5453542F542F7E2F542F542F5A2F542F5453542F542F54A8FD04%FFA92F542F542F7E2F542F5453542F542F5453542F542F7E2F542F542F7E%FD05FF5A2F542F5453542F542F5453542F542F7E2F542F542F7E2F542F54%53532F292F297E292F292F295A292F292F532F292F292F532F292F2953FD%05FF7E292F292F2953292F292F532F292F292F532F292F295A292F292F29%A9FD04FFA82F292F292F532F292F297E292F292F295A292F292F532F292F%292F53FD05FF532F292F297E292F292F2953292F292F532F292F292F532F%292F2953542F542F2F53542F2F2F54532F2F542F7E2F542F2F2F7E2F2F2F%5453FD05FF53542F2F2F54532F2F542F7E2F542F2F2F5A2F2F2F54532F2F%542F2FA8FD04FFA92F2F2F542F7E2F542F2F53542F2F2F54532F2F542F7E%2F542F2F2F7EFD05FF542F542F2F53542F2F2F54532F2F542F7E2F542F2F%2F7E2F2F2F5453532F292F295A292F292F295A292F292F532F292F292F53%2F292F2954FD05FF7E292F292F2954292F292F532F292F292F2F2F292F29%7E292F292F29A8FD04FF7E2F292F292F532F292F2953292F292F295A292F%292F532F292F292F53FD05FF532F292F295A292F292F2954292F292F532F%292F292F532F292F29547E537E537E597E537E537E7DA176A19AA176A19A%A176A1537E537E7DFD05FF7D7E537E537E597E537E53A176A19AA176A19A%A176A17D7E537E537EA8FD04FFA9537E537E537E537E537E7DA19AA176A1%A0A176A19AA1537E537E537EFD05FF7E537E537E597E537E537EA1A176A1%9AA176A19AA176A1537E537E7D532F292F295A292F292F29A093B593B599%B593B593B5762F292F2954FD05FF7E292F292F297E292F292F76B593B593%B599B593B593A0292F292F29A8FD04FF7E2F292F292F532F292F297D93B5%93B593C293B593B5992F292F292F53FD05FF532F292F295A292F292F29BC%93B593B59AB593B593B5762F292F29545A2F2F2F54532F2F542F2F9AB5B5%B593BCB5B593B5B5A12F542F2F53FD05FF5A2F2F542F2F53542F2F2FA1B5%B593B5B5C293B5B5B59A542F2F2F54A8FD04FFA92F542F2F2F7E2F2F2F54%77B593B5B5B59AB5B5B593BC2F2F2F542F7EFD05FF5A2F2F2F54532F2F54%2F2F99B5B5B593C2B5B593B5B5A12F542F2F532F2F292F295A292F292F29%9A92B593B599B593B592B5762F292F2953FD05FF7E292F292F2953292F29%2F76B593B592B59AB592B5939A292F292F29A8FD04FF842F292F292F532F%292F297D93B592B593A092B593B5992F292F292F53FD05FF2F2F292F295A%292F292F299A92B593B599B593B592B5762F292F29535A2F542F5453542F%542F549AB5B5B593C2B5B593B5B5A12F542F5453FD05FF5A542F542F5453%542F542FA1B5B593B5B5C293B5B5B59A542F542F54A8FD04FFA92F542F54%2F7E2F542F5477B593B5B5B59AB5B5B593C22F542F542F7EFD05FF5A2F54%2F5453542F542F5499B5B5B593C2B5B593B5B5A12F542F5453532F292F29%7E292F292F29A093B593B599B593B593B5762F292F2953FD05FF7E292F29%2F2959292F292F76B593B593B59AB593B593A0292F292F29A9FD04FFA82F%292F292F532F292F297D93B593B593A093B593B5992F292F292F53FD05FF%532F292F297E292F292F299A93B593B599B593B593B5762F292F2953A176%A19AA176BC99BC99BCA1CAA7CAA7CA535A5354537E5354535A53FD05FFA1%A19AA176A1A8FFA8FFFFCAA7CAA7CAA7A85354535A5954535A53547EFD05%FFA8A87EA9A8A8A8FFFFFFA8CAA7CAA7CAA154535A537E535A5354537EFD%05FFA87EA9A8A87EFFFFFFA8FFA7CAA7CAA7A8535A5354537E5354535A53%99B592B593A092B56F9992C3FFA87DFFA82F292F292F532F292F2954FD05%FFA092994BB592FFFFA87DFFA8FFA87DFFFF592F292F295A292F292F29A8%FD04FFA8FFA87D7DFFA8FFFFA8FD04FF7DFFFFA8292F292F532F292F292F%53FD05FFA8FF7DA8FD04FF7DFD04FFA8A8FFA82F292F292F532F292F2954%BC93B5B5B59AB5995199B5A1FF7D52FFFF2F542F542F7E2F542F5453FD05%FF9AB5757693B5FFFF527DFFFFFFA827FFFF7E2F542F5453542F542F54A8%FD06FFA852FD04FF7D52FFAFFFFF7D7DFFA8542F542F5A2F542F542F7EFD%07FF52A8FFA8FFA827FFFFA8FF7D52FFFF2F542F542F7E2F542F545399B5%93B593A093994B7593C3FF7D52FFA82F292F292F532F292F2954FD05FFC2%93764B9993FFA87D52FFA8FF7D52A8FF592F292F297E292F292F29A8FD04%FFA8FFA8527DFFA8FF7D52FD04FF277DFFA8292F292F532F292F292F53FD%05FFA8FF527DFFFFFFA852A8FFFFFF5252FFA82F292F292F532F292F2954%BCB5B593B59AB593B5B5B5A0FD05FF2F2F2F542F7E2F542F2F53FD05FFA0%B593BBB5B5A8FD07FFA8FFFF7E2F542F2F53542F2F2F54A8FD07FFA8FD0D%FF7E542F2F2F5A2F2F2F542F7EFD0AFFA8FD05FFA8FD05FF2F2F2F542F7E%2F542F2F539AC2999A99A1A1A7A1CAA1A8A8FFA8FFA8A87EA87EA8595A53%7E537EFD05FFA1999A99C299A8A8FFA8FFA8FFA8FFA8FFA8A87EA87E7E53%7E535A53A8FD04FFA8CAA8CFA8CAA8FFA8FFA8FFA8FFA8FFA8A87EA87EA8%7D7E535A537E53FD05FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFA8FFA8A87EA8%7EA8595A537E537EC2B5B593B5A7FD05FFA8FD0AFF7E2F542F5453FD05FF%A0B593B5B5B5AFFD0FFF7E542F542F54A8FD04FFCA93B5B5B593FD05FFA8%FD05FFA8FD04FFA92F542F542F7EFD0AFFA8FD05FFAFFD0AFF7E2F542F54%5399B593B593CAFFFF27FD04FF7D7DFFA8FFA8527DFF532F292F2953FD05%FFC293B593B593FFFF7DA8FFA8FFA852FFFFA8FF527DFF7E292F292F29A9%FD04FFA7B593526FB5A8FF7D7DFD04FF27FD04FFA852FF7E2F292F292F53%FD05FFA8FF7D7DFD04FF27FD04FF7D7DFFA8FFA852A8FF532F292F2953BC%93B5B5B5A1FFA87D7DFD04FF7DFD04FF52A8FF7E2F2F2F5453FD05FF9AB5%B5B593B5FFFF527DFD04FF7DFD04FFA87DFF7E2F2F542F2FA8FD04FFCAB5%99279AB5FFFF7D52FFA8FFFF7DFD04FFA87DFFA82F542F2F2F7EFD07FF52%7DFFA8FF7D7D7DFFFFFFA87DFD04FF52FFFF7E2F2F2F545399B592B593A7%FFFF52FD05FF7DFFA8FFA8527DFF532F292F2954FD05FFA092B593B592FF%FF7DA8FFA8FFFFA8FFFFA8FF527DFF7E292F292F29A8FD04FFA1B593516F%B5A8FFA8A8FFAFFFFF7DFD04FF7D27A87E2F292F292F53FD05FFA8FF527D%FD04FF52FD04FFA87DFFA8FF7D527DFF532F292F2954BC93B5B5B5A7FD10%FF7E2F542F5453FD05FF9AB5B5B593B5FD10FF7E542F542F54A8FD04FFCA%B5B593B5B5FD05FFA8FD0AFFA82F542F542F7EFD0AFFA8FD10FF7E2F542F%54539A9A99BC99A099BC999A997E5353535453535354535353545353537E%FD05FFA099BC999A99A0999A99BC77535354535353545353537E53535354%53A8FD04FFA1BC999A99BC9A9A99BC99A153545353537E53535354535353%54535353FD05FF9A9A99BC99A099BC999A997E5353535453535354535353%545353537EBCB5B593B59AB593B5B5B553542F2F2F7E2F2F2F542F7E2F54%2F2F53FD05FFA0B593B5B5B599B5B5B593A12F2F2F542F542F542F2F5354%2F2F2F54A8FD04FFCA93B5B5B593C2B5B593B59A2F2F542F2F53542F2F2F%7E2F2F2F542F7EFD05FFBCB57675B59AB593B5B5B553542F2F2F7E2F2F2F%542F7E2F542F2F5399B593B592A093B592B59377292F292F532F292F292F%532F292F2953FD05FFC293B592B5939A92B593B5762F292F292F532F292F%295A292F292F29A8FD04FFA7B592B593B599B593B592A1292F292F295429%2F292F532F292F292F53FD05FF99B56F7592A093B592B59353292F292F53%2F292F292F532F292F2953C2B5B593B59AB593B5B5B553542F542F7E2F54%2F542F7E2F542F5453FD05FFA0B593B5B5B599B5B5B593A12F542F542F5A%2F542F5453542F542F54A8FD04FFCA93B5B5B593C2B5B593B59A542F542F%5453542F542F7E2F542F542F7EFD05FFC2B57693B59AB593B5B5B553542F%542F7E2F542F542F7E2F542F545399B593B593C293B593B5937D292F292F%532F292F292F532F292F2953FD05FFC293B593B5939A93B593B5772F292F%292F532F292F295A292F292F29A9FD04FFA7B593B593B599B593B593A129%2F292F295A292F292F532F292F292F53FD05FF99B593B593C293B593B593%53292F292F532F292F292F532F292F2953A099BC99BC9ABC99BC99BC7D54%535A537E535A5354537E5354535A53FD05FFA0BC99BC99BC9ABC99BC997D%535A5354537E5354535A5954535A5354A8FD04FFCA99BC99BC99C299BC99%BC765A5354535A5954535A537E535A5354537EFD05FFA099BC99BC9ABC99%BC99BC5354535A537E535A5354537E5354535A53FD2EFFA8FFA8FD21FFA8%FD1EFFA8FD1AFF7DFFFF7DFD1DFF7EFF527DFD1EFF7DFFFF7DFD1DFF7D52%FF7DA8FD17FF7D7D27A87DFD1CFF7DA87D7DA8FD1CFF7DA852277DA8FD1C%FF7D7D52FF52FD16FFA87D52537D84FD1CFF52FF52A8A8FD1CFF7DA82752%A87DFD1BFFA87D527D7D7DFD17FF53FFA87DA8FD1CFFA87DFF52FD1DFFA8%59275252FD1DFF53FFFF7DA8FDFCFFFDFCFFFD93FFA8A884A9A8A884A9A8%A884A8A8A884A97EA884A9A8A87EA9A8A884A9FD05FFA984A9A8A884A8A8%A884A97EA884A9A8A87EA9A8A884A8A8A884A9A8FD05FFA8A9A8A884A97E%A884A9A8A884A9A8A884A8A8A884A97EA884A9A8A8A8FD05FFA8A884A9A8%A884A9A8A884A8A8A884A97EA884A9A8A87EA9A8A884A95A2F2F2F54532F%2F542F2F53542F2F2F7E2F2F2F542F7E2F542F2F53FD05FF5A2F2F542F2F%53542F2F2F7E2F2F2F542F5A2F542F2F53542F2F2F54A8FD04FFA92F542F%2F2F7E2F2F2F54532F2F542F2F53542F2F2F7E2F2F2F542F7EFD05FF5A2F%2F2F54532F2F542F2F53542F2F2F7E2F2F2F542F7E2F542F2F532F2F292F%297E292F292F295A292F292F532F292F292F532F292F2953FD05FF7E292F%292F2953292F292F532F292F292F532F292F295A292F292F29A8FD04FFA8%2F292F292F532F292F295A292F292F295A292F292F532F292F292F53FD05%FF2F2F292F297E292F292F2953292F292F532F292F292F532F292F29535A%2F542F5459542F542F5453542F542F7E2F542F542F7E2F542F5453FD05FF%7E542F542F5453542F542F7E2F542F542F5A2F542F5453542F542F54A8FD%04FFA92F542F542F7E2F542F5453542F542F5453542F542F7E2F542F542F%7EFD05FF5A2F542F5459542F542F5453542F542F7E2F542F542F7E2F542F%5453532F292F297E292F292F295A292F292F532F292F292F532F292F2953%FD05FF7E292F292F2953292F292F532F292F292F532F292F295A292F292F%29A9FD04FFA82F292F292F532F292F297E292F292F295A292F292F532F29%2F292F53FD05FF532F292F297E292F292F2953292F292F532F292F292F53%2F292F29535A2F542F2F53542F2F2F54532F2F542F7E2F542F2F2F7E2F2F%2F5453FD05FF53542F2F2F54532F2F542F7E2F542F2F2F5A2F2F2F54532F%2F542F2FA8FD04FFA92F2F2F542F7E2F542F2F53542F2F2F54532F2F542F%7E2F542F2F2F7EFD05FF5A2F542F2F53542F2F2F54532F2F542F7E2F542F%2F2F7E2F2F2F5453535A535A537E537E535A53A19AA09AA09AA09AA09AA0%765A535A537EFD05FF7E535A535A537E535A537E76A09AA09AA09AA09AA0%9AA1535A535A53A8FD04FF7E5A535A535A535A537E537EA8FFA8A9A8A89A%A09AA09A5A535A535A53FD05FF535A535A537E537E535A53A9A8A9A8FFA8%A9A8FFA8A97E5A535A537E5A2F542F5453542F542F549AB593B5B5BC93B5%B5B593A12F542F5453FD05FF59542F542F5453542F542FA193B593B593C2%B5B593B59A542F542F54A8FD04FFA92F542F542F7E2F542F547EFD05FFC9%B593B5B5BC2F542F542F7EFD05FF5A2F542F5453542F542F54FD0BFFA92F%542F5453532F292F295A292F292F29A093B593B599B593B593B5762F292F%2954FD05FF7E292F292F297E292F292F76B56F5293B59AB593B593A0292F%292F29A8FD04FF842F292F292F532F292F297EFFFF27A8FFCA6F514B7699%2F292F292F53FD05FF532F292F295A292F292F29FFFF5252FFA8FF27A827%FF7E2F292F29545A2F2F2F54532F2F542F2F9AB5B5B593BCB5B593B5B5A1%2F542F2F53FD05FF5A2F2F542F2F53542F2F2FA1B59A27BBB5C293B5B5B5%9A542F2F2F54A8FD04FFA92F542F2F2F7E2F2F2F547EFFA8527DFFA7B575%764BBC2F2F2F542F7EFD05FF5A2F2F2F54532F2F542F2FA8FF5253FFFFFF%7D7D7DA8A82F542F2F532F2F292F295A292F292F29A092B593B599B593B5%92B5762F292F2953FD05FF7E292F292F295A292F292F76B5937592B59AB5%92B593A0292F292F29A8FD04FFA82F292F292F532F292F297EFFFF7DFFFF%CA92999399992F292F292F53FD05FF2F2F292F295A292F292F29FFFFA8A8%FFA8FFA8FFA8FF7E2F292F29537E535A535AFD067EA0C299BC99C39AA19A%A19AA1537E537E59FD05FF7E5A535A535AFD057EC399BC99C299A19AA19A%A17D7E537E537EA8FD04FFA9535A535A53FD057EA8FD05FFA8A19AA19AA1%537E537E537EFD05FF7E535A535AFD067EA8FD05FFA8A9A8A9A8A8537E53%7E59A8FD0FFFA82F292F292F532F292F2953FD10FFA8FD05FF7D2F292F29%5A292F292F29A9FD04FFA8FD05FFA8FD0AFFA8292F292F532F292F292F53%FD05FFA8FD0FFFA82F292F292F532F292F2953FFFFA87DFFA8FFFF7DA8FF%FFFFA8A8FFFF2F542F2F2F7E2F2F2F5453FD05FFA8FFA87DFD04FFA8A8FD%04FF7DFFFF7E2F2F2F54532F2F542F2FA8FD07FF7DA8FD04FF7DFFA8FFFF%7DA8FFA82F2F542F5A2F542F2F2F7EFD07FFA87DFFA8FFFF7DFFFFA8FF7D%A8FFFF2F542F2F2F7E2F2F2F5453A8FF27A8FFFFFFA827A8FFFFFFA827FF%A82F292F292F532F292F2954FD07FF7D52FFFFFFA85253FFA8FFA852A8FF%592F292F295A292F292F29A8FD04FFA8FFA852A8FFA8FF537DFD04FF527D%FFA8292F292F532F292F292F53FD05FFA8FF27A8FFFFFFA827FD04FF7D52%FFA82F292F292F532F292F2954FFFF7D7DFFA8FFA8527DFFFFFF527DFFFF%2F542F542F7E2F542F5453FD07FF7D7DFD04FF7D7DFFFFFFA852FFFF7E2F%542F5453542F542F54A8FD07FF52FD04FFA852FFFFFFA8277DFFA8542F54%2F5A2F542F542F7EFD07FF7D7DFFA8FFA852A8FFAFFF527DFFFF2F542F54%2F7E2F542F5453A8FD0FFFA82F292F292F532F292F2954FD10FFA8FD05FF%7D2F292F297E292F292F29A8FD04FFA8FD05FFA8FD0AFFA8292F292F532F%292F292F53FD05FFA8FD0FFFA82F292F292F532F292F2954FFFFFFA8FFA8%FFA8FFFFFFA8FFFFFFA8FFA8A884A9A87E537E537E59FD05FFA8FFA8FFFF%FFA8FFFFFFA8FFFFFFA8FFFFA984A9A8A87E7E537E537EA8FD05FFA8FFFF%FFA8FFFFFFA8FFA8FFA8FFFFFFA8A9A8A884A8537E537E537EFD08FFA8FF%A8FFA8FFFFFFA8FFFFFFA8FFA8A884A9A87E537E537E59A8FD0FFFA8FD05%FF532F292F2953FD10FFA8FD05FFA8FD04FF7E292F292F29A8FD04FFA8FD%05FFA8FD0FFF7E2F292F292F53FD05FFA8FD0FFFA8FD05FF532F292F2953%FFFF7D7DFD04FF52A8FFAFFF7D7DFD04FF52A8FF7E2F542F5453FD07FFA8%52FD04FF527EFD04FF52FD04FF7D7DFF7E542F542F54A8FD07FF27FD04FF%7E52FFAFFFFF52FFFFAFFF7D52A8A92F542F542F7EFD07FF7D7DFFFFFFA8%52FD04FF7D7DFD04FF52A8FF7E2F542F5453A8FF2752FFFFFFA852A8FD04%FF7DFFA8FFFF52A8FF532F292F2953FD07FF7D27FD04FF7D52FFA8FFFF7D%FFFFA8FF59A8FF7E292F292F29A9FD04FFA8FF84527DFFA8FF527DFD04FF%59FD04FFA852FF7E2F292F292F53FD05FFA8FF277DFFFFFF7E52A8FFFFFF%A87DFFA8FFA852A8FF532F292F2953FFFFA8A8FFA8FFFFA8FD05FFA8FD04%FF7DA8FF7E2F2F2F5453FD05FFA8FFA87DFD04FFA8FD05FFA8FD04FF7D7D%FF7E2F2F542F2FA8FD07FF7DFD05FFA8FFA8FFFFA8FD04FF7D7DA8A82F54%2F2F2F7EFD07FFA8A8FFA8FFFFA8FD04FFA8A8FD04FF7DA8FF7E2F2F2F54%53A8FD0FFFA8FD05FF532F292F2954FD10FFA8FD05FFA8FD04FF7E292F29%2F29A8FD04FFA8FD05FFA8FD0FFF7E2F292F292F53FD05FFA8FD0FFFA8FD%05FF532F292F2954FD05FFA1C299BC99C27D5A535A537E535A535A537E53%5A535A59FD05FFA8FD05FFA8FD04FF84535A535A537E535A535A7E5A535A%535AA8FD0FFF845A535A535A7E5A535A537E535A535A537EFD0AFFA8FD05%FF595A535A537E535A535A537E535A535A59A8FF597DFFC393B56F93937E%292F292F532F292F292F532F292F2954FD07FFA87DAFFFFFFFA8A8FF7E2F%292F292F532F292F297E292F292F29A8FD04FFA8FFA87D84FFA8FFA8A8FF%A8292F292F297E292F292F532F292F292F53FD05FFA8FF59A8FD04FF7DFF%FF54292F292F532F292F292F532F292F2954FFFFFF7DFFA1B56F2775B553%542F2F2F7E2F2F2F542F7E2F542F2F53FD08FF7DFFFFA8FF277DFF842F2F%2F542F5A2F542F2F53542F2F2F54A8FD07FF7DA8FFFFFF7D27FFA82F2F54%2F2F53542F2F2F7E2F2F2F542F7EFD08FF7DFFFFFF7D27A8FF53542F2F2F%7E2F2F2F542F7E2F542F2F53A8FF7DA8FFC393752099937D292F292F532F%292F292F532F292F2953FD07FFA87DFD04FF5252FF7D2F292F292F532F29%2F295A292F292F29A8FD04FFA8FFFF7DFFFFA8FF5252FFA8292F292F295A%292F292F532F292F292F53FD05FFA8FF7DFD04FF7D27A8FF53292F292F53%2F292F292F532F292F2953FD05FFA1B593BBB5B553542F542F7E2F542F54%2F7E2F542F5453FD10FFA82F542F542F5A2F542F5453542F542F54A8FD0F%FFA8542F542F5453542F542F7E2F542F542F7EFD10FF53542F542F7E2F54%2F542F7E2F542F5453A8FFA8FFA8C99AC29AC29A7E537E537E537E537E53%7E597E537E537EFD06FFA8FFA8FFA8FFA8FFA8FF7E7E537E537E597E537E%537E537E537E53A9FD06FFA8FFA8FFA8FFA8FFA8A8537E537E537E537E53%7E537E537E537E7EFD05FFA8FFA8FFA8FFA8FFA8FFA87E537E537E597E53%7E537E597E537E537EFD0DFFA8A8FD20FFA8FD1FFFA8A8FD20FFA8FD1AFF%52A87E7DFD1DFF7D7EA852FD1DFF7D7D52A852FD1DFF527D7DA8FD17FFA8%7D59FF52FD1DFF52A87D7DFD1DFF7DA8277EA8A8FD1BFFA87D7DFF52FD18%FF527D7D7DFD1DFF7D847D52FD1DFF7DA8F8527DA8FD1CFF7D7DA87DFD18%FFA8FFA8A8FD1DFFA852A8A8FD1EFF7DFFFF7DFD1DFFA8FFA8A8FD8BFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T11:07:49+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T11:07:50+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T11:07:50+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>224</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA4AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AI9V1XVF1S8VbycKJ5AAJ&#xA;HAADn3zqceOPCNhydZOZs7tSarqn6Ogb65PyM0wLeo9aBYqd/fEY48R2HIfpUzNc29O1XVGuHDXk&#xA;5HoTmhkc7iFyD17HHJjjXIcx96xmb5oX9L6t/wAts/8AyNf+uT8KPcGPGe9FajquqLcIFvJwPQgN&#xA;BI43MKEnr3OQx441yHM/eylM3zdHqupnTLhvrk/ITwgN6j1AKS1HX2xOOPENhyP6FEzXNZYatqhv&#xA;rYG8nIMqAgyPSnIe+HJjjwnYcljM2N32RnKuzfPH58317b+c0WC4kiU20ZKo7KK7+BzedmwBhuOr&#xA;h6mRB2YDY6rqZW6reTmkDEVkfY8l98zZ447bDm0wkd9+iF/S+q/8ts//ACNf+uT8KPcGHGe9XvdV&#xA;1QTKBeTgelEdpH6mJSe+RhjjXIcz97KUz3uTVdU+ozN9cnqJYgD6j1oVk9/bE448Q2HI/oXjNc29&#xA;N1XVG1G1VrycqZowQZHIILD3wZMceE7DksJmxuh/0vqv/LbP/wAjX/rk/Cj3BjxnvfR35GTTTeQo&#xA;pJnaSQ3M9XcliaEDqc0HaAAymnPwG4u/POaaHyFLJC7RyC5go6EqRUkdRj2eAcotc5qL5x/S+q/8&#xA;ts//ACNf+ub/AMKPcHA4z3onVNU1NNTu1W8nVVmkCqJHAADnYb5DFjjwjYcmU5mzu3Jqmp/ou3b6&#xA;5PyM8wLeo9SAkVB198RjjxHYch+lTM1zdpuqam1w4a8nI9C4NDI53EDkHr2OOTHGuQ5j71jM3zQv&#xA;6X1X/ltn/wCRr/1yfhR7gx4z3om+1XU1MHG8nFYYyaSONyOvXIQxx32HNnOR236M/wDyGvr2485u&#xA;s9xJKotpCFd2YV28TmF2lACGw6t2mkSd30Pmjcx8b3+q6oL65AvJwBK4AEj/AMx986rHjjwjYcnW&#xA;SmbO7cmq6p+joG+uT8jNMCfUetAsVO/vgGOPEdhyH6VMzXN1hquptOwa8nI9Gc0MjncQuR38ccmO&#xA;NchzH3rGZvmh/wBL6r/y2z/8jX/rk/Cj3BjxnvRF/quprOoW8nA9GA0EjjcwoT38chjxxrkOZ+9l&#xA;KZvm3Hqup/oy4b65PyE0IDeo9QCktR19sTjjxDYcj+hRM1zb0rVdUbVLNWvJypnjBBkcgguPfHJj&#xA;jwnYclhM2N2tVk079KXnKCYt68nIiZQK8z29I44xLhG45d37VmRZad9N/RsBMExUzTAATIDUJFXf&#xA;0sQJcR3HIdPf5rtSppJ0t7wqsE6kwz1JmQ7eg9f91DtmPr8s8WGU9jw78vP3uX2dp4588MZscZq/&#xA;e19W0f8A3zcf8j0/6o5zX+iXN/Nj9v63uP8AQPi/1SXyCJ1C20r115RTk+jB0mQbeilP91Htg/0R&#xA;5o7cMft6797DH7GYpi/ElzI5Doa/QpyR6XFpUxWGfiZ4QQZkrXhLTf0s2fZfamTVZCCIio+fePN0&#xA;vb3YMNBCJEjLiPu5IWwk0369b8YJg3qpQmZSK8h29IZvMglwnccu79rzMSLD7JzlXZvnf8+mtB50&#xA;T145Hb6tHxKSBBT6UfN52aDwbd7h6mr3YBYyad/pAEEwBhflWZTsKHb917ZmzEttxz7v2tMCN/ch&#xA;vU0r/lnn/wCR6f8AVHJ1PvHy/awuPd+PkmV1b6UXjZoZ6mGE7TINjEpH+6jnKajt/LiySgIxPDIj&#xA;r3+97rs/2Sx6nBDKZyHELqgvS00n9Hzt6U/ETRAj1krUrJTf0vbKv9Eebnwx+39fk3n2MxCYh4kt&#xA;wTyHSv8Ainaba6UdRtQsU4b1o+JMyEA8hSo9IfrxHtFmkeHhjvt1/Wub2MxY4Sn4kjwgnkOm6U+p&#xA;pn/LPN/yOT/qlnYVLvHy/a+fWH0h+RZiPkGIxKyx/WZ+KsQxG46kBf1ZoO0L8U25+D6XfnoYh5Bl&#xA;Mqs0f1mDkqkKTuehIb9WPZ9+KKXP9L5v9TTP+Web/kcn/VLN/Uu8fL9rgWEXqcumfpK75W8xb1pO&#xA;REyAV5GtB6RyGMS4RuOXd+1lMiyrxppculwkwzhRPNQCZK14RV39LNL2r2nk0swAIniHn0+L0nYP&#xA;YUNfGdyMeAjz5/2Klhb6UJ2Kwzg+jMN5kOxiYH/dQ7Zqz7R5jtwx+3p8XeZPYvFAX4kuYHIdTX6U&#xA;N9W0j/fNx/yOT/qjh/0S5v5sft/Wz/0D4v8AVJfIN6qNNjkgHozGsCEfvkG24/31nRdm6iefCMho&#xA;WT9/veL7V0kdNqJYgTLh6s7/ACFa0PnR/QjkRvq0nIvIHFPoRMj2kDwb97j6ar2fRGaNzHxtfyad&#xA;9euOUExb1XqRMoFeR7ekc6rGJcI3HLu/a6yRFlc76b+jYCYJipmmAAmUGoWKu/pYAJcR3HIdPf5r&#xA;tS/Szpkl2UEE61hnqTMh2ELk/wC6h2zG7QzTxYZTFHhrp5jzczs3TRz54YjY4zVu+raR/vm4/wCR&#xA;yf8AVHOb/wBEub+bH7f1vb/6B8X+qS+QROoWulCdeUU5PowdJkG3opT/AHUe2D/RHmjtwx+3rv3t&#xA;eL2MxTF+JLmRyH8JI/QpSR6ZFpcxWGfiZ4QQZkrXhLTf0s2fZfamTVZCCIio+fePN03b3YMNBCJE&#xA;jLiPu5KGlSad+k7PjBMG9eOhMykV5jt6Qzd5BLhO45d37XmYEWFTVdKvG1S8YCOhnkIrNEDu57Fq&#xA;5iw7S04iAZx+bnnsjVy3GKZB/olzaRetpkCj0qrNMTWeEDdIu5enbIntTTCVmY5frZDsbVnYYp2P&#xA;L8dyrpGkXsV6Xcw8fRnG08B6wOBsHPjmF2l2lgyYJRjIGRDsOyuytVh1WPJkxyjCMhZpf+jrj+eH&#xA;/kfD/wA15xXCX1P81Hul/pJ/8Srajav9YWssAIhgBBnhB2hQd3zMh2dnyASjEmJdRDt3R4bhOfDI&#xA;SltUusie5Qns5H0qZFkgLGeE/wB/DSgSUdedO+b3sPSZcGUnJEgGP6Q8v7V9p6fVY4DDISMZG+Y6&#xA;edIOw024W+tyXgoJUO1xAT9odg+dLkyDhPPl3F4qMTYfZGcs7N88/nxY3Nx5yR4wnEW0Yq8iJv7c&#xA;2WubXRazDijU5CJYy0GfNvjhKQ8gSwGw0i9DT7R7wuNpojSopv8AFtmTk7T09fXFEeyNWOeKYvb6&#xA;SofoS/8A+KP+kiD/AJrx/ljS/wA8fay/kLW/6lP5Jrc6dcBowWhBEMAIM8I6RKO75wutIlmnIcjI&#xA;l9P7GyjHpMcJCXFEUfTLmPcFy2ciaZOrSQgmaEg+vDTZJe/OnfBg0uTKCIDiPky1faeDDljLITCP&#xA;DIbxkN7j5eS3TbcrqNqxlgIE0ZIE8JOzDoA9TmTDsvUiQJgacTV+0OininGOQEmJA2l3e5Jf0Zc/&#xA;zwf9JEH/ADXnoHiDz+RfJeA/gvo/8jImi8hRRsVLC5nqUZXG5B2ZSQc0HaBvKXPwD0t/nlDJN5Cl&#xA;jjpyNzDTkQo2JO5YgDIaPNDHkEpmg2nBPKOGAMpdw3fOX6Ivf+Kv+R8P/Nebf+VNN/Pj82H8jaz/&#xA;AFLJ/pSitS0a+bUbph6IDTSEAzwA7seoLgjKodraYAAzFj3s/wCRdZL1DFMg+SKh0y6TS4kZoQwn&#xA;mb+/hpQpEOvOnbOb7d1OPNOJxmwA9n7J4MmlGQZYyiTw/wAJPf3AqlnYzLKzF4aelN0nhPWJh2fN&#xA;LjxSlIAbkvTavWY44+KXEADEkmMuQkD3IX6q3+/rf/pIh/5rzL/knU/zC4n+iXQf6oPlL9S3V7Ga&#xA;SS3ZHgIECCpnhHSvi+dh2RE4tOITBEhfTzfNO3c0M2rnkgbjLkfh5s6/Ia0lg85sztGQbaQD05Y5&#xA;D9IRmyfaUgYfHucHTCi+h80bmPjm/wBJvWvrggR0MrneaIH7R7Fs38O0tOAAZx+bWeyNXLcYp0f6&#xA;JXtpF62mwKPSqs0xNZ4QKFIu5eh6ZE9qaYSszHL9bIdjas7DFOx5fjuVNJ0i9jvC7+jxEM42nhbr&#xA;C46BzmD2n2jgy6eUISBkf1ux7J7L1ODVY8mTHKMIyFml/wCjrj+eH/kfD/zXnF8JfUvzUe6X+kn/&#xA;AMSr6lat9ZX97ACIYAQZ4QdoUHd8zY9nZ8gEoxJiXT4+3dHhuE58MhKW1S6yJ7kPPZyPpcyLJAWM&#xA;8J/v4aUCSjrzp3zedh6TLgyk5IkAx/SHmPavtPT6rHAYZCRjI3zHTzpDaVp1wup2bF4aCeMmk8JO&#xA;zjoA9c6XJkHCefLuLxUImwjNW/46t7/xnl/4mc8xnzL7po/7mH9WP3NSf8cy3/4zTf8AEIseix/v&#xA;pf1Y/fN2nf70P/xhn/5MvjHmuq+kf1of7uKFyLkKOt/73/8APG3/AOTCZ6H2N/isPj95fFu3/wDH&#xA;cv8AWUo/+OZcf8Z4f+IS5sD9Q9x/Q6oclunf8dC2/wCMqf8AEhhyfSfcsOYfaWck7V4D+ev/ACls&#xA;X/MOuaXX/wB58H0D2U/uJf1mCab9m8/5h3/4kuYYd9qucP64+4oPA5aK1L/elP8AjBb/APJhMlPn&#xA;8B9zjaT6D/Xn/u5Ia5/45E3/ADEQ/wDEJc6P2Z/vJ/1f0vGe3P0YvfL9CD0n/jq2X/GeL/iYzrsv&#xA;0H3PnsPqCFyxi+l/yG/8l9D/AMxM/wDxIZzvaP8Aen4Ox0/0BX/Oz/lBJ/8AmIh/4lml13929H7N&#xA;/wCOR90vuL52zSPpiK1b/jqXn/GeT/iZyU/qLjaL+4h/Vj9y1/8Ajnw/8ZZf+Ix4OjKP97L+rH75&#xA;LLbrL/xgn/5MvmX2d/jGP+vH73X9v/4ll/qpLnpb4si7/wCzaf8AGBf+JNlePr72c+nuehf84/8A&#xA;/Kayf8w0n8Mwe0/7se9v0vMvo3NC5r5C1H/joXX/ABlf/iRzmZc32LS/3UP6o+5uT/jmQf8AGab/&#xA;AIhFh6Ij/fS/qx++bem/70P/AMYLj/kw+MOfz+5Gr+gf1of7uKBPq+utATEUIevGgavwkb8vGu2W&#xA;enw/NwT441ori8Ix35cPLp538fgt1v8A3v8A+eFv/wAmEzv+x/8AFYe79L5Z27/juX+uVGP/AI5l&#xA;x/xmh/4hLmcfqHuP6HVjku0j/jq2X/GeL/iYxy/SfcsOYT3VL+ddTu1Cw0E0gFYYSdnPUlKnPL5y&#xA;Nl9u0mmicMDcvpH8Uu73tS6lMmmRSFYaerNyrBCRRUjPTh75IEmgO9ryYoQnORMqjAH6pf0/6Ten&#xA;alO9zIpSEFIp6j0IRuIGYbhckdj05dzjQ4cuK6nEicARxyP8UT39xQ36Tuf5IP8ApHg/5oyrjP4A&#xA;dp+Uh3y/08/+KV9Su3Fyv7qAkwwEk28JO8KHumZY1+eAEYzIDqsfYmky3OcBKRlLck3tIjvQ9xey&#xA;LpcrrHAGE8I2t4aUKS9uFO2b/sHUZM05eJIyod7yntZ2dg0scfhREeIyv4V3oOw1K4a+twUgoZUG&#xA;1vAD9odwmdJkxjhPPl3l4yMjYfZGcs7N4P8AnfcyQ+a4wgQ1gUnnGkn3c1amabXGsnwe79mMIngl&#xA;d/V0kR9xCT/lgkOqeb7exv4IZrSaOQSxGGNQwC1oeKg9cr0lSyAEbOV7QQ8LTccDISEh/FL9b1CL&#xA;R/IcnmiXQj5agUIzwpecUKNNHBDcsnAHkB6VytG8QR4V3H5fH/NDxH8qar/VJ/6YvHfPFybDzVql&#xA;rbQRC3t7kwwxCCFisakKoq69FX36Zp8gvIYih8Ht9LMQ0UcsuOR61OQ5nn9SWC/mawm5RwGksW3o&#xA;Q0+zJ24UyOHVZMdmB4fds5up7LwZskY5I8YqR3lI/wA3vK2wu3N9bj0oBWVNxbwg/aHQhKjMvB2j&#xA;qJZIgzlRI6uFruwdFDBOUcYEowkRz5ge9Jv0nc/yQf8ASPB/zRnoHhjz+ZfJeM/gPo/8jJWl8hRS&#xA;MFDG5nqEVUGxA2VQAM0HaArKXPwH0q/50SNH5HldQCRcQ0DKGG7EbqwIOafXH929D7PQEtXEHuPW&#xA;unk+ff0jcfyQ/wDIiH/mjNLxF9G/Kx75f6ef/FPdfMVh5H0PSrS9uPLsN/cXEEt1OFCK3pW8BuLi&#xA;Ul9i1BsvcnN+MED0D5Z/KWpjsMkwP6xZCvkHyYbmSE6PamJER1T0xQM5YMfpCDD4GP8AmhH8pam7&#xA;8Sf+mLF9V0TyvN5A1TWrXy/Fpd7Ct3CsUixPJG9vO9s3IxmSM8vTPQkb5XkxxhEyiKkORcnSavNn&#xA;zQx5JylCUgCDI0Rbww6g4lWM28HxCof6vbU2rXbjy22rtTcZhjtDUmPF4kvm9XPsrQxzjD4HMXf4&#xA;PLz7yA1q1/Ok8SqkAX0YyB6EJpUVNKp4nOx7KvJgjKRJkfMvnvbOOOLVThAARidgzv8AIa7ln85s&#xA;rrGALaQj04o4z9JRVx7SiBD497iaY2X0Pmjcx8l39/Ot9cqFhoJXArDCT9o9ymc3KRt9a02micUT&#xA;cvpH8Uu73vS/ywsfLt55P1jVtd0+G8TTJJZf7pARHHAsjhQoUVPHNnoscZwNgHd5H2iz5MGoAxzn&#xA;EGA/il3y82YaL5d8najZzS/4et7G8tbkWd3AQj8WJTkA67MrRSj76Zmfl8fcHQHtLUnnkn/piv8A&#xA;8MeSB5nGhN5ahXnZtex3pWP024SrG0YUMX5LzUkkAb7V3oPy+P8AmhP8p6r/AFSf+mKH8yeXPJGj&#xA;6LLq0/lqC/8ASl9J1URoVjEhjDFpCooigADqdgNzmVDLOA4YkgBwcnrkZS3kepYV+c+jaFomg6Rc&#xA;6LpkOnm9lJmjaBOVBHyVXRw1GXkc2XZ85TmeIk7d5cXOBGOweWaVqNw2p2alIaGeMGkEIO7joQlc&#xA;2eTGOE8+XeXGhI2E11SPTTqd2XnmDetJyAhQgHma0Pqj9WeZyAs/j9L7XpJZvChUY/SP4j3f1Gnj&#xA;039Hwfv5uPrS0PopWvGOu3q/LvjtXNF5TkkDGO8Y/wAR75f0FtiulxSSMk0xpDPUGFBt6L1/3ae2&#xA;ZGnxeNlEb3ls4WtkdHpjIQiIQMZbSN/UO+P6Uv8ArWkf7+uP+RKf9Vc3X+hnJ/PHydF/o5h/qR/0&#xA;37ETqF1pf1hOUs4PowbCJDt6KU/3aO2P+hyct+MfLu2a8XtpHGK8I8yfq/nEy7vNSkk0yXTJgJpw&#xA;gnhLMYUrXhLQAer8++bPszsyelmdxLiHu5Ol7d7djr4x9JhwE9b5/LuQ9hHpf16343E5b1UoDCgF&#xA;eQ7+qc3EzLhOw+f7HnYgWH2RnKuzeD/ncto3muP15JIz6C8QkavUe9XTNNrq8Tfue79mDkGCXCAd&#xA;+pr/AHpY55G1jTdB15dWBmuRaROzQmNY6gjjs3N/HwynBkjCXE7DtjT5tRiGMiMeKQ34if8Aehm8&#xA;f5y+UI9Vk1ZPL8q6lMvCS5DpyIIVT7VKxoCetFA7DM7+UY9xee/0JZ/58Pt/U80806zpWo+Yb7UG&#xA;M8RvJDP6XpI/ESAMByMi1oD4ZnY+w55gMsZAcW/zaz7Rw0sDpcmPj8M8J9Wxo+5ApdaX9RmHqz8f&#xA;ViqfSSteMlNvVyX+hufLjHybD7axMhLwjsCPq768vJ1hc6Wb+2CSzljKgUGJAK8hSp9U5OHs9PHI&#xA;T4x6d/kw1HtlHNjlj8MjjiY/V3iu5LPT0r/lon/5EJ/1Wzqrn3D5/seDqPf+Pm+j/wAixEPIUQiZ&#xA;nj+sz8WdQrHcdQC3680HaF+Kbc/B9Kv+c4iPkeUSsyR/WIeTKoYjc9ASv680+t/u3ofZ4y/Nx4RZ&#xA;o89unuL5+9PS/wDlon/5EJ/1VzS1Hv8Ax830Xjz/AM2P+mP/ABD1XVfzX8p3VvFperaDJerYNwHJ&#xA;14lkQxMe3wspIIOxB3za/wAoRG1F4bH7LZskRISjUhfXr8EXN+fuk25F4dKuGSf9yqiRKgw/ESdu&#xA;/rDNn2fjOqBMduHvdJ2topaGYhMgmQvb9qUan+c+g6voOoaHaaTPZreR3EjSc0YKzlp5W47VLNyP&#xA;XqczM3ZUzEixvt83C0mvjiyxnV8JB+W7y0XOkA1Es9SKE+im4Ff+LffMH/Q3kquMV7nppe1+E5PE&#xA;OE8ffx/sdqY0ySWJ2nmWsMdAIUOwXb/dozf6HBLDiENjw/jueT7R1I1GeWWuHjN1zZ7+Qy2a+dG9&#xA;CWSRvq0nISRqgA9iHfK+0ieDfvatNV7PofNG5j5Lv49N+vXHKeYN6r1AhQivI9/VGc3IRv8AH631&#xA;nTSzeFGox+kfxHu/qM18jeftF8r6DdWVxZy6jb6hM/MMEQUEaKyMpZwQQ3jmZp9VHHGue7oe1uyM&#xA;2sz3cY8MB1J6y/ohO9P/ADk8sWFj9S03Q5baCMm4KCRTUofVckmrFm49TmfpdSM2QQAoydFr/Z/L&#xA;psMsspRMY9199dy0/wDOQXls3qXx0Kc3aRtAk3qJyEbsrMvyLIDm9/kufeHmPzUe5R1X87vLF3bL&#xA;Y6lodxcRc0ulUTBKMx9aM1XiaryH04I9mTPUJOpiGN/mF+Yej+cNFs4IbW4sIdNlABYrOzepGwUb&#xA;snQR7knMnS6WWGfQ2GrLlEwwnS49MGp2fG4mLevHxBhQAnmOp9U5m5DLhOw5d/7GmAFhM9V0+/bU&#xA;7xltpSpnkIIRiCC59s8ynE2X23SanEMMPVH6R1Hc1JYX/wCjoF+rS8hNMSODVoVip29seE0sdTi8&#xA;WR4o/THqO+Sy2sL9TKWtpQPQnFSjDcwuB2zO7KFamF97rPaLPjlocgjIE0Ov9IJJ+jtQ/wCWaX/g&#xA;G/pnofiR7w+R8B7kVqVhfNcIRbykehbjZG6iBAe2V48ka5jmfvZSib5OjsL79F3C/V5eRnhIHBq0&#xA;CS17e+EzjxDfof0KImuSzT9Pvxf2xNtKAJUqeDfzD2xyZI8J3HJYxNjZ9l5yrs3g354WtzN5riMM&#xA;TyAW6glFLU+7NLrwfE+D3nsvmhDBLiIHq6lg+n2F8q3fK3lFbdgKo25qu3TMQRLvNVqcRMPVH6x1&#xA;Hmg/0dqH/LLL/wAA39MHCXK/NYv58fmEJqen35uzS2lPwRfsN2jX2z0bs2cRp4Wf4Q+M9ri9XlI3&#xA;HiS+9Ymn3/1CYfVpa+rFtwb+WT2zKOSPENxyP6HA4TXJdplhfDUrQm2lAE0ZJKN/MPbHJkjwnccl&#xA;hE2NkN+j9Q/5Zpf+Ab+mT8SPeGPAe59I/kVHJH5BhSRSji5nqrAgj4h2Oc/2gQcppz8A9Kv+dEck&#xA;nkeZI1LubiGiqCSaNXoM02uH7t6H2dmI6uJJoUfufPn6O1D/AJZZf+Ab+maXhL6P+axfz4/MInVL&#xA;C+bUrtlt5WVppCCEYggufbJTieIuNo9TiGGAMo/SOo7kJqVhffo61X6vLyE05I4NWhWKnb2zrPZs&#xA;gQne24eC9s5ieeBieL0dN+pQ2m2F8tw5NvKB6FwKlG6mBwO2dDkyRrmOY+95CMTfJC/o/UP+WaX/&#xA;AIBv6ZZ4ke8MeA9yJvrC+JgpbymkMYNEbqB8shDJHfcc2c4nbbo9A/IS1uYfOjtLC8am2kALqVFd&#xA;vHMHtKQMNj1btMCC+ic0bmPkrUNPvzf3JFtKQZXIIRv5j7ZzUom31vS6rEMUfVH6R1Hc3JYX/wCj&#xA;oF+rS1E0xI4NWhWL29sJiaRHU4vGl6o/THqO+SlDYXy+qWtpQPRmFSjdTEwHbM/skVqYX3/odX7R&#xA;58ctDkEZAnbr/SCTfo/UP+WaX/gG/pnoXiR7w+ScB7kTqFhfNOpFvKR6MA2RuohQHtkMeSNcxzP3&#xA;spRN8m47C+/Rdwv1eXkZ4SBwatAkvt74DkjxDccj+hRE1ydpVhfDVLMm2lAE8ZJKN/OPbDkyR4Tu&#xA;OSwibGz7IzlXZuxV2KvPtP8AzFmvRpliOMN/rljHqFtcMVCW7XMMtxbwPGRuAkHFyXDEnb/JKsy8&#xA;var+l9A0zVvSMH6QtYLr0G+0nrxrJwPTdeVMCo/FXYq7FXYq7FXYqw3zF5p1a31me1sAoSwfT0aJ&#xA;yifWHvpJFKM7huCKsa0Ze5PhTCqM8peabjWbqVJIXjgmsLDVrT1FAZIr/wBZfQdkqjNG1sTyHVWH&#xA;WlSFZNirsVdirsVdirsVSnzFqc9klhBbkJNqV5HZrMQG9MMryOwB25cImC125UqCNsVSHSvPsmqz&#xA;aNdW0SLY6pc/VDCJEklCy2cl3HI6qA0cqGBkkibpUmu26rNMVdirsVdirsVdirTsERmIJCgkhQSd&#xA;vADrirzeP8wdT1J/LtnazJaXWrLaXN1L+7YLHqVrczQRwxsG9URmAcn5Cp6VqeJVm/lnVZdX8vab&#xA;qk0QhlvbeOaSIVorOoJC13416e2BUyxV2KuxV2KuxVKx5Y0QWz2wtlET8wNzzRJCxZI3rzRPjaiq&#xA;QACQKDFUyjjjijWONQkaAKiKAFCgUAAHQDFV2KuxV2KuxV2KuxVBXGjaZcXT3U9uksssQgmDjkrx&#xA;o3NA6H4W4MSVqNqmnXFVW20+0tpZ5oYws1yQZpOrNxFEWv8AKo2UdB9+KojFXYq7FXYq7FXYqh7/&#xA;AE+1v4BDcoWRXSVCCVZZI2DI6spBBBGKqa6Ppi3UVyluiSwmR4uI4qJJRR5OI25su3LrSo7nFUZi&#xA;rsVdirsVdirsVdiqWp5b0VLZbdLVFjjDiBh9uJZGLFYn+1GoJ+EKRx7UxVHW9vBbW8VvbxrDbwos&#xA;cMSAKiIooqqo2AAFAMVVMVdirDJfzh/LyKV4pNUCyRsVdfSm2INCPsZlDRZSL4Ws5Y97j+cX5eCM&#xA;SHVPgYlVb0ptyoBI+x/lDH8ll5cK+LHvdH+cP5eSMVTVOTAMxHpTdFBZj9jsBidFlH8K+LHvW/8A&#xA;K5fy5/6uw/5FTf8ANGH8jm/mr40e9dJ+cP5eRsFfVOLEKwHpTdGAZT9juDgGiyn+FfFj3uH5w/l4&#xA;Y2kGqfu1IVm9KbYsCQPsd+Jx/JZbrhXxY97o/wA4vy7kdY01UF3IVR6U25Ow/YxOiyj+FfFj3szz&#xA;FbGOa/8AmF5R0C9Flq199WuSocJ6cjfCehqqkZfj005i4i2Epgc0vT84fy9cMU1SvAcm/dTbAbV+&#xA;x75M6LKP4UeLHvW/8rl/Ln/q7D/kVN/zRh/I5v5q+NHvbf8AOL8vENH1UAkBqelN0YVB+x4HANFl&#xA;P8K+LHvcPzi/LwoXGqjgpClvSm2LVIH2PY4/ksv81fFj3tx/nD+Xkkixx6pydyFRfSm3JNAN0xOi&#xA;ygXwqMse9b/yuX8uf+rsP+RU3/NGH8jm/mr40e9kmg+YNJ17TxqGlT/WLRmZBJxZfiXrswBzHyY5&#xA;QNS5s4yBFh2veYNJ0HTzqGqz/V7RWVDJxZvibpsoJxx45TNR5rKQAssb/wCVy/lz/wBXYf8AIqb/&#xA;AJozI/I5v5rDxo966T84fy8ikaOTVOMiEq6mKbYg0I+xgGiykXwqcse9x/OH8vRGsp1T92xKq3pT&#xA;blQCR9jtyGP5LLdcK+LHvdH+cP5eyMVTVOTAMxHpTdFBZj9jsBidFlH8K+LHvW/8rl/Ln/q7D/kV&#xA;N/zRh/I5v5q+NHvXP+cP5eJTnqnHkAy/uptweh+xgGiyn+FTlj3phoH5heUdfvTZaTffWbkKXKen&#xA;IvwjqasoGQyaacBchSYzB5MjyhmwyT84vy7jdo31UB0JVh6U2xGx/YzKGiyn+Fr8WPe4/nD+XgjW&#xA;Q6p8DEqrelNuVAJH2P8AKGP5LLdcK+LHvcn5xfl5IxVNU5EAsR6U3RQWJ+x2AxOiyj+FfFj3rf8A&#xA;lcv5c/8AV2H/ACKm/wCaMP5HN/NXxo965/zi/LyNgr6pxJAYD0pujAMD9juDgGiyn+FfFj3uH5w/&#xA;l4Y2lGqfu1IVm9KbYsCQPsd+Jx/JZbrhXxY97ovzh/LyWVIo9UDSSMFRfSm3JNAPsYnRZQL4VGWP&#xA;e+Y9X/46t7/xnl/4mc6LF9I9zrp8ytk/45lv/wAZpv8AiEWI+o+4fpU8m9M/3pf/AIwXH/Jh8cnL&#xA;4j71hz+aFyxiitT/AN6U/wCMFv8A8mEyvHy+J+9lPn8nR/8AHKuP+M8H/EJsT9Y9x/Qo+k/jvW6f&#xA;/wAdC2/4yp/xIYcn0n3LDmH2lnJO1fOX/OQH/Kax/wDMNH/HN92Z/dn3uFquYee2H2bv/jA3/Elz&#xA;OydPe0Q6+5CZYwRF9/fL/wAYof8Ak0uQhy+J+9lLm5P+OfN/xli/4jJifqHuP6FHJvS/+Onaf8Zo&#xA;/wDiYwZfpPuWHMIbLGL6X/Ib/wAl9D/zEz/8SGc72j/en4Ox0/0B358/+S+m/wCYmD/iRx7O/vR8&#xA;V1H0F80Z0TrkVq3/AB1b3/jPL/xM5Xi+ge5lP6i3L/xybb/jPP8A8QhxH1n3D9Kn6R+O52l/70v/&#xA;AMYLj/kw+OXl8R94WHP5/chMsYorUPtQf8YI/wBWV4+vvZz6e56H/wA4/wD/ACmsn/MNJ/DMHtP+&#xA;7Hvb9LzL6NzQua+LdQ/46Fz/AMZX/wCJHOtx/SPc6qfMtyf8cy3/AOM03/EIsA+o+4fpU8nad/vQ&#xA;/wDxhn/5Mvjk5fEfeseaGyxiidR/3oT/AIwwf8mUyvHy+J+9lLm3H/xyrj/jPB/xCbE/WPcf0KPp&#xA;P4729I/46tl/xni/4mMcv0n3LDmFfVb2YapeALFQTyDeKIn7Z7lcjjgOEc+XeWU5bltr+ddMgYJD&#xA;UzzA1ghI2SLsU98HhjiPPkOp814jSrpGoTyXpRkg4mG4O0EI6QOeyZh9qDg085RJBA7z3uw7IhHJ&#xA;qscJAGMpAFd9ZP8AvqD/AJEQ/wDNGcP/ACjqP9Un/pi+q/yBov8AUoom/uCJ1HpQn9zAd4Ij1hQ9&#xA;1wntDUD+OXzLRp+w9HKJJxx+qX2SIChcXTrpMzLHCD68I2hiHVJfBc3fYGoyZcshOUpenqT3h5j2&#xA;t7PwabHA4oCNyN17kFp97Mb+2HGLeVP90xD9of5OdTkgOE8+XeXiIy3D7LzlXZvnb8+7iSLzogUI&#xA;QbaM/GiOfvYHN52bG4fFw9SaLALC+m5T/DF/cuaejF2Fd/hzNyQG3Pn3lphLn7lD9KXP8kH/AEjw&#xA;f80ZPwh5/M/rYcZ/ACa3Ny3KMmKAkwwk/uIepiU/yZwOt1ueGacYzkAJHqe99U7H7H0mXSY5zxxM&#xA;jHcqkc/+42dvSgqJoQP3EPQpL24+2UDX6ir45fMuXLsPR+LGPhxoxkfkY/rLWmzltRtVMUFDNGDS&#xA;CIHdh3C1xhr85kAZy595XV9h6OGGco44giJI+SSfXpv5Yv8AkTF/zTno3APP5l8g4i+kPyKdpPIM&#xA;TsACbmeoUBR1HZQBnP8AaArKXPwH0u/PV2j8gyuoBIuYKBgGHU9mBGPZ4vKFzn0vm/69N/LF/wAi&#xA;Yv8AmnOg4B5/MuBxFGalqVwuo3ShICBNIKm3gJ+0epKVOV48Y4Rz5d5ZTkbKJhvJH0qFnjgJ9eYf&#xA;3ENNki7cKd85nt/PkxZI8EpRsd5e19ktBg1McniwEuExr7VWxuW9Zv3UA/dTdIIR/upvBc0I7Q1B&#xA;/jl8y9Vn7C0cY2MUfqj9sgEP9ZP++oP+REP/ADRj/KOo/wBUn/pi3fyBov8AUorNZu5EltwqRAGB&#xA;Cf3MXv8A5Odn2NI5NOJSJJ36nvfMO3sUcWrnCAAiOQ+DOvyEuJJfOjhggAtpD8CIh+9QMs7SjUPi&#xA;4GmNl9E5o3MfGmoXswv7kcYtpX/3TEf2j/k51WOA4Rz5d5dZKW5VGv510yBgkNWmmBrBCRskXYof&#xA;HB4Y4jz5DqfNeI0qaTqE8l4UdIOJhnO0EI6QueyDMHtW4aeUokgiup7w7HsaEcmrxwmAYyluF/1k&#xA;/wC+oP8AkRD/AM0ZxP8AKOo/1Sf+mL6p/IGi/wBSiitRnK3CARQf3MB3giPWFD3XDLX6gfxy+ZaN&#xA;P2Ho5RJOOP1S+yRA+xD3F040qZljhB9eEbQxAbpL2C+2bvsDUZMuWQnKUqj1J7w8z7W9n4NNjgcU&#xA;BG5G69yF0q9mOqWYKxUM8Y2iiB+2O4XOpyQHCefLvLw8JbhGappunHU7stdTBvWk5AQKQDzPQ+qM&#xA;50e0kIiuA7eb18PY3PkiJicPVv16/BbLp1h+jYALmXiJpiD6K1qVirt6uRPtJEGxDn5/s82UfYzM&#xA;SYHJGxv163+pGeVNDtL/AF61sre7f1bsyWyM8ShQ0iNHUkSMfhJ8Mp1Hbf5iBxcHDx9b/Yzxez0t&#xA;ERqeOMxiN0PI8rZ6PyOlN+dPHmGz+viP1jaUPrCInj6np8uXGu1aUzVfyaf532O1/wBF4/1L/Zf8&#xA;dYL5vsrfRfMN1pVxM8k1kIoXkjjHFisKbirg5ssPs9LJES46vy/a4UfbMYrj4V7k/V3m/wCb5pW8&#xA;1jLpcy+pKAJ4ST6a/wAkvbnm07N7KlpchPEJXH3dR73S9udvjXwiODg4T33z+AQ+npYfX7ak0tfV&#xA;Sn7pf5h/xZm5yGXCdhy7/wBjzsasPsvOVdm+f/z0srSXzekk87xH6ugASMOKDxJdMtx9sR0/oMTI&#xA;ux0vs/k1kDkjKMYx52xPyZ5Ts9e1lNMtL90e6jkUSvAvEDjufhlauXx7fjOQjwEH3sdV7NzwYfG8&#xA;SE4cvTuzU/8AOO7C5FqfMkAumQyrB6H7wxqQpcL6teILAVzM/lb+j9v7HSflfNdffkubeFLi88wW&#xA;dnbho7RJLgekGkSkCKCzAcnZfhWvtnM6jRnJklO64iT83tuz/aUafBDF4fFwCr4q/QkvnnyDJ5M0&#xA;iJr29Fyt9cKE9GMgqYketeTDrzyzS9jHKTHirryZ5va8RmJ+HyBH1d9H+b/RYhpl3Y/pK04tKW9a&#xA;OgKKBXmO/M5mf6HJQ9XGNt+X7WnN7aDLAw8KuIEfV37fzUr4af8A7+l/5FL/ANVM6u5dw+f7Hg6D&#xA;6Q/IoRjyDEI2LJ9ZnoWAU9R2Bb9ec/2hfim3PwfSnX5jeVp/NHl39DwzrbSTTowmcFgPTDN0HjTK&#xA;dNm8OfFVs8kOIU8li/IN5r2Wwi8y2Ml9AA09qg5SoDShdA3JR8Q6jNl/Ko/m/a435XzRd7+QZaN9&#xA;TuvMUFpBMRKzSw8UT1m+FS7SKOrAe+Qj2pQA4ft/Yk6azdopfyCv44BZprETekzTNI0LL/egLSnJ&#xA;unpZqO0x+akD9ND3vRdhdqDQCY4ePjrrXK/IpdN+VIs9BvPMFtrlrqNja29w5e1HqK3BGVgrqxWo&#xA;PvmvxdlmUgOLntyd1m9rQY/3fKj9Xcb/AJvk81+t6f8Azy/8i1/5rzZf6GJfzx8v2tP+jof6j/s/&#xA;+Or9UNjK1s5llWsCUHpqehI/34M33Z+mlgxeHseEnfl5vH9qawanPLLXDxdOf6mefkItsPOj+jI7&#xA;n6tJUOgUU+hmyHaV8G/e0aarfROaNzHz/qH5Fuksdxd+Y7Kz+vyf6Ok44F3kNQi8mHJt+gzcR7UA&#xA;FcP2uIdNZ5o1P+ceb94RZya1EjQs03NYGYESgLTd1pT0vxwfypvfD9v7F/LbVbVh+QzxD67a+YIL&#xA;uOsttWOKq+oxa2cFlkbeNyQw8QRmNrdb4+KWOq4vNy+z/wDB88Mv1cBuml/I6Rr99PXzDZtfxxia&#xA;S0AJmWJjxDmPlyCk7VpTOc/k0/zntv8AReP9S/2X/HWCebrS20fzDdaXPM8k1kIoHdIxxYpEgqKu&#xA;Dvmyxez0skRLjq/L9rhR9sxiuPhXuT9XeSf5vmljzWMulzL6koUTwkn01rXhLTbnm07N7KlpchPE&#xA;JXH3dR73S9udvjXwiODg4T33z+AUtKSx/SlnxmlJ9eOgMSgV5j/iw5uchlwnYcu/9jzsKsJvqmma&#xA;k+p3bpaTMrTSFWEbEEFzQg0zzKUDZ2fa9JrMIxQBnH6R1Hcu/QetzabEsNhcuyzS8uELsRVI6H7J&#xA;8MlHHKhQJ37muesweJIHJGNwiL4h3z5eYTX8uvLus6d5s0d7myuYreK6DyTzQtGqhmLVZuKqPtdT&#xA;mTATllEjEj5um1J0+HQ5MUMsZ3uN43uRttze23Xl2Ofz5ZeZhqlultaQvGbMRr6rvIhjPKbnxK0I&#xA;IrHzBFA3Fiubh4R4f+aGha3e+fdYurPT7m5tpJUMc8MMkiNSJAeLKCDuM6DRZoDEASAff5uBmgTI&#xA;0GMvoWt2+nSrcafcws80RQSQyKSFWStKjelRmR40DIURyPX3NfBKuSjYaZqQvrYm0mAEqEkxt/MP&#xA;bJZMkeE7jksYGxs+yc5V2bwT89dOur3zL6cMDyq1qEYorsByBG/Ag/iM1GssZQQOVPa9gSxnSThK&#xA;UY8Vjc9494S38n7G/svOdk96kiIqy8p5EaNdweIqxPbbrg0wvMDVD9jPteUY6Hg8SM5cQ5Hz5cya&#xA;HmS9mg8u2EPnKTzONYeSWa3ktpLOQwNGEYxFFjcIsiohhLcSx+Jidqmu4eHQ/nDQo/M3le40iHUL&#xA;e0kmlm/ezL6oCuZENOEkLqaPUFXFehqpYFVh/wCeen3d55d0S009H1GW2lIl+rR8zRYgvIpEDxBP&#xA;0ZsezZxjM2a2cfUAmOzyDTfLXmOLUbWWXSrxI0mjZ3a3lCqoYEkkrsBm2yZ8ZifUOXe4sISsbJZ+&#xA;i9T/AOWSb/kW/wDTLfFj3hhwHufSH5FxSxeQYo5UaNxcz1RgQRUg9Dmg7QIOU05+AVFnN5NFE0Dy&#xA;usaCQ1ZiFH923c5hNzGtH0oaf5r1XVzrcDadqABXTUZqCX4f3rtJNKvJQpUekiAg/ECQDgsJ4Ss8&#xA;1+V9P81aDY2UurPYNamKdDEYXUyIop6kcgblx3K7ijb9skhkTXVk886m4jCvEi15IepfxqO/fArB&#xA;P8LvoP5eeaNP+vw6leakLm4jjtYhEvKSFYljjiDzNv6Yooai14oAoAy7AayRJ7wwyfSXgX+FvM//&#xA;AFaL3/pGl/5pzpPzGP8AnR+Ydd4cu4t6lpOqqbdGs51dIVV1MbgqeTbEU2yOPLHfcc2U4Hbboz38&#xA;hbO7g85u08EkSm2kALqygnw3GYfaUwYbHq3aaJB3fRGaNzGIeYNGl1Z9EurDV4dOudNNXlPNpPTf&#xA;0zIqBJokqyx8SJEdd+m25VPLuS1u1vbZb76qbi2ES3UEiCWMt6g5xlg6h1rUVB37YFSvy3oun+W/&#xA;L0ejwagLuCK6aWFn9FCiTXRm4UiCD4ee57mp2GwVUZvLscnny38zDU7ZbeCB4jaBB6jNIoTeQScC&#xA;BxBBMfMbjlxNMVeG/mboOuXnnvWLm0066ubaSYGOeKGR0YBFHwsoIO+dBos0BiAJAPv83AzQJkaD&#xA;HH0LXLfTZRcadcwl5oigkhkUkKslaVG9KjMjxoGQojkevua+CVclLStN1FdUs2a1mCieMkmNgAA4&#xA;9sOTJHhO45LCBsbI3Vv+Ore/8Z5f+JnPMZ8y+56P+5h/Vj9z178l5r2DyPr81jH617FJK9rD15yr&#xA;bgov0tQZtuzvoPv/AFPD+1n+Mx/qD/dSZn5T1HVL/RJJb+SafheRJbXNxB9Vkkj/AHLMTFxjpxlZ&#xA;0B4ioXNg8umckmrp5rt4vV5aRPYzuYRFThcQywhWaWprzSVqLt9nv2CpZ5y1PUtN8p3N3ps0sN4t&#xA;wViMFv8AWpG5XBHEJuFB/acq3FamhOKvPvz6nmuPKXlueZleaVucjojxKWaFSSscnxoCf2W3HfNp&#xA;2X9Z9zjar6Q8X0//AI6Ft/xlT/iQzc5PpPucOHMPtLOSdq8B/PX/AJS2L/mHXNLr/wC8+D6B7Kf3&#xA;Ev6yXfk5/wAp5Zf6kv8AxA5DRf3ocj2n/wAUP9YPY7bVvMLefbnT39VtLXmFia34wrCttbPHMs/H&#xA;4na4klTjz6D7Pwknevm6M80XOs23lu4uNHfhexTggCL1iyfWaOqr4lSd6GmKp03+9cX/ABjk/wCJ&#xA;JirCdB1vVtV8p+ZH1GZ5vR+tR2zy2r2chiEbAMY2HHizAlKMx405HlUCcPqCC+Yc611L6X/Ib/yX&#xA;0P8AzEz/APEhnO9o/wB6fg7HT/QFf87P+UEn/wCYiH/iWaXXf3b0fs3/AI5H3S+4vm2Ka5N5PFJH&#xA;SFaGGUVpTipINQBWpP2SfenfVzhHgBB3e00mpzy1WSEx+7HLb3VvXXfqeXTr6X85ax5h0zy7psmj&#xA;CUSPBIeUFubpmnjtWe2gZOL8UmlAVm28OSk1zoByfL5c2YJ/vfN/xii/4lJihKNDk1eTQV/S8vr3&#xA;yX00TzCL0A6Rag8cTCOrUBiVabmvWpxVAahrWsRfmHp+mQ3DDTJbfncwNZu0XL95TjdLX96zKuxo&#xA;qqDWrOtFXgX5t/8AkwNW/wCMn8M6TQf3QdfqPqT3/nH/AP5TWT/mGk/hlPaf92Pez0vMvo3NC5rA&#xA;/POv+cdIk8rjQLQ3VpdTCPU+MUkrUPprGn7uOXiCHdizFB8P2hirKdXnvrez1Sewj9a+isi9pFTl&#xA;zmVZTGtB1q1BiqWeVb/VL3RpZL+SW4VL0R2d3PB9WlmgDx0d4uMfH4yy7KKgVxVGNc6yvnOO258t&#xA;Gl06SX0xFQLcxzRqCZt6lkkNF26d8VS/zrqupaX5Wlu9NllivBdcIhDbm6d+U5HHiA3Be7Pxbita&#xA;KTQYqwL/AJyAmkm8r+XppCrSSyF3ZVZFLNCCSEf41Hs2475tOy/rPucbVfSHi+kf8dWy/wCM8X/E&#xA;xm4y/Sfc4cOYT3VLqAandg2cLETSAsTNU/GdzSQDPL5EWdn27SYZHDD1y+kfze7+qnWg+fte8u6X&#xA;w0f0baO5nkMqcDICUSOhrIWP7Xjl2PUyhH0uDqux8WpzHxTKRjGPcOsu4Jgv5x+eJw6vcQ0SOSVa&#xA;Qp9qJDIv/DKMztBqJ5c0YS5Eun7Y7B0+n0s8sOLijXM+YS7/AJXt+Yf/AC1Qf8iI/wCmdh/JuLzf&#xA;PfzMlW5/Ozz9bSCOK6h4skcprAh+KZBI3b+ZzkYdnYiOvX70y1EglHmL8wNf8z6WP036N0tpOnoI&#xA;E9MAyo/I/uyhP2BluLSxxy9Nix+pjLKZDdIbC7gN9bgWcIJlTcGao+IeMmX5InhO55eX6mESLGz7&#xA;JzlXZvB/zvmjj81xh4EmrAtC5cU+XBlzTa4/vPg937MYzLBKpGPq6V+kFiPlvXrjS76TUNPght7u&#xA;2hd4pBzeh2Bqruy9D4ZjY8pibHN23aOiGWMYTlKUZSH83z7ohPP+V1+fP+WiD/kQmXfnsjif6FtJ&#xA;/S+f7ENdfnb5+tpzFFcwhKK+8CHeRQ7dvFs7PRaKGTDGcrsxD5t2hLwdRkxx+mM5AfArR+d3n9oH&#xA;uDdQ+pGyxr+4SnGQMW7f8VjLz2diut3E/MSpbH+dHnu/kWwubiFra7IgnUQoCUkPBgCOmxwy7Pxx&#xA;BIvZY6iRNMF+t2//ACxQ/fN/1UzN4D3n7P1NHEO59IfkW6v5BiZUWMG5noi8iBuOnIsfxzQdoD96&#xA;XPwfSr/nQ6p5HlZkEgFxDVGrQ/EevEqfxzT67+7eh9nok6uIBrY/d52+ffrdv/yxQ/fN/wBVM0tj&#xA;ufRvAl/Pl/sP+JZvc/nB52s7iW0huIRDbu0UQMKE8UPFan5DMuWtyA089p/ZrSzxxkeK5RB5949y&#xA;HvPzm89w28N1HcwiWZ5In/coRxiCMu1PGVs3/YsBqIyM+heT9pNJDR5Ywx8jG9/eoW351+frqQxS&#xA;3MJVUklFIEHxQo0qdv5kGbmfZ+IDr0+952OokVL/AJXt+Yf/AC1Qf8iI/wCmS/k3F5o/MyY15h12&#xA;bUtROoX9vDPeXSJLNKfUWrMP5UdVH3ZfhxcIoE0Pd+pjknZshm35CzRyedHCW8cJFtISUMhJ9vjZ&#xA;8xO0gRDne7bpju+iM0bmPne7/ObzzaTvbxzRGKKQxIfRQkANwWvfNPHV5CTuHtsnYukxwhKUch46&#xA;+kjma/X5r2/OLzutslyLiH1ZXeNv3KU4xhWXb5yHI/nslOXH2a0pyGPqoAHn3mXl5KY/OTzzMHV7&#xA;iGiI8opCn2olMi/8MozL7P1EsueMJci4HbPYWn02lnlhxcUa5nzAS/8A5Xt+Yf8Ay1Qf8iI/6Z1/&#xA;8m4vN8+/MyVLj87PP1tII47qHiyJKawRn4pUEjdv5mORj2diI6pOokEp8xfmBr/mbSx+m/RultJ0&#xA;9BQhjAMqPyP7soT9gZbi0sccvTYsfqYyymQ3SPSrqA6nZgWcKkzxgMDNUfGN95CMuyRPCdzy8v1M&#xA;IEWNnot9+TXnme+uJ0t4eEsrutZkrRmJFc88loshPJ9T0/tLpYY4xPFYiBy8ve035M+eTZxQi3h5&#xA;JJI5PrJSjqgH/EDj+SyVySPaXSjIZeqiAOXcZefmsh/Jjz3GZCbeE8opUAEydZI2QdfdsytBp54s&#xA;0Zy5AuD2x29p9RpZ4ocXFKuY8wUr/wCVGfmDv/o9vsQD/pEfU9B1987D+UsXm+e/lpIi8/JD8wJp&#xA;ldLWGgiiQ1nj6xxqh7+K5GHaGIDr1+9MtPIuT8kPzAFlLAbWHm8sbg+vHSiLID3/AMsYntDFxA7/&#xA;AIpfy8qpbafkd+YMV1DK1rBxjdWak6VoCD44z7RxEEbrHTyBfSmaFznk/wCaP5d+Z/MXmBLzTIY3&#xA;t1hVCzyKhqPY5rNXppznYer7C7Yw6XEYzuyegYtafk355hFwGt4T6sTRrSZOpIO/3ZjjQ5HaZ/aT&#xA;Sy4a4tpXy96H/wCVKefP98Qf8jlwfkcnc3/6KdJ/S+X7ULffkj5+knMgt4AoRBUzxj7CBSevtnZ6&#xA;LWwx4YwldiIfNu0I+NqMmSP0ynIj4lpPyP8AzA+qSR/VoCXdHUieOlFDg9/8rMg9o4rvdxPy8qXW&#xA;X5H/AJgQ3kEz2sHCKRHak8daKwJ74J9o4jEjdY6eQKh/yon8w/8Almg/5Hpkv5SxeaPy0ntP5VeW&#xA;9V8u+Uo9M1SNY7pJpXKowccXIINRmo1eUZMhkOTl4omMaKt+Znl/U9f8rSadpqK9y80bgOwQcUNT&#xA;uc12qxmcKDuOx9XDT6gZJ/SL+55B/wAqU8+f74g/5HLmr/I5O57L/RTpP6Xy/arX35NeeZ724nS3&#xA;hCSyO6gzJWjMSK5KWiyEk006f2l0sMcYnisRA5dwQ99+S3nySygiW3grFJLI7GdAKOsYHU/5Bzf9&#xA;izGnjIT6l5P2l1cNZljPHyEa396hZ/kj5/gnLPbQfFFMgAnjrV4mQd+lWFc3M+0MRHXmPvedjp5B&#xA;Q/5UT+Yf/LNB/wAj0yX8pYvNH5aSvdfkf+YEpiK2sI4RqhrPH1UUPfIx7RxDvZS08iy/8pvyz82e&#xA;WvMzX+qwRpbNA8fJJVc8j02G+Yut1cMkKi2YcRid3seatyXz1efkt54nu5JhbQUMrSRkzLUcqjt7&#xA;Nml/J5d66vew9oNHww4uK4eXWq71z/kz55NnFCLeHmkkjn98lKOqAf8AEDj+SyVybI+0ulGQy9VE&#xA;Acu4y8/NTj/Jfz2nqE28J5RyIAJk6ujKOvucy+z9PLFnjOXIOD2z27p9TpZ4ocXFKuY8wUs/5UZ+&#xA;YFSPq9vUUqPrEe1enfOv/lLF5vnv5aSvd/kf+YE0qutrCAI4k3nj6pGqHv4rkY9o4gOvVMtPItp+&#xA;SH5gCylgNrDzeWNwfXjpRFkB7/5YxPaGLiB3/FL+XlVOsPyP/MCC+t53tYOEUqO1J0rRWBPfGfaO&#xA;IxI3WOnkC+ks0LnOxVpuXE8acqbV6VxV5RZDzW2mWMWoA/oUaWF15AkL89UMcq3qTFnFyJmuWjMX&#xA;pK3I9Kdyr0nQF1JdC05dUPLU1tYRfNtvOI19U7f5dcCo/FXYq7FXYq7FXYq8+84aZrGp6tqFlEks&#xA;kkj6NJaRoYQrWEF+smocfrH7smg/eL+1+7DAigxVkPki3a30iaKNfT09Ly6GlxAcVS0EpESoNv3e&#xA;x9Om3DjTamKsgxV2KuxV2KuxV2Ksf85GYQaYx/45q6hCdWr9kWwV6F6fsCf0+Xala7VxVgfk/wAw&#xA;a95hubC6lvHur1NQheEBbcxxWZgl+ufvLcVAbYPFKaxt6YPxUwoeuYEuxV2KuxV2KuxVbL6npv6X&#xA;H1eJ9PlXjyptWm9K4q8s0jT9Yjk0+/ktZhpM1hZWvmkSm04TSpFeC9a5DE3DSxzyx/Y+0a/aGFWf&#xA;+Uk1NPK2kJqpc6ktnALwy/3nqiNefqf5dfte+BU2xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvD7z/nInUba7nt/0LC3oyPHy9ZhX&#xA;ixFacfbNvHssEA8X2OIdTRqmm/5yK1JbWOf9Cw/vHePj6zbcAhrXj354/wAli64vsX8ztdN2v/OR&#xA;OpTysn6FhWkcklfWY/3cbPT7I68aYy7LAH1fYo1N9FH/AKGR1L/qxw/8j2/5oyX8lD+d9iPzXkrX&#xA;X/OROpQSqn6FhascclfWYf3kavT7J6cqZGPZYI+r7EnU10cv/OROpNaSXH6FhHpyRx8PWbf1Fc1r&#xA;x7enj/JYuuL7F/M7XS22/wCci9SmuIof0LCvquqcvWY05GlaccMuywBfF9ijU2eT3LNO5bzP8xfz&#xA;dvPKWurpsWmx3aNEsvqPIyGrdqBTmw0uiGWN3TRlzcB5Mbt/+cidSmEx/QsK+lGZP75jWhAp9n3y&#xA;+XZYFer7GA1N9FH/AKGR1L/qxw/8j2/5oyX8lD+d9jH815Kk/wDzkXqUThP0LC1UR6+sw+2gen2e&#xA;3LBHssH+L7EnU10cv/ORepG3eb9Cw/A6Jx9Zt+YY1rx7cMf5LF1xfYv5nbk3af8AORWpXF1DB+hY&#xA;V9Z1j5esxpyIFacRgl2WACeL7FGps1Sl/wBDI6l/1Y4f+R7f80ZL+Sh/O+xH5ryepfl95sm81eXE&#xA;1eW3W1d5ZI/RRi4AQ0rUgdc1upw+HPhu3Jxz4hbvzB82TeVfLj6vFbrdOkscfouxQEOaVqAemOmw&#xA;+JPhulyT4Rby3/oZHUv+rHD/AMj2/wCaM2X8lD+d9jjfmvJWvP8AnInUra7nt/0LC/oyNHz9ZhXi&#xA;xFacTTpkY9lggHi+xMtTRqnN/wA5E6ktnFc/oWE+pJJHw9ZtvTVDWvHv6mI7LF1xfYv5na6da/8A&#xA;OROpXErR/oWFeMcklfWY/wB1G0lPsjrxpjLssAfV9ijU30Uf+hkdS/6scP8AyPb/AJoyX8lD+d9i&#xA;PzXkq3H/ADkTqUJjH6Fhb1EWT++YU5CtPs5GPZYP8X2Mjqa6Ml/Lr83bzzbrrabLpsdoixNL6iSM&#xA;5qvahUZRqtEMUbu2eLNxnk9MzXt7w25/5yL1KG4lh/QsLek7Jy9ZhXiaVpxzcR7LBF8X2OIdTR5N&#xA;t/zkVqS2sc/6Fh/eO8fH1m24BDWvHvzwfyWLri+xfzO1062/5yK1KeQp+hYVokklfWY/3aF6fZHX&#xA;jTGXZYH8X2KNTfRS/wChkdS/6scP/I9v+aMl/JQ/nfYj815Ktz/zkVqUEgT9CwtVI5K+sw/vED0+&#xA;yenKmRj2WD/F9iTqa6Nr/wA5E6k1pJcfoWEenJHHw9Zt/UVzWvHt6eP8li64vsX8ztdOs/8AnInU&#xA;bm7gt/0LCvrSJHy9ZjTkwFacffGXZYAJ4vsUamzVPK9V0y5bVLxg8FDPIRW4gB3c9QXqM2WPIOEc&#xA;+XcXHnE2Vk2n3C6bbqWhr60xqJ4SN0i7h6YiY4jz5DofNTE03pWn3Bu2AaIkwXAAE0XeBx/Nkc+a&#xA;MY3LYCu/vZ4cMpyEYi5HkApfoPUP+KP+km3/AOa8x/5W0388Ob/Ims/1Kf8ApSitS0W+a4Qj0aeh&#xA;bje4gG4gQd3yEO1dMBvMcz96T2NqzyxT+TS6ReJpVwrGAFp4CD9YgpskvfnTvluLXYck/RLioHl8&#xA;GjP2fnwx/eQMLPXZS0/S7lb+2YvBQSoTS4gJ+0OwfMieQcJ5/IuLGJsPsfOWdm+efz5s5p/OSMjR&#xA;AC2QH1JYoz9AdlJzedmzAh8e5w9SLLAbLTbhEuqvAawMABcQMeqns58MzZ5Btz59xaYxO/uQP1Cf&#xA;+aH/AJHQ/wDNWWcY8/kWHCUdeaNfPKjL6NDDDStxAP8AdS9i+YP8p6eBMZTAIJ+92EOydVkAlDHK&#xA;USOYDaaHqH6PmH7n+9i3+sQU+zJ355E9q6a74wy/kbV8vCnfu/Heu0zRb9dStGPo0E0ZNLiAnZx0&#xA;Aepxn2ppiCBMWv8AI2rjucUwB5IL9FXX89v/ANJNv/1UzP8AEHn8j+p1vAfwX0d+RsTReQoY3Klh&#xA;cT1KMrruwOzIWU/fmg7QN5S5+Ael355RNL5CmjQqGNxBQuyouzE7s5VR9+PZ5rKFzj0vnH9FXX89&#xA;v/0k2/8A1Uzf+IPP5H9TgcB/BV9Wspm1W9YNFQzykVmiHVz2LZHFMcI58u4spx3KZab5O8y6zpEf&#xA;6KsmvvQuJvWMDRuF5pFxqQ3ficqnqIQn6jWw/SyGORGyLt/y5872PrXV5pM0FtHb3HqTSFFVawOo&#xA;LEtsKnK8uuw19Xd97PFpskpUBZOzHv0HqH/FH/STb/8ANeR/lbTfzw5f8iaz/Up/6UojUdJu+UAL&#xA;QCkEY3uIB0FO75fg1EJx4omwT0BcTUYJ45cMxwyHQ7M9/Iazmg85OztEQbZwPTlikP0hGYjMXtKY&#xA;MPj3MtMKL6GzRuY+ONQ0u5a/uWDwUMrkVuIAftHsXzqYZBwjn8i6yUTZdNp9wum26loa+tMaieEj&#xA;7EXcPTETHEefIdD5qYmlXQtF1G81JbW1RJ7maKdIoY5YmdmaFwAAGrjlyxEbPl0PesIG0y/5VX+Y&#xA;X/VjuP8AhP8AmrK/z2H+cnwJ9yIvfyx8+zTK8WizuoihQkcftJEqMPtdmUjIw1uID6up+9lLDLuQ&#xA;moeSvM+k6RIdUsTYrNcQ+k1w8casVSWoBZgK75KOphKQ4Tex7/JBxSA3S7StMuV1SzYvBQTxk0uI&#xA;CdnHQB6nLMmQcJ58u4sYRNhCax/x1r3/AJiJf+JnJ4vpHuYz5l0v/HItv+Yif/iEOI+s+4fpU/SP&#xA;x3Kuhf8AHQP/ABguf+oeTMDtj/FZ+79LtOwv8dxf1wq552+1IrUv96E/4wW//JhMMnH0v0n+tP8A&#xA;3RQ9z/xxp/8AmJg/4hNnQ+zX99L+r+kPHe3H91j/AKx+5Aab/wAdG1/4zR/8SGdlk+k+586hzD7S&#xA;zknavnL/AJyB/wCU0j/5hk/jm+7M/uz73C1XMPPdO+1cf8YJP1ZnZOnvaIdfchMsYJpq4ujFH9Vf&#xA;hL6FvQ0HeBR1KuBv/kn6Oo861Ij+aycXLil976pglmHZmLweLiochff5HrXTy2G4Gx/8cm5/5iIP&#xA;+ITZgdDXf+t38OLxMfF9Xhyv33C2tJ/46tl/xni/4mMcX1D3s9d/cZP6kvuY/nqj4S+l/wAh/wDy&#xA;X0H/ADET/wDEs53tH+9Pwdjp/oDvz4/8l9P/AMxEH/Esezv70fFdR9BfNGdE65Fat/x1Lz/jPJ/x&#xA;M5Xi+ke5lPmXuH/OOxceXNaKV5/WF40AJr6W2xpmm7U+se5zNL9JTHSZfN8n5X+Zz5nknmuFScWc&#xA;11EIJmg+qRFi0Yjh4/vzJtx26BmUBjp8/wBEvcXbdm/4zi/4ZH/dB4OUbqZG3cFQAuwCgcTUfZJq&#xA;T3zSQ4CPg97qsmsjMiNmPFtUR3Db3c7P2hrXP762/wCYeP8Ajncdg/4rH4/e+ee03+PZPh9zO/8A&#xA;nH7/AJTST/mGf+GXdp/3Y97q9LzL6NzQua+LdS/46N1/xmk/4kc63H9I9zqp8yvl/wCORbf8xE//&#xA;ABCHAPrPuH6VP0j8dzJfyh/8mPov/GST/ky+Y+v/ALmXw+9swfWHusknnX/laMSRSTN5Y+rEzxNG&#xA;qwKfTNCj+meb+rT/AHaGptwp8Wc27FE+an83xpp8vl1yf32oJe24jjcODZ3T2zMziqhbqOIfD15b&#xA;7Yq86/N+XVpfy+0x9Tad5/0pMIpLuOOKdoQJREZEiVEU8adFG2bPsv8AvD/V/SHG1P0/F5Do/wDx&#xA;1rL/AJiIv+JjNzl+k+5w4cw9/wBe8lfljpkunG/0iSa51iXgjJMEX1G41LtNNCoqzgADck0AznRr&#xA;MoFcTsTij3J2Pyt/L22SVJdNiW0gX1y0rsVTlUOxZm2HGMV+WA6zLd8S+FHuS7y35S/LjXNKOqad&#xA;ov1aJp5bVTKGjkKrKYHbjWqh1rSu9DvleXNPJExkbiW3CfDmJw2lHkVKXyf+XMPmy38tzaHNHNdw&#xA;PPa3hf8AcSGKhkRaSepVAQSSnHela5gfksXd9pdr/Lus/wBUP2fqeSfmNKmkedNS02ygiW0tWijh&#xA;VkDkKIU25NUnN7pOydPPGCY7uuydu6yMiBkl/bukQ1WaTTJy8MJpPDQemoG6S9szcOgxYZ3AcNj9&#xA;TiantLPqI/vZGdHa1LT79jf2w9CAVlQVEYB+0Mypw9J3LhxnuNg+yM5V2TDvOflDybfLf69r1i90&#xA;dOtmlkMbOHMcKFyFUMoJoNsvx6icBUTTCUAeaVaD+Xv5b6jp1pqljpRjiu2ZDHJN6jBQWRlb05ZU&#xA;rVdxyqOhoajJnWZT/EgYo9y+PyX+V8vmR9Ai0VHuordriaUA+khRox6Rav8AecZ0YjsCPEYPzeX+&#xA;cV8KPch/NHlP8vtA0SXWr7RZbm3gkMc/1dv7qGMsvNuboOKIlPEmg75r8mmhORlIbn3u1w9r6nFA&#xA;QhMiI5DZjH5v+X9C8s6Dp0+iWiQ/XZ/3vqAvULGSuz1oRyOZvZ/Z2GciJR2rzatT25q9peIb/X/Y&#xA;8x0rWLh9Ts0MUIDTxglY1BFXHQjNpLsjTRBIjuHF/l3WT9JySo7ID9It/wAs8H/IsZsvD8y6nj8g&#xA;+j/yMk9TyDC/FUrcT/CgouzAbDNB2gKylzsBuLLPMWhaXrtkmnanD69nJKGePkVqUVmG6kHqMxce&#xA;SUDcdi2yiCKLA9M8h/lXqOu6jo0GjSLcaYQJ5XnARiafYUTNLTelSgFQd8yPzub+c1+DDuV/Mflb&#xA;8stD0qDUdR0dZ5rp40SKMFpZJJSOTUJGyglmJ6DIjV5f5xT4ce5luj+WNF0IXEGkQGzhcLLJHD+0&#xA;3xCu9d6LlWTLKZuRtlGIHJj2oeZINd/L3zHfQxXNrNYxXdrc2V56ZdJoY+RR/TMiHZhUBtjsdwcc&#xA;UBKQieRNMvElD1RNSjuPeHzl+mrn/fUH/Ipc3H8jaX+Yy/0Qa3/VJK+o6lIRas0MLFoFJJjH8zDM&#xA;nT6eOOPDHaILgajUzyS45nikeZLPPyGuTN5zcGONKW0hrGoU/TTMbtKNQ+KdPKy+h80bmPLdc8lf&#xA;ldpdzpcd/pEktxrMnFJEm4IrkoCZGlliUVaQAAVJ7DMoa3KP4ms4o9yeH8rvy7tI5hNp0S2dunrs&#xA;0zsVSoPqMWZthxjFflgOsy3fEvhR7lHyn5Z8jXNla+Y9F0k2EouJI7d5FKTL6dw1szcSTx5hSQDu&#xA;AdwDtkZ6nJIUTskY4jcBO28w2yebE8tSpdx3E1u1zb3Ten6Mgjp6gWh5/ByWpK0rtXKGbxj8wfzF&#xA;846P5y1TTbDUXitLeUCKPY05IrH7yxzeaTSY54wSN3Dy5pCRAYtqvnjzJrekuurXP11IJ4jEkqhl&#xA;UsklTTx2zJhpoQl6dtj+hrOUkbpXpN+zapZr6EArPGKiMA7uOhyzJD0nc8mMZ7jYPqbU/Lul65bW&#xA;Q1Swa5W14vCPWeNSfhNHVGQSISiko9V2G2cs7JMnEk0s8UlsskckSpJFIVKspLggihBBriqDsdIs&#xA;tHsmtdL06GytpLgTtFCQqmSSQFjxA2qfuxVbJ5c0yTX4vMD6cratAhjiuPWegBVk5enX0+fB2Xnx&#xA;5cTStMVeYecvyY8w+ZPM+oa1bXdtDDdyDjFIXLD01EZrRadUza6bXxxwESDs4uTTmUrthfm/8tb7&#xA;yhpUZ1W9iZb2dBEYFZ6GJHryrx/nzLwavxZekch+prnh4RuWLafb6d9ftqXbE+qlB6R/mH+VmTOU&#xA;uE7fa1xAsbvsfOWdkl9/axXsV5Y3Fv8AWLW5j9KdOXGqupBFQQw27g4qhtP0u20extrDT7RordJm&#xA;cepM0rs8hZ3Z5ZGkkdmZiSzEnFV66Jpq6v8AplNJt01Xg8ZvVCiUrJx5BmC1b+7XriqhqugWOvaa&#xA;bHVbEXNsJnlUCZ4mDcnXZ4ijiquymh3BIOxxVjf5meQ9R81aXpul6eYbIWTl0EhJX01QIFHEdqjM&#xA;vR6gYpEkXs1ZcfEKefL+Q/mPTGGpT31q0NkfrMqrz5FYvjYCq9aLmfLtKMhVHdoGmIN28y+r6b/y&#xA;2N/yKP8AzVmy4pd32uPUe99H/kasS+QoRE5kQXE9HI41+IdqnNB2hfim3PwfSzq5ZlaEqvM8z8Na&#xA;fsN45hNqV2fl7TLPWrnWrewZdSu1KTTmZ3HEkMwRGcpHyKKW4KORG+Krb/Q9N1vS4LXVtLgv7dVQ&#xA;os/FqGg3WoqvTtiqYc53nlRrdWDRoGUsCCCXG+2KscufJen2PlPVtD0SySxXVEeNnaWSX97MggRm&#xA;aQu/FVCqBWiqKAUyzFPhkD3FjIWCHlf/AELt5p/6uFn/AMlP+ac3H8qw7i4n5U97C/NOhQaRqp0q&#xA;8u/9JskEMpjjLKSCTVTUeOZWDKZR4gNiwyQANEsx/IaK0Tzk5hnMrG2eoKcKDxrU5i9pE8G46tmn&#xA;AvYvobNG5iQaj5d0vWo9Pk1Kwa4NlR7ekzxrvxYh1jdBIhaNTwcFagbbYqmMqtcPcQTWqywyxLHL&#xA;DIVZWRuYKspBBBBoQcVQtnpVnpNj9U0zTobK2acTGKGiL6kkodjQDufu6dMVWN5c0xtfXXzpy/pZ&#xA;E4Lces4FOJSvp19PnwPHnx5U2rTFXl/nD8lvMPmLzNqGs293bQw3ctVikLll4KENaLTqubXT9oRx&#xA;wESDs4uTTmUrthnm/wDLW+8oaVG2q3sTLezoIjArPQxI9a14/wA+ZeDV+LL0jkP1Nc8PCNyxnSYN&#xA;OGq2ZW7YkTx0HpEVPMf5WZOSUuE7dO9riBY3fRXnvyTrHmX/AA3cabeJayaROLg+oaAFlUCRQY5g&#xA;zoA1B8PX7a5yzsmVapZy3trqNnDKYJbm0MMc46o0gkUOP9UmuKpN5P8ALt5oWiSWtzDa2plu45Yr&#xA;OwLNbQoBDHxQukR+NozI3wD4mPzxVM30Nf8AFcGuRqoZbGezuGJbm3OWGSGg+zxX05K/Pv2VSzzr&#xA;oF5r/lO50yzt7W5nln5CO+keOCiTlmY8YrgMwA+ANGy8qEg0pirz/wDPm3ltvJ/lu3mUJLC4jkQS&#xA;vcBWWAAj1pFR5aEfbZQW6kDNp2X9Z9zjar6Q8W03/jo2v/GaP/iQzc5PpPucOHMPtLOSdqk3mXSb&#xA;jWNA1vSba4NpcahaS20N0K/u3liZFbbfYntviqX+R/Ll/wCXPK2naRfSxyTW80nBYTyjjjeR2jiV&#xA;uEPIIhC19NfliqnbeUr+Lz/c+YW+rC2l5lZ1L/WmR7a2gFu4KcfSV7dpRR/tH7Nakqo7zToDa95c&#xA;uNOTh6zTLLCZSyoHiuA4J4gn9nwxVOm/3qj/ANR/1pirCfL3lvU9B8peYoL61tbQ3P1q4iisbiWe&#xA;EI0RAHGSG3KNQDkTzLtUlugE4fUPeg8nzBnWupfS/wCQ/wD5L6D/AJiJ/wDiWc72j/en4Ox0/wBA&#xA;Z9N/eQf65/4g2YLcw/y35J1jSvP/AJg8wzXiS6frHxLDXlKWpEsYYemvFYliYL+8avLotN1V3njy&#xA;jf8AmXRLC3tPq7NFHKvG7Z1SNp7ZoUuYyiO3qwF+SU4/6y9cKstT/e2X/jHH/wASfAqUaDoSaFoS&#xA;6bGqJEl9PNEkZZgI7m/edBVt+QWUcvfxxVLtQ8r6jP8AmJp/mGO0tTZ2tuYXu/rU0V5yIkHH0hC6&#xA;SRAP9j1UBb4mqVSirwT83f8AyYGq/wDGQfqzpNB/dB1+o+pPP+cfv+U0k/5hn/hlPaf92Pez0vMv&#xA;o3NC5rBPPfkfV/Mk/li8068S2Ojzes6yGg+P0z6qj05eTosbKBVdnPxDFWU6xZTX9jqdjBL6E91Z&#xA;tBFPv8DyLIqvtv8ACTXFUs8p+X7jQ9Hltpoba09a8+sR2NiWa2gV2jHpxFkhNCVLn4B8TH54qi20&#xA;Bv8AGcevpwCfo+Sxm3b1CxmjljoKceICv36nFUv88eX77X/K0unWNva3Nw9yHVb2RoolCTFi4KxX&#xA;ILrT4OUZUNuQaUKrA/8AnICKSLyt5filHGSOUq6+o01GWEAj1XCs/wDrMAT1zadl/Wfc42q+kPFt&#xA;H/461l/zERf8TGbjL9J9zhw5h9SeZrjV7S20aPRDYpd39zFa+leWrziQMhkkZWjmt/T9OGKRySGr&#xA;QDbOTdq89/PeaW11rTFtnaBWtmLCIlK/vD2XNVr/AKw9j7NRj4OWRAPDvuL6F5XoOt6neWbTTXLs&#xA;zQXJPGQlfhik4kUeRew6Mf4ZdosYjq4R6Wy1ecZ+y8mQxhGQ29I84/r70u/SWo/8tU3/ACMb+ud5&#xA;4ce4Pm/Ge9F6nqF+tygW5lA9C3NA7dTAhPfIY4Rrl1P3spSN83R6hf8A6KuG+sy8hPAAebVoUmr3&#xA;9sTCPENuh/Qoka5rNO1HUDqFsDcykGVKjm38w98cmOPCdhyWMjY3fZWcq7NL9RUi3vpUeCCaOLkl&#xA;zcxGaKPipPJ0V4mZR1IDr88VSvyvJqN/5d0y+1iK2F7dsJqW8DQJ6MnJoeUbyTsr+mV5rzNG2xVJ&#xA;rLzfdTfmvfeUZLW0Gm29oZ4nWNvrBkCQPVjyI4H1yK+mF2oHZuSqq8M/MS9vIvPOuRxzyJGl5KFR&#xA;XYAAN0ABzpdJCJxR26OuzSPEUlTUdQ/R8x+sy19WLfm38snvlpxx4hsOR/Qx4jXNdpeoX51OzBuZ&#xA;SDPGCC7fzj3xyY48J2HJYSNjdC/pLUf+Wqb/AJGN/XJ+HHuDHjPe+kfyLkkl8gQvI5dzcT1ZiSTR&#xA;gOpzn+0ABlNOfgPpZ3cIjtArqGXmdiKj7DZhNzH9Ln1e4836rZSmxm0SxijC+navFcJczUkWJpWn&#xA;lSThDRmpGv21p0OKpF+ZvnG78oeX9HvNPtrSWW8uUgnN2hZREIHlcrxeL4z6YAFSx/ZRzthVhv8A&#xA;zkPLLa6nowtnaANBMWEZKVo69eNM2/ZcQRK/JxNSSKp5bpeoX7XLhrmUj0Lg0Lt1EDkd82OSEa5d&#xA;R97jxkb5oT9Jaj/y1Tf8jG/rlnhx7gx4z3oq/wBQvw0FLmUVgjJo7dSPnkIQjvt1Zzkdt+j0D8hL&#xA;q6m85us0zyKLZyA7FgD9JzB7SiBDYdW7TEkvojNG5jFPMlxq9p+gYdGNis+oXCW0kF3avOZF4erI&#xA;6yRzwel6cMUjVZX5NxG3dVN9UaGytNQu44I3e2tTMiFCQWQSMBRAzb07CuKvOB5pvPM35KarrV3F&#xA;bQ349WIvZrwQelMoBUiS4WtOvCVh71qBkaUfvY+9hl+kvCP0lqP/AC1Tf8jG/rnS+HHuDreM96K1&#xA;HUL9bhAtzKB6MBoHbqYUJ75DHCNcup+9lKRvm3HqF/8Aoq4b6zLyE8AB5tWhSavf2xMI8Q26H9Ci&#xA;Rrm7SdQv21WyBuZSDPECC7UI5j3xyY48J2HJYSNjd9gxxXEcaoJEooCiqHsKfzZyrs2J+dPy1tPN&#xA;l5b3N7fSQNbRmNFhRaEFuVTyLZi59KMhsl2/ZnbGTRiQgAeLvY+n5B6OnIrqtzVkeM1RDtIhQ+HZ&#xA;tsdNpRhyCYNmLka72gy6nDLFKMRGXdffbGY/ye8lSem66ze/VpWhSO79KP0ibmR4oTXqFkdKKSKH&#xA;ktOub7+VJ9weX/LR70+uP+ceNFncO+r3IIRIxSOPpGgQfguRj2nMdAk6YFy/848aKtu9uNXueEjp&#xA;Ix9OOtUDAU/4M4/ynO7oL+WFU1B/zjtokM0cy6vclo2DqCkdKqa74T2nMiqCjTAPW81jkKRjlEjP&#xA;G6jlSoZSenyYYqtkhuHKVkT4G5CiHqP9liq7hcVrzjqdieB7f7LFXkfmr8pvLd95kvbm41S6N/dy&#xA;JPNb28cfFDdSFIhVyPtFGpv+yc2OLtCUIiIA2aJacE2s038hfLV/piT2mtXMlrclZFYxoGBTkvEg&#xA;0KlSxDKRUHbJfynO7oI/LRpFW/8AzjvosFxFOmr3JeJ1dQY46VU1FaYy7TmRVBRpgCp/9C46F/1d&#xA;7r/gI8P8qT7gj8rHveg+S/Kdv5V0NNIt53uYkkeQSSAK3xmpG22YOfMckuIt0IcIpOpY2fgVYKyN&#xA;yBIqOhHiPHKWa3jdf78T/gD/AM14qtjgnSJIvUQqgAFUP7PT9r2xVg35meQtK8xNZXmq6hLbtB/o&#xA;1tDbRhmlkmYEIoYmrbfQKk7Zl6bVnFdDm1ZMQlzYXo35UeSLk2EtprtyW1OJ0gR446qZoGYJIoNU&#xA;doubIG68TmRLtOZ6BgNNEJt/0LjoX/V3uv8AgI8P8qT7gj8rHvVJv+cd9FmKF9XuRwQIKRx9F2GA&#xA;dpzHQJOnBT3yR+Uem+UtXbUra/muXaNojHIqgUbvVcp1GtlljRDPHhETsz3MJtUY4rhI1QSJRQFF&#xA;UPbb+bFWhFcCRpPUSrAKRwP7JJ/m/wArFUv8xaAdc0O70eacQwXaem7xx/EByDbVanbLMWTgkJdz&#xA;GUbFPGbf8p/Is94tsmtXwDpaSR3DQIImS/eWO1cN/LK9uyqT1JX+YZsP5Un3Bo/KxZFP/wA476LM&#xA;4d9XuQQqIKRx9I1CD8FwDtOY6BJ0wLa/848aKtu9uNXueEjpIx9OOtUDAU/4M4P5Tnd0F/LCqdbf&#xA;848aLb3MVwmrXJaF1kUFI6EqaiuGXacyKoKNMAbetZrHIdirUiB0ZDUBgVNDQ0O2xGKsDtfIGqR6&#xA;daafLcRekttpen3TonAmHR52mSZWVh8cynjw4gJXqePxKs9xV2KuxV2KuxV2KuxVhuueV9Vn8wm5&#xA;tUSWzu7mwvZ5GcBoZNNfkUVT9oTJQLToa12OFU+8taTNpWkrazuslw81zdTlKlBLd3ElzIqVoeKt&#xA;KQu3TsMCppirsVdirsVdirsVSjzFpN1fNplzasouNLvVvER68XBhlt3U+4S4Zl/ygOnUKsa8t/lz&#xA;eaFb2GmC/W8062vhqTSNF6UqvHEV9MMHcuHlYOOX2FBXpxClWeYFdirsVdirsVdiqy4hWeCSFiQs&#xA;qsjFTRgGFNj44qwa08hamIbeOeePa30ewuQqmno6HcyXMcsbcieU5koVIHD+Y8fiVZ5irsVdir//&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:07352559142068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:07352559142068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07352559142068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T11:07:50+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -280.975 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 280.975 li
324.015 280.975 li
324.015 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 280.975 mo
324.015 280.975 li
324.015 0 li
0 0 li
0 280.975 li
cp
clp
14.4438 14.4443 mo
28.4976 14.4443 li
28.4976 28.498 li
14.4438 28.498 li
14.4438 14.4443 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.855 .73 0 0 cmyk
f
.78076 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
14.4438 14.4443 mo
28.4976 14.4443 li
28.4976 28.498 li
14.4438 28.498 li
14.4438 14.4443 li
cp
0 0 0 .295 cmyk
@
.390137 .390625 mo
14.4438 .390625 li
14.4438 14.4443 li
.390137 14.4443 li
.390137 .390625 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 .390625 mo
14.4438 .390625 li
14.4438 14.4443 li
.390137 14.4443 li
.390137 .390625 li
cp
0 0 0 .295 cmyk
@
grestore
14.4438 .390625 mo
28.4976 .390625 li
28.4976 14.4443 li
14.4438 14.4443 li
14.4438 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
14.4438 .390625 mo
28.4976 .390625 li
28.4976 14.4443 li
14.4438 14.4443 li
14.4438 .390625 li
cp
0 0 0 .295 cmyk
@
grestore
28.4976 .390625 mo
42.5513 .390625 li
42.5513 14.4443 li
28.4976 14.4443 li
28.4976 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
28.4976 .390625 mo
42.5513 .390625 li
42.5513 14.4443 li
28.4976 14.4443 li
28.4976 .390625 li
cp
0 0 0 .295 cmyk
@
grestore
42.5513 .390625 mo
56.605 .390625 li
56.605 14.4443 li
42.5513 14.4443 li
42.5513 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
42.5513 .390625 mo
56.605 .390625 li
56.605 14.4443 li
42.5513 14.4443 li
42.5513 .390625 li
cp
0 0 0 .295 cmyk
@
grestore
56.605 .390625 mo
70.6587 .390625 li
70.6587 14.4443 li
56.605 14.4443 li
56.605 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
56.605 .390625 mo
70.6587 .390625 li
70.6587 14.4443 li
56.605 14.4443 li
56.605 .390625 li
cp
0 0 0 .295 cmyk
@
grestore
56.605 14.4443 mo
70.6587 14.4443 li
70.6587 28.498 li
56.605 28.498 li
56.605 14.4443 li
cp
f
56.605 14.4443 mo
70.6587 14.4443 li
70.6587 28.498 li
56.605 28.498 li
56.605 14.4443 li
cp
0 0 0 .295 cmyk
@
42.5513 14.4443 mo
56.605 14.4443 li
56.605 28.498 li
42.5513 28.498 li
42.5513 14.4443 li
cp
0 .938 1 0 cmyk
f
42.5513 14.4443 mo
56.605 14.4443 li
56.605 28.498 li
42.5513 28.498 li
42.5513 14.4443 li
cp
0 0 0 .295 cmyk
@
56.605 28.498 mo
70.6587 28.498 li
70.6587 42.5518 li
56.605 42.5518 li
56.605 28.498 li
cp
.855 .73 0 0 cmyk
f
56.605 28.498 mo
70.6587 28.498 li
70.6587 42.5518 li
56.605 42.5518 li
56.605 28.498 li
cp
0 0 0 .295 cmyk
@
42.5513 28.498 mo
56.605 28.498 li
56.605 42.5518 li
42.5513 42.5518 li
42.5513 28.498 li
cp
.855 .73 0 0 cmyk
f
42.5513 28.498 mo
56.605 28.498 li
56.605 42.5518 li
42.5513 42.5518 li
42.5513 28.498 li
cp
0 0 0 .295 cmyk
@
28.4976 28.498 mo
42.5513 28.498 li
42.5513 42.5518 li
28.4976 42.5518 li
28.4976 28.498 li
cp
0 .938 1 0 cmyk
f
28.4976 28.498 mo
42.5513 28.498 li
42.5513 42.5518 li
28.4976 42.5518 li
28.4976 28.498 li
cp
0 0 0 .295 cmyk
@
.390137 42.5518 mo
14.4438 42.5518 li
14.4438 56.6055 li
.390137 56.6055 li
.390137 42.5518 li
cp
0 .938 1 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 42.5518 mo
14.4438 42.5518 li
14.4438 56.6055 li
.390137 56.6055 li
.390137 42.5518 li
cp
0 0 0 .295 cmyk
@
grestore
.390137 28.498 mo
14.4438 28.498 li
14.4438 42.5518 li
.390137 42.5518 li
.390137 28.498 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 28.498 mo
14.4438 28.498 li
14.4438 42.5518 li
.390137 42.5518 li
.390137 28.498 li
cp
0 0 0 .295 cmyk
@
grestore
14.4438 28.498 mo
28.4976 28.498 li
28.4976 42.5518 li
14.4438 42.5518 li
14.4438 28.498 li
cp
f
14.4438 28.498 mo
28.4976 28.498 li
28.4976 42.5518 li
14.4438 42.5518 li
14.4438 28.498 li
cp
0 0 0 .295 cmyk
@
14.4438 42.5518 mo
28.4976 42.5518 li
28.4976 56.6055 li
14.4438 56.6055 li
14.4438 42.5518 li
cp
0 .938 1 0 cmyk
f
14.4438 42.5518 mo
28.4976 42.5518 li
28.4976 56.6055 li
14.4438 56.6055 li
14.4438 42.5518 li
cp
0 0 0 .295 cmyk
@
22.8501 49.374 mo
22.8501 50.8853 22.4546 51.7959 21.5874 51.7959 cv
20.7202 51.7959 20.3247 50.8853 20.3247 49.374 cv
20.3247 47.8623 20.7202 46.9521 21.5874 46.9521 cv
22.4546 46.9521 22.8501 47.8623 22.8501 49.374 cv
cp
23.6572 49.374 mo
23.6572 48.1201 23.3223 46.2734 21.5874 46.2734 cv
19.8525 46.2734 19.5176 48.1201 19.5176 49.374 cv
19.5176 50.6279 19.8525 52.4741 21.5874 52.4741 cv
23.3223 52.4741 23.6572 50.6279 23.6572 49.374 cv
cp
0 0 0 1 cmyk
f
28.4976 42.5518 mo
42.5513 42.5518 li
42.5513 56.6055 li
28.4976 56.6055 li
28.4976 42.5518 li
cp
0 .938 1 0 cmyk
f
28.4976 42.5518 mo
42.5513 42.5518 li
42.5513 56.6055 li
28.4976 56.6055 li
28.4976 42.5518 li
cp
0 0 0 .295 cmyk
@
42.5513 42.5518 mo
56.605 42.5518 li
56.605 56.6055 li
42.5513 56.6055 li
42.5513 42.5518 li
cp
0 .938 1 0 cmyk
f
42.5513 42.5518 mo
56.605 42.5518 li
56.605 56.6055 li
42.5513 56.6055 li
42.5513 42.5518 li
cp
0 0 0 .295 cmyk
@
56.605 42.5518 mo
70.6587 42.5518 li
70.6587 56.6055 li
56.605 56.6055 li
56.605 42.5518 li
cp
.855 .73 0 0 cmyk
f
56.605 42.5518 mo
70.6587 42.5518 li
70.6587 56.6055 li
56.605 56.6055 li
56.605 42.5518 li
cp
0 0 0 .295 cmyk
@
.390137 56.6055 mo
14.4438 56.6055 li
14.4438 70.6587 li
.390137 70.6587 li
.390137 56.6055 li
cp
0 .938 1 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 56.6055 mo
14.4438 56.6055 li
14.4438 70.6587 li
.390137 70.6587 li
.390137 56.6055 li
cp
0 0 0 .295 cmyk
@
grestore
14.4438 56.6055 mo
28.4976 56.6055 li
28.4976 70.6587 li
14.4438 70.6587 li
14.4438 56.6055 li
cp
f
14.4438 56.6055 mo
28.4976 56.6055 li
28.4976 70.6587 li
14.4438 70.6587 li
14.4438 56.6055 li
cp
0 0 0 .295 cmyk
@
28.4976 56.6055 mo
42.5513 56.6055 li
42.5513 70.6587 li
28.4976 70.6587 li
28.4976 56.6055 li
cp
.855 .73 0 0 cmyk
f
28.4976 56.6055 mo
42.5513 56.6055 li
42.5513 70.6587 li
28.4976 70.6587 li
28.4976 56.6055 li
cp
0 0 0 .295 cmyk
@
42.5513 56.6055 mo
56.605 56.6055 li
56.605 70.6587 li
42.5513 70.6587 li
42.5513 56.6055 li
cp
.855 .73 0 0 cmyk
f
42.5513 56.6055 mo
56.605 56.6055 li
56.605 70.6587 li
42.5513 70.6587 li
42.5513 56.6055 li
cp
0 0 0 .295 cmyk
@
56.605 56.6055 mo
70.6587 56.6055 li
70.6587 70.6587 li
56.605 70.6587 li
56.605 56.6055 li
cp
.855 .73 0 0 cmyk
f
56.605 56.6055 mo
70.6587 56.6055 li
70.6587 70.6587 li
56.605 70.6587 li
56.605 56.6055 li
cp
0 0 0 .295 cmyk
@
.390137 14.4443 mo
14.4438 14.4443 li
14.4438 28.498 li
.390137 28.498 li
.390137 14.4443 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 14.4443 mo
14.4438 14.4443 li
14.4438 28.498 li
.390137 28.498 li
.390137 14.4443 li
cp
0 0 0 .295 cmyk
@
grestore
28.4976 14.4443 mo
42.5513 14.4443 li
42.5513 28.498 li
28.4976 28.498 li
28.4976 14.4443 li
cp
0 .938 1 0 cmyk
f
28.4976 14.4443 mo
42.5513 14.4443 li
42.5513 28.498 li
28.4976 28.498 li
28.4976 14.4443 li
cp
0 0 0 .295 cmyk
@
98.7661 14.4443 mo
112.82 14.4443 li
112.82 28.498 li
98.7661 28.498 li
98.7661 14.4443 li
cp
.855 .73 0 0 cmyk
f
98.7661 14.4443 mo
112.82 14.4443 li
112.82 28.498 li
98.7661 28.498 li
98.7661 14.4443 li
cp
0 0 0 .301 cmyk
@
84.7124 .390625 mo
98.7661 .390625 li
98.7661 14.4443 li
84.7124 14.4443 li
84.7124 .390625 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
84.7124 .390625 mo
98.7661 .390625 li
98.7661 14.4443 li
84.7124 14.4443 li
84.7124 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
98.7661 .390625 mo
112.82 .390625 li
112.82 14.4443 li
98.7661 14.4443 li
98.7661 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
98.7661 .390625 mo
112.82 .390625 li
112.82 14.4443 li
98.7661 14.4443 li
98.7661 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
112.82 .390625 mo
126.874 .390625 li
126.874 14.4443 li
112.82 14.4443 li
112.82 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
112.82 .390625 mo
126.874 .390625 li
126.874 14.4443 li
112.82 14.4443 li
112.82 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
126.874 .390625 mo
140.927 .390625 li
140.927 14.4443 li
126.874 14.4443 li
126.874 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
126.874 .390625 mo
140.927 .390625 li
140.927 14.4443 li
126.874 14.4443 li
126.874 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
140.927 .390625 mo
154.981 .390625 li
154.981 14.4443 li
140.927 14.4443 li
140.927 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
140.927 .390625 mo
154.981 .390625 li
154.981 14.4443 li
140.927 14.4443 li
140.927 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
140.927 14.4443 mo
154.981 14.4443 li
154.981 28.498 li
140.927 28.498 li
140.927 14.4443 li
cp
f
140.927 14.4443 mo
154.981 14.4443 li
154.981 28.498 li
140.927 28.498 li
140.927 14.4443 li
cp
0 0 0 .301 cmyk
@
126.874 14.4443 mo
140.927 14.4443 li
140.927 28.498 li
126.874 28.498 li
126.874 14.4443 li
cp
0 .938 1 0 cmyk
f
126.874 14.4443 mo
140.927 14.4443 li
140.927 28.498 li
126.874 28.498 li
126.874 14.4443 li
cp
0 0 0 .301 cmyk
@
140.927 28.498 mo
154.981 28.498 li
154.981 42.5518 li
140.927 42.5518 li
140.927 28.498 li
cp
.855 .73 0 0 cmyk
f
140.927 28.498 mo
154.981 28.498 li
154.981 42.5518 li
140.927 42.5518 li
140.927 28.498 li
cp
0 0 0 .301 cmyk
@
126.874 28.498 mo
140.927 28.498 li
140.927 42.5518 li
126.874 42.5518 li
126.874 28.498 li
cp
.855 .73 0 0 cmyk
f
126.874 28.498 mo
140.927 28.498 li
140.927 42.5518 li
126.874 42.5518 li
126.874 28.498 li
cp
0 0 0 .301 cmyk
@
112.82 28.498 mo
126.874 28.498 li
126.874 42.5518 li
112.82 42.5518 li
112.82 28.498 li
cp
0 .938 1 0 cmyk
f
112.82 28.498 mo
126.874 28.498 li
126.874 42.5518 li
112.82 42.5518 li
112.82 28.498 li
cp
0 0 0 .301 cmyk
@
84.7124 42.5518 mo
98.7661 42.5518 li
98.7661 56.6055 li
84.7124 56.6055 li
84.7124 42.5518 li
cp
0 .938 1 0 cmyk
f
84.7124 42.5518 mo
98.7661 42.5518 li
98.7661 56.6055 li
84.7124 56.6055 li
84.7124 42.5518 li
cp
0 0 0 .301 cmyk
@
84.7124 28.498 mo
98.7661 28.498 li
98.7661 42.5518 li
84.7124 42.5518 li
84.7124 28.498 li
cp
0 .938 1 0 cmyk
f
84.7124 28.498 mo
98.7661 28.498 li
98.7661 42.5518 li
84.7124 42.5518 li
84.7124 28.498 li
cp
0 0 0 .301 cmyk
@
98.7661 28.498 mo
112.82 28.498 li
112.82 42.5518 li
98.7661 42.5518 li
98.7661 28.498 li
cp
0 .938 1 0 cmyk
f
98.7661 28.498 mo
112.82 28.498 li
112.82 42.5518 li
98.7661 42.5518 li
98.7661 28.498 li
cp
0 0 0 .301 cmyk
@
98.7661 42.5518 mo
112.82 42.5518 li
112.82 56.6055 li
98.7661 56.6055 li
98.7661 42.5518 li
cp
0 0 0 0 cmyk
f
98.7661 42.5518 mo
112.82 42.5518 li
112.82 56.6055 li
98.7661 56.6055 li
98.7661 42.5518 li
cp
0 0 0 .301 cmyk
@
107.172 49.374 mo
107.172 50.8853 106.777 51.7959 105.91 51.7959 cv
105.042 51.7959 104.647 50.8853 104.647 49.374 cv
104.647 47.8623 105.042 46.9521 105.91 46.9521 cv
106.777 46.9521 107.172 47.8623 107.172 49.374 cv
cp
107.979 49.374 mo
107.979 48.1201 107.645 46.2734 105.91 46.2734 cv
104.175 46.2734 103.84 48.1201 103.84 49.374 cv
103.84 50.6279 104.175 52.4741 105.91 52.4741 cv
107.645 52.4741 107.979 50.6279 107.979 49.374 cv
cp
0 0 0 1 cmyk
f
112.82 42.5518 mo
126.874 42.5518 li
126.874 56.6055 li
112.82 56.6055 li
112.82 42.5518 li
cp
0 .938 1 0 cmyk
f
112.82 42.5518 mo
126.874 42.5518 li
126.874 56.6055 li
112.82 56.6055 li
112.82 42.5518 li
cp
0 0 0 .301 cmyk
@
120.659 46.2734 mo
120.066 46.2734 li
119.826 47.2612 119.422 47.3555 118.443 47.4243 cv
118.443 48.0254 li
119.852 48.0254 li
119.852 52.311 li
120.659 52.311 li
120.659 46.2734 li
cp
0 0 0 1 cmyk
f
126.874 42.5518 mo
140.927 42.5518 li
140.927 56.6055 li
126.874 56.6055 li
126.874 42.5518 li
cp
0 .938 1 0 cmyk
f
126.874 42.5518 mo
140.927 42.5518 li
140.927 56.6055 li
126.874 56.6055 li
126.874 42.5518 li
cp
0 0 0 .301 cmyk
@
140.927 42.5518 mo
154.981 42.5518 li
154.981 56.6055 li
140.927 56.6055 li
140.927 42.5518 li
cp
.855 .73 0 0 cmyk
f
140.927 42.5518 mo
154.981 42.5518 li
154.981 56.6055 li
140.927 56.6055 li
140.927 42.5518 li
cp
0 0 0 .301 cmyk
@
84.7124 56.6055 mo
98.7661 56.6055 li
98.7661 70.6587 li
84.7124 70.6587 li
84.7124 56.6055 li
cp
0 .938 1 0 cmyk
f
84.7124 56.6055 mo
98.7661 56.6055 li
98.7661 70.6587 li
84.7124 70.6587 li
84.7124 56.6055 li
cp
0 0 0 .301 cmyk
@
98.7661 56.6055 mo
112.82 56.6055 li
112.82 70.6587 li
98.7661 70.6587 li
98.7661 56.6055 li
cp
0 .938 1 0 cmyk
f
98.7661 56.6055 mo
112.82 56.6055 li
112.82 70.6587 li
98.7661 70.6587 li
98.7661 56.6055 li
cp
0 0 0 .301 cmyk
@
112.82 56.6055 mo
126.874 56.6055 li
126.874 70.6587 li
112.82 70.6587 li
112.82 56.6055 li
cp
.855 .73 0 0 cmyk
f
112.82 56.6055 mo
126.874 56.6055 li
126.874 70.6587 li
112.82 70.6587 li
112.82 56.6055 li
cp
0 0 0 .301 cmyk
@
126.874 56.6055 mo
140.927 56.6055 li
140.927 70.6587 li
126.874 70.6587 li
126.874 56.6055 li
cp
.855 .73 0 0 cmyk
f
126.874 56.6055 mo
140.927 56.6055 li
140.927 70.6587 li
126.874 70.6587 li
126.874 56.6055 li
cp
0 0 0 .301 cmyk
@
140.927 56.6055 mo
154.981 56.6055 li
154.981 70.6587 li
140.927 70.6587 li
140.927 56.6055 li
cp
.855 .73 0 0 cmyk
f
140.927 56.6055 mo
154.981 56.6055 li
154.981 70.6587 li
140.927 70.6587 li
140.927 56.6055 li
cp
0 0 0 .301 cmyk
@
84.7124 14.4443 mo
98.7661 14.4443 li
98.7661 28.498 li
84.7124 28.498 li
84.7124 14.4443 li
cp
.855 .73 0 0 cmyk
f
84.7124 14.4443 mo
98.7661 14.4443 li
98.7661 28.498 li
84.7124 28.498 li
84.7124 14.4443 li
cp
0 0 0 .301 cmyk
@
112.82 14.4443 mo
126.874 14.4443 li
126.874 28.498 li
112.82 28.498 li
112.82 14.4443 li
cp
0 .938 1 0 cmyk
f
112.82 14.4443 mo
126.874 14.4443 li
126.874 28.498 li
112.82 28.498 li
112.82 14.4443 li
cp
0 0 0 .301 cmyk
@
183.088 14.4443 mo
197.142 14.4443 li
197.142 28.498 li
183.088 28.498 li
183.088 14.4443 li
cp
.855 .73 0 0 cmyk
f
183.088 14.4443 mo
197.142 14.4443 li
197.142 28.498 li
183.088 28.498 li
183.088 14.4443 li
cp
0 0 0 .301 cmyk
@
169.035 .390625 mo
183.088 .390625 li
183.088 14.4443 li
169.035 14.4443 li
169.035 .390625 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
169.035 .390625 mo
183.088 .390625 li
183.088 14.4443 li
169.035 14.4443 li
169.035 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
183.088 .390625 mo
197.142 .390625 li
197.142 14.4443 li
183.088 14.4443 li
183.088 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
183.088 .390625 mo
197.142 .390625 li
197.142 14.4443 li
183.088 14.4443 li
183.088 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
197.142 .390625 mo
211.196 .390625 li
211.196 14.4443 li
197.142 14.4443 li
197.142 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
197.142 .390625 mo
211.196 .390625 li
211.196 14.4443 li
197.142 14.4443 li
197.142 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
211.196 .390625 mo
225.25 .390625 li
225.25 14.4443 li
211.196 14.4443 li
211.196 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
211.196 .390625 mo
225.25 .390625 li
225.25 14.4443 li
211.196 14.4443 li
211.196 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
225.25 .390625 mo
239.303 .390625 li
239.303 14.4443 li
225.25 14.4443 li
225.25 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
225.25 .390625 mo
239.303 .390625 li
239.303 14.4443 li
225.25 14.4443 li
225.25 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
225.25 14.4443 mo
239.303 14.4443 li
239.303 28.498 li
225.25 28.498 li
225.25 14.4443 li
cp
f
225.25 14.4443 mo
239.303 14.4443 li
239.303 28.498 li
225.25 28.498 li
225.25 14.4443 li
cp
0 0 0 .301 cmyk
@
211.196 14.4443 mo
225.25 14.4443 li
225.25 28.498 li
211.196 28.498 li
211.196 14.4443 li
cp
0 .938 1 0 cmyk
f
211.196 14.4443 mo
225.25 14.4443 li
225.25 28.498 li
211.196 28.498 li
211.196 14.4443 li
cp
0 0 0 .301 cmyk
@
225.25 28.498 mo
239.303 28.498 li
239.303 42.5518 li
225.25 42.5518 li
225.25 28.498 li
cp
.855 .73 0 0 cmyk
f
225.25 28.498 mo
239.303 28.498 li
239.303 42.5518 li
225.25 42.5518 li
225.25 28.498 li
cp
0 0 0 .301 cmyk
@
211.196 28.498 mo
225.25 28.498 li
225.25 42.5518 li
211.196 42.5518 li
211.196 28.498 li
cp
.855 .73 0 0 cmyk
f
211.196 28.498 mo
225.25 28.498 li
225.25 42.5518 li
211.196 42.5518 li
211.196 28.498 li
cp
0 0 0 .301 cmyk
@
197.142 28.498 mo
211.196 28.498 li
211.196 42.5518 li
197.142 42.5518 li
197.142 28.498 li
cp
0 .938 1 0 cmyk
f
197.142 28.498 mo
211.196 28.498 li
211.196 42.5518 li
197.142 42.5518 li
197.142 28.498 li
cp
0 0 0 .301 cmyk
@
169.035 42.5518 mo
183.088 42.5518 li
183.088 56.6055 li
169.035 56.6055 li
169.035 42.5518 li
cp
0 .938 1 0 cmyk
f
169.035 42.5518 mo
183.088 42.5518 li
183.088 56.6055 li
169.035 56.6055 li
169.035 42.5518 li
cp
0 0 0 .301 cmyk
@
169.035 28.498 mo
183.088 28.498 li
183.088 42.5518 li
169.035 42.5518 li
169.035 28.498 li
cp
0 .938 1 0 cmyk
f
169.035 28.498 mo
183.088 28.498 li
183.088 42.5518 li
169.035 42.5518 li
169.035 28.498 li
cp
0 0 0 .301 cmyk
@
183.088 28.498 mo
197.142 28.498 li
197.142 42.5518 li
183.088 42.5518 li
183.088 28.498 li
cp
0 .938 1 0 cmyk
f
183.088 28.498 mo
197.142 28.498 li
197.142 42.5518 li
183.088 42.5518 li
183.088 28.498 li
cp
0 0 0 .301 cmyk
@
183.088 42.5518 mo
197.142 42.5518 li
197.142 56.6055 li
183.088 56.6055 li
183.088 42.5518 li
cp
0 0 0 0 cmyk
f
183.088 42.5518 mo
197.142 42.5518 li
197.142 56.6055 li
183.088 56.6055 li
183.088 42.5518 li
cp
0 0 0 .301 cmyk
@
191.494 49.374 mo
191.494 50.8853 191.098 51.7959 190.231 51.7959 cv
189.364 51.7959 188.968 50.8853 188.968 49.374 cv
188.968 47.8623 189.364 46.9521 190.231 46.9521 cv
191.098 46.9521 191.494 47.8623 191.494 49.374 cv
cp
192.301 49.374 mo
192.301 48.1201 191.966 46.2734 190.231 46.2734 cv
188.497 46.2734 188.162 48.1201 188.162 49.374 cv
188.162 50.6279 188.497 52.4741 190.231 52.4741 cv
191.966 52.4741 192.301 50.6279 192.301 49.374 cv
cp
0 0 0 1 cmyk
f
197.142 42.5518 mo
211.196 42.5518 li
211.196 56.6055 li
197.142 56.6055 li
197.142 42.5518 li
cp
0 0 0 0 cmyk
f
197.142 42.5518 mo
211.196 42.5518 li
211.196 56.6055 li
197.142 56.6055 li
197.142 42.5518 li
cp
0 0 0 .301 cmyk
@
204.981 46.2734 mo
204.388 46.2734 li
204.147 47.2612 203.744 47.3555 202.765 47.4243 cv
202.765 48.0254 li
204.173 48.0254 li
204.173 52.311 li
204.981 52.311 li
204.981 46.2734 li
cp
0 0 0 1 cmyk
f
211.196 42.5518 mo
225.25 42.5518 li
225.25 56.6055 li
211.196 56.6055 li
211.196 42.5518 li
cp
0 .938 1 0 cmyk
f
211.196 42.5518 mo
225.25 42.5518 li
225.25 56.6055 li
211.196 56.6055 li
211.196 42.5518 li
cp
0 0 0 .301 cmyk
@
217.084 48.438 mo
217.111 48.0171 217.162 46.9521 218.304 46.9521 cv
219.189 46.9521 219.498 47.562 219.498 48.0425 cv
219.498 48.8325 219.034 49.082 218.39 49.4512 cv
217.591 49.915 li
216.784 50.3872 216.217 51.0571 216.174 52.311 cv
220.305 52.311 li
220.305 51.5981 li
217.025 51.5981 li
217.059 51.3662 217.239 50.894 218.064 50.439 cv
218.691 50.0952 li
219.592 49.6143 220.305 49.1592 220.305 48.0771 cv
220.305 46.9521 219.463 46.2734 218.416 46.2734 cv
217.763 46.2734 216.329 46.4712 216.329 48.438 cv
217.084 48.438 li
cp
0 0 0 1 cmyk
f
225.25 42.5518 mo
239.303 42.5518 li
239.303 56.6055 li
225.25 56.6055 li
225.25 42.5518 li
cp
.855 .73 0 0 cmyk
f
225.25 42.5518 mo
239.303 42.5518 li
239.303 56.6055 li
225.25 56.6055 li
225.25 42.5518 li
cp
0 0 0 .301 cmyk
@
169.035 56.6055 mo
183.088 56.6055 li
183.088 70.6587 li
169.035 70.6587 li
169.035 56.6055 li
cp
0 .938 1 0 cmyk
f
169.035 56.6055 mo
183.088 56.6055 li
183.088 70.6587 li
169.035 70.6587 li
169.035 56.6055 li
cp
0 0 0 .301 cmyk
@
183.088 56.6055 mo
197.142 56.6055 li
197.142 70.6587 li
183.088 70.6587 li
183.088 56.6055 li
cp
0 .938 1 0 cmyk
f
183.088 56.6055 mo
197.142 56.6055 li
197.142 70.6587 li
183.088 70.6587 li
183.088 56.6055 li
cp
0 0 0 .301 cmyk
@
197.142 56.6055 mo
211.196 56.6055 li
211.196 70.6587 li
197.142 70.6587 li
197.142 56.6055 li
cp
.855 .73 0 0 cmyk
f
197.142 56.6055 mo
211.196 56.6055 li
211.196 70.6587 li
197.142 70.6587 li
197.142 56.6055 li
cp
0 0 0 .301 cmyk
@
211.196 56.6055 mo
225.25 56.6055 li
225.25 70.6587 li
211.196 70.6587 li
211.196 56.6055 li
cp
.855 .73 0 0 cmyk
f
211.196 56.6055 mo
225.25 56.6055 li
225.25 70.6587 li
211.196 70.6587 li
211.196 56.6055 li
cp
0 0 0 .301 cmyk
@
225.25 56.6055 mo
239.303 56.6055 li
239.303 70.6587 li
225.25 70.6587 li
225.25 56.6055 li
cp
.855 .73 0 0 cmyk
f
225.25 56.6055 mo
239.303 56.6055 li
239.303 70.6587 li
225.25 70.6587 li
225.25 56.6055 li
cp
0 0 0 .301 cmyk
@
169.035 14.4443 mo
183.088 14.4443 li
183.088 28.498 li
169.035 28.498 li
169.035 14.4443 li
cp
.855 .73 0 0 cmyk
f
169.035 14.4443 mo
183.088 14.4443 li
183.088 28.498 li
169.035 28.498 li
169.035 14.4443 li
cp
0 0 0 .301 cmyk
@
197.142 14.4443 mo
211.196 14.4443 li
211.196 28.498 li
197.142 28.498 li
197.142 14.4443 li
cp
0 .938 1 0 cmyk
f
197.142 14.4443 mo
211.196 14.4443 li
211.196 28.498 li
197.142 28.498 li
197.142 14.4443 li
cp
0 0 0 .301 cmyk
@
267.411 14.4443 mo
281.464 14.4443 li
281.464 28.498 li
267.411 28.498 li
267.411 14.4443 li
cp
.855 .73 0 0 cmyk
f
267.411 14.4443 mo
281.464 14.4443 li
281.464 28.498 li
267.411 28.498 li
267.411 14.4443 li
cp
0 0 0 .301 cmyk
@
253.357 .390625 mo
267.411 .390625 li
267.411 14.4443 li
253.357 14.4443 li
253.357 .390625 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
253.357 .390625 mo
267.411 .390625 li
267.411 14.4443 li
253.357 14.4443 li
253.357 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
267.411 .390625 mo
281.464 .390625 li
281.464 14.4443 li
267.411 14.4443 li
267.411 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
267.411 .390625 mo
281.464 .390625 li
281.464 14.4443 li
267.411 14.4443 li
267.411 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
281.464 .390625 mo
295.518 .390625 li
295.518 14.4443 li
281.464 14.4443 li
281.464 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
281.464 .390625 mo
295.518 .390625 li
295.518 14.4443 li
281.464 14.4443 li
281.464 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
295.518 .390625 mo
309.571 .390625 li
309.571 14.4443 li
295.518 14.4443 li
295.518 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
295.518 .390625 mo
309.571 .390625 li
309.571 14.4443 li
295.518 14.4443 li
295.518 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
309.571 .390625 mo
323.625 .390625 li
323.625 14.4443 li
309.571 14.4443 li
309.571 .390625 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 .390625 mo
323.625 .390625 li
323.625 14.4443 li
309.571 14.4443 li
309.571 .390625 li
cp
0 0 0 .301 cmyk
@
grestore
309.571 14.4443 mo
323.625 14.4443 li
323.625 28.498 li
309.571 28.498 li
309.571 14.4443 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 14.4443 mo
323.625 14.4443 li
323.625 28.498 li
309.571 28.498 li
309.571 14.4443 li
cp
0 0 0 .301 cmyk
@
grestore
295.518 14.4443 mo
309.571 14.4443 li
309.571 28.498 li
295.518 28.498 li
295.518 14.4443 li
cp
0 .938 1 0 cmyk
f
295.518 14.4443 mo
309.571 14.4443 li
309.571 28.498 li
295.518 28.498 li
295.518 14.4443 li
cp
0 0 0 .301 cmyk
@
309.571 28.498 mo
323.625 28.498 li
323.625 42.5518 li
309.571 42.5518 li
309.571 28.498 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 28.498 mo
323.625 28.498 li
323.625 42.5518 li
309.571 42.5518 li
309.571 28.498 li
cp
0 0 0 .301 cmyk
@
grestore
295.518 28.498 mo
309.571 28.498 li
309.571 42.5518 li
295.518 42.5518 li
295.518 28.498 li
cp
f
295.518 28.498 mo
309.571 28.498 li
309.571 42.5518 li
295.518 42.5518 li
295.518 28.498 li
cp
0 0 0 .301 cmyk
@
281.464 28.498 mo
295.518 28.498 li
295.518 42.5518 li
281.464 42.5518 li
281.464 28.498 li
cp
0 .938 1 0 cmyk
f
281.464 28.498 mo
295.518 28.498 li
295.518 42.5518 li
281.464 42.5518 li
281.464 28.498 li
cp
0 0 0 .301 cmyk
@
288.143 35.4746 mo
288.254 35.4746 288.375 35.4663 288.487 35.4663 cv
289.002 35.4663 289.895 35.5605 289.895 36.5742 cv
289.895 37.27 289.354 37.7422 288.582 37.7422 cv
287.457 37.7422 287.319 36.978 287.292 36.4106 cv
286.511 36.4106 li
286.563 37.1064 286.744 37.8022 287.414 38.1543 cv
287.706 38.3091 288.083 38.4204 288.53 38.4204 cv
290.067 38.4204 290.703 37.4673 290.703 36.4795 cv
290.703 35.6724 290.282 35.2603 289.698 35.0713 cv
289.698 35.0542 li
290.024 34.9507 290.47 34.5815 290.47 33.8086 cv
290.47 32.8896 289.775 32.2197 288.607 32.2197 cv
287.018 32.2197 286.658 33.3105 286.658 34.1953 cv
287.396 34.1953 li
287.43 33.7744 287.499 32.8984 288.573 32.8984 cv
289.474 32.8984 289.689 33.4907 289.689 33.8516 cv
289.689 34.6074 289.123 34.8394 288.539 34.8394 cv
288.41 34.8394 288.272 34.8306 288.143 34.8218 cv
288.143 35.4746 li
cp
0 0 0 1 cmyk
f
253.357 42.5518 mo
267.411 42.5518 li
267.411 56.6055 li
253.357 56.6055 li
253.357 42.5518 li
cp
0 .938 1 0 cmyk
f
253.357 42.5518 mo
267.411 42.5518 li
267.411 56.6055 li
253.357 56.6055 li
253.357 42.5518 li
cp
0 0 0 .301 cmyk
@
253.357 28.498 mo
267.411 28.498 li
267.411 42.5518 li
253.357 42.5518 li
253.357 28.498 li
cp
0 .938 1 0 cmyk
f
253.357 28.498 mo
267.411 28.498 li
267.411 42.5518 li
253.357 42.5518 li
253.357 28.498 li
cp
0 0 0 .301 cmyk
@
267.411 28.498 mo
281.464 28.498 li
281.464 42.5518 li
267.411 42.5518 li
267.411 28.498 li
cp
0 .938 1 0 cmyk
f
267.411 28.498 mo
281.464 28.498 li
281.464 42.5518 li
267.411 42.5518 li
267.411 28.498 li
cp
0 0 0 .301 cmyk
@
267.411 42.5518 mo
281.464 42.5518 li
281.464 56.6055 li
267.411 56.6055 li
267.411 42.5518 li
cp
0 0 0 0 cmyk
f
267.411 42.5518 mo
281.464 42.5518 li
281.464 56.6055 li
267.411 56.6055 li
267.411 42.5518 li
cp
0 0 0 .301 cmyk
@
275.816 49.374 mo
275.816 50.8853 275.42 51.7959 274.553 51.7959 cv
273.686 51.7959 273.291 50.8853 273.291 49.374 cv
273.291 47.8623 273.686 46.9521 274.553 46.9521 cv
275.42 46.9521 275.816 47.8623 275.816 49.374 cv
cp
276.624 49.374 mo
276.624 48.1201 276.288 46.2734 274.553 46.2734 cv
272.819 46.2734 272.484 48.1201 272.484 49.374 cv
272.484 50.6279 272.819 52.4741 274.553 52.4741 cv
276.288 52.4741 276.624 50.6279 276.624 49.374 cv
cp
0 0 0 1 cmyk
f
281.464 42.5518 mo
295.518 42.5518 li
295.518 56.6055 li
281.464 56.6055 li
281.464 42.5518 li
cp
0 0 0 0 cmyk
f
281.464 42.5518 mo
295.518 42.5518 li
295.518 56.6055 li
281.464 56.6055 li
281.464 42.5518 li
cp
0 0 0 .301 cmyk
@
289.302 46.2734 mo
288.71 46.2734 li
288.469 47.2612 288.066 47.3555 287.086 47.4243 cv
287.086 48.0254 li
288.496 48.0254 li
288.496 52.311 li
289.302 52.311 li
289.302 46.2734 li
cp
0 0 0 1 cmyk
f
295.518 42.5518 mo
309.571 42.5518 li
309.571 56.6055 li
295.518 56.6055 li
295.518 42.5518 li
cp
0 0 0 0 cmyk
f
295.518 42.5518 mo
309.571 42.5518 li
309.571 56.6055 li
295.518 56.6055 li
295.518 42.5518 li
cp
0 0 0 .301 cmyk
@
301.407 48.438 mo
301.432 48.0171 301.484 46.9521 302.626 46.9521 cv
303.511 46.9521 303.82 47.562 303.82 48.0425 cv
303.82 48.8325 303.356 49.082 302.712 49.4512 cv
301.914 49.915 li
301.106 50.3872 300.54 51.0571 300.497 52.311 cv
304.627 52.311 li
304.627 51.5981 li
301.346 51.5981 li
301.381 51.3662 301.561 50.894 302.386 50.439 cv
303.013 50.0952 li
303.915 49.6143 304.627 49.1592 304.627 48.0771 cv
304.627 46.9521 303.786 46.2734 302.738 46.2734 cv
302.085 46.2734 300.651 46.4712 300.651 48.438 cv
301.407 48.438 li
cp
0 0 0 1 cmyk
f
309.571 42.5518 mo
323.625 42.5518 li
323.625 56.6055 li
309.571 56.6055 li
309.571 42.5518 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 42.5518 mo
323.625 42.5518 li
323.625 56.6055 li
309.571 56.6055 li
309.571 42.5518 li
cp
0 0 0 .301 cmyk
@
grestore
253.357 56.6055 mo
267.411 56.6055 li
267.411 70.6587 li
253.357 70.6587 li
253.357 56.6055 li
cp
0 .938 1 0 cmyk
f
253.357 56.6055 mo
267.411 56.6055 li
267.411 70.6587 li
253.357 70.6587 li
253.357 56.6055 li
cp
0 0 0 .301 cmyk
@
267.411 56.6055 mo
281.464 56.6055 li
281.464 70.6587 li
267.411 70.6587 li
267.411 56.6055 li
cp
0 .938 1 0 cmyk
f
267.411 56.6055 mo
281.464 56.6055 li
281.464 70.6587 li
267.411 70.6587 li
267.411 56.6055 li
cp
0 0 0 .301 cmyk
@
281.464 56.6055 mo
295.518 56.6055 li
295.518 70.6587 li
281.464 70.6587 li
281.464 56.6055 li
cp
.855 .73 0 0 cmyk
f
281.464 56.6055 mo
295.518 56.6055 li
295.518 70.6587 li
281.464 70.6587 li
281.464 56.6055 li
cp
0 0 0 .301 cmyk
@
295.518 56.6055 mo
309.571 56.6055 li
309.571 70.6587 li
295.518 70.6587 li
295.518 56.6055 li
cp
.855 .73 0 0 cmyk
f
295.518 56.6055 mo
309.571 56.6055 li
309.571 70.6587 li
295.518 70.6587 li
295.518 56.6055 li
cp
0 0 0 .301 cmyk
@
309.571 56.6055 mo
323.625 56.6055 li
323.625 70.6587 li
309.571 70.6587 li
309.571 56.6055 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 56.6055 mo
323.625 56.6055 li
323.625 70.6587 li
309.571 70.6587 li
309.571 56.6055 li
cp
0 0 0 .301 cmyk
@
grestore
253.357 14.4443 mo
267.411 14.4443 li
267.411 28.498 li
253.357 28.498 li
253.357 14.4443 li
cp
f
253.357 14.4443 mo
267.411 14.4443 li
267.411 28.498 li
253.357 28.498 li
253.357 14.4443 li
cp
0 0 0 .301 cmyk
@
281.464 14.4443 mo
295.518 14.4443 li
295.518 28.498 li
281.464 28.498 li
281.464 14.4443 li
cp
0 .938 1 0 cmyk
f
281.464 14.4443 mo
295.518 14.4443 li
295.518 28.498 li
281.464 28.498 li
281.464 14.4443 li
cp
0 0 0 .301 cmyk
@
14.4438 112.819 mo
28.4976 112.819 li
28.4976 126.873 li
14.4438 126.873 li
14.4438 112.819 li
cp
.855 .73 0 0 cmyk
f
14.4438 112.82 mo
28.4976 112.82 li
28.4976 126.874 li
14.4438 126.874 li
14.4438 112.82 li
cp
0 0 0 .303 cmyk
@
.390137 98.7656 mo
14.4438 98.7656 li
14.4438 112.819 li
.390137 112.819 li
.390137 98.7656 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 98.7661 mo
14.4438 98.7661 li
14.4438 112.82 li
.390137 112.82 li
.390137 98.7661 li
cp
0 0 0 .303 cmyk
@
grestore
14.4438 98.7656 mo
28.4976 98.7656 li
28.4976 112.819 li
14.4438 112.819 li
14.4438 98.7656 li
cp
f
14.4438 98.7661 mo
28.4976 98.7661 li
28.4976 112.82 li
14.4438 112.82 li
14.4438 98.7661 li
cp
0 0 0 .303 cmyk
@
28.4976 98.7656 mo
42.5513 98.7656 li
42.5513 112.819 li
28.4976 112.819 li
28.4976 98.7656 li
cp
.855 .73 0 0 cmyk
f
28.4976 98.7661 mo
42.5513 98.7661 li
42.5513 112.82 li
28.4976 112.82 li
28.4976 98.7661 li
cp
0 0 0 .303 cmyk
@
42.5513 98.7656 mo
56.605 98.7656 li
56.605 112.819 li
42.5513 112.819 li
42.5513 98.7656 li
cp
.855 .73 0 0 cmyk
f
42.5513 98.7661 mo
56.605 98.7661 li
56.605 112.82 li
42.5513 112.82 li
42.5513 98.7661 li
cp
0 0 0 .303 cmyk
@
56.605 98.7656 mo
70.6587 98.7656 li
70.6587 112.819 li
56.605 112.819 li
56.605 98.7656 li
cp
.855 .73 0 0 cmyk
f
56.605 98.7661 mo
70.6587 98.7661 li
70.6587 112.82 li
56.605 112.82 li
56.605 98.7661 li
cp
0 0 0 .303 cmyk
@
56.605 112.819 mo
70.6587 112.819 li
70.6587 126.873 li
56.605 126.873 li
56.605 112.819 li
cp
.855 .73 0 0 cmyk
f
56.605 112.82 mo
70.6587 112.82 li
70.6587 126.874 li
56.605 126.874 li
56.605 112.82 li
cp
0 0 0 .303 cmyk
@
42.5513 112.819 mo
56.605 112.819 li
56.605 126.873 li
42.5513 126.873 li
42.5513 112.819 li
cp
0 .938 1 0 cmyk
f
42.5513 112.82 mo
56.605 112.82 li
56.605 126.874 li
42.5513 126.874 li
42.5513 112.82 li
cp
0 0 0 .303 cmyk
@
56.605 126.873 mo
70.6587 126.873 li
70.6587 140.927 li
56.605 140.927 li
56.605 126.873 li
cp
.855 .73 0 0 cmyk
f
56.605 126.874 mo
70.6587 126.874 li
70.6587 140.927 li
56.605 140.927 li
56.605 126.874 li
cp
0 0 0 .303 cmyk
@
42.5513 126.873 mo
56.605 126.873 li
56.605 140.927 li
42.5513 140.927 li
42.5513 126.873 li
cp
.855 .73 0 0 cmyk
f
42.5513 126.874 mo
56.605 126.874 li
56.605 140.927 li
42.5513 140.927 li
42.5513 126.874 li
cp
0 0 0 .303 cmyk
@
28.4976 126.873 mo
42.5513 126.873 li
42.5513 140.927 li
28.4976 140.927 li
28.4976 126.873 li
cp
0 0 0 0 cmyk
f
28.4976 126.874 mo
42.5513 126.874 li
42.5513 140.927 li
28.4976 140.927 li
28.4976 126.874 li
cp
0 0 0 .303 cmyk
@
35.1772 133.851 mo
35.2891 133.851 35.4092 133.842 35.521 133.842 cv
36.0361 133.842 36.9292 133.937 36.9292 134.95 cv
36.9292 135.646 36.3882 136.118 35.6152 136.118 cv
34.4902 136.118 34.353 135.354 34.3271 134.787 cv
33.5454 134.787 li
33.5972 135.482 33.7773 136.178 34.4473 136.53 cv
34.7393 136.685 35.1172 136.796 35.564 136.796 cv
37.1011 136.796 37.7368 135.843 37.7368 134.855 cv
37.7368 134.048 37.3159 133.636 36.7319 133.447 cv
36.7319 133.43 li
37.0581 133.327 37.5049 132.958 37.5049 132.185 cv
37.5049 131.266 36.8091 130.596 35.6411 130.596 cv
34.0522 130.596 33.6914 131.686 33.6914 132.571 cv
34.4302 132.571 li
34.4644 132.15 34.5332 131.274 35.6069 131.274 cv
36.5083 131.274 36.7231 131.867 36.7231 132.228 cv
36.7231 132.983 36.1563 133.215 35.5723 133.215 cv
35.4434 133.215 35.3062 133.207 35.1772 133.198 cv
35.1772 133.851 li
cp
0 0 0 1 cmyk
f
.390137 140.927 mo
14.4438 140.927 li
14.4438 154.98 li
.390137 154.98 li
.390137 140.927 li
cp
0 .938 1 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 140.927 mo
14.4438 140.927 li
14.4438 154.981 li
.390137 154.981 li
.390137 140.927 li
cp
0 0 0 .303 cmyk
@
grestore
.390137 126.873 mo
14.4438 126.873 li
14.4438 140.927 li
.390137 140.927 li
.390137 126.873 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 126.874 mo
14.4438 126.874 li
14.4438 140.927 li
.390137 140.927 li
.390137 126.874 li
cp
0 0 0 .303 cmyk
@
grestore
14.4438 126.873 mo
28.4976 126.873 li
28.4976 140.927 li
14.4438 140.927 li
14.4438 126.873 li
cp
f
14.4438 126.874 mo
28.4976 126.874 li
28.4976 140.927 li
14.4438 140.927 li
14.4438 126.874 li
cp
0 0 0 .303 cmyk
@
23.6914 135.165 mo
23.6914 134.512 li
22.8071 134.512 li
22.8071 130.596 li
22.1802 130.596 li
19.4146 134.426 li
19.4146 135.165 li
22.0513 135.165 li
22.0513 136.633 li
22.8071 136.633 li
22.8071 135.165 li
23.6914 135.165 li
cp
22.0342 131.772 mo
22.0513 131.772 li
22.0513 134.512 li
20.1104 134.512 li
22.0342 131.772 li
cp
0 0 0 1 cmyk
f
14.4438 140.927 mo
28.4976 140.927 li
28.4976 154.98 li
14.4438 154.98 li
14.4438 140.927 li
cp
0 0 0 0 cmyk
f
14.4438 140.927 mo
28.4976 140.927 li
28.4976 154.981 li
14.4438 154.981 li
14.4438 140.927 li
cp
0 0 0 .303 cmyk
@
22.8501 147.75 mo
22.8501 149.261 22.4546 150.171 21.5874 150.171 cv
20.7202 150.171 20.3247 149.261 20.3247 147.75 cv
20.3247 146.238 20.7202 145.328 21.5874 145.328 cv
22.4546 145.328 22.8501 146.238 22.8501 147.75 cv
cp
23.6572 147.75 mo
23.6572 146.496 23.3223 144.649 21.5874 144.649 cv
19.8525 144.649 19.5176 146.496 19.5176 147.75 cv
19.5176 149.003 19.8525 150.85 21.5874 150.85 cv
23.3223 150.85 23.6572 149.003 23.6572 147.75 cv
cp
0 0 0 1 cmyk
f
28.4976 140.927 mo
42.5513 140.927 li
42.5513 154.98 li
28.4976 154.98 li
28.4976 140.927 li
cp
0 0 0 0 cmyk
f
28.4976 140.927 mo
42.5513 140.927 li
42.5513 154.981 li
28.4976 154.981 li
28.4976 140.927 li
cp
0 0 0 .303 cmyk
@
36.3369 144.649 mo
35.7441 144.649 li
35.5039 145.637 35.1001 145.731 34.1211 145.8 cv
34.1211 146.401 li
35.5293 146.401 li
35.5293 150.687 li
36.3369 150.687 li
36.3369 144.649 li
cp
0 0 0 1 cmyk
f
42.5513 140.927 mo
56.605 140.927 li
56.605 154.98 li
42.5513 154.98 li
42.5513 140.927 li
cp
0 0 0 0 cmyk
f
42.5513 140.927 mo
56.605 140.927 li
56.605 154.981 li
42.5513 154.981 li
42.5513 140.927 li
cp
0 0 0 .303 cmyk
@
48.4409 146.813 mo
48.4668 146.393 48.5181 145.328 49.6606 145.328 cv
50.5449 145.328 50.854 145.938 50.854 146.418 cv
50.854 147.208 50.3906 147.458 49.7461 147.827 cv
48.9478 148.291 li
48.1401 148.763 47.5732 149.433 47.5303 150.687 cv
51.6616 150.687 li
51.6616 149.974 li
48.3809 149.974 li
48.415 149.742 48.5952 149.27 49.4199 148.814 cv
50.0469 148.471 li
50.9487 147.99 51.6616 147.535 51.6616 146.453 cv
51.6616 145.328 50.8198 144.649 49.772 144.649 cv
49.1191 144.649 47.6851 144.847 47.6851 146.813 cv
48.4409 146.813 li
cp
0 0 0 1 cmyk
f
56.605 140.927 mo
70.6587 140.927 li
70.6587 154.98 li
56.605 154.98 li
56.605 140.927 li
cp
.855 .73 0 0 cmyk
f
56.605 140.927 mo
70.6587 140.927 li
70.6587 154.981 li
56.605 154.981 li
56.605 140.927 li
cp
0 0 0 .303 cmyk
@
.390137 154.981 mo
14.4438 154.981 li
14.4438 169.035 li
.390137 169.035 li
.390137 154.981 li
cp
0 .938 1 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 154.981 mo
14.4438 154.981 li
14.4438 169.035 li
.390137 169.035 li
.390137 154.981 li
cp
0 0 0 .303 cmyk
@
grestore
14.4438 154.981 mo
28.4976 154.981 li
28.4976 169.035 li
14.4438 169.035 li
14.4438 154.981 li
cp
f
14.4438 154.981 mo
28.4976 154.981 li
28.4976 169.035 li
14.4438 169.035 li
14.4438 154.981 li
cp
0 0 0 .303 cmyk
@
28.4976 154.981 mo
42.5513 154.981 li
42.5513 169.035 li
28.4976 169.035 li
28.4976 154.981 li
cp
.855 .73 0 0 cmyk
f
28.4976 154.981 mo
42.5513 154.981 li
42.5513 169.035 li
28.4976 169.035 li
28.4976 154.981 li
cp
0 0 0 .303 cmyk
@
42.5513 154.981 mo
56.605 154.981 li
56.605 169.035 li
42.5513 169.035 li
42.5513 154.981 li
cp
.855 .73 0 0 cmyk
f
42.5513 154.981 mo
56.605 154.981 li
56.605 169.035 li
42.5513 169.035 li
42.5513 154.981 li
cp
0 0 0 .303 cmyk
@
56.605 154.981 mo
70.6587 154.981 li
70.6587 169.035 li
56.605 169.035 li
56.605 154.981 li
cp
.855 .73 0 0 cmyk
f
56.605 154.981 mo
70.6587 154.981 li
70.6587 169.035 li
56.605 169.035 li
56.605 154.981 li
cp
0 0 0 .303 cmyk
@
.390137 112.819 mo
14.4438 112.819 li
14.4438 126.873 li
.390137 126.873 li
.390137 112.819 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 112.82 mo
14.4438 112.82 li
14.4438 126.874 li
.390137 126.874 li
.390137 112.82 li
cp
0 0 0 .303 cmyk
@
grestore
28.4976 112.819 mo
42.5513 112.819 li
42.5513 126.873 li
28.4976 126.873 li
28.4976 112.819 li
cp
0 .938 1 0 cmyk
f
28.4976 112.82 mo
42.5513 112.82 li
42.5513 126.874 li
28.4976 126.874 li
28.4976 112.82 li
cp
0 0 0 .303 cmyk
@
98.7661 112.819 mo
112.82 112.819 li
112.82 126.873 li
98.7661 126.873 li
98.7661 112.819 li
cp
.855 .73 0 0 cmyk
f
98.7661 112.82 mo
112.82 112.82 li
112.82 126.874 li
98.7661 126.874 li
98.7661 112.82 li
cp
0 0 0 .303 cmyk
@
84.7124 98.7656 mo
98.7661 98.7656 li
98.7661 112.819 li
84.7124 112.819 li
84.7124 98.7656 li
cp
.855 .73 0 0 cmyk
f
84.7124 98.7661 mo
98.7661 98.7661 li
98.7661 112.82 li
84.7124 112.82 li
84.7124 98.7661 li
cp
0 0 0 .303 cmyk
@
98.7661 98.7656 mo
112.82 98.7656 li
112.82 112.819 li
98.7661 112.819 li
98.7661 98.7656 li
cp
.855 .73 0 0 cmyk
f
98.7661 98.7661 mo
112.82 98.7661 li
112.82 112.82 li
98.7661 112.82 li
98.7661 98.7661 li
cp
0 0 0 .303 cmyk
@
112.82 98.7656 mo
126.874 98.7656 li
126.874 112.819 li
112.82 112.819 li
112.82 98.7656 li
cp
.855 .73 0 0 cmyk
f
112.82 98.7661 mo
126.874 98.7661 li
126.874 112.82 li
112.82 112.82 li
112.82 98.7661 li
cp
0 0 0 .303 cmyk
@
126.874 98.7656 mo
140.927 98.7656 li
140.927 112.819 li
126.874 112.819 li
126.874 98.7656 li
cp
.855 .73 0 0 cmyk
f
126.874 98.7661 mo
140.927 98.7661 li
140.927 112.82 li
126.874 112.82 li
126.874 98.7661 li
cp
0 0 0 .303 cmyk
@
140.927 98.7656 mo
154.981 98.7656 li
154.981 112.819 li
140.927 112.819 li
140.927 98.7656 li
cp
.855 .73 0 0 cmyk
f
140.927 98.7661 mo
154.981 98.7661 li
154.981 112.82 li
140.927 112.82 li
140.927 98.7661 li
cp
0 0 0 .303 cmyk
@
140.927 112.819 mo
154.981 112.819 li
154.981 126.873 li
140.927 126.873 li
140.927 112.819 li
cp
.855 .73 0 0 cmyk
f
140.927 112.82 mo
154.981 112.82 li
154.981 126.874 li
140.927 126.874 li
140.927 112.82 li
cp
0 0 0 .303 cmyk
@
126.874 112.819 mo
140.927 112.819 li
140.927 126.873 li
126.874 126.873 li
126.874 112.819 li
cp
0 .938 1 0 cmyk
f
126.874 112.82 mo
140.927 112.82 li
140.927 126.874 li
126.874 126.874 li
126.874 112.82 li
cp
0 0 0 .303 cmyk
@
140.927 126.873 mo
154.981 126.873 li
154.981 140.927 li
140.927 140.927 li
140.927 126.873 li
cp
.855 .73 0 0 cmyk
f
140.927 126.874 mo
154.981 126.874 li
154.981 140.927 li
140.927 140.927 li
140.927 126.874 li
cp
0 0 0 .303 cmyk
@
126.874 126.873 mo
140.927 126.873 li
140.927 140.927 li
126.874 140.927 li
126.874 126.873 li
cp
.855 .73 0 0 cmyk
f
126.874 126.874 mo
140.927 126.874 li
140.927 140.927 li
126.874 140.927 li
126.874 126.874 li
cp
0 0 0 .303 cmyk
@
112.82 126.873 mo
126.874 126.873 li
126.874 140.927 li
112.82 140.927 li
112.82 126.873 li
cp
0 0 0 0 cmyk
f
112.82 126.874 mo
126.874 126.874 li
126.874 140.927 li
112.82 140.927 li
112.82 126.874 li
cp
0 0 0 .303 cmyk
@
119.5 133.851 mo
119.611 133.851 119.731 133.842 119.843 133.842 cv
120.358 133.842 121.251 133.937 121.251 134.95 cv
121.251 135.646 120.71 136.118 119.938 136.118 cv
118.813 136.118 118.675 135.354 118.649 134.787 cv
117.868 134.787 li
117.919 135.482 118.1 136.178 118.77 136.53 cv
119.062 136.685 119.439 136.796 119.886 136.796 cv
121.423 136.796 122.059 135.843 122.059 134.855 cv
122.059 134.048 121.638 133.636 121.054 133.447 cv
121.054 133.43 li
121.38 133.327 121.827 132.958 121.827 132.185 cv
121.827 131.266 121.131 130.596 119.963 130.596 cv
118.375 130.596 118.014 131.686 118.014 132.571 cv
118.752 132.571 li
118.787 132.15 118.855 131.274 119.929 131.274 cv
120.831 131.274 121.045 131.867 121.045 132.228 cv
121.045 132.983 120.479 133.215 119.895 133.215 cv
119.766 133.215 119.628 133.207 119.5 133.198 cv
119.5 133.851 li
cp
0 0 0 1 cmyk
f
84.7124 140.927 mo
98.7661 140.927 li
98.7661 154.98 li
84.7124 154.98 li
84.7124 140.927 li
cp
0 .938 1 0 cmyk
f
84.7124 140.927 mo
98.7661 140.927 li
98.7661 154.981 li
84.7124 154.981 li
84.7124 140.927 li
cp
0 0 0 .303 cmyk
@
84.7124 126.873 mo
98.7661 126.873 li
98.7661 140.927 li
84.7124 140.927 li
84.7124 126.873 li
cp
0 .938 1 0 cmyk
f
84.7124 126.874 mo
98.7661 126.874 li
98.7661 140.927 li
84.7124 140.927 li
84.7124 126.874 li
cp
0 0 0 .303 cmyk
@
90.9883 131.463 mo
93.5479 131.463 li
93.5479 130.724 li
90.4214 130.724 li
89.9663 133.962 li
90.6191 133.997 li
90.9023 133.627 91.2974 133.421 91.7354 133.421 cv
92.4829 133.421 93.0752 133.894 93.0752 134.761 cv
93.0752 135.517 92.5859 136.144 91.8042 136.144 cv
91.126 136.144 90.6021 135.834 90.5244 135.13 cv
89.7432 135.13 li
89.8892 136.479 90.9023 136.796 91.6929 136.796 cv
93.582 136.796 93.8828 135.345 93.8828 134.675 cv
93.8828 133.43 92.8779 132.743 91.8989 132.743 cv
91.3579 132.743 90.9883 132.923 90.731 133.121 cv
90.9883 131.463 li
cp
0 0 0 1 cmyk
f
98.7661 126.873 mo
112.82 126.873 li
112.82 140.927 li
98.7661 140.927 li
98.7661 126.873 li
cp
0 0 0 0 cmyk
f
98.7661 126.874 mo
112.82 126.874 li
112.82 140.927 li
98.7661 140.927 li
98.7661 126.874 li
cp
0 0 0 .303 cmyk
@
108.014 135.165 mo
108.014 134.512 li
107.129 134.512 li
107.129 130.596 li
106.502 130.596 li
103.737 134.426 li
103.737 135.165 li
106.373 135.165 li
106.373 136.633 li
107.129 136.633 li
107.129 135.165 li
108.014 135.165 li
cp
106.356 131.772 mo
106.373 131.772 li
106.373 134.512 li
104.432 134.512 li
106.356 131.772 li
cp
0 0 0 1 cmyk
f
98.7661 140.927 mo
112.82 140.927 li
112.82 154.98 li
98.7661 154.98 li
98.7661 140.927 li
cp
0 0 0 0 cmyk
f
98.7661 140.927 mo
112.82 140.927 li
112.82 154.981 li
98.7661 154.981 li
98.7661 140.927 li
cp
0 0 0 .303 cmyk
@
107.172 147.75 mo
107.172 149.261 106.777 150.171 105.91 150.171 cv
105.042 150.171 104.647 149.261 104.647 147.75 cv
104.647 146.238 105.042 145.328 105.91 145.328 cv
106.777 145.328 107.172 146.238 107.172 147.75 cv
cp
107.979 147.75 mo
107.979 146.496 107.645 144.649 105.91 144.649 cv
104.175 144.649 103.84 146.496 103.84 147.75 cv
103.84 149.003 104.175 150.85 105.91 150.85 cv
107.645 150.85 107.979 149.003 107.979 147.75 cv
cp
0 0 0 1 cmyk
f
112.82 140.927 mo
126.874 140.927 li
126.874 154.98 li
112.82 154.98 li
112.82 140.927 li
cp
0 0 0 0 cmyk
f
112.82 140.927 mo
126.874 140.927 li
126.874 154.981 li
112.82 154.981 li
112.82 140.927 li
cp
0 0 0 .303 cmyk
@
120.659 144.649 mo
120.066 144.649 li
119.826 145.637 119.422 145.731 118.443 145.8 cv
118.443 146.401 li
119.852 146.401 li
119.852 150.687 li
120.659 150.687 li
120.659 144.649 li
cp
0 0 0 1 cmyk
f
126.874 140.927 mo
140.927 140.927 li
140.927 154.98 li
126.874 154.98 li
126.874 140.927 li
cp
0 0 0 0 cmyk
f
126.874 140.927 mo
140.927 140.927 li
140.927 154.981 li
126.874 154.981 li
126.874 140.927 li
cp
0 0 0 .303 cmyk
@
132.763 146.813 mo
132.789 146.393 132.84 145.328 133.982 145.328 cv
134.867 145.328 135.176 145.938 135.176 146.418 cv
135.176 147.208 134.712 147.458 134.068 147.827 cv
133.27 148.291 li
132.462 148.763 131.896 149.433 131.853 150.687 cv
135.983 150.687 li
135.983 149.974 li
132.703 149.974 li
132.737 149.742 132.917 149.27 133.742 148.814 cv
134.369 148.471 li
135.271 147.99 135.983 147.535 135.983 146.453 cv
135.983 145.328 135.142 144.649 134.094 144.649 cv
133.441 144.649 132.007 144.847 132.007 146.813 cv
132.763 146.813 li
cp
0 0 0 1 cmyk
f
140.927 140.927 mo
154.981 140.927 li
154.981 154.98 li
140.927 154.98 li
140.927 140.927 li
cp
.855 .73 0 0 cmyk
f
140.927 140.927 mo
154.981 140.927 li
154.981 154.981 li
140.927 154.981 li
140.927 140.927 li
cp
0 0 0 .303 cmyk
@
84.7124 154.981 mo
98.7661 154.981 li
98.7661 169.035 li
84.7124 169.035 li
84.7124 154.981 li
cp
0 .938 1 0 cmyk
f
84.7124 154.981 mo
98.7661 154.981 li
98.7661 169.035 li
84.7124 169.035 li
84.7124 154.981 li
cp
0 0 0 .303 cmyk
@
98.7661 154.981 mo
112.82 154.981 li
112.82 169.035 li
98.7661 169.035 li
98.7661 154.981 li
cp
0 .938 1 0 cmyk
f
98.7661 154.981 mo
112.82 154.981 li
112.82 169.035 li
98.7661 169.035 li
98.7661 154.981 li
cp
0 0 0 .303 cmyk
@
112.82 154.981 mo
126.874 154.981 li
126.874 169.035 li
112.82 169.035 li
112.82 154.981 li
cp
.855 .73 0 0 cmyk
f
112.82 154.981 mo
126.874 154.981 li
126.874 169.035 li
112.82 169.035 li
112.82 154.981 li
cp
0 0 0 .303 cmyk
@
126.874 154.981 mo
140.927 154.981 li
140.927 169.035 li
126.874 169.035 li
126.874 154.981 li
cp
.855 .73 0 0 cmyk
f
126.874 154.981 mo
140.927 154.981 li
140.927 169.035 li
126.874 169.035 li
126.874 154.981 li
cp
0 0 0 .303 cmyk
@
140.927 154.981 mo
154.981 154.981 li
154.981 169.035 li
140.927 169.035 li
140.927 154.981 li
cp
.855 .73 0 0 cmyk
f
140.927 154.981 mo
154.981 154.981 li
154.981 169.035 li
140.927 169.035 li
140.927 154.981 li
cp
0 0 0 .303 cmyk
@
84.7124 112.819 mo
98.7661 112.819 li
98.7661 126.873 li
84.7124 126.873 li
84.7124 112.819 li
cp
.855 .73 0 0 cmyk
f
84.7124 112.82 mo
98.7661 112.82 li
98.7661 126.874 li
84.7124 126.874 li
84.7124 112.82 li
cp
0 0 0 .303 cmyk
@
112.82 112.819 mo
126.874 112.819 li
126.874 126.873 li
112.82 126.873 li
112.82 112.819 li
cp
0 .938 1 0 cmyk
f
112.82 112.82 mo
126.874 112.82 li
126.874 126.874 li
112.82 126.874 li
112.82 112.82 li
cp
0 0 0 .303 cmyk
@
183.088 112.819 mo
197.142 112.819 li
197.142 126.873 li
183.088 126.873 li
183.088 112.819 li
cp
.855 .73 0 0 cmyk
f
183.088 112.82 mo
197.142 112.82 li
197.142 126.874 li
183.088 126.874 li
183.088 112.82 li
cp
0 0 0 .303 cmyk
@
169.035 98.7656 mo
183.088 98.7656 li
183.088 112.819 li
169.035 112.819 li
169.035 98.7656 li
cp
.855 .73 0 0 cmyk
f
169.035 98.7661 mo
183.088 98.7661 li
183.088 112.82 li
169.035 112.82 li
169.035 98.7661 li
cp
0 0 0 .303 cmyk
@
183.088 98.7656 mo
197.142 98.7656 li
197.142 112.819 li
183.088 112.819 li
183.088 98.7656 li
cp
.855 .73 0 0 cmyk
f
183.088 98.7661 mo
197.142 98.7661 li
197.142 112.82 li
183.088 112.82 li
183.088 98.7661 li
cp
0 0 0 .303 cmyk
@
197.142 98.7656 mo
211.196 98.7656 li
211.196 112.819 li
197.142 112.819 li
197.142 98.7656 li
cp
.855 .73 0 0 cmyk
f
197.142 98.7661 mo
211.196 98.7661 li
211.196 112.82 li
197.142 112.82 li
197.142 98.7661 li
cp
0 0 0 .303 cmyk
@
211.196 98.7656 mo
225.25 98.7656 li
225.25 112.819 li
211.196 112.819 li
211.196 98.7656 li
cp
.855 .73 0 0 cmyk
f
211.196 98.7661 mo
225.25 98.7661 li
225.25 112.82 li
211.196 112.82 li
211.196 98.7661 li
cp
0 0 0 .303 cmyk
@
225.25 98.7656 mo
239.303 98.7656 li
239.303 112.819 li
225.25 112.819 li
225.25 98.7656 li
cp
.855 .73 0 0 cmyk
f
225.25 98.7661 mo
239.303 98.7661 li
239.303 112.82 li
225.25 112.82 li
225.25 98.7661 li
cp
0 0 0 .303 cmyk
@
225.25 112.819 mo
239.303 112.819 li
239.303 126.873 li
225.25 126.873 li
225.25 112.819 li
cp
.855 .73 0 0 cmyk
f
225.25 112.82 mo
239.303 112.82 li
239.303 126.874 li
225.25 126.874 li
225.25 112.82 li
cp
0 0 0 .303 cmyk
@
211.196 112.819 mo
225.25 112.819 li
225.25 126.873 li
211.196 126.873 li
211.196 112.819 li
cp
0 .938 1 0 cmyk
f
211.196 112.82 mo
225.25 112.82 li
225.25 126.874 li
211.196 126.874 li
211.196 112.82 li
cp
0 0 0 .303 cmyk
@
225.25 126.873 mo
239.303 126.873 li
239.303 140.927 li
225.25 140.927 li
225.25 126.873 li
cp
.855 .73 0 0 cmyk
f
225.25 126.874 mo
239.303 126.874 li
239.303 140.927 li
225.25 140.927 li
225.25 126.874 li
cp
0 0 0 .303 cmyk
@
211.196 126.873 mo
225.25 126.873 li
225.25 140.927 li
211.196 140.927 li
211.196 126.873 li
cp
.855 .73 0 0 cmyk
f
211.196 126.874 mo
225.25 126.874 li
225.25 140.927 li
211.196 140.927 li
211.196 126.874 li
cp
0 0 0 .303 cmyk
@
197.142 126.873 mo
211.196 126.873 li
211.196 140.927 li
197.142 140.927 li
197.142 126.873 li
cp
0 0 0 0 cmyk
f
197.142 126.874 mo
211.196 126.874 li
211.196 140.927 li
197.142 140.927 li
197.142 126.874 li
cp
0 0 0 .303 cmyk
@
203.821 133.851 mo
203.933 133.851 204.053 133.842 204.165 133.842 cv
204.68 133.842 205.573 133.937 205.573 134.95 cv
205.573 135.646 205.032 136.118 204.259 136.118 cv
203.134 136.118 202.997 135.354 202.971 134.787 cv
202.189 134.787 li
202.241 135.482 202.421 136.178 203.091 136.53 cv
203.383 136.685 203.761 136.796 204.208 136.796 cv
205.745 136.796 206.38 135.843 206.38 134.855 cv
206.38 134.048 205.959 133.636 205.375 133.447 cv
205.375 133.43 li
205.702 133.327 206.149 132.958 206.149 132.185 cv
206.149 131.266 205.453 130.596 204.285 130.596 cv
202.696 130.596 202.335 131.686 202.335 132.571 cv
203.074 132.571 li
203.108 132.15 203.177 131.274 204.25 131.274 cv
205.152 131.274 205.367 131.867 205.367 132.228 cv
205.367 132.983 204.8 133.215 204.216 133.215 cv
204.087 133.215 203.95 133.207 203.821 133.198 cv
203.821 133.851 li
cp
0 0 0 1 cmyk
f
169.035 140.927 mo
183.088 140.927 li
183.088 154.98 li
169.035 154.98 li
169.035 140.927 li
cp
0 .938 1 0 cmyk
f
169.035 140.927 mo
183.088 140.927 li
183.088 154.981 li
169.035 154.981 li
169.035 140.927 li
cp
0 0 0 .303 cmyk
@
178.11 146.255 mo
178.033 145.027 177.045 144.649 176.349 144.649 cv
174.545 144.649 174.117 146.556 174.117 147.878 cv
174.117 148.668 174.219 149.407 174.581 149.974 cv
175.009 150.644 175.67 150.85 176.134 150.85 cv
176.985 150.85 177.345 150.618 177.664 150.266 cv
178.076 149.819 178.239 149.373 178.239 148.754 cv
178.239 147.312 177.087 146.839 176.349 146.839 cv
175.525 146.839 175.104 147.251 174.915 147.578 cv
174.898 147.561 li
174.898 146.925 175.147 145.328 176.333 145.328 cv
176.985 145.328 177.277 145.723 177.372 146.255 cv
178.11 146.255 li
cp
175 148.832 mo
175 148.119 175.405 147.518 176.238 147.518 cv
177.173 147.518 177.458 148.256 177.458 148.789 cv
177.458 149.605 176.994 150.171 176.272 150.171 cv
175.387 150.171 175 149.476 175 148.832 cv
cp
0 0 0 1 cmyk
f
169.035 126.873 mo
183.088 126.873 li
183.088 140.927 li
169.035 140.927 li
169.035 126.873 li
cp
0 0 0 0 cmyk
f
169.035 126.874 mo
183.088 126.874 li
183.088 140.927 li
169.035 140.927 li
169.035 126.874 li
cp
0 0 0 .303 cmyk
@
175.31 131.463 mo
177.87 131.463 li
177.87 130.724 li
174.744 130.724 li
174.288 133.962 li
174.941 133.997 li
175.224 133.627 175.62 133.421 176.057 133.421 cv
176.804 133.421 177.397 133.894 177.397 134.761 cv
177.397 135.517 176.908 136.144 176.125 136.144 cv
175.448 136.144 174.923 135.834 174.846 135.13 cv
174.065 135.13 li
174.21 136.479 175.224 136.796 176.014 136.796 cv
177.904 136.796 178.205 135.345 178.205 134.675 cv
178.205 133.43 177.2 132.743 176.22 132.743 cv
175.679 132.743 175.31 132.923 175.052 133.121 cv
175.31 131.463 li
cp
0 0 0 1 cmyk
f
183.088 126.873 mo
197.142 126.873 li
197.142 140.927 li
183.088 140.927 li
183.088 126.873 li
cp
0 0 0 0 cmyk
f
183.088 126.874 mo
197.142 126.874 li
197.142 140.927 li
183.088 140.927 li
183.088 126.874 li
cp
0 0 0 .303 cmyk
@
192.335 135.165 mo
192.335 134.512 li
191.451 134.512 li
191.451 130.596 li
190.824 130.596 li
188.058 134.426 li
188.058 135.165 li
190.695 135.165 li
190.695 136.633 li
191.451 136.633 li
191.451 135.165 li
192.335 135.165 li
cp
190.678 131.772 mo
190.695 131.772 li
190.695 134.512 li
188.754 134.512 li
190.678 131.772 li
cp
0 0 0 1 cmyk
f
183.088 140.927 mo
197.142 140.927 li
197.142 154.98 li
183.088 154.98 li
183.088 140.927 li
cp
0 0 0 0 cmyk
f
183.088 140.927 mo
197.142 140.927 li
197.142 154.981 li
183.088 154.981 li
183.088 140.927 li
cp
0 0 0 .303 cmyk
@
191.494 147.75 mo
191.494 149.261 191.098 150.171 190.231 150.171 cv
189.364 150.171 188.968 149.261 188.968 147.75 cv
188.968 146.238 189.364 145.328 190.231 145.328 cv
191.098 145.328 191.494 146.238 191.494 147.75 cv
cp
192.301 147.75 mo
192.301 146.496 191.966 144.649 190.231 144.649 cv
188.497 144.649 188.162 146.496 188.162 147.75 cv
188.162 149.003 188.497 150.85 190.231 150.85 cv
191.966 150.85 192.301 149.003 192.301 147.75 cv
cp
0 0 0 1 cmyk
f
197.142 140.927 mo
211.196 140.927 li
211.196 154.98 li
197.142 154.98 li
197.142 140.927 li
cp
0 0 0 0 cmyk
f
197.142 140.927 mo
211.196 140.927 li
211.196 154.981 li
197.142 154.981 li
197.142 140.927 li
cp
0 0 0 .303 cmyk
@
204.981 144.649 mo
204.388 144.649 li
204.147 145.637 203.744 145.731 202.765 145.8 cv
202.765 146.401 li
204.173 146.401 li
204.173 150.687 li
204.981 150.687 li
204.981 144.649 li
cp
0 0 0 1 cmyk
f
211.196 140.927 mo
225.25 140.927 li
225.25 154.98 li
211.196 154.98 li
211.196 140.927 li
cp
0 0 0 0 cmyk
f
211.196 140.927 mo
225.25 140.927 li
225.25 154.981 li
211.196 154.981 li
211.196 140.927 li
cp
0 0 0 .303 cmyk
@
217.084 146.813 mo
217.111 146.393 217.162 145.328 218.304 145.328 cv
219.189 145.328 219.498 145.938 219.498 146.418 cv
219.498 147.208 219.034 147.458 218.39 147.827 cv
217.591 148.291 li
216.784 148.763 216.217 149.433 216.174 150.687 cv
220.305 150.687 li
220.305 149.974 li
217.025 149.974 li
217.059 149.742 217.239 149.27 218.064 148.814 cv
218.691 148.471 li
219.592 147.99 220.305 147.535 220.305 146.453 cv
220.305 145.328 219.463 144.649 218.416 144.649 cv
217.763 144.649 216.329 144.847 216.329 146.813 cv
217.084 146.813 li
cp
0 0 0 1 cmyk
f
225.25 140.927 mo
239.303 140.927 li
239.303 154.98 li
225.25 154.98 li
225.25 140.927 li
cp
.855 .73 0 0 cmyk
f
225.25 140.927 mo
239.303 140.927 li
239.303 154.981 li
225.25 154.981 li
225.25 140.927 li
cp
0 0 0 .303 cmyk
@
169.035 154.981 mo
183.088 154.981 li
183.088 169.035 li
169.035 169.035 li
169.035 154.981 li
cp
0 .938 1 0 cmyk
f
169.035 154.981 mo
183.088 154.981 li
183.088 169.035 li
169.035 169.035 li
169.035 154.981 li
cp
0 0 0 .303 cmyk
@
183.088 154.981 mo
197.142 154.981 li
197.142 169.035 li
183.088 169.035 li
183.088 154.981 li
cp
0 .938 1 0 cmyk
f
183.088 154.981 mo
197.142 154.981 li
197.142 169.035 li
183.088 169.035 li
183.088 154.981 li
cp
0 0 0 .303 cmyk
@
197.142 154.981 mo
211.196 154.981 li
211.196 169.035 li
197.142 169.035 li
197.142 154.981 li
cp
.855 .73 0 0 cmyk
f
197.142 154.981 mo
211.196 154.981 li
211.196 169.035 li
197.142 169.035 li
197.142 154.981 li
cp
0 0 0 .303 cmyk
@
211.196 154.981 mo
225.25 154.981 li
225.25 169.035 li
211.196 169.035 li
211.196 154.981 li
cp
.855 .73 0 0 cmyk
f
211.196 154.981 mo
225.25 154.981 li
225.25 169.035 li
211.196 169.035 li
211.196 154.981 li
cp
0 0 0 .303 cmyk
@
225.25 154.981 mo
239.303 154.981 li
239.303 169.035 li
225.25 169.035 li
225.25 154.981 li
cp
.855 .73 0 0 cmyk
f
225.25 154.981 mo
239.303 154.981 li
239.303 169.035 li
225.25 169.035 li
225.25 154.981 li
cp
0 0 0 .303 cmyk
@
169.035 112.819 mo
183.088 112.819 li
183.088 126.873 li
169.035 126.873 li
169.035 112.819 li
cp
.855 .73 0 0 cmyk
f
169.035 112.82 mo
183.088 112.82 li
183.088 126.874 li
169.035 126.874 li
169.035 112.82 li
cp
0 0 0 .303 cmyk
@
197.142 112.819 mo
211.196 112.819 li
211.196 126.873 li
197.142 126.873 li
197.142 112.819 li
cp
0 .938 1 0 cmyk
f
197.142 112.82 mo
211.196 112.82 li
211.196 126.874 li
197.142 126.874 li
197.142 112.82 li
cp
0 0 0 .303 cmyk
@
267.411 112.819 mo
281.464 112.819 li
281.464 126.873 li
267.411 126.873 li
267.411 112.819 li
cp
.855 .73 0 0 cmyk
f
267.411 112.82 mo
281.464 112.82 li
281.464 126.874 li
267.411 126.874 li
267.411 112.82 li
cp
0 0 0 .303 cmyk
@
253.357 98.7656 mo
267.411 98.7656 li
267.411 112.819 li
253.357 112.819 li
253.357 98.7656 li
cp
.855 .73 0 0 cmyk
f
253.357 98.7661 mo
267.411 98.7661 li
267.411 112.82 li
253.357 112.82 li
253.357 98.7661 li
cp
0 0 0 .303 cmyk
@
267.411 98.7656 mo
281.464 98.7656 li
281.464 112.819 li
267.411 112.819 li
267.411 98.7656 li
cp
.855 .73 0 0 cmyk
f
267.411 98.7661 mo
281.464 98.7661 li
281.464 112.82 li
267.411 112.82 li
267.411 98.7661 li
cp
0 0 0 .303 cmyk
@
281.464 98.7656 mo
295.518 98.7656 li
295.518 112.819 li
281.464 112.819 li
281.464 98.7656 li
cp
.855 .73 0 0 cmyk
f
281.464 98.7661 mo
295.518 98.7661 li
295.518 112.82 li
281.464 112.82 li
281.464 98.7661 li
cp
0 0 0 .303 cmyk
@
295.518 98.7656 mo
309.571 98.7656 li
309.571 112.819 li
295.518 112.819 li
295.518 98.7656 li
cp
.855 .73 0 0 cmyk
f
295.518 98.7661 mo
309.571 98.7661 li
309.571 112.82 li
295.518 112.82 li
295.518 98.7661 li
cp
0 0 0 .303 cmyk
@
309.571 98.7656 mo
323.625 98.7656 li
323.625 112.819 li
309.571 112.819 li
309.571 98.7656 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 98.7661 mo
323.625 98.7661 li
323.625 112.82 li
309.571 112.82 li
309.571 98.7661 li
cp
0 0 0 .303 cmyk
@
grestore
309.571 112.819 mo
323.625 112.819 li
323.625 126.873 li
309.571 126.873 li
309.571 112.819 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 112.82 mo
323.625 112.82 li
323.625 126.874 li
309.571 126.874 li
309.571 112.82 li
cp
0 0 0 .303 cmyk
@
grestore
295.518 112.819 mo
309.571 112.819 li
309.571 126.873 li
295.518 126.873 li
295.518 112.819 li
cp
0 .938 1 0 cmyk
f
295.518 112.82 mo
309.571 112.82 li
309.571 126.874 li
295.518 126.874 li
295.518 112.82 li
cp
0 0 0 .303 cmyk
@
309.571 126.873 mo
323.625 126.873 li
323.625 140.927 li
309.571 140.927 li
309.571 126.873 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 126.874 mo
323.625 126.874 li
323.625 140.927 li
309.571 140.927 li
309.571 126.874 li
cp
0 0 0 .303 cmyk
@
grestore
295.518 126.873 mo
309.571 126.873 li
309.571 140.927 li
295.518 140.927 li
295.518 126.873 li
cp
f
295.518 126.874 mo
309.571 126.874 li
309.571 140.927 li
295.518 140.927 li
295.518 126.874 li
cp
0 0 0 .303 cmyk
@
281.464 126.873 mo
295.518 126.873 li
295.518 140.927 li
281.464 140.927 li
281.464 126.873 li
cp
0 0 0 0 cmyk
f
281.464 126.874 mo
295.518 126.874 li
295.518 140.927 li
281.464 140.927 li
281.464 126.874 li
cp
0 0 0 .303 cmyk
@
288.143 133.851 mo
288.254 133.851 288.375 133.842 288.487 133.842 cv
289.002 133.842 289.895 133.937 289.895 134.95 cv
289.895 135.646 289.354 136.118 288.582 136.118 cv
287.457 136.118 287.319 135.354 287.292 134.787 cv
286.511 134.787 li
286.563 135.482 286.744 136.178 287.414 136.53 cv
287.706 136.685 288.083 136.796 288.53 136.796 cv
290.067 136.796 290.703 135.843 290.703 134.855 cv
290.703 134.048 290.282 133.636 289.698 133.447 cv
289.698 133.43 li
290.024 133.327 290.47 132.958 290.47 132.185 cv
290.47 131.266 289.775 130.596 288.607 130.596 cv
287.018 130.596 286.658 131.686 286.658 132.571 cv
287.396 132.571 li
287.43 132.15 287.499 131.274 288.573 131.274 cv
289.474 131.274 289.689 131.867 289.689 132.228 cv
289.689 132.983 289.123 133.215 288.539 133.215 cv
288.41 133.215 288.272 133.207 288.143 133.198 cv
288.143 133.851 li
cp
0 0 0 1 cmyk
f
253.357 140.927 mo
267.411 140.927 li
267.411 154.98 li
253.357 154.98 li
253.357 140.927 li
cp
0 0 0 0 cmyk
f
253.357 140.927 mo
267.411 140.927 li
267.411 154.981 li
253.357 154.981 li
253.357 140.927 li
cp
0 0 0 .303 cmyk
@
262.432 146.255 mo
262.355 145.027 261.367 144.649 260.671 144.649 cv
258.868 144.649 258.438 146.556 258.438 147.878 cv
258.438 148.668 258.542 149.407 258.902 149.974 cv
259.332 150.644 259.993 150.85 260.457 150.85 cv
261.307 150.85 261.667 150.618 261.985 150.266 cv
262.398 149.819 262.561 149.373 262.561 148.754 cv
262.561 147.312 261.41 146.839 260.671 146.839 cv
259.847 146.839 259.426 147.251 259.237 147.578 cv
259.22 147.561 li
259.22 146.925 259.469 145.328 260.654 145.328 cv
261.307 145.328 261.599 145.723 261.694 146.255 cv
262.432 146.255 li
cp
259.323 148.832 mo
259.323 148.119 259.727 147.518 260.56 147.518 cv
261.496 147.518 261.779 148.256 261.779 148.789 cv
261.779 149.605 261.316 150.171 260.594 150.171 cv
259.709 150.171 259.323 149.476 259.323 148.832 cv
cp
0 0 0 1 cmyk
f
253.357 126.873 mo
267.411 126.873 li
267.411 140.927 li
253.357 140.927 li
253.357 126.873 li
cp
0 0 0 0 cmyk
f
253.357 126.874 mo
267.411 126.874 li
267.411 140.927 li
253.357 140.927 li
253.357 126.874 li
cp
0 0 0 .303 cmyk
@
259.632 131.463 mo
262.192 131.463 li
262.192 130.724 li
259.065 130.724 li
258.61 133.962 li
259.263 133.997 li
259.546 133.627 259.941 133.421 260.379 133.421 cv
261.126 133.421 261.719 133.894 261.719 134.761 cv
261.719 135.517 261.23 136.144 260.448 136.144 cv
259.77 136.144 259.246 135.834 259.168 135.13 cv
258.387 135.13 li
258.533 136.479 259.546 136.796 260.336 136.796 cv
262.226 136.796 262.527 135.345 262.527 134.675 cv
262.527 133.43 261.522 132.743 260.542 132.743 cv
260.001 132.743 259.632 132.923 259.375 133.121 cv
259.632 131.463 li
cp
0 0 0 1 cmyk
f
267.411 126.873 mo
281.464 126.873 li
281.464 140.927 li
267.411 140.927 li
267.411 126.873 li
cp
0 0 0 0 cmyk
f
267.411 126.874 mo
281.464 126.874 li
281.464 140.927 li
267.411 140.927 li
267.411 126.874 li
cp
0 0 0 .303 cmyk
@
276.658 135.165 mo
276.658 134.512 li
275.773 134.512 li
275.773 130.596 li
275.146 130.596 li
272.38 134.426 li
272.38 135.165 li
275.017 135.165 li
275.017 136.633 li
275.773 136.633 li
275.773 135.165 li
276.658 135.165 li
cp
275 131.772 mo
275.017 131.772 li
275.017 134.512 li
273.076 134.512 li
275 131.772 li
cp
0 0 0 1 cmyk
f
267.411 140.927 mo
281.464 140.927 li
281.464 154.98 li
267.411 154.98 li
267.411 140.927 li
cp
0 0 0 0 cmyk
f
267.411 140.927 mo
281.464 140.927 li
281.464 154.981 li
267.411 154.981 li
267.411 140.927 li
cp
0 0 0 .303 cmyk
@
275.816 147.75 mo
275.816 149.261 275.42 150.171 274.553 150.171 cv
273.686 150.171 273.291 149.261 273.291 147.75 cv
273.291 146.238 273.686 145.328 274.553 145.328 cv
275.42 145.328 275.816 146.238 275.816 147.75 cv
cp
276.624 147.75 mo
276.624 146.496 276.288 144.649 274.553 144.649 cv
272.819 144.649 272.484 146.496 272.484 147.75 cv
272.484 149.003 272.819 150.85 274.553 150.85 cv
276.288 150.85 276.624 149.003 276.624 147.75 cv
cp
0 0 0 1 cmyk
f
281.464 140.927 mo
295.518 140.927 li
295.518 154.98 li
281.464 154.98 li
281.464 140.927 li
cp
0 0 0 0 cmyk
f
281.464 140.927 mo
295.518 140.927 li
295.518 154.981 li
281.464 154.981 li
281.464 140.927 li
cp
0 0 0 .303 cmyk
@
289.302 144.649 mo
288.71 144.649 li
288.469 145.637 288.066 145.731 287.086 145.8 cv
287.086 146.401 li
288.496 146.401 li
288.496 150.687 li
289.302 150.687 li
289.302 144.649 li
cp
0 0 0 1 cmyk
f
295.518 140.927 mo
309.571 140.927 li
309.571 154.98 li
295.518 154.98 li
295.518 140.927 li
cp
0 0 0 0 cmyk
f
295.518 140.927 mo
309.571 140.927 li
309.571 154.981 li
295.518 154.981 li
295.518 140.927 li
cp
0 0 0 .303 cmyk
@
301.407 146.813 mo
301.432 146.393 301.484 145.328 302.626 145.328 cv
303.511 145.328 303.82 145.938 303.82 146.418 cv
303.82 147.208 303.356 147.458 302.712 147.827 cv
301.914 148.291 li
301.106 148.763 300.54 149.433 300.497 150.687 cv
304.627 150.687 li
304.627 149.974 li
301.346 149.974 li
301.381 149.742 301.561 149.27 302.386 148.814 cv
303.013 148.471 li
303.915 147.99 304.627 147.535 304.627 146.453 cv
304.627 145.328 303.786 144.649 302.738 144.649 cv
302.085 144.649 300.651 144.847 300.651 146.813 cv
301.407 146.813 li
cp
0 0 0 1 cmyk
f
309.571 140.927 mo
323.625 140.927 li
323.625 154.98 li
309.571 154.98 li
309.571 140.927 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 140.927 mo
323.625 140.927 li
323.625 154.981 li
309.571 154.981 li
309.571 140.927 li
cp
0 0 0 .303 cmyk
@
grestore
253.357 154.981 mo
267.411 154.981 li
267.411 169.035 li
253.357 169.035 li
253.357 154.981 li
cp
0 .938 1 0 cmyk
f
253.357 154.981 mo
267.411 154.981 li
267.411 169.035 li
253.357 169.035 li
253.357 154.981 li
cp
0 0 0 .303 cmyk
@
258.43 159.571 mo
261.753 159.571 li
260.594 160.918 259.495 163.083 259.289 164.741 cv
260.122 164.741 li
260.56 162.043 262.002 160.12 262.604 159.493 cv
262.604 158.832 li
258.43 158.832 li
258.43 159.571 li
cp
0 0 0 1 cmyk
f
267.411 154.981 mo
281.464 154.981 li
281.464 169.035 li
267.411 169.035 li
267.411 154.981 li
cp
0 .938 1 0 cmyk
f
267.411 154.981 mo
281.464 154.981 li
281.464 169.035 li
267.411 169.035 li
267.411 154.981 li
cp
0 0 0 .303 cmyk
@
281.464 154.981 mo
295.518 154.981 li
295.518 169.035 li
281.464 169.035 li
281.464 154.981 li
cp
.855 .73 0 0 cmyk
f
281.464 154.981 mo
295.518 154.981 li
295.518 169.035 li
281.464 169.035 li
281.464 154.981 li
cp
0 0 0 .303 cmyk
@
295.518 154.981 mo
309.571 154.981 li
309.571 169.035 li
295.518 169.035 li
295.518 154.981 li
cp
.855 .73 0 0 cmyk
f
295.518 154.981 mo
309.571 154.981 li
309.571 169.035 li
295.518 169.035 li
295.518 154.981 li
cp
0 0 0 .303 cmyk
@
309.571 154.981 mo
323.625 154.981 li
323.625 169.035 li
309.571 169.035 li
309.571 154.981 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 154.981 mo
323.625 154.981 li
323.625 169.035 li
309.571 169.035 li
309.571 154.981 li
cp
0 0 0 .303 cmyk
@
grestore
253.357 112.819 mo
267.411 112.819 li
267.411 126.873 li
253.357 126.873 li
253.357 112.819 li
cp
f
253.357 112.82 mo
267.411 112.82 li
267.411 126.874 li
253.357 126.874 li
253.357 112.82 li
cp
0 0 0 .303 cmyk
@
281.464 112.819 mo
295.518 112.819 li
295.518 126.873 li
281.464 126.873 li
281.464 112.819 li
cp
0 .938 1 0 cmyk
f
281.464 112.82 mo
295.518 112.82 li
295.518 126.874 li
281.464 126.874 li
281.464 112.82 li
cp
0 0 0 .303 cmyk
@
14.4438 211.196 mo
28.4976 211.196 li
28.4976 225.25 li
14.4438 225.25 li
14.4438 211.196 li
cp
.855 .73 0 0 cmyk
f
14.4438 211.196 mo
28.4976 211.196 li
28.4976 225.25 li
14.4438 225.25 li
14.4438 211.196 li
cp
0 0 0 .25 cmyk
@
.390137 197.142 mo
14.4438 197.142 li
14.4438 211.196 li
.390137 211.196 li
.390137 197.142 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 197.142 mo
14.4438 197.142 li
14.4438 211.196 li
.390137 211.196 li
.390137 197.142 li
cp
0 0 0 .25 cmyk
@
grestore
14.4438 197.142 mo
28.4976 197.142 li
28.4976 211.196 li
14.4438 211.196 li
14.4438 197.142 li
cp
f
14.4438 197.142 mo
28.4976 197.142 li
28.4976 211.196 li
14.4438 211.196 li
14.4438 197.142 li
cp
0 0 0 .25 cmyk
@
28.4976 197.142 mo
42.5513 197.142 li
42.5513 211.196 li
28.4976 211.196 li
28.4976 197.142 li
cp
.855 .73 0 0 cmyk
f
28.4976 197.142 mo
42.5513 197.142 li
42.5513 211.196 li
28.4976 211.196 li
28.4976 197.142 li
cp
0 0 0 .25 cmyk
@
42.5513 197.142 mo
56.605 197.142 li
56.605 211.196 li
42.5513 211.196 li
42.5513 197.142 li
cp
.855 .73 0 0 cmyk
f
42.5513 197.142 mo
56.605 197.142 li
56.605 211.196 li
42.5513 211.196 li
42.5513 197.142 li
cp
0 0 0 .25 cmyk
@
56.605 197.142 mo
70.6587 197.142 li
70.6587 211.196 li
56.605 211.196 li
56.605 197.142 li
cp
.855 .73 0 0 cmyk
f
56.605 197.142 mo
70.6587 197.142 li
70.6587 211.196 li
56.605 211.196 li
56.605 197.142 li
cp
0 0 0 .25 cmyk
@
56.605 211.196 mo
70.6587 211.196 li
70.6587 225.25 li
56.605 225.25 li
56.605 211.196 li
cp
.855 .73 0 0 cmyk
f
56.605 211.196 mo
70.6587 211.196 li
70.6587 225.25 li
56.605 225.25 li
56.605 211.196 li
cp
0 0 0 .25 cmyk
@
42.5513 211.196 mo
56.605 211.196 li
56.605 225.25 li
42.5513 225.25 li
42.5513 211.196 li
cp
0 .938 1 0 cmyk
f
42.5513 211.196 mo
56.605 211.196 li
56.605 225.25 li
42.5513 225.25 li
42.5513 211.196 li
cp
0 0 0 .25 cmyk
@
56.605 225.25 mo
70.6587 225.25 li
70.6587 239.303 li
56.605 239.303 li
56.605 225.25 li
cp
.855 .73 0 0 cmyk
f
56.605 225.25 mo
70.6587 225.25 li
70.6587 239.303 li
56.605 239.303 li
56.605 225.25 li
cp
0 0 0 .25 cmyk
@
42.5513 225.25 mo
56.605 225.25 li
56.605 239.303 li
42.5513 239.303 li
42.5513 225.25 li
cp
.855 .73 0 0 cmyk
f
42.5513 225.25 mo
56.605 225.25 li
56.605 239.303 li
42.5513 239.303 li
42.5513 225.25 li
cp
0 0 0 .25 cmyk
@
28.4976 225.25 mo
42.5513 225.25 li
42.5513 239.303 li
28.4976 239.303 li
28.4976 225.25 li
cp
0 0 0 0 cmyk
f
28.4976 225.25 mo
42.5513 225.25 li
42.5513 239.303 li
28.4976 239.303 li
28.4976 225.25 li
cp
0 0 0 .25 cmyk
@
35.1772 232.226 mo
35.2891 232.226 35.4092 232.217 35.521 232.217 cv
36.0361 232.217 36.9292 232.312 36.9292 233.326 cv
36.9292 234.022 36.3882 234.494 35.6152 234.494 cv
34.4902 234.494 34.353 233.729 34.3271 233.163 cv
33.5454 233.163 li
33.5972 233.858 33.7773 234.553 34.4473 234.906 cv
34.7393 235.061 35.1172 235.172 35.564 235.172 cv
37.1011 235.172 37.7368 234.219 37.7368 233.231 cv
37.7368 232.424 37.3159 232.012 36.7319 231.823 cv
36.7319 231.805 li
37.0581 231.703 37.5049 231.333 37.5049 230.56 cv
37.5049 229.641 36.8091 228.971 35.6411 228.971 cv
34.0522 228.971 33.6914 230.062 33.6914 230.947 cv
34.4302 230.947 li
34.4644 230.526 34.5332 229.65 35.6069 229.65 cv
36.5083 229.65 36.7231 230.243 36.7231 230.603 cv
36.7231 231.359 36.1563 231.59 35.5723 231.59 cv
35.4434 231.59 35.3062 231.583 35.1772 231.574 cv
35.1772 232.226 li
cp
0 0 0 1 cmyk
f
.390137 239.303 mo
14.4438 239.303 li
14.4438 253.357 li
.390137 253.357 li
.390137 239.303 li
cp
0 0 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 239.303 mo
14.4438 239.303 li
14.4438 253.357 li
.390137 253.357 li
.390137 239.303 li
cp
0 0 0 .25 cmyk
@
grestore
9.46631 244.631 mo
9.38867 243.403 8.40137 243.025 7.70557 243.025 cv
5.90186 243.025 5.47266 244.932 5.47266 246.254 cv
5.47266 247.044 5.57568 247.783 5.93652 248.35 cv
6.36572 249.02 7.02686 249.225 7.49072 249.225 cv
8.34082 249.225 8.70166 248.994 9.01953 248.641 cv
9.43164 248.196 9.59473 247.749 9.59473 247.13 cv
9.59473 245.688 8.44385 245.215 7.70557 245.215 cv
6.88086 245.215 6.45996 245.627 6.271 245.954 cv
6.25391 245.936 li
6.25391 245.301 6.50293 243.704 7.68848 243.704 cv
8.34082 243.704 8.63281 244.098 8.72754 244.631 cv
9.46631 244.631 li
cp
6.35693 247.208 mo
6.35693 246.495 6.76074 245.893 7.59375 245.893 cv
8.52979 245.893 8.81348 246.632 8.81348 247.165 cv
8.81348 247.981 8.34961 248.547 7.62842 248.547 cv
6.74365 248.547 6.35693 247.852 6.35693 247.208 cv
cp
0 0 0 1 cmyk
f
.390137 225.25 mo
14.4438 225.25 li
14.4438 239.303 li
.390137 239.303 li
.390137 225.25 li
cp
0 0 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 225.25 mo
14.4438 225.25 li
14.4438 239.303 li
.390137 239.303 li
.390137 225.25 li
cp
0 0 0 .25 cmyk
@
grestore
6.6665 229.838 mo
9.22559 229.838 li
9.22559 229.1 li
6.09961 229.1 li
5.64404 232.338 li
6.29688 232.373 li
6.58057 232.002 6.97559 231.797 7.41357 231.797 cv
8.16064 231.797 8.75342 232.269 8.75342 233.137 cv
8.75342 233.893 8.26367 234.52 7.48242 234.52 cv
6.80371 234.52 6.27979 234.21 6.20264 233.506 cv
5.4209 233.506 li
5.56689 234.854 6.58057 235.172 7.37061 235.172 cv
9.25977 235.172 9.56055 233.721 9.56055 233.051 cv
9.56055 231.805 8.55566 231.119 7.57666 231.119 cv
7.03564 231.119 6.6665 231.299 6.40869 231.497 cv
6.6665 229.838 li
cp
0 0 0 1 cmyk
f
14.4438 225.25 mo
28.4976 225.25 li
28.4976 239.303 li
14.4438 239.303 li
14.4438 225.25 li
cp
0 0 0 0 cmyk
f
14.4438 225.25 mo
28.4976 225.25 li
28.4976 239.303 li
14.4438 239.303 li
14.4438 225.25 li
cp
0 0 0 .25 cmyk
@
23.6914 233.541 mo
23.6914 232.887 li
22.8071 232.887 li
22.8071 228.971 li
22.1802 228.971 li
19.4146 232.801 li
19.4146 233.541 li
22.0513 233.541 li
22.0513 235.008 li
22.8071 235.008 li
22.8071 233.541 li
23.6914 233.541 li
cp
22.0342 230.148 mo
22.0513 230.148 li
22.0513 232.887 li
20.1104 232.887 li
22.0342 230.148 li
cp
0 0 0 1 cmyk
f
14.4438 239.303 mo
28.4976 239.303 li
28.4976 253.357 li
14.4438 253.357 li
14.4438 239.303 li
cp
0 0 0 0 cmyk
f
14.4438 239.303 mo
28.4976 239.303 li
28.4976 253.357 li
14.4438 253.357 li
14.4438 239.303 li
cp
0 0 0 .25 cmyk
@
22.8501 246.125 mo
22.8501 247.637 22.4546 248.547 21.5874 248.547 cv
20.7202 248.547 20.3247 247.637 20.3247 246.125 cv
20.3247 244.614 20.7202 243.704 21.5874 243.704 cv
22.4546 243.704 22.8501 244.614 22.8501 246.125 cv
cp
23.6572 246.125 mo
23.6572 244.872 23.3223 243.025 21.5874 243.025 cv
19.8525 243.025 19.5176 244.872 19.5176 246.125 cv
19.5176 247.379 19.8525 249.225 21.5874 249.225 cv
23.3223 249.225 23.6572 247.379 23.6572 246.125 cv
cp
0 0 0 1 cmyk
f
28.4976 239.303 mo
42.5513 239.303 li
42.5513 253.357 li
28.4976 253.357 li
28.4976 239.303 li
cp
0 0 0 0 cmyk
f
28.4976 239.303 mo
42.5513 239.303 li
42.5513 253.357 li
28.4976 253.357 li
28.4976 239.303 li
cp
0 0 0 .25 cmyk
@
36.3369 243.025 mo
35.7441 243.025 li
35.5039 244.012 35.1001 244.107 34.1211 244.176 cv
34.1211 244.777 li
35.5293 244.777 li
35.5293 249.063 li
36.3369 249.063 li
36.3369 243.025 li
cp
0 0 0 1 cmyk
f
42.5513 239.303 mo
56.605 239.303 li
56.605 253.357 li
42.5513 253.357 li
42.5513 239.303 li
cp
0 0 0 0 cmyk
f
42.5513 239.303 mo
56.605 239.303 li
56.605 253.357 li
42.5513 253.357 li
42.5513 239.303 li
cp
0 0 0 .25 cmyk
@
48.4409 245.19 mo
48.4668 244.768 48.5181 243.704 49.6606 243.704 cv
50.5449 243.704 50.854 244.313 50.854 244.794 cv
50.854 245.584 50.3906 245.833 49.7461 246.203 cv
48.9478 246.667 li
48.1401 247.139 47.5732 247.809 47.5303 249.063 cv
51.6616 249.063 li
51.6616 248.35 li
48.3809 248.35 li
48.415 248.118 48.5952 247.645 49.4199 247.19 cv
50.0469 246.846 li
50.9487 246.366 51.6616 245.911 51.6616 244.829 cv
51.6616 243.704 50.8198 243.025 49.772 243.025 cv
49.1191 243.025 47.6851 243.223 47.6851 245.19 cv
48.4409 245.19 li
cp
0 0 0 1 cmyk
f
56.605 239.303 mo
70.6587 239.303 li
70.6587 253.357 li
56.605 253.357 li
56.605 239.303 li
cp
.855 .73 0 0 cmyk
f
56.605 239.303 mo
70.6587 239.303 li
70.6587 253.357 li
56.605 253.357 li
56.605 239.303 li
cp
0 0 0 .25 cmyk
@
.390137 253.357 mo
14.4438 253.357 li
14.4438 267.411 li
.390137 267.411 li
.390137 253.357 li
cp
0 0 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 253.357 mo
14.4438 253.357 li
14.4438 267.411 li
.390137 267.411 li
.390137 253.357 li
cp
0 0 0 .25 cmyk
@
grestore
5.46387 257.946 mo
8.7876 257.946 li
7.62842 259.294 6.52881 261.458 6.32275 263.116 cv
7.15576 263.116 li
7.59375 260.419 9.03662 258.496 9.6377 257.869 cv
9.6377 257.208 li
5.46387 257.208 li
5.46387 257.946 li
cp
0 0 0 1 cmyk
f
14.4438 253.357 mo
28.4976 253.357 li
28.4976 267.411 li
14.4438 267.411 li
14.4438 253.357 li
cp
0 .938 1 0 cmyk
f
14.4438 253.357 mo
28.4976 253.357 li
28.4976 267.411 li
14.4438 267.411 li
14.4438 253.357 li
cp
0 0 0 .25 cmyk
@
23.4253 258.633 mo
23.4253 257.928 22.9014 257.079 21.5615 257.079 cv
20.1187 257.079 19.7324 258.11 19.7324 258.737 cv
19.7324 259.303 20.0327 259.715 20.5483 259.913 cv
19.9126 260.17 19.5264 260.643 19.5264 261.381 cv
19.5264 261.673 19.5264 262.327 20.1445 262.816 cv
20.6255 263.194 21.2612 263.28 21.5962 263.28 cv
23.0215 263.28 23.6401 262.343 23.6401 261.374 cv
23.6401 260.917 23.4683 260.248 22.6523 259.905 cv
22.9185 259.766 23.4253 259.5 23.4253 258.633 cv
cp
21.5786 260.282 mo
22.2661 260.282 22.8325 260.643 22.8325 261.458 cv
22.8325 262.403 22.1714 262.601 21.6216 262.601 cv
20.5737 262.601 20.3335 261.879 20.3335 261.399 cv
20.3335 260.84 20.7285 260.282 21.5786 260.282 cv
cp
21.5703 259.629 mo
21.0205 259.629 20.5137 259.278 20.5137 258.702 cv
20.5137 258.315 20.7114 257.757 21.5186 257.757 cv
22.4033 257.757 22.6436 258.29 22.6436 258.659 cv
22.6436 259.208 22.2231 259.629 21.5703 259.629 cv
cp
0 0 0 1 cmyk
f
28.4976 253.357 mo
42.5513 253.357 li
42.5513 267.411 li
28.4976 267.411 li
28.4976 253.357 li
cp
.855 .73 0 0 cmyk
f
28.4976 253.357 mo
42.5513 253.357 li
42.5513 267.411 li
28.4976 267.411 li
28.4976 253.357 li
cp
0 0 0 .25 cmyk
@
42.5513 253.357 mo
56.605 253.357 li
56.605 267.411 li
42.5513 267.411 li
42.5513 253.357 li
cp
.855 .73 0 0 cmyk
f
42.5513 253.357 mo
56.605 253.357 li
56.605 267.411 li
42.5513 267.411 li
42.5513 253.357 li
cp
0 0 0 .25 cmyk
@
56.605 253.357 mo
70.6587 253.357 li
70.6587 267.411 li
56.605 267.411 li
56.605 253.357 li
cp
.855 .73 0 0 cmyk
f
56.605 253.357 mo
70.6587 253.357 li
70.6587 267.411 li
56.605 267.411 li
56.605 253.357 li
cp
0 0 0 .25 cmyk
@
.390137 211.196 mo
14.4438 211.196 li
14.4438 225.25 li
.390137 225.25 li
.390137 211.196 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
.390137 211.196 mo
14.4438 211.196 li
14.4438 225.25 li
.390137 225.25 li
.390137 211.196 li
cp
0 0 0 .25 cmyk
@
grestore
28.4976 211.196 mo
42.5513 211.196 li
42.5513 225.25 li
28.4976 225.25 li
28.4976 211.196 li
cp
0 .938 1 0 cmyk
f
28.4976 211.196 mo
42.5513 211.196 li
42.5513 225.25 li
28.4976 225.25 li
28.4976 211.196 li
cp
0 0 0 .25 cmyk
@
98.7661 211.196 mo
112.82 211.196 li
112.82 225.25 li
98.7661 225.25 li
98.7661 211.196 li
cp
.855 .73 0 0 cmyk
f
98.7661 211.196 mo
112.82 211.196 li
112.82 225.25 li
98.7661 225.25 li
98.7661 211.196 li
cp
0 0 0 .25 cmyk
@
84.7124 197.142 mo
98.7661 197.142 li
98.7661 211.196 li
84.7124 211.196 li
84.7124 197.142 li
cp
.855 .73 0 0 cmyk
f
84.7124 197.142 mo
98.7661 197.142 li
98.7661 211.196 li
84.7124 211.196 li
84.7124 197.142 li
cp
0 0 0 .25 cmyk
@
98.7661 197.142 mo
112.82 197.142 li
112.82 211.196 li
98.7661 211.196 li
98.7661 197.142 li
cp
.855 .73 0 0 cmyk
f
98.7661 197.142 mo
112.82 197.142 li
112.82 211.196 li
98.7661 211.196 li
98.7661 197.142 li
cp
0 0 0 .25 cmyk
@
112.82 197.142 mo
126.874 197.142 li
126.874 211.196 li
112.82 211.196 li
112.82 197.142 li
cp
.855 .73 0 0 cmyk
f
112.82 197.142 mo
126.874 197.142 li
126.874 211.196 li
112.82 211.196 li
112.82 197.142 li
cp
0 0 0 .25 cmyk
@
126.874 197.142 mo
140.927 197.142 li
140.927 211.196 li
126.874 211.196 li
126.874 197.142 li
cp
.855 .73 0 0 cmyk
f
126.874 197.142 mo
140.927 197.142 li
140.927 211.196 li
126.874 211.196 li
126.874 197.142 li
cp
0 0 0 .25 cmyk
@
140.927 197.142 mo
154.981 197.142 li
154.981 211.196 li
140.927 211.196 li
140.927 197.142 li
cp
.855 .73 0 0 cmyk
f
140.927 197.142 mo
154.981 197.142 li
154.981 211.196 li
140.927 211.196 li
140.927 197.142 li
cp
0 0 0 .25 cmyk
@
140.927 211.196 mo
154.981 211.196 li
154.981 225.25 li
140.927 225.25 li
140.927 211.196 li
cp
.855 .73 0 0 cmyk
f
140.927 211.196 mo
154.981 211.196 li
154.981 225.25 li
140.927 225.25 li
140.927 211.196 li
cp
0 0 0 .25 cmyk
@
126.874 211.196 mo
140.927 211.196 li
140.927 225.25 li
126.874 225.25 li
126.874 211.196 li
cp
0 .938 1 0 cmyk
f
126.874 211.196 mo
140.927 211.196 li
140.927 225.25 li
126.874 225.25 li
126.874 211.196 li
cp
0 0 0 .25 cmyk
@
140.927 225.25 mo
154.981 225.25 li
154.981 239.303 li
140.927 239.303 li
140.927 225.25 li
cp
.855 .73 0 0 cmyk
f
140.927 225.25 mo
154.981 225.25 li
154.981 239.303 li
140.927 239.303 li
140.927 225.25 li
cp
0 0 0 .25 cmyk
@
126.874 225.25 mo
140.927 225.25 li
140.927 239.303 li
126.874 239.303 li
126.874 225.25 li
cp
.855 .73 0 0 cmyk
f
126.874 225.25 mo
140.927 225.25 li
140.927 239.303 li
126.874 239.303 li
126.874 225.25 li
cp
0 0 0 .25 cmyk
@
112.82 225.25 mo
126.874 225.25 li
126.874 239.303 li
112.82 239.303 li
112.82 225.25 li
cp
0 0 0 0 cmyk
f
112.82 225.25 mo
126.874 225.25 li
126.874 239.303 li
112.82 239.303 li
112.82 225.25 li
cp
0 0 0 .25 cmyk
@
119.5 232.226 mo
119.611 232.226 119.731 232.217 119.843 232.217 cv
120.358 232.217 121.251 232.312 121.251 233.326 cv
121.251 234.022 120.71 234.494 119.938 234.494 cv
118.813 234.494 118.675 233.729 118.649 233.163 cv
117.868 233.163 li
117.919 233.858 118.1 234.553 118.77 234.906 cv
119.062 235.061 119.439 235.172 119.886 235.172 cv
121.423 235.172 122.059 234.219 122.059 233.231 cv
122.059 232.424 121.638 232.012 121.054 231.823 cv
121.054 231.805 li
121.38 231.703 121.827 231.333 121.827 230.56 cv
121.827 229.641 121.131 228.971 119.963 228.971 cv
118.375 228.971 118.014 230.062 118.014 230.947 cv
118.752 230.947 li
118.787 230.526 118.855 229.65 119.929 229.65 cv
120.831 229.65 121.045 230.243 121.045 230.603 cv
121.045 231.359 120.479 231.59 119.895 231.59 cv
119.766 231.59 119.628 231.583 119.5 231.574 cv
119.5 232.226 li
cp
0 0 0 1 cmyk
f
84.7124 239.303 mo
98.7661 239.303 li
98.7661 253.357 li
84.7124 253.357 li
84.7124 239.303 li
cp
0 0 0 0 cmyk
f
84.7124 239.303 mo
98.7661 239.303 li
98.7661 253.357 li
84.7124 253.357 li
84.7124 239.303 li
cp
0 0 0 .25 cmyk
@
93.7881 244.631 mo
93.7109 243.403 92.7231 243.025 92.0273 243.025 cv
90.2241 243.025 89.7944 244.932 89.7944 246.254 cv
89.7944 247.044 89.8975 247.783 90.2583 248.35 cv
90.688 249.02 91.3491 249.225 91.813 249.225 cv
92.6631 249.225 93.0239 248.994 93.3418 248.641 cv
93.7539 248.196 93.917 247.749 93.917 247.13 cv
93.917 245.688 92.7661 245.215 92.0273 245.215 cv
91.2031 245.215 90.7822 245.627 90.5933 245.954 cv
90.5762 245.936 li
90.5762 245.301 90.8252 243.704 92.0103 243.704 cv
92.6631 243.704 92.9551 244.098 93.0498 244.631 cv
93.7881 244.631 li
cp
90.6792 247.208 mo
90.6792 246.495 91.083 245.893 91.916 245.893 cv
92.8521 245.893 93.1353 246.632 93.1353 247.165 cv
93.1353 247.981 92.6719 248.547 91.9502 248.547 cv
91.0659 248.547 90.6792 247.852 90.6792 247.208 cv
cp
0 0 0 1 cmyk
f
84.7124 225.25 mo
98.7661 225.25 li
98.7661 239.303 li
84.7124 239.303 li
84.7124 225.25 li
cp
0 0 0 0 cmyk
f
84.7124 225.25 mo
98.7661 225.25 li
98.7661 239.303 li
84.7124 239.303 li
84.7124 225.25 li
cp
0 0 0 .25 cmyk
@
90.9883 229.838 mo
93.5479 229.838 li
93.5479 229.1 li
90.4214 229.1 li
89.9663 232.338 li
90.6191 232.373 li
90.9023 232.002 91.2974 231.797 91.7354 231.797 cv
92.4829 231.797 93.0752 232.269 93.0752 233.137 cv
93.0752 233.893 92.5859 234.52 91.8042 234.52 cv
91.126 234.52 90.6021 234.21 90.5244 233.506 cv
89.7432 233.506 li
89.8892 234.854 90.9023 235.172 91.6929 235.172 cv
93.582 235.172 93.8828 233.721 93.8828 233.051 cv
93.8828 231.805 92.8779 231.119 91.8989 231.119 cv
91.3579 231.119 90.9883 231.299 90.731 231.497 cv
90.9883 229.838 li
cp
0 0 0 1 cmyk
f
98.7661 225.25 mo
112.82 225.25 li
112.82 239.303 li
98.7661 239.303 li
98.7661 225.25 li
cp
0 0 0 0 cmyk
f
98.7661 225.25 mo
112.82 225.25 li
112.82 239.303 li
98.7661 239.303 li
98.7661 225.25 li
cp
0 0 0 .25 cmyk
@
108.014 233.541 mo
108.014 232.887 li
107.129 232.887 li
107.129 228.971 li
106.502 228.971 li
103.737 232.801 li
103.737 233.541 li
106.373 233.541 li
106.373 235.008 li
107.129 235.008 li
107.129 233.541 li
108.014 233.541 li
cp
106.356 230.148 mo
106.373 230.148 li
106.373 232.887 li
104.432 232.887 li
106.356 230.148 li
cp
0 0 0 1 cmyk
f
98.7661 239.303 mo
112.82 239.303 li
112.82 253.357 li
98.7661 253.357 li
98.7661 239.303 li
cp
0 0 0 0 cmyk
f
98.7661 239.303 mo
112.82 239.303 li
112.82 253.357 li
98.7661 253.357 li
98.7661 239.303 li
cp
0 0 0 .25 cmyk
@
107.172 246.125 mo
107.172 247.637 106.777 248.547 105.91 248.547 cv
105.042 248.547 104.647 247.637 104.647 246.125 cv
104.647 244.614 105.042 243.704 105.91 243.704 cv
106.777 243.704 107.172 244.614 107.172 246.125 cv
cp
107.979 246.125 mo
107.979 244.872 107.645 243.025 105.91 243.025 cv
104.175 243.025 103.84 244.872 103.84 246.125 cv
103.84 247.379 104.175 249.225 105.91 249.225 cv
107.645 249.225 107.979 247.379 107.979 246.125 cv
cp
0 0 0 1 cmyk
f
112.82 239.303 mo
126.874 239.303 li
126.874 253.357 li
112.82 253.357 li
112.82 239.303 li
cp
0 0 0 0 cmyk
f
112.82 239.303 mo
126.874 239.303 li
126.874 253.357 li
112.82 253.357 li
112.82 239.303 li
cp
0 0 0 .25 cmyk
@
120.659 243.025 mo
120.066 243.025 li
119.826 244.012 119.422 244.107 118.443 244.176 cv
118.443 244.777 li
119.852 244.777 li
119.852 249.063 li
120.659 249.063 li
120.659 243.025 li
cp
0 0 0 1 cmyk
f
126.874 239.303 mo
140.927 239.303 li
140.927 253.357 li
126.874 253.357 li
126.874 239.303 li
cp
0 0 0 0 cmyk
f
126.874 239.303 mo
140.927 239.303 li
140.927 253.357 li
126.874 253.357 li
126.874 239.303 li
cp
0 0 0 .25 cmyk
@
132.763 245.19 mo
132.789 244.768 132.84 243.704 133.982 243.704 cv
134.867 243.704 135.176 244.313 135.176 244.794 cv
135.176 245.584 134.712 245.833 134.068 246.203 cv
133.27 246.667 li
132.462 247.139 131.896 247.809 131.853 249.063 cv
135.983 249.063 li
135.983 248.35 li
132.703 248.35 li
132.737 248.118 132.917 247.645 133.742 247.19 cv
134.369 246.846 li
135.271 246.366 135.983 245.911 135.983 244.829 cv
135.983 243.704 135.142 243.025 134.094 243.025 cv
133.441 243.025 132.007 243.223 132.007 245.19 cv
132.763 245.19 li
cp
0 0 0 1 cmyk
f
140.927 239.303 mo
154.981 239.303 li
154.981 253.357 li
140.927 253.357 li
140.927 239.303 li
cp
.855 .73 0 0 cmyk
f
140.927 239.303 mo
154.981 239.303 li
154.981 253.357 li
140.927 253.357 li
140.927 239.303 li
cp
0 0 0 .25 cmyk
@
84.7124 253.357 mo
98.7661 253.357 li
98.7661 267.411 li
84.7124 267.411 li
84.7124 253.357 li
cp
0 0 0 0 cmyk
f
84.7124 253.357 mo
98.7661 253.357 li
98.7661 267.411 li
84.7124 267.411 li
84.7124 253.357 li
cp
0 0 0 .25 cmyk
@
89.7861 257.946 mo
93.1099 257.946 li
91.9502 259.294 90.8511 261.458 90.645 263.116 cv
91.478 263.116 li
91.916 260.419 93.3589 258.496 93.96 257.869 cv
93.96 257.208 li
89.7861 257.208 li
89.7861 257.946 li
cp
0 0 0 1 cmyk
f
98.7661 253.357 mo
112.82 253.357 li
112.82 267.411 li
98.7661 267.411 li
98.7661 253.357 li
cp
0 0 0 0 cmyk
f
98.7661 253.357 mo
112.82 253.357 li
112.82 267.411 li
98.7661 267.411 li
98.7661 253.357 li
cp
0 0 0 .25 cmyk
@
107.748 258.633 mo
107.748 257.928 107.224 257.079 105.884 257.079 cv
104.441 257.079 104.054 258.11 104.054 258.737 cv
104.054 259.303 104.355 259.715 104.87 259.913 cv
104.235 260.17 103.848 260.643 103.848 261.381 cv
103.848 261.673 103.848 262.327 104.467 262.816 cv
104.948 263.194 105.583 263.28 105.918 263.28 cv
107.344 263.28 107.962 262.343 107.962 261.374 cv
107.962 260.917 107.791 260.248 106.975 259.905 cv
107.241 259.766 107.748 259.5 107.748 258.633 cv
cp
105.901 260.282 mo
106.588 260.282 107.155 260.643 107.155 261.458 cv
107.155 262.403 106.494 262.601 105.944 262.601 cv
104.896 262.601 104.656 261.879 104.656 261.399 cv
104.656 260.84 105.051 260.282 105.901 260.282 cv
cp
105.892 259.629 mo
105.343 259.629 104.836 259.278 104.836 258.702 cv
104.836 258.315 105.034 257.757 105.841 257.757 cv
106.726 257.757 106.966 258.29 106.966 258.659 cv
106.966 259.208 106.545 259.629 105.892 259.629 cv
cp
0 0 0 1 cmyk
f
112.82 253.357 mo
126.874 253.357 li
126.874 267.411 li
112.82 267.411 li
112.82 253.357 li
cp
.855 .73 0 0 cmyk
f
112.82 253.357 mo
126.874 253.357 li
126.874 267.411 li
112.82 267.411 li
112.82 253.357 li
cp
0 0 0 .25 cmyk
@
126.874 253.357 mo
140.927 253.357 li
140.927 267.411 li
126.874 267.411 li
126.874 253.357 li
cp
.855 .73 0 0 cmyk
f
126.874 253.357 mo
140.927 253.357 li
140.927 267.411 li
126.874 267.411 li
126.874 253.357 li
cp
0 0 0 .25 cmyk
@
140.927 253.357 mo
154.981 253.357 li
154.981 267.411 li
140.927 267.411 li
140.927 253.357 li
cp
.855 .73 0 0 cmyk
f
140.927 253.357 mo
154.981 253.357 li
154.981 267.411 li
140.927 267.411 li
140.927 253.357 li
cp
0 0 0 .25 cmyk
@
84.7124 211.196 mo
98.7661 211.196 li
98.7661 225.25 li
84.7124 225.25 li
84.7124 211.196 li
cp
.855 .73 0 0 cmyk
f
84.7124 211.196 mo
98.7661 211.196 li
98.7661 225.25 li
84.7124 225.25 li
84.7124 211.196 li
cp
0 0 0 .25 cmyk
@
112.82 211.196 mo
126.874 211.196 li
126.874 225.25 li
112.82 225.25 li
112.82 211.196 li
cp
0 .938 1 0 cmyk
f
112.82 211.196 mo
126.874 211.196 li
126.874 225.25 li
112.82 225.25 li
112.82 211.196 li
cp
0 0 0 .25 cmyk
@
119.834 218.937 mo
120.393 218.937 120.994 218.679 121.217 218.215 cv
121.234 218.233 li
121.045 219.795 120.607 220.492 119.783 220.492 cv
119.165 220.492 118.804 220.114 118.761 219.504 cv
118.005 219.504 li
118.005 220.088 118.383 221.119 119.8 221.119 cv
121.878 221.119 121.99 218.362 121.99 217.717 cv
121.99 216.739 121.801 214.917 119.877 214.917 cv
118.606 214.917 117.937 215.888 117.937 216.987 cv
117.937 218.19 118.718 218.937 119.834 218.937 cv
cp
119.946 218.258 mo
119.439 218.258 118.718 218.112 118.718 216.954 cv
118.718 216.146 119.182 215.596 119.886 215.596 cv
120.753 215.596 121.105 216.198 121.105 216.884 cv
121.105 218.079 120.341 218.258 119.946 218.258 cv
cp
0 0 0 1 cmyk
f
183.088 211.196 mo
197.142 211.196 li
197.142 225.25 li
183.088 225.25 li
183.088 211.196 li
cp
.855 .73 0 0 cmyk
f
183.088 211.196 mo
197.142 211.196 li
197.142 225.25 li
183.088 225.25 li
183.088 211.196 li
cp
0 0 0 .25 cmyk
@
169.035 197.142 mo
183.088 197.142 li
183.088 211.196 li
169.035 211.196 li
169.035 197.142 li
cp
.855 .73 0 0 cmyk
f
169.035 197.142 mo
183.088 197.142 li
183.088 211.196 li
169.035 211.196 li
169.035 197.142 li
cp
0 0 0 .25 cmyk
@
183.088 197.142 mo
197.142 197.142 li
197.142 211.196 li
183.088 211.196 li
183.088 197.142 li
cp
.855 .73 0 0 cmyk
f
183.088 197.142 mo
197.142 197.142 li
197.142 211.196 li
183.088 211.196 li
183.088 197.142 li
cp
0 0 0 .25 cmyk
@
197.142 197.142 mo
211.196 197.142 li
211.196 211.196 li
197.142 211.196 li
197.142 197.142 li
cp
.855 .73 0 0 cmyk
f
197.142 197.142 mo
211.196 197.142 li
211.196 211.196 li
197.142 211.196 li
197.142 197.142 li
cp
0 0 0 .25 cmyk
@
211.196 197.142 mo
225.25 197.142 li
225.25 211.196 li
211.196 211.196 li
211.196 197.142 li
cp
.855 .73 0 0 cmyk
f
211.196 197.142 mo
225.25 197.142 li
225.25 211.196 li
211.196 211.196 li
211.196 197.142 li
cp
0 0 0 .25 cmyk
@
225.25 197.142 mo
239.303 197.142 li
239.303 211.196 li
225.25 211.196 li
225.25 197.142 li
cp
.855 .73 0 0 cmyk
f
225.25 197.142 mo
239.303 197.142 li
239.303 211.196 li
225.25 211.196 li
225.25 197.142 li
cp
0 0 0 .25 cmyk
@
225.25 211.196 mo
239.303 211.196 li
239.303 225.25 li
225.25 225.25 li
225.25 211.196 li
cp
.855 .73 0 0 cmyk
f
225.25 211.196 mo
239.303 211.196 li
239.303 225.25 li
225.25 225.25 li
225.25 211.196 li
cp
0 0 0 .25 cmyk
@
211.196 211.196 mo
225.25 211.196 li
225.25 225.25 li
211.196 225.25 li
211.196 211.196 li
cp
0 .938 1 0 cmyk
f
211.196 211.196 mo
225.25 211.196 li
225.25 225.25 li
211.196 225.25 li
211.196 211.196 li
cp
0 0 0 .25 cmyk
@
225.25 225.25 mo
239.303 225.25 li
239.303 239.303 li
225.25 239.303 li
225.25 225.25 li
cp
.855 .73 0 0 cmyk
f
225.25 225.25 mo
239.303 225.25 li
239.303 239.303 li
225.25 239.303 li
225.25 225.25 li
cp
0 0 0 .25 cmyk
@
211.196 225.25 mo
225.25 225.25 li
225.25 239.303 li
211.196 239.303 li
211.196 225.25 li
cp
.855 .73 0 0 cmyk
f
211.196 225.25 mo
225.25 225.25 li
225.25 239.303 li
211.196 239.303 li
211.196 225.25 li
cp
0 0 0 .25 cmyk
@
197.142 225.25 mo
211.196 225.25 li
211.196 239.303 li
197.142 239.303 li
197.142 225.25 li
cp
0 0 0 0 cmyk
f
197.142 225.25 mo
211.196 225.25 li
211.196 239.303 li
197.142 239.303 li
197.142 225.25 li
cp
0 0 0 .25 cmyk
@
203.821 232.226 mo
203.933 232.226 204.053 232.217 204.165 232.217 cv
204.68 232.217 205.573 232.312 205.573 233.326 cv
205.573 234.022 205.032 234.494 204.259 234.494 cv
203.134 234.494 202.997 233.729 202.971 233.163 cv
202.189 233.163 li
202.241 233.858 202.421 234.553 203.091 234.906 cv
203.383 235.061 203.761 235.172 204.208 235.172 cv
205.745 235.172 206.38 234.219 206.38 233.231 cv
206.38 232.424 205.959 232.012 205.375 231.823 cv
205.375 231.805 li
205.702 231.703 206.149 231.333 206.149 230.56 cv
206.149 229.641 205.453 228.971 204.285 228.971 cv
202.696 228.971 202.335 230.062 202.335 230.947 cv
203.074 230.947 li
203.108 230.526 203.177 229.65 204.25 229.65 cv
205.152 229.65 205.367 230.243 205.367 230.603 cv
205.367 231.359 204.8 231.59 204.216 231.59 cv
204.087 231.59 203.95 231.583 203.821 231.574 cv
203.821 232.226 li
cp
0 0 0 1 cmyk
f
169.035 239.303 mo
183.088 239.303 li
183.088 253.357 li
169.035 253.357 li
169.035 239.303 li
cp
0 0 0 0 cmyk
f
169.035 239.303 mo
183.088 239.303 li
183.088 253.357 li
169.035 253.357 li
169.035 239.303 li
cp
0 0 0 .25 cmyk
@
178.11 244.631 mo
178.033 243.403 177.045 243.025 176.349 243.025 cv
174.545 243.025 174.117 244.932 174.117 246.254 cv
174.117 247.044 174.219 247.783 174.581 248.35 cv
175.009 249.02 175.67 249.225 176.134 249.225 cv
176.985 249.225 177.345 248.994 177.664 248.641 cv
178.076 248.196 178.239 247.749 178.239 247.13 cv
178.239 245.688 177.087 245.215 176.349 245.215 cv
175.525 245.215 175.104 245.627 174.915 245.954 cv
174.898 245.936 li
174.898 245.301 175.147 243.704 176.333 243.704 cv
176.985 243.704 177.277 244.098 177.372 244.631 cv
178.11 244.631 li
cp
175 247.208 mo
175 246.495 175.405 245.893 176.238 245.893 cv
177.173 245.893 177.458 246.632 177.458 247.165 cv
177.458 247.981 176.994 248.547 176.272 248.547 cv
175.387 248.547 175 247.852 175 247.208 cv
cp
0 0 0 1 cmyk
f
169.035 225.25 mo
183.088 225.25 li
183.088 239.303 li
169.035 239.303 li
169.035 225.25 li
cp
0 0 0 0 cmyk
f
169.035 225.25 mo
183.088 225.25 li
183.088 239.303 li
169.035 239.303 li
169.035 225.25 li
cp
0 0 0 .25 cmyk
@
175.31 229.838 mo
177.87 229.838 li
177.87 229.1 li
174.744 229.1 li
174.288 232.338 li
174.941 232.373 li
175.224 232.002 175.62 231.797 176.057 231.797 cv
176.804 231.797 177.397 232.269 177.397 233.137 cv
177.397 233.893 176.908 234.52 176.125 234.52 cv
175.448 234.52 174.923 234.21 174.846 233.506 cv
174.065 233.506 li
174.21 234.854 175.224 235.172 176.014 235.172 cv
177.904 235.172 178.205 233.721 178.205 233.051 cv
178.205 231.805 177.2 231.119 176.22 231.119 cv
175.679 231.119 175.31 231.299 175.052 231.497 cv
175.31 229.838 li
cp
0 0 0 1 cmyk
f
183.088 225.25 mo
197.142 225.25 li
197.142 239.303 li
183.088 239.303 li
183.088 225.25 li
cp
0 0 0 0 cmyk
f
183.088 225.25 mo
197.142 225.25 li
197.142 239.303 li
183.088 239.303 li
183.088 225.25 li
cp
0 0 0 .25 cmyk
@
192.335 233.541 mo
192.335 232.887 li
191.451 232.887 li
191.451 228.971 li
190.824 228.971 li
188.058 232.801 li
188.058 233.541 li
190.695 233.541 li
190.695 235.008 li
191.451 235.008 li
191.451 233.541 li
192.335 233.541 li
cp
190.678 230.148 mo
190.695 230.148 li
190.695 232.887 li
188.754 232.887 li
190.678 230.148 li
cp
0 0 0 1 cmyk
f
183.088 239.303 mo
197.142 239.303 li
197.142 253.357 li
183.088 253.357 li
183.088 239.303 li
cp
0 0 0 0 cmyk
f
183.088 239.303 mo
197.142 239.303 li
197.142 253.357 li
183.088 253.357 li
183.088 239.303 li
cp
0 0 0 .25 cmyk
@
191.494 246.125 mo
191.494 247.637 191.098 248.547 190.231 248.547 cv
189.364 248.547 188.968 247.637 188.968 246.125 cv
188.968 244.614 189.364 243.704 190.231 243.704 cv
191.098 243.704 191.494 244.614 191.494 246.125 cv
cp
192.301 246.125 mo
192.301 244.872 191.966 243.025 190.231 243.025 cv
188.497 243.025 188.162 244.872 188.162 246.125 cv
188.162 247.379 188.497 249.225 190.231 249.225 cv
191.966 249.225 192.301 247.379 192.301 246.125 cv
cp
0 0 0 1 cmyk
f
197.142 239.303 mo
211.196 239.303 li
211.196 253.357 li
197.142 253.357 li
197.142 239.303 li
cp
0 0 0 0 cmyk
f
197.142 239.303 mo
211.196 239.303 li
211.196 253.357 li
197.142 253.357 li
197.142 239.303 li
cp
0 0 0 .25 cmyk
@
204.981 243.025 mo
204.388 243.025 li
204.147 244.012 203.744 244.107 202.765 244.176 cv
202.765 244.777 li
204.173 244.777 li
204.173 249.063 li
204.981 249.063 li
204.981 243.025 li
cp
0 0 0 1 cmyk
f
211.196 239.303 mo
225.25 239.303 li
225.25 253.357 li
211.196 253.357 li
211.196 239.303 li
cp
0 0 0 0 cmyk
f
211.196 239.303 mo
225.25 239.303 li
225.25 253.357 li
211.196 253.357 li
211.196 239.303 li
cp
0 0 0 .25 cmyk
@
217.084 245.19 mo
217.111 244.768 217.162 243.704 218.304 243.704 cv
219.189 243.704 219.498 244.313 219.498 244.794 cv
219.498 245.584 219.034 245.833 218.39 246.203 cv
217.591 246.667 li
216.784 247.139 216.217 247.809 216.174 249.063 cv
220.305 249.063 li
220.305 248.35 li
217.025 248.35 li
217.059 248.118 217.239 247.645 218.064 247.19 cv
218.691 246.846 li
219.592 246.366 220.305 245.911 220.305 244.829 cv
220.305 243.704 219.463 243.025 218.416 243.025 cv
217.763 243.025 216.329 243.223 216.329 245.19 cv
217.084 245.19 li
cp
0 0 0 1 cmyk
f
225.25 239.303 mo
239.303 239.303 li
239.303 253.357 li
225.25 253.357 li
225.25 239.303 li
cp
.855 .73 0 0 cmyk
f
225.25 239.303 mo
239.303 239.303 li
239.303 253.357 li
225.25 253.357 li
225.25 239.303 li
cp
0 0 0 .25 cmyk
@
169.035 253.357 mo
183.088 253.357 li
183.088 267.411 li
169.035 267.411 li
169.035 253.357 li
cp
0 0 0 0 cmyk
f
169.035 253.357 mo
183.088 253.357 li
183.088 267.411 li
169.035 267.411 li
169.035 253.357 li
cp
0 0 0 .25 cmyk
@
174.108 257.946 mo
177.431 257.946 li
176.272 259.294 175.172 261.458 174.966 263.116 cv
175.799 263.116 li
176.238 260.419 177.68 258.496 178.282 257.869 cv
178.282 257.208 li
174.108 257.208 li
174.108 257.946 li
cp
0 0 0 1 cmyk
f
183.088 253.357 mo
197.142 253.357 li
197.142 267.411 li
183.088 267.411 li
183.088 253.357 li
cp
0 0 0 0 cmyk
f
183.088 253.357 mo
197.142 253.357 li
197.142 267.411 li
183.088 267.411 li
183.088 253.357 li
cp
0 0 0 .25 cmyk
@
192.069 258.633 mo
192.069 257.928 191.545 257.079 190.206 257.079 cv
188.762 257.079 188.376 258.11 188.376 258.737 cv
188.376 259.303 188.676 259.715 189.192 259.913 cv
188.556 260.17 188.17 260.643 188.17 261.381 cv
188.17 261.673 188.17 262.327 188.789 262.816 cv
189.269 263.194 189.905 263.28 190.24 263.28 cv
191.666 263.28 192.284 262.343 192.284 261.374 cv
192.284 260.917 192.112 260.248 191.296 259.905 cv
191.562 259.766 192.069 259.5 192.069 258.633 cv
cp
190.222 260.282 mo
190.91 260.282 191.476 260.643 191.476 261.458 cv
191.476 262.403 190.815 262.601 190.265 262.601 cv
189.217 262.601 188.977 261.879 188.977 261.399 cv
188.977 260.84 189.373 260.282 190.222 260.282 cv
cp
190.214 259.629 mo
189.665 259.629 189.158 259.278 189.158 258.702 cv
189.158 258.315 189.355 257.757 190.163 257.757 cv
191.047 257.757 191.288 258.29 191.288 258.659 cv
191.288 259.208 190.867 259.629 190.214 259.629 cv
cp
0 0 0 1 cmyk
f
197.142 253.357 mo
211.196 253.357 li
211.196 267.411 li
197.142 267.411 li
197.142 253.357 li
cp
.855 .73 0 0 cmyk
f
197.142 253.357 mo
211.196 253.357 li
211.196 267.411 li
197.142 267.411 li
197.142 253.357 li
cp
0 0 0 .25 cmyk
@
211.196 253.357 mo
225.25 253.357 li
225.25 267.411 li
211.196 267.411 li
211.196 253.357 li
cp
.855 .73 0 0 cmyk
f
211.196 253.357 mo
225.25 253.357 li
225.25 267.411 li
211.196 267.411 li
211.196 253.357 li
cp
0 0 0 .25 cmyk
@
225.25 253.357 mo
239.303 253.357 li
239.303 267.411 li
225.25 267.411 li
225.25 253.357 li
cp
.855 .73 0 0 cmyk
f
225.25 253.357 mo
239.303 253.357 li
239.303 267.411 li
225.25 267.411 li
225.25 253.357 li
cp
0 0 0 .25 cmyk
@
169.035 211.196 mo
183.088 211.196 li
183.088 225.25 li
169.035 225.25 li
169.035 211.196 li
cp
.855 .73 0 0 cmyk
f
169.035 211.196 mo
183.088 211.196 li
183.088 225.25 li
169.035 225.25 li
169.035 211.196 li
cp
0 0 0 .25 cmyk
@
197.142 211.196 mo
211.196 211.196 li
211.196 225.25 li
197.142 225.25 li
197.142 211.196 li
cp
0 0 0 0 cmyk
f
197.142 211.196 mo
211.196 211.196 li
211.196 225.25 li
197.142 225.25 li
197.142 211.196 li
cp
0 0 0 .25 cmyk
@
204.156 218.937 mo
204.714 218.937 205.316 218.679 205.539 218.215 cv
205.556 218.233 li
205.367 219.795 204.929 220.492 204.104 220.492 cv
203.486 220.492 203.125 220.114 203.083 219.504 cv
202.327 219.504 li
202.327 220.088 202.705 221.119 204.122 221.119 cv
206.2 221.119 206.312 218.362 206.312 217.717 cv
206.312 216.739 206.123 214.917 204.199 214.917 cv
202.928 214.917 202.258 215.888 202.258 216.987 cv
202.258 218.19 203.04 218.937 204.156 218.937 cv
cp
204.268 218.258 mo
203.761 218.258 203.04 218.112 203.04 216.954 cv
203.04 216.146 203.503 215.596 204.208 215.596 cv
205.075 215.596 205.427 216.198 205.427 216.884 cv
205.427 218.079 204.663 218.258 204.268 218.258 cv
cp
0 0 0 1 cmyk
f
216.538 215.241 mo
215.999 215.241 li
215.78 216.139 215.414 216.225 214.523 216.288 cv
214.523 216.833 li
215.803 216.833 li
215.803 220.729 li
216.538 220.729 li
216.538 215.241 li
cp
f
221.394 218.059 mo
221.394 219.434 221.035 220.261 220.247 220.261 cv
219.458 220.261 219.098 219.434 219.098 218.059 cv
219.098 216.685 219.458 215.858 220.247 215.858 cv
221.035 215.858 221.394 216.685 221.394 218.059 cv
cp
222.127 218.059 mo
222.127 216.919 221.823 215.241 220.247 215.241 cv
218.668 215.241 218.365 216.919 218.365 218.059 cv
218.365 219.2 218.668 220.877 220.247 220.877 cv
221.823 220.877 222.127 219.2 222.127 218.059 cv
cp
f
267.411 211.196 mo
281.464 211.196 li
281.464 225.25 li
267.411 225.25 li
267.411 211.196 li
cp
.855 .73 0 0 cmyk
f
267.411 211.196 mo
281.464 211.196 li
281.464 225.25 li
267.411 225.25 li
267.411 211.196 li
cp
0 0 0 .25 cmyk
@
253.357 197.142 mo
267.411 197.142 li
267.411 211.196 li
253.357 211.196 li
253.357 197.142 li
cp
.855 .73 0 0 cmyk
f
253.357 197.142 mo
267.411 197.142 li
267.411 211.196 li
253.357 211.196 li
253.357 197.142 li
cp
0 0 0 .25 cmyk
@
267.411 197.142 mo
281.464 197.142 li
281.464 211.196 li
267.411 211.196 li
267.411 197.142 li
cp
.855 .73 0 0 cmyk
f
267.411 197.142 mo
281.464 197.142 li
281.464 211.196 li
267.411 211.196 li
267.411 197.142 li
cp
0 0 0 .25 cmyk
@
281.464 197.142 mo
295.518 197.142 li
295.518 211.196 li
281.464 211.196 li
281.464 197.142 li
cp
.855 .73 0 0 cmyk
f
281.464 197.142 mo
295.518 197.142 li
295.518 211.196 li
281.464 211.196 li
281.464 197.142 li
cp
0 0 0 .25 cmyk
@
295.518 197.142 mo
309.571 197.142 li
309.571 211.196 li
295.518 211.196 li
295.518 197.142 li
cp
.855 .73 0 0 cmyk
f
295.518 197.142 mo
309.571 197.142 li
309.571 211.196 li
295.518 211.196 li
295.518 197.142 li
cp
0 0 0 .25 cmyk
@
309.571 197.142 mo
323.625 197.142 li
323.625 211.196 li
309.571 211.196 li
309.571 197.142 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 197.142 mo
323.625 197.142 li
323.625 211.196 li
309.571 211.196 li
309.571 197.142 li
cp
0 0 0 .25 cmyk
@
grestore
309.571 211.196 mo
323.625 211.196 li
323.625 225.25 li
309.571 225.25 li
309.571 211.196 li
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 211.196 mo
323.625 211.196 li
323.625 225.25 li
309.571 225.25 li
309.571 211.196 li
cp
0 0 0 .25 cmyk
@
grestore
295.518 211.196 mo
309.571 211.196 li
309.571 225.25 li
295.518 225.25 li
295.518 211.196 li
cp
0 0 0 0 cmyk
f
295.518 211.196 mo
309.571 211.196 li
309.571 225.25 li
295.518 225.25 li
295.518 211.196 li
cp
0 0 0 .25 cmyk
@
309.571 225.25 mo
323.625 225.25 li
323.625 239.303 li
309.571 239.303 li
309.571 225.25 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 225.25 mo
323.625 225.25 li
323.625 239.303 li
309.571 239.303 li
309.571 225.25 li
cp
0 0 0 .25 cmyk
@
grestore
295.518 225.25 mo
309.571 225.25 li
309.571 239.303 li
295.518 239.303 li
295.518 225.25 li
cp
f
295.518 225.25 mo
309.571 225.25 li
309.571 239.303 li
295.518 239.303 li
295.518 225.25 li
cp
0 0 0 .25 cmyk
@
281.464 225.25 mo
295.518 225.25 li
295.518 239.303 li
281.464 239.303 li
281.464 225.25 li
cp
0 0 0 0 cmyk
f
281.464 225.25 mo
295.518 225.25 li
295.518 239.303 li
281.464 239.303 li
281.464 225.25 li
cp
0 0 0 .25 cmyk
@
288.143 232.226 mo
288.254 232.226 288.375 232.217 288.487 232.217 cv
289.002 232.217 289.895 232.312 289.895 233.326 cv
289.895 234.022 289.354 234.494 288.582 234.494 cv
287.457 234.494 287.319 233.729 287.292 233.163 cv
286.511 233.163 li
286.563 233.858 286.744 234.553 287.414 234.906 cv
287.706 235.061 288.083 235.172 288.53 235.172 cv
290.067 235.172 290.703 234.219 290.703 233.231 cv
290.703 232.424 290.282 232.012 289.698 231.823 cv
289.698 231.805 li
290.024 231.703 290.47 231.333 290.47 230.56 cv
290.47 229.641 289.775 228.971 288.607 228.971 cv
287.018 228.971 286.658 230.062 286.658 230.947 cv
287.396 230.947 li
287.43 230.526 287.499 229.65 288.573 229.65 cv
289.474 229.65 289.689 230.243 289.689 230.603 cv
289.689 231.359 289.123 231.59 288.539 231.59 cv
288.41 231.59 288.272 231.583 288.143 231.574 cv
288.143 232.226 li
cp
0 0 0 1 cmyk
f
253.357 239.303 mo
267.411 239.303 li
267.411 253.357 li
253.357 253.357 li
253.357 239.303 li
cp
0 0 0 0 cmyk
f
253.357 239.303 mo
267.411 239.303 li
267.411 253.357 li
253.357 253.357 li
253.357 239.303 li
cp
0 0 0 .25 cmyk
@
262.432 244.631 mo
262.355 243.403 261.367 243.025 260.671 243.025 cv
258.868 243.025 258.438 244.932 258.438 246.254 cv
258.438 247.044 258.542 247.783 258.902 248.35 cv
259.332 249.02 259.993 249.225 260.457 249.225 cv
261.307 249.225 261.667 248.994 261.985 248.641 cv
262.398 248.196 262.561 247.749 262.561 247.13 cv
262.561 245.688 261.41 245.215 260.671 245.215 cv
259.847 245.215 259.426 245.627 259.237 245.954 cv
259.22 245.936 li
259.22 245.301 259.469 243.704 260.654 243.704 cv
261.307 243.704 261.599 244.098 261.694 244.631 cv
262.432 244.631 li
cp
259.323 247.208 mo
259.323 246.495 259.727 245.893 260.56 245.893 cv
261.496 245.893 261.779 246.632 261.779 247.165 cv
261.779 247.981 261.316 248.547 260.594 248.547 cv
259.709 248.547 259.323 247.852 259.323 247.208 cv
cp
0 0 0 1 cmyk
f
253.357 225.25 mo
267.411 225.25 li
267.411 239.303 li
253.357 239.303 li
253.357 225.25 li
cp
0 0 0 0 cmyk
f
253.357 225.25 mo
267.411 225.25 li
267.411 239.303 li
253.357 239.303 li
253.357 225.25 li
cp
0 0 0 .25 cmyk
@
259.632 229.838 mo
262.192 229.838 li
262.192 229.1 li
259.065 229.1 li
258.61 232.338 li
259.263 232.373 li
259.546 232.002 259.941 231.797 260.379 231.797 cv
261.126 231.797 261.719 232.269 261.719 233.137 cv
261.719 233.893 261.23 234.52 260.448 234.52 cv
259.77 234.52 259.246 234.21 259.168 233.506 cv
258.387 233.506 li
258.533 234.854 259.546 235.172 260.336 235.172 cv
262.226 235.172 262.527 233.721 262.527 233.051 cv
262.527 231.805 261.522 231.119 260.542 231.119 cv
260.001 231.119 259.632 231.299 259.375 231.497 cv
259.632 229.838 li
cp
0 0 0 1 cmyk
f
267.411 225.25 mo
281.464 225.25 li
281.464 239.303 li
267.411 239.303 li
267.411 225.25 li
cp
0 0 0 0 cmyk
f
267.411 225.25 mo
281.464 225.25 li
281.464 239.303 li
267.411 239.303 li
267.411 225.25 li
cp
0 0 0 .25 cmyk
@
276.658 233.541 mo
276.658 232.887 li
275.773 232.887 li
275.773 228.971 li
275.146 228.971 li
272.38 232.801 li
272.38 233.541 li
275.017 233.541 li
275.017 235.008 li
275.773 235.008 li
275.773 233.541 li
276.658 233.541 li
cp
275 230.148 mo
275.017 230.148 li
275.017 232.887 li
273.076 232.887 li
275 230.148 li
cp
0 0 0 1 cmyk
f
267.411 239.303 mo
281.464 239.303 li
281.464 253.357 li
267.411 253.357 li
267.411 239.303 li
cp
0 0 0 0 cmyk
f
267.411 239.303 mo
281.464 239.303 li
281.464 253.357 li
267.411 253.357 li
267.411 239.303 li
cp
0 0 0 .25 cmyk
@
275.816 246.125 mo
275.816 247.637 275.42 248.547 274.553 248.547 cv
273.686 248.547 273.291 247.637 273.291 246.125 cv
273.291 244.614 273.686 243.704 274.553 243.704 cv
275.42 243.704 275.816 244.614 275.816 246.125 cv
cp
276.624 246.125 mo
276.624 244.872 276.288 243.025 274.553 243.025 cv
272.819 243.025 272.484 244.872 272.484 246.125 cv
272.484 247.379 272.819 249.225 274.553 249.225 cv
276.288 249.225 276.624 247.379 276.624 246.125 cv
cp
0 0 0 1 cmyk
f
281.464 239.303 mo
295.518 239.303 li
295.518 253.357 li
281.464 253.357 li
281.464 239.303 li
cp
0 0 0 0 cmyk
f
281.464 239.303 mo
295.518 239.303 li
295.518 253.357 li
281.464 253.357 li
281.464 239.303 li
cp
0 0 0 .25 cmyk
@
289.302 243.025 mo
288.71 243.025 li
288.469 244.012 288.066 244.107 287.086 244.176 cv
287.086 244.777 li
288.496 244.777 li
288.496 249.063 li
289.302 249.063 li
289.302 243.025 li
cp
0 0 0 1 cmyk
f
295.518 239.303 mo
309.571 239.303 li
309.571 253.357 li
295.518 253.357 li
295.518 239.303 li
cp
0 0 0 0 cmyk
f
295.518 239.303 mo
309.571 239.303 li
309.571 253.357 li
295.518 253.357 li
295.518 239.303 li
cp
0 0 0 .25 cmyk
@
301.407 245.19 mo
301.432 244.768 301.484 243.704 302.626 243.704 cv
303.511 243.704 303.82 244.313 303.82 244.794 cv
303.82 245.584 303.356 245.833 302.712 246.203 cv
301.914 246.667 li
301.106 247.139 300.54 247.809 300.497 249.063 cv
304.627 249.063 li
304.627 248.35 li
301.346 248.35 li
301.381 248.118 301.561 247.645 302.386 247.19 cv
303.013 246.846 li
303.915 246.366 304.627 245.911 304.627 244.829 cv
304.627 243.704 303.786 243.025 302.738 243.025 cv
302.085 243.025 300.651 243.223 300.651 245.19 cv
301.407 245.19 li
cp
0 0 0 1 cmyk
f
309.571 239.303 mo
323.625 239.303 li
323.625 253.357 li
309.571 253.357 li
309.571 239.303 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 239.303 mo
323.625 239.303 li
323.625 253.357 li
309.571 253.357 li
309.571 239.303 li
cp
0 0 0 .25 cmyk
@
grestore
253.357 253.357 mo
267.411 253.357 li
267.411 267.411 li
253.357 267.411 li
253.357 253.357 li
cp
0 0 0 0 cmyk
f
253.357 253.357 mo
267.411 253.357 li
267.411 267.411 li
253.357 267.411 li
253.357 253.357 li
cp
0 0 0 .25 cmyk
@
258.43 257.946 mo
261.753 257.946 li
260.594 259.294 259.495 261.458 259.289 263.116 cv
260.122 263.116 li
260.56 260.419 262.002 258.496 262.604 257.869 cv
262.604 257.208 li
258.43 257.208 li
258.43 257.946 li
cp
0 0 0 1 cmyk
f
267.411 253.357 mo
281.464 253.357 li
281.464 267.411 li
267.411 267.411 li
267.411 253.357 li
cp
0 0 0 0 cmyk
f
267.411 253.357 mo
281.464 253.357 li
281.464 267.411 li
267.411 267.411 li
267.411 253.357 li
cp
0 0 0 .25 cmyk
@
276.391 258.633 mo
276.391 257.928 275.868 257.079 274.528 257.079 cv
273.084 257.079 272.698 258.11 272.698 258.737 cv
272.698 259.303 272.999 259.715 273.514 259.913 cv
272.878 260.17 272.492 260.643 272.492 261.381 cv
272.492 261.673 272.492 262.327 273.111 262.816 cv
273.591 263.194 274.227 263.28 274.562 263.28 cv
275.988 263.28 276.606 262.343 276.606 261.374 cv
276.606 260.917 276.434 260.248 275.619 259.905 cv
275.884 259.766 276.391 259.5 276.391 258.633 cv
cp
274.544 260.282 mo
275.232 260.282 275.798 260.643 275.798 261.458 cv
275.798 262.403 275.137 262.601 274.587 262.601 cv
273.54 262.601 273.299 261.879 273.299 261.399 cv
273.299 260.84 273.695 260.282 274.544 260.282 cv
cp
274.536 259.629 mo
273.987 259.629 273.48 259.278 273.48 258.702 cv
273.48 258.315 273.677 257.757 274.485 257.757 cv
275.37 257.757 275.61 258.29 275.61 258.659 cv
275.61 259.208 275.189 259.629 274.536 259.629 cv
cp
0 0 0 1 cmyk
f
281.464 253.357 mo
295.518 253.357 li
295.518 267.411 li
281.464 267.411 li
281.464 253.357 li
cp
.855 .73 0 0 cmyk
f
281.464 253.357 mo
295.518 253.357 li
295.518 267.411 li
281.464 267.411 li
281.464 253.357 li
cp
0 0 0 .25 cmyk
@
295.518 253.357 mo
309.571 253.357 li
309.571 267.411 li
295.518 267.411 li
295.518 253.357 li
cp
.855 .73 0 0 cmyk
f
295.518 253.357 mo
309.571 253.357 li
309.571 267.411 li
295.518 267.411 li
295.518 253.357 li
cp
0 0 0 .25 cmyk
@
309.571 253.357 mo
323.625 253.357 li
323.625 267.411 li
309.571 267.411 li
309.571 253.357 li
cp
.855 .73 0 0 cmyk
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
309.571 253.357 mo
323.625 253.357 li
323.625 267.411 li
309.571 267.411 li
309.571 253.357 li
cp
0 0 0 .25 cmyk
@
grestore
253.357 211.196 mo
267.411 211.196 li
267.411 225.25 li
253.357 225.25 li
253.357 211.196 li
cp
f
253.357 211.196 mo
267.411 211.196 li
267.411 225.25 li
253.357 225.25 li
253.357 211.196 li
cp
0 0 0 .25 cmyk
@
281.464 211.196 mo
295.518 211.196 li
295.518 225.25 li
281.464 225.25 li
281.464 211.196 li
cp
0 0 0 0 cmyk
f
281.464 211.196 mo
295.518 211.196 li
295.518 225.25 li
281.464 225.25 li
281.464 211.196 li
cp
0 0 0 .25 cmyk
@
288.478 218.937 mo
289.037 218.937 289.637 218.679 289.861 218.215 cv
289.878 218.233 li
289.689 219.795 289.251 220.492 288.426 220.492 cv
287.808 220.492 287.448 220.114 287.405 219.504 cv
286.649 219.504 li
286.649 220.088 287.027 221.119 288.444 221.119 cv
290.522 221.119 290.633 218.362 290.633 217.717 cv
290.633 216.739 290.445 214.917 288.521 214.917 cv
287.25 214.917 286.581 215.888 286.581 216.987 cv
286.581 218.19 287.362 218.937 288.478 218.937 cv
cp
288.589 218.258 mo
288.083 218.258 287.362 218.112 287.362 216.954 cv
287.362 216.146 287.826 215.596 288.53 215.596 cv
289.397 215.596 289.75 216.198 289.75 216.884 cv
289.75 218.079 288.985 218.258 288.589 218.258 cv
cp
0 0 0 1 cmyk
f
300.991 215.206 mo
300.452 215.206 li
300.233 216.103 299.867 216.189 298.976 216.25 cv
298.976 216.797 li
300.256 216.797 li
300.256 220.694 li
300.991 220.694 li
300.991 215.206 li
cp
f
305.847 218.024 mo
305.847 219.397 305.488 220.225 304.7 220.225 cv
303.911 220.225 303.551 219.397 303.551 218.024 cv
303.551 216.649 303.911 215.822 304.7 215.822 cv
305.488 215.822 305.847 216.649 305.847 218.024 cv
cp
306.581 218.024 mo
306.581 216.883 306.277 215.206 304.7 215.206 cv
303.123 215.206 302.818 216.883 302.818 218.024 cv
302.818 219.164 303.123 220.842 304.7 220.842 cv
306.277 220.842 306.581 219.164 306.581 218.024 cv
cp
f
33.3608 83.5898 mo
33.3608 83.7979 li
32.8228 83.5273 32.3735 83.2109 32.0137 82.8481 cv
31.5005 82.332 31.1045 81.7236 30.8267 81.0229 cv
30.5488 80.3223 30.4097 79.5947 30.4097 78.8403 cv
30.4097 77.7378 30.6826 76.7319 31.2275 75.8232 cv
31.7729 74.9141 32.4844 74.2642 33.3608 73.8726 cv
33.3608 74.1021 li
32.9219 74.3438 32.561 74.6738 32.2788 75.0933 cv
31.9961 75.5122 31.7856 76.043 31.646 76.686 cv
31.5068 77.3286 31.437 78 31.437 78.6997 cv
31.437 79.4595 31.4961 80.1504 31.6138 80.772 cv
31.707 81.2622 31.8193 81.6553 31.9517 81.9517 cv
32.084 82.2485 32.2617 82.5332 32.4849 82.8071 cv
32.708 83.0806 33 83.3413 33.3608 83.5898 cv
cp
f
36.7056 80.7583 mo
36.2041 81.1479 35.8892 81.373 35.7612 81.4336 cv
35.5688 81.5229 35.3647 81.5679 35.1475 81.5679 cv
34.8096 81.5679 34.5308 81.4521 34.312 81.2207 cv
34.0933 80.9888 33.9839 80.6846 33.9839 80.3071 cv
33.9839 80.0684 34.0376 79.8618 34.144 79.687 cv
34.29 79.4448 34.5435 79.2168 34.9048 79.0034 cv
35.2656 78.7896 35.8662 78.5293 36.7056 78.2231 cv
36.7056 78.0313 li
36.7056 77.5449 36.6284 77.2109 36.4741 77.0298 cv
36.3198 76.8491 36.0957 76.7583 35.8008 76.7583 cv
35.5776 76.7583 35.3999 76.8188 35.2686 76.9399 cv
35.1338 77.061 35.0664 77.1997 35.0664 77.3564 cv
35.0771 77.6665 li
35.0771 77.8301 35.0352 77.9565 34.9507 78.0459 cv
34.8667 78.1348 34.7568 78.1792 34.6206 78.1792 cv
34.4883 78.1792 34.3799 78.1328 34.2959 78.0405 cv
34.2119 77.9478 34.1699 77.8208 34.1699 77.6606 cv
34.1699 77.354 34.3267 77.0723 34.6401 76.8154 cv
34.9541 76.5586 35.394 76.4302 35.9609 76.4302 cv
36.3955 76.4302 36.752 76.5034 37.0298 76.6494 cv
37.2402 76.7598 37.395 76.9326 37.4951 77.1675 cv
37.5591 77.3208 37.5913 77.6338 37.5913 78.1074 cv
37.5913 79.7686 li
37.5913 80.2349 37.6001 80.521 37.6182 80.626 cv
37.6357 80.731 37.6655 80.8013 37.7065 80.8369 cv
37.7476 80.8726 37.7949 80.8901 37.8486 80.8901 cv
37.9058 80.8901 37.9556 80.8774 37.9985 80.853 cv
38.0737 80.8066 38.2183 80.6768 38.4326 80.4639 cv
38.4326 80.7622 li
38.0322 81.2993 37.6499 81.5679 37.2852 81.5679 cv
37.1099 81.5679 36.9702 81.5068 36.8667 81.3843 cv
36.7632 81.2622 36.7095 81.0532 36.7056 80.7583 cv
cp
36.7056 80.4116 mo
36.7056 78.5508 li
36.1655 78.7642 35.8164 78.915 35.6587 79.0039 cv
35.376 79.1606 35.1738 79.3242 35.0522 79.4946 cv
34.9302 79.6655 34.8696 79.8521 34.8696 80.0542 cv
34.8696 80.3101 34.9463 80.5225 35.1006 80.6914 cv
35.2544 80.8604 35.4316 80.9448 35.6318 80.9448 cv
35.9038 80.9448 36.2622 80.7671 36.7056 80.4116 cv
cp
f
38.6953 74.1021 mo
38.6953 73.8726 li
39.2368 74.1392 39.688 74.4541 40.0479 74.8169 cv
40.5576 75.3364 40.9517 75.9458 41.2295 76.645 cv
41.5073 77.3438 41.6465 78.0723 41.6465 78.8296 cv
41.6465 79.9326 41.3745 80.9385 40.8311 81.8472 cv
40.2876 82.7563 39.5757 83.4063 38.6953 83.7979 cv
38.6953 83.5898 li
39.1348 83.3452 39.4961 83.0137 39.7803 82.5967 cv
40.0645 82.1792 40.2749 81.6484 40.4126 81.0034 cv
40.5503 80.3589 40.6191 79.687 40.6191 78.9873 cv
40.6191 78.231 40.5601 77.54 40.4424 76.915 cv
40.353 76.4248 40.2412 76.0327 40.1069 75.7378 cv
39.9731 75.4429 39.7954 75.1587 39.5737 74.8853 cv
39.3525 74.6118 39.0596 74.3506 38.6953 74.1021 cv
cp
f
117.68 83.5898 mo
117.68 83.7979 li
117.142 83.5273 116.693 83.2109 116.333 82.8481 cv
115.819 82.332 115.424 81.7236 115.146 81.0229 cv
114.868 80.3223 114.729 79.5947 114.729 78.8403 cv
114.729 77.7378 115.001 76.7319 115.546 75.8232 cv
116.092 74.9141 116.803 74.2642 117.68 73.8726 cv
117.68 74.1021 li
117.241 74.3438 116.88 74.6738 116.598 75.0933 cv
116.315 75.5122 116.104 76.043 115.965 76.686 cv
115.826 77.3286 115.756 78 115.756 78.6997 cv
115.756 79.4595 115.815 80.1504 115.933 80.772 cv
116.026 81.2622 116.138 81.6553 116.271 81.9517 cv
116.403 82.2485 116.581 82.5332 116.804 82.8071 cv
117.027 83.0806 117.319 83.3413 117.68 83.5898 cv
cp
f
119.604 77.4243 mo
120.076 76.7617 120.586 76.4302 121.133 76.4302 cv
121.634 76.4302 122.071 76.645 122.444 77.0732 cv
122.817 77.502 123.003 78.0879 123.003 78.8315 cv
123.003 79.6997 122.715 80.3984 122.139 80.9287 cv
121.645 81.3838 121.093 81.6113 120.484 81.6113 cv
120.2 81.6113 119.911 81.5596 119.618 81.4561 cv
119.324 81.3521 119.024 81.1968 118.718 80.9893 cv
118.718 75.9385 li
118.718 75.3843 118.705 75.0435 118.678 74.9155 cv
118.651 74.7876 118.609 74.7007 118.552 74.6548 cv
118.495 74.6084 118.424 74.5854 118.338 74.5854 cv
118.238 74.5854 118.113 74.6138 117.962 74.6704 cv
117.888 74.4736 li
119.362 73.8726 li
119.604 73.8726 li
119.604 77.4243 li
cp
119.604 77.7646 mo
119.604 80.6807 li
119.785 80.8579 119.973 80.9917 120.167 81.0825 cv
120.361 81.1729 120.559 81.2183 120.762 81.2183 cv
121.085 81.2183 121.387 81.0405 121.666 80.686 cv
121.945 80.3311 122.085 79.8149 122.085 79.1377 cv
122.085 78.5132 121.945 78.0337 121.666 77.6982 cv
121.387 77.3633 121.069 77.1958 120.714 77.1958 cv
120.525 77.1958 120.336 77.2437 120.148 77.3394 cv
120.006 77.4102 119.824 77.5522 119.604 77.7646 cv
cp
f
123.626 74.1021 mo
123.626 73.8726 li
124.168 74.1392 124.619 74.4541 124.979 74.8169 cv
125.489 75.3364 125.882 75.9458 126.161 76.645 cv
126.438 77.3438 126.578 78.0723 126.578 78.8296 cv
126.578 79.9326 126.306 80.9385 125.762 81.8472 cv
125.219 82.7563 124.507 83.4063 123.626 83.7979 cv
123.626 83.5898 li
124.065 83.3452 124.427 83.0137 124.711 82.5967 cv
124.996 82.1792 125.206 81.6484 125.344 81.0034 cv
125.481 80.3589 125.55 79.687 125.55 78.9873 cv
125.55 78.231 125.491 77.54 125.373 76.915 cv
125.284 76.4248 125.172 76.0327 125.038 75.7378 cv
124.904 75.4429 124.727 75.1587 124.505 74.8853 cv
124.284 74.6118 123.991 74.3506 123.626 74.1021 cv
cp
f
201.999 83.5898 mo
201.999 83.7979 li
201.46 83.5273 201.011 83.2109 200.652 82.8481 cv
200.138 82.332 199.743 81.7236 199.464 81.0229 cv
199.187 80.3223 199.047 79.5947 199.047 78.8403 cv
199.047 77.7378 199.321 76.7319 199.866 75.8232 cv
200.411 74.9141 201.123 74.2642 201.999 73.8726 cv
201.999 74.1021 li
201.559 74.3438 201.199 74.6738 200.917 75.0933 cv
200.634 75.5122 200.423 76.043 200.284 76.686 cv
200.145 77.3286 200.075 78 200.075 78.6997 cv
200.075 79.4595 200.134 80.1504 200.251 80.772 cv
200.345 81.2622 200.458 81.6553 200.589 81.9517 cv
200.722 82.2485 200.9 82.5332 201.123 82.8071 cv
201.346 83.0806 201.638 83.3413 201.999 83.5898 cv
cp
f
206.743 79.6094 mo
206.611 80.2554 206.353 80.7505 205.969 81.0952 cv
205.584 81.4395 205.16 81.6113 204.693 81.6113 cv
204.138 81.6113 203.654 81.3784 203.241 80.9126 cv
202.829 80.4468 202.622 79.8169 202.622 79.0239 cv
202.622 78.2554 202.85 77.6309 203.307 77.1509 cv
203.764 76.6704 204.313 76.4302 204.953 76.4302 cv
205.433 76.4302 205.828 76.5576 206.137 76.812 cv
206.446 77.0669 206.601 77.3311 206.601 77.605 cv
206.601 77.7407 206.557 77.8501 206.47 77.9336 cv
206.383 78.0171 206.261 78.0591 206.105 78.0591 cv
205.895 78.0591 205.739 77.9907 205.635 77.855 cv
205.572 77.7798 205.53 77.6362 205.51 77.4253 cv
205.491 77.2134 205.418 77.0522 205.293 76.9414 cv
205.169 76.834 204.997 76.7803 204.776 76.7803 cv
204.42 76.7803 204.134 76.9121 203.917 77.1758 cv
203.629 77.5254 203.486 77.9873 203.486 78.561 cv
203.486 79.146 203.628 79.6621 203.916 80.1099 cv
204.203 80.5571 204.589 80.7808 205.078 80.7808 cv
205.427 80.7808 205.741 80.6636 206.018 80.4297 cv
206.214 80.2661 206.405 79.9678 206.59 79.5347 cv
206.743 79.6094 li
cp
f
207.333 74.1021 mo
207.333 73.8726 li
207.875 74.1392 208.326 74.4541 208.686 74.8169 cv
209.196 75.3364 209.589 75.9458 209.868 76.645 cv
210.145 77.3438 210.285 78.0723 210.285 78.8296 cv
210.285 79.9326 210.012 80.9385 209.469 81.8472 cv
208.925 82.7563 208.213 83.4063 207.333 83.7979 cv
207.333 83.5898 li
207.773 83.3452 208.134 83.0137 208.418 82.5967 cv
208.703 82.1792 208.913 81.6484 209.05 81.0034 cv
209.188 80.3589 209.257 79.687 209.257 78.9873 cv
209.257 78.231 209.198 77.54 209.081 76.915 cv
208.991 76.4248 208.879 76.0327 208.745 75.7378 cv
208.611 75.4429 208.433 75.1587 208.211 74.8853 cv
207.991 74.6118 207.698 74.3506 207.333 74.1021 cv
cp
f
286.318 83.5898 mo
286.318 83.7979 li
285.78 83.5273 285.331 83.2109 284.97 82.8481 cv
284.458 82.332 284.062 81.7236 283.784 81.0229 cv
283.505 80.3223 283.367 79.5947 283.367 78.8403 cv
283.367 77.7378 283.639 76.7319 284.184 75.8232 cv
284.73 74.9141 285.441 74.2642 286.318 73.8726 cv
286.318 74.1021 li
285.878 74.3438 285.518 74.6738 285.236 75.0933 cv
284.954 75.5122 284.743 76.043 284.603 76.686 cv
284.463 77.3286 284.394 78 284.394 78.6997 cv
284.394 79.4595 284.453 80.1504 284.571 80.772 cv
284.664 81.2622 284.776 81.6553 284.909 81.9517 cv
285.041 82.2485 285.218 82.5332 285.442 82.8071 cv
285.665 83.0806 285.958 83.3413 286.318 83.5898 cv
cp
f
290.351 80.9038 mo
290.113 81.1577 289.879 81.3394 289.652 81.4482 cv
289.424 81.5571 289.179 81.6113 288.916 81.6113 cv
288.381 81.6113 287.916 81.3887 287.517 80.9424 cv
287.119 80.4966 286.919 79.9233 286.919 79.2236 cv
286.919 78.5234 287.14 77.8828 287.581 77.3018 cv
288.022 76.7212 288.589 76.4302 289.284 76.4302 cv
289.714 76.4302 290.07 76.5684 290.351 76.8438 cv
290.351 75.9385 li
290.351 75.3833 290.337 75.042 290.311 74.9146 cv
290.285 74.7876 290.243 74.7007 290.185 74.6548 cv
290.128 74.6084 290.056 74.5854 289.971 74.5854 cv
289.878 74.5854 289.754 74.6138 289.601 74.6704 cv
289.532 74.4736 li
290.996 73.8726 li
291.237 73.8726 li
291.237 79.5239 li
291.237 80.0933 291.25 80.4414 291.277 80.5669 cv
291.303 80.6924 291.346 80.7798 291.406 80.8296 cv
291.464 80.8794 291.534 80.9043 291.612 80.9043 cv
291.708 80.9043 291.836 80.874 291.998 80.8135 cv
292.056 81.0103 li
290.598 81.6113 li
290.351 81.6113 li
290.351 80.9038 li
cp
290.351 80.5308 mo
290.351 78.0269 li
290.33 77.7817 290.266 77.5596 290.159 77.3604 cv
290.052 77.1616 289.911 77.0112 289.734 76.9102 cv
289.557 76.8091 289.385 76.7583 289.217 76.7583 cv
288.904 76.7583 288.625 76.8989 288.378 77.1792 cv
288.054 77.5488 287.892 78.0889 287.892 78.7993 cv
287.892 79.5171 288.048 80.0664 288.363 80.4482 cv
288.676 80.8306 289.026 81.0215 289.411 81.0215 cv
289.735 81.0215 290.048 80.8579 290.351 80.5308 cv
cp
f
292.264 74.1021 mo
292.264 73.8726 li
292.806 74.1392 293.256 74.4541 293.617 74.8169 cv
294.126 75.3364 294.52 75.9458 294.798 76.645 cv
295.077 77.3438 295.215 78.0723 295.215 78.8296 cv
295.215 79.9326 294.944 80.9385 294.4 81.8472 cv
293.857 82.7563 293.145 83.4063 292.264 83.7979 cv
292.264 83.5898 li
292.704 83.3452 293.065 83.0137 293.349 82.5967 cv
293.633 82.1792 293.844 81.6484 293.982 81.0034 cv
294.12 80.3589 294.188 79.687 294.188 78.9873 cv
294.188 78.231 294.129 77.54 294.011 76.915 cv
293.921 76.4248 293.81 76.0327 293.676 75.7378 cv
293.542 75.4429 293.365 75.1587 293.143 74.8853 cv
292.921 74.6118 292.628 74.3506 292.264 74.1021 cv
cp
f
33.252 181.78 mo
33.252 181.988 li
32.7134 181.717 32.2642 181.401 31.9043 181.038 cv
31.3911 180.522 30.9956 179.914 30.7173 179.213 cv
30.4395 178.512 30.3003 177.785 30.3003 177.03 cv
30.3003 175.928 30.5732 174.922 31.1182 174.013 cv
31.6636 173.104 32.375 172.454 33.252 172.063 cv
33.252 172.292 li
32.8125 172.534 32.4517 172.864 32.1694 173.284 cv
31.8872 173.702 31.6763 174.233 31.5366 174.875 cv
31.3975 175.518 31.3281 176.19 31.3281 176.889 cv
31.3281 177.649 31.3867 178.34 31.5049 178.961 cv
31.5977 179.452 31.71 179.845 31.8423 180.141 cv
31.9746 180.438 32.1523 180.723 32.3755 180.997 cv
32.5986 181.27 32.8911 181.532 33.252 181.78 cv
cp
f
34.6509 176.61 mo
34.647 177.333 34.8232 177.899 35.1792 178.311 cv
35.5352 178.721 35.9531 178.927 36.4336 178.927 cv
36.7539 178.927 37.0327 178.84 37.269 178.666 cv
37.5059 178.491 37.7041 178.188 37.8643 177.757 cv
38.0283 177.864 li
37.9536 178.356 37.7368 178.803 37.3779 179.202 cv
37.019 179.602 36.5693 179.801 36.0293 179.801 cv
35.4429 179.801 34.9409 179.573 34.5229 179.117 cv
34.1055 178.66 33.8965 178.045 33.8965 177.275 cv
33.8965 176.44 34.1108 175.789 34.5391 175.321 cv
34.9673 174.854 35.5049 174.621 36.1519 174.621 cv
36.6992 174.621 37.1484 174.801 37.5005 175.162 cv
37.8525 175.522 38.0283 176.005 38.0283 176.61 cv
34.6509 176.61 li
cp
34.6509 176.303 mo
36.9136 176.303 li
36.8955 175.991 36.8584 175.77 36.8013 175.643 cv
36.7124 175.444 36.5801 175.288 36.4038 175.173 cv
36.2275 175.059 36.0435 175.002 35.8516 175.002 cv
35.5562 175.002 35.292 175.118 35.0591 175.346 cv
34.8262 175.576 34.6899 175.895 34.6509 176.303 cv
cp
f
38.5859 172.292 mo
38.5859 172.063 li
39.1274 172.33 39.5786 172.644 39.9385 173.006 cv
40.4482 173.526 40.8423 174.135 41.1201 174.834 cv
41.3979 175.534 41.5371 176.262 41.5371 177.02 cv
41.5371 178.123 41.2651 179.128 40.7217 180.038 cv
40.1782 180.946 39.4663 181.596 38.5859 181.988 cv
38.5859 181.78 li
39.0254 181.535 39.3867 181.204 39.6709 180.787 cv
39.9551 180.37 40.166 179.838 40.3032 179.194 cv
40.4409 178.549 40.5098 177.877 40.5098 177.177 cv
40.5098 176.42 40.4507 175.73 40.333 175.105 cv
40.2437 174.615 40.1318 174.222 39.9976 173.928 cv
39.8638 173.633 39.686 173.348 39.4644 173.075 cv
39.2432 172.801 38.9502 172.541 38.5859 172.292 cv
cp
f
117.571 181.78 mo
117.571 181.988 li
117.033 181.717 116.583 181.401 116.223 181.038 cv
115.71 180.522 115.314 179.914 115.036 179.213 cv
114.758 178.512 114.62 177.785 114.62 177.03 cv
114.62 175.928 114.892 174.922 115.438 174.013 cv
115.983 173.104 116.694 172.454 117.571 172.063 cv
117.571 172.292 li
117.131 172.534 116.771 172.864 116.488 173.284 cv
116.206 173.702 115.995 174.233 115.856 174.875 cv
115.716 175.518 115.647 176.19 115.647 176.889 cv
115.647 177.649 115.706 178.34 115.824 178.961 cv
115.917 179.452 116.029 179.845 116.161 180.141 cv
116.293 180.438 116.471 180.723 116.694 180.997 cv
116.918 181.27 117.21 181.532 117.571 181.78 cv
cp
f
120.063 175.145 mo
120.063 178.37 li
120.063 178.823 120.113 179.109 120.213 179.229 cv
120.345 179.385 120.522 179.462 120.744 179.462 cv
121.189 179.462 li
121.189 179.659 li
118.259 179.659 li
118.259 179.462 li
118.478 179.462 li
118.621 179.462 118.75 179.427 118.868 179.356 cv
118.985 179.286 119.066 179.19 119.111 179.07 cv
119.155 178.95 119.177 178.716 119.177 178.37 cv
119.177 175.145 li
118.227 175.145 li
118.227 174.762 li
119.177 174.762 li
119.177 174.444 li
119.177 173.958 119.256 173.547 119.413 173.211 cv
119.57 172.875 119.81 172.602 120.133 172.395 cv
120.456 172.188 120.819 172.084 121.222 172.084 cv
121.597 172.084 121.941 172.205 122.255 172.444 cv
122.462 172.603 122.566 172.782 122.566 172.979 cv
122.566 173.084 122.52 173.184 122.427 173.278 cv
122.334 173.372 122.234 173.418 122.127 173.418 cv
122.045 173.418 121.959 173.389 121.868 173.331 cv
121.777 173.273 121.666 173.147 121.534 172.956 cv
121.402 172.764 121.28 172.634 121.17 172.567 cv
121.06 172.5 120.937 172.467 120.801 172.467 cv
120.637 172.467 120.498 172.51 120.384 172.597 cv
120.27 172.684 120.188 172.819 120.138 173 cv
120.088 173.184 120.063 173.654 120.063 174.412 cv
120.063 174.762 li
121.32 174.762 li
121.32 175.145 li
120.063 175.145 li
cp
f
121.691 172.292 mo
121.691 172.063 li
122.233 172.33 122.684 172.644 123.044 173.006 cv
123.554 173.526 123.948 174.135 124.226 174.834 cv
124.504 175.534 124.643 176.262 124.643 177.02 cv
124.643 178.123 124.371 179.128 123.828 180.038 cv
123.284 180.946 122.572 181.596 121.691 181.988 cv
121.691 181.78 li
122.131 181.535 122.493 181.204 122.776 180.787 cv
123.061 180.37 123.271 179.838 123.409 179.194 cv
123.546 178.549 123.615 177.877 123.615 177.177 cv
123.615 176.42 123.556 175.73 123.438 175.105 cv
123.349 174.615 123.237 174.222 123.104 173.928 cv
122.97 173.633 122.792 173.348 122.57 173.075 cv
122.349 172.801 122.056 172.541 121.691 172.292 cv
cp
f
201.889 181.78 mo
201.889 181.988 li
201.351 181.717 200.902 181.401 200.542 181.038 cv
200.029 180.522 199.633 179.914 199.355 179.213 cv
199.078 178.512 198.938 177.785 198.938 177.03 cv
198.938 175.928 199.211 174.922 199.756 174.013 cv
200.301 173.104 201.013 172.454 201.889 172.063 cv
201.889 172.292 li
201.451 172.534 201.089 172.864 200.807 173.284 cv
200.525 173.702 200.314 174.233 200.174 174.875 cv
200.036 175.518 199.966 176.19 199.966 176.889 cv
199.966 177.649 200.025 178.34 200.143 178.961 cv
200.236 179.452 200.348 179.845 200.48 180.141 cv
200.613 180.438 200.791 180.723 201.013 180.997 cv
201.237 181.27 201.529 181.532 201.889 181.78 cv
cp
f
203.778 177.866 mo
203.479 177.719 203.25 177.516 203.091 177.255 cv
202.931 176.995 202.851 176.706 202.851 176.389 cv
202.851 175.907 203.034 175.491 203.397 175.143 cv
203.761 174.794 204.227 174.621 204.794 174.621 cv
205.26 174.621 205.663 174.733 206.003 174.959 cv
207.037 174.959 li
207.189 174.959 207.278 174.963 207.302 174.973 cv
207.328 174.981 207.345 174.997 207.356 175.018 cv
207.377 175.05 207.388 175.107 207.388 175.189 cv
207.388 175.282 207.378 175.346 207.361 175.381 cv
207.35 175.399 207.332 175.414 207.305 175.424 cv
207.278 175.435 207.188 175.44 207.036 175.44 cv
206.4 175.44 li
206.599 175.696 206.699 176.023 206.699 176.421 cv
206.699 176.876 206.525 177.266 206.177 177.589 cv
205.83 177.913 205.364 178.075 204.778 178.075 cv
204.537 178.075 204.29 178.039 204.039 177.967 cv
203.882 178.103 203.776 178.221 203.721 178.324 cv
203.667 178.425 203.638 178.512 203.638 178.583 cv
203.638 178.644 203.667 178.704 203.727 178.76 cv
203.786 178.817 203.9 178.858 204.071 178.883 cv
204.17 178.899 204.419 178.913 204.819 178.923 cv
205.551 178.942 206.027 178.969 206.244 179.003 cv
206.575 179.049 206.839 179.172 207.037 179.372 cv
207.234 179.571 207.333 179.817 207.333 180.109 cv
207.333 180.511 207.145 180.888 206.768 181.241 cv
206.213 181.76 205.49 182.02 204.597 182.02 cv
203.911 182.02 203.331 181.866 202.858 181.555 cv
202.591 181.377 202.458 181.192 202.458 181 cv
202.458 180.915 202.477 180.829 202.516 180.744 cv
202.577 180.612 202.702 180.428 202.89 180.194 cv
202.915 180.161 203.096 179.969 203.434 179.616 cv
203.25 179.505 203.119 179.406 203.042 179.319 cv
202.966 179.231 202.928 179.131 202.928 179.02 cv
202.928 178.895 202.978 178.749 203.08 178.58 cv
203.18 178.412 203.413 178.173 203.778 177.866 cv
cp
204.707 174.883 mo
204.444 174.883 204.224 174.987 204.046 175.196 cv
203.87 175.405 203.781 175.726 203.781 176.159 cv
203.781 176.719 203.901 177.153 204.142 177.461 cv
204.327 177.695 204.561 177.812 204.844 177.812 cv
205.114 177.812 205.335 177.711 205.509 177.509 cv
205.683 177.307 205.77 176.99 205.77 176.557 cv
205.77 175.994 205.648 175.553 205.403 175.234 cv
205.222 175 204.99 174.883 204.707 174.883 cv
cp
203.727 179.659 mo
203.561 179.84 203.435 180.009 203.35 180.166 cv
203.265 180.322 203.223 180.465 203.223 180.597 cv
203.223 180.768 203.326 180.917 203.532 181.045 cv
203.887 181.265 204.4 181.375 205.071 181.375 cv
205.709 181.375 206.181 181.262 206.484 181.037 cv
206.788 180.811 206.94 180.569 206.94 180.313 cv
206.94 180.128 206.849 179.997 206.667 179.918 cv
206.483 179.84 206.118 179.793 205.571 179.78 cv
204.771 179.758 204.157 179.719 203.727 179.659 cv
cp
f
207.835 172.292 mo
207.835 172.063 li
208.377 172.33 208.829 172.644 209.189 173.006 cv
209.699 173.526 210.092 174.135 210.37 174.834 cv
210.648 175.534 210.788 176.262 210.788 177.02 cv
210.788 178.123 210.515 179.128 209.972 180.038 cv
209.428 180.946 208.716 181.596 207.835 181.988 cv
207.835 181.78 li
208.275 181.535 208.637 181.204 208.921 180.787 cv
209.205 180.37 209.416 179.838 209.553 179.194 cv
209.691 178.549 209.759 177.877 209.759 177.177 cv
209.759 176.42 209.701 175.73 209.583 175.105 cv
209.494 174.615 209.382 174.222 209.248 173.928 cv
209.114 173.633 208.936 173.348 208.714 173.075 cv
208.493 172.801 208.201 172.541 207.835 172.292 cv
cp
f
286.208 181.78 mo
286.208 181.988 li
285.67 181.717 285.221 181.401 284.861 181.038 cv
284.348 180.522 283.953 179.914 283.674 179.213 cv
283.396 178.512 283.257 177.785 283.257 177.03 cv
283.257 175.928 283.53 174.922 284.076 174.013 cv
284.621 173.104 285.332 172.454 286.208 172.063 cv
286.208 172.292 li
285.769 172.534 285.409 172.864 285.126 173.284 cv
284.844 173.702 284.633 174.233 284.494 174.875 cv
284.354 175.518 284.285 176.19 284.285 176.889 cv
284.285 177.649 284.343 178.34 284.461 178.961 cv
284.554 179.452 284.667 179.845 284.799 180.141 cv
284.931 180.438 285.109 180.723 285.333 180.997 cv
285.556 181.27 285.848 181.532 286.208 181.78 cv
cp
f
288.231 172.063 mo
288.231 175.639 li
288.626 175.206 288.94 174.927 289.171 174.804 cv
289.403 174.682 289.634 174.621 289.866 174.621 cv
290.144 174.621 290.382 174.697 290.583 174.85 cv
290.782 175.003 290.929 175.245 291.026 175.572 cv
291.093 175.8 291.127 176.217 291.127 176.823 cv
291.127 178.555 li
291.127 178.864 291.152 179.074 291.202 179.187 cv
291.237 179.272 291.297 179.338 291.382 179.388 cv
291.467 179.438 291.623 179.462 291.849 179.462 cv
291.849 179.659 li
289.455 179.659 li
289.455 179.462 li
289.567 179.462 li
289.793 179.462 289.952 179.428 290.04 179.359 cv
290.128 179.29 290.191 179.188 290.226 179.054 cv
290.237 178.998 290.242 178.831 290.242 178.555 cv
290.242 176.822 li
290.242 176.288 290.214 175.936 290.159 175.768 cv
290.104 175.6 290.015 175.475 289.894 175.391 cv
289.773 175.307 289.626 175.265 289.456 175.265 cv
289.281 175.265 289.099 175.311 288.91 175.405 cv
288.721 175.497 288.495 175.684 288.231 175.965 cv
288.231 178.555 li
288.231 178.887 288.25 179.094 288.287 179.176 cv
288.324 179.257 288.393 179.326 288.494 179.38 cv
288.595 179.435 288.77 179.462 289.018 179.462 cv
289.018 179.659 li
286.602 179.659 li
286.602 179.462 li
286.818 179.462 286.988 179.429 287.112 179.362 cv
287.182 179.327 287.239 179.259 287.282 179.161 cv
287.324 179.061 287.345 178.86 287.345 178.555 cv
287.345 174.128 li
287.345 173.573 287.333 173.232 287.305 173.104 cv
287.279 172.977 287.238 172.891 287.183 172.844 cv
287.128 172.798 287.054 172.775 286.962 172.775 cv
286.887 172.775 286.767 172.803 286.6 172.86 cv
286.526 172.664 li
287.986 172.063 li
288.231 172.063 li
cp
f
292.155 172.292 mo
292.155 172.063 li
292.697 172.33 293.148 172.644 293.507 173.006 cv
294.017 173.526 294.411 174.135 294.689 174.834 cv
294.967 175.534 295.106 176.262 295.106 177.02 cv
295.106 178.123 294.834 179.128 294.291 180.038 cv
293.748 180.946 293.036 181.596 292.155 181.988 cv
292.155 181.78 li
292.594 181.535 292.956 181.204 293.24 180.787 cv
293.524 180.37 293.735 179.838 293.873 179.194 cv
294.01 178.549 294.079 177.877 294.079 177.177 cv
294.079 176.42 294.02 175.73 293.902 175.105 cv
293.813 174.615 293.701 174.222 293.567 173.928 cv
293.433 173.633 293.255 173.348 293.034 173.075 cv
292.812 172.801 292.519 172.541 292.155 172.292 cv
cp
f
gsave
0 0 mo
324.015 0 li
324.015 280.975 li
0 280.975 li
0 0 li
cp
clp
33.1553 279.972 mo
33.1553 280.18 li
32.6167 279.91 32.168 279.592 31.8076 279.23 cv
31.2944 278.714 30.8989 278.106 30.6206 277.405 cv
30.3428 276.704 30.2041 275.977 30.2041 275.223 cv
30.2041 274.12 30.4766 273.114 31.022 272.206 cv
31.5674 271.296 32.2783 270.646 33.1553 270.254 cv
33.1553 270.485 li
32.7158 270.726 32.355 271.056 32.0728 271.475 cv
31.7905 271.894 31.5796 272.425 31.4404 273.068 cv
31.3008 273.711 31.2314 274.382 31.2314 275.082 cv
31.2314 275.842 31.2905 276.533 31.4082 277.154 cv
31.501 277.644 31.6138 278.038 31.7456 278.334 cv
31.8779 278.63 32.0557 278.916 32.2788 279.189 cv
32.5024 279.462 32.7944 279.723 33.1553 279.972 cv
cp
f
34.9888 270.254 mo
35.1382 270.254 35.2651 270.307 35.3696 270.413 cv
35.4746 270.516 35.5269 270.644 35.5269 270.793 cv
35.5269 270.942 35.4746 271.071 35.3696 271.177 cv
35.2651 271.284 35.1382 271.336 34.9888 271.336 cv
34.8394 271.336 34.7114 271.284 34.605 271.177 cv
34.498 271.071 34.4448 270.942 34.4448 270.793 cv
34.4448 270.644 34.4976 270.516 34.6021 270.413 cv
34.707 270.307 34.8359 270.254 34.9888 270.254 cv
cp
35.4287 272.813 mo
35.4287 276.748 li
35.4287 277.051 35.4512 277.254 35.4956 277.355 cv
35.54 277.456 35.606 277.531 35.6934 277.581 cv
35.7808 277.629 35.9404 277.655 36.1719 277.655 cv
36.1719 277.852 li
33.8003 277.852 li
33.8003 277.655 li
34.0371 277.655 34.1963 277.631 34.2778 277.586 cv
34.3594 277.54 34.4238 277.463 34.4717 277.358 cv
34.5195 277.251 34.5435 277.048 34.5435 276.748 cv
34.5435 274.856 li
34.5435 274.331 34.5273 273.989 34.4951 273.833 cv
34.4707 273.72 34.4316 273.641 34.3784 273.597 cv
34.3252 273.553 34.2524 273.53 34.1602 273.53 cv
34.0605 273.53 33.9399 273.557 33.7979 273.61 cv
33.7236 273.414 li
35.1943 272.813 li
35.4287 272.813 li
cp
f
36.6748 270.485 mo
36.6748 270.254 li
37.2168 270.522 37.6675 270.836 38.0273 271.2 cv
38.5371 271.719 38.9312 272.328 39.209 273.027 cv
39.4868 273.726 39.626 274.454 39.626 275.211 cv
39.626 276.315 39.3545 277.321 38.8105 278.229 cv
38.2671 279.138 37.5552 279.789 36.6748 280.18 cv
36.6748 279.972 li
37.1143 279.727 37.4761 279.396 37.7598 278.979 cv
38.0439 278.561 38.2549 278.03 38.3921 277.385 cv
38.5298 276.741 38.5986 276.069 38.5986 275.37 cv
38.5986 274.613 38.5396 273.922 38.4219 273.297 cv
38.3325 272.807 38.2207 272.415 38.0869 272.12 cv
37.9526 271.825 37.7749 271.542 37.5537 271.268 cv
37.332 270.994 37.0391 270.733 36.6748 270.485 cv
cp
f
117.474 279.972 mo
117.474 280.18 li
116.936 279.91 116.487 279.592 116.127 279.23 cv
115.613 278.714 115.218 278.106 114.94 277.405 cv
114.662 276.704 114.523 275.977 114.523 275.223 cv
114.523 274.12 114.795 273.114 115.341 272.206 cv
115.886 271.296 116.597 270.646 117.474 270.254 cv
117.474 270.485 li
117.035 270.726 116.674 271.056 116.392 271.475 cv
116.109 271.894 115.898 272.425 115.759 273.068 cv
115.62 273.711 115.55 274.382 115.55 275.082 cv
115.55 275.842 115.609 276.533 115.727 277.154 cv
115.82 277.644 115.933 278.038 116.065 278.334 cv
116.197 278.63 116.375 278.916 116.598 279.189 cv
116.821 279.462 117.113 279.723 117.474 279.972 cv
cp
f
119.297 270.254 mo
119.45 270.254 119.58 270.308 119.686 270.415 cv
119.792 270.522 119.846 270.651 119.846 270.804 cv
119.846 270.954 119.792 271.082 119.686 271.188 cv
119.58 271.294 119.45 271.348 119.297 271.348 cv
119.147 271.348 119.02 271.294 118.913 271.188 cv
118.806 271.082 118.753 270.954 118.753 270.804 cv
118.753 270.651 118.806 270.522 118.913 270.415 cv
119.02 270.308 119.147 270.254 119.297 270.254 cv
cp
119.759 272.813 mo
119.759 277.739 li
119.759 278.576 119.58 279.198 119.223 279.604 cv
118.866 280.009 118.402 280.212 117.831 280.212 cv
117.506 280.212 117.266 280.154 117.108 280.036 cv
116.952 279.918 116.873 279.797 116.873 279.672 cv
116.873 279.547 116.917 279.441 117.004 279.352 cv
117.092 279.262 117.195 279.217 117.313 279.217 cv
117.405 279.217 117.5 279.241 117.597 279.288 cv
117.657 279.311 117.774 279.401 117.947 279.555 cv
118.121 279.709 118.266 279.786 118.383 279.786 cv
118.468 279.786 118.552 279.753 118.633 279.688 cv
118.715 279.622 118.775 279.512 118.814 279.358 cv
118.854 279.203 118.873 278.868 118.873 278.353 cv
118.873 274.878 li
118.873 274.34 118.857 273.994 118.825 273.84 cv
118.8 273.723 118.761 273.641 118.708 273.597 cv
118.655 273.553 118.582 273.53 118.49 273.53 cv
118.391 273.53 118.27 273.557 118.128 273.61 cv
118.053 273.414 li
119.529 272.813 li
119.759 272.813 li
cp
f
120.994 270.485 mo
120.994 270.254 li
121.536 270.522 121.986 270.836 122.346 271.2 cv
122.856 271.719 123.25 272.328 123.528 273.027 cv
123.806 273.726 123.945 274.454 123.945 275.211 cv
123.945 276.315 123.673 277.321 123.13 278.229 cv
122.586 279.138 121.874 279.789 120.994 280.18 cv
120.994 279.972 li
121.433 279.727 121.795 279.396 122.079 278.979 cv
122.363 278.561 122.574 278.03 122.711 277.385 cv
122.849 276.741 122.917 276.069 122.917 275.37 cv
122.917 274.613 122.859 273.922 122.741 273.297 cv
122.651 272.807 122.54 272.415 122.406 272.12 cv
122.272 271.825 122.094 271.542 121.873 271.268 cv
121.651 270.994 121.358 270.733 120.994 270.485 cv
cp
f
201.793 279.972 mo
201.793 280.18 li
201.254 279.91 200.806 279.592 200.446 279.23 cv
199.932 278.714 199.537 278.106 199.258 277.405 cv
198.981 276.704 198.842 275.977 198.842 275.223 cv
198.842 274.12 199.115 273.114 199.66 272.206 cv
200.206 271.296 200.917 270.646 201.793 270.254 cv
201.793 270.485 li
201.354 270.726 200.993 271.056 200.71 271.475 cv
200.428 271.894 200.217 272.425 200.079 273.068 cv
199.939 273.711 199.87 274.382 199.87 275.082 cv
199.87 275.842 199.928 276.533 200.046 277.154 cv
200.139 277.644 200.251 278.038 200.383 278.334 cv
200.516 278.63 200.694 278.916 200.917 279.189 cv
201.14 279.462 201.432 279.723 201.793 279.972 cv
cp
f
203.827 270.254 mo
203.827 275.124 li
205.066 273.989 li
205.329 273.747 205.481 273.594 205.524 273.53 cv
205.552 273.487 205.567 273.444 205.567 273.402 cv
205.567 273.331 205.538 273.269 205.479 273.217 cv
205.42 273.167 205.323 273.137 205.188 273.129 cv
205.188 272.955 li
207.313 272.955 li
207.313 273.129 li
207.023 273.137 206.781 273.182 206.587 273.264 cv
206.395 273.347 206.183 273.495 205.953 273.708 cv
204.694 274.86 li
205.952 276.444 li
206.296 276.884 206.526 277.166 206.642 277.287 cv
206.815 277.45 206.965 277.555 207.095 277.603 cv
207.185 277.637 207.341 277.655 207.565 277.655 cv
207.565 277.852 li
205.188 277.852 li
205.188 277.655 li
205.323 277.651 205.415 277.631 205.462 277.594 cv
205.51 277.557 205.535 277.504 205.535 277.438 cv
205.535 277.356 205.463 277.225 205.321 277.045 cv
203.827 275.129 li
203.827 276.748 li
203.827 277.064 203.848 277.272 203.893 277.372 cv
203.937 277.471 204 277.543 204.082 277.585 cv
204.163 277.628 204.34 277.651 204.613 277.655 cv
204.613 277.852 li
202.132 277.852 li
202.132 277.655 li
202.38 277.655 202.567 277.625 202.691 277.565 cv
202.765 277.526 202.822 277.465 202.861 277.384 cv
202.915 277.268 202.941 277.067 202.941 276.78 cv
202.941 272.321 li
202.941 271.76 202.928 271.418 202.904 271.293 cv
202.878 271.168 202.838 271.082 202.781 271.034 cv
202.724 270.986 202.65 270.961 202.558 270.961 cv
202.483 270.961 202.372 270.993 202.222 271.053 cv
202.132 270.856 li
203.581 270.254 li
203.827 270.254 li
cp
f
207.74 270.485 mo
207.74 270.254 li
208.281 270.522 208.732 270.836 209.092 271.2 cv
209.602 271.719 209.996 272.328 210.274 273.027 cv
210.551 273.726 210.691 274.454 210.691 275.211 cv
210.691 276.315 210.418 277.321 209.875 278.229 cv
209.332 279.138 208.62 279.789 207.74 280.18 cv
207.74 279.972 li
208.178 279.727 208.541 279.396 208.825 278.979 cv
209.109 278.561 209.319 278.03 209.457 277.385 cv
209.594 276.741 209.664 276.069 209.664 275.37 cv
209.664 274.613 209.604 273.922 209.487 273.297 cv
209.397 272.807 209.286 272.415 209.151 272.12 cv
209.017 271.825 208.839 271.542 208.618 271.268 cv
208.397 270.994 208.104 270.733 207.74 270.485 cv
cp
f
286.112 279.972 mo
286.112 280.18 li
285.574 279.91 285.125 279.592 284.764 279.23 cv
284.251 278.714 283.856 278.106 283.578 277.405 cv
283.299 276.704 283.161 275.977 283.161 275.223 cv
283.161 274.12 283.433 273.114 283.979 272.206 cv
284.524 271.296 285.235 270.646 286.112 270.254 cv
286.112 270.485 li
285.672 270.726 285.312 271.056 285.03 271.475 cv
284.748 271.894 284.537 272.425 284.397 273.068 cv
284.258 273.711 284.188 274.382 284.188 275.082 cv
284.188 275.842 284.248 276.533 284.365 277.154 cv
284.458 277.644 284.571 278.038 284.703 278.334 cv
284.834 278.63 285.012 278.916 285.236 279.189 cv
285.459 279.462 285.751 279.723 286.112 279.972 cv
cp
f
288.385 270.254 mo
288.385 276.748 li
288.385 277.051 288.408 277.253 288.452 277.352 cv
288.497 277.452 288.565 277.527 288.657 277.579 cv
288.749 277.629 288.92 277.655 289.172 277.655 cv
289.172 277.852 li
286.779 277.852 li
286.779 277.655 li
287.003 277.655 287.157 277.631 287.238 277.586 cv
287.32 277.54 287.384 277.463 287.431 277.358 cv
287.477 277.251 287.5 277.048 287.5 276.748 cv
287.5 272.299 li
287.5 271.753 287.488 271.418 287.463 271.293 cv
287.438 271.168 287.398 271.083 287.343 271.037 cv
287.289 270.991 287.218 270.967 287.133 270.967 cv
287.041 270.967 286.923 270.996 286.782 271.053 cv
286.691 270.856 li
288.146 270.254 li
288.385 270.254 li
cp
f
289.631 270.485 mo
289.631 270.254 li
290.173 270.522 290.625 270.836 290.984 271.2 cv
291.494 271.719 291.888 272.328 292.166 273.027 cv
292.444 273.726 292.583 274.454 292.583 275.211 cv
292.583 276.315 292.311 277.321 291.768 278.229 cv
291.224 279.138 290.512 279.789 289.631 280.18 cv
289.631 279.972 li
290.071 279.727 290.433 279.396 290.716 278.979 cv
291 278.561 291.211 278.03 291.349 277.385 cv
291.487 276.741 291.555 276.069 291.555 275.37 cv
291.555 274.613 291.497 273.922 291.378 273.297 cv
291.29 272.807 291.177 272.415 291.043 272.12 cv
290.91 271.825 290.732 271.542 290.51 271.268 cv
290.289 270.994 289.996 270.733 289.631 270.485 cv
cp
f
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (010x022.eps)%%CreationDate: 27/05/15 11:07 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6l$D>OZRC-;J9uel,U!87`/pBAo/t>BJPPD_"j$Rhn+s;mIB+X:P&5IGd]:]>:A5DUZ;dhR8Yo=M8kLFgh="+Pfm,5os18o1%eSJL4k2KQFNpF7j9."kOB8qHu:Kkn511X)%\tl%T;Hbht-*D%Z[&iIP.Tc&PICC/diCUf]eeeffh,_!L=G`CDX``WY[<M8?(;F^n%>2B4sMlk^fB.R3<eXrne<hnC9[qimk/>jdbPa1FkGI(:6qJO&+qC?PCT8-tM)2#RA+BSn#4Hnj^c<KVHhDded)ti#FH9Hcp`\W'-%D[_DW&;5n!O=VF/mdg^Y<:g.frE80o3>hI*_e-CLQnk`/GC/^\rt?-6d/U2K`/VDrhH_tl]iK"&^cYL@4for.nL&ZAF!;fJ/gZE^%aP"(pK,b(AN3TPU:UBS`Q2"+L<c@U:LC4"=H1QLsag.d8')<ekcG!MBrahuf7+eK#PUA"Cm+*+-<1-b#g8_iU'HdDBP@V2%p"p]U%eEG`>2pf8Ocd<Y-'-,O$D=e//TRu31UN=hr_H8F'2'\^AFl6V5b/N=8aV%(::8:r,b3Y>-"XjA'!]Ns)S=mk_mPj$mSX!H-=j]e[%DYKWCeqAbjc]J`sIlbXKjlmjQ'[]#_2EE2EW)&Zg)&u4?+.eZ'/j<)jldVAZ@BtLCU))#tCl5/IFNV""%Im<;)`cCns,@ip*CAYH%cp(NacYO@\o6L*^Q"[1t_RHP^>?-BdW_2,KX&,7Lb%;eu2@I:*=iclQ6EY.5>,<qEH,u2q6_8ZH\dNmQY'_:2_%V2_Y#5RHPtFlY%<.['*''-#miGGukbsLZ0(#E#mU^Y),i(NP_23PFFP.k!p#D5gn"Z4%Cj8tbuV;rXn"J:b\."Y6fRrX+F"e+?_IK;n,$'5Fb#\9S6%5(RVHL/afPl6P.1og:@)$U,_0[0gWTI/n?*A&:[O-28`3$0;;:Jigf.e..kp2PN4Q5KF$#_'_Jl/P)femmrAQ2rk&:BF>KVOKq+n%I)7P0NjM#u'$ML&4s:`h#G7e,8M;67-1sWbZk!0![/\K2,PVkR6S?57aqmB)_&b9XG`d:YAD1?8#Q4mQJ3)C?JN>2RW$ZG6559e9%UjiJpKI<QHHpSmI/s`:rRuSN+3DotDh6[^A^-[/c?qu"TkmMT<co*1t-eK$6PBmPm!-?j<PW"+TjJ'$qkbL=d:]:sMaiGa@RC#!5%%=q?ps%*0$URdX+-0])S,E),LomP9#Btn<Z%na/l6q9:RA]eT8%Y,/Q,a;orTX[mIBtXX%.4NFQrWh=K.a$m<73QU%2u*]"(]7e#%jBjHpF:\;1I?T/86%6.Ynh6=S^N2D=GL$+f.$-CSS,=cPa`$lIrl(&^1.bp3jBn`MI^<t`:U9s3Gn+ZrT;5c7Du,B>,Pi+VV!1?;%=7lXm).iAus75fM^#u"bBsh-1oP,,;Yu61D[c]b'XVV=)"@9(h$[GTU)`G/!W3l6@_BH,tI?#WL?b37:Ps"s^(%Mf`H@\8dpZ+?#%1ildKF/;j>;A:T4%=a)E8UX?u=+h#4m=7lLn0mD6#"guH;0<?H7XpLl^>V#rJ^Y2no0&=m?Si"iftS6t0$r$o%].>%SsJQ_g#6Da%?'&dT#LNP=c'Mm"pm1GbHe)Y2DGALOR],T[k3f[Oe73=Mn5\&rhL3f)p,3gG;1%&3J<h@kA,Up@e+TYWfX&9YSIe=Udb^emh0&4(%07o8)[jP__CuQRf&#Hs3EOd[35l]bd!@d/#[NNIp^-KF&T0[Pf&r3=2DcGHK8o]>3-Yn'AGp8Z8ZDbEuj`=TW^sTsY)Cso<!u[C%%3$CFB?RY4/5Hbhqju<,faD?Ma^@S,Fm,uoNbY"-7nr8)7fXQ%34cp4j<#Prm&*4Wd]Th>oT^C"naldB;Os6cSNCg`M7NttYq#L^!%7_ap6)jeii&#G\a26s:ti(fs,$gr#,e&2mP-sPf`K#Fm5O*ag6\41p$%:m[ZM9JF-j0jb^gpf"Vj-t\ZfCnoXNu#:COY:VLP%#O-%8A"C/q1o74[PqcUE4/0i<ZQQdh/*]!W(lR??#?d6D6K*\jQCkhg2Fta>NJj+)u?/MrdHXeWksr(F"[!MnL;KAJ&uF+(&17pKE$mk%,`V*OI(mD>(B56og7FR>fT>VDB#^`*gNjs/TO`d1P(?08U-J:0A>=f;<Zp;`&,JQ-0L,\,:.nC532ph]-IUFI\feh9;As-L;B!_h%9"dpA_k4P'qNa]u,SeM(4<&e/BHX,X'pJp*D$s\*(<uicAm6]-[uI[q[SZ6^"egmro@S#g^GX#6g\]@uT4k?BP8B/^2C>r]V%P?C%8Ft=(\=>%b_EQPEDSttmp'QOF7aP!O9:BA98)"^+!7,mI=#@sfJ-Ip(F7!i70U?h+Z-F6%+E=4t;APTghk]q9j-$g`:e'LPh;f$n%Ebt%GBA:%4^noF3?.K`G=,:NtF.p]7F,!,N$g1XTN,Q/<3M4bU?r,eE=G(VJU[;nS1WEZSH]hiVH`!JBg0Pric/SmQ0[I1_5+XEZ%9aI"Pc\7O60JBY;k`88(o#Gk3][c_c1dEM2-'5*($#pJ%(+9<e?P3WU#(^Re4N.A]d(ELf"_d7j@Xobt"iG'U>$A1tZCVFPB9pT0%N>=Qu8RE.WPFen:s6/fFa+:o\lM9jj4ZD)G%nLUf5^BhV+WB7*)T\NqDg8ra=.N5#bp9_p@?\eJ\dfHJEj,]bASaM.dI3ggd/OQ-%XhWO?c:`1e:BDBsD&%-qp`u@bZ610Tp+;Hg"kbG&ejX.RLTV>3VT*2li0ZltIV^.CAt\&:ppB[2BMhMpenAF!7\N.feJ/a!`T3aN%c<q+sN+A?9H(\5?0]c;pNsH[,obNY0Suk\"0S!d=!p3VqGR%'m(s?>_32Cf/Fsm7DIg5**`R;Z.,Vt_,8;$E&_$S,_h8q$8#Cm#g%1!NqTmKVS:KcHf@jF[NK,0f!K3YOMCZXEd@cY9c:Bk_"V4%;#b9a225RF`I27Pg)G)Kd6\XOnf'n;gI59@H*,`@aSJIr%9&j>/<i%;Cmnt2C5=]%([K)<:D`[2_LMB5d<W8k>6VF7^K'j%s"ko`,i85gf^IiCN4,Qk*hbo2Jb8e>5.gbR$\(BHSA`dnZ*t5#6ieafQp5m%Qgs+]]i$3RH%95@XkW6q0`@Ndc/EAEel_g:k!pd<ImMY0^(d'eR3lNaH_L,'f?'G6iS-Q3qC\WgN:gJhQ3hJX(U(lH(9RdDho4n9%:(%T>^'E'DD10Ij<ijcd\eVs<2muS`B!5.8Q)&/tKN2&/?OEA21g':RdX3JJQ^c)iZlFj\bZftkpb6Mt$[C&a8io]91uq82f;VZ-%7kW27%jVhL+=T^j!*rh^P7gE<OqIu-8<feVbbC2kkY/RNdu[mG6@cP<A)K+2!g>-G5Ufu9%'4k"Gu!>N9>M;&iSf=\"?CI-(`Uh+%9Xk404KGgG-:Q]o!`.(Y)m!HMoEs-In1UYI<3,+1G^mua]LFGMKWCsRguLEYGBU^T^@Rl`:pp3*H2gbN.N:f:c)[`HA&G[#;5k[S%^n8apZCaY,D%E>kggG&YT,.aAR"lb2(`PR>HWkL.b^r^j[qu$dH:p*p/^"M[m&9nfp7BJrdJUJJ=\ro@'mjDhlm;TmRfA\eVq0KK%r`f)fq@33;,WlO]=YPg7Q9Dk3K#.Fj`NmD>H-EZGnFtfqChS1-[0LXMXh28`F_JFaK0:GnC@h@S4dC=9Bb&=P/V)bZ>%H07I2hSh%!FS19_ci-fFB`n+1_aJ(Rc35$_*b-`r$HM#CL7O,g7CG`0+KVZXZ45,4n7OYQ)*6I*3S[e-+8]mXiig9DZ?hJH#HEg,Pc6mbBqF6%Z/PYjCeTEaS6M&-o&%$+d#n78]L7eJ^U<O<M!D`tO3f<S>=Lt:+1-*lV"8dEs"-lRZ[[6"/Xu4rI\Lf\>;k@HI*dHD>CQMkh1*W%%hHYP#o&$bK?6kYcr3rcp]mS1Ur`_\k83r?Y6ls3kKDZJF;P@K[5MkG@r.jF'8S4f]Pg*(=R[#M`<Ie4%cb,=7jbSAGFS6&FpuI6K%:UG3RJkSg?qs6/r;T)2&1ofS;*VBdg0J,`KfZM(f;5L'D/#7,BesPhG4=/WQVV#aPj9bKPJJM\#']nQDM6hJr<bq8!Ud]7RRN-8'%[Tbr/YX]>Z[`6VUFW!.><c_B:6+u+n50sb8%+A79WT<Ej$F.DS[<@c%/6S<;S?]c_[!!*H\CV&<:(;iW,UqnID1i:GR.Jm2(e`4j%#"SpJ_SE(O_(GkeNN?.`cPU@P;Mp^ZG'1Y!:F3Za%^g-E(<2^HMIH3:Tq9C&\Xh3F<l0>N$D>($p9]FiboA?aS(^9Sq7DGU!%eEB%WFG7bb>X_L`7s;&rCtDY=g7-LT7^kP3jAl&gC2Nmd&7-T-.AH'8J1kjFp4AIhl(Zf-D^_M?]+lY&0/=>kUZlm.9A:>rQ8Vs9:=[s%a%!,.PS4,J9rT6lYh?'bE;V1b?/q.F9<;0sU=:Z0"oGsU>A>Td\q1^dWH>LMeVOB!-C^>'7\i=?3g5T"+8]0tM-#DbZE-rG[$1'h%EL+(:hc3t(<f'$Mf5$C&g6)HXY&AB'$VK&kGBhM7WaSi`UFFT-17@s1W/f#:Xt[kQ\kSVSjLIjad,#-$Qsp%8_CmC*SE3%#f[e2I%Q9nAY<&<dUn>9]dilufhM0BEP0qET+"mmi4Q=B)d[4hP/BO@7<<0spki#3UnC^-T'_j3_q$a]O1kd7fq)9h5\@\r_fPJ[*Y-0dq-%O$&mj']nm(Ff`8"+$Z3.)`^D-JOS"D]uA=O9l57FDe:0a[W[R$dGHXlK<3n'Eobu^Lk`-WMm-Tc@HX&fLWI2]jEH^Wo,>*DY^*bn%:4lr\)r6Ppm,_\dP[VJu8%.kM19uWU6j$Rh"n+VfHT:Ei4D\?,&0=TZ+'GgS%Hl[a7gq()=12l=GW;+>c#*msk8gA0K6ri;nSjBZ%,DZ#4qF(fH&#XKP"f9&lhBG\Fcbml6\)NibK05Z!]:uFp"$N0K*TZ0BS/?<U.;lgKd1n.jS$cFRI3g-?bdg2bX]HfLMEudG5ZinJ%YOXd$BK<MV%,m;EjnWrB'e:q_.0b#[L41j^]kL:mQKD:MA?)iT'm#Zhcul,F&Z\`V!qJ>-Q!sBq]S36OO*K`AV[qWL)YGGo'DV66%$7S\+%d^IDdZkF2H-U-RK1N?k*f=Dlh.BAM>0>>[L^2=4AMHt-Ss'oS]gF@UgU.`aU,-Z6ma4siL60l?NIZCDh<6:X;aB6;3N+e9%I[_pTk=Xp=dU&bjX<'F71Pd^e40e=qKnEdRgp[tnJ__fuYGf+s8q*Yu/\As%kUo<Ul%50C[t5`D.'H4"k"=#p8UQ][9<n4`Q-$G4%r]FfKA,```;PKR7k:r$On1`6I&Z$\Q5EEOfc!u%U8h6L&gabs&IuWa:N@"O4nq,e_*=E?aDJ0reXsi@8@,"U#Gr/k\oTmmQ\P-WS%`L"cm^oDWYqY>02rHpG//s@l^pi;r&HL,Jj7"\^PkdFT1(<L5Y[W$^-UZid"cGsE5=]&nmMkmnO5>MtNNkM"7N.Cl#-6tdQeH-p5%nt\+)/bB?]!%t`?R`uG07G"47T8mldOf0h2\Zo/9^JDo4d@pCi+/MioF1T@RLHg)d,`oPW.Y3%Q\*!jsC'+@BfrD32]JjpjnFGC4%=N'n:X]$\l=L(sanG*eo$1HubjXn(IP%%P*f?H1=TAR*@o%NZ@IurP'X^hmFqD-A;oQ0KSh*1gs$>8Z_^fpeK9IkkhgR9l#W)ng=%$JSM&A:KqmG'C@-@qA9,EWZ0I"hsA4^HM8Dd[2)<ce_=/Zb>jQ0/S]eJTFE<D(hc;fYOZfCXsTZp=pN"<?.ogpIUQkM$alPm'X(b%P@-K%$=$`iW0C8iU*4*lSJiQ]1jD#l^*-[[=Vgk&G^"lOA%R2K,pF.P::OR%oPCJE/k2PM5#q.XcLVUK>Bs"3_;!jVZ[hr'mYFmd%Q:r385gi&1_sRu<q<UeGa]t_M2.c&[Z$H:A$t,<%Sj/!Bc>:4<S=0Bc<YjOO;]3OOI/GdW0+mbHU\GHp16Dr$.YV'TnS6?NMe76k%opsd6Yq=SJHU`;J^tA3AR\e!5F'_Ebd<M92e$**r[)%)%GhY9cWJbq'dM?G\BuW0u.3ponh9MBg_hg+UN`1mNIV2>l5_%DPUCG7!%#rGS``I(.E416H>p+#I/9I_fi!I[>e^k.q@bKJgDRU>4k+!;s*FKa+$Y&0`%F%AMO(E$`AEG&OMCI)n7a7N,HCKOnRdiTtX-!Y<\%\qjU$rL*=/B:=/]O<*E5GcfU]0;Q(g4=(4'^>[b\g*L-Q!NX`Amda0mp<gnFp;<+c#[Tt8/C-HqM<OO/dJA*E_PA]Q%7$[HCD>#d%YiFKl(Voru+;K/>i8r9/;Lun'[O]/#YM%ueHi@LQdGBqOD_?:sEqI,P;.`[kc<8=N)Ym91];+3u2Ij;hS$k&rNMYa3'),q]J(,&.%>U[QXN#M:=&\$XrAhhd$6o!jCdlN78cU$]4b\?K&WEu7O*-VTj($@/.F#[s:Eo)0p>6<)`,CLE'7EjCjfJ05bYu`Zq3he@bK8a9n%Wb+)mYDpK'"^oNZ,r89?6a2=:dK=U"j0hYB\Lu[<m@JaqBTdp]1u`Ti%iiHDRcF&l10/In4k6O.\a64ndkg;k%&ViXO/Ai:e>el3%_g.`3djN6k+PIrc65q/3#i8u[%%V>B\]WWn8m*^Qb"eNhcQTX(0[D=dB+q0`HM'/H_Y.78GW^$#]s*3mrJYR%PK:W)50&>t&iKjf%`3u&E6a.#`5Rlc$A/Y`'G(M-JQE7$$3_@o*_9bDQpRro"X#[CMH'PjS5$ZqANrDZ$2@J1;S@)RtmF[ci*2&\I>ctY9$KP/YXNt$U%0>+bdZ$qt?GdB/nH^R*Wm,LF\\B<[W]fe4/%#sG-l.`KfiQV4%:Z]5m\3s(:qu1:)C<h]n/(%K2kN:@p"Y430ntWb.Gq<U287qm4%V,N/eS]Og0gP41d#P?[3PCC!kI4+KbBDgo)1&UI%,HUG(kG'ZPh<_q^d]k%p-MMo9qF7Zsqq^_tDWb([2IED,?Q8NnIdISUM]]_5%DS-EWnTcpA4e7']LQ-DXfh;,BWjZ[@7\%+ZL%.t8*F-22psnc@=`KU.l29"DFaG*1/#Cgra00:W?81T,<io<da)SZoq4RNoH;d0n%@^'!=#b[1VTSFA=Mr6.H$@FUJY<l2f)h,_`X[]3PY[EZeG/QsU0YI!93.SX`0D<-c+7Y8,[q1,u^TsN%aZ(%+ruH6Phu]J0%UkI2%-8U:\VF#e-f@>InHe3dSrlre_[8s@(hQQT9RW"o-"RiI]aL`i@lehDO\()J*=b#F/:29`9o<$P&s*$/5[/HWu2h!VGFjq#.FCWsH%gHE&V,(BMglSUB?iC=XG4LY=UcU\-/13Rrr?hid*)n7Y3pi!2fLh69Ah>_TdO8)=`rZ4YGg37?-R#5O:C@+K<.@)u4[X3fE1Q)r3%N_/BP"eY#C/4M9IfT4Fl';YEJ^Z`]ZHMEJ_rY(WppgO+";2Wt&o$(;GmQ.kWa"g'LXiB?<<%n*f(a>+[IXsnYe63=2nM(e,Y;*68%.KHA4b]S][a]n,-BN7B-7:G-U!lsoW70Cgh8mBCMGssb0JGF]=A-Bu9kQ0JWQ!U(KB(Y6prJd6ZIPp#5)n#[[ppUs`m%RSQW$XNB%jhqgZr1MVds/s$[@FOV["L<^ObOJ7<%2lLf8\Zuno[-?RdJ3/a?E#l=[F]#k3W,4SVSM0EO@$]Z/)[sn]Mg-Kp8h-/T^qX5mpY[3%(dG'p+k1H0%rSX3]7bg$RD1t&e=5?4mKI^gb>.Z2>=X+M%gn#P'_D//2"!'?_`2a^!`ZEaOH60>dM_\=im;uJ2u_ZPf&MDFs"l99%36LP$rb&/+p=Vm5^QVgOOYn6LT`Nt>E8'3O)C*3'=qf:`)`H]Z0WSZ"#Vp%1%M+R2Kt,+aVeL$:3i2Yem8aI'=GDls7@O#M5IK(O%R3?LscG(G"gG@`!$N5F5F;$_?mDcA28%i\c"Q[rApnu\]ee!m=isu%m,lZD8plerbAU3,rR]SUh/S6&ZCuI.DdFW<NILcJ,-2bpA%YQ%`Ce6q\F\b1^s2De!KN1ip!Re*kV_=QFU@+]>"H=Z/W<rQnk:`A-6JR>MV'953)%gRS7EBqE>R-lqC00ln>mRegj+C;`>Yum@m%5$%2Q\3!%c9lc5>0R]L0a,:?*MmQ@JJ$KkYO9L.*?jXq#47.Z-s7p#k!=,ahg]&Xu5>9.DpUgIV^t0%pPr(MtHm"<t?&>GYs0m)m%Oc9/rO;d`-a8B:6c+bH;rmRqZ56<93'eM#ZqVTjf-Lu&S4rV]?O'm*7a[ta0Tk46ZZ7,Ea\mE!9U`LR6ILXDiO21pVXrmZVdbG!'%-'KpLS,QbYf1p5#R1SqZ!J6qT^t;NM%purVIQdZ72m8D=\tUW6cTH1nrb=;X@+IMAj0ITbp!,!V!W(Yk:dtS>[1JG+C/20W;KGd9%f(l4%34Fi9]\;B'0jL;cR_V\0c-Gg[dCSP5OjO8pqts$0d"DJqX^^gh8@4StR6qPP%LOPgVKJ'do(2KJ>]uU[=>jos.lR^H<pee^%>5sf!0QO^?gbA:[LFu%.?b+>jGR<d?%S`2SkaW>]bVX=c<%XNpX4>Il0^.`&pR5fS'Z-,YD.!uBRh`>AhncliY<-ijX0nCt_\[LV%L$rI%Z;+:8XP6F9LQ0,?J,qI1HZ<>R\$Sct?^:`!7r>EbIiA8,(k>=Kk@He.V'SmhI27",hlR[]S6(^L!25#$;KYHk2%pqS2[FU9%5D(6=B#mLaaE51PX_+IC*t8&&:F[P&&""0!5kUl=Xjub]?@WdS^M'RZ,A\f&`bQsSSM&oG\$NtHY-RJ\\^Y<#8k?X-m4HUbD0<Jh%j'TP*%;4#Vi4uSe?Wt"Y):ePaIG?cIs$>2.`dY%tC7R:5UN61#m*cY;9:DiO-j+0Wnj$:J!I.)qQoACBADXB#=lt,#XFsf*?<&_c%L.D2%[tR(T:.Djmk7"O(MmIFe<mURS<r)42R_X<VSjB".o1C(S_nG*;Dp(m1l-+PS<bn*K)$\m#/a!5Z!7FrV:35oUL,R=H!2-V'%J>S#%!*^)_l4R&R-O:q=!Q7F9a-HDYM3\%>3G9&?d.sn(D"s@6%2lhr2\k_'lAbgES,GVQIa0/#NONe\c7+#ZYuR'qTm6^WO7+O.%X:_UHE??.#Beb8qgQo[[2f<:STT/0RD@Tb:E<Wi-,@Ze40k<UIo9@tEjD+(a;<Y[%!]+=Y*4\5EJ46lMZfO#$>VBK(SD?Gf0C+c8%=M=g]_1*B5o8EHs\*V(6gLMt@AI*?]ZIbEpgmmCLU2a4/m]HV_Dr#lU;0OO0n]XjSBRA!"X#fk+Si$K%BVDGTiOrZ1hW'hP=cQQY%cJo-`n\S$6fT_(qcq]:QX\I"``t"rfVSaQSN)[LXI]_H0,QK;kl5WXf\DT]I:pDFf7?1*eiLJMj!n]s+afo>ZVYAsH9Y\"SNI(?N%YOqR^J[eg8T*'Ebo4?e4BrX[HLEDM)aqHh&o<%u[Vd72]A416N=?UiAe4&Dr*j6W'T,#k'r*b'Kr&?;Z=j:&L<YS-R*`DFVLo]h/%Y@aioMd@>;G8`mF/H'mEO='rc'/TZ'EW0.>dq.iLdakQp<4*\?E11>8m^r^6Blq.OCQ?SW)]a/?s6ZXEY(`Aj6ap.s%`g=0K(.@a%D@;[0'R9Wdh$t?S6aC%fXinr1l.*@8::+[IN)*<r^,)[\M_j(OF(#=;OllCVI$=ph+RJn`iSi#W;6)YP%=`US):h<cTl29r]-6md%q;uD/^`MuL;FL=ANV=@G[c<M7[0[Jh,gZY``]oHK2iqC;@=%GAlI=LW=mE+qs&YPDDpN5n.V+8"#,0_Qofi[(1l:l\FS7n&Bnj\l%m.Nd/D';?gYqktfofUeKZ?'-'aDG?+,-MGknbe%L*3Zca?g!/kI;[)sG8'#<^"PQ:D1;9d,Z8]ulQ_Q0+XUZ47JA(;hY7712WpVB%dIFjGMT3Q<?0aMI9u+]"lTh;%borYK_NZ0A)k/0;GrpNcM?0f_9gcdpJ*Y_8@!ZS<HKfoGk4@OIA/c`+S*kD4:@]gZi9dZ,-QG[K%?L-ucc3bf9C&lFqML/aFO!#A<n%jB:Gs:S,88"6[Bc-N@&G<fp8%8L_eF;^fYM09k[MAkIePBC=`7J&WmF+9QS\'7)Tq?(VE\cSm%d",W,q!0Mn"!^neO?jU*/#P1\1fZ'`X6F9k"'BIMRdZdi:A0#41u:@[f+B.S8(VWWoZ6`uE7oJkU(8q)YNF#f?V#e!j0/L&bC)4J%pB(O,.aH`q-](hHPc<>*db$H&l%\/hR@B8uS:=RT1()1FAtkfmG\-!IVWYqXhTe$Q\3sKb`7*]jG>Y4C996onAS1E(lJ>N.2R@-K%?O4_$0+?&?k91:3#R3nrDt?*g,"2"NFUT'pi4%/#[TX-QmUb7R<GRXU!Z3T;b]-`-4-Xr)F\fY'R4D`T0Ch`Ja-+TRBcKD5lkHqt%fuDSGEs[?4(+Gi#Cs.2IF_hKU_;&T]."R_\A9phmGV=p7ARf*RNaQ5p0f\rEp<XN$q=O(X9N&?'Id;!D%h2Pb0&ORm'%Bq$PmTj0%(($)ld.pr/AS7l(>.sP5%:E.Be3E]=Y7T^2ohO2f_Cj#qX/C3OX5-B:EX/)5K"F-7bbrM)HlteSb?U(tAdA4t5\Y4u%[UW!U\g[S%B&*dAQ*!u+LJOGlrb3>rq9_Sm.G1,2e_PLR8<H%>#'`UH@pg;'GHhRPo-l@9$Kn8Ah4.eh5\C4uM];MNZ+,)PRZT@`LJ*Pp+%$d7%'Q*5Z7C?Hl>#4q4Wk*I1/=(eI[m,)6cdlmn?de=roi>4#5KeL$;X2PR@Q?5g(/#ti2a5h+WM@(Q@d0YE?G68/-PjHuc4`j+2s%u`%FJq`up"Oas]q-XK::5X.3(1iQ5IJbrQOU?i;fgX(D#8*eq5)e&Y#VIHhF]lUND_=\mr,;B(7'8:HX$CC_+&<Tm5eP?hJ$&Vrkk:+%^8p*s<7_NDDt662ka8cV1XS`\*$`Dpqc[Inl=i2^S6O8b(>mR'5ZJ<B.Z("b\t2GM5?iuoYh0*,;ES[Id[??IcHiS\$/m3_0?I6G%#s!?ECTQE.KWW5]i.sL`"V1eCNA@Nlk0n9]!AsZa[<jL-*ot$O2msC+N2c'c+L`@a.c7]gY:*hk-.QXHb<4G-_+jqa<B^ORD<N-D%UU#f%g6AnKJ;VI9Q,d.+O-eNTX#-,a<3)XkT7*n8?i#gj_b6%_9<[$Tg9Mp&'Xdo_G:e0h\teANKhl]bCK%Ql\X@>2<,)C0,s='a%3ck"F.jaT"<@_(Gbr(PSZdU_@eR*TAV:t<h<4s]OMCOT3#?0109(KK;GUB.bg7I^RGZHl7GG#t&Z1kR(n>>P<V('oX>n!=9<g3B!%%MdL)Y#\hrfe=p>R@A9)WHM]d[rA0WE4o:SV(aB##ESi(X&n*>;sm7ZT(U;'HU_-%e+1J?B;J)[fD-Dh1mW5_Mcpi)dD<ub5[<Q1%nYFug*%Zpr*R&BUb+_L<8Q;hkOd[dY[RIPiX56J!]Q>F#FK51Tbac)+@o9(#p$o;E.g;@-Ubt6)r9PDh]IL$TgIj2$i_$\V_H^U-%\91bcb-CqbH>1j(olbW;0k`J+[.OZ%C$"<[C9-uE9fatoAZ0^e<U!8RMaqM5M5iFZ:0J1rmqNo/AuCX7HM,C\d^!u)n<eE!MJ=<b%mXD9SrU(bu#qJ/GSPq[%h/AgaP"2ACbL63-C'rK8Uih0bEHH\sRMT"N2:m-JXRuGNe<I\K;Q.R9G$DQ3n#_Es4]%?/eZH6%EM^@^%.F1ViT!tVPGhs7bH7W??m[(nX*c=rKT2$IMKp=hCJ*o?I`O2)`rk?qK<KB`oEmj!@[4JKQk]a4YSBn1O8tU<oO\GJE[@]Qg9R'N_%HRVs`m6+mS\YJ8c`7Esh"]`/)Ke#Tu(m@SLcc3:ol)U7n%%>]%6#?X(Wm#>(n(9'POBr]'$;fuMCSlCVr=quNb'VGNW7ppY;\T_Q%Zg25"_p(UTV$T!+Vb!Z'>C"gQ#abC?bDcX(R`:U:>'R$R]1coj%3:]dY3ntp8YqpIrj&Y(rF;h)*PLB'eX;]N^:hr4OSlN<%TFr=%C$c]T?.sf&&l/8's'@.CQ*-XS*UK?^2I8#Wo[]s(B-#][^2l=3e6QMO*H,jljn=tkgCMZE^-us7acAi.H.J`IC4k3Y;UTsi]4!\U%AomN!`I%*BF2%$h9\mXMT'qZ&h3A5k[lJ$Ym)Akh8*t#N]le9F4'bZpn(p0"+"VRn(%8W8a1kYDD_];<e&PC*Y<*f%F$$]iCR5.o%p=J)$h?!LoZ+9_cHn/!p38_I<STcL&"RiP:Mc@k6]Y.(SAeNs=+3H,"m&c1U0?GSO`j>=+iCRt.oBk_+;EP]-2*'7eXDU.GPt'i+%Y3MTspCqK)`q/S%kOnbgRq&d]g"hDecaT1ViG6@&m@LUD-$s^7OAKOe.itP[*N??Y5\XPm?Zj"e]JppJRVtj`2<Upn\Tle6.#?a?%0tT-G8_%7sgWd@4A,\&`RW0jqddf^2FI9W9&mLmr9=*oim^"`KL,6()/L?_Wo!`;oqtgFYdZ@L(/="ORn8XFU?%*!bEH<j*,`Gl5%mArk?Aq*F@><c7KB*109cO_&E.Lbj\2HfC>V&;4\15EEc**PhgI"P*^b8jRBY;NApktH0s22,Sq<!ARLb;NeR=1Yo=]UsLLR[p%a%m'Z9WH(S(Ee*W]=V.^54/ULMJ<IZ$[M^gU)$VZq+,$L\g3a\k05/UBh4"?hCQ.BS\VcfjKl&Wh%2t*dW#&en6[-q_*gFZX+WE[\@%&UW+E;5L-JNn4aVXf@#iY]b9^W:]f2S'n;$5dS`4G$=Fi_6[$A4+)i7>t^t^Q/]1gY4c8KPJL?GnZ3GsOUGB_2Y+5$r+*6";RT2A%osT?FP4.YIh$M;lSc3r8g`5nu`ZqD\@J2c]?5+!r%u!Ht,/jcSbC&&^m6TaHqVB3/"gR0:bEU,M@&>rtZG\pbHLpe;F/b5f<J[Un%^!p5HZQB3uNVq)GDiDS'If$j<`)`uA261i<a!%Za8X^_oLL%4fX?b5A(cI2WocD4aZ]nml=3Q%Kb":pZbeCA:9jYk@p+k.'c'/%1%[n0H24@)2E@57Mi5e07(IYXWb'X*X33>OY80CA#G,lW<HGo_RdB7<p8;ClN+p&$t.]'eO?1:J_"15h.0:l1UC4FS+@):QPULCY&@%X\3J&:("fAO9e,orWm>TF0p6&DS^%F^'.=/5k2P[Cd2$YLMK1h^TO>e"u=@)"knYLR(Q8n>n$iNVR*HY>P%jH4_srRbFe7.n=3"K%dG9U'a$02/Z]sHTIW%VdfgS\oM&p`p8,,2HlqOO@g)?63h*0.M"HT_(D-_?$$Qfo94]O',H=4'Y=X"q7n#3)7h.pqqmA#g\gYu(e%D0\IrDB5M#C5jX;WLHs*L]36eG1k`E"h`/D:an&PTrN*qSi'a0e_)I_QE0H+"Mn"*L;UhGKQ[[nP+"i'h3:'kBrNK3B'+8gHCtLI%TGE_GOsa`p+5OnYg39WiN"&*_*m5$iQ5q:l0`/@aE)6;;WbBmjMdk1U=.?esp2.ocH0J45Jrb8B(=V$rl53&Ic<'^&)jE6.I%]V4%7Vm;+W)Z\H%OoI$4$L'6i\3a,%(Cq8D/?rs6q!c@N8AJENT"HgV1n_%aeHC=lJ%nO>V,+gI)LI01H4f&#Wst6CTb%P0@FJ#LV=Fc%Z[KMjG8iNIA(P*/'2rT3WP359e';YV7_14AG^YYlDXMeCFF7\0j+.h]]-'XiX)qCkKkeC#N'lcP.2MnD^TIGqrX'Z[5I;16dt6=%%m;Y/h2^8F/o?O.XQ>JZ+Ebl.l\,M;QBH.E,l_8Cc\N_g/nIf[ANqI3-&WFG>iB#b5$6aj6MkV6\6s0kgH-!8MbsruE_F?X;LRV3U%)jSC3YF,q0AYSdg/TT]Q!I$H`rI_?0&Rc>G.`L/AfeL%D0sINd:RTFK$F+?U'.ah!&:n!r.cH_=hMCqtJQOZY:[GZ(1dm.CYnK7d%*@o#rO'2(&#>EbDNip7M@\U7REG@6RpDJU^4:Y]HS2hNOm6Zl;pf^4Y'p,O%0&@aG0T8k]'-8hibag6W[bSiZ7tgQ>2bMObli#03%i,P+mYd8:sb[1A:7M,VqqJ>JG7,_BmVMeSpdhIK,MkemMl12T5_'+%DK"b>BYQ`3;\ah`4%WB[4YK>$(+6reHlGT(O)W3s:74;aS%L:Cl/^cgAj/Gfu[BC_Z4q[hY+%WUGOc":8PY`PMa4#O/m@?6geREra1:Zt59HdAk0HWisV7ThCmk/JR(8H(d)eSlA8*qhC.Cs%+^%p1[[;c]s%c%ZE1.#@GW0"E?SMcS_b`@/"C(JReK+_%sj<(<Djc>G"7sT_5s"[fl,06Z@eo"ZB#+?'X:C-Mti.AK(5o0ZM%=<I1::%dU(r["RfAdPQ'4=Boq%#]d?'go?s!6mL]KK+;lj0cA?KcdSc[4`KDC@d_9Lj*20"2T%r(Ec?piKPd!r/T!ggi!O-j;e>!BOgFd0'%1!`TNrCFLNif,hCq=`lg\h#hAk4maO5SZma3ECO&Nk5q@-6:+c9il^OWc-1R0$)FP404Dd@$@n*!\!fiM^jp!d"H@93-qTQG<0S"%cUfd+O2k)L16V(n(_Md9"H&i`%Ftd0(nM'="g.MDc[;>"m/B:Hm37dm!l>80k3`"W$#ahV*''lt1o/s.KX\*RT5K>J8cY`a,Pq0t%=o#\7!-T1iApUttI3mV*1Zad5K?qM=^t]r2U*7NmI0HuNYVp]H3K?LK=PsdqM+P'I-IG<7Pe\ml<hfDMIFN-JOD)/smA@-ciV6'Q%=Elgcqd(us++MX8ESg9HA:u2JhI)?Y2"i/8:*Io*.+V;?NF$]C,$ONHCu^UhGJK6Ok6da;TnEtjAtY-A<Rqd$kK!Rb0sm$2IB<!Y%Po*`+Vg.#mH2Co8/fJZ27U/U@gBH<UZ)q^ST`@o*MEPlTN!@=H$\SV>f1m%ha1\8i"e1eQ4'rN%Y=e3ck%DaJm2tqh%2"#HcIic*%/c1U!=SURR2K^A%+qSJ-GB5nbrLSPFc\7s=/BhpT*Hl-;9DWdnLTfq<]h@4U<f89ET+(g]s'-CY(;k)XlM#b6(ksiTILf7CF.p"u%O#@q@I/+4=f3Cit=2)$"ZeJCeBi-bh6G%KfL+Dj=pL1=D(h2e#0"'lV:Qt:Lo[!d:0m"WYg\*LFpsFL'8^f!Qi]4Sg6B1CuZ#+M4%e.<-s>b[NXMak8//i=0Q#4_:7'<Xh.>C&#%+a\leE7q-8fVMV@0=rR.;VE)O8;f=$GZ4Y9hE)WfkF*DED_D*lp`^,"]E;_c]57RN%YkKK'mfl%rP3U9VrkS^uE@GaXZ6t"p#4-4&*(JC)TKLiI\%\>MD*9'W8rCM6*c^3j)7XKHgX$Hm_Nfg4p2Rb#i'"@#3IN60W%8b7%-]":nKT2\3RSt%hLJJ5D5Ra35"C3Q=R2@tdV7$Xj+t^irU%=><K4r(m`6aXOjqU0pXt7SQU%=><1SY,oNhI+eC.6L+U'4&DU%=><%UM"e0)aid16-!Hl`f$P^O.ZS82Mi83VhhYILDKb;UW:`lV_W]_1:E9h709%(<J+?!r0kkl%L?h>hs=f>ap06-rDPFL2%13S<?:jP%HL`sK3B`41Vu@XV-SOl]^<G_c\lW<.4ul;1md9Cp9<mD/][[0iLDB/3>CW4<%gBj74p]('h7/nIIhM.dEirb9p4LoW8G$p$(O**Q%h/_VroO*n=%aW3E9K,fUZ<[2KjV]mF5m2teiBA%4@4TWOeWHt_GU:'\%(dCqIk->QdF`0t%:M/t7,J=qL_[U/SfTuG9s>:OZs^?k%><tA]&smq)R&[7_[#C'k++Z0'>=#c181_^5W8\\g'lm$tZgT)_Oki3j=61s2T8/WP[;,>FYIHT"<T+-SC/Kp(A6PH`F@I;I)pWEg%H`cZIZ[@/R+Ui#5Ce/4"NR(kU@4"::0..GD6Vc)$;S.P?^`63ZSk@T?EI?Y01K&lc^/t@0QYDr:au_Fsb%D64LuTn"."+d9TsVeX%=G7)q$J5G&@2D4XgMXhAW.UeuYKnbeT"8J9?pSRe$9k@H*3c(I)*be#?;U\<[*T(S,VuW!J7JReU(KC$F;.%A`uNJ_`LGUnqc9U8%cfge$\h&h8!3:%Z_(M8<rM/JUP:-JtHqjk'n=i%enF7\@gYBO5SV\rlhKS=@?-ue6emcr=7$)Y4!H:SspDs:O;>?H;&1H_#)$t2S%B.<2)a(t$/Lg*t+K,6a@9/s+tV)LJf6=WGJ)1g(o#RVR72J[ih<rNh]VXTuu`i;.[ZHVs$oPsBVY9sR.+8L]4fqaXNk--82D(tUP%cQh[a]0OPm7f;^\a+tPrA)[1sd_+U:ZsEQm+`]+iR4c8jKiW#432?[*.3VOIFq4C<TLH0-pdWnM'B2qugoDMpG)K&JD38Q$H!4`@%qO!%,AoC(qN*X<Aq_OG@aJ^mFl.Ic!M\$Yl]h.Q566PD<&2LbDdN89J-.M(n(7A9l0XS):1>o:[Iqb*SN)+DQ/*>Z+ZO6p#fnWhR%/L>L.G/U(l?48-lZFh7nL[(cgo-[D6S!T&^@s3U`^<!*[hl.6/eUf-9:naYM8]PI57\m01O%gNnGIatC64\e>0lQ@j,:F<I=#]i`%@D.*AFVA3<XB.2(r-.I\g-#_#)(0Nj?R>+:)F4IXl^Spe:,kJ<eWV.6f_I414C%OMqF6<soCO>'1`d-A))iBi3$'\_SAglcE)rK_%/L#)nkRil#\;1`r,K@WXUBN"c%i6cK-P6l%Bmlb3C4qCu$[iN,=Rg?^G59rrQukH\rIf>44#FBMa,FLI5I)?-\$4.$k,n>4=TYgI%pI$dYJ(5"9-Sd+09,2I$mBQ4\"%qtj&gKi?@lR-AWm)j1Fp=QunR+<iM<'9%%%ceI88"':4pJiGh?L6`4.\b0>&Xm:U5oI77*&e]%jgfuOT0O,.b;>rS<a\c-@$B<5I+uPkE'.tW\/f1h(nckT-?:"YM&%WI"Cd'&4p[&?n-OMd7u?VOLlMqB_3Y"["HKk\gMnLCq!>g&%8'Icpgbp\h4gQ`="n?'\p/6J?0/Ne0jB1K<L&E2nCK&Qr0[^OW;JT476A%S2Lt(b47&3"o9d1brTM-OR(#m1Z&WmE>`fEXo.*dWJ%Y@F5Xj0u0slYG70"d#%$gPkL:E*4k'DuB!+iHO%:'+-+U`?lZ6kLhI$%>A<T^kZ(&NuA?Qk1HIsiBj[t`sdZ[KgogI:cR'eL_3#5%r"VRO[eeS$\J"9tpl]->K[V^i4g%Pi/95uO@`]0F)ZUZ=Ub8i6J[SLG&[8OaP<?m%7gsbAP(K543.rm-q.eBU^X?V<GTHRiE5GB\%j><uCf3.!.pRq'mTFZ'UglcmmM:i+.K$957O6tLumC>>bs/o>m1L!Z*MiEqC<b=<mWa9K[\+i#Unm/*,<S5E"m$3Im[o02mfnW3+%c?jXg9"(6J=OZDCO2gaI4'PA5Hf*VE4'akO>86J@DQ@]rLV3GNX&T+$8?O8M?GUM<4qVsjWG4T6%hM78gI9LO_@A3KY'F%DiYu=8%]q"78Fl$c>Z8f'<FU#Io<R]O$L3rt<\W:[c0A&uoHWI_f[bCG4Yffd;Iq?A:4<s31n,;7kg3sWWh2;Y<V=ZscK>pF;/&JIJ(JB"!%j'?B\k^K"*M`DY;dns2=]dc0fFX8kLc0Fh_g!<_&XY7u1)@E54E8[?!C,+`h:In6%l9*,p<)G\qX5>MlFR"(9g(q0P2WV.CM]LD-%q30L7s.53PkW##-LU_D+'>Jmq^AO*#NKX6"pV8pnO`-BrBtn2]SE*CbU'ZtWOTQ)!&'H?H/X"NT_j!OD3+>f?IIDS'nIdho.,6[s%3m=Q$+RlZKcsb]D$BY\*CVUH,DVd$:h+['cP/D<&`d$0S"C+=42S8Ml&<hsJ'4L+s-B'$@-]4aAh3g$A1nD_G7IT6+>Vr!"Q7g\/%PEDU(]`"+ZN2H30QBR<*)p;t:3grgNp^m)Y0r*uL8qIpRB-7#7Lo(j)dYT6nGgUW-F`VBYd<)*b3m77YZ"Q0s0snpJdG;6pMl%0,%dP3i-Un[*AXc'=4'9/k&HUT;&9d`7V`o/_ABKB#f#u<H#/"03I9BWK-N=nr5!YpV!/3'(NUka0<BK@LhkjakrR(lB5O^fQ/l,%LX%S7jr\/048p9er/4'MBgf.;t_i3Y;@9bfI<AF<"L9Di%Q>aQV#n,2G9A4HOCGBKB!A?,4.J,=L";>0,lcmLc5YG]ILL?+>$R-TaYL%hfsM)7uaAZ&`c('5#O5.*@7<]TMItUI/tbc\Gk=oHZW3%.VUj*R`]TS=GUIJK<LracEfb!^,iNB1$ST#6Jn7DG[Fb/R'ko4S:)LG%W-g'*r=o_7M)mh%\_.'!U7t%ur\.F(KamKm?U<uu.3-.$5RkMKb*`c<hHMG'T`jDphu5&;RJ%BCVS"j,R**sII*XP9]D!D$0nVp*%k0@0XmnN.VnFiH;@jCG4oY'B>[-_>(C[S:oicidUkV+<dC[Rqa:EK1t43&cNif!6!RGA"tg]cRliNZ*#dPZ5jY4TEkcKRFu^?.'7%\T#7\Yq:%^k,"TTcS$M]5hlk^=VM7CFSGLLfnXM>A454!C@"2Hc^fh'p0-KA]$Z+e*)W6JYp3ZN79_aG8#=&XF=Zs,5m,`IM9P:G%<5b>(5qq9WM/XQ+So[@8_4dk-)f7t<HaZ`(cLoA:!Fc)A_'A<$6GPqT71Q^E$3:O@UYC9J3L5%+M0t8.a/%8+S8cK.WPq]X.F24%%L4nU#M(6q:M3GG_P2;B^dD4IWkGAQ5Do-d4;PsQt."QgpLp%4#EItD(,L#L59mH*]]*QMNIN^.:+dh@@[GYB=6S.*XB*1,gT-b,;%i]Qs;E3;Ok:^.'h^cs:m_@;7`eO^#oER5/DQMs'SjC?h-#6-c>!7&*`joUc=S.\)iPOh`4g$\K?3;-btj\e/64c-nH%$:W0(<tF>%&&YHi$q&&EGGE2[7_.L'XMoN':?7-kij8-gj"AJ.oY09:@cZR*nO.tuo#;c+XrHfK\1')J>2&_J4RZ\qnV0,GqiCJCi;p`ad1[Q[%g]d)V#oQilmD$=`X;lT^)Fr%l`P,%tYkI&!GmhED\$(M"-/CfVnSePLkm0n-r&n*u:;@bt()G1tb9nbk?(5V!Nc-;sjn\:@N#plj%1;DlgL+Dl@aCN-$^/2`:-;kD=cjFEH#^c,A-:8"m=Z72#b^3\-(<PA8TUaRQ(WXB6D%=@uN(S$#V4D+e&4acp>$'R6%:er:@X@Hh%cEk$HBJHYKd=[g*Cpg`e-o`gkLIt!7%)))h/#C;DB1H)2pV'?S`q@p3@q4b5iF?,2UE<4lIEpC1A?L9T2s!a^`jM&VGWKeQ8Ja(a%(g#<I%*p!R6HOW[&Kir^lQ/b.&2_:U!ORZM5ZL%)GhZB9."BC9@V5)?4PeXO05iJ7?`\HY(:34=qh2o]h)n[&b1t!9R7o`qYfh*H%523sDN],5Y8o=*;KB]Gk'Ac]"^P?[&FFWV4LZ@BW]Yj78h_-LcB;JL+>4@FIb>-A#B;nCMokG#iHLMD(S>u9^mn1'emk,WG@`_F7%@G?3)^O+eSQLY>V441b%i<FACCnKHtXZE0r;tHLQ/W\8cPjaTQ2.ttlhP"[=G^o,!UXJLN;EHACGf@Q`qc(-iPI6Adk='Tmdruju%k&tR7Q-N"J*0l\8(KURl^[eP7;Rrm_>BL/,/m1t^#j1luHH)).E6OkO/P.*.8hUQ&Kb4%ka&]dh$C`@Se[Lugf7N+e&PS`ATB-`1%10DVWPDH2ab3f]gLYXj+iYJkCs3N*ZKgZLN6Zi<J`3!%r.$]J_g:3>N_M0rXU@0BElS'rDDRcfK_C-k#f0etZ%,fT[^]q18;/%2^%<eZN*$eV3lVE[pS]ZVg5:N'(Z?-$;TFCjE`P\ZmlFHg_YkA3**4tT!``)bk0`_4orQ^3Jfi2-g9\>hZ-/D.pAAS`<l\U$]KG=+=u%"6.HcV/t_0T5Ktt[_did^E+#"!p8UB$IeT:[Z<j<0[AE:<geWaqPf&ubJ%U#Ko4OLKfF`D(4n99Y$+4V\K#We*+mZUe%oeU@5j<Y%TW8`2,M/sCNPSqEIL*ITdBb#7!bt`ESNlD]6["rVp>n>XiA9'r^:c@F+PDb3.;-J07+ag,KCh'1l\]kce@,P?gVZK9jV'1K0[)N^%hU-1h-_lFC`be7lDq5F2#fp4?&P#&u-5=U:pF0Q)ccDf1_3\I?:u!WYI_bmM2%IQ_7AKu=pW^^Q''\sgNWgs^Q7!$[!^)gs3#:G_%N'u`Xp>F%I=1GKt@Q)YoHJJER653h[(dQiSN#W#b`^(RHB[asG7fiI2T#96F6U_$1N<'I#J_^]%U`8u[]:hP]!JZR7'VEhn2@;,h%5=KX)paEq^0n:Fua?EIO@:K9>]PmdHJ6N-q2c\-rq8aUG>N!=.>fml8P67Pf_Hk;#F:uQ'0'+;jB(q'6j`B4DoL"u9H/+HCiCj!@%=Q)`aPg=W@g<X$HB:Hkhlr$$@VA,=l=WcH;@hX5J<4%#NU7D`NlFhYZLiVD<2tGWuNdLa&2_PA'4bpc'c^2$7nb4L":$-8j;"sei%SddQ>Hi<k\onsAg3CYQQ+=;*(Hi6>>41j%hEJrKQ2@YR^oc#3?/,F-PmmsTpp\O^Cl8SG8Q0,c/j4Q$%hWs>HFbab#^qG3rqt7ko%:^t.j05Q$tGk_'f`e,dN7bEnp\CZcFmYN8O5CG**]mfr4knTIATl>5I<kf2hr_W@cq9O4mG<lJilPKOa^9M2)4`C!4krui&;kEbJ%^2ZUbK>M0.YK&-0]mdfGEYA-Cq1kjZ$iKeoqY>%Zi,:B6`jjXH`CemeI_P3dH"qs!p%,rK:E2)'rE_^<FYG3nD)1(@k$0pO\-MQ+%IZ_[ba1Zs$C4Pe;^(Kf+'0o\-CAmAjqY<Jb\;r<8]mfsiqYBp]U;]8Pr,22FEbkgOqYB%6(J@48L>M\$7>sj.=Hk[mX'\sh(3Hb;%GhRDpHi:h:a#F"2If?hQ7D"V!eD]H#O)NNprTm@Na8Cc=;ki18-ShPf3`.9S]mfqgC4*2W"RbsS^XXuFobp"2hY1&8mcNN6me)K[%C=C8uqDlD)*WE.fn)K=8c18Q/Du=!fo2`VGpKZ*mrB/<Wk(XdqVomZdqLppkIJeHjr9[\]41Rhqf2!)E`n"=F=_sm\rVW#LAEWIW%p\O\=gRY*[e9h-^*"0:j1;^_R+kMuhhWktmpYa]uqRI;-gT>p*/S!Z'B/Qd[<^6#Zq6BA\o+-Y:"YFmbhWs@nZ/IZ#f"HNU]U[!`%O`_M]]mft+Kn.X'6Jq+lJ#aYO[qGVcr?t:tJ6:eEO+(,%7PHjXGtnhpLA*II+f645+0H7lELO?IPA\$WhifGo>]fTc_@pP!g0!f`%1=oLYbc9gmZe.p^b8;I8NZ2-%OcO<od=Xa"Y7*T-BNj(^/D_Jn8=>rCK4KOXWl3-?`bntKmj'Z,pH;7<J*^/Ia'+Q"e'!I@j`YCA%pf3Q%hN&#m?f/h=ih9CSdF6:i9Q'O814+9DFf'Y:hVK2t>'nF5<c?F`l$br`f[aAdB:kN[p%-)fouBM]8H68iDu?'7/u5lFn#;5O%rE/W3V6tKqD/@LA^7L=fA:LYD4\As$D9gD)o@qsZYP[/3eG%#U^".UFXPftpOe!GX(["kVo]">#6@&UB>$P"h[\RYX^F3*3^$SDG%g"E]\s!9ne+69TPGSs1>AR>]=lhuYT$@&hcSlrd&WsAGL)YWkddiU\oiNg#l[+O\[M_8;K4*]$ehG/D?-I7$>]>/iXh_0"jTs/[D%-Xmj'#9n@Og[D1!$"$:hk%f$tPNf-[MiF-"5D.[$<mfd=Vd&g^*F_V7BQ.YEH`<n`_1&f0%ZX+S'WMrc8SP&!7qj>V]>EEG$m.mk%8VpSN9m\X`/%PO/O]W9:@O%?nI@'E&N>m7nB'F=4lm@'YW_[JCL22-?R6c8/R\0RAWEaA@:P`kYNU><IbsO$bfZ>IH&Y,mT$C4qi%3A3%7)A(,;qm<bWOQ^2S$LR8tTWioorOc7C]%MW^7.*Vs%7.U!A5U+8htHT_8]hJ)@5#LhOKO^%H?tT8an+/.N-JfRcqe-Pa8I35%ZeIi3f9bu&1lL2adEb^Z(9;&I($.-)_!XaOje_$^FadtI='h?mG`F(!UAHD=<IS&V?7bY#%Mms'(X)`7-_k+`aRCj/V0B'XR<u>I%r.=]qUBNjKErM>95$HrQ]PDZU72k'%..>Ar8MDI7a?.RF(!lbI10Gf3[P&A'#@^PIQnL=4)-P+T^&gT]9-sa:G*cq#s'@CudE+Zm%B>GPGdEaU?GoXK>kbAVPD\R5Lk(:0iJbgnHXe]RW.C8P^GB"Rp>"\@c=m><n)V:]!F)#U#nW`lMqT)]uMlkcVNa$@:SBSFHVIWjE%*L"'E?&cXkAYOg"h.5RNHRU\Rfus&R;W2Y>oqh:hm.Ui'L!DR"#'m%i^[P3N:>P@hWOJ?DD3kWqF`F3)pPP=A0^lat/6V#+L,s=c%NRH+n&-,'gMEKFdY*SSk@fQ6*Gq.[M4##LG.Z`J&]D+sgag[$2^q1(ZQLXa&>!=U%niF01UDD(uiE$;.@@fU3AkMB$PC1pq$_(3s%_<!"lnZL95Ei3-K]W.Hf<S3B,P(Pra]j!+%C2:.+n"%#4l<6XRm0_S'^,\(&Z/fEGjrR>/f(`Q3][$S4d-h=/jtsN`m4FK#%e&Ag%MUR[@[919?0Pn%=m@@;R=)r8b[C1@U(%uRABns9-f+2I6daAb?&Z"O2j)K:WEa:f_/#HKu31:u%;liOS$^%f<?8ju:L+[>DPe#pB%6JiJ^2kQ"=KGAEsd,=ek8nXSk-aTWAV>9bVo(MmE`tB#&R^fn6``?-)TVZUH1ZIC0r*3AmU>knO#f%ae<?G%o.gaYP=I4XL2eh&T%o(H!#ljGlmLVkZT=d!stes2D0&t5XMp?,l1l^,70F^?VmLSW^OpJYBJ-$pu])d?E@^hW-C$*0'AN245V"1S$`e0^[[Pfe>g>mY('%QE=Kj6lLi>g$SG99&J#?DI7)K,*2iFLneNZrH<)_eB]B3@9i3<P,4Mk6GjLRgLhLBeD1eqG'1%->PD"lE>fg3LfI4[%W3n"L=nu[%kUrK0HqSCo7kq9E<0,,HeCr;B@d3/l2mJm@4%h,r:<gZ1o>GZ8h11Q4@d3Ao-^!]gQP)rJQT=7F=0*()lPCheee_cS29uZ/4B0'H%F`A/i)JrJh09skcc<'.>lY>kS[W&MJHbR.>TA;#fJ'Uoa5uUK^Sc+JGCmg>pGKK)D+Ou4F[+)2&p/-5s?X)?Wrb_=RBkP"rr4[>N%\0u,Kj^4p<1TYj2&s%*FWLiI@JRe"ido^`hb&>=ip-ha/RSV,AAp_uWC8q,g#_.2EOGd^]++cS&"S#`<Y5"Y+JNJ+:S7u@PlYtL-%Z*m=[PYs:t8K*gT`T*/aa&oWNf(G@8XN!+^j<N2KgBH32]KIoaXZh+pQd]S#rR.nBc>*]_1R>(qI\JB&q+p^hNQ^L=MT^$/%Wt)6%+WR_sf/=/^W'59(\!'s@HKF($CSfHm(-h!F:FeLS9mQ'*O=?E<gW`$lgldTXC.^!8Ol/AAP#46+eohDfZ!,kJgIUm^o6YQ?PUp9%%^1S+>V0=3%;,<3=\rH4K*=^n<&t\_LKQ"#2bjogrm;(AqRDLV2rP[p:h"4cZl)T".@e9YdbkpVCEZ]ttH"&51Kd?%PE@J/_>CMGU%'<,RO$.mJe"-f)oq^*FC@p@>N*:/]ZN`nZs?lqn_>W#@D?gY&c<hG-`M98Kbp`oE=+'HI*&NmL<UZ_@G&fd3Bk\+p>I.!KV8f$7g%8b]rWE>r%G1D4;$1ZThNO[iX.Z%i,-\7.US:e-sPjB4VA*0,1@aX\s<b[TUoM](opo.`)&UQCBj=PVGC*N_:[@a1K$]4NeVa;VCG%Tm>O&?]-+0aC:/IcIcUOoSh^[V.*V+d*h=TW3Fd8[L-rN8(I1mU:s]2lE8@)Fl)U"/_jZm[XMNS<\+-hf42MeqD;.MY+6PNAbs<4%ildI)?Hl:3)qFl1=hXI;2ncQorP#NN9,>u[s%8^6>hF5Pa66r<)13u9)I"TQ.<]qj4$BMn2X`g:(K]5eeOI:QM5X3t(gf@;#F/J0%/mZ#g:OSV.BlS!Olop_#6Vu.P=PgG_*Ob*u)5KcM4[9Atk*MY\YVLdlQQUE[E+GPC2F=7l8i`GK]1.,;oC,W6>2B'<$`Co#9'o5=%T_9'mNib9qOQUkl6E%GAPaS"S:VYKI4,9U%4"Rig4,ZPUP]kifD7o-G/JHMRr+h<=UTY?*bL`@kM50?q'6C<%%Il=)4rCWbIJ>F`%?VCU(lL2d%!Q:/;ZO/nWF,pg<oeYd,#%f!*'S8^10`M`d.lZ@FQ,f*+4ISC<>NfS!LaJ#D,Q)V"D0`XGAruB^2"@(XCh8?jqh6'h%16&0#X)mo3WijQhb:D]=H<0m)q'EZR!*TL,GMM;[6emEe?cK-,QHW+u8u:P1>j%fN2Wb5C;laD;rNl)gd*+uQ_$72+!kCk=oO])_%(fstjjGblbW5k(ES`O,"a"e46qUPP4nj@\LHi4UL(%hqJNoua*/No+$KfpXmkL\p'4I2M1)9fF!;bmn\js(><=>J=o)Ne883As>K%'9VV0a$dg\$oo)3G`=\mI/94DG`=\maSrGKIfGd`q^F/-<'F6rUj&&*]UReN/@Mp#@d1G;#=%Aa9-:nj_1Hk6IZmbcmN!ZQ0>DPc%:oQ]D<(g\G07V0(J!2_f=]uhL]h[56/lHRra[t597^\<\3*6%Fr4!i!^N.hhlA06:M:a7FKVR,m[09<;&Hh?cO\Cn"WXlJQNbnFP%p$%V+A!)("XMheoq8p/\4]\cc98Oat_$ZK(#9s$^)H-/gUY3[K]mfW`;nKk=P%oI2g[JIKLfQ!9+)LF+T:7Jk'DJK1P761Z\@C,6%?5!b`:*lqM7p*+?F,aVm_g$"mb;M/FK??3eLJMhqhd=U!_`jD%F5(A='k?iOiLt41q>2W%.LA=>T+gF&Fc"c23$W+HhF@51j8N)X%5(C!VWeFL@GDOY+T+IO3l6*A289[t^^="4qc>GK6Tn^V4Nq^HhAA`I(OrnLbh!?`0r+O".Ar"!7I^J(5Qfi!#*]Nse5/&EScc5r[%2EYl#fL,5)%?Hu!/FX<gGZ1jhDD"!D:U*(PA-\C-G9?NpF4YGO'VoPN8ac,f54]0U?2D/0Zps6(7(RFXcZ+m/kES).N8J7CWpi]n%[XZP6;PeL*Wq!QciRI+qm.VY,nWJ!GpjPC%icNQ#4(XJJ!2h-oDqik.o[7o\O1BSMjitWJHFN/BU$gbn&Ea1L)2NrjJiCH,*P^.f%3@33.)A%'G05j(g9@+3rW&.Fg?OLK2kL:\lr+2?_l`LC(d#;m%Z7bZMfXbCfiGO3Qi4X=^?$<hUbT7q41iEl[eb5EuVB7jr='M"]%JER][\@#[e1san;-IL(;aEIE/nb/OnPooV$1M75=D+`Q;Sc*`2PjVG0I4(]9"C\,b\=]VX$=E+`T4Z_0^>jRAPV-OaQHCp*\X%K6%9[GPR$%U8JG@E5>,)<Cq4?0fPnA&.VC0CML5IQs;\7TKtP6m0OlIP4t]ZGcZk-9mL.g'QGPZ_jTDj!@4^d2l@ZgS]/q\BQ_*n+'&%0-1"AN#2@S:\5>XdYWtD:Ql+-\'4T!\)TiZIP=:Q/&>D75NV=oH4177l\c$:#QT*Tab(^;#t4mR"Fr0"Y`B%;/n%6QKL'E-7`U)O%--bscE[3E].F`rXNB%c3%$3O7&TJqVInlQVIqH^b<;sQDE@_[>4PqeT7^qj=T#Z:jX'^kiK("u"8XOe;?h,>Vp5""L.k/NO61?in%6*O\[h40rbT,hTn!b*>;"MscS;*+D5l]m9ld6OpBl,*`e1<A*lJ[#!IZr9/<[;Luif^kqAkEDn^717`%7n::TIE[JH<!^SNIEWL\%7ir,ncVo35)f<Nk_Fd#Ca4qfI4uO#kHlj;i%'MiA`.@P8-Pdk;jMY=!iRGe3)*HRQ/3"ms2^=+>_uf7i@<$83a9s/%T0Eg5YG=<J%0I-J%`WDWlr<8NTCiM9%_Pf7G??.oP2_sODbdqJMY(d`a/C+_HWE4LsVBJ#K>oErkhNO;_h`(&adZ!aL5U7an"X7OI:H5^mhL,1U%JB5_N\2OH?phT:*<kLMPk0K<<cjFu_c(>60$0'Rub)f(Mm7LDMc6FDa[UGua$]I;P8'.h)7ICm,3OVdgAhWq8[uK2PH_J`d^),u@%8$il5>AgVtYZ.3<gSH4a"]t<hDAp+X!YQ"S32-l%q<r5AEWcWa/BU&DB<ZbC-"3H[-&r)"?JcR8l>X=&eo,I_`erH$98?dcht4@i%%Z@O>%(;tQDk"Ac@&L;5iq*k9L&4BlVK#]b>Qd]g*EIR2)RR<a(WEDM2Rc^=UVL$;Q%!'gS@ne]..?UOc<37L)</()0Qnd>;+^.S%f/T8Jk\s9-eh(]qqXA$mZ2Jp6HS:n=cSR.rob3-f]9#l3Z_B(;a7#oX)L2+SdS>1`EC?*O%4d2-Re/kAHs2,eg3&.i,@;\JYE(,W%P-&droP5H-eV,C$HI<(Tb%a"rIbpJ(TAQZarjrRJlar@^-S>ZADC`!O8+0D@p.]f]J'OF6iUaNr"_M@lG>.<b=]rnFT!h[rX-lCo%44;<bH.4DhLj]h<fJ.+[qI>soWm7K%JZY!sj7XCWfoNH3V""0ih_dsR"PB5F?`n9>Z"/,7Q`=(:LK?LeW^s9NMS*Y^n78_>#!H"Z%;a`=iVY75<ZUhDFq1AlL)TVnp*X;*l_mTIG8hg*$:7Qu%_Bl:l3:V(7'Jh92?W>6c/Rtgu#ba=:\?=%@oYu_rMGYX_md54;>DLr2%HJ3[a1)O=_CcV,8B2CV0_#6\0iC>\G*D%Uu%>dP#dK)OiXf5(G*`4QKQplg5XL#]O,XYU1d+jEOL^M(kS4n1:I6!oe,No#M&P%tI%nAf_^"NjTqPfXJ"ShWS_[uVgdRWnj(!m'>FJWIYIfn^NV>W/2&F%/95p>'KUO8I2rAgb;,>E*2$]<Zh;WHYEA7cU65hdO(mp>'V.%L@LORVJokqh9G3G``oq/LuSlZoG<.d@?:f<1t_='FP-9h&/e=DQ/DSrR6FiYQ%)B7)p[7@.<T8Da&+#aC2r9TNPl2VI5F/r><k6S%pq:\X&OGNsZ?3%\X=-2\M6k@]A_VEEb:hDKENMiUIXIR<rAN56$VS1.]rh82?mE.eG+GdZn$K,fs5?^&hc4SJWp>B32f*pN*Dst>%q;@<h[tR/n6K"dHZsEd0jhshQQQ^?D-uBLg6QD5Z&a71\(Iu(+2;JL!?gdqq#Q?o0!"V@$5*drO>6JstM3#q9"1q@/3,Enl#uQdi%3>h`U,YO.pe".Ola8ldiS$*_%o26pu239$b:@?ZViV=kF9G`U\0u+/_30W:oJ2-2?f#!3q#6t-2a-*ubrq!B?_Qd%.+@M^n.(,C'%c0)Nt!jso;\1$gsf+[dQLE"pp";G1uBg#7]h<VMHE<e=>h<Xa$SB,)AcsJF^oRMhCl]!1)*pfcNe%KQm?a!8J7XeE)D=q(2ku1m*%+O$_]4Bj/Q2Sd^KkiY[[/Gj]GdAJ@[C].=GDY%7g*mmec\[*6H''_85LZ7Fb.nQ"[FuIjt(tJ)@l'A#A*rR5%BX(JjL,WhIdPnM5%%%eej>Mbf=:GnP(e_.bODe<hcn@*!Nji-8T&$Mu@WJsp<C3f*KqJqtIo-[^eT!2aOH]%Fu#WP,-\ob"U_ouBtF"=S&7B9Z0^TP"#%_hIYj?J!cld5J[4Hu&lpk<UcP2qc1S]Oc]g/?tWV)aR>XY,9"bWDOCqk\:HrOWu>*dFArjqMV5L6rd1<JWum-P'Du<F`O?XBso%u%[H2ABg"ab1FfJE.Z5dgb%NcafV0EPEc&)V=@VKG\_RUTJo=$4<0#OYe;]D4\eCE2WE4?ek;q3APN3XZcVY#fL^s1+q_#huR\$f_.%o1uf!\7l8u.hA](lKmfLN#KFC"=IoF1CnID*#t+gBodmZ'mFXI?_<*3^71F];2qGo(."g9d6':%?""d,n0gG/%i<[7>].9pc8]]*%\Dk*[n8OeU?]gCBjPf+S1(aplS.TFsA&<Y$IAKWQSla'fdTug.H9)Wr4:=F*Gd)_>0jql8%*+%GdT;cZo?EX!dG;LKX*e059I>Fj%1R@ZSpSR(5/n,?nTI]g>81h,!59kb^#`Af9P_:.p,E2s0!9Q+-*#jlrj[cHeNQP4H>V\&E*:UtBBOjXW3gBet,O@037gEH)Y`oc[%D9T8hUO-]`7.J&Nj"-0?@@!3A!3@\Z[pps@H\1b&JHp]9V-?QIBFV`T&51;DjhS\Pqn?T3OiE+UJBVjZp#1SMfN;$"JF#*3>_B$C%rK;eCR0AmtVPC;cQoV3a`<J%1VLs]'@XTf61aZ]f?6*QFk51NQ2pI$?+J(P(NWjNe?ns!W<mkh?IUnBfFY\he*t(0i1MSTR4/hi(%%nhf`7"7R*D'5'_V2hk"c,eaDpu:5fW>mn%);0j8HH[G(E6:m+3Ki;uU.HAS7`NVfZln*A&F96\iM"%?Hag3Aag-FK%kCF+CZaXB%\C!$4V`16kb4AAV$(p6G>tg<3&%l3o.lhbDEXJF`3CiHsdrY;E)15g8=o2A-(?1s`"Tb`Qaj8!nK:MJ3cE+.]@(QZFOe9)=XVE7F%W8e:QmR8R=*O<9&+0rJ".9hS/mW2\H\5)"2r>2rgAS%0?G!E'\=]=Gqp0c$(5PBmt58Gi>/DnngIt$a-DabiT\69B;,Dl3gG-VA"%N(:fi/&+7o/_HtZ,g0t!L7We(Ch_*L,eaAWV+pDd[KKE%Tb^JgjgUdjS7$qs]=XEo.B_2ib=G1Tj@Uo6@PR!h*Pqi2V5;uOjYBM3%bOLM7-n[+#.49iunN4?=dt>'IbLM&bj&.rg(m"?8e%p9QStPelHY0g7@GORJIFg^:n\*OI]H;-+*QJ)$g2nLpm1Q/uS9Uj!:T[:/%I/:R,+t!Xq;RL0/8U8ngJ8QDJU-.=M!Q;T,hH['C[gpLL^<6'AR0ia:F^t*Q45Q;!Z<I9F^!O9q>8]"Gf81+VjPf-cV)S$,%er^Y%4LAkoHe1%P4D)Y_T2dL$e!g?g!o85Rf.8lDUMAr(C)<Dm*1&9!X6%p^>N+r.@BT14]QHs'oW[@85Lo=-9]?1Tcgt(DNBFHZ<'AQ'%AOidrhum'+o2B/@$(dgTH%%6QrN-`4]DlLg[YjA+Q0%1$Vp;mZA'#ug3H#>@H]UOC/iMRUSV,Y2NIFQ]PQ)9l&"c<T/h=KBU?h#u%%]K]:Z$Diu/uR\689&t$'`,^fo53.HG&$u*j"$45F*MZ7>E5o*8`"*EG;VRFY`YMSDY,C^507GjiH%\M(XV'aIpudKlSp5fF&6)p%:b``X1!.?=jnT_kfL$1a;:9sRZ4oN^h`ja'3g;jeah!_f,rHdr<@scda\'2dPI"Frf8V=S45eO$.@jHI%FV>`1p&'SG7aY*W]H%M%FJQ:,fAl`_"`R'Q3=197cQBu4i5MZY?qa6pZY<.#PdmmXcs&(4-s0kjg49el.ne>p!dMM:Y@(E/!B^QEWhldBUUU'+$sg:^e$;kT%13A5H*O%@HRnKNV27#2Gek0]ai#Ta"@b7k[lnk#hc_ob]fA^C]PK<IuNbhRrE3Z,`A6C>SrrG7]7eXGb6t@7IFB4]-)qe8\BM`_[%$Wn1%rI4g.^QJII&eWfB-(W<G2QCI(8$n0d/Kr"u1&o;!p`!B),d8:fUhnbHF#b:_QGuehA40)/Y#(YgBdE[i`j7+$6m#(^VL2R3%S+5=*15+BOdjUSE#HBP_k-.It.3,KFdhWEFB1;`3j!kiN`"3@PE?'S;/go_gOP;;q4m7W8n4:s&Q3beBS`$DB#\&@CPAMJ\STXI>%^t%n*(9J\V'Fqi%_55\kKeV;)nWQ.<^L3<<Jd6c*$XYMgME6I-/,idZ1eg?>U"e(G1SlCJ'm9':1H>:9du]R`$qIJF?0fT70b7O]%[05uno)7b@q!31nU9?.Thn-moL^u'\^S4gOILZbC;=B+a(=u"(fSFU-_3V<L7,br-?ndBgI)k;mR5+eIa`n$NdCb?K74jQAFBQXi%hb;KF3A!h6(5ES]Va-,k-;m9%.7QA!)*1E96fmr^?<4@Z/fio%$*bV@.9:kmS=,[9CO,P[6.5>WFB4_c<hGZJ(:17)E`pmoOIYs.%E2/Xpko?]*MbK.O.kR)g2"Ubs#VodsUfA_5jY8Jg!0\rjW64;G,2BOF&'7H&-o]V*5>"s&\M,;e+i7HkEuLsh`@S+#>UJSQ,U\"*%q8/t,%_2@=><KsS1tM[H4gHC#[o$c:T>;Z*.Y+R(TOsT`XC_\i/Kr,21r#Z]5HOS)l5$AP<Z8$pN_W6#EWjYe-`R]RlBqY+,)+03%6%%4gfpkdYU1l1qXG@5(O'qJ/WZ$h"pLIm4E7DHYck>gs_A)klo`kp]7oaDg*4&PQb$>:\"DC;eY!5g6fYo_Kga1'U!`uc;SX'9?%#f?6>C(DasXd\'DN2:K944.cQ;%>6]J"ZAZ?9HN+-1[:W(0@Y-;bI*Dl@SHenG)=FXNUXl(7GA[7MXO<X!N949ptl=/-7l+Jo^"<%XKD"-/XOa#H!B=81sX<YQ";ARiAhdLU:,(ti_Nqo`!B>r0GM-+_ZIaO2$BRT=m"@U_fLl.+Y3Nl*e2">F>ec@7(rnFA;bbfM\Rfe%b<iK6&)ct:ZJS(p,!2hJM5f5,d4A!K-onR:/.9Gr5Cgf3aF4q^Lhn<*cK>V*:R\,"A@ksk'!a&&qu6X;Ij=hr,U0PcEa$n%)q?d%%,ML+mQB5OKR/c2Kr7.n3Apsc71l7^rXchJP0Be`G[#Z<L_9]pV*]Is+pi=p(O#a@lJS5J.K0OlTO9XhKh%oRO-?3'>X!Db(L_,Qo%'n-LF+==UCfbX27<?9s,*""<Cd<`^V@Gs9p>^Cj'#fBpaY6Jt=$e>b1\F9a-nE#7u\oU>J9:t;1U1qh\5tbB^?T5&_*;EqN_GSX!%hmM#s&EDfNX!N94N<;D#KeF6IFg]2h?rqgkiRAM"*bBd!F')OLn?c#2I8ElR9k/Uud48G<<f06BcX7=BF]L=N/ZF$@$f#?.QEOE<%e?gB5S3L0(jE*ST2gDO4U.K&&PX1U.c)5W.9F->?;`NYbQY-)O/P)0lfrC,)3a5^+\L_JH85B#[f,712WgpOsDP`c8@RWY[W7a<)%-ZbYW?=ufm,t'GR$T52"n:50RUYAJJ*5r[1bF*0VZfuM=:uZM`BQK9*`!K_pmZ,j6:H11jFZr<>C^E1?P\KW"0Go'-Hen72RXMT'%dpscJmA*!$FZl;=l(jG^=\XThVR2XFR;Ef)\!BJebhj%27S>I?ROfVn%ksfl/8'ZNd"?DFVW0MV7GpqI0I+6<[AAdsD6XF:dhjGQ%]PRsZ+GsY&1DkdGn[[og]!RmD.X.Q7&gA>b^&Nrc6YS@#cfEZFX;'f0@c`uPaU'J\*qLWLLXKR4c0fl*9&XN.@FGkI*+AR?Ons\k%]VDL884m&7>idSk=ou&UaR1.L5O;R><ULVQ<XMp=$_`jdm0LSs8*UU8l<*.#WBq9.Wa4hq"@u#oF?`TKBL`tR8J4%a7&q`flDQ"Z%(N&"%F'++%?uYdsS/*;qJnnrJ'#9F&])<Ta!Smcj\7o*hBfla&MH!ra6o-MJNM4/11)/O5_D'tF?kL<_8P`!)c/?kD$k+r?Ma4VS%beW\%(XC:p-h-m=*=Zm!q&[>6/a=''<j[N2$cW*0JB-QgIM[isCs>Kq&2r]&9+qb,Nbea>6F$P$i:/b3haJ_54"DNkj_`:GQH#'S%@RWr2Z;Bof"*ja'm!"SJa>W[tRT427>*d0jm:&LWaKeY/rr[NDea2I2Ih@N<)E7OtA\$K$coXVY+FaA!5F'_]IbNe$k,O=]HX-LN%&K-0.IfPBL:!<dP/S;SZ`b[c=/G!J0:lWmDIL_8Y7_&6H(A$?^*T%VP$8-SNHGn-<iB&Ys3e(?>_d+(^&odLOeds"7n-?2ejas>K%1Xdc$/\/H+RUm#68m9532logqpgFTJ;9s7>[I-*fj5[/?-%Hek"$_Qp0,Il9[DaY*=+:nBe.Ua^AZbrQ=Eliqh<!DNH>"5_K8s9k%'"1[Pl@0"j!,&X<jNq]fgHqF41s8;r.?]kER'TFcZ=tU<o=eg:JS9^QQHuA''h($*5\:AdF61hD&$Z;[nflQJ3*3G?':6h8`<,+r%Nk1ZZ`B[G%L7N34c1DQ7MQGtTk!Wg;=Is,)dF4PYk4hV`*%Et6#@sZMFIR!1MqEVl\WM.qS%`JB-SCU>2[@Dq*V2/#(?f#<'?rBk%NV,A':M^@7CQo_+B/&iG1TMF:!*X8P<Kkk"B(FGn1IITTEF*5lp-_FuRgfJucD>T>Y4,b0>FOeR`dh#g';fajAVufsaiDHgk#bih%3RK\'70d1(6LI@kkC*U;cZ[f<,jdG@)h@!scG2dadL:tYq2m(Y'N54`iM(*Y-toVt;!C"ZW-LRj:1NDI[%:9?H]"&_V9C1jp`cQ1%4<D:OM6#T5)@\sWVm?T-[=j[\!XmEj)6\0_*OW,KOs:PI2$^@MZsoEC2+UkDM?7"$\5!.1ZA9?'Z1T$$L;\Uo5TJ]CV4>ho>(ft_%.E`,?UQ9Ybc^ErOW$"tMqQcjSKPW86C=GME@,rV6,*6n7O@#b4/u+QETo`(5ZWWQi@.n:]s/\&Km>B%^1r)@Dk@Tu<N-S/q'g@tI%<c^:Lb#r"Kq%U/ZPQX,RpMY!A!S=#6X"p-`3jbZ?[tFi,b$+=J0F4Kn>HUAF!cFhgB-JkHS;C!COd+iIWBZV.b\D;O>uh;6ZO<7g%!9XWfi/cA0A/fJeeJ?EA<XMp=$_`jdm0MF]O459&0Z#;`:KCL'=1J^4Q2p:X;s9:l+4`Qo.X-dc.tt%ZKhtEmFp)7J,P?icdW4JA%OXF,8/9`\T>69&s$irSJ76$JJ=22g$-8JE.QKg%&]P%\)T>MkG4(se7Zjk..&=O"WP@eS9QGua/AJkhmG[VHZ-a3jp(V+osPAQcn%(_l-1&OEj_Edf5\[#j^VT17fnoNf!6jP-7N>1=X!N+`M8(5DR5!ft*Yr@S]p+t?at)EF;5T;@C!,=f1mAYIcV#OqL-g$^*s+ek[\%V(1/Gr[a$RgVo&9OCb-<rs/&g)qj[(&L!n3&J^bZkKhR9Z<aPF$!A%$rI4g.^RG,V]ItJV9&o&^X"63u$[QGBpAZ*RIf]F`Wj$j"%[`,#r73=bR3LU,'3J?Ph#I"J3JR+r'ieFniQsGQ6AaVMiWmNldcf+C1F@,F6O<[uZg+F$6*l*p*JetO2rYu]&$W?`AVCdJ[Y)?A2%\G?@ZV%?o,"'Ben2`1#]8h,EAK==+_;]n\2_8^Di6&MQ)1aT?`'O?>f<1<B4b3>i\.^iT.3j7iP\t4V[?C%=]dC3kV1XfmuV`N,"%aVm`JF't(qojp":Tqj,6%KVj$=[&1@<fL?*6^R<Dd?()4S<UB(CUnZrPs\Oji-;,5/Y&,,8<O,'Zfj@<_?"Il!WXLjJ7&R!FX9CU%9FQl]:==/<G_m$(Z=`5S,]I,kVfMSQ97_*pDeed0Z3ZOYWlnjQ0M=^!Bj%d,R=nDa<DlN@j;^q:@7LU_S:N^-9$u(MXso`E4q.d9%@9DHsJgB$"'<tDd%Xo0ad5<mhQ)3]C5G5G3.%"`%[%chG>[^CXEC+!K$)j]+#"p(TP&SHQR=OlG,ounTGs4Ya,?5qD".`S_V6rit%*fbdSX:W!__ruD!95mc;_Xae.jB)cRA8$-apfrV,i/Ejc\7dm,Jmt[(ZP5tt9TaClOIUspePV3ebF7gfcZ(CPGQ__?Gam$UJh-*c%1A<A'O/4nD,H*WP#\n55d&u-I=_--UJ+jR!!SW:PZl;2Y29n8Y7:EV90-NX`5`7CoFQ2unJs#cq@58lV@Y];=?.l;8Y?;YG[X=S@%_f]J\>16^$ZYt<l\%]aWgoQX-&*h24R-dP-]sa!Ur[e_2]2`]THCc-ugP0[1k])jb':7\PV"b[]CB+8(r1/D`Z1g9t+3-SAV"NW-%i"%*5Ln12n>K2\[:$r[V&<"ZV&c42E>qdp%oG-XXaB^Y@4+M;+?Sr;2Y_`dcjJQ/0,Y62K)&h%ib*8?s))Z9u)`4Q#_k=Y!HpGi&%!YF[/hLmS'9GUX@H4;SJAegES42KFR&CYO9-M_B,1g'u@4Y,Q&8nCVOi2`U(`bd!$I>g>8`o+Y`\9f*MO5kK``'jQa"MZijE?Ss:%4V@:mPj=X:K:=Qn0p>'q6d4`0U4SNc+u=U?(=`jm`Y9pqRe>\U1ZXlOfElod;/KquUVtX'Ame8g05>nTQ2esOlT5aWZ5Z/nX&Hp0%,1c\MY^o0g&RBt->RAOXZ83se[GFua2R:(GM<]g$M98(MU&r+4`SaSOA"%mVEi:*Y/%QuTLC0ElGu:NO\_eu(brnH%'p6<`<=2`b%g2oDc(,dU@eB=,0j\QPIUiIo>$:slpIKtW8il@F=,uL@q<sd`hW.;8go3tQ7.?m7Y&]:=uR+6OWG,Klu>;<_s'OU_g9?EJd:7J:9%(6q04MeX=i7i'W=I%P%Yc+qnlIMq4-j&GftL\)T)rWE.piu)A_.<]c^+biQCIV+BMpR4:N_S>U1\*WSVh;-5CaSP<WbMs`8#I`es%^AfQnmE;E!Vi?-Lk2VprO+Z(,Qlf]2rgt,/nu:edH^oofpa4AJ+SH&0p/f!.Y+'lgHsaf=@QqL4oJh[*dGk!;$2t$"lc'<]jcik+%_hn>"kXhsAKu[NS8"P`ZM=@*8hL,:?5<-3p2daM`:u>n5T'o8@VjDen4'-hYKe)%fbo2st-Hc48I/h:Fp>)g$4V%/PM?ptB\Vn3p%AX=U+K+nP6FrA^i:ZTd@ebX2O2miUn:ULYua0BpU[f^ssl8pRc#=Z<'/fs)0],[g:Ehm`;j$.ig\?"?W^JY#FA8Y]D3-O+*UX1Fh%7>eTJOijprFt)8RCYp(Jhf1H0R+Q,1)FYX1pkC!$7dj6n?&FstC(tYainH-/)+?B1V9J.35Xl3PC*#k[^7g:`adW]YP9H3d@WiXG%;8R+$m1XE=,muM4GZDuJUqSd0nCl`)KXcr%b"47U#bS&'D,7(l0$J--j/6L5g5!iV.Th&HWO]2Vlk4+9Ud&-Um:5s;*:g9b[3O&*%rig'`1(2=_Hl2E-D;@Y5-$X3<IVmj2f\$YEqKCBR9r%eQ:7D#e!,+H;#n@%3>l_VInB"#,'QE@+f="l]S+^d.I5V5*"qKJfg=T[4%IurUW?XLh?2Ws\aJA%Y")`!C;fW^uaL9'ik)tp/s1AHJ1^N!r!ir8HK;7#<j7'QpN59V5tF^RID"qLo/%>@?Qc7S*is.02QCACoQ%s3k_Hg0JP2!*t5Q$A8"M=Ci?SQfIQ#.[;+!-&%'2=5E:9=0SO(IQ@S!Ua)^\!hgCUO+i%-qto9RRXW&d^s!\K6a0PNK=RV,rW^g4%Qb0pH]6a7_MgFXnmZtMC:g+M``_5sb$>]4BP]J%[NsibL_ETYOFgFm\\044h(Vj,@/J<CHkcY[lh+fTnX2*IZA92[`m@p/99*Gpf%#.5`&cQ\=Y$<@_O$q*'L/pGEDJ;/g#pD#3,)/7Nc205-agf[35nOdO?U*So@^GJSp]cKR90skI'>W5'5r"=>"`#d@ioQWYS"?@-0%]SqMC/rRSf=b$pb`7p5NW2lccaqCCF[9=jU;rRP=hbD<`0>I*2bBRpmda&)8OIr%-I:U?EWK;771mnV]hDJZ9affc*B?dNaelZtZ%g!)'B!t-^'XbAdI:$ckun'a)R=E\jJr%:K%a:V3gr't!q^X0[I.Q7%>O)oeeH@?k!qc*<*ZZpUhlr*V2'`K5oIo5a*P+QAodC(-h%3ob5HZqjHb9C2scdC(-h\mh#bDe72k@[g+-!NNG5KbP0s]N7R<?sl2M(.$o@Qfg/FI)J,?=s#R$`f<]5/IqffI#4&%@^d7jf$/?X%FKH?QBe9PT3u2aPn_;X;*RjK6>'%Qn>eAn-Hc"!F?eb9a0NA%D0b*k#o/mPcJ_;o(>B_10p#)%mAldR5i4;Pn%oU?0'Q_4kR\rT&%3G_6QUT*dj&9u2K"$.&EG/+KR7rgO^;X%d-Y2KWVPMOtY@kjh.5H1k=Z_iT#kN$7_FYgm]q&([ii!Yb`fB4LOo<0U-.5_:$28-A7%OL-]`qR5d0buQ7"-F=a8a[M>eV<I>f&GaGYf/khA;Z0Eq]:!GL;T(J?6J]Y5#s0ZS<<\cs7a$\er+cXN9$OfgRU01,Z*a50r]D9P%#%kpU2CBQd\b!q*aGg/J!U).)4@g&[;Z-Mne1GaSO#7-B*/a$8'm!an1%`8Ha7W<3@K=#6h0.Pc7G=XLG9d<qb_p&5=LTr3FDM)?%;_9%FN1Ce8)lA3-TIJK`X0m0,o6?9saEH[r]oV2-puH+,](0g'^W@#t1;o@b^[9+"=0*Cl)L1pD`8_g@:&!]"haD^S4=<kj-R7\-%ZW!o:*#rghIKi)O#8$Z@%,gq0Rf#]"fDe]MVAi`n!3UA4W<t9r!9TI0"/KEhd:0(A8A^!WqhkRB&o+#=rN$p!!X^3Venl6HWTdU(%_1AUYDi)(:R"]Z%$k1]/XIglmM9.\$104Kd<!n_WP'iJ`/J'dsTV7uks(.,cM5Lq0-0i;W?<<Bqc?3p_mjS="/p"Ek*sBQ@asUeC%/l1iX>m1!3Aleo,qA^$ZX&/hE7!-S*dkpr:+u1kOh1j(7Up\I;kKt_<0ftq4B@u6$%mP"IY.8Xp$bhE.G7ih#KKiaVmmjkM_:Ysr%8F6WaFKdq%%IA)5n&$Bs(ZkG<Sq:dJ:WD;19Udt(4HB:7^b#GY'^smc=qOM1^r20;Rok`Hp`J-9?^0PU\%NO8Y_`k2#d=X.3"#]%%hYoAMhRpHTh`n5k$SrF.$M?B8rr/)Y2%e[lQC&W('8bf2XP01@O$e>f3i:+QhMFX@n5d5KTf+@JJ!!"/din'$jhqrpH)lnd&)<@E%N_2e0-ecMt9'OlY[E7p`rTSY&dG1D@k7GlIqS^USlMU$I_d;4^C3]PS._?Co*2GP"Z-2X&)Wnr0L.a8%0jKT'o@@grR:<Ag/N(3=%.NYCA]+h72;P\>piXJ5nhItXW7M2OQZ74sV<8o:c_'n;3MRZ<Ab#(12'^mGZCUALue0nd8Vo`B^EDYX6MV&i\9+c@s?7(S-`'K5u%^NF9*0qZ`JMO9c.`29'F;2K3>@VbTg7GO_1jf"\TMK]c>2;5]+C@j2&UP;K#O/!'>:rClF9np1"ONLET]*oc1_<_tn((\LQ(A!l)%[lB>7:R#71MaNEk1)r^7-28_HC*1jLo>ofmCWE-r^g['6A2Y86S4<KnK6JJ^);a(#\)oi7I6Je6@%"c7[sBE5I523HnS7O`]*/*U%JNl]pag,S:E9d(t]s\H1%^u3t)[K(ALHaU!]Z]4D1Aq)do$qUg5*&FjRqal/e,4iHq8r??R_Q=?DsAs-5KN=5n$M8)#VB9O'sNW5%)(#Q`1u;CcXU7V2I'r#cTDE9DeQ]!SVehg_.g&K9Q,-#*68a]nT<p(s9X5R1ns*#,&h6*";Ge&1%e:?cX'+kU:I1p3L3l@jZph[F%mp*_X`h6Z.A!.%);Qh4-o.D]]'p.'O>-'1\*g*41ENdaE=@9HlE1^CYia*Kj\Q8u4mM5$/XjfeR!oe/.DV/$79^#QB+C9'8YCP+p%b*(,TDLg0=%&WYI<o03n68-p;GF&gEOe.G]fBT[VE[QRHkZ7tVoIDEIGsf]"#Sr2#TO.`a,;Uo`'pXf[0Z1YW>dY^a`@BDL^[ua2%?Q!DFYAP3Q=/[R%RMW;fhb2?>1,u:0j^'E<SK(AdJsgr-^Y5UGcG*P<+`d`>cNRp')OS&9R(kL[!.0-d*V%?"^l&nUQQdKHLaOYN%F:GIsRrs'>a8\,7Ao$qs:u>nh=R5\H3I[=2+(XjG)1K&4q]a,b0RRs8?jLuf@VKNaqdHc+:V:r$k'^U7X%llOajXKsWH3$9j[%^E%?5C_E2.;\XZ0Sa9K=t3*0nG#[UpOZo4s)mch:P%gmbp.PK527]@m=5k(=q+"$^7GhPbTe@Xn$*nPEZL:-^E`WX\aa=KU9k.(V/.4%<#SM)\2X'$^30[pYQqEKS'ZI(PA1&!^!YWLXPMHPBK^ZS9=8)gf?L:$eKXkHOShj.?*2N2`oS.]$nqHpW@^B(Mo9bI1-.BMdckD%%?-&5sh0_Y/L"cmEhqIO_l$7HDD+;lddQNVSo+MAORU?BXfk(AX-J^;lhnNa8q<46s`":c2"VSHqC!C%LL?A"e)-C9*m%q;0GOofl%IZs540N191&TraRZONNuq*oQ!Te.b'P2-O)M.ib4-YsFMelNBDq;lCuN`<K9X?=g=C1)3HgU=W4EP_ZcS=/d21oftA`.Jco,fL^%%2sMp#`BAQO8-s%XF'h0AM9SQB[;4GS5<8X(:#T4^q.3`FVP]%UcBj*HTJe<h,e!M/6ZnkbR8QuQ=jp%0#1X/Ijp#4_XjA>l@2.:S%gENoYjA;iq0Se7I9W<q4(fQOsVU6&SG1s$/E^#G>-Q-PhA4k+$baMk,[di/HJc7d(1^@Uts#)#Aa,0E0l-g(?dol8p76F*Q:K%,i%!'5r]PNW4pq/"]Q&$`'K.Z<Q2j&U;>1>Qm`kkf&"9K.Su<Z;KkkOK3@/>XfL$2XnXD=>.#flJo&gS%h!5E:BT'5rcmd$*qZ/k%ln%&Pl=&[R5,$Qi7cZNDQ^%&`/&Fl\]<J'Vl612_HP`IPC?$']N&3R#Es+%*"cfK^je3eC58R)h;hP7a$&J\W%S`KCK-hPNVD!n`DWd%YETj`NQC#Z/*"l!#`UK/RW5[<a`p2ObX$%^Do>h9Mt'8:Q')pC%AMFsHc(+rMn7a./a!Rh#l)`0o/;;iS2Z'ocC;YOen%8igBf]-%KALE*?*&-.1M\01Q#S]!Uc3o7db?ZdNi]^<%R#kJ=bZ4Dg1K(!3$UZXe!aE^E6I*KL^+gW8VX\b]U%Ps3a>Hs;*<EJ(WU$hn"U!R%(T$o/(:J-EcSjIpbkF&a*_4mJYSOu%`Oja5<eSs$4>A(t-J%3*rWeb,(SuBNrkaP3g=IZ`7+fG(*6%qca8M_Hmp9R.&IrU(J;aJt%:lhC@+"WO]PMpBXMn.D$EEu>B_T`8Z37R\j>L6VjT"$BX?fA$rE0K8,=1]De_j^0E;T$VG@ru[_aF&$,0KM1u3tD!iY9'90L3KeD%f6b)%%I9G8eWbb>26>[f2=1"LUP>+B;%50VYVE=Z*/)sUGY8M;606)Z=OetJ`i47L[u9^[fCtRL?@EV";T)iJ;9`AR1-YF.4r=f"%&QA!b&Z7@h.Hb\Mi[<d&.,m[Q\4\!&fT`^8nW"g%7ba9!N?T]mROgo?#:7*XLoo(:'QKK!A[3.A*0g6l)q%1fo/U9TLl!!<Cs%#C%Q2$(X[RT^``*E^I`29&1MK]c>2;5e.C_STYUPMW)O/!?F:rLrK?&H-b+c=p:ZV0hN,0ZWuC@oHgShY_1p5Ho1q*Yg,cT!fY7>c^/%]*s0G+81iq4O8P[]llLV*?:B-:M,=._.a+d2L$$IQf5&pF)0Y(h!GbZ^4c16FoQS^f-`pohLD)BrC$p?OMN#Lpgf4<=u^[&emdAE%7LNFKT+-OOKgWUn/`((.#9!O?2*5W`%A1ZflqOmWP\L-5f)0'Z>g;0\YW$]k_&m4_NA!6K6E"'7fTTEQ_(R?-jAu[sn\0NuYETl8%LB/ogKk$Eho!I%WLDaL*_[K"X)#h7<X,H_+MRsUF9?dV`?&JmhEq("RAVUj'R\rR<@K$6*n^0&1*e_CQeO9uNU@\bgL[f0?*?M&4%!K0fh?4tiuAU7&i6;dg6PY8I7!OT%:Z.Ms'd'])ZAe:eo)+<^t5VC[:U5,FS5!3NB@<YE/@DGKYA^SClQbQRA0)N,@_\T''0[u9T%0&O<sAj=7JOIt$?iL$14T^S1?C+b-4DAY5PPS^%K0OhRFC)?qFAu2:V)(LsrMi#<aF3U$99(BGEC7%:62=-'[)MZs]^.cs,G&YP-%Oa/(q.G@\Oe`rl`h<(8+_tLWcGgL?"MO'TV*>$HC1bdr;T>*74o"Dc`c?dZ0r[NWZV2,@*i^o"lco-Js#c!T!)rH5eGUJ4N\M/d.%QrMY$-Y,c%52eV\TEFGLKddg)[&*7gVP\uSm^X8L66<ldL.e#sqhK`-.@C!IHk4O?RL<p=`>)r!;SdY='Tn8_CYlhK,7.I0Zek6(%E]H$?G27GSYIsA3+p8KMj1(t;+FP$_1)L/,^\(L)O5#gD+\^%GWXJ&i.$jBb`NF^[Sdb[,RNu\tXp-(1??oh'rRCg\RQ(A,/!(Ar%P>VWpE_SL:")9\sIKGUU,q6fTM*Qq/E^a&L%/;9O$;%DWBTiWa-<VWD%f'?C@D<T@oQQ2'ImhMRZajk*Y>Z?VqXK:d)O'Hg&@/ZV%<fW('5!FW<Kc\Xn1[[`JP'i15%j)#HP)KJXh9psq<&JUbmhdXE;F-$eDpuP_VVZo2MKA:bHPfRL#1&a1`^nf'BKscmdC-nS%eY7Y%l7=1EeUb0Pi"%U<K+,LNP45J'P[gYZct;mO=E9tK-LDHEaes,c0R;Mn;)('q/n^T>m.hRuA7>V]V3OKTjG\)t>:([Nj\*lsJMVF(%0c)O#QjZe5-E:djeA\]Ra(e54LrjXdh+RDA/F7Rh@M7T4?&OQ]7Dp-cV@7i*5lj<j1sI+c&tU$p((n)]%aC=)1H9052\IhS15VA&%;nIiI6#)-cao-heYSIsP<im-RWB!#(MoiL_kt!0>F!!bn>0/t!SnGh2G31bY]>no;Ic@tE;s`GNhTd+=Bt):TLKto/ekf)@_5C[4%'>c5qdU87b)17ZMibmCaI=mR5%i`FCS9.GWR2S]Tj0/"]CpG_aV-7T6)D$mW\<E%hYfW4gXZ9gRIVHNC_TZq*gNHoN[it?*&$:Cc%4*%YZ+30ZHPMp-?aOB(Y9+_\4`01mRE&+DrltlMa""BEHLiDOTXjjrgMiBTmq!_k?[SU=@B"f^nBHi)"BHSU!cAIq0UL1?Nd1FD6%RUXU#?J7:SR2e1?<GeKGRRBaj%ZdYD;q6[YlrgtammFL:qS)61YSATr)a,?U;U1/c"Z'/kba]i>.5Y6a.sbpa7`jH+q=Et0)42HA%gO+5ckKPA,+#EUd%\C9HnK:7_8b$#;-4Wf"A7X\U.LFK=,Emo;b7HFS6DZE3KM7ok.opg\a>DNp?a;"=AaPj.d1*o%cnFUMHcJ:q%Y0)=KcJ1JUE?#7V\1^QhSt)'i.H3XNG`q'qSXG*-CsasD0edXp0nK+(R_+Ypqh<f&8kH[*X&'`1/;9'tJAK5^OK^G?>RY=D2C:Va%)5/Ds'*?;!eru(2;P1f\k]%#I9H_%`PCJZbLh>#,Wc![TjDUf*@?Z\-:L;Q_1`rG?f1c$,.VbId8]HGUcAS@4`<9)+f5FPAdH:Eg%=lW&lS.\LFVElODdpQ5<%'Z8V87ITIZa'G(i6&$hV0_U^.T$8C@N&cR0t4E.Ugic`kBXcE)46sngH9g&kMmp+,A']AY!MJR`.Jco%,fQD>R(K-YGq_:\+gSUQlaMf<[+G'"U%aICr)O3[\"75RCguQ(RnSm<llR(%?^0PU:5'GAZo:e)Lp2a/3/[`eeaQ!VhRtVM,+SA7%M&?m`YoZF*5M0tj.)igma&[lB@Pfea_C!jo./jIpj;4Y;Rt,,G"=LM.a^qum![!3o5'%5Q5/E(lG46B`q>rSnrlh@oBN*KP5I$)@%4rpDN"%VaB6\Wq(M-b>7>^lA;CbiZ@WE>3m0/]giUfUJ1[a_O1]@=(:pPp.uIRQ-,8AW<Y8oYDOQf0N2a`o@bZ)q%YM_T?hh>F5q%>J8V]ekimV-ltd4]*L/QDB]A8lF"&27Y9%(e@3iABln0;GoZMOa[e+#G`a3<;TS(S<3o6fNZto$gBZDk+sqK%-:SRP-,-(/XjO`p%EL5ZrRM\I5Pkat$n4"#]NH(_LM&A`ub'=tlpkC!$7dj6n>maHIVOUqLG8.;>g-3u''JV>;LeTmjUCuHUV7S[5QQtp=Lak=UluN"o%he:kHpcPU'@V1[i^GUAf@D%&dI^;\<<;e#]6&]*,s(!J:I25&nZ[L<.SU3itLF)PU'u9&31tuB&]F2!fn<T3D2=Gf3C_L$%PP*[Q%f6:-EB*3,0p794WM\Q.5Kg/,uh\^jtjPP^>o/ted4kngP]&2fMC^;Z<+%G"^j]r(?OQ#Y8dp710qg!"phGe7pR-#LWpeQj2ebm)i%HW,,+r'?(pprXg6gTFpjSUD+YEd+T%ONEn9OVLEEqCnqt>pJdAZG2YkT"*i.h:2LhmV4H(?1E."o0%`IMN;>j,;eYfd=Z>&ZRplt%=Z%?5T7[</]QnYnhnPhH<%J4H5qMo;kcOoMU7ua2<7V$KQ44F.aiS'\KUaY!6Z/`hC:e%EN#nr^MCk&=.DfW-)FW8]##VfZO<?Qf%PjJgsPuMYC&FZ!j?1H+=RTtXK;G^O%q4nd&\uWZ3mu"\r;)'a"fh_F`G(l)3%bXk'irQ[$fWGFHCf`)KAS9]!`5^iEUq:XYUhXoi%;?YrR:V&(;9L5:Ve5F!A8tmH_FTI]mC*@V'!P%DhdR3_GZ\]9DEq70(b.Ua[jqZV)S5ZHR4qD"<ou:um>sPKTQW]FTAhP;!VtU,K%[C2.Acg1;`<<U'p&9e`G6%hI"@9O:]OX7LiC_0i5dYGM4%#):HEhD'P6%8ObiBB@=>H3_lX9FO?C6:f$*S;RGFsIdn(a2,1U*6lB%UmNI;A4ro[Mr;0(D\?;pK?('.L>WD4PE#p`[EB`+m!8?U5kT-Zc4#:m9a&(#7FLB8]laC7h)Z]*\+[SKR?7rh(%l0O?87X5LGj/\%OYti=\ro!D["**![j2Gs'^pgG;L"3qhffcTC]DF#^^bB85*N#*[WWd?k7"hB+I:cn0]f`0PEPWScrQJ[(Updq'6*KM'\6Yd^dE-X%#<[(P)0.5]Gti=a>8K3]XUWmQc!3V7";f96Zr*&:<Vk?`JdB++W_:0I=oUXDV_]9,bYDX^D9g3Ea!GD'>98-.+"]Fp,'roMmK3/h%!5Ap2)g_kEkInH<[ULd7Ij;BsBQ7-Y;?j%MYTL;sUU=QCpi+D1b)]kSAJjN>;=:Ir<]_FNV4k:TVYj,r<:B>)9SQDs/7Rq^#.(]^%Ra"bJX-f;6%]bQa)D5Yq,rsgV?7X%$YI=q8>Wuge).IC![d!*%[]]<7b%d99s3KbkQH@:kAkM_BTkZna+gs"6&R-&0Loo;1W],l:%XP9*(>opXZoKdZBQC;;nn6.R6--u2B[;I5Q^6A$Wk]q@NDhj8"I!ZjrjX4s(28'L6s6XcFRW?"K^Yd6[R,*qqH1G-qdB$X/<.doR%Bt$MWMSWb+I=p./OeS0'jL#om<^R>T$r$qAADfas2lnN<`hb,beR4S\C>*^F-A-Ghp&LLf^:*@;MXSIEGofug1KNOR8Nr0Xr?jtW%(lkMFFdF9nUkgBIhVbb]TrGlj))[LR;7WbrCEGuum4c\(=]+s-jXG8:\sV]lR@4mHpmhUe0']NORQC%]`ZU^:R8QuQ;:B=H#-4"6%VqbK.aJ>O3M"NOSktMMm@57(?b_G<g,c&W71_AF*#q6[5<]&&:UZ6(D9VG.Zd?7AS9@GdolTWUdB-5F7m+C4X_rE^p54Rs+Z%)?(%gnff3.H3pVhn+&pO9Q/n'us!nBO[*-H&<UH-X!SD@q[t>8?Fj`]9oEZPgjHP8RQ+(EjFCR_aU)YSZlJJ>5,aXSm@K]Zi.H-n`)SE%5&jMir]E1emo%)V'_*HfDu2?KCnf=56>Il(XEi5tJ`o-NVG?>fS=4A!7XG1/JuqpfjKB;)WrWF.eNgue"[KPedTZ1?R<;JCXUqFr%@$?NNU??Eu>&dE$=u/0.M%%D=Z<I-kg)Eq-3CXH9=fkX1_Q+*IPur,Ta!d$p5U<HHd`7_$>X3P9BOF&FhK"PVRph5<WIG1.M6-uM%`)_LnSMS3#DC)"AIkhs<a#I[*.@^Vr.7I^H5mFT:)_FQhlTTrmk=_+lfib`-[)[/UIWk6jk1/^bjXs%ca:V3gr($0]mZHh=:9j!0%GIB1m;]@qY/@F*`4um,&9nZjqZ_P$NnJf&`TAj4!a;6tCa'[#`<\#CJkT*6*n7JK_PuB(D/Vi%U\2BFAhgaaf1RQ_r:LL-_T1af]%G[#aF>uso7;.bj.-;J+AQO)0l1\\cmJ&6s0H`D['[El2,40bXM]aGn%Y55pRs.U4r&qI%h-OXTs7YFL;a&2aFCpPcenLaj`MJt<k%->#Zu`-NEBs1kT/U(m&/!3?I([=2RSKMAPg;>cLKTeFRY+4u@Wpm,!=V005<=GV^3qs)pam'V9&mPP]C!u(:aBmOpi^'a@"VXi"]%["l"%jmM3+1F/ImJb,)#U=$c5H[+HP]R'!();ZOqbkL&u9Qjr`Gck,i-Y=DQ&,cci1Uq^6IR&r]D6HRq>OV9]qU\12P7G14kV`pm%8^`?kWFfO&N`E:?%d\26DdS8pHMAS<nK2"jp*SM]2pFMqM+n_GUWPb;KAR@%:SVn+>Sj)U6e&Yc'4G@JWF81SM#V*Nr""JUP9.0Y%FV.eA;<N%b?pI239rQ*0pciQQlQZ6u#Ho4rroL?R8C+;I@7GiMTcPT/s/^fj9CT(get-jWf#$"00RgR@KY=#7DuY$qs#\D7+%+B7%:j`"u*IR2%LO&a4nGeLKmrlBFniUW35o6h$qHsIFd,Q8/q`XtEcbI0gc*&5=r;%S;H1URX\j#EUYC-@OI,)uRH_,]"J&H4ck/4g)%pqauE,mf%^'Q\Z@Ms:,S6>Wsf\pm%W&hh4S`8!J;##?"r<1R77ci-#`c_1)7$G;@q[DU=&&.h.Lf=YP[dSe;AJcoLB\B=:%JrC0A%_=+t#e'/k:lKX-Y,`d(>\/[a81X^gJQp'(7/iQA533e6H8]rhk/<Cd;1U(Z$FN*ftP3Ob#j'=/b6Z7]e=,r-#3bH+F4aH>0:j*os%J=hOF>^"C.$M%"A.Uo85K;@?5]k[A6@XSEiS7a;A!F:iS^sH@q=-\4?o,rA9+FhN"#a,?!=?jY[<^_NV&5[KX;#<J%2/KLGgoW=%%F$a7+qGnK&9@5(1C18s,<@WVGk7VRqbtSu<B"_#tfqEM-%dY@p:7i?`_A*QCL?i>?"d1K<T$%1GPbj=T"057"9+=dE"l&0on4bt>%SRPkX3Qpm(_ds>g]HPC5aMAhV-YH9uSFKo8j=E.t:$L^@4k*K?piSp[mj-MiC<UmK9Jc"O^c]0#2;;Wp`#a^15!1EG:Q5>.e)EhC%EdV!!O"&pR<]#%F?9E**WWsp<6:0Ejk?UK1SR@OC185ER9rZdsBj=#1T]#IYAe6>+)u8=.kh#tM0-m+&/of8-HPQ@!#4dse1:4i]%>#"N5`4o[62Q4DDJf'@JB=J4`dBV4.M_b_7mdkj\TbnY+S_Yo<f9IchitNgA0q<9-=/eAP!r0=>G1S._6pMK0:4G4-$[[nDZLT:#%L5:\E\f:'T00J5>CDGRa6+mA7"m\=I]"lJ[Xi\2B5l)6o(F!USf6&SY,ulm>i^ORn&^fZd>R,b9?CI1SXU1f,RoSN#0*%Dsnh\7H%)R`2?l9#EHo6[N57AP2;P;&j0$Kn7W<r"*bV?G84'lJH8fMR#d)V:8jW]k/T=PYSTK6'c$*]^)30hO3t5Xt?soR/*Cg;s10KBM.0%J3(!WeoJ"]TiYm]O7Rt0/L6Cj[L\_70?N]*n:oa7\)K,nqX3PZcQEnWf4;*-#4!6(jV&s(^NBj`ON$!GH^c<F6HY!=N0bf5=7hrX%)YOPt/BlM'Z5P7)UbN?o+u9'Ymq,Y#W&M9>2nP&YO`'=3)TECNYdsE"/h(6tN`@:^M;3sO&t21qV(fNM+O(5Nq91B<^IW#20=;@l%>L8"aPQHn4J#=2%VB?csfXPKHG.mWfW4#[Bj`4tp&_GG8ac`B"<u6>qj]sVlZX_/I.Np@u1I<u*Ib23*h+Q!);WK\u0!H4k:p>t.%*=L)>*5.^mY;>BfFKBD9RaXZOSEAi:^=Fr/n/E.K9,78=`4k;J_bXa%LUr'8YZU>2[*$uVdL!oTp0-?]+ntdlN9S9NkYDTB.]A;S%3FTg+(X0qc"mb1YUa5jr@->%.o%@5O%T&D6ff)Jtf_Xi*]?]0Oel0n9Nt0B;Vjk[%3%jbD%(,I0nHTOZ[H2@p\AB'`nn2<W&>]IS%<#f/?9pQ.G,LXhWj/_Q2gJV>S7CRHBBd,imU4544hp+i[=Z&BSNNXLe.5cgN247JShD*"WXe=(kq'VKd5-TS`(ULAu=&YHfN/-R.%)eDWQiU`G*-5,quqIf9<5'6f_Pml\dI;50H9;#F&$9`/[XkNQiqe1;II7+1D,A\<AO5oI%^if<5+b&gl_CH%+ND"7teI,%0^`IM1%Vp1WaNs+o<:p&PSF]DZPXu]F.Mp8<o@:J;ErK+$oMnd%[Tm-GhOrYY[lt'hbFS7i.3Yer(gbemfp:pq$f5HN8bDrY`o#O\)"kp_E%4KLtb3gIDl!$TBq:7-nPkZ)NLWZnSqfg<6q+deu?N5+6;)o<h_r(Ji4Iu]5o_-Z2eh?O0I<Z1)Rc_8UA/$WUTmM-6"M&'rf)H;PL%*o\t]Kma\H"m_Xh,a+V!1)q@6$:1TX5%H4aA*jfX0+V=t9YMC,$o]jk\]Y(#V\F7'\e;t(-VnFN?T-SCe?G:[@ikR-F]E-P_*\W#%L9:atDb-+Ce"9Z=UNUomHu9j!?naD.-hZZdRTtPcfM'`8mIJ(;@>Xt=?B._>D<sHI2^]9F"8[/!5>F#nrS*i\8asnRNQoN;4;\ga%d&;A:7IOF[gqXtdqE?u.Io21)ehPl%D`$1&>6)4G`0h:t<"jWV2;NBQeC<Z7':2t('cJKB?1WRQVmH]p)"3dhbFeTJ'.chXJqqb*%g5k#l:52inpu!I7@6=_%;CR2n\Z.#h@ds3l\4_=%./_@FhE1@T2JOUO3dL&da)QXBDf'u$Lu4fj$=(B/*?#k!T7C3qa&j/e_c/sb%DTA,H8FJ&m]c[O@`%'WkUHo3!!I>o"goU1[qd,X++pMW&+kfg2&g9nB+gjDK=:P(s?sTe0<i<u1D$5?**^.G0CZ3WMdWdLZ"2"^L%j!bI6AH@W&5*puE=;Mhhb3Dr\&9(;EiI)5$#E&IJ6ruC%C.f_/4%SHsWn&OakCac@Jt]<VSY=G;ZPEDGH2j>^Ff[$L((guJZriqL%XiQ?o_(FNGLOUp%/n0e]/JuQ)4kJ^EWt_^+^%D$[;RXXmg#V7J-!8^R!&a9Y3d)-!_U&e@mJue&[rIcc?<Y;f83Es'*,PpTUh_MN%2bnGsMojk*QR/UA^?9h^LbO=`p(0.EY3!B23&tFP][-t<_+<&`I*NCfPMfGHZDIE.n)B(PY4CEn83>f'B*of.UU!S1.js]&;KNE,%0`c%.?Xs$,`DEq`XGNuB&X`[#EU37HNUL;^4gqc]Gs2:(bcF=h)YH(mAac89^*pq3PS,L`i;bST,JYYUj!aj&a-s2gn0Y!QI/daI%/^-cT.b*K(qV-2Wf-GU1j(p\\-R/*>K&u[bjDh-c_[E#R$1XWA7BL.0EFQ%gk/83%35AUR&+&<egdBs3i=A<%LFCahQ:i*rSkTZ\%Eajr=2h*jlfP>h$#N$?V:HJ!3"A)f]mB"=sBb+4Ih_%7_?JdhJp`Be3p/j!m9Vi[?:7\_Jof.j/_.`V8&:`-Gp:2eBp3l$.2m3(q%:4q&PE"N&qHMAQfnL$J9TBd\ch#CMpI//I6&N6m88+HV\L];o:J'u7.\Lp4t=5]#?"#9po69U@Gs&f_:(ZB3OQppl@[/mBUHN%k8%d>+n$5QfmUi-2!sI2kDrj6cM<FpP7S+(jjEe)4FS]KH61omYNc5`G;Xrbg*b%RPWks'PU$gIpN%qE`Tb\#f;JpKq_5BE3EOJm\>r%2m_gqqXsh"]+(/=mmc(;>N(nopsm'IkHg:&>P^RgN-?d"k36VYjp6hB5ao>u5O&23o`L>W[o*B$D:50Y)e@CsD]%a=T'jlS/RgrZ%f19tToREJuL\9>dMLAmQ[cm`ZY%HAe4p=MLCY8[*8mCA+r(\YWKDa'!q3EW.+&Y,/o-X8T88Li04(qf^4=3GNOqu(VU+HO<9J)2$%Dii*?2jgoN;%oMqPPu*2\POmXs,KYN!+gsf>QFgiC<^;o!#T)J!#SB3!*FLKJTO_@d!Z]OcSPY&:`m#ERSj`CNlh\/0ZXY&T\>qq%5lhM4ifFNK!'pDU9T.Y$[I^f]'`e<FC:gc'<J25P,62V;7K=9!,61P=$8jJS5JNPZ6"G4>T?=j3Yd61g^s'P2!O0nl4&KCVHd&>G%49LtI@:7[&1Oa+W(&.Pg3m<"JLu2IHGWmY8jEb%Op]aVS^;iUkaK7[Pp-9P&:bO`@pRp16>H-1DFHW*6`](tLj52PrnPN4n#2I$8%!cg<E-Go5o5Jj7cKhP^l`nsrYmN(fA8j_d:ir_Y8ccO2)(q4j8MST_KlfK5Fn29&pp#2?KqKoO<%5QW32iMR#caOUGKI)_>O1P5d%M16I&52-b\)'=0\=7_@7"U$p!TnBU%*Xh$YeG,-@UuDK4QYKg*psbLk68\ZA1sqI?nS`q5nI;?hI!f6jZuYMm.OPlOEr-hoV>ADq%Ut#bf+$`Re!9N2R$X1*(nS]8tpoLJB_^2&``Nm[GSkQ,<]-BU4a6.ud>5R($nb3',jAW57\a5M]a4-1Ar86Z0A$>9pp#\m[r6dps%SU8<o/282LP9g-cjLh]cJk+]i,5OBE0`YYpj4W`e_^guh&$/@PTFg-,#\d,!nd_J&A.TUab[%Xa215gYnDXm4H1<ge(W#rDNd25n%3BM9jQ57fSXPO:qjI^UZ'b;G;Qn0bZ9?7j\V8[KfM9R\[]MZHuP'kZaqSnbOg7rl#<1h.W\&F7aaQ1;Z9MH`!"142TnBT9&29Um?%RcRkukibi@4P)U5c;%.45(m6#o[eZl4F2T<9E-j*+/`iCJP5Q,')ZVtBBWL,P^#NG@D%fTDQq5^pJESQDqI^*K+[S4Zn;S.hE^5t%>`=`jikBcZ8DWM!5-u&nX)rT=%CWi^`rVXYpEdf[>!ICKdWtB>]'+G-b(3\oD):&ja$o]S&b\@2r]l49[R(X^qU>GC'Qtn7>g^pR%4[Tu:BD3bYS`_/;Q9n?sVAlScZk0CClVF@]cUsL/1HoBPT-9:F22.VZR8sbP4FS\s0kaMKT1WP4OK0O/;fss?RAq9KI$]5G\sSl:%<&B,u\rjal^M[d'G00U+Z<ihRZdb4aemt5V1#_l#oK9`Y#%iYB2WPq"U%s6UkBfPng6"0oV3;5sXIh=C.*"^#Uc"#*eR8GaYg^*V%m,g9%Vot"hPm`)ZPkWHZYB0LUfOQ]UfhU1^%DV5rH$9,qbj'5tn)N%2+*]'G-c@Z"1umdS%M_<e-cWg*K+\]J$cADnV<aMrMe7DQ%*.s-XV3#729-b)I.lTjVnHKY%4=X65=uc$PSEFm.EoMLbGUb$>]f>NnPKoE7M>%n-<K`&pS9Q7<@'#lCO,P8;Ut`tqQu_1`5@:EH%S9SM&-T1#(;cuO"WoV)ce9ZE%l3k!>9o?Xkc!OWD:kXR$.kBIITr`Kk9NJgBXQ!eW*4n^<'>j/l?*8901NO`:Q&B`@C%2Cq[.o'r%*-q)O(k*MZ()4'LH5l+0j,EckZK#.5r6j?7H(U[@0@duV(M`nlOeMLF4upo;;2ASOBYgV-G:#hNkJ,d\c27%_FC%\%3fde]s%qQ)%%m*j5QD9Jh:(#NZO2%RLD0".j[=L1s3U/fdN,0Bs"q`We:%ABsq<>*&Y>t5:`giDnoVVQ,Z'4$'I_R;LDbjJ@>9N8NDE9I8fJYJ:%DRJRp9qT41VH\kpFB!>?e3#2Cr0V$@R)F+!G6LP?9W8#I86a%))kt:CKde_s'd:$/#lWI6R"f'[6AEHPk>1UphSa))Eoe@LB7gV!%\q-*4cD+_jLL1q^5V<?bR(RNSWho&uWBMFMG!gQ>2ahrU##ehh9k\`N/,3oOVLQ*Kb;!XSklt'm3nmVd@@XYn<kWbBO9?_-V@[c-%_4NJrkm!Q_oS!`X3`"um/QOoT'/"3+kr]NbfG5tXLF0Q#SDCN5a\'<VA>L55=m9`/+pe]/SHG3J_-j)AiCghIDbdEJ&LF8@Fn#gh%(@('9D`Hth(mOZH#U>m'P-2G7koAn1(<]5Rf$0Vo)!S(KQ'&e)p[8s`qhju-+%7Mg<hXAAH5p"jpWlB;']NDqK,*?U_,&:2Y_i$4%MZ<\'iep.9bBL38*:0d.)$)Xh*_52H[fX;k_V<"26TR9u:ChXYYBL856Z!q$Cj\m/h\*[^,,Os8S;;n)GOYJ*J[5-'gZ2Q_r6@2%%=+LmeKM-?F#Q[Cc*!7FFUk!%hYk;Gj>_n^S4lJ@oXHb,S&C8"(+io"CM[hKRjWuT0d40k%Wk^SZ9d$LlOC"b*]EH'@DUG-8i#PoE%q.ol)XcScKK)ai135k@aKJWD=n;Rh,%M6?R"f+d*M"%iO#UXuof'afAmpT<3h:)s[`>,e)WsVDJTKUAH)rlb\CVkER7:rNtad77M%l&(XD/j]9,Q?]>\VPY?cj,RE=3;t](hT([-*6=515t&$gYC2g:r?'6@g07Z78&.N#8h1'[@L1i8dVh!!e02usNradCjT3H4!NT`G%$(B'j"N^g]O?VBM(g7<ZjK*:>hsA&.55q+(JEs2KP"%MF.0BG_CH=%`:;lhS3>)#>hH10"0>\eh"?JgfhKi?^jAjGK';):2^Kj7g%]tS]tn37KD:O:YWB03tdE9`rfXN+39%n=J2K_U`P[a0(.@UJM#\cj!'lnh7m#RBo"XG?h,&:`-Gp:2eBG&j+Y,#$4:Y_i$4MZ7<P%r""JUP9.0YFV+tP&Il3WK7t0T2R+;nnc,\Gs+(`"lbP.%VpA(R/_'BiCS<q6fEYUTQ3b5]SG2RG4HI,+:YDGO^4)H[+&%H.M=C3]%R'`!>Z7!#LoBVa$2KBB#K/)jA$/Su(fCog0hS*QJ^jQ0i[Z:X/QR)@V4j%Ag4\riL5@V)IoASMuqd<Y+Op&OI8JHQ4C*P!q`**Ot%@=b#s&6:mr&38IGW!QjcR5J%p-SL%rW!S+#W/2J5W/3cH]W3P(!d/^VkOrQjjE)sl%*6D3O%7\&Oe=-b2/K!/`;7$n6rH,Qd6fq3%-@cB\EJ.'UF%HrQRfF46Lb!:n$MF=iZM:@J<k5_hBOJM_Z).@(@aM=cK?UP+K5&s@ONY&=_Br*'%*J+lY_bFg@2$F%(&/'(5[FA(%1MUCt4bG'sUbNO],ro<JIuIYJUHs?,^I8@u-j>U>A0+H!aGcO[c@]"42.hGBXt+#aJA*h4_%8A*/e^Vr.domlAkR9CGccfG'/r<H%-4Hap'<&V,b<1Qq/hYg"1)h5)AD0qo73!HaB(F3.M1%_IDZSGjB\bSM_gkl+#%fuRo=*krH*?\3;r.2$pl21%3/7nTb/%K,KRksj%!_CP_4A?Al+1mJk=s4QHIm/O!98,R&MfM!l)4\bVRCHZ6R/eH!V84k'pAu3@PD2Q#@L9K)Ba[9T[akmH(C?>ZZJM4lQmc[g9L')-%<XlnLjC!4aTk3lLTb#2F;LQ3D/@f+*1LZ@_1NC;bGr=atDTRj*@,4KY^1&Fb;,%t3&P.?G$("5O$TYbh)r;^F)D/Q48A(,:`)XPs%I=[^QC"NQ2-1<<sg]U^G<n@]`2aHCM%&S"X<2ZP(eVFL+c5AQl`h[o2KX@hLK/5D_$K&NU@2$SBHq^:^/B"1f<-1b@b#-^%agGok%A4hP>p6:?RQjN%0.)enj-MA$oUtr3<\ZCur(Y+T<!jGDca'RLj$dP(apn`E"0NaF.F2^glc^#_38am*lnIatXH*$(eKij4lRGcl1%S.1loY;;tG6RDfod`a3BS1Uo=^J2cP0F_icV0]>CZ9flR0I%nq1`+<#Mg6Ls+04Z"O9!?!FY@mZR<sT\&>1V]6703oGS<LhKAMY3%=[l)Pp(.&!9>H&_CIR3S3Aas?=-,:R4!Q'\1*\+SVUc<fJ^d@Q"?-]8^0WN-Z=L@N9?lFh5nfd`:>\jqW/5p6^$P!e6hu$"$?)70%BuE52'B92hjHh.eh/:LL_.m9cGRBc/_(L^q0\D=skbAm?ETrLsei2S8E!;sOk(oK\OK"mWA*tgZCkYF``j>1ja'`mL7Q*U]$oVQ6%9Nr"RN0>rYS?V\8QZep$nZA^\k8kY22;0rUmVuKK58\(k'B0P='@[fdYo$>Grm[#7hNZ."5/T9FKP<59f:VEZ`1uHEKSNf%/nq:u%,!g^QIqlp>XCPHmqB]nY%<5(8.IsR]ZtY1gE28:Y.LhquC;^2cQ`@;e=$r=rlB?2L9Hfc;2;!d5'(dRJVhR=$8qqmP^U1)0--e%u%7@k6^2Jo]4qac%)SL+HFUMCfgO5n=Z^mFXU+b"..`5+O,TbBD.aodkYFFr]+b=#+pe1'jdC#fClj41'^.fqY'UEis,*2$'ZjLR"d%%aZqJ@b9<)m/.fie`3O]a0?.=n4A()LgP=;$@9'aE>-9X#%YYH!:dO?oca#.6n?X./^cTE!J.3fMAujH/VQVMCr0Qm2?A=Zfb$,n%O6HaT1Md+:AU;L2fL/8:pmj3W!f2pk7b@j+&C%FF<IGh2akt*t`ADB4T=h1\Uj.]q>Ve#>:fZPoa/B;8O7]t0BEF:.5;6Rod-1Hl%aeHS<#pY%bC(2q.-4FLoc?pgWf18cP;.a`<@Dk@R;I3J)1M4KH@>XtE@#crTqtPT2mhH%=a7M:8+343H_0*fmK_VCYIrdn=&&s;\%3#5_:rH>I=pA-s5dXG&L?_;'d\kl,R":p(.RHT:D?c.FPUF(4:@n=;=b'A+%RQ"HG-@f*ZHrnh9FM5qt#s)oI@j3aE!]Fp]8@jYI%\7$!s@:e>Y6eoV_eE>MtS=!1GVYnK>PMWcq^F7#Bc<.g!>>B\#AAq'&diV-<8a6YQ=NHAi\7#f:TQOmGqX\ce0NaGN[-k(0D5e_n%O;U&u6Srgm@2_.War;>k7demZ_(m9>]h.*7k=Q%T*Z,@/T^b/*jr7ia:)HMh-[>>P>*T[5!?f0916E7"<$ASlQ:ad+)j(dm6mF&f%VNDPAE:DQ'rS"i4bph7iNCVF<$%lsQ"I^T]/k/Y?CWu%/d@]T;7R!nOaF9CK7Xp'7d#!I9cj:g@jKN)@W1A#<SNrn8oYgug:@QIq%0Ce>!M9O>')og52K4sHORhG$=Tg(pN4Dp/*#p:fi',;YqQ$/(VJF\SQW`H*J!/p\u"+qs0186-),iKF'(ANJop]O)K;k'lX$$MTc%a<645XR=U-M7q5bbDt?nT',o+1,6*PD%"kR\<+CR9_tIpmnt4.#U_ug@Rc#FXN+39pJ2W5']NEhM\Y2]G>6;;Y_i$4MZ:CVpdH@_%B$;//dYX?;\9`D5;Ks0rqrjd7>9a!5"Co/n@UU=&.Bfo6a.]r&4=B#!iHHU]3!6fK=lC$PbV:gB8VD2Yi=cE`i=e//i=eIS[Xf$K%(:(e)i"9rP<a,nYeIkpX`!t,`$%lse"M$KK<2S_\qkh108R+#]Hgr#>U1"VOn;U98MOks^UXa1U-V3?=N:r[e'8o+1U*ic_X(^=F%M]c/Sf;1!DJgu\XR8RFA</ne'oE:;4bKpte5op@(HEQIg)b/;6N0LEK)02&Wq*q5IPjZBjs!lRF7)cbQ4^jEi4^g%(ScIcM?_J(]%H@fQ\UF./tn)S'uLs>:=,CI?N1OR&I)EqTLhsA&.4uNTHHjQbeM=%9es7JtM8i871IZT#aj$VcBN8hcqqOfh[qPNfB8<qS*6P4Oh%K&AE\+Vb<mFbb40Oi>^(j>p^:/m`^W_`o9ECb6PpPV_!/$NkMX-8uUQqRW]"UZT^rYs62<jD2&t\l%d'[5CZH^F-c0%!gNRP2Ai*%*lKl33<eoQ+k%tu`*V!,2JtSPOT:a)3SWnO@2:Pr/`NC5J#IZdCule6*^:9A<iMm4q,Pm/CpPKI-u-(8$sp)Y<m=%.iOVJ&;R86e%VUtO$_>Cg-8$FS4[V>+O&`bD_^=GKPYdoCfT?\HfYO.<Dm/&")abo$XlP=KHC0@Y5;pFp3L/@nRgH5<-[jCg%#54,2/hd?s\n)Q?%E>8D)EUZ+7rhP>:F'XG_L#a#qLbQ*_n2)=/`;d.brWbdf8IsS=\d3O:PWV5V_ShB=Rok`Hpj^l4s$2B)l!aHo(ErH?]uF9lbef;E%Rok`Hphr9$p:h1!5Oa'R[Pr&t5L3&of\.2):Y3U*(a^?hr`__e#;eZk[em^_T'+^@e*N<'XZ`a^+&)QMM=C57T@C#Bk>#\rT<2HQ%C=bbqO%.rlAG?ZD\o#$np>5Dna'8FW^RI-rf(RM<qiV)sE[>S"mITu9r?HL'2]plcjU[<101kZ6S(3=ALJ)\MCHN?90M%)>,-OM"%H!^bHMOJQgj/F6*J`tosV35/CN-Hh)b]p-,`d"N)$b@ba=@PpAHTCA<0,dV$4^o=M[\^i*TkL04*l*UXV=/.]<V65\?>PSNK37i9%KH6sO!5^E.nPlGZHj;0n$<Y+be;U;WTIpE^4[iB$G'erjHK9i5[SYO3RNn?F+>]P1?lDcD,Y26`%B"gG8h.;OB^V7@;rO'jc!a"=%!D)/^-8:6$#+4p[#1J)Pe6V#]*2HJU<PF/c5u!])j]T\);d>GT@MhjOO;Ue^Q)F!J2W7WR)FG8sSr2QYY+H:T71ge3DoP^Ac4igj%Su'#!Pd="iL'9E&C-`b3"[Mup,>=!ng['hT5<4F,DWP2^_)3-(AL?8mV:m<W$Su1\//JJ$S[-J&0JIh]Tg,pnPh4VQ3@TGNK&8T$%q[Wd7:+M3:5pM6o[9%cI7"PMEmPF_qaNsiIkWBSaWq9/IQ"*9\/S%:I=\P2U*MJgFP"kI,aXOhMWGHTJ[ZkKa6rCY+DL/p!eP,ie%M@,`7gpZ3"Daf**PC_9".X/@WB0qOAP@(/\7/P1FWX5a<.K`6F<C?\;dfdOHTL-V#++b@B<+o+WFOUpheO@'42gNu*E!<`C@;(o$%P?'-f?5HJ26r<RMC])P:TRoq%d!d:HV#th;cN#F&Mu]l3N;tH,;R3*ZfVkXh'gU<bCFe8-68J#B*hEBt@\&LO!lcVt'1-7bM4nZU%Dc7tn%jJMkplIsBVGueiY6cC=<)=U7h'Rqm)c12DrKs+u,'e>*rA[ROD,rm0\is82^@M),'$\#MF(7bg$D6V[,)Or?:CYAJ9!opQ%65IF-f\.p#$F@U)gNtaSk`sbH1Roj3Ua&rK*JgDc^MW=:ir_!WQKk$caMo)[[?)+dA[/f>q.@L<0Iq'm;DR)Zn%r,)hNBCS'g.1i%b\I:o4GC1qnY7FWWaW[7eO31b"cTsi/qV$ZS*2:L]daam9D*_El5LfX4gg@d4ghL+4b`"4H4q'J7JkN2m`&6F3[)+G9?k:-Ju:<c%K*GqIi2LQ!h)Fk@(dF(ap!'R&NV:D,;LIEerK7;ufu,*@R.A,N%%\Z_a1kXTPegs*;nSR=a;SlqDZij)2sn^!4Ct0i"][?I]L",B%.Pe"]],PqDQ.nPkV[PI-RnQHbcjZ+AEZCbF_j<8%=73bgT'+rMR'G(_bO':SANq#Bh\4u[JQ'orY)K[sgAC`E`]F3`i7;<I7>-7K%^gpSBkgR[AjXbQEV6=KG>"I#4kard_1b4tpc2<g2IAT9,e.d5YA6Up/<&mq#C?bLdj.-0@r4k!O9gbhHMYSRG=gQT]!oIR)>"I#4%kard_A1CHW`-c=R/k2L:C</Le1/6I(VtQ8F4F9R&Ak1H2iZ?.&q17#WHU@YaDZa%.2Zm(X2Y)%[MO`\bFI86V+,Kb!VFF>>q!;IU%f/#7(l@s#;'W[Badg;N&/k32]G)W!Geb2*eq?CP3\Z,=Cm"Q&KO5CW1Qi.eZ&BIT4'X;)F1Nj+]Xt+#9KRSBD'kep1Le./VX\s!u%B;E@B2ai:r$mreh!9eLQfI;2Ahk6CB;\5qU.lLn8!7<AW6Dn;6Re^QK:(`V%e/:<tpW_QZEdMfgL2#ice\WI-'g"i83XLaSlkGP,%f],j3l%KDOJu?u4X+]5c1Vbj=KgniU.5Z@n+>\>d?rlZ*>L/ibn7<TGQU'rGcS_3G"PP<mP&=n(PX30LrH61$USmetr&ikA%*Xas%D59CV1ZG/[Q1'S"+1P>(NmEG#I.E.Hbcl`?:CT>Z[C-T@csN!pf8&Q<*a0Mc"j\'YTf:q6_c=/)[G^gNN"aZb/K?N9&B'CVl9?N^%dDfr2-f9g5Jr>F<29^:s\9]pZgTPiRMeR:!Q2Ub(,.;[&50nE>`0REIofnJmoY/0?73R,,Yj42W9>sA:!L)U."+t``iel>+J$3N;%K.p>ap*:;kO"`,68Q%+a?nL)rHu41pEoMJ7_-/ccK=)Jl_-/tb74[oZ/f:@jBs3n?X;6<>9Rmd.fYfa/N<M)Y#h:\lL2$aOa'qLP%(;CW%oTndA[;8H@j0=aZX*$cd<m+khX$mJqfW=#7Xo$]iWag)+`bHAb"\/qGFoI36U)#9=.9ESdO7Rb3I?qIE>Z8mL/VD8LXbDa:%/_!2Vmu5ekG2W?S_-6US1X"*P/KWA[os-Vl+Z!6dL+ufR+<%?#[Zp+Oc4)HsQ-WhiBRq4u)2:RS9;p>Keq-(=GqNfso#surA$m(+%6F@RQO]q+9(>Xkti_[Z1RYfO'7n$^73@\'BC8BG;j1gN%g)$:Bq=la#ZNtCUe)Rrg]mh[3U(HcKpoFb!A&H6D#b+qWU\O;MB>,e4%]4;s5_TBZaQk<a?lZ!X='BA\B@f-IicRj&*Q(2YD;,6K6'qY&<A+J:<qW&.L45^&oS]?-P`7@(*CgR(uO$db+\V@gE_XC/QEb/F]%O^X061,/8IG\]8__[J:F_ep;9_gofa`ZsV]&R8@I(`>I16@CZ%7Yhq@K,^P9@0Y2r0Tq<<e[ks6D;MWp+@sk@0b"QOmoqCP"-T.f%U-j\9#tW8Q]HY7LnK"&5))fSZ,;>'o/a(?a3[B1D(3g";;.GbS@$V.G__qS6W95.=cg$T(F#=mQAg)n_O]fTFXV(%k-!\8/b1]\n%Zqrt?n\0K@Kc+DjKc*RZ_H>4)hN3OHl$FE+AlKTr=42l!N7\!-,:^n[1FgUV)AQl(hX%i*%Q;<4r#o.QA/I5VNI&gZXEh;[p)lhc%BYY:JoS"S_d(l?3/-%pfjA0/_=:oJ0JU$#IK/H4ITG,n!c2=D&N+=;P87pku@[t$F,OS<MDPK!0@0IigO#^-/'lZH1^7Tt4=&/qo%7]A(npLd2.dI2or8jiNGO?6K;M#"'eS*pgIk?gl^<GG&gCYIK$0/E<WC%:q`&$5f&JS@AI/Fj7\-aAhngCu^>Y$t"G,Wg6?B2'&E%/Y?.SI1&SQZ_i8XNTjn0:#tJE9<)!,[V"$r[80;sbC+lX)AFuPC'b?a@DR"<E-[Pq:p0IG#:/;K2B^7elNP@0nGSk'TuYLY]=s%C%9/Eg#kL\TV*$S!bL-r@mMp"X&M.mI[j!"L6=MAMp<j1AN5Y-unGUbfI+hWnWadH%UVcZ0GpOU7\rC@+q)1b/P"<LcP/5V`..OQi3%@fa]WT:XDsIb]uPpn$)894::"\=minKoB$+Wii#7?hR4&YV*)S5l.HLO8q`dOPW#1!DeP`:U,.c7A4r=.p-]&.$&g(1ksM=Tjm@k%]u^FQ@3Dg`RI1>42hSp-OfJCUYhfX*i`Hcri3V[i&]k2<#NY9i6[r,lIo[g/Q!tN!i_X-q]Sm!]0Bha8W]&0hTBP[:.e$ilB"7)R%(b0Gl(o]%#lB\Rt`XNe8Vcems=-3?'+2e,]29g84OXc89ON[8Q=M]u,KNA_PpPL[qA2cqb#UL?pY0UT#`SoU3(Yh/d/[3<!cm0hC%!$?/?bGXL1,3HJ5U&uimrRCgBK5V8;k"\eM)#bj<mtP)W=4(@]en9\0,18p:0#lP?+3U"X2[6i+J<<tDb\)#KUo*/Y^!a#Q,.Y7m%&G[=[#FeWDEI?+6;<-QGI`In'q_(8%6#&DMc[eC="M]NB59To(,#)N)!?`(J,U(Qh(mYH9!"m#/UUF]1Hp?776kn4sP\a"/Z$+7X%qUc9G(kbYP0#eb2F"'XAqa%0be.kt"I2QpHV!;o)(jn]i8LXdOZX[G7!:`VDaKC<#-bg&Rd^^cpL,05@jil>9"lT`NdH>/gqBS^A%J@gs?oGA-UBV3PYdEZNuJ*dZ['-b+W*d90c/+]*q"qW9G'&O;,RBc`r/]fD,&3i'tF=s//!9-nVZK.bCfr+X$M"W8'P.+?A)"9KD%T;?[1&8!b\?TDXtU]d@)'Cf5%`7fB%9'/GL.):e^2gA\SKDLF.-W<ZioT_qRGp/)"oi,+dP;#WooJnHc;]SrtNki#7n("Hi7"1J3%%JNbKYitQPksWPNka"4a]F*mqdGYaLJ&B_`k&4Goq@c.%G]'UIq^YX3Ya9O/>aKPBkk9NVp2\lpgeZQC]TC)lBIU/qOXalCdebbq%HnSHie3bUYj6kHnbIT\X?fPAB5s%:GQATdFU9j_H7jKDJN[B)g\&KaV>F">d'$WD%Zl=%rlIc%;bO@K'l2QV5q:dmc4-D8#M^c\I%JG2qQ^(@>#5THqB9hR4e'bO9JLlf*,'t5,@qE(:tM'[!]7Q#b4!>o@M:IKZ_Z@5PA7<MOA8V02-NbAJ_%&ag#8JoU'9acb12<YCe%'a5CI?9X]3Xhl$s"@<W.=7`^APC^gK3P2<bmYo9FfA7XR-JV4!+P(N!F]J,KR7gZ\jY5!M"0UoE0Xrkq;:L;mR!iljp+1$_Pi=I>%Sp/Bdq:-3k8](NQ>6%4QlIsS["VtL^]m,Y`h;4ASFgKR4Z,fOS(u.PS*AeS!F?o\',r:,e!;m<b>*1Ng2IW:*-YnrAb)'A*O.-&C%Yh[6o.)PqI4h4D5/r4TRqcC]]To549VO2<C@\\J(e8+o-Bk:EBs8I/YBM"&X>`2VLX\1LIG%0'bF-T:Ulr`$MeZ(Aa+3!g&jXt&(%;DXG^@lMtsNjZEm6,T&58kpNRV>7N+/d+7EW.+Y^?r^g8?I$]BQD@%"L&2YP<:5Y?]BFht4+0g;Ka-1H[(='jAlH!W1!^R)ZO;=A%1tHY-V%+,M1FI"AWq.?#b/[/n7#78W`0-lU!/=GdUqk<_O'rH7]`-)JT]W%n_t9`/XLGdBP?K(!_YKcN2'@8d`LPF?1<YIgY9u1M%ID9O_U^"bE3plR8k0p/e[;f(H;JOJBUpcA-;DX]3e5/6+ch!q:KFD^=;M4<gH#lpe_KB</eWsOm;=0,&;%4B"1RglleCA)&etX.F%^-<?Z<29GMp9h+R+Vde\j/<1C_O[hiW_peoQ$$%N6>Fq.WYo=geJ>#P2<h3L:20e((nE[d;1b7j>"C)RX+$VhfTL2bHVsq]ZZ#H6%7MWilYG7Pd]\9-LB5ZrHf27OmPp)to[=&UUUDi!l-7aZm!nQA[@,/,6%3f_H-a1RYP3's[0GY:H5ock(FT]A;G][5PM;?ItS*,0j%SCRfpIsjGmb+VcHI<7WLA4qLIQ"=mIoZd$fZV!7S)G\VS$Q5O.#9p(M-I8htT[cs5=+jsH3bit?;tR?0oe@M=VMl]2/RC(c3o?Z8%`S`0:[e6WV(*YfudWd8g+fqoPW`)o(>'6\77XaHq/r+mPP'=r^'WX#)Xobf?3=^eQs2&_QH&',+Zd^2Dg4MC(]94at>M*&M_"'Go%BISmjX0(1o#X-XGrqc/$HS$u`ZfbLNi^':#^bI\YCr`7>B*4pP+iu8),Qk?=4l;a4Qt&/mgO*;@>jCo1j>3Jaam8KI72^F2E#OPr%fk310ZrCDLMc2tN>sN7m,/0@\[`_W<<*tmI'mLCB>W(dhp:-1Hg[TD-EBVppJ\d^^h!5EDKgm=8nRfUI:E\/l,6'7`gDB%kGnuLu%9O>AMK(.Pj`9B>.HT:hl>5["nWQhAg&<OuJ6S%bHq2I<=rpJpBrp?5_<'9SRe!&8:TZ*Yf??5Of6V#ON@jh8[A+bN>psjTpc[/pB%SS<K.0Ju%@QQfsSfq&17P*j7%TAP&62J8"F@/U(.QgkBX+5Z$55.bee/.5s8!fKd6nZp>L5E=T8Hl?N6T*lUX-P.?ML@GQNKF>,F%:LO-nFW$fbSp2Z=n[Z$4N6`H?`[?5W?#^dT5a]H/)P99>c8ETheX'0:`[@V*fe)M'8@Ma&[6@$u/hQB&Lt\V=I4f&5T/V_[-Yl=,%/F/MW$YjCUoa-SVNi2PA3J2K(X\ZA/G+:9OdH6a)>imEA:ift*VeA4OCOQ?6n#?*hKGQu(r7jdsdtEK;cC!)Y]O>Q(iiY9:.kU?+%#lU+=r!]A9]4T;`?tu./q:Uf9h4F7MR@c`tF10:g?p5@8bYKA*TK^WHKe2iE?tt,l#uu0ZR\,-iFK&I8'68-$RcZ!Oa8;iMIP/;b%oCI^9q2&IY2abhc+O#!hbti_jnHrosT>5K*@@<aPWeS%-:EX^hWC[/mGE#hh-ab")?08%NVYRbV2*[qD@T`=O5Nd.JW;T;]n-%j[%56L@C94%<>RhGD^5j_>W&+[uprhL$_oslonXNrTaq:#29G%F(@osp,lNpPuM3,8d-BCIKj$Ho9[?+rmc-\Zh@6j#`aa,@g1(r-F,%(S-Z>2<le%IZD(<gWJ6cR5%_P@rn,P9%@@99<$:VR4\[G'<sGYWkdiK4Rfj2X_MTirs4S,E,tU1[]pCF<cZZ6_k_EGWCd@>]kC8L%$`7EfQ6G6#IVPH]FV/X=A[^A,QMJM?MO`P3WKG3E[QL&3;RNOj2eCcM,4B<rRXtq-($B\8@CT1*TGtHsJGH@R6+H@(mj8g;Oq`]k%Y$RK2XIH@@qNE52SZbKf4c;$d#qhLV0&k*R8NDRX7T4WmDDg[[dR$_)R:RWn`kXj_7=]0dQn7K3+=:5A\B,IU.8J`gf/OK[P9*s(%>tSjn2i$b1:iNCSE0e!HA0F]6O?PtMA(ocu_)t)_d9.p!a$&_BbJIF(Ll>)cA?htAqK"#/;kqHW:6b(7n`Y2"9sDjWnr]qSoMW@k%\65ZC9gW>2Mag`\\VK*Sg&,0>EDBl>aQ^#P!`N_*?"7lRqURP\8#rtJLrg!P.ojVpMbGgUaj/7$bV\iY1[/o,h2!_pDuaHT-XA3b%c8[2Z*dI)EmpWp*_,Vo)VIOG_)lC%gYX\ZM0HRjII?Z*h49CY<c"0$2Ng"#3ds)!>g)7mT&96e_j0=*Vll"TR@MUgqj3]!uG[/lT%*eD[`4,c[W:.SR3G_G:?#L[$C!o\js1`hueQLT4;e9D,948iSLU+5!-e91s=1M>C$e=MUD[2g\q)3tOQW$@gUlD7J7OW'7&R>q9!%/&l[9a>+cS(emNbW`#2JaNr67ZV3ksC:L8-823J)bB*m(>7tF,!gBa'R#Y-4;dUkG8("k?eoV$Q%7Q_Gcu2LpR#_%dB%2Ef\#e@E%-9"Uma65C!p,!e@KQ\5n#nXd:R&4Bcf<?aSF9KHeRAOJ99nNk?km37DV5EJ_,g(7_RZ7bYVPCuWF9Ib2o?26/"?o:f9h/T;:8Qp*%[d_RdfSrNQbAOt$C,b.-,RI5XO]?CL)Km>::.8YO;L,'C%_E;sa]^Of7Na^H)oI=9p:<!,D?Q\8K5*=`AD3"N;nGnQ8sa5FNVm$X%6VHf9lH+golpcjMe<<J9&P1*Q>.YBkP<_UF)lWpZEN%tI.ehM5"N:&*VVqfG?S\5&E83sfEEe$b(nHl(+X'AMdpVh%8a%:;VTHNu%3:u_qUb$*aSN/sJX2C!bB$rT8(V2rR!(jQ]+hs'`c+_cYa5pSF>Z`k0]S=1Q*?3J;F=iY)O0cp_bCf11T38"bnC(N%]rK<#2jaVd%^J1l7RkDK-m*`np'fslc[`Bah(ZM<"(aUlJ=;1^#(.FEtG*4G;QL:!$:F4C4DGa!;ipar5f*5/N$>=$/(7o+.pfJOspg-%(dKJre%iG4V)e`(M!B+<1<$\u45.=`I<IT-fiAVm$9P8uf3<M];])/gV/6HksF=J..<MmcSeV7K-\kZd[Um&K4I$^/\n.O:A#%rO8'.D49A%8@t+D4YSWh]T@XAV2#4MC0a?jJq2VsTd>$T%WWT#7Y3h/2tRqP*cn^F>O<M9<N?fd&sZge;K8Rd0HRLurG-'$E*_=n6Gb/u>V!+!%?BmT@7uC49]XsV-3&P?uHV$Vk8bHD1U.09WWqV[.<aD$U]p,LceXn:#m0YJ)^OIlMpFMHfV=*T]j>>/G4IDYE`)C_9mq(qmFa5Q7%,r!$o5%'mu:6m5ZEO,Y^3spu`*$C&j//*ea%tF.oj9Wi?8!$VgnBlKZ+Yrj$@N5H=NZ<ln"O_CAmP@K]a@-DL7-&QNHb#EA]WNBV%![\;rk"08&_$R*TC,]N]\ATpW+IOU(k5JeepBf:tYKgHR)WWS7%JCa<#(,D5&NU+A0*-=qEl4dZ4-72I<,8^.Em8Z/#!7oG0=M@5%+H5;:#!69UaB4o93tNHZVnm84Bs97,)!jMjCXW7DF*`\:juNV])PL@#!9CXDXS&ERAZaiD[FTn#8AHq2;&>Ec$u6kK]UH=\3`X4)%Tjb'%VFrR,BWXYi.sc!4;nGJdPetoVQ^[AXXA<6Wl5$+n/tJeN>e*DC\*33aVE-$'/hU'C#TYSI<!OVZfeV+2[`bR[W`'!DJXYku%nDLCI%TVfge5Q[9a3m@SI3603BAqBO5@W^uZhJ`tG]X^U1N/N[c0OY[bT!AmXXV<H&0;bHOVY6*:cu"c.ca&A>dOR@+K&c>_Y9(q%"ZbOpJCG&!<@HI,7Us(Si>$2Y-%d_RR#)1Yia!b14MVV52!6=Pk[8W=nhBtaXj[7Z@!Qunkd\@CiC02l',iXV!re6k&m8$i5:72Y%(,$DB_'[3jOWam0HV+I>>:,G"is%BQ0n3KV#N;4im34OMK#lMTKFsZ9VL%3i`,L9G)b?oDS<r0")ra4+buMtZ\,^<]FYXY;E9\$u%3KA>QT:hA)OVr_Q,#+S*C1i\Y`#EcBCrqNpK@,)NGZhP_'N)$ro?u"VV+bi"r1*Gr7ep=sYR?4'M)HX5-QSZ24LX3q,D'9kbCodK%Aca.SN*0Zq-8a?Z66c_0+MH&F,D52;nB34T:HqC.eI.M\CR,l6<i>TC#eq1#I]t%fQ@rr]KJp%3NmS-r8%K4&T>g-sik06ARr`iV%8tP,P@\uiWPFe]W6!cl>Dt81N?;s+1jj0$(VcBFBMU6_VFB?rNF.<2mS:lc]86Runn-,e`o?56I60RfWAWe;X#DY6hB+'[,+c3$J%#XVTP<Rp#=(l0pLiSRgmL8/7Kc:LFrCc(l9TcruC`Pk4@'BI@c+)@PUJ[>/#@Pa'tE8ds'AVoA><?e5;Tu]c8?+`bfJVG1rN3613%01dc^0aiYd>JUR/iXBu7&7pfPXCDjmdfn@V.chpE-Rq_\)!7T%TUB/0En>A)We)MFU*X>c,-CW\GGHQ4">Ug-hatfhdgL-QLYS+W%Y@EH],pa$WlYBA$&`o=t,"gW3#<A+EM<KUa/_Er\=B$15P=Ngc+\nCERVK/`Po,iJllrL2qNM0FcQG8Ls#l=u+,_qt-gl*4IMtTj%GGRS\bu0+VM+i9Cql24/Z'$iqNVQVO%&][."k-I_.;.cO+L3E4+@HVD31[3Y17>iTX@QN'."E6A(o4:T_QBnAK=EF+SuH*7.*<@f%K?G6q9j*hBaG$n&4*/e+P[&0]`<tdEQ9CgGg8U<F#lORdKt,usShBjj\L:fOK9XW6e.X3u.nHJ)2$utOPV*8C'%KVZQdabY"daH%%d?NS[<3K!iDY/;7G\0@bnSh\#5`:gWWYc/M,]tKTPmf:h,kTKuDWuc<Q,]:>_N%"7.9Vne8*nGM#g8Lr%iQ-VU>R^ZYSM1B7lC``%)l%QN#OEI.3".-7E)ljBi15&5@mV;d*dlXpbcSWe#Oe=C8s62c`n`>Vj2fm5ni?%r@JY\jlo6*rV_iQ:aG-NB.h7('p8;K@OiiO=%'4]"4nB!APBuL+p]Qb8oS3a"eB/$aQ83%];*N_;!<SL?]CltMX`itC]iPBR/<?lB1AQa!W)eL'4`u"]/)+XZNBTpo("2a73A&_Ai%=Z`$`*+_aa0/JX,:#4NOR``lp=`Hj4ZA^aNW"$3Y2;ni1M25TW$2HDWCVoW--pC?b+cYbN6mI_on7oA3&P(P']X?4EA,G6=Qq!UE%>>G66`0"A1lE]Bi<\DRIgP;p?kU[UOZ1R(Dq_ZYGlc%lgd9As<XuYp19_])a?-s[XIKS\cJu/O,jA]PVb2B*LS?u,<qgnZ<:*8]5%'Dc^$R-Ei?fkJ:1n4RTsFG-"l9W3.D+u41,8P_dN.JHSXlU1HKbZ!RT8CE4):]\F`-s8R0pGB>P928mc48Ost5Y@3saa:$Ee=+,s%eGI"1),.Y4g>bIh3b)#&nfRS7B8i/K_d\I-Hr:q)c+9_8@6i`1[Sh?QjKqLAKamW18KhM)?n-LY,I?6&@UBPq(_XKL"\&l^,CnHl%Yu2^\&c.q,fINV*e5X(0"7E<*H[qM*J-<f-EXAc$_T5OG5,h(Z(ope8NV&98JGE((<s'Au8dJ7'l_>-)ENH_9MBoj>U`iCdG-D_`%nRPMt!<I&OT;mF)P*p^RPT_3.)gN3:DVn"G'M\>5W1u*lT90_7d%llJ=HkeiH-_f<2L[$?mbI9%e/k?%HEfJ=2ga?``>(s2X_XXB%-K+2Qf$,cM;H7bHSD"[>SsHGt[T'G/O8:I8&u,f%HlZbgIa4&/USo+QiM+#/l!i\_g+a:R$nTG$rRFPNdDG*i`;jnrdopG1OWm)X%B?\T1Q^..IQW&RklF<of;k;8lH"CXlA+GfMN*FP@nq&FVY';aJ8K`-&R(O[^1@`F>GtERh.3"IPq23AV-)HamdL;?6L8`400K",I%&J[6TR_4`<Hm<.l!Xj$F;j3PHMXPp$PBU_Pft97;NF(Rkl`N[OQd[\Rc:4RqPk1!3[<ef8%l7Zs]p("V[&dRV0fO$Q?>>i\(C[X:%84d6Y]f/4$?A#61.p]"N!1LV!>gkKrR_?YDqG4F6Li4RlZ^4D.iF_eH0(58aH`7.Qgsk[*V-c0fQRg[a-S(Y!<3T#,R_@Ge(63-l%=E7pGhCu?aaVBJ)J(hTQ0Q_0b]d+rqD2)Wr!pcc,[Obc>6mYjXY^D!im6<IU8N#U&0Z3BKMOLD4'&(#,QtGf=eES@/Q1%`^X-X5t%-@K#t08Z'+Oe^S[r*)<Pd-P%!=_=kRL=o3LYFLI!lm;1b3KT!KMpF*qOth=*nuQP.]p)(n$]SI*;+$;clD86".a.*'_?9!UHZ+_o%]`qEQ=#qc^]2r+<_-+C:(fn"XpBk&'NBVV(#L/(UlK+BElVXcj2F$F/VU`;c]rYPGHKc[nAhR.7,ACtEgXnBt9@?-%][X/0T0f_k%VJ-C-KM31d&qp!b7/0@c)DNY1l40b-dY>1?G`7*c+hHRe0I?s99h`V3pFW^R2'"!50pg@]M'JKhN_;?Wl7j\Yq09JiQGJHC8#o)c%c-d=RM&=`:Ag?J_lC`%C`1_F'6nlb\7+-ML+'!LCnL+&8r3Tb@^9YY,aMUfd(GArV?e:aX"qS*)NY7RrW<\b:r?mOl8MH["9M:D?%bMjP,CuS[N$7GXI%N02-R.(fWACqe;CEp*P_;;!;J`Nl$W5a(e&%nL+Mnc(2/!h9ZqCPmhbIs(EI0VZAjca61;a?/6"IGJ"2s]7V%RVmXS10d^LL+:b9OF)PcCH,Q(h:Dssa-:VM.Bt3`bR!WPDXol,>WQ>'&>,:K(r5%iX$JEQJhh*h6F)=C:9gJ\H_Dcd$f>892)KZb%W+m":1ha7*q!3hB@+"Q,/__rQhA\Y#l804&TLU1RRE-g6dE^5t0AkI*9DcaU-d*LU0>c^dc)L_=hT5qZgIWn?Ec0]p17$.@"X+hY%p.MLV+>.[e*4d%I\_dth[o4fAUH3-rg$-<6J57mO7._eO+0AF9T8u?6g^cZRc/Zeg%moG:Y."B;T@9iBfu^<2HA2DF63hr-!D&@_%1$X0:Yp`7t*r+E@<HsFAgok,WOe9b5Cp8Oa'&%&Y<B?^I=;W;S"ulM:^rSL"Re6GIT"kEeeZZ.?IRSq5lRX($'A$%lp5h*aBpm0?%d6(8-dSb%<%C?,s*\'a.fA9]!`F#Rd$[E"nT!,Z_!e]eBej0G6E.ZFP=pPO-(#33`*itWL>V.?U>0lVbp4b]NkdC!Zj<U7HF3X%C%QP=RI5'=00Bui`Il/FHkKr?k#:;V5^k73<3F.R29?7$59!G*bG]o]<a>`,(Y<F'JnK$kS_AIA1f<kYp'%$KWFgk9oKP)>.Rb"-ip%Z19^2<:Y+T9k#Ser!(_Wr_7DO=88GK)m1d8Hk2Rnm:GYVNtf8^=7on;JY>`F7Na[-YiFb-R#"bGZWtYYgT&Ho>"iS4b64>*3.>iH%D<a!C8(-PtKjuTdVIPmRZuUR0b9@@M)6[K]qWr\1A[&0^9@S(JFb,K'8AOEP?mjI6)#DBROGUk[Gtj<DimPX!7&S9pFKj,]3_NmM%DO9!-?4ubXJ(ck4Q>8%Q9IN9W,t]$fPBdEB+^:bB9Ag#:JOUn!D4H8n<B93h]W!qIEH''0nd$<VYC+\FB95HB5dZi3r>0)8O1[88%RnsoJl0CJ25t`uu4lb)49T]1@0U]V/F-'8?/k2'=&NMZkpK8OQVc`/)\RPMk"L[MX%R2b3Eii(jR#Gq46m!j6G3S1Ac45SfW1b+_%R<e@H,oT-\V2T2BD&:di0oQq\K4?l1$oAtL,g6L?(J(9K[<I07%3SCsonrguPu@Q)#`7It2>n^aAFZ4>&O=epiK3AU(q[[=E^PT\%(8cNm+K="o5_`g"mUuGAO>9j`(!(o]@]oj";O1\NL8eO5Td_-:[g7TsR[scJ(6O+XGB8[=G<$SN#_`?!Fh1!Y^#JIHJYHOn)$lnH%[_*eC5eS?G;m-Jman@Jd@V*381e*iMdbrd$5Y<JpN-[o0gi;.'!u]<[lt%;^d-P>:W;M)^#Y\Jq_^iSXNB@^72>t4Jh[t=r)2u)<%+u`3/+sb$HSdhk/q=EAQLKB/9HWi&F.mfQ:S=J+[!e`jidjp"MM8BApEf2W1K!0!ON>)Xc@A[DM+O`&SYV7,IBUT6RGX`MM6Gn:u%7Mol:<Eo*S89fti(GWIt;_Q<M@^+f/@AJdb9[kj",j$Sj?@#'XNPHpIQ=km9];"8,;(+JeL2V`"&n>&>&J$%_TA^^i,*?WX2f_:8%2e"K6NC[+S]tNAT*";4R@OS0rKJGPNm7R4N7V%GkZ#DKP2=?cWKWT$BhT,7F?M!ATpP>d'Nt&>9!#f+>i>uEXM[ZRN$f2)m$uK,m%B5]pB'I4p34@U]ZQ'IJhf]uCe6+<ZG46Zf9HR_$_%Xq8b6CGPLRU_;PmnVCSG"<"UU9g]e=q`(mDif6,ee2?Pqt;!SE[:0A*H)>e%`ArNYkob6&,aLVaL_-;KViiQq:I9lglPhK<]HOp(rV%st?"1N1m[+LC10?WJ,igX4lM'>=>Ed4&hQ=Mo1?]FZE;GBrR^aVo;[Zac%eJTWOAU<W\.2n=,/j+\YkDW`[hCuW@,pAkZ"b)$e2(O%$Ri>ALY$U3>H[[eE8iO:l/J<YS277jWZ8ZTL\Rcet46h:TV'1Di/"EJU%,rQ$=I>o5_"\qX*/\W@o*Jn]29F^R5*NLD]_99Qd%t2c[+sAV*1"nV=3Kj:G9IP4mP^lbmm\FF(FDI=m*Gfi):n;*.dCgo"=8!mO%q,nR&VHM'$Z_iC;0^-S=WAMDg.a(^7<hc0)0Y82*A#?l]RR2KhAnWiR1a`94bbA_eOT?`mH%h8\&Kk'7nhHCnK5Z"I_*ENt?:7\+%5`$DaKr>Dk'_"d+7!q^EO<o`3^5Zr]bu'F-G5l>o%V)\fe(5Cf4Qn"fO;Y5T_TOXa'dTa,MCkh@4QQ#CBm#^AUVPD/CQ`1%[m/Lj%beqT9q3TM74HhR)A<(0[I%_/KYZMMOLUD2m^ud'HQ.,K$]=5ooWZ'QQ"#<D&+E#(6[F.7PrLbm?Thna7HGSoo#0nZ#LbHqLHfJ-j%#XacK:pJeJiRD##f&ZL`!IE.-#c+O;7$<fsbLO$`@=#n'W(0)GmHb)P\13P(Xttock*^n]'.MOU-BZB"\rJ$9R"WnX8L.Q7\90-,%OG?YhoLo=^W8GkcY9r@0cQnH1aa"mu/>+AR"mLSki@@WJ@iPkAjC-qg+CV@i29sF)ft]BXFD-X9ajS6kOPDNQO>%/2*;On)@9m-B%`ef@pj3?=>O\g0XXof!J24AQ6]PMRiol]lS",U^c)A=6O0#^bm-^#FA-PD'rM1cUDoi:TO'$$aOk!UCj-".fb-tOHJGm+M7i<Hg;%,E+'c_6<Hd"=U+Vc6K''V*O6iKRlk:O0KcQe0gMi(>&3Q2Ko,^ZUp1t![MQV_]]-l1Jt4mPR(0Pn-Oh<H23M$K-^Xk+\5j)c,`aQ%mm7q4&-6*N%p']4h$Em#It8Jg6/+jK#gNK:FLttGab@mr4nfkQ_JJ<T]*m2V)aY1@r(aMM<.4>LKQ(""e<440$cjV:!m(N^N1TO3%pQZqX$%3Kf8/:UL;G)MCq)lh0A'j<CaC,1O>j*kn!h@;_pF)Ma<4K`p("qR=d0%TN?o3E`'KdiVPjV9NIU#F=2gDI)?tAp$b[qb>%MM<QK4BO+24(][1M(ZPA/BD\&F;6+kLsVG!P(&K"m$S&Eb]r*^&JCg\eoqGQTi`YoPRHq+iagM-GR>mR(^2LJIRtaQFGd4k(d)GI%QEc(t+eT@*D3Qb;*)4)OoAT.dpl;CYb#^*9'cbOE#1FF[`uVdLo(nOPZ&/3::,;J5M//-uEfIR8-;sA&hiB&"J`\4UR84MBd+X#g%30NIr,*2SQT7Of_d]#tWHP5t'CC?7MnIqZ>o`mu/9t4P=r9`Mt9mc?r([ts8%Oso3eG,1HOS8h!HcM@f.Xt/*Eki*6dV(;KlSb-1%-I5*[Uq_`fjnT$&-WA'SM16`9$&Jsb%'Gh\<:l#eNL(aq:=Z^X"(7iicTKW3]mCT[i_#Zr]hqN6op1:"TWaID?,uCp'EjW\esD=:%+t]e^r8e`h@32"=B9eWE105qF`i.ZL,9V4N$R-.#P^[RjGd);QR/M"Aa"Tmuk7NR9@eA/dr*7n>)Rhhb&ogpWlH:EO"YW:=0dIEa%^po3ZL6Dm\*k:u:1ke4^QiSoDie>@RU+>I:d*IurpRabe3G0;Ib=L\WS#;'s9=5OP.8;^6C-odrFT:,B'LF%o-11aX\3WUM%&>A_%,]gOodj:49VT_\>A2,Qhh"feWpV*-mdW$qAhrJ\G]ONKDamsjWc"k[#&>'LF0=m"'!19e57qQ.da?#uFiJqNHPJ*'=Ou!n9X3Pa(%-\2eb:\Z+8Jf@nP;3R2A!\bu5#2=>f?>.cMD*.$_+O:3Zgn/6I!D3?9o_U<e,kLLt%$sdTamR4_^a(rYk/kA-:LbIX4n\Y^D[<I;%:4HSr!\%Gc`i<g[1F\l]l2%rDC*"o5jeCH[1;0Hq"3Y7oU_D?=n@5>qI1(R6P0aT#Hef5OYOXcoU1@esNbYki87X9c=.SsaYLZZQ%$sP-K5_ZBKe4\@"L0(W/;<AtFTq<5^k65?246ds0X@]Fgm"3Hq.W,U5nhhHR,\T`]?ZTuFq#'kMIRaAHT.)K!VST-\a`)p1I7"*8%_DlR?(++*7f:.?5[,cHmAf@%1N*]+^(+./cbID)kF3hNbNCtCNG)k:B(/WJ#6#'OXL5'[]_m3h6bB5[X=u*+18Pb+UWCb>41+ehR%er"Fae?kGW+^JJ9',fC66<glE'8A;EqQ_\!+hB:sZn3^A\XULFPdKSO@+gjqD:PbK[NuNR)erU6&@F)!VR@c_O[*bV`l*s;]51,7%Hf(-/.B1gF=iMcBifgW!)&%YOp,"D$K+RW./k+gN>N:lD6Z>=bj-#Nn*(e&XgkW$NQ],0gGN7+Z:,l;cMd?@tXtsgtgd\%-0=_&@%^,0XIZIkIR8WVP5!eC`k$ObXsV'4)WTXSRu)%uN/\*KP_;Mj.RltTm3Q=]s"lC8K.h(V.U:!YaLODSkBoT>,R:8ZB0Ef+W+PMVIM%*gq5rY3'2qM%O1LpL:SmALf<(KEsI&2ETO3cr^WEjl/"HV6XUqrPW;W=i2P;BfA&.4=8t+5n=WT(!GgpY"p3&$5N&L]2_J>IEZ0q%aiI!I:\U@/X$=lIiU>VEd:qF:SE`it%:E?hVk+Jlno>E2<;mA+SERWHXeN97<pc](fodriQJ029n(^IIC%%eAb1ScsI7@0rgOO=t%l=>>(cLn:NZ!7rcSZ6%><rGIa5I"+198-TlVJ#?kDtp<d1u#uM='9)]6uZQ7qR*F;=Q<Om>d;Ma^!CIf<]/WY/HY@2qeAmJ@g._U%h]9[SSkP-t+DqrF#E"f2h8ihuGn;o\-6N+qC%NcjSk7`$pTi=l/$-fQYa^u_7I!>JrA^e2DF!E8"(C*Ei:Lau/m&gd)o(6UTK1fe%abar>/GK^-.7%t6QujQJ*R;q#2Q4rtpB&?FLaX4N`-*%H_k-?#%`bWoI`QrV<`KK86d)Ors2Xpa+sYfBbIZ5)f0-)[j)VfV$1#qf%1X%E[T7M!*1ScW/]2:MHK.WXn-A='RZbp?W0AZr;'Q8+i;N9>B`.Zt=8!P!^@]+D3M;<8Hk\]4*_2nk&l(Dqh8p6.m;7At$hJO"=%iKN5g$bPZY!FL\q6Y(^kLl&c]:N,^04NSNHObO\>2Q`;Tk2cX#n<)CuK`eu#Y>"EqYlW^#NHMq_!8d4;'n>"^/[pjGNSKN=_rJqV%Rt_WL>N/rFr0qVT2`c2!Fb2Or[?_-U917\Y@KLISWn&PB_^)R&-:-RL2INd/#B)S\\kglD1)H\A6Qg:armEO;)kC@mi(i.qo&G\i%%<i8)l/[ilh:i)$q[r0)*$eGbG_aoODi6oY5JWaXP4P(!%K?U)GEOm7ZGT5ojGfVtVDB4QNB6LkTo%YBK1jYW)t"WW1*"&qM"j'M%"Q8e?eD)C$>6Nrp!8t)J=RKf%paG/d!.8t5Ho<N1!BA=rftVen$dNZZ:Eoj!.]1h"6i^jkpm*7WUK)Q-3e4Q@H`Iaofu8C12lkm2%3r+,ZLqc;Nr/Ct$+TBC>[PLGQAh!P)9`?*0j9L1p<-$+^^bIfVHuf9X+2H8r!1uD<!?=QKI!I]%UN\Gc*5M#u0F)da)TCYm*+Hp-%<\4e&L?#q,M8Eojhch<_,UdUT65;>m169$(3O/jc\Jfap11HAu]7G#_##MEo^[b3fe@sT#UNi";eL&=AX$st:XFRtr[jYmr2BR;J%;1t?K.n#5X'8(F\:0PbX'^BF`h1bJglM*;deS=9&:JdN22Q<d)(')4XX7GVRYiSuML>JSFW09-il/'qmp:U5e.h0Nfk"U-5E&2p%%b@(mSF#j',8B4S.g(qSkiomsf!iDf.4K9C%Vci/%E[Id$"?(:MftKQU-beR.Q4c4p:MDY2!k(6cU0@bgLcH\%6^iCp=5htsVW5Pt%h$H*C)6^"oC43FWa6EBT9D@Hl&3K!U.@^q$Aa3DBD7I)FN-6i?>sNp?dFkCVd"(3>LNlH<%[UCYN=<rB_jYSlCbs&=9@&eI76d.Q%EHNrU_:DX4K$>iCPW1qU#8>bM_[@?HX5rr/-3Q)HZ_jK:)37J-4fj4XeI"%G2T_K+8,gu)?a,2`L?!5,]senWZt)PS#XX@nXTu[V%mTfm(X:VZ.]$&m\</LZ06P##H_V',gpG((V.kcR+jEED%P45&1aS#6ZiWdNj/5XBD+?tn3Ukl.r`bem\*Ybdo7/2:G>Qg$Nj-k!r%'V2=;_5V=X*nusM(rjnq=40ms.&[$nD@W]?@IV.M.Oq*F9@T=VijcogHFsl.n%:![[Qh\sJbGFtBHM8/5>D!49aBJ,Pf&FQ6STWi%+6$hn"@W.6FYe:kg.+1&7!o^8>6sYX!W,]^(Oh.g-p.P5ok-gk&&gSE3B685)$(EhRA:?:1qlL#oi['af89@19.&qZfKal+Ss.KC%oYq%F:94:U=J(3C]ZdXUn'2\N+0DOp9X7%8]doj]^%-U1ZXU.&"QK-t*N["D`;1W(f&r=HX.Q!E*"j9$IE9KPnIkeZKf@gQI44._%kQCL_+931cEn3`.Gl"Fb5Lmo;B!FPD%/Ri*$Sq>)(p&3OIU-%#DsGI@+Z<FEnm6]?3U9T^Xm\HX530Y;Aj+-0O=ue"`VQJ'mWpVj%ohfoteO@IYH$I`D03I*U=;,PUrXoh/LR;0c!d/lg3pT/c:3[\Y%g@(`1(I@ApG<p@B9-AeW5$9(qGcD=.>'\pEp9S<#Z)U#r**NM%*3A.,K8p%ni`D7=T=+G1dUrfC4+[65[@ge1l,S<>Itko;fF<locH!2[5fEJ.ObU^JU\+TEI)sP-NcWLdWHHh`oYU%8;d#VT(-2_k%O#$aV_Fu\[V&K'#ij^)EXscesr4r+O2?79E6,J2oW>#nc;36P#Y#F782!(HX^.;J##LaE71.1cHT1o<+G5\LZc"ZS+c?kH^%dM[k%7SlrC@_rRf(/sOK)A@]f!I:R(#`8!B_2La")'g1uAU6fLr!\!dcKRA8*/J_$>r8C:U@h)oL37#;'n729N[5kU7u3^@SGYCe.dnHI%EpWrs&0R#pLp0`nE!ZFqbqVV,f#4he_?6%B2TLS(q.sn7$re'&E@L&+4X(3t-@!m<a4gdjX\eKC/rEH9#Xg5`fC.W/W(&_joSPZs%LG>X$k$cn`jH(Z7%Y84SW@;l[S4]nCLqo"3"`iGNql&"2%hO:m5IZa@LEu@;B-\)Q#*F7O&qNe6+!KG^,(i<N9JD'uesL`*(dW^t%,a0R6^p28Y[K2?>q(WQ@0J`N:_FTIl(kIto:GIV:3'M^:&hmc,)!D$[T`6u>"X@]G:GZnE9BU5^)l[/u]/hVO7c9_c=M\EVM$QR;%9JF>aFbYi>Np#sY_$I[n\VH,.g?Du?TFj.R2J)JK,Ohn,4f&#'$iLnr_EQjTKFoiM0Q*eZ^Cn\H7d`c$.[OAm(X'sdgpnWRgXrrK%Blc.jfPSXp]'f:k]Zo>of^h3%]3RU-I_NI"rd!b[^O18(pWr=+m_A5Ys1NU2n,N3SrS8Rep:&5_%mQ?ZI!kbOp@u\WlhB:D*Zk=N%q!%$MYE-F^5J:AeI=;%\l2(2Go&\Wd\#98>rTF%Ap$(eO0<\1'YFiT-DNVE#puW(t+92?#jo7?r'HR~>%AI9_PrivateDataEnd