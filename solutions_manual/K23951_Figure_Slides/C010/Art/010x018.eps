%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 010x018.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 360 157
%%HiResBoundingBox: 0 0 359.9956 156.7778
%%CropBox: 0 0 359.9956 156.7778
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 56 8%%BeginData: 4054 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FFA8FD7AFF52A87DA87D7DA8FF7DFFAFFFFFFFA9FFA8FD6EFF%7D7D5259527D5284FF7DA8FD05FFA8A8FD6FFFA8FF7DFD04A8FFA8FD88FF%FD05A8FD6AFFA8FFFFFFA8A8FFFF7DFD08FFA852FF7D76FD69FFA87D7DA8%7D7D52A8FF7DA8FD05FFA8FD05FFA8FFA8A8FD66FFA8527D527D59527DA8%52A8A8FD04FFA87DFFA8FFFFA8A8FFA8FD69FFA8A8FFA8FD9AFFA8FD7EFF%A8A8FD7DFFA8FFA8FD7AFFA8A8FD04FF7DFD78FF527D7D52FD04FF52A87D%527DFD72FFA87DFFFFA1FD04FFA8A8FF52A8FD73FFA8FD0AFF7D7DFD74FF%A8FD08FFCBFD6EFF7DA8FD06FFA8A8FD07FF7DFD07FF7DFD53FFA8FD04FF%A8FFA8A8FD08FFA8FFA1FFA8FD05FFA8FD0AFFA8FD58FFA8527D537D527D%7EFF52A8FD05FFA8A8FFA8FFA8A8FFA8A8FFA8FD0AFFA8A8FF7DFFAFFFFF%CA7DFFA8FD4EFF7EFD047DA87DA8AFA8A8FD05FFA8FFA8FFFFFFA8FFA8A8%FD0CFFA8FFA8A8FD05FFA8FFFFA8FD4EFFA8FFA8A8FD0CFFA8FD05FFCAFD%0FFFA8FDFCFFFD1FFFA8FFA8A8FD7DFFA8FFFFFFA8FD78FFA8A8FFA8A8FF%A1FFA8A8FD75FFA8FFA8FFA8FFFFFFA8FFA8FFA8FD73FFA8FD0AFFA8FD74%FF7DA8FD09FF7DA1FD6CFFA8FD07FFA8FD08FFCAA8FD6CFFCA7D7DFD0FFF%A8FD07FFA8FD64FFA87DA8A87DFFFFFFA87D7DFD09FF7DA8FFFFFFA87DFF%7DA8FFFFA8FD60FFA8FD04FFA8A8FFA8FD0DFF7DFD05FFA8FFA8FD5CFF7D%7DA8A87DFFFFFFA8A17DA17DCAFD0BFFA87DA87DA8FFFFA8A87DA87D7DA8%FD59FFA8A1FFA8FD05FFA8FD0FFFA8FD0BFFA8FD5AFF7D7DA8FD21FF7D7D%A8FD5AFFA8FD21FFA8A8A8FD5CFFA8FD20FFA8A8FD5BFFA87DFD22FFA87D%FD5AFFA8A8FD23FFA8FD5AFFA87DFF7DA8FD1CFFFD04A87DFD5AFFA8FFA8%CAA2A8FD1AFFFD05A8FD60FFA8FD1BFFA8FD64FF7DFD19FFA8FD4CFFA8FD%18FFA8A8FD17FFA8FD18FFA8FD33FFA8FFA8FD17FFA8FD19FFA8FD15FFA8%FFA8FFA8FD2EFFA8FD05FFA8FD15FF7DFD1BFFA8FFA8FD12FFA8A8FFA8FF%FFA8FD2CFFA8A8FFA8FFFFA8A8A87DFFA8FD0BFFA8FF7DA8A8A8FD1AFFA8%FFFFA8A8FD0EFFA87DFFA8FFFFFFA8FF7DA8FD35FFA8FD0CFFA8A8FD23FF%A8FD0DFFA8FD33FFA87DFD0AFFA8A8FD0BFFA87DFD22FFA8A8FD0CFF7DA8%FD0AFFA1FD28FFA87DA8FD09FF7DA8FD0BFFA87DFD22FFA87DFD0CFFA87D%FD09FF7DA8FD0FFFA8FD0FFFA8FFFFA8FD04FFA8FFFFA8A8FD07FF7DFD07%FF7DFD07FFA8FD20FFA8A8FD06FFA8A8FD07FFA8FD07FFA8FD07FFA8FD09%FFA8A8FFA8A87DFFFFA8A8FD07FFA8A17DA8A8FFFFFFA8A8A8FD08FFA87D%FD04FFA87DCB7DA8FFFFFFA87DA8FD21FFA17DFFFFFFFD04A87DFD04FFA8%7DFD09FF7DA8FD04FF7DA8A8A8FD06FFA8527DFD04527DA827A8FD05FFA8%FFA87DFFA8A8FFFFA8FF7DFD0AFFA8A8FFA8FFA1A8FFA8A1FFA8FFA8A8FD%22FFA8A8FFFFA8FF7DFFFFA8A8FFA8FF7DFD0AFFA87DFFA8FFA8A8FFFF7D%FFA8FD04FFA8847D7D7DA87DA9FFA8A8FD04FFFD04A8FFFFFFA8CAFD04A8%FD0AFFFD06A8FD04FFFD05A8FD23FFA8A87DA8A8FFFFFFA8FFFD04A8FD0B%FFCAFD05A8FFFFFD04A8FFFFA8FFFFFFA8FD0AFFA87DFF7DA8FFFFFFA87D%FFA87DFD0CFF7DA8FF7DA8FFFFFFA87DFFA17DFD24FFA87DFFA87DA8FFFF%FF7DA8A87DA8FD0BFFA87DA8A87DFFFFFFA87DA8FF7DFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T11:05:01+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T11:05:01+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T11:05:01+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>112</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAcAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7v5wvfPcGt2R0LTzdWMH&#xA;GRypUCQvHOsqycpoq+nSJkXj8TH7QocVY7+n/wA19Vt3KWkcEUF36EptYeMgMUkgcNyuXLIvpxkm&#xA;M/Fy47jfChlJvPNskmhXT20kUjadcPq1tGimJL0pCY19NpFY0cSBR6n+y74EsrxVDg34vaFImsmV&#xA;j6nNhIrDhwXhxIYNWQs3McaKApqSFURirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirDfOH5jWnlzWrPT5YwVcK90zsifu5o7j0zGzugAR7b967Diinc4qkl1&#xA;+dELxA2enNAwnSFnvJYQtWeReI9ORl5n0G2LjajbjDSp3L+YVsbjQ5IJ7NLXVrI3z2k8yR3SxGB5&#xA;Q4Yv6VFdFQjevxtUCM1CsyxVBXc7TSzaYjXNpNNbyNDfwxBghFFJR5ElhEieorKsikNvQMFeiqRX&#xA;2h6lD5finbXdbjv7YNNdXsC2c95JG9DJG1qtrLaP6aqOIht+fw/ASXfmqyT6xN9dFv8AVpDCYzJ9&#xA;crH6YYMB6ZHL1ORBqCE4+9diqrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FVG0srS0SRLaIRLLI80gXvJIeTsfdmNTiqtirsVdirsVdirsVQzXbi6gRY+dtOp&#xA;pcryYc6clFEVgFKKxLuyivFRyLbKonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYqxOz0zz/PpttfT63pa68ygNJBZ3kumCCRVZ0S2+vxGWT1FHG4&#xA;ZvsbBF5NVVkepabZ6npl3pl9H61lfQyW11EGZOcUylHXkhVlqrHcGoxVINTTzvZeWby8k1O3udYs&#xA;fUuoBYaXI0c8UcRrbGzkvXllkY1KGO5j+Ph+yGDqp/pc7XGmWk7XMN60sMchvLUcbeYsgPqwrzmp&#xA;G/2lHNtv2j1xVE4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkeu+ctD0O9&#xA;trS/lMbXFS7gVWJfTkdGem/7wwMqAAliNsVS+4/NHyfGo+rXL3snNU9OCKQkBmZeZLKq8fgbeu9C&#xA;BU4aVMZ/N2lxXGmpxlkt9Vga5s7xFVo2RIzMRw5euT6Y5fDGffAqd4qpSXUStLHGRNcwxiVrVGX1&#xA;eLcgmzFQOZRgpYgVB32xVLRqckcdxq7SCfTZ0gXS4YZY2E3qAekyc44eMtxLN6dGmZKKhBUs+Kpo&#xA;J4GneASKZ41V3iBHNUcsEYr1AYowB70PhiqjHayDUZrsykxSwxRLBWSitG0jFqFzGOQkA+GNW2+J&#xA;mHEIqicVQd8UgddRnumgs7OKZ7mMsqw8eIb1ZDxLkxqhAHILRiSCQvFVVgu0cQJKPq91PEZhZysn&#xA;rKF48wQjOp4GRVYqSKkb7jFXSpeNcwPFLGlqof6xE0bNI5NAnCTmoQLvWqNy23HdVqG/tZYLWbmY&#xA;hehTbRzq0ErFkMvD0pQkiuEUkoyhhQ1GxxVEYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYqk+reUPLur3a3moWnrXKKqLIJJENE58DRGUck9V+DdVqaUxVLrX8tfKdvFJGYJJudw1yrt&#xA;NIjoSzuqI0RjIjQytxX3qanfG1TVPLGipBbQLFIIbOH6vap681I04snwfHswR2UP9oKaVpiqaYqo&#xA;S2NvKzueaNIjxuY5JI6iQKCx4MvxgRgK/wBpf2SKnFVSeFJoJIXLBJVKMUdo3AYUPF0Ksp8CpqMV&#xA;UxY2gu/rhiDXVGVJnqzokgj5pGWrwR/RQsq0BIqd98VVkRI0VEUIiAKqqKAAbAADFW8VdiqFTS7F&#xA;Wt3aMzPaBRbPO7zNGyI8YdWkLkSFJXVpPtMDRicVRKIiCiKFBJYgCgqxqT9JNcVQ6abYR28FtBCt&#xA;vBaqiW0cFYRHHEVKxp6fHjH+7UFB8JAoRTbFUTirsVdirsVULy/s7KNZLqZYUduCFj1NCxp/qqpZ&#xA;j2UFjsCcVV8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdiqAurm+kkkt7JEE8DKziWVULIV5IVCrOQkkimIllBFGKg0FVV1rYyxapfXZ4JFciFUjQt&#xA;VmiUhpXrRebcgmwrxRasdgqqHFjqtvDcJYtAk8908xu7gNKSjjlV44xDyZKCFRz2RVPI044qjrO9&#xA;hu0leGpjjlkh5mlGaJiklN6/DIrJvTceFCVVfFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqk175jeO4aGz0+5vPq0gXUXEUsaxRUqzx80/0hhUHhFUkdN6BlUz&#xA;sryG8tkuYRIsb1oJopIH+ElTWOVUddx3GKpNG+mHzPMtnJffpAOBfgC6exA9BDxb1P8ARVbgYyPS&#xA;o9aV251VT/FUPqBuRYXJtldrkROYFjKBy/E8QhlBjDV6c/h8dsVQfl1dNFnL9Q+u+kZSXGoG9MvP&#xA;iteP1794FpT7Pw1r3riq691y3t74adFHLcai6JIkSQzGICRmVGlnVHiiWsbfaNdtgTQFVW0zV7HU&#xA;0me0Mn+jyejOk0Mtu6vwWShSZY3+xIp6d8VRmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KsX0u/vtYvtWWLVbGS40m6kt7WGCFnEJJoGuVaXm7heUXwFFrz6/sqp7ptpc&#xA;W8UjXUqTXc7+pcSxI8cZYKqLwjeSYoOCKCOW5qe+KpdLoWqMq28V/Fa2VoUfTIbaGWFo2iI9JJmW&#xA;fhNDxqrR8F5DuCK4qmGnWd1CJJb2eO5vZiPUmiiEKBF2SNFLSPxFS3xO3xMxFAaBVGYq7FUmvNDv&#xA;rj1rSK8Sz0qcu7x2sckN2skhMjSR3KTKqkynmaxGu4PXFUVp9lqCStcalcw3Vzx9OEwQegkcdatQ&#xA;PJPJyc05fHQ8V+EUJKqjcaTqMt5LxvgNMumV7m0eIySbKqNHFKX4RxOEHJfSJ3chgWBVVQ8uaw9/&#xA;dajA2q2Oo/VGjRVs1VXQMCeUnG5udmPwiqp8SNsRTFU8xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KpJp1zqGoavcvPbw2qaZNNagpIZZ5A4R1D8okWNHjMctEdjXiCRxZSq&#xA;neKuxV2KuxV2KuxV2KrLiJpYJIlkaFpFZVmj480JFOS8gy1HUVBGKpXoN5fSSXVjPYW1lDpwihiF&#xA;nOZowSnL0uLQ25T04zGdlpRhQ7HFU3xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KpOPK9hG8/wBXluYIbuR5byFLq6VWaRzKWiKyqYG9Tc+nQEEgjcUVVNOUabM2nz3BaOeV&#xA;jpSyySzSGNYkZ0eaYuzP6nqMAWJ4dNlNFU0xV2KuxV2KuxVxIAJJoBuScVSYaY97cSakLm7hlqjW&#xA;Ad5Yolj9JDxe0Dxq4LlufqqJNyKii0VRmnaRaaeZDbvcOZePM3FzcXJ+GtOPryScftH7OKo3FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhV1CJtSfTxHL6iRLN63BvRNWKlPUHw+ouxKnehBHs&#xA;qhSSbNdYSZpp0tuX7lpDbzqqMwKwKbigcnkCgMlKCp6YqipNSto9QisWYCaVCwqyCh3KpxLByzqk&#xA;jLRTsjdKYqisVdirsVQt3qVtaz20MrANcvxWrIvEbKGPJlJBkdIxxqeTqKb4qhoozf6i0twjouk3&#xA;LrZ0NI5We3Qet9kEmMTSRUDFa8ifipxVTPFXYq7FXYq7FVK7tbe7tZrS5QSW9wjRTRmoDI4KsNt9&#xA;wcVQrX5tbW5acPKbRkijOyyTu0aFQOYhiLySScRxPGu1QagKoyGaGeGOeCRZYZVDxSoQysrCqsrD&#xA;YgjocVX4q7FVk00MEMk8ziOGJS8kjGiqqipYk9ABiqBXVml/RzQQl0vZHiuFqC9uY45Gf1DGZEqk&#xA;sfpOOVAx69iq1asbK8XTvVP1WK3aaOS5kMs0n7yjUd358YF4hiwNea/Fsaqq2lapbanaLcwrJGfs&#xA;zW86GOaJ6BjHLG26tRgfcEEVBBxVGYq7FXYq7FXYq7FXYq7FVoljMjRBwZVAZkqOQViQpI8DxNPl&#xA;irpTKInMSq8oU+mrEqpamwLAMQK96HFUo8sy6hDZppOqvG+qWMEBmeOaS49SNwyJK7yRQnk7wvUb&#xA;9Nya4qnOKpZrs920DadYAHULyKX0y0r2/CNeKPKsyxXAV0Mq8Rx3PyOKo2yR0s4Ekhjt3WNA0ELc&#xA;ooyFAKRsVjqq9AeI27DFVz3VtHcRW7zItxMGaGFmAdwlOZVTuePIVp0xVUxVJNEt9Ws9Q1GO8t4k&#xA;s7y6kubF7aVpERSFUrJGyR+m8pUynhyUuz1NaF1U7xV2KuxV2KuxV2KuxVSu7qC0tZrq4YrBbo0s&#xA;rAFiEQFmPFQWOw6AYqgNHh1Zby/uNQt4YfrDRtA0dw1w3FU4+mQ0EHBVpzADP8Tt07qpjPPDBDJP&#xA;PIsUESl5ZXIVVVRVmZjsAB1OKrkdJEV0YOjgMrKagg7ggjFUs1tNY9bT59OjWaO1maa8g9YwvLH6&#xA;Lx+mg4lHPKTkA7KvJRuOoVTNWDKGFaEVFQQd/Y4q3iqV276lc6wLg28MWmwRzwLIZS9w8vqoK8EB&#xA;jVP3TdXLdNl3GKppiqyG4gmDmGRJRG5jk4MG4uuzKadCO4xVfirDPOWheeNQ1i0utDu7eG3tAHhE&#xA;r+myyGOeOfpDNX1FkjCtWi0J4k0xVj0Hlr8z9XhmW/1UmGK8osVwwgJEEkhEyenagMpHpFAwIqvL&#xA;bphQyG78tec7l9AupNViM+mW5S+gXmpluGtZYZJ0mA4VZ3SgeD4dyOvEhLMJ5khhkmcMUjUuwRWk&#xA;chRU8UQMzHwCipxVIbzWpbm1ljNrfJa6hHLDYyWsE8dyrgcCZOaIbZnZv3TOAgC8mcVAxVTvfKtl&#xA;BpgliFy97bBpZZbe5vFnnqI/XUMLlZHZ0gVYxJIwWi9hiqKm16sD3Mlpd/ouUNFGUtrsXZkp1EEc&#xA;ZmRG+IBnCUK9wynFUV5f0ybTtMjguJXmuW+O4d57i4HMgAhHuXkfiAB4Amp4rWmKpjiqA1vSY9Ts&#xA;/SLNHPETJaSpLPFwm4MisTbyQyFaOaqHFRiqAtNddbWGSLT7xNOtkWO6kuo7lrxXoAqJCI5pbgg0&#xA;9SQHjvUM9Goqt0rQYprCd7p7oi+k9eENdXyzQxci0QBklEkMnF6OI+HXgagVKrVpq9xaWUMAt7u4&#xA;TTI4odSlkhuZZ3faKsLPFD9aoQzySIOg+FSWFFVXy/paLcXWqyrcGa6llNo13LK8iW0pV+Aik+G3&#xA;DOu0aqDxC8/iFAqnmKuxV2KuxV2KuxV2KuxVjdpCug3M+nWFteXLzrF+jlkku5rVUVSvpvPM9wkP&#xA;AhmbZaqVCq7CmKr1UavrNtI639tLpyk3iK13b2bSBgQikm2FxR1NHCMhSoYfEtFXCK08vXs5tre9&#xA;mivwpt7OD6xcxLP6kjScVKtDahjKu7SKh8F4klVbcGLXZ4NMu7a6U27yfpFWS7tbaWNVaMhXT9zO&#xA;krlWEbOfgry3BXFWR4q7FUhvLax0bVG1hI7sx3SyLdW9r9ZuEedvTKP9UiSVQ3GJh6g4+/Itsqp3&#xA;l5LqXDSp7a9tbx5o3Lxi6t4hDtK/+mWpaOqx8oyPUHKQeBBxVUvLKx0i6sb6GC5Wzt0+rNb2QupF&#xA;WicYXa2gco6qqlK+i7V4bhVxVFWOtNNPHBc2ssEtyDLa8Ybl09EgspnkaGOOCXY8omaoPc1GKv8A&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:2ACC7A02122068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2ACC7A02122068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2ACC7A02122068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T11:05:01+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -156.778 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 156.778 li
359.996 156.778 li
359.996 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 156.778 mo
359.996 156.778 li
359.996 0 li
0 0 li
0 156.778 li
clp
gsave
0 156.778 mo
359.996 156.778 li
359.996 0 li
0 0 li
0 156.778 li
clp
gsave
42.581 8.17724 mo
56.8857 8.17724 li
56.8857 1.21826 li
42.581 1.21826 li
42.581 8.17724 li
clp
56.8857 8.17724 mo
42.581 8.17724 li
42.581 1.21826 li
56.886 1.21826 li
56.8857 8.17724 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 156.778 ]ct
[15.0782 0 0 7.7324 42.1944 148.214 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 39 
/H 20 
/M[39 0 0 -20 0 20 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 39 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcNOc!Z/Hbh#IKfWt=\!n,NM&W"Rkc!7T^'!hH!Uj8f#V!f2bkh#IM2M20me!^9(=
h>dX1\I?%L0&HX3,H;'M,MrJ(,c:sH,i/M&aoKWZ!9aCcX)7oTX5<m[RT]\pRbn)JQWjGoQgOkE!!I?F
!!@<#!!Z0)!<</-:#Q'Q4f/,X!Mqs@!;ulu5,/#V!MVd9!!')!!!'(Y!!32.:&Y+o9sar\!!/oZrVup]
!2\WS!MVdW!!,9Xi;`kYqu?_tiW'!sX8DquX)@_5lMprhRf!-dRTe_O!F(og!!/EjirB)^F8Q"=Es(k2
p&G.#\h<m\!\V"ijT#>dW[%EA![F]LjT#>dV^20?![OZJjo>G_!6b3=!6X@&!Jm<C!!/XHjT#=%M#%)P
LiVSW!HNqk!!.gpjT#;u55G6[4rE_g!/1-^!PJg9!!*D>pqHf^q#CD4poORu#5S<##-@X&!Ng88!!$p3
Wr]1(q>^O#WVELoDYX84'DU\ih"UjLh"^"3'@Hl4!.k3&!.k3]!.Y~>

%%EndBinary
grestore
np
grestore
gsave
42.581 22.6675 mo
80.4697 22.6675 li
80.4697 9.90865 li
42.581 9.90865 li
42.581 22.6675 li
clp
80.4698 22.6671 mo
42.581 22.6671 li
42.581 9.90865 li
80.4698 9.90865 li
80.4697 22.6675 li
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 156.778 ]ct
[38.662 0 0 13.5317 42.1944 133.724 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 100 
/H 35 
/M[100 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 100 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 100 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 100 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 100 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&KE)#h])WY?!!3_4&Ea&)!!3e3'$L@*!!(KP!:TsiSY2RI!!7t7
M>@4M!!7n3LYi*K!!5>R5f<ZZ!!Fpb%(\'k!;QTt,H;'M,GG/@,c:sH,kD#>!!::CbLZa;!!K??!,ejN
!9O7aRT]\pR\BcbQWjGoQ_FH_EruCEF6`h:!!Z0)!<</-:!isj!!,6ZrVutq4gk@Z!!,9XrVutn5,/)X
X8W)!X8W*s!!32.:&Y+o9sar_!5SX9V*4eX!Bm:$!8IPTU-APV!C!6\!;?HnX8DqtX4%'t!!-u<qu?bu
DRfc8!!-8lqu?bd>,D9#>F56f!1*[iV>pW!F8Q"=Es(S*_#ONC\h<m\!\V"iblHN!!X>YLqu?dCWWoa/
pAb7!V^20?![OZJVZ6_?q>^N<q>dYu!Jm<C!!/XHhuLk!!HO"m!!.mr`;ns!!HNqk!!.gpWW3,$!#Ror
!!,8#ZN("7^%f>C]a=N8!=?I7^B)"VrW'b7!=>k&XT>L-q>^O#XSAmuX9mneg].?]WVELpW<W2!!=#Ou
Wr]1+a8ko6!8I;2!8R>L!8RA3!8G-d!IUm<!;$6lWI;DZ!G@b]!!/F"o`3&5!G@VY!!/9sg&U.5!=NQ&
!!-X>^B"65!Wo]4kPtZfZN@c>!Wf&gli?ta!_B*f]Dr!6ThFSL!_T-em/YH4!2ATU!2S!Bl2UlE\I7[&
!XlOt\c;g_WX&Uj!!3G+/%P]^/>`^<!!ES)/-#[^!!(.)!!(.$!7h,NQC$k:!LB(n!:^'hJa*78J[b[\
It7:oo)Jf@J@GR[0/;_l!A?2$!5ed<$b84_!!5*i$ek[<!!3G+/*m6;/#ilj!;QTr#c90>!!4^K#e'd6
am]<-!!(-L!!6?1!q$$i!jc+u!6P9C8>H:S!!31r9%!_$!!5cd!U]ph!MN/q!!3-#V!J']U>#\%!!0'I
mJm98WPAN,!!/F"mJm9#Qa?_nPA'RgqZ$Y0PI(;jAIRu,!=NQ.!8@JT(V:LQ!!4(N)Xm_.)S6pW!!3tK
(Ztel!!3_4&F]Z$'<;f9!!3h7'CYu'&??At!!3e3'(c2&!!3k5'^u)('W;`8!!3e3'&*Bde*[29dI$u8
d/`V8!7T[&!hH!Un,NK[M!b6DLS!u8!hH!Uq>fOU!f2bkn,NKFEp`o.EJa/b!f2bkhZ3WU!euPen,NKD
Ep`o.EJO#`!euPeg].C>7R6GC"$RP%!:Tsh(I7Hi!^9(=h#IR1\I?&%nc/_D\I%[(!XZFjq>g<k">74n
\h;h>"='oQW[%'7![F]LmJm:mW[%'7"='oQW[%*8li7/6V[97Hnc/_:VZuPh!X>PJnc/e<V[97Hh#IT#
!6Y?Bnc/[4li7%/n,NO4!6a0u"KQD?DQE=.!NU,3!;?HoDQE=."KQD?DQDUo"I`Ko>+5!^!Ld3Y!!-8l
nc/f]=o_`ph>d\F>6%lonc/]W>O2=j>F4m\"IE<m>F4XUoDf#8!rrFEnc/]3"7-!g"*=#5"EOYF"*<?"
##2H*!!0H$q#L<m!_p$&li7(fZq^/m##2H*!!0H$huEd@V>^GqV*4GN!Bm:H!<)s!V*4GN!Bm:Y!!/oZ
huEdAUAb,nU-A2L!C!7C!!/fXoDenUUAb,pU-8PWi;`kYrVur!nc/Zjl2Ugbnc/ZjrVur!irK&Y!WfZ&
rW!!oZiTk#!WfZ&l2Ul[ZiTk#!WfZ&rW!!oZiT+c!MqsY!!,6ZoDerh4TOdJ!Bm:O!!/oZrVus^V;M=S
U-APV!C!7M!!/fXl2UiKUAb/e!!/fXrVus_U>Q"OX8DqtX7QAlX69N`X7QAlX8DqtX7lV[!!-u<qu?bu
DY=&2DQDt$!NU,3!!-u<qu?buDW1Ws>+5Ej!rr=i>4qps>+4XT!Ld3c!!-8lqu?bd>2fM_>F56f!LI$a
!!-;jpAjaa!LI$a!!-;jqu?ba>N,V`"*=A?!HSA:!!*1CkPtX)"8;cs!!@<?!!.-CirB,e\h<m\!\V"i
p](@%\h<1H!\V"ip](@%\h<m\!\V"inGr1]!X>YLqu?dCWWr4u!X>YLkPtZ/WWr4u!X>YLqu?dCWWqMa
!X>PJqu?dDV[!,#qZ$[%V^1I+![OZJp](@"V^20?![OZJirB)&q>^N<p&G*9mK!%_!6Y!8!6b3=!6X=%
!Jm<C!!/XHp](>NS`TnQSV[%@!Jm<D!!3.kLu\O:EesPl!Jkdk!!.+rjo>F<EqfV8EesPl!Jkd\!;lft
EeaDj!JYXi!!.+pjo>F:EqfV8EeaDj!JYXU!!*p#q>^O[)#+(3(d@'^!Bq@q!!*p#q>^O[)"Rb*!!%]I
^B)"Sq>^O&^%f>C]a<g$!=?I7^B)"Sq>^O&^%f>BK_PNIDYU=7X9SM$!X>a.q5j\!#3Gmd#-@U%!NZM%
!!*;*poOO6p](;3po=Fp#5S<##-%Bu!N?:m!;?Ho#-%Bu!N?;"!!*;'po=C4p](:-puVS3p](<LpuVS3
j8]28puVS3quHZq!8RA3!#(IpJcLB&JcLB&JcLB&JcLB&JcLB&JcMMFJ,~>

%%EndBinary
grestore
np
grestore
gsave
42.581 60.434 mo
150.448 60.434 li
150.448 25.2514 li
42.581 25.2514 li
42.581 60.434 li
clp
150.448 60.4339 mo
42.581 60.4339 li
42.581 25.2514 li
150.448 25.2514 li
150.448 60.434 li
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 156.778 ]ct
[108.64 0 0 35.9557 42.1944 95.9573 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 281 
/H 93 
/M[281 0 0 -93 0 93 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 281 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&K`H])
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLK)JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&S,`U,],0`4JcLB&!rrn5&;C1:!9F1^&uZG:!.k3m
!!(K[!.k3S!!8^aT%<so!0dHbLl7,\!/1E)!;-<nL5C\J!.k4)!!5>R5cas;!5JR;0"DD%0$"$E!2TYu
,H;'M,NAcU!/^aZ,c:sH,lRdq!.k4<!!::CbF&?^!7LoNX)7oTX0hqZ!4W"3RT]\pRa;%d!1a)mQWjGo
Qg4X'!.k1REruCEF,'aI!9X=d9sap$!OPRr!.k3p!!,6ZrVutq4h^oJ!3lM)5,/#V!MVd2!.k39!!')!
!!'(k!/1E)!;HNq!OPT#!!5m%!L*S9!8IPTV*4eX!Bm9^!.k3e!!/fXrVus_U<*Ce!2]_rX8DqtX5j84
!/pmYDQE[8!ip2=JcLB&n,NJmRf!-dRTc3]JcO=$!F(og!!/Ej[fD![\c;a5F8Q"=Es'hjJcMGD!XZFj
qu?dN\I%[(JcLK)!X>YLqu?dCWWn=\JcP$8!X>PJqu?dDVZrstJcO$q!6b3=!6W%VJcN+W!Jm<C!!/XH
gAlg*QiI/-M#%)PLiW1hK`H])q#CG9LAClNL2rOZJcOX-!>n#s!!,8#YQ07Tc2[kR^%f>C]a=N8!=?I7
^B)"Vec::%ZN("4XSAmuX9SM$!=#Y#XT>L0nGn.@QiI-nWVELpW<W2!!=#OuWr]1+N<"P1qZ$WNpuVS3
p](<LpuVS2VZ;;KhuEe*WTF0]WI;V`JcNai!G@b]!!/F"h#N$,WW3'4PNDiGPA'^kJcLi3!=NQ6!:^$i
AIOe'JcPBB!Wo]4kPtZfZN@<1JcOF'!Wf&gkPtZTU]JU<JcNIa!WeufkPtZVT`O6TJcMJE!2ATU!i,er
K`H`*!&jqh$gI]n$b83f!.k46!!4[N#jMBk#c]Dc!.k3p!!4^K#jMBk#c90&!.k3T!!(.)!!(./!.k39
!!/CPn,W=c!LB(0!.k4H!<7W8!<7VH!.k4-!!.S"l2Uj7JA;/:!5ed;0/;_l!A?1^!.k3L!!3P=2s^MG
2n9=i!.k31!!3G+/,92;!!4[N#a,1>!:^$j#c90>!!4^K#d")Y!7_&Lam&j+ai=C5!4i.3>-e:u!!35.
>N,X7!1s5m8>H:S!!31r9)SaD!.k1Q!(rpcmJm:hThCmUJcOj3!2Sr]!2?n%JcNmm!NCM8!!.JHd/\au
XoJKhB^Pj$B:%rbJcLu7!L%3f!;uluB9S,OJcPNF!G)]-!!*I?UB#lGn,NM+],0r:!ZJZhn,NM.],L/=
!Z/HbdK"k!eGoX^Wt=b#!Y_UJn,NM'WtXt&!YDCDm/V_<\c;dEW"SS"!YhRIn,NM(W"ek(r;Zm3W"Ope
ScAc>mJm77q>g0g!7C37!7R\CKE)%DTE(SQ!!/XHmJm9CT'u^]SY2Rh!.k47!!7t7M=:KGLiVn`!HEtc
!!7t7M:qr]!6kKFL5C]T!!.gpmJm9-L[Y9FL5C]Y!.k3V!!5>R5k"aS4rE\f!>e$!!;-<n5"7f%!0mNe
0"DD%0(T&F!%tegmJm:p\h<OR">74n\h:2eJcPTH"='oQW[%'7![F]LmJm:mW[%'7"='oQW[#[eJcOX-
"=0lOV^1g5![OZJmJm:mV^1g5"=0lOV^1C)JcNXf!m1Mdn,NI2li7%/n,NR5!6Y@o!2ol#X)7oTX7?5k
X)@G-qu?b8X7?5nX)7oTX.96M!!J`o!*Yig!;HNpRTf%X!Etr_!!J`o!*Yi$!.k4@!!JWm!*bf\!!/Ej
li7&jQgt+ZQWjGoQdYqd!7h,QEruCEF7K;3Es(b/!<[E6!!I?F!!@<1!.k3`!!Z0)!<</-:%SDe9sarf
!!32.:%ePm!!#a#!<</-9oB"F!!,6ZrVutq4nJ^T4f.oRo)Jff4nJ^T4f/,X!MqrV!/:IU5,&#W!W\rY
oDenUU?V^ZU-A2L!C!7W!!/fX_#T&ekl:^arVur!nc/Zjl2Ugbnc/ZjrVur!gAlg*ci=+JZq^N"!_p$&
p&G-pZq]fc!_p$&p&G-pZq^N"!_p$&p],mGZiC-'4oPE^4f.cN!MqsE!!,6ZrW)Zm!MqsY!!,6ZQ2m3N
!MVdW!!,9XoDeod53`+K5,.ZL!MVdW!!,9XYlK@Uq>^Mrqu?_toDellkPtU`oDellqu?_tbQ*4phuEdq
X8DquX)@V2!H+t%!!0-<p&G,2X8DquX)@,$JcNai!Etri!!/Nlp&G+sRcj_PRTfCb!Etri!!/NlKE/"P
!F(og!!/Ejp&G+tQgXqN!!/Ejp&G+tQi$gaQWp'^NrT1_F8Q"=Es)@@q>^NuF6ET)Es)+9!<[E@!!.-C
\c@<^oDeq!\h<m\!\V"ip](@%\h<1H!\V"ip](@%\h<m\!\V"iec::%f`2'XW[%EA![F]Lp](@"W[$^-
![F]Lp](@"W[%EA![F]LnGn.@^&S3=V^20?![OZJp](@"V^1I+![OZJp](@"V^20?![OZJN<#[Q!6b3=
!6Y!8!6b'9nGiR3p&G*9q>^N<VZ;MQ!Jm<F!<)s!SV[%@!Jm</!!/XHp](>NSb`<eSVY/`JcP-;!HO"m
!!.mrp](>8Lun[<LiW7j!HO"m!!.mrh>i--d/X2fLAClNL3!%h!HNqW!!.gpp](>8LAClNL3!(iJcN4Z
!>n#s!!,8#p](=353;hH4r=:q!!*p#q>^O[(mk;u!!*D>pqHjC$2OW&$,-,K!PJg%!!*D>pqHjC$2OW&
$,-,K!56&GL]@G[XSo:!XT>L-q>^O#XSAmuX9Ree!=#Y#XT>L-q>^O#XSAmtXOmN)!:0[d#-%Bu!N?;"
!!*;'po=Fp#3Gmd#-%Bu!N?;"!!*;'po=Coo)O@Bci=($puVS3p](<LpuVS3j8]28puVS3q>^Qs!8RA3
!8NV8[/^5_T$RJl!!/XHWW8If!HEt^!5JR8LiUH7JcPcM!HEmp!!.gphuJ?/irB)r5cOeb4rF.sJcNjl
!XZFj^&[U%!\V"iQN4,f!X>YLf`9M%![F]LZ2g$f!X>PJoDlE%![OZJblE=qo`,!8WW3%Ak5^)6g&M.k
X/l:$WrR$i!5AL7>+3G2k5YOO>+kqi!!-;jj8d:%!LI$'!/:IU"*4GBXoJKD"4mO)!9sOc!OPS(!!5m%
!V-5B!6tQFV*29fp](=XV2YJ]!!/fXdK&)'!C!6V!13`dX6]i&!!'(;!.k4K!!5m%!O)P*!OPSX!.k40
!!,6ZXoJL!4o#)0!6,!>5,,dln,NK`5*Z,J!!'(R!7_&LX02Ma!!0-<p&M])!H+s\!.k4B!!/NlYQ+]-
RcOO$!8%8PQWpZo!aCukJcNIa!HS@a!9jIa"*:(7T)\pF\I%F!bQ%\N\h:PoKE)#tWW37/!!3A),LldG
!9aCa,c:jP!!3A&,k(ec!6bECb.%HI!!(3#!3lM)SVYbqhZ*\5SYcCQ!!.mrmf:9+!HO"4!.k4I!!.gp
Z2aoGL>2c\!8dbW4rCR*!>n#p!.k3h!!4(N)SuLG!!4(N)Nt0#!!3h7'AWZ@!!3h7'<V=q!!3k5'_h[A
!!3k5'Zg?,!:^$hdBW`PdGk4Y!7q2OWI;&P"+7'J!.k3`!!/F"aT1T+!G@aj!1j/kPA'+ZbQ%ZVPIU[G
!!$R1%'fj6$YRrhJcP!7!a;o3Z2aq-ZWlo!JcO$q!_B*f\H)I+!Wf&gMu^-`!_T-ee,\A+!WeufVZ<"_
!2T#__Z0\2_#T&equ?d+\Mp_m!]RXth>i--i;`obW[k:R!\:8Vq#H!H`W-&GVC]L_nGiVAV?iFeWW3%@
g&TY'!6MDEO8o<IQh:?i!!/CPb5d+ooDnoBXoSKQjoBu5f`2&&J?AkQIt3+N^&S0e0uj:X!!+`-TE(Yc
!]RXtjT*F'!XlOt]E!Zd""UAW!3ZA(#c]E,!.k49!!4^K#d+./#c90D!.k3r!!(-L!;?Hnac-;.!!35.
>L<H+!!6?1!ic6h!!31r9'cPo!!5]e!Q>%j!<)s"!MN/f!!5cd!T3s0!9*tYU8e1nV"t(C!6>-@I&XdZ
mJm9eI?sr9!!-`!fDsA#!LIK*!0R<_B9Voe\,ZPnB[$O/!;6Bn$YQI>!G)]'!.k4+!!*MApqHjC$,-B?
$,-/L!Pb[g!5SX9$*<p(!NZLO!:Tsh#-@U%!1BP]UAt<$WVELpW<V_idJs:PWVELoQG!9R!!(dPk5=?A
gq3Ueh"^"3DqG&A!9!nYLRu3[!M,&2!.k3j!!.(r^An<8LiS1LWrN0?LY;ai!!.gpTE(&R!>e#o!6P9B
4rCm3JcPEC!XZFj^]4Eg\I$geJcOI(!X>YL^]4E\WWqtnJcNLb!X>PJa8l#9![OZJN<#[Q!6a@%h#IGt
VZ;JP!H+t;!5ed;X)>cSJcP*:!Etr-!!/Nlh#N$,ci=)NQbWS%QWs4bJcN1Y!<[Di!:^$iEs%a/QN.'f
Zq]uhe,TPEZiRH4JcPWI!Mqrr!!,6ZbQ*4phZ*\O5/I:#5,.3?JcN^h!3<m8!3:_PW;luoZiSt_kPtYb
Zq[+lNW9)CV=su6!!/oZ\H%3]nc/\SU;?m2U-@',JcO@%!3<s:!3>MfJcNC_!NU+\!;c`sDQAWpTE#"]
>3,bB!!-8lV#Z2L!gd*k`;fpCQbWTQ!9jIaEs'>\!<[Dt!.k3r!!4d`$,urH$+_b_!.k3W!!4CF#1ESE
!!3A),F&7o!!4FD#4V]E!!3A&,d79#!;HNob/=8[bK9g:!8RVUSVY8c!Jm<.!.k3f!!.mr`W-'\L]E#,
VZ6aPEo$f\!!.+pS,eKJ!Bq@r!6tQF(d>D/XT/D=],0-#n,NM+],/Kf!P9/r!;?Hp(V:KU!!3_4&G,tQ
!!3_4&B=bOWt=Xug].BeWt;92p&G.,W"R/O!YVFEbQ.P@!N6XP!!3e3'#ak)!!(Kf!!(L1!9!nXe&D@f
e)(/@!!8^aT#^m4SVY8c!Jd8f!!8^aT)/Ma!!7t7M;\Hu!!.mr`W-$ZM:qsu!!7t7M4XbLL5C]`!6kKE
L2t96!HEnf!7UuML5C\k!:Bgg5"7fY!!,8#dfB"?!>e#B!!5>R5gTMY!!Fpb%(\(6!!4d`$1S#H!!3J<
0$4.s0"DD%0'iSH!!FOH$*#5u!;QTr,H:sf!!3A),Kg&j!$eKMW["2;"=0lOV^1X0h>dU&VZt-@!X>PJ
joFKC"=0lOV^/#;rW!#B!6`F`!6W4[!QtJb!!::CbImo:!!K??!,ej[!!0-<h#QX=!H+s\!!K??!,ejj
!6G3DRT]\pR`YU2RTfIdbl@cJR`YU5RT]\pRe-T_!!JWm!*bfD!:^$iQWqB.!F(o>!;HNsQWjGoQ_=B^
EruCEF7fOa!!.-C_uKf?F7'%a!!I?F!!@;C!;HNu9sap$!OPSF!!5m%!QkE>!!32.:!<SA9sap$!OPSA
!8RVU4f/,X!Mqs'!!,6Zj8e';!Mqs'!!,6ZrVutq4lQIY!!,9XrVutn50O!/5,&#W_uKh450O!-5,/#V
!MVdV!2]_rX8W)!X5X-D!!'(:!!'(S!:TsgX8W)!X.oXr!OPT#!!H$'!<<,H!!32.9u6l39sarr!7q2P
!OPT#!!5m%!OVps!!/oZrVus^V9Ao?V*33+nc/\RV9Ao?V*4eX!Bm:-!7CiJU-APV!C!7%!!/fXmf:i;
!C!7%!!/fXrVus_U?qri!!'(t!!'(K!;ZZqX2"]8X3:PDX8DqtX/#^rDQE[8!NU,,!8mhXDQCPQ!NU,%
!9X=_DQE[8!NU+7!!-8lqu?bd>0[*K>+35,!Ld3;!!-8lqu?bd>/1.#!!-;jqu?ba>L!3L>F4(Ejo>FK
>L!3L>F56f!LI$F!6Y?C"*=A?!HS@g!!*1Cp&N89!HS@g!!*1Cqu?b="82`"!!3J<0)P\N0"D;E!;$6m
$+_b)!!4d`$.]+R!!3J<0)P\N0"D:d!!3A),Q%NC,H:tC!8.>R#-&o`!!4CF#4V]O!!3A),Q%NC,H:sN
!;ZZs#,`aE!!4FD#1*>O#,``f!;QTr,c:jn!!3A&,l@WD,c:jg!8[\UbPD2=b0BtebMiNX!!(0e!!(4=
!!(1%!5nj<Ln4AB!M,%n!!.nHr;a\7!M,%n!!.nHq>^VgL]@FS!!.+rq>^PPEod;f!!.+r^&S1iEo$ff
!!.+rq>^PPEi/m<EeaDj!et^qd/X2fL;!WgL3!(ifDkqmLAClNL2s^&nc/\-55G6[4rDWH!>n#H!:Tsh
4rDWH!>n#s!!,8#e,\A+!=Z[:^B)"Sq>^O&^%f>C]aX$'!=Z[:^B)"Sm/YQ7!=?I7^B)"Vjo>Dj^%f>C
]a=N8!=?I7^B)"Vq>eG6!=>k&XT>L-q>^O#XSAmuX9n"h!=>k+Xo,:%X9QB=!=#Y#XT>L0jo>DgXSAmu
X9SM$!=#Y#XT>L0]`8'>WVELpW<W2!!=#OuWr]1+qZ,s_!=>b#Wr]1(^&S0<WVELpW<r1so)JdtWVELp
W<W2!!=#OuWr]1+]DqrdpuVS3p](<LpuVS2j8]27puVS3^&S37!8RA3!8HQ7!8I;2!8R>L!8RA3!8GZs
nGiT;WTF0]WI<h-!IUln!8@JSWI<h-!IUm/!!0'IjoEs4!G@b]!!/F"j8]3nQg4Xe!!/F"j8]3nQf\8K
QY<u2!G@VY!!/9sk5bJ]!G@Ur!!/9sj8]9pP5kUH!!/9s])Vj>BBB0oAH3/"!!*I?WW3'2%/U%i!!*I?
jo>En%(cK@!jc+p!!6?1!os=_!jc+F!:Kmh>-e:k!!35.>Nc%g>-e:Z!9jIb!M`9N!!5]e!TX4^!M`9?
!7UuM8>H:I!!31r9'?6V8>H:S!6tQG!MN0M!!5cd!TX4^!MN0Y!4`(28tc:H!!31p9C2`W!!5cd!P/72
U?2FUV!\6U!!&an!!&hX!;lfsU?2FUUq$I,2n9=b!;lfu$b84U!!5*i$a'I1$b66riW'$=\I7[&!XlOt
^B"-2!\:8Vl2UkkW[m'/!\:8V`rP<'!XPeViW'$1WX.ki!XPeVh#Q72!\C2Sl2UkkVC^^,!\C2SjT*F'
!XPYSiW'$2V?lGe!XPYSp]/,1!6OF)!6O.!!m(EBXoJIDhuEc!p]0ga!6M\M!LB);!!/CPp]0OY!LB(T
!!/CPnGr%Y!LB);!!/CP[fHGZq>g$cs+0).s+.WZp]1>FhuNe.l2^j8aT1c0!IoXb!!.S"huEe-JC4GR
!!.S"huEe-JEd+8It6S[e,TM&1$S`>0/;Ab!A?1p!5\^:0/;Ab!A?1m!!=l/!!'P0!XlOtli7)G\I7L!
qu?d+\Mp_m!]RXthuEcc\H"ST!!5*i$b$*;#c]EA!!=aO#QWf`!XPeVYQ+_TWX/D#kPtYiW[mE9!\:8V
[f?C6!N%F7!!4^K#iG[a#c9/g!:^$j/>`^2!!3G'/F3?</>`^#!9O7]am&j+akd!tak?aF!!(-t!!(.+
!!(.,!6Y?D>-e:u!!35.>M]>]>-e;)!5&:5!jc+f!!6?1!q60m!!!),>I=G48>H:S!!31r9'cQL!!5]e
!O;\,!M`9K!;ZZs8>H:S!!31r9!nX#8tc:U!<)s"!MN0C!!5cd!O;\-!MN-dhZ*^MT`OQ]!Weuf]`@g-
!2Sr]!2A6K!2R[9kl:^Xg].>Mli7$[g&Th,!NCM8!!.JHg].ASIHLUS!!.JHg].ASII7(9I&Zc=^An;$
B^Pj$B:%BR!1*\!Z2ao<QeVQAQY?6roDeo)Qa6YmPA'@a!G@Vi!9X=_PA%6%!G@Vb!:BgfPA'@a!G@V&
!!-X>quH<g!=NPq!!-X>\H)I+!=NPq!!-X>mJm7qB?'uR(V:LQ!!4(N)Xm_.)S6pW!!3tK([qD+)S6p<
!8mhY)S6pW!!3tK([qD+)S6pW!!4(N)Xm_.(V:LW!9O7_&??B3!!3h7'CYu''<;f9!!3_4&F]Z$'<;f9
!6"p>'<;f9!!3_4&F]Z$'<;f9!!3h7'E%q'!!3_4&DI0d&uZH4!!3k5'^u)('W;`8!!3e3'))D&!!3k5
'XRiA'W;`8!!3e3'(>l&'W;`8!!3k5'^u)(&uZGs!!(L9!!(F7!!(FF!:g*ie*[29dBW`PdImS9!!(L9
!!(F7!!(F7!!(L%!!8^aT()d^!1er6!!.kHn,NN\TUtWQ!M,%_!:g*jLS!u8!hH!Un,NK[M!b6DLS!u8
!hH!UirJlT!f2bkn,NKFEp`o.EJa/b!f2bkn,NKFEngZH!!.(rn,NNGMi$p'!Jkda!!.(rn,NNGMi%E5
h>dV3M21R#!JYX_!!.(pn,NNEM21R#!JYXh!5&:4EJO#`!euPen,NKDEps&2!!%"on,NNEM20gc!^9(=
n,NJQ)"%A)(I7Hi"?o:?!!)Qi!Bq@+!!*m$n,NMR7R6_Kq#CFZ)"%A)(I7Hi!^9(=g].I0\I?&%nc/_D
\I%d+rW!!+\h<OR">74n\h<OR!\V"iZ2at5\h4!S!!Fpb%(\(^!!4d`$17cp$+_b[!!Fpb%(\(I!!FOH
$*#6H!;QTr,H:t9!!3A),Otg;,H;'M,Otg9,H:si!9sOc#-&p=!!FOH$*#6@!!4CF#4;Hm#-&p=!!FOH
$*#6=!:Kmj,c:sH,k:p:,c:k7!!3A&,k:p<,c:sH,k:p:,c:k0!6bEE#,`a;!!FRF$)]'>!!4FD#4;Hm
#,`a?!;um#,c:sH,hrA$aoKWS!!(1.!!(43!!::CbO>K3b-1jGbO>K5aoKWS!!(1<!:p0jbO>K5aoKW?
!!K??!,ek.!!0-<li7'(X7lVl!!K??!,ek.!!0-<YQ+]AX7?5kX)7t=DQE=.!NU,)!!-u<nc/fnD?+RT
h#ISH=o_`pnc/]Z>5J<j!!-8lnc/f]=o_`pnc/]Z>.=S.!!-8lnc/f]=o_`pnc/]Z>3l4i>+5!^"I`Ko
>+47I!1*dl!*bf\!!/Ejli7&jQgt+ZQWjGoQgt+WQWqo=h>dR\Qgt+ZQWjGoQgt+WQWreV!F(o]!!JWm
!*bfa!9X=bEruCEF7K;3Es(b/!<[E6!!I?F!!@<5!!.-CmJt-)!<[E6!!I?F!!@<5!!.-Cli7%gF8c14
!!I?F!!@<!!!Z0)!<</-:%SDe9sarf!!32.:%SDi9sap$!OPSs!;lfu9sar*!!32.:%SDi9sap$!OPSn
!!,g$!!2Ed!WfZ&oDf(iZiL.-Zq]EX!Bm:Y!!/oZoDenTV<S$^V*+hO!!,6ZrVutq4nJ^T4f,:]!MqsT
!;lft4f/,X!MqsO!!,6Zl2Uj]4nJ^T4f/,X!Mqs:!!,9XrVutn54egT4oh>B!!/fXoDenUUAb,nU-A2L
!C!6m!:TshU-A2L!C!7W!!/fXoDenUU?V^ZU-A2L!C!7W!!/fXjT,,W!3?)!!3>Yj!3>Ab!3>Yj!3?)!
!3>Yj!3=fReGoTMnc/ZjrVur!nc/Zjl2Ugbnc/ZjrW!##!!(sX!WfZ&rW!!oZiTk#!WfZ&l2Ul[ZiTk#
!WfZ&rW!!oZiTk#!WfZ&o`2Q'!_p$&p&G-pZq^N"!_p$&p&G-pZq]rgr;ZmnZiTk#!WfZ&rW!!oZiT(b
!MqsY!!,6ZoDeog4mE"J4f.cN!MqsY!!,6ZoDeog4g"bc4f.cN!MqsY!!,6Zq>gBm!MqsE!!,6ZoDeog
4oPE^4f.$9!MVdW!!,9XoDeod548LL!!,9XoDeod55kN_5,.ZL!MVc\!!,9XoDeod55kN_5,.ZL!MVdC
!!,9XoDeod55kN_5,-p7!3?"t!3>tsq>^MrkPtU`oDellqu?_toDell`W50%!3>_l!3?"t!3>_l!3>;`
!3>_l!3?"t!3>ShnGiT-X8DquX)@V2!H+t%!!0-<p&G,2X8DquX)@V2!H+t!!6G3AX)@V2!H+t9!!0-<
p&G,2X69NaX)@\4!rr==X8DquX)?kr!Etri!!/Nlp&G+sRcj_PRTfCb!Etri!!/Nlp&G1uRK*>j!!/Nl
p&G+sRf!-dRTfCb!Etre!:^$iRTfCb!Etri!!/Nli;`m_Qi$gaQWs.`!F(oS!!/Ejq#LBo!F(og!!/Ej
p&G+tQ`L/fQWs.`"'_)l!<)s!QWs.`!F(oS!!/Ejp&G+tQi$gaQWrDK!<[E@!!.-Cp&G*qF85h*!!.-C
p&G*qF8Q"=Es)+9!<[DO!;?HoEs)+9!<[E@!!.-Cp&G*qF6ET)Es)+9!<[E@!!.-CiW'&e\h4!]!!4d`
$2=K%$+_bQ!!4d`$2=K%$+_be!!4d`$2=K%$+_b:!8IPU0"D;`!!3J<0)P\N0"D;`!!3J<0'E9:0"D;`
!!3J<0)P\N0"D;b!9sOc#-&pG!!4CF#5A0"#-&p3!!4CF#5A0"#-&pG!!4CF#5A0"#-&p7!5SX:,H:tC
!!3A),Q%NC,H:tC!!3A),No+/,H:tC!!3A),Q%NC,H:t.!!3A&,l@WD,c:kA!!3A&,j540,c:kA!!3A&
,l@WD,c:kD!<)s"#,``J!!4FD#5A0"#,`aE!!4FD#5A0##,`^Hkl:c1VZunr!X>PJqu?dDVZu,\!6b3=
!6Y!8!6aL)!6Y!8!6b3=!6Y!8!6_AB!6Y-<r;Zi@q>^N<p&G*9jo>D(p&G*9q>^N<iW'"8Sb`<eSV[%@
!f3BIk5YORM"grNLn4AB!M,&A!!.nH]`@I#!M,&A!!.nHq>^PeM"grNLn3Z.!M,&A!!.nHq>^PeM!"d:
!!.+rq>^PPEqfV8EeriX!Jkdk!!.+rq>^PPEqfV8Eer?Jdf9E)EqfV8EesPl!Jkdk!!.+rjo>F<EqfV8
EesPl!/LVqirB+#LAClNL3!%h!HNqW!!.gpp](>8LAClNL3!%h!HNqd!4W"0L3!%h!HNqk!!.gpp](>8
L?np;!!.gpp](>8LAClNL2u;S!>n#s!!,8#p](=353;hG4rF%p!>n#s!!,8#p](=35,nS`4rF%p!>n#s
!!,8#quHZq!>n#_!!,8#p](=355G6[4rEYe!/1-^!PJg9!!*D>pqHjC$1.`h!!*D>pqHjC$2OW&$,-,K
!PJf>!!*D>pqHjC$2OW&$,-,K!PJg%!!*D>pqHjC$2OW&$,-,K!/1(H!,hS6!NZM%!!*;*rN6""!NZLf
!!*;*poORu#5S<##-@U%!NZLE!9O7^#-@U%!NZM%!!*;*poORu#3Gmd#-@U%!NZM%!!*;*poOO6quHWp
!,hS4!N?;"!!*;'po=Fp#3Gmd#-%Bu!N?;"!!*;'po=Fp#3,^)!!*;'po=Fp#5S<##-%Bu!N?:c!!*;'
q5XRtW<W2!!=#OuWrR&3!!!]-joF33!!(gLjoF2t!!(gLjoF33!!(gLjoF38!3?/#h"^"3h"UjLh"^"3
h"Ca:!!(gLjoF33!!(gLjo?($!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3)!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3L!.Y~>

%%EndBinary
grestore
np
grestore
gsave
42.581 156.778 mo
359.996 156.778 li
359.996 61.669 li
42.581 61.669 li
42.581 156.778 li
clp
359.996 156.777 mo
42.581 156.777 li
42.581 61.669 li
359.996 61.669 li
359.996 156.778 li
false sop
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 156.778 ]ct
[318.188 0 0 95.8817 42.1944 -.386246 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 823 
/H 248 
/M[823 0 0 -248 0 248 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 823 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 823 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 823 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 823 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcL`0JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcL`0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcL`0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcL`0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcL`0JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcL`0JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcL`0JcLB&JcOp5!Z/HbTE'QDJcLB&
JcLB&W;lu2Wt=(eJcLB&JcLB&JcLB&lMpu!W"PR"JcLB&JcLB&JcMnQ!7TO"JcLB&Mu\G0JcLB&jo>IR
TUqeVJcLB&JcLB&JcMbM!f2bkh#N$,JcLB&JcLB&JcP*:!euPeRfJ$?JcLB&JcLB&XoJMe7R5T+JcLB&
Mu\G0JcLB&k5YW;\I?&%T`BZEJcLB&JcLB&WW3/HWX5[Mh>i--JcLB&JcLB&JcP-;"=0lOV^.c4JcLB&
JcLB&JcMqR!m1MdfDpL'JcL`0JcLB&JcOs6"KQD?DQBH2JcLB&JcLB&JcMeN"I`Ko>+4:JJcLB&JcLB&
JcLB&li70T>6%loS,e-@JcLB&JcLB&Y5e]H!rrFEf`6U(JcL`0JcLB&JcP!7##2H*!!0H$U&]cFJcLB&
JcLB&WrN/`V>^GqV*3]9JcLB&JcLB&JcLB&m/R/NUAb,nU->+JJcLB&JcLB&JcMtS!3?)!!3=cQJcLB&
Mu\G0JcLB&kl:bcZq^N"!_p$&UB#lGJcLB&JcLB&WrN0s4oPE^4f.$9JcLB&JcLB&JcLB&m/R0]55kN_
5,+SJJcLB&JcLB&JcN"T!3?"t!3=fRJcLB&Mu\G0JcLB&kl:a%X8DquX)=[4JcLB&JcLB&JcMkP!Etri
!!/NlhuJ?/JcLB&JcLB&JcP3=!F(og!!/EjScF?BJcLB&JcLB&YlFe,F8Q"=Es(.sJcLB&Mu\G0JcLB&
l2Ukl\h<m\!\V"iU]>uHJcLB&JcLB&XT/D,W[%EA![F]Li;eH0JcLB&JcLB&JcP6>!X>PJqu?dDVZran
JcLB&JcLB&JcN%U!6b3=!6X$rJcLB&Mu\G0JcLB&l2Uj@Sb`<eSVX'AJcLB&JcLB&JcMnQ!HO"m!!.mr
i;eH0JcLB&JcLB&JcP6>!HNqk!!.gpT)aHCJcLB&JcLB&Z2anB55G6[4rE&TJcLB&Mu\G0JcLB&o`,"$
X8'F1]a=N8!=?I7^B)"VY5j.SJcLB&JcLB&\,ZO9RJ<lbX9SM$!=#Y#XT>L0li;V;JcLB&JcLB&JcPWI
!=>(eWr]1(q>^O#WVELpW<oR)JcLB&JcLB&JcNF`!,qYp!8R>L!8RA3!8HW9JcLB&Mu\G0JcLB&oDeo>
WTF0]WI:oLJcLB&JcLB&JcN7[!G@b]!!/F"lMuM:JcLB&JcLB&JcPTH!G@VY!!/9sW;qMMJcLB&JcLB&
]Dqs?BBB0pAIR]$JcLB&Mu\G0JcLB&oDepoZWlVn!a;o3XoO%RJcLB&JcLB&[f?I1UIs_M!_B*flMuM:
JcLB&JcLB&JcPTH!WeufkPtZVT`M+mJcLB&JcLB&JcNC_!2ATU!2S]VJcLB&Mu\G0JcLB&o)JhN\I7[&
!XlOtXT3qQJcLB&JcLB&[K$@ZWX.ki!XPeVl2ZD9JcLB&JcLB&JcPQG!\C2Sl2UkkVC\YGJcLB&JcLB&
JcN@^!6OF)!6O:%JcLB&Mu\G0JcLB&nc/]VQg+POQC"ZQJcLB&JcLB&JcN1Ys+0G8s+0D7JcLB&JcLB&
JcLB&pAb5DJEd+8It4EsJcLB&JcLB&JcN@^!A?1m!!+`-j8ac3JcL`0JcLB&JcP?A!XlOtli7)G\I5J=
JcLB&JcLB&JcN1Y!XPeVli7);WX.hhJcLB&JcLB&JcLB&pAb7#VC_'6!\C2SVZ;;KJcLB&JcLB&\GuWO
l2Uh+irFZ2JcL`0JcLB&JcP<@!a;o3mJm:iZWjI1JcLB&JcLB&JcN.X!_B*fmJm:hUIs_MJcLB&JcLB&
JcLB&p&G.dT`OQ]!WeufV>u2JJcLB&JcLB&\,ZN)li7$[iW+Q1JcL`0JcLB&JcP9?!NCM8!!.JHWW7VN
JcLB&JcLB&ZN(#mB^Pj$B:%c]JcLB&JcLB&JcLB&o`,#VB^Pj$B9T.lJcLB&JcLB&JcN:\!G)]-!!*I?
iW+Q1JcL`0JcLB&K`D/j],0r:!?/T=!!4(N)Xm_.(V:Kt!.k3&!.k3&!.k3k!!3_4&F]Z#'<CR%!Y_UJ
n,NM$Wt>..JcLB&JcLB&JcLZ.!YVFEquHBi!>ML$!!3k5'^u)(&uZGR!.k3&!.k3&!.k3o!!(L9!!(F7
!!(F7!!(L@!.k3&!/po0!.k3)!!8^aT'u^\SVZ\6!Jd99!!8^aT"Y2V!.k3&!.k3&!65'@Ll7,Z!!.mr
mJm9-M=:KHLl7,e!.k3&!.k3&!.k3.!!7n3L\q/F!!.gpmJm9-L[Y9FL5C\r!.k3&!.k3&!.k3p!!5>R
5k"aS4rE\f!>e#j!!5>R5kY20!.k30!.k3&!/:IU0"DD%!&!gB!\V"imJm:p\h<OR">74n\h:_tJcLB&
JcLB&JcNjl"='oQW[%'7![F]LmJm:mW[%'7"='oQW[%EAJcLB&JcLB&JcL]/"=0lOV^23@p&G.>VZuPh
!X>PJnc/e<V[97H\c@<^JcLB&JcLB&bQ%^e!6aj3!6XX.!6aj3!m1Mdp&K[EJcL`0JcLB&L&_=VD?+PS
X7?5kX)@8(!H+t/!!K??!,ejP!.k3&!.k3&!.k3l!!J`o!*Yi^!!/Nlli7&iRdpF]RT]\pRf!/;!.k3&
!.k3&!/gg[QWjGoQi-pX!!/Ejli7&jQgt+ZQWjGoQb!0K!.k3&!.k3&!6kKHEruCEF7K;3Es(b/!<[E6
!!I?F!!@<:!.k3&!/po0!.k3+!!H$'!<<-$Zq^/m!_p$&li7(fZq^/m##2H*!!0H$^]8rdJcLB&JcLB&
aT)?)V>^GqV*4GN!Bm:E!!/oZoDenTV>^GqV*4bWJcLB&JcLB&JcL`0!C!7W!!/fXrW)Zm!C!7C!!/fX
oDenUUAb,nU-?0hJcLB&JcLB&JcO$q!3?)!!3>Yj!3>Ab!3>Yj!3?)!!3>hoJcLB&Mu\G0JcLT,!WfZ&
rW!!oZiTk#!WfZ&l2Ul[ZiTk#!WfZ&rW!!oZiRuCJcLB&JcLB&JcNmm!MqsY!!,6ZoDeog4mE"J4f.cN
!MqsY!!,6Zr;_ELJcLB&JcLB&MuWmQ55kN_5,/#VpAb5g53`+K5,.ZL!MVdW!!,9X])[E_JcLB&JcLB&
c2[jFqu?_toDellkPtU`oDellqu?_tp],mGJcL`0JcLB&L]@HnX8N#"!3:#2!!-u<kPtXaDY=&2DQE[8
!NU+S!.k3&!.k3&!.k3n!!-8lqu?bd>4qps>+4XT!Ld3c!!-8lqu?bd>5eMR!.k3&!.k3&!0$sZ>F56f
".*3l!;HNp>F4OR!LI$a!!-;jqu?ba>J'rf!.k3&!.k3&!7(WG"*=A?!HSA:!!*1CkPtX)"82]q"*=A?
!HSA=!.k3&!/po0!.k3-!!3J<0)YbP!%tegp](@%\h<1H!\V"ip](@%\h<m\!\V"i_>o/fJcLB&JcLB&
b5_SJW[%EA![F]Lp](@"W[$^-![F]Lp](@"W[%EA"='oN!!%TNJcLB&JcLB&NW9+bV^20?"!jcK!;QTr
#,`a1!!4FD#5A0"#,`aE!!4FD#/("g!.k3&!.k3&!7(WFbPD2=b4Yf8bN8d)b4Yf8bPD2=b4u$h!.k30
!.k3&!/U[VLn4GD!rr=lM"grNLn3Z.!M,&A!!.nHq>^PeLr'.D!.k3&!.k3&!6Y?CEesPl!Jkdk!!.+r
jo>F<EqfV8EesPl",Lst!.k3&!.k3&!.k32!!.+pq>^SOEWGn8!HNqW!!.gpp](>8LAClNL2ss-JcLB&
JcLB&JcO-t!>n#s!!,8#p](=353;hG4rF%p!>n#s!!,8#q>c*IJcL`0JcLB&PQ1^j^%f>C]a=T:!rr<-
^%f>C]a<g$!=?I7^B)"Sq>^O&^%f>C]a;p`JcLB&JcLB&JcO@%!=#Y#XT>L-q>^O#XSAmuX9Ree!=#Y#
XT>L-q>^U%XKAW$XT>L-MZA>/JcLB&JcM2=!=#OuWr]1(q>^R$WN5iq!N?:c!!*;'po=Fp#5S<##-%Bu
!N?:E!.k3&!.k3&!.k4)!!(gLjoF33!!(gLjoF2t!!(gLjoF33!!(gNjoX]-gk>`[!/po0!.k37!!.kH
nc63#!M,%j!.k3&!.k3&!.k4$!!.(rYQ4P#!JkcR!.k3&!.k3&!13`eEJNo]^&S1gElS03!.k3&!.k3&
!87DR(I5#$!WYD$K`H])Mu\G0JcLu7!XZFjo)Q?%!\V"ibQ*4pJcLB&JcLB&eGoXTW["bKqu?dCWWn=\
JcLB&JcLB&QiI0lV^1[1^An<\VZt0AJcLB&JcLB&JcOI(!6_DC!<C8q!.k30!.k3&!0R<_DQE@/\c;c3
DT`$3!.k3&!.k3&!7UuL>+2\rqu?bd>)<62!.k3&!.k3;!!-;jmJt!%!LI$1!.k3&!.k3&!.k4(!!*1C
X8i9B",$Z+!/po0!.k36!!32.:%SFt!!5m%!QtIp!.k3&!.k3&!7LoKV*2*ar;Zj]V2,,'!.k3&!.k3:
!!/fXmf:-'!C!6s!.k3&!.k3&!.k4'!!'($!!''P!.k30!.k3&!0I6_9saro!5&:5!OPSD!.k3&!.k3&
!.k4"!!,6ZZ2jh'!Mqr8!.k3&!.k3&!1!Tc5,.KG^]4D05/dMR!.k3&!.k3&!7q2NX0)F&X+C>'!/po0
!.k34!!0-<o`2W)!H+s[!.k3&!.k3&!.k4!!!/NlZN0t)!EtqI!.k3&!.k3&!0mNbQWrqZ_#OL?Qc&lU
!.k3&!.k3&!7q2OEs&WH!<[Cp!.k30!.k3&!0@0^0"D;^!5/@6$+_b2!.k3&!.k3&!.k4!!!4CF#.+@5
!!!5',DQ8N!.k3&!.k39!!4FD#4V]1!!3A&,fB\7!.k3&!.k3&!7h,Mb-1jHb5d+oJcL`0JcLB&NrT3O
M"Uh^!!.nHa8gelJcLB&JcLB&d/X3'EjPfK!!%%qL&cf*JcLB&JcM#8!JYXb!5\^:Ee_I3JcLB&JcLB&
JcO@%!Bq@+!!4!$!.k3&!/po0!.k33!!4(N)YX6G!!4(N)TVo1!.k3&!.k3&!7:cJ'<;eS!!<37WtU3f
JcLB&JcLB&PQ1b!W"ee&_Z0`PW"d,LJcLB&JcLB&JcO=$!7A(P!mpuJJcLB&Mu\G0JcLi3!NCM@!5/@5
I&Y0eJcLB&JcLB&JcO0u!LIK,!!<3$B:">QJcLB&JcLB&PQ1`JB^l)>!!-_r_Z58gJcLB&JcLB&ec5_^
%'fj7$YKHk!.k30!.k3&!0@0^>-e;(!5/@6!jc+Q!.k3&!.k3&!.k4!!!5]e!OMh0!!!%p8r!Cu!.k3&
!.k39!!5cd!V$0,!!31p9>gg^!.k3&!.k3&!7h,MUp'h"U&]cFJcL`0JcLB&OT5Fj\Ms0]]Dr!l\I6O[
JcLB&JcLB&JcO7"!XPeVZN0t)!\:8VL]E#,JcLB&JcM):!XPYSn,U9)!\C2S`;kJiJcLB&JcLB&f)Pfm
XoJIDJcLB&Mu\G0JcLo5!LB)E!4r43QC#_oJcLB&JcLB&JcO7"s+.HUr;ckKL]E#,JcLB&JcM):!IoXg
!5JR8It5K<JcLB&JcLB&JcOF'!A?11!!"YP0nTIX!/po0!.k36!!5*i$hOG2!!3P=2p22Q!.k3&!.k3&
!7UuM/#il\!;um!#c]D3!.k3&!.k3&!1*Ze/>`^A!5JR9#c9/m!.k3&!.k3&!.k4'!!(-B!!(,n!.k30
!.k3&!0[Ba!jc,&!4i.3>-e:S!.k3&!.k3&!.k4$!!31r9!JBo!!5]e!K$l/!.k3&!.k3<!!31p9C;ep
!!5cd!QP1l!.k3&!.k3&!8.>PU8n7p!2P8JJcL`0JcLB&P5kW2WU^&"!!0'IbQ*4pJcLB&JcLB&eGoV_
Q`pJe!!/F"M?&5.JcLB&JcM/<!G@V`!58F6PA%u:JcLB&JcLB&JcOL)!=NP@!!3.3%#"\5!/po0!.k38
!!*MApqHjC$2ae@!!*D>pqHjC%*\d(!.k3&!.k3&!7h,N$*<p(!NZL>!!<G,Xf_H%!NZTc!.k3&!.k3&
!1<ff$*!^#!N?:t!6>-@#-%Bu!N?CH!.k3&!.k3&!.k4)!!(dKjoF2L!!(gNjoX]-gP#WZ!/po0!.k3-
!!.kHquFV7!M,%`!.k3&!.k3&!.k3o!!.(r^&S7kEW?)k!.k3&!.k3&!0.$[EJO8ga8c6qEkMI)!.k3&
!.k3&!71]H(I5\7!Bq@s!.k3&!/po0!.k3-!!3J<0)Ydg!!4d`$,Q[o!.k3&!.k3&!6Y?D#-&o`!!FOH
"onXT!.k3&!.k3&!0.$\#,`aA!6G3B,c:j[!.k3&!.k3&!.k3s!!(3V!!(1;!.k3&!/po0!.k3,!!-u<
r;ab9!NU+S!.k3&!.k3&!.k3n!!-8l^]4D(>5eMR!.k3&!.k3&!0$sZ>F5*baT)@.>J'rf!.k3&!.k3&
!7(WG"*;6X!HSA=!.k3&!/po0!.k3,!!32.:&Y.3!!5m%!Pnbf!.k3&!.k3&!6G3AV*2Zq!Bm:X!.k3&
!.k3&!.k30!!/fXq#JP;!C!6i!.k3&!.k3&!.k3r!!'(8!!'(p!.k3&!/po0!.k3+!!H$'!<<,>!!32.
9u$a\!.k3&!.k3&!6G3A4f-!q!MqsX!.k3&!.k3&!.k30!!,9Xq#JP;!MVci!.k3&!.k3&!.k3q!!'(:
!!'(o!.k3&!/po0!.k3*!!B9>!!("=!H+sQ!.k3&!.k3&!.k3l!!/Nl_uKgARf!/;!.k3&!.k3&!/ggX
QWs:db5_QIQb!0K!.k3&!.k3&!6kKEEs'>\!<[E;!.k3&!/po0!.k3*!!=ja#lr!G!XZFj^AricJcLB&
JcLB&a8c8dWWpHC!X>YLquD<KJcLB&JcLB&MZ<f(V[!"ubQ%\KV^/hRJcLB&JcLB&JcO!p!6W4[!6b'9
JcLB&Mu\G0JcLK)!hG,I`rH-rS\>)U!.k3&!.k3&!65'?LiUK8!HO"n!.k3&!.k3&!.k3.!!.gpqZ+h?
!HNq*!.k3&!.k3&!.k3p!!,8#`W-#V55"u.!.k30!.k3&!5SX:(V:L)!!3tK(WZRX(V:L)!!3tK(]",`
!.k3&!.k3(!!*Y3!"d3O!YDCDa8c8QWt>..c2[nWWt;c@JcLB&JcLB&`W-&QW"R/O!YVFEquFtA!YVFE
a8c8SW"Sb'JcLB&JcLB&L]@G(quFn?!7Spf!7UT@dJs9rZ2fIVMu\G0JcNUe!hH!Ua8c:4L]GHq!Jd8f
!!8^aT)&G=!.k3&!.k3(!!.n6!/\bs!Jkd9!!.(rqZ+nA!f2bk\,_*\JcLB&JcNdj!euPea8c6qEr,j\
!!.(pa8c9rM21a(JcLB&JcLB&M#[T@7R6nPbQ%Z-(rcOV(I7Zodf9G57R49[JcL`0JcLB&_>j]k\I?&%
aoDMr\Hr8V!!3J<0$4.s0"DD%0)GX#!.k3&!.k3)!!4CF#m%%NaoDJfWWpHC!X>YLquG%C"='oQW[#%S
JcLB&JcLB&`rH5fV[97HaoDJgV[!"ubQ%\KV^0Cb"=0lOV^1s9JcLB&JcLB&M#[V"!6b<@bQ%Xc_uKe\
p&NPA!m1MdZN,RWMu\G0JcNXf"KQD?DQCn["06;>!6,!>DQCn["KQD?DQEX7JcLB&JcLB&K`D1C=o\S,
R`YU2RTdW0!Etri!7(WJRT]\pR^iEM!.k3&!.k3k!!JWm!*bf4!!/Ejq>e\=!F(o5!!JWm!*bf`!.k3&
!.k3&!/^aZEruCEF8c0a!!.-C_uKf?F8#[a!!I?F!!@;L!.k30!.k3&!5ed@9sap$!OPSF!!H$'!<<,>
!!32.:!<SA9sap$!OPT!!.k3&!.k3&!/:IU4f&,Y!W]&[bQ%Z,V8<35V*4bWci=)0V>^GqV*2BiJcLB&
JcLB&a8c6)UAb,nU-?d$!C!7R!6P9BU-?d$!C!7W!!/fXpAfdFJcLB&JcLZ.!3?)!!3?)!bl@aE_>jS:
pAi\C!3?)!!3<I,JcL`0JcLB&_uKi>Zq^N"!_p$&c2[nHZq^N"`;fs6ZiSGP!WfZ&rW!!oZiU+*JcLB&
JcLB&L&_=P4TGH`!'R1&!!/oZ_>jU"V>UD@!!/oZrVus^V7HYY!.k3&!.k3l!!/fXrVus_U<ET<U-AAQ
aoDH+U<ET<U-APV!C!7P!.k3&!.k3&!/ggWX8Dr!WrN.F!!'(8!!'(p!7_&LX8DqtX0hqZ!/po0!.k3h
!!-u<qu?buDU&4_DQE^9_uKh=DU&4_DQE[8!NU,:!.k3&!.k3&!/COT>+5Ej!rr=i>0[*K>+35,!Ld3k
!7:cI>+5?h!Ld3(!.k3&!.k3&!6G3A>F56f!LI$9!!-;jp]/D9!LI$9!!-;jqu?ba>PJ2M!.k3&!.k30
!!*1Cqu?e>!s$XI!<[DY!!.-Cq#JtG!<[E@!!.-C[K(mZMu\G0JcNai!XZFjqu?dN\I$U_!XZFjr;ab9
!\V"ici=+R\h<m\!\V"irW%NMJcLB&JcLT,!X>YLrW!'$!$eKJci=+OW[#:Z"='oN!!(FI!X>YLqu?dC
WWp*9JcLB&JcLB&aoDJIV^20?![OZJci=+OV^2$;aT)AfVZtKJ!X>PJqu?dDVZuqsJcLB&JcLB&MuWk$
q>^Q=!7(WFbJ!rVb4u%g!!(4=!!(0M!.k30!.k3&!6"p=Ln4AB!M,%n!!.nHquFV7!M,%n!!.nHq>^Pe
M#IC+!.k3&!.k3,!!.+rr;cfs!JkdC!!.+r^&S7kEW?*f!!.+rq>^PPEkDC(!.k3&!.k3n!!.+pq>^PN
EmOdeEea;ga8c6qEmOdeEeaDj!JYXj!.k3&!.k3&!0$sZ(d@cr!Bq@I!!*p#^&S0t)#=6a!!*p#q>^O[
(q0Ks!/po0!.k3t!!*MApqHjC$2OW&$,-,K!PJp(!!*MApqHjC$2ae@!!*D>pqHjC%-@Nj%))GN!PJg9
!!*D>rkJ?F!PJo!!.k3&!.k37!!*D-poORu#5nQ$!!*;*poORu$0D3g$*<p(!NZL>!!<G,Xf_H%!NZUi
!!*D-poORu#5S<##-@U%!NZUJ!.k3&!.k3&!7_&M$*!^#!N?;"!!*;'po=Fp$0D3g$*!^#!N?:t!6>-@
#-%Bu!N?Cf!!*D*po=Fp#5S<##-%F!!ir:,K`H])JcLB&QN.$?puVS3p](<LpuVS2j8]27puVS3]Dqre
qW7kAk1eqs!8I;2!8R>L!8RA3!8G<iJcL`0JcLB&cN!unWTF0]WI<h-!IUm;!4`(1WI<h-!IUm4!;lft
WI9U'JcLB&JcLr6!G@bj!;$6lQY>F[!G@b'!;c`sQY>F[!G@b]!!/F"`W1SjJcLB&JcO:#!G@VY!!/9s
j8]3nPO/@a!!/9sj8]3nPNDiGPA#ULJcLB&JcM,;!=NQ.!;QTqAIRW"!=NP@!!3.3%-.Bh$YST%!G)\U
!.k30!.k3&!7(WH!jc+p!!6?1!os=_!jc,&!4i.3>-e:k!!35.>O2@g!!6?1!f6o/!.k3&!0R<`!M`9Z
!;-<n8>H:I!!31r9!JBo!!5]e!TX4^!M`9N!!5]e!QG+k!.k3&!.k4#!!31p9BZ?W8tc:H!!31p9C;ep
!!5cd!TX4^!MN0M!!#UlT`KfHJcLB&JcM):!2Al]q#CDjiW&tQWrN/#UuD@SU?2FUUqct^!/po0!.k3r
!!5*i$gI]n$b84U!!5*i$hOG2!!3P=2rXf=2n9=`!<)s"$b83P!.k3&!.k35!!4[N#k\2k!!3G+/)gO1
/#il\!;um!#c]E7!!4[N#jMBk#c]Do!.k3&!.k3&!7LoL/>`^<!!3G'/E-X2/>`^A!5JR9#c904!!4^K
#jMBj#c7SQK)gK'JcLB&PlLg+mf<1a!6O.!!6M;B!6O.!!6OF)!6MtUJcL`0JcLB&bl@d1Qg+POQC$M0
!LB)E!4r43QC$M0!LB)>!<)s!QC!@,JcLB&JcLl4s+0hCp&P,DhuNe.Z2jh's+0).s+0G8s+/)gJcLB&
JcLB&dJs;tJEd+8It6GW!IoXg!5JR8It6GW!IoXb!!.S"JcLB&JcLB&PlLh<1%52?!!+`-huEd20s1KV
0*!`b!!+`-l2Ui<0u!^?!/po0!.k3q!!3P=2s^MG2n9=S!!3P=2t[0`!!5*i$fD!d$b84a!!E9%2n9<O
!.k3&!.k34!!3G+/+ru;!!4[N#iG[a#c]D]!<)s"/#im5!!3G+/*m6;/#iln!.k3&!.k3&!7CiK#c90>
!!4^K#iG[a#c90B!5SX:/>`^2!!3G'/F3?</>`])!.k3&!.k38!!(.1!;c`rakd!tafYUDakd!tam&j+
ah@b,!/po0!.k3p!!6?1!q$$i!jc+f!!6?1!qlW-!!35.>M]>]>-e;!!!<3&ZWi.aJcLB&JcLi3!_B*f
pAjsg!Wf&gh>dUJU]Ih&"98E&UIsAC!_B*fmJm:hUIrE(JcLB&JcLB&d/X5?T`OQ]!Weufh>dULT`OZ`
_>jW<ThF5B!_T-emJm=iTh>B;!.k3&!.k37!!&hb!;lfsU>,_KUp'h"U&a!L!2Sr]!2@.,JcL`0JcLB&
b5_RBII7(9I&Ym$!NCM@!5/@5I&Ym$!NCM9!!3.JWJ(>(!.k3&!0.$[QY?*np](>-QeVQAQY<`+!rr=6
QeVQAQY>de!G@b9!.k3&!.k3&!71]HPA'@a!G@VO!!/9snGpE+!G@VO!!/9smJm?%P5kT7!.k3&!.k37
!!-X>nc8Ug!=NPq!!-X>Z2aq6B)p`f!G)]-!!*I?]`<WaMu\G0JcO[.!Z/Hbn,NM.],L/=!ZJZhn,NM+
],0r:!ZJZhpAho-!ZJZhn,NM+],0r:!ZJZhn,NM.],L/=!Z/HbR/hg=JcLB&U&Y6+Wt=b#!Y_UJp]1*i
!Y_UJn,NM$Wt=b#!Y_UJ[/^:/'<;f9!!3_4&F]Z$'<;f9!!3h7'CYu'&??An!.k3&!.k3&!9=+]&uZH4
!!3k5'^u)('W;`8!!3e3'(>l&'W;`:!5ed<'W;`8!!3e3'(>l&'W;`8!!F"7'EA.(!!3e3&sNBJ!.k3&
!2]_re*[29dII;9!!(F7!!(L9!!(EP!!:OJ!:Tsge*[29dI$u7dI$u7e'J)H!/po0!.k4.!!8^aT'u^\
SVZ\6!Jd99!!8^aT'u^\SVZt>]`8(gT'u^]SY2SD!!/XHmf3ChLS!u8!hH!UR/hg=JcLB&U&Y7NMi$p'
!Jkdj!;HNpEJa/b!f2bkn,NKFEjPfK!!%"qn,NNGMi$p'!Jkda!!.(rn,NNGMi$!bJcLB&JcLB&j8]79
M21R#!JYX_!!.(pn,NNEM21R#!JYXb!5\^:EJO#`!euPen,NKDEp`o0EJFMonc/`GM2.;qJcLB&JcM\K
!^9(=n,NJQ)"I\*!!*m$n,NMR7R6GC!Bq@+!!3s%!:^$j5"7g,!!,8#mJm8(5k"aT5"7fb!.k30!.k3&
!8mh[0"DD%0(JuD0"D;V!!3J<0(JuF0"DD%0(JuD0"D;^!5/@6$+_b[!!Fpb%(\(^!!4d`$1@ir!"$4h
nc/eF\I?&%RK.p>JcLB&UAtEAWX5[Mnc/_9WWr1tp](@"W[%'7"='oQW[%'7![F]LZiC4/!!]GJnc/e;
WX5[Mnc/_9WWqkk!X>YLnc/e;WX5[Mf)UC&JcLB&JcOm4"=0lOV^1g5![OZJmJm:mV^1g5"=0lOV^1g5
![OZJnGpE+!X>PJnc/e<V[97Hnc/_:VZuPh!sYYK!:p0n,c:sH,aA@]!.k3&!2feuaoKWS!!(13!;lfs
bO>K5aoKWS!!(0G!!17CnGiX5!6aj3!6XX.!6aj3!m1Mdd/\auMu\G0JcO^/"KQD?DQE=.!NU,)!!-u<
nc/fnD?+RTnc/]kDY4"B!!-u<nc/fnD?+RTnc/]kDXIK,!!$o;nc/fnD?+RTRK.p>JcLB&UAtFc=o_`p
nc/]Z>4qsj!!-8lnc/f]=o_`pnc/]Z>-e5.!!-8lnc/f]=o_`pnc/]Z>3l4i>+5!^"I`Ko>+4%CJcLB&
JcLB&jT#FM>6%lonc/]W>O2=j>F4m\"IE<m>F4m\!LI$[!5SX9>F4m\"IE<m>F4m\!LI$W!!6Ak!:p0n
QWjGoQ^%Q&!.k3&!2ol#EruCEF7K;3Es(q4qu?a"F7K;6EruCEF7K;3Es&WH!<[E6!!I?F!!@<5!!.-C
li7%gF7K;6EruCEF4(&?!/po0!.k40!!Z0)!<</-:%SDe9sarf!!32.:%SDi9sap$!OPSn!!5m%!VHH*
!!32.:%SDi9sap$!OPSn!!5m%!U]pj!!!&,:%SDi9sap$!OPRj!.k3&!.k3H!!,6ZrVutq4nJ^T4f.fO
p&G,i4nJ^T4f/,X!MqsO!!,6ZZ2jh'!MqsO!!,6ZrVutq4nJ^T4f.ED!MqsO!!,6ZrVutq4kKad!.k3&
!.k45!!,9XrVutn54egU5,.<B!MVdM!!,9XrVutn54egU5,.KG^]4D054egU5,/#V!MVdM!!,9Xl2UjZ
54egU5,/#V!MVcD!.k3&!.k3L!!')!!!'(j!!'(h!;c`rX7?5jX8W)!X7?5jX0)F&X7?5jX8W)!X7?5j
X6KZbX7?5jX8W)!X3q!"!/po0!.k41!!32.:&Y+o9sarp!!32.:$M][9sarp!!32.:&Y+o9sarp!!32.
:%SFt!!5m%!VQKp!OPT#!!5m%!VQKp!OPSg!<)s"9sarp!!32.:&Y+o9saqk!.k3&!.k3H!!/oZrVus^
V=X`gV*4JOp&G+VV=X`gV*4eX!Bm:O!!/oZZ2jh'!Bm:O!!/oZrVus^V=X`gV*4)D!Bm:O!!/oZrVus^
V:Yd"!.k3&!.k45!!/fXrVus_U@\EdU-@iB!C!7M!!/fXrVus_U@\EdU-A#G^]4C!U@\EdU-APV!C!7M
!!/fXl2UiKU@\EdU-APV!C!6D!.k3&!.k3M!!'(t!!'(l!!'(g!;ZZqX7QAlX8DqtX7QAlX/l:$X7QAl
X8DqtX7QAlX69N`X7QAlX8DqtX4%'#!/po0!.k41!!-u<qu?buDY=&2DQDt$!NU,3!!-u<qu?buDY=&2
DQE@/\c;c3DY=&2DQE[8!NU,3!!-u<li?ta!NU,3!!-u<qu?buDO^]Y!.k3&!2TYr>+5?h!Ld3c!!-8l
oDnOa!Ld3c!!-8lqu?bd>4qps>+2\rqu?bd>4qps>+5?h!Ld3c!!-8lkPtXP>4qps>+5?h!Ld3F!.k3&
!.k3&!9X=_>F56f!LI$a!!-;jkPtXM>P8$t>F56f!LI$a!!-;jmJt!%!LI$a!!-;jqu?ba>P8$t>F4OR
!1*[ip&G+tQi$gaQWodVJcLB&JcMeN!<[E@!!.-Cp&G*qF70,*!!.-Cp&G*qF8Q"=Es)+9!<[DE!!.-C
p&G*qF8Q"=Es)+9!<[E,!!.-Cp&G*qF8Q"=Es'nlJcL`0JcLB&irB,e\h<m\!\V"ip](@%\h<1H!\V"i
p](@%\h<m\!\V"ip](@%\h<RS\c;da\I&$2!XZFjqu?dN\I&$2!XZFjli?ta!\V"ip](@%\h<m\!\V"i
SH+6AJcLB&V>pZ%W[%EA![F]Lp](@"W[%-9o`,%<WWr4u!X>YLqu?dCWWr4u!X>YLYlO\%![F]Lp](@"
W[%EA![F]Lp](@"W[$^-![F]Lp](@"W[%EA![F]Lg&Q^)JcLB&JcP!7!X>PJqu?dDVZunr!X>PJkPtZ0
VZunr!X>PJqu?dDVZunr!X>PJmJt!%![OZJp](@"V^20?![OZJp](@"V^1I+!$hTC#5A0"#,`aE!!4FD
#+,CB!.k3&!3-#!bPD2=b4Yf8bO,B+!!(18!!(4=!!(18!!(3C!!*)Bp&G*9q>^N<p&G*9jo>D(p&G*9
q>^N<e,Y(#Mu\G0JcOg2!Jm<C!!/XHp](>NS`TnQSV[%@!Jm<C!!/XHp](>NSalck!!/XHp](>NSb`<e
SV[%@!Jm<4!;lftSV[%@!Jm<C!!/XHSH+6AJcLB&V>pX;M#%)PLiW7j!HO"f!;$6lLiW7j!HO"m!!.mr
p](>8Lp-mV!!.mrp](>8M#%)PLiW7j!HO"Y!!.mrp](>8M#%)PLiV2LJcLB&JcLB&kPtX(LAClNL3!%h
!HNqW!!.gpp](>8LAClNL3!%h!HNq^!58F6L3!%h!HNqk!!.gpp](>8L?8I:L3!%h!HNqk!!.gpQiM^<
JcLB&WrN/;55G6[4rF%p!>n#g!;QTq4rF%p!>n#s!!,8#p](=35-"Yb!'V7p!!*p#q>^O[)#+(3(d@'^
!Bq@q!!*p#q>^O[(tAV<!/po0!.k4<!!'_-^B)"Sq>^O&^%f>C]a<g$!=?I7^B)"Sq>^O&^%f>C]a=60
\GuX:^%f>C]a=N8!=?I7^B)"SlN$h_!=?I7^B)"Sq>^O&^%f>B]r(j^!.k3&!3cG'XSAmuX9SM$!=#Y#
XT>L-o)SC_!=#Y#XT>L-q>^O#XSAmuX9Pm/qZ$X$XSAmuX9SM$!=#Y#XT>L-jo>DdXSAmuX9SM$!=#Y#
XT5H`!.k3&!.k3&!:g*iWVELpW<W2!!=#OuWr]1(jo>DdWVELpW<W2!!=#OuWr]1(m/Xj#!=#OuWr]1(
q>^O#WVELpW<VJb!=#OuWr]1(q>^O#WVELoWM0BE!.k3&!4;e,h"^"3h"UjLh"^"3h!G+:!!(gLjoF33
!!(gLjoF2:!!3-#h"^"3h"UjLh"^"3guJG8h"^"3h"UjLh"^"3gtr*`!/po0!.k4<!!.kHQiM^<h>dSI
Lo16)!.k3&!3cG(EJ`3GJcMJE!JkdW!.k3&!.k3&!:g*jEJK_XJcOg2!JYWh!.k3&!.k3Y!!*m$ciAXt
V>pW\(uG=F!/po0!.k4<!!3J</su]k!8dbX0"D:d!.k3&!.k3T!!3A),LujH!29Gp,H:t/!.k3&!.k3&
!:g*k#,``2!.k43!!4FD#,2*L!.k3&!42_+bKp6@!2]_rb2*,M!/po0!.k4;!!-u<R/hg=hZ*\XDPdDc
!.k3&!3ZA'>+4"BJcMMF!Ld3P!.k3&!.k3&!:^$i>F1QSJcOj3!LI#a!.k3&!.k3X!!*1Cd/\auVZ6a=
"5X$0!/po0!.k4;!!32.9pu'6!8mhY9saqu!.k3&!.k3R!!/oZf)UC&UAt<XV;_K,!.k3&!.k4?!!/fX
PlQC9jT#<FU7_L<!.k3&!4)Y*X3gp!!2fesX5*c-!/po0!.k4:!!5m%!Lj(@!9!nZ!OPRt!.k3&!.k3R
!!,6Zf)UC&UAt=k4lQHn!.k3&!.k4?!!,9XPlQC9jT#=U5+hn-!.k3&!3uS)X3q!"!2oktX5!],!/po0
!.k49!!0-<RfJ$?i;`mrX/#`I!.k3&!3H5%RTe>DJcMSH!EtrN!.k3&!.k3&!:KmgQWoaUJcOp5!F(n_
!.k3&!.k3V!!.-Cdf=t"W;lr$F5-bI!/po0!.k49!!4d`$(M!I!9*t[$+_ab!.k3&!.k3Q!!4CF#2'!.
!2TYs#-&p,!.k3&!.k3&!:Kmh,c:j5!.k46!!3A&,bG'g!.k3&!3lM(b0p?B!3#qubM*#K!/po0!.k48
!!/XHS,e-@iW'"8SYH1:!.k3&!3?/$LiV/KJcMVI!HO"S!.k3&!.k3&!:BgfL2rU\JcOs6!HNpd!.k3&
!.k3U!!,8#e,Y(#WW3&:52-'h!/po0!.k48!!4(N)P$k[!94%\)S6o_!.k3&!.k3P!!3h7'A<G<!2]_t
'<;f)!.k3&!.k3&!:Bgg'W;_5!.k47!!3k5'V5;V!.k3&!3cG'dF8/J!3-#!dFnSP!/po0!.k48!!0'I
S,e-@iW'",WM9HF!.k3&!3?/$QY>%PJcMVI!G@bW!.k3&!.k3&!:BgfPA$9_JcOs6!G@Uf!.k3&!.k3U
!!-X>e,Y(#WW3&-BA3E<!/po0!.k49!!6?1!h97B!9*t[!jc+,!.k3&!.k3Q!!5]e!SII)!2TYs!M`9G
!.k3&!.k3&!:Kmh8tc9P!.k46!!31p9:l39!.k3&!3lM(Usf<q!3#quU>#["!/po0!.k4:!!3P=2k'f!
!9!nZ2n9<m!.k3&!.k3R!!3G+/(aiR!2KSr/#im7!.k3&!.k3&!:Tsi#c9/=!.k45!!4^K#bV0L!.k3&
!3uS)ajL0@!2oktakQlJ!/po0!.k4:!!/CPRK.p>huEeDQ_a\6!.k3&!3Q>%J_'mR!2BPoJ`6Z]!.k3&
!.k4?!!.S"PlQC9jT#=2J=lmo!.k3&!4)Y+0/:lTJcM_L!A?1`!.k30!.k3&!:0[e2n9<b!.k4/!!3P=
2l6S,!.k3&!3ZA(/#im,!.k3G!!3G+/)pV]!.k3&!.k4@!!4^K#aGCA!9F1^#c9/H!.k3&!.k3W!!(-g
!.k3K!!(-s!.k30!.k3&!:9af!jc+!!.k4.!!6?1!iH$M!.k3&!3cG)!M`9<!.k3F!!5]e!TX64!.k3&
!.k4A!!31p99]F.!9=+]8tc9[!.k3&!.k3X!!&b?!.k3J!!&hO!.k30!.k3&!:9aeI&WJ5JcOX-!NCLF
!.k3&!.k3T!!-`!eGt1$T`>+[B]K/F!.k3&!.k4A!!-_rP5p17irB+DBVGKY!.k3&!4;e-$YRfdJcMYJ
!G)\s!.k30!.k3&!:9ad^%f>C]a:D5JcP!7!=?I7^AtsF!.k3&!.k3T!!'+qXT>L-hZ/6.WrN/)XSAmt
XQ0A5!.k3&!.k4A!!'"nWr]1(SH+6Am/R.kWVELoWM0BE!.k3&!4;e,g\Bn2gt;[Z!3ZA&h"^"3gYW!_
!/po0!.k42!!.kHU&]cFkPtXSLn+Nt!.k3&!2]_sEJ`QQJcMhO!JkdM!.k3&!.k3&!9aC`EJL(bJcP0<
!JYW^!.k3&!.k3O!!*m$g&Q^)YQ+\f(tAV<!/po0!.k42!!3J</u&Du!9jIb0"D:Z!.k3&!.k3J!!3A)
,N&QR!3?/%,H:t%!.k3&!.k3&!9aCa#,``<!.k4=!!4FD#+,CB!.k3&!3-#!bLurJ!3cG'b1$EC!/po0
!.k41!!-u<UB#lGkl:abDO^]Y!.k3&!2TYr>+4@LJcMkP!Ld3F!.k3&!.k3&!9X=_>F1o]JcP3=!LI#W
!.k3&!.k3N!!*1CgAlg*YlFfG"4R=&!/po0!.k41!!32.9r%c@!9sOc9saqk!.k3&!.k3H!!/oZi;eH0
XT/AbV:Yd"!.k3&!.k45!!/fXT)aHCmf3APU6Ye2!.k3&!3#quX4mW+!3lM(X4%'#!/po0!.k40!!5m%
!ModJ!:'Ud!OPRj!.k3&!.k3H!!,6Zi;eH0XT/Bu4kKad!.k3&!.k45!!,9XT)aHCmf3B_5*c2#!.k3&
!2oktX5!],!3uS)X3q!"!/po0!.k4/!!0-<V#Z)IlMps'X-s$?!.k3&!2BMpRTe\NJcMqR!EtrD!.k3&
!.k3&!9F1]QWp*_JcP9?!F(nU!.k3&!.k3L!!.-Ch#N$,ZN(".F4(&?!/po0!.k4/!!4d`$)R]S!:0[e
$+_aX!.k3&!.k3G!!4CF#3,]8!3ZA(#-&p"!.k3&!.k3&!9F1^,c:j?!.k4@!!3A&,aA@]!.k3&!2fes
b2!&L!4)Y*bL$<A!/po0!.k4.!!/XHV>u2Jli7'BSXBJ0!.k3&!29GoLiVMUJcMtS!HO"I!.k3&!.k3&
!9=+\L2rsfJcP<@!HNpZ!.k3&!.k3K!!,8#h>i--ZiC+D51'@^!/po0!.k4.!!3tK(T.7b!:9af(V:KO
!.k3&!.k3F!!3_4&EEhC!3cG)&??An!.k3&!.k3&!9=+]&uZG;!.k4A!!3e3&sNBJ!.k3&!2]_re(t(V
!42_+e'J)H!/po0!.k4.!!/XHV>u2Jli7'ASs]S1!.k3&!29GoLiVMUJcMtS!HEtI!.k3&!.k3&!9=+\
L2rsfJcP<@!HEmZ!.k3&!.k3K!!,8#h>i--ZiC+C5g]R`!/po0!.k4/!!4d`$)R]S!:0[e$+_aX!.k3&
!.k3G!!4CF#3,]8!3ZA(#-&p"!.k3&!.k3&!9F1^,c:j?!.k4@!!3A&,aA@]!.k3&!2fesb2!&L!4)Y*
bL$<A!/po0!.k4/!!0-<V#Z)IlMps'X-s$?!.k3&!2BMpRTe\NJcMqR!EtrD!.k3&!.k3&!9F1]QWp*_
JcP9?!F(nU!.k3&!.k3L!!.-Ch#N$,ZN(".F4(&?!/po0!.k40!!5m%!ModJ!:'Ud!OPRj!.k3&!.k3H
!!,6Zi;eH0XT/Bu4kKad!.k3&!.k45!!,9XT)aHCmf3B_5*c2#!.k3&!2oktX5!],!3uS)X3q!"!/po0
!.k41!!32.9r%c@!9sOc9saqk!.k3&!.k3H!!/oZi;eH0XT/AbV:Yd"!.k3&!.k45!!/fXT)aHCmf3AP
U6Ye2!.k3&!3#quX4mW+!3lM(X4%'#!/po0!.k41!!-u<UB#lGkl:abDO^]Y!.k3&!2TYr>+4@LJcMkP
!Ld3F!.k3&!.k3&!9X=_>F1o]JcP3=!LI#W!.k3&!.k3N!!*1CgAlg*YlFfG"4R=&!/po0!.k42!!3J<
/u&Du!9jIb0"D:Z!.k3&!.k3J!!3A),N&QR!3?/%,H:t%!.k3&!.k3&!9aCa#,``<!.k4=!!4FD#+,CB
!.k3&!3-#!bLurJ!3cG'b1$EC!/po0!.k42!!.nHU&]cFkPtXSLn+Nt!.k3&!2]_sEerTQJcMhO!JkdM
!.k3&!.k3&!9aC`Ee^+bJcP0<!JYW^!.k3&!.k3O!!*p#g&Q^)YQ+\f(tAV<!/po0!.k4<!!'_-^B)"S
U&]cFkPtVi^%f>B]r(j^!.k3&!3cG'XSAmuX9RP^JcMhO!=#Y#XT5H`!.k3&!.k3&!:g*iWVELpW<Smn
JcP0<!=#OuWrT,n!.k3&!.k3Y!!(dKjoF2i!.k3S!!(gLjoF/n!.k30!.k3&!:9aeI&WJ5JcOX-!NCLF
!.k3&!.k3T!!-`!eGt1$T`>+[B]K/F!.k3&!.k4A!!-_rP5p17irB+DBVGKY!.k3&!4;e-$YRfdJcMYJ
!G)\s!.k30!.k3&!:9af!jc+!!.k4.!!6?1!iH$M!.k3&!3cG)!M`9<!.k3F!!5]e!TX64!.k3&!.k4A
!!31p99]F.!9=+]8tc9[!.k3&!.k3X!!&b?!.k3J!!&hO!.k30!.k3&!:0[e2n9<b!.k4/!!3P=2l6S,
!.k3&!3ZA(/#im,!.k3G!!3G+/)pV]!.k3&!.k4@!!4^K#aGCA!9F1^#c9/H!.k3&!.k3W!!(-g!.k3K
!!(-s!.k30!.k3&!:'UcQC"$?JcO^/!LB(K!.k3&!.k3R!<7W%!.k3G!<7W0!.k3&!.k3&!:TshIt3da
JcOm4!IoWm!.k3&!.k3W!!+`-dK"k!VuQiO1#2h]!/po0!.k4:!!3P=2k'f!!9!nZ2n9<m!.k3&!.k3R
!!3G+/(aiR!2KSr/#im7!.k3&!.k3&!:Tsi#c9/=!.k45!!4^K#bV0L!.k3&!3uS)ajL0@!2oktakQlJ
!/po0!.k49!!6?1!h97B!9*t[!jc+,!.k3&!.k3Q!!5]e!SII)!2TYs!M`9G!.k3&!.k3&!:Kmh8tc9P
!.k46!!31p9:l39!.k3&!3lM(Usf<q!3#quU>#["!/po0!.k48!!0'IS,e-@iW'",WM9HF!.k3&!3?/$
QY>%PJcMVI!G@bW!.k3&!.k3&!:BgfPA$9_JcOs6!G@Uf!.k3&!.k3U!!-X>e,Y(#WW3&-BA3E<!/po0
!.k48!!4(N)P$k[!94%\)S6o_!.k3&!.k3P!!3h7'A<G<!2]_t'<;f)!.k3&!.k3&!:Bgg'W;_5!.k47
!!3k5'V5;V!.k3&!3cG'dF8/J!3-#!dFnSP!/po0!.k48!!/XHS,e-@iW'"7Stc:;!.k3&!3?/$LiV/K
JcMVI!HEtS!.k3&!.k3&!:BgfL2rU\JcOs6!HEmd!.k3&!.k3U!!,8#e,Y(#WW3&95hc9j!/po0!.k49
!!4d`$(M!I!9*t[$+_ab!.k3&!.k3Q!!4CF#2'!.!2TYs#-&p,!.k3&!.k3&!:Kmh,c:j5!.k46!!3A&
,bG'g!.k3&!3lM(b0p?B!3#qubM*#K!/po0!.k49!!0-<RfJ$?i;`mrX/#`I!.k3&!3H5%RTe>DJcMSH
!EtrN!.k3&!.k3&!:KmgQWoaUJcOp5!F(n_!.k3&!.k3V!!.-Cdf=t"W;lr$F5-bI!/po0!.k4:!!5m%
!Lj(@!9!nZ!OPRt!.k3&!.k3R!!,6Zf)UC&UAt=k4lQHn!.k3&!.k4?!!,9XPlQC9jT#=U5+hn-!.k3&
!3uS)X3q!"!2oktX5!],!/po0!.k4;!!32.9pu'6!8mhY9saqu!.k3&!.k3R!!/oZf)UC&UAt<XV;_K,
!.k3&!.k4?!!/fXPlQC9jT#<FU7_L<!.k3&!4)Y*X3gp!!2fesX5*c-!/po0!.k4;!!-u<R/hg=hZ*\X
DPdDc!.k3&!3ZA'>+4"BJcMMF!Ld3P!.k3&!.k3&!:^$i>F1QSJcOj3!LI#a!.k3&!.k3X!!*1Cd/\au
VZ6a="5X$0!/po0!.k4<!!3J</su]k!8dbX0"D:d!.k3&!.k3T!!3A),LujH!29Gp,H:t/!.k3&!.k3&
!:g*k#,``2!.k43!!4FD#,2*L!.k3&!42_+bKp6@!2]_rb2*,M!/po0!.k4<!!.nHQiM^<h>dSILo16)
!.k3&!3cG(Eer6GJcMJE!JkdW!.k3&!.k3&!:g*jEe]bXJcOg2!JYWh!.k3&!.k3Y!!*p#ciAXtV>pW\
(uG=F!/po0!.k4<!!'_-^B)"Sq>^O&^%f>CWsQ37JcP]K!=?I7^B)"Sq>^O&^%f>BX/>rL!.k3&!3cG'
XSAmuX9SM$!=#Y#XT=goo)O@B^An9=XSAmuX9SM$!=#Y#XT4dM!.k3&!.k3&!:g*iWVELpW<W2!!=#Ou
Wr\LjYlK@U!=#OuWr]1(q>^O#WVELoQD+A2!.k3&!4;e,h"^"3h"UjLh"^"3Ds[OV!5ed:h"^"3h"UjL
h"^"3Dr1PH!/po0!.k42!!.kHq>^PeM"grNLRtpSJcP]K!M,&A!!.kHq>^PeLn+Nt!.k3&!2]_sEJaMl
!Jkdk!!.(ro)O@B^An:jEqfV8EJaMl!JkdM!.k3&!.k3&!9aC`EJOAj!JYXi!!.(pYlK@U!JYXi!!.(p
q>^PNEgQiY!.k3&!36)#(I7fs!Bq@q!!*m$mJqh=_uKg%)#+(3(I7fs!Bq@N!.k30!.k3&!94%\$+_be
!!4d`$2=K%$+_au!.k4L!!4d`$2=K%$+_be!!4d`$(V'J!.k3&!2]_t#-&pG!!4CF#5A0"#-&p?!.k3d
!!4CF#5A0"#-&pG!!4CF#20'/!.k3&!.k47!!3A&,l@WD,c:kA!!3A&,dIE&!!"8FVZunr!X>PJqu?dD
VZrLgJcLB&JcMeN!6b3=!6Y!8!6ad1JcN^h!6Y!8!6b3=!6WdkJcL`0JcLB&iW'!sX8DquX)@V2!H+sI
!.k4L!!0-<p&G,2X8DquX)=F-JcLB&JcMVI!Etri!!/Nlp&G+sRe-T3!5JR8RTfCb!Etri!!/Nlf`6U(
JcLB&JcOs6!F(og!!/Ejp&G+tQa-UD!!&>c>P8$t>F56f!LI#W!.k3&!.k3N!!*1Cqu?b="82]q"*<o2
JcNai!HSA:!!*1Cqu?b="4R=&!/po0!.k41!!32.:&Y+o9sarp!!32.9t11T!<)s"9sarp!!32.:&Y+o
9saqk!.k3&!.k3H!!/oZrVus^V=X`gV*4JOJcNUe!Bm:O!!/oZrVus^V:Yd"!.k3&!.k45!!/fXrVus_
U@\EdU->m`KE)$:U@\EdU-APV!C!6D!.k3&!.k3M!!'(t!!'(l!!'(g!.k3i!!'(l!!'(t!!'(K!.k30
!.k3&!9!n^9sap$!OPSn!!5m%!P&2^!!E9%!OPSn!!Z0)!<</-9q)-7!.k3&!2KSq4f/,X!MqsO!!,6Z
o`0RD_#OM44nJ^T4f/,X!Mqs3!.k3&!.k3&!9O7^5,/#V!MVdM!!,9XZN,XY!MVdM!!,9XrVutn5*c2#
!.k3&!2oktX8W)!X7?5jX7-+@!6,!=X7?5jX8W)!X3q!"!/po0!.k4/!!K??!,ek.!!0-<\H%3]!rr==
X7?5nX)7oTX-s$?!.k3&!2BMsRT]\pRdpFZRTfCbJcNXf!Etr_!!J`o!*YiC!.k3&!.k3&!9F1`QWjGo
Qgt+WQWpfsK`D0YQN6UW"IE<m>F1TTJcLB&JcM_L"EOYF"*=#5!HSA5!.k3k!!*1Cnc/f6!rrFEdK"k!
Mu\G0JcO^/">74n\h<OR!\V"i\c@<^!rrY=0(JuF0"DD%/t)cl!.k3&!2BMs,H;'M,Otg9,H:tB!.k3g
!!3A),Otg;,H;'M,M)pI!.k3&!.k44!!FRF$)]'>!!4FD#.4Gc!!<G',QRE9"=0lOV^.N-JcLB&JcM\K
!m1Mdn,NI2nGn.@`rH+_n,NO4!6`aiJcL`0JcLB&hZ*_KTUkQP!M,%X!.k1P!/R38!!8^aSXBJ0!.k3&
!29GpLl7)Y!!.mrpAfdF_Z0^XM!tBGLl7)?!.k3&!.k3&!9=+]L5CZS!!.gp[/bp]"*0+r!:g*kL5CYL
!.k3&!.k3K!!5>R54AOQ4rEhjJcNjl!>n#i!!5>R51'@^!/po0!.k4.!!3tK([qD+)S6p"!.k1P)S6pW
!!3tK(RY8T!.k3&!29Gp&??B3!!3h7'DMQZ!5nj='<;f9!!3_4&Cpi5!.k3&!.k43!!3e3'(>l&'W;_S
!/COW'W;]G!:g*k&uZG-!.k3&!.k3J!!(L9!!(F;!.k3l!!(F7!!(Kp!.k30!.k3&!6Y?CWI;>XJcGiP
I&Vf"JcLB&JcLf2!LIKo!.k3g!!-`!_>o/fJcLB&JcO-t!L%3)!/:IUB9N;qJcLB&JcLB&P5kVp%.XCM
!6>-@$YR-QJcL`0JcLB&bQ%]JZN@]<JcGlQ!jc*c!.k3&!.k33!!5]e!VZSG!5ed<!M`9)!.k3&!.k3&
!7:cJ8tc9n!/:IU!MN-dJcLB&JcLB&P5kTYnGn.@`rH+6]`<WaMu\G0JcO$q!XlOt\H%3]"98E\\I4/m
JcLB&JcLl4!XPeVp&K[E_>jWfWX-NCJcLB&JcLB&dJs=SVC](SK`D0*V?hbRJcLB&JcM#8!6O^1JcNdj
!6MqTJcL`0JcLB&bl@d1Qad$I!<)s!QC!@,JcLB&JcLl4s+0hCJcNUes+/)gJcLB&JcLB&dJs;tJ?o6/
!!.S"JcLB&JcLB&PlLh<1%50p!6,!>0/:3AJcL`0JcLB&c2[o)\I5nIJcPcM!XlOtL]E#,JcLB&OT5G5
WX/7tJcNUe!XPeV`;kJiJcLB&JcO7"!\C2SZN,XY!=5P&/;!qS!.k3&!0mNaamT4]!6"p<ahIh-!/po0
!.k3s!!35.>IOTa!;um!>-e9e!.k3&!.k36!!31r9(W+8!5JR98>H:+!.k3&!.k3&!7UuM!MN/l!.t7O
8cbUdKE-T(JcLB&Q2goZmJqh=_uKe5^]8rdMu\G0JcO*s!IUlT!.k4K!!0'IM#`,-JcLB&OoPMqQh(3/
!5AL7QY=A=JcLB&JcLB&e,TM^PHb+>!!/9sKE-T(JcLB&QN.$oBC5bO!5nj<AIQBTJcL`0JcLB&ci=(T
^%f>C]a;ISLB%>]^&GeD^B)"VM?&5.JcLB&P5kUiXSAmuX9SV'JcNmm!=#Y#XT>L0`rL\kJcLB&JcO=$
!=>b#Wr]1(])[ci!=#P!Wrf?$$&&A2!.k3&!1*Zcg\Bn2h"Lf#!6kKDh"^"3gVElA!/po0!.k3i!!.kH
^]9,i!M,&G!.k3&!.k3&!/LUUEJaVoJcNmm!Jkd/!.k3&!.k3&!6P9BEJM.+MuWm5Eqo]e!.k3&!.k31
!!*m$p],mGc2[l/(q0Ks!/po0!.k3i!!3J<0#7OD!!4d`$2spV!.k3&!.k3,!!3A),Q7[p!6P9C,H:s\
!.k3&!.k3&!6P9C#,``Z!0$s[,c:kB!.k3&!.k3&!/pmXbP2'h!6tQEb-h;%!/po0!.k3h!!-u<_#T8k
!NU,:!.k3&!.k3&!/COT>+5EjJcNpn!Ld3(!.k3&!.k3&!6G3A>F2u&N;s!G>PJ2M!.k3&!.k30!!*1C
q#H!HcN!ue"1A2]!/po0!.k3h!!32.9u6me!!5m%!W<"M!.k3&!.k3*!!B&\!!%TNb5_Q+V7HYY!.k3&
!.k3l!!/fX]`=&m!C!7P!.k3&!.k3&!/ggWX8)aI!7(WFX0hqZ!/po0!.k3g!!5m%!Q+np!!32.:&G!C
!.k3&!.k3*!!>B\!!%TNb5_R>4h:WF!.k3&!.k3l!!,9X]`=&m!MVdP!.k3&!.k3&!/^aVX82gJ!71]G
X0_kY!/po0!.k3f!!0-<_Z5Po!H+t8!.k3&!.k3&!/1CSRT]]C!6bED>+2u%JcLB&JcLB&`rH.,>J:)u
!!-;jp&K[EJcLB&JcLZ.!HSA?!.k3u!!*1CZiG[XMu\G0JcNXf!\V"i_uP\q!XZFjqZ)3JJcLB&JcLK)
![F]LJcO$q!X>YL\H%3]JcLB&JcNgk![OZJ^As>q!X>PJp&K[EJcLB&JcLW-!6Y0=JcO0u!6_\KJcL`0
JcLB&_#OM,Lr9:O!!.nHq>c*IJcLB&JcLH(!JkcJ!6kKEEeq4*JcLB&JcLB&`W-$oEk_U9!!.+po`0RD
JcLB&JcLW-!Bq@u!.k4!!!*p#ZN,RWMu\G0p&G.1],-P/_#OKP]>O]-!!0\Jq>c*Iec5af],.[OJcN=]
!YDCDblECs!>);`!6kKEWt;c@R/d:"Wt=XuJcLB&qZ$[1W"P!g`W-#PW4r=o!!0#2o`0RDgAh9fW"Q-2
JcNIa!7SsgL]@G(quD<KdJs9rZ2gEq!7U*2Mu\G0p&G/bTUq5F_#OM,Lr9:O!!.kHq>c*Iec5cBTUr@f
JcN=]!f2bkblECs!JkcJ!6kKEEJ_1*R/d;EMi$g$JcLB&qZ$\PM2-uh`W-$oEk_U9!!.(po`0RDgAh;0
M2/,3JcNLb!^9(=a8h%s!Bq@u!.k4!!!*m$ZN-Qs!^9(=kQ$PAJcPNF">74n\h9*F_>jWi\I$1SMZ<eb
\h<j[JcOC&">74n\h:5fJcN@^"='oQW[#dhK`D0!WWn%Tbl@eLW[#%SRK*I8WX5[MmJqh=JcP]K"=0lO
V^.3$`rH/dVZsm9O8o=dV^1s9JcOR+"=0lOV^/>DJcNLb!m1Mda8h%s!6Y0=JcO0u!6_\KScAi7!6aR+
Mu\G0pAb>sD?+RTOT<5u!NU+U!/^aWDQEX7JcOC&"KQD?DQC#BJcN@^"I`Ko>+3_:K`D1C=oa-SbQ%ZI
R^iEe!!J`o!*YiZ!.k3&!;lg"QWjGoQ](pb!!/Ej^&X2o!F(oa!.k4+!!JWm!*bek!.k3c!!I?F!!@;a
!/^aWEs):>JcO0u!<[DM!1s5oEruCEF6N[`!.k4G!!Z0)!<</-9p,Lo!!5m%!Q+np!!32.:&G!C!8%8U
9sap$!OPS,!.k3_!!,6ZrVutq4jO+_!!>B\!!%TNb5_R>4h:W_!!,6ZrVutq4mrB&!.k4L!!,9XrVutn
5)fQ`!!,9X]`=&m!MVdP!.k4,!!,9XrVutn5-4g:!5AL6X8W)!X2t@!!!'(r!.k3t!!'(,!1s5kX8W)!
X6BVC!.k4H!!32.:&Y+o9saqb!5nj=!OPS<!/U[W9sas"!.k4(!!32.:&Y+o9sar-!.k3_!!/oZrVus^
V9]-r!!B&\!!%TNb5_Q+V7HYr!!/oZrVus^V=+D9!.k4L!!/fXrVus_U5]/o!!/fX]`=&m!C!7P!.k4,
!!/fXrVus_U9+EI!5JR7X8DqtX3(F#!!'(q!.k3s!!'(-!2';lX8DqtX6K\D!.k4H!!-u<qu?buDNb(=
!!-u<_#T8k!NU,:!.k4(!!-u<qu?buDR0=p!5&:4>+5?h!Ld3=!/COT>+5EjJcNpn!Ld3(!1X#i>+5?h
!Ld3]!.k3&!<)s!>F56f!LI#N!6G3A>F2u&N;s!G>PJ2M!8[\V>F56f!LI#n!.k3e!!*1Cqu?b="3U\'
!!*1Cq#H!HcN!ue"1A3'!!*1Cqu?b="7#rG!.k4I!!3J<0)P\N0"D:Q!6"p>$+_b*!/LUV0"D;f!.k4)
!!3J<0)P\N0"D:q!.k3a!!3A),Q%NC,H:sq!/LUV#-&pI!.k3n!!4CF#.sr,!!3A),Q%NC,H:t<!.k3&
!!E9%#,`aE!!4FD#*/c,!!3A&,eO,:!!4FD#5J7N!8dbX#,`aE!!4FD#-S#Y!5SX8bPD2=b0'dD!!(4;
!.k3r!!(0M!20AmbPD2=b3K%d!.k4I!!.nHq>^PeLm.nY!!.nH^]9,i!M,&G!.k4)!!.nHq>^PeLpR/6
!5/@5EesPl!JkdD!/LUUEesYoJcNmm!Jkd/!1a)jEesPl!Jkdd!.k3&!!<3$EeaDj!JYWU!6P9BEe_1+
MuWm5Eqo]e!8dbWEeaDj!JYWu!.k3f!!*p#q>^O[(sDu>!!*p#p],mGc2[l/(q0L>!!*p#q>^O[)!h6]
!/:IU%)'EjqS*'E$2OW&$,-,K!PJo6!71]H%))GN!PJfT!/COT$,->QqnE0F%#P&H!!*MApqHjC$2OW&
$,-,K!PJoV!.k3l!!*D-poORu#5S<##-@U%!NZU_!0[B`$*<p(!NZM(!.k3m!!*;*poORu$-*%E!!*D-
poORu#5S<##-@U%!NZV*!.k3/!!*D*qPs_!X/Q="!!*;'po=Fp$(:kE!!*D*po=Fp#.jko!!*;'q5XRt
W<n7Yl2UhkWVELpW<W2!!=#OuWr]1+\c@<^bQ%XtpuVS3p](<LpuVS2ec;$:!8I;2!8R;KJcO$q!8RA3
!8G<iX8i7TpuVS3p](<LpuVS2p&L$OK`D1%W;u)]!NCL=!7(WGI&XOSJcP]K!NCL(!9=+\I&Z6.!NCL]
!.k3k!!-`!jo>FKB\NNM!!-`!o)O@B^An;$BZ:%M!!-`!jo>FKB_qd]!/^aWB9W2mli7'MBUJkM!!-_r
YlK@U!L%2M!9jIaB9VHX!L%3-!.k3p!!*I?jo>En%+YEF!!*I?mJqh=_uKgL%)DqF!!*I?jo>En%/'[[
!/1CS!jc+p!!6?1!hKD<!!35.>IOTa!;um!>-e9e!9=+]!jc+p!!6?1!knYd!65'@!M`9N!!5]e!S[U;
!!31r9(W+8!5JR98>H:+!2feu!M`9N!!5]e!W)kK!/^aX!MN0a!:9af8tc9R!7UuM!MN/l!.t7O8cbUd
KE16:!WeufkPtZVT`M\(JcNso!2ATU!2S-FQ2goZmJqh=_uKe5^]:D8!2ATU!2T8fMu\M2!B7Oh$gI]n
$b83e!6tQG2n9=+!.k4M!!3P=2i%Io!!5*i$gI]n$b840!.k3j!!4[N#jMBk#c]E/!0I6_/#imJ!.k3e
!!3G+/&_Lc!!4[N#jMBk#c]EO!.k3-!!4^K#lObk!!3G'/=6Fd!!4^K#dXMa!!*A&!%`a&kPtZ8V?lGe
!XPYS\,_*\aoDF`kPtV)e,Ya6!6O[0JcNai!6MtUWW3%@kPtV)oDjgMK)bn;!12sN!LB(B!6kKEQC#)]
JcPcM!LB(-!9*tZQC$k:!LB(b!.k3i!<7W8!<7W'!0@3\Jb9"p!5S[8J]%Pb!<7W8!<7WG!.k3,!!.S"
r;c6c!IoWd!7CiJIt4j*KE)%&J:[da!!.S"l2Uj7J@>N1!6P9B0/;_l!A?1W!0mNb0/;qrJcNdj!A?1B
!3-#"0/;_l!A?2"!/po1!!!B-\MrjT!]RXtS,ge6!XlOt\H%3]"98E\\I4/miW'#f\MrjT!]RXt]E!N`
`;frFW[mE9!\:8Vf`7*6!XPeVp&K[E_>jWfWX-NCV#UQ&W[mE9!\:8Vq#H!HL]@J^VC_]Hmf3D?V?iLg
dJs=SVC](SK`D0*V?hbRk5YPhVC_'6!\C2S[fD![aT)=_l2Uh+df>U4!6O^1JcNdj!6MqTW;lq?l2Uh+
o)O^LJcGjUZNBOp!Wo]4RfLY4!a;o3\c@<^!rrD/>D<.:!!6?1!q$$i!jc+C!.k3h!!5]e!U]ph!M`9>
!07*]8>H:\!.k3g!!31r9#CY)!!5]e!U]ph!M`9^!.k3+!!Gof!<<,h!!31p99oS*!!5cd!OVo^!!<7q
9)sPDjo>HTT`OQ]!Weuf[K(mZa8c49li7$[dK#I2!2T,bJcNgk!2@.,VuQgnli7$[nc4UKJcGiPWI=17
!IUl8!6Y?CWI;>XJcGiPI&Vf"huEeWII7(9I&X[WJcN[g!LIKf!!-`!f)Ug2!LIKo!.k3g!!-`!_>p>2
!LIKf!!-`!pAfdFL&_=>BE/&%!!-_rPlT/2!L%3)!/:IUB9N;qJcOm4!L%3b!!-_r[/bdYa8c6P%.4)r
$YRlfP5kVp%.XCM!6>-@$YR-QVuQj0%.4)r$YT#1Mu]+C!Z/HbnGiXk)S6pW!!4(N)Xm_.(V:Kd!8dbX
(V:LQ!!4(N)S6!$!!4(N)Xm_.(V:KO!;$6m(V:LQ!!4(N)Xm_.)S6pW!!3tK(X<#4!7q2P&??B3!!3h7
'CYu''<;f9!!3_4&F0=j!!3_4&F]Z$'<;fA!.k3h!!3h7'CYu'&??An!4Mq0&??B3!!3h7'CYu''<;f@
!;ZZs&??A$!1Elh&uZH4!!<q6'EIY'!YhRIn,NM&W"Q'0j8]5oW"SS"!YhRI[K)'_";IdK!!)Qi!YVFE
PQ:LZ!YVFEn,NM(W"e_$!YhRIn,NM&W"R2PJcOO*!7U?9!7C37!7C37!7U$0V>pVFmJm77nc47Aa8c4f
mJm79ciCZX!7U?9!7C37!7C<:rVurIO8tOG!hH!UnGiUjSVZ\6!Jd99!!8^aSur(N!!8^aT'u^\SVXiW
JcGiPLS!u8!hH!UR/ljZ!hH!Un,NK[M!b6DLS!u8!hH!Uc2`Frf)Pl.Mi$p'!Jkda!!.(rn,NNGMi$a"
U&Y7NMi$p'!Jkdj!.k3g!!.(rn,NNGMi$!b[f?JcMi$p'!Jkda!!.(rpAk$i!f2bkMu]:H!euPen,NQF
EW?+/!!.(pn,NNEM2/&1j8]79M21R#!JYX&!/:IUEJFMonc/`GM2.;qq#CJNM21R#!JYX_!!.(pn,NNE
M201QJcOR+!^9(=n,NJQ)"%A)(I7Hi!^9(=joD:Z!^9(=n,NJQ)"IZY!6>-@(I7Hi!^9(=d/^fZ!^9(=
n,NJQ)"%A)(I7Nk"98Ec7R3(9Q2h%?\I?&%nc/_D\I%[(!XZFjnc/eF\I?&%Y5mJ\">74n\h<OR!\V"i
\c@<^!rrY=0(JuF0"DD%/t)e5!!Fpb%(\(^!!4d`$17cp$+_b[!!Fpb%(\(;!.k4'!!FOH$*#6@!!4CF
#4;Hm#-&p=!!FOH$*#6:!2BMs,H;'M,Otg9,H:tB!.k3g!!3A),Otg;,H;'M,M)q*!!FOH$*#6@!!4CF
#4;Hm#-&pC!;ca!,H;'M,E2\m!!FRF$)]'>!!FRF"onYm!!3A&,k:p<,c:sH,cUk+!!FRF$)]'>!!4FD
#.4Gc!!<G',QRE9"=0lOV^.N-q>^XDV[97Hnc/_:VZuPh!X>PJnc/e<V[97HaoI"ng].Du!6aj3!6XX.
!6aj3!m1MdjoD:Z!m1Mdn,NI2nGn.@`rH+_n,NO4!6`ai]Dr#U!6aj3!6XX.!6ap5"98GE!6^K)Q2h&g
D?+RTnc/]kDX7?(DQE=."KQD?DQBr@huEn\D?+RTnc/]kDRfb!!!<3$DQE=."KQD?DQB3+o`,,qD?+RT
nc/]kDX7?(DQE=."KQD?DQD(`JcOF'"I`Ko>+5!^!Ld3Y!!-8lnc/f]=o_`pli<d\"I`Ko>+5!^!Ld3c
!.k3f!!-8lnc/f]=o_`pf)W;\"I`Ko>+5!^!Ld3Y!!-8lp]10k"I`Ko>+1ENRfESX>6%lonc/]W>Q+Wk
!!-;jnc/fZ>6%loWW;,\"IE<m>F4m\!LI#t!/1CS>F,?]!!JWm!*beT!;ZZuQWjGoQgt+WQWreV!F(o]
!!JWm!*bf4!.k4,!!I?F!!@<5!!.-Cli7%gF7K;6EruCEF6<P%!!I?F!!@<5!!.-CnGn.@`rH,BF7K;6
EruCEF4('%!!I?F!!@<5!!.-Cli7%gF7TA8!-85B"*9V*QN.4aZiL.-Zq^/m!)3L$!UKdf!OPSn!!Z0)
!<</-9s=WV!!Z0)!<</-:%SDe9sar3!.k1R!!!&,:%SDi9sap$!OPRj!;6Bs9sap$!OPSn!!5m%!UKdf
!OPSn!!Z0)!<</-:!`ll!8.>Q4f/,X!MqsO!!,6Zl2Uj]4nJ^T4f/,X!MqsH!2KSq4f/,X!MqsO!!,6Z
o`0RD_#OM44nJ^T4f/,X!Mqs3!4`(14f/,X!MqsO!!,6Zl2Uj]4o#*U!!,6ZrVutq4cTN4!!,9XrVutn
54egU5,.uUmJm9^54egU5,/#V!MVcY!9O7^5,/#V!MVdM!!,9XZN,XY!MVdM!!,9XrVutn5*c3G!!,9X
rVutn54egU5,.<B!MVdM!!,9XrVutn50EqX!8RVTX8W)!X7?5jX6KZbX7?5jX8W)!X60J]!!')!!!'(j
!!'(h!.k3j!!'(j!!')!!!'(J!5/@4X8W)!X7?5jX6KZbX7H;l!3?)!!3;7_QiI0gZq^N"!_p$&p&G*o
ZiEhc!!5m%!VQKp!OPT#!!5m%!O2Xa!!32.:&Y+o9sarp!!32.9t11T!<)s"9sarp!!32.:&Y+o9saqk
!;?Hp!OPT#!!5m%!VQKp!OPSd!!5m%!VQKp!OPT#!!5m%!RUn!!8.>QV*4eX!Bm:O!!/oZl2UiJV=X`g
V*4eX!Bm:H!2KSqV*4eX!Bm:O!!/oZo`0RD_#OL!V=X`gV*4eX!Bm:3!4`(1V*4eX!Bm:O!!/oZl2UiJ
V>1,h!!/oZrVus^V2bPG!!/fXrVus_U@\EdU-AMUmJm8OU@\EdU-APV!C!6Y!9O7^U-APV!C!7M!!/fX
ZN,XY!C!7M!!/fXrVus_U6YfV!!/fXrVus_U@\EdU-@iB!C!7M!!/fXrVus_U<<Og!8[\UX8DqtX7QAl
X69N`X7QAlX8DqtX69P_!!'(t!!'(l!!'(g!.k3i!!'(l!!'(t!!'(K!58F5X8DqtX7QAlX69N`X7QAl
X8DqtX-3ON!!-u<qu?buDY=&2DQDt$!NU,3!!-u<qu?buDQs3$!!-u<qu?buDY=&2DQC5HJcP`L!NU,3
!!-u<qu?buDO^_$!!-u<qu?buDY=&2DQDt$!NU,3!!-u<qu?buDUAH9!87DR>+5?h!Ld3c!!-8lkPtXP
>4qps>+5?h!Ld3[!2TYr>+5?h!Ld3c!!-8loDjIC^]4D(>4qps>+5?h!Ld3F!4i.2>+5?h!Ld3c!!-8l
kPtXP>5A6t!!-8lqu?bd>)rZS!!-;jqu?ba>P8$t>F56fm/R0R>P8$t>F56f!LI#l!9X=_>F56f!LI$a
!!-;jZ2fLW!1*[ip&G+tQi$gaQWodVqu?b%Qi$gaQWs.`!F(oS!!/Ejp&G+tQi$gaQWqZ6JcO[.!<[E@
!!.-Cp&G*qF6ET)Es)+9!<[E@!!.-Ckl@^`!<[E@!!.-Cp&G*qF70*\!6"p=Es)+9!<[E@!!.-Ce,[5`
!<[E@!!.-Cp&G*qF6ET)Es)+9!!<4Bqu?b="-`eR!!3J<0)P\N0"D;`!!3J<0'E9:0"D;`!!3J<0)P\N
0"D:o!94%\$+_be!!4d`$2=K%$+_au!.k4L!!4d`$2=K%$+_be!!4d`$(V(k!!3J<0)P\N0"D;`!!3J<
0'E9:0"D;`!!3J<0)P\N0"D;:!.k4*!!3A),Q%NC,H:tC!!3A),No+/,H:tC!!3A),Q%NC,H:t:!2]_t
#-&pG!!4CF#5A0"#-&p?!.k3d!!4CF#5A0"#-&pG!!4CF#20'h!!3A),Q%NC,H:tC!!3A),No+/,H:tF
!<)s"#-&pG!!4CF#*8hV!!3A&,l@WD,c:kA!!3A&,l@Z0!!4FD#5A0"#,`aE!!4FD#-@mh!!3A&,l@WD
,c:kA!!3A&,dIE&!!"8FVZunr!X>PJqu?dDVZrLgr;Zm'V^20?![OZJp](@"V^1I+![OZJp](@"V^20?
![OZJblE=qhZ*Z"q>^N<p&G*9jo>D(p&G*9q>^N<kl@^`!6b3=!6Y!8!6ad1JcN^h!6Y!8!6b3=!6Wdk
^An8Wq>^N<p&G*9jo>D(p&G*9q>^N<PQ7*O!Jm<C!!/XHp](AOSH.gQ!M,&A!!.nHq>^PeLp@$@!!.nH
q>^PeM"grNLn1sSJcP]K!M,&A!!.nHq>^PeLn+P@!!.nHq>^PeM"grNLn3Z.!M,&A!!.nHq>^PeLsc9T
!8@JSEesPl!Jkdk!!.+rjo>F<EqfV8EesPl!Jkdb!2]_sEesPl!Jkdk!!.+ro)O@B^An:jEqfV8EesPl
!JkdM!4r43EesPl!Jkdk!!.+rjo>F<Er,k9!!.+rq>^PPEf^9m!!.+pq>^PNEqfV8EeaGkli7'@EqfV8
EeaDj!JYWs!9aC`EeaDj!JYXi!!.+pYlK@U!JYXi!!.+pq>^PNEgQk*!!.+pq>^PNEqfV8Ee`]V!JYXi
!!.+pq>^PNEm4T9!8mhX(d@cr!Bq@q!!*p#jo>EG)#+(3(d@cr!Bq@c!36)#(d@cr!Bq@q!!*p#mJqh=
_uKg%)#+(3(d@cr!Bq@N!5JR8(d@cr!Bq@q!!*p#jo>EG)#+(3(d@cr!Bq?c!2KSq$,-,K!PJg9!!*D>
pqHmD#ls,g!=?I7^B)"Sq>^O&^%f>B]t=@5!!*D>pqHjC$2OW&$,-,K!PJfJ!.k4K!!*D>pqHjC$2OW&
$,-,K!PJf=!!'_-^B)"Sq>^O&^%f>C]a<g$!=?I7^B)"Sq>^O&^%f>C]a<KpJcOp5!=#Y#XT>L-q>^O#
XSAmuX9Ree!=#Y#XT>L-q>^O#XSAmtXSDk$!!*;*poORu#5S<##-@U%!NZLs!.k3c!!*;*poORu#5S<#
#-@U%!NZLe!6"p<XSAmuX9SM$!=#Y#XT>L-jo>DdXS].!XT>L-q>^O#XSAmuX9P-oW;lr'WVELpW<W2!
!=#OuWr]1(qZ,s_!=#OuWr]1(q>^O#WVELoWODm!!!*;'po=Fp#5S<##-%Bu!N?:.!.k1O#-%Bu!N?;"
!!*;'po=Fp#,qS&WVigqWr]1(q>^O#WVELpW<VJb!=#OuWr]1(q>^O#WVELpW<UuTJcP'9!8RA3!8R>L
!8RA3!8QW8!8RA3!8R>L!8RA3!8R2H[/^3^puVS3p](<LpuVS3m/V_<_Z0\lpuVS3p](<LpuVS3hZ1e!
!8RA3!8R>L!8RA3!8QW8!8RA3!Sd\N!!(gLjoF2/!2BMpLS!K*aT)@4LqE`T!!.kHQiM^<h>dSILo::R
LB*pG!!/XHg]2p+jT#=$M5gOVLiW:kYQ+]DM:DTX!20AnLiVPV`;fpYM80,W!!.mrRK08d!HEnN!6tQF
L2sa'nc/]1LQ_^i!94%[L2s3m!HEnn!3Q;&L2tlGJcP'9!>e#$!!,8#oDl9!!>e#J!.k3J!!,8#hZ1e!
!>e#5!:Tsh4rBmlUAt?%\h<"CaoDJq\I#nKm/R1o\h9BNJcO[.!\V"iVuQf(!P0nb!!4d`$/>N4!9F1^
#-&oL!!4CF#5J8'!!3A),LujH!29Gp,H:t/!6"p>#-&oa!:0[e,H:s:!2ol!#,`a'!7(WH,c:jU!:g*k
#,``2!.k43!!4FD#,hM'#,`aG!3ZA(,c:ju!.k48!!(3B!!(15!42_+bKp6@!2]_rb2*-?!!(3S!:Tsg
b+8U-!!-u<irI4%!NU+M!:0[dDQB0*JcO[.!NU+8!!-u<X8i:%DVG/C!9=+\>+2Mm!Ld3e!3ZA'>+4"B
JcMMF!Ld3P!5nj<>+38-li7'T>+#Ag!!-;jh>kk%!LI$!!:^$i>F1QSJcOj3!LI#f!!-;jrW',%!LI$A
!.k48!!*1CX8i9B"7lN"!!*1Cd/\auVZ6a="5X%"!!*1C]E%I%!HS@7!29Gp!OPS^!6Y?D9sar5!:0[e
!OPRi!.k4/!!5m%!N#hu!OPS(!!5m%!S[U+!94%[V*1s]!Bm:R!3Q;&V*3E1JcMPG!Bm:=!5ed;V*2Zq
m/R/MV3h7[!!/fXhZ2"'!C!6c!:TshU-=hBJcOm4!C!6R!!ArZ!!'5'!C!7.!.k47!!'($!!'(j!4)Y*
X3gp!!2fesX5*cs!!'(4!:^$hX.96a!!5m%!Ta=*!!32.9tC>j!!5m%!Lj(@!9!nZ!OPRt!!<3qZiRB2
!WfZ&g&Q^)irB*CV60e!V*4PQXoJJcV:P^!!2BMpV*3f<_Z0^#V8<6"!!/oZQiNu`!C!78!71]HU->sb
n,NJQU6P_1!9F1]U->@Q"$WFZ!3cG(U-@*-JcOs6!3<7&!3>ViZ2am*dK"k!VuQgug]5@p!3<d5nc/Zj
S,f2^!NU,"!6bEDDQC;Jl2UjcDOUWX!9!nYDQBQ5!rr>%DQj*ADQDFjJcOd1!Ld2r!!-8lp&M2p!Ld3E
!.k3H!!-8li;g^p!Ld30!:Bgf>+1cXV#UO_>MoM/!!-;jZiKOp!LI#V!.k45!!-;jU&Y7]>6(o.!F(o?
!.k46!!.-CYQ+\+F7B79!!.-Cdf=t"W;lr$F5-c9!!.-C^&[a)!<[D5!2';n0"D;N!6kKF$+_b"!9sOc
0"D:Y!.k41!!3J</u/IM!!"X^$*jO4$+_bB!.k41!!4CF#-n41#-&pA!3H5&,H:t$!.k3I!!3A),N/X>
!!4CF#/gN1!!3A),F8D,!!4FD#2oR1!!3A&,d[R?!!4FD#+#=A!9X=`#,``@!!4FD#-n41#,``r!.k45
!!(0G!!(43!3lM(b0p?B!3#qubM*$:!!(0U!:p0jbF8L(!!/XHjoEX+!Jm;V!9jIaSVWd9JcOd1!Jm;A
!<)s!SVXQO!Jm<!!.k40!!.mrZ2aoGM"LbL!!.mrf`6U(V#UO:Lu89L!!.mr_uT6+!HO!^!2KSqL2u5Q
dJs;gL9gmJ!!.gpQN2U;k5YO'L7eMIL2sR"!HNqD!.k45!!,8#Z2anB54AQW!!,8#e,Y(#WW3&:52-(W
!!,8#^B!m+!>n"i!1s5m)S6pN!6tQG)S6ot!9jIb)S6oY!.k42!!4(N)P[<3!!4(N)RKJG)S6p?!.k40
!!3h7'=7`@'<;f>!3?/%'<;f#!.k3J!!3h7'Arl,!!3h7'?'t@!!3h7':&Wo!!3k5']K,A!!3k5'XIf-
!!3k5'USlP!9aCa'W;_=!!*e4!#2d?!YhRIdf=t"jT#;.Z2amPmf9Ql!7B9rJcMeN!7BL#`;fnc^B!m+
!7@58T)\nkIHCOS!!.JH\,ban!NCL;!.k41!!.JHUB(8n!NCLQ!!.JHfDpL'i;`nFBX.U=B:&8kX8i9f
B\<B;!2TYrB:%NV_#OM&BZ'o>!!-`!Q2m]\!L%3U!7CiJB9TY%mJm9OBU8^N!9X=_B9Stg!L%3&!!-_r
df=t"jo>En%'fj6$YSr/YlFf9%+G9/!3-#"$YS2o`W-$N%)2f7!!*I?RfK)]!a;o3joEX+!Wo]4\H(mp
!a;o3S,e-@iW'#]ZWj4*"98F*ZN@E4!Wo]4f`6U(iW'$NU]Ib$!Wf&gp&M2p!_B*ff`6U(V#UPtUIsJF
_>jX.U]JC6mf3CiUIpjQV#UQhT`O*PdJs=LThD`mmf3D]T`LJ[JcOs6!WeufU&Y6eT`MG!!Weufe,Y(#
jo>CWYQ+Ztn,T]n!2S'DJcMbM!2A3J`W-"7^&[a)!2>q_T`>-%\MrUMbQ%]'\I5tKlMpto\MouXJcOa0
!]RXtV#USt$b84#!!5*i$ebT4!94%\#c]DZ!!4[N#kn>%!!3G+/(aiR!2KSr/#im7!5ed<#c]Dm!:Bgg
/#ilB!2]_t#c902!7:cJ/>`]\!:Tsi#c9/=!.k45!!4^K#c%G&#c9-QYlFhVV?k]PJcOs6!6MAD!6Oa2
Z2amHdK"k!VuQh>g]5@p!6MnSnc/[3S,f5_!LB)5!6Y?CQC#/_lMpsOQ^Ro+!8mhXQC"EJ!W\OQXoJKg
QeDFk!94(ZJZ]"QJbK/I!<7W%!.k3G!<7W0!5eg:J\hES!<7V;!2]_sIt6DVci=)rJ@,CH!!.S"PlQC9
jT#=2J></IIt.M!YQ+]RJCOXO!9aC`0/9U0!A?1u!4)Y+0/:lTJcM_L!A?1`!6>-@0/:-?nc/\D0qA<=
!!5*i$fh<2!!3P=2nK(V!!5*i$^q'I!8mhY$b83n!!5*i$a'I2$b84N!.k43!!4[N#d+./#c]EM!3ZA(
/#im,!.k3G!!3G+/)pWJ!!4[N#f6T/!!3G+/"$C8!!4^K#i>X/!!3G'/@GQK!!4^K#aGCA!9F1^#c9/M
!!FjM#QOk/!!3G'/CjfQ!9aC_afGIBamoG<!!(-g!.k3K!!(-s!6>-?ah.WD!!(-3!2BMq!jc+k!6P9C
>-e:C!:9af!jc+!!.k4.!!6?1!iQ)!!WfW3X8i<*ZNAn^JcOm4!Wf&gX8i;mU]L8kYQ+_*UIs);JcMMF
!_B*fj8d.!!Wf&g_#Wg%!_B*fRK08d!Weufh>kk%!_T-e[fGt!!WeufPQ6:8j8]6RT`M(l!WeufrW',%
!_T-ef)UC&kl:^XWW3$po)Q,t!2@g?JcMYJ!2SHOaT)=8])_=#!2Q1dUAt=BWT!p"!!0'I]E%=!!IUl6
!.k4-!!0'IVuQgF!3)su!NCM&!.k44!!-`!WW3'dB__Y4!!-`!eGt1$T`>+[B]K04!!-`!^]<[#!LIJg
!2okuB9V-Oc2[m/BX\!4!!-_rP5p17irB+DBW(n3B9W8oXoJKdB\*69!9sOb$YQI>!G)]3!4;e-$YRfd
JcMYJ!G)\s!6P9B$YR'On,NK#%%dNq!!*MApqHjC$1%Z@!!*D>pqHg0]E%@"!=Z[:^B)"SU&]cFkPtVi
^%f>C]aUk?!580B!PJfR!!*D>pqHjC%,Co8!9O7^$*<p(!NZL>!!*;*poOOaq#IZ"!=>k&XT>L-hZ/6.
WrN/)XSAmuX9mtg`;fn>poORu#0Hr=!!*;*poORu$(Cpo!!*D*po=Fp#3Q!=!!*;'po=C\[fH""!=>b#
Wr]1(SH+6Am/R.kWVELpW<oO(!3,msrMosu#/1'<#-%Bu!N?CX!.k49!!(dKjoF2L!!(gLjoB>l!4;e,
g\Bn2gt;[Z!3ZA&h"^"3gYW"R!!(dKjoF2T!;QTph"^"3gReJ6!!.kHli>K7!M,%P!94%[LRt4?JcP!7
!M,%;!;HNpLRu3[!M,%p!.k4*!!.(r^&S1iEpj"*!!.(rhZ/6.WrN0VEnUN*!!.(raoM)7!JkcX!1j/k
EJN]WfDkr,Eif?*!!.(pSH+6Am/R0AEgQk*!!.(p^&S1gEm4T9!8mhX(I5\7!Bq@c!36)#(I6[SJcN"T
!Bq@N!5JR8(I5q>q>^O[(mP)h!!3J<0'rYg!!4d`$*jQk!!3J</u&Du!9jIb0"D:Z!;HNq$+_b)!!4d`
$.8g*!8@JT#-&o`!!4CF#4DPh!!3A),N&QR!3?/%,H:t%!4r44#-&ok!;6Bo,H:s0!1j/l#,`a1!8.>R
,c:jK!9aCa#,``<!.k4=!!4FD#+,Dh!!3A&,esB],c:jk!.k4.!!(3V!!(1+!3-#!bLurJ!3cG'b1$F+
!!(3]!;ZZqb*2mn!!-u<m/YW9!NU+C!9*tZDQBN4JcP$8!NU+.!;?HoDQCPQ!NU+c!.k4)!!-8l^]4D(
>4)Be!!-8lhuJ?/X8i9i>1ine!!-8lb5h59!Ld2Q!1a)j>F4ORf`2&>>H@hf!!-;jScF?BmJm9S>F,?f
!!-;j^]4D%>Kd)!!8dbW"*;6X!HSA-!3-#""*<2sJcN%U!HS@m!5AL7"*;H^qZ$Y<"-`eQ!!32.:$r#3
!!5m%!O2Xa!!32.9r%c@!9sOc9saqk!;?Hp!OPS<!!5m%!RUn!!8.>QV*2Zq!Bm:H!2KSqV*3c;JcMnQ
!Bm:3!4`(1V*3$&pAb4WV2bPG!!/fXklBE;!C!6Y!9O7^U->1LJcP6>!C!6D!;c`sU-?Eo!C!7$!.k4-
!!'(8!!'(`!3#quX4mW+!3lM(X4%'_!!'(>!;c`rX-3OM!!5m%!Ug$>!!32.9s=WV!!5m%!ModJ!:'Ud
!OPRj!;6Bo9sar>!!32.:!`ll!8.>Q4f-!q!MqsH!2KSq4f.*;JcMnQ!Mqs3!4`(14f-@&pAb5j4cTN4
!!,9XklBE;!MVcY!9O7^5,+YLJcP6>!MVcD!;c`s5,,mo!MVd$!.k4,!!'(:!!'(_!2oktX5!],!3uS)
X3q!]!!'(?!;lfsX-*IK!!0-<mf:o=!H+sA!8mhXX)=a6JcP*:!H+s,!;-<mX)>iU!H+sa!.k4'!!/Nl
_uKgARd:$L!!/NliW+Q1XoJK+Rb%PL!!/NlblIM=!EtqO!1NrhQWr_TgAh7YQ`:&I!!/EjTE'QDn,NJn
Q^%RI!!/Ej_uKgBQc];[!8RVUEs'>\!<[E+!2okuEs(4uJcN+W!<[Dk!5/@5Es'J`r;Zj#F-6Nh!!4d`
$1IrH!!3J<0!>95!!4d`$)R]S!:0[e$+_aX!;-<n0"D;.!!3J<0$aNL!8%8Q,H:sf!!3A),O>E*!!4CF
#3,]8!3ZA(#-&p"!4W"1,H:sn!;QTr#-&o-!1Nri,c:k4!8IPU#,``H!9F1^,c:j?!.k4@!!3A&,aAB+
!!4FD#0$WE#,``h!.k4+!!(0[!!(4)!2fesb2!&L!4)Y*bL$=&!!(0_!;ultbE2di!!/XHn,V&?!Jm;L
!8dbWSVX-CJcP-;!Jm;7!;$6lSVY8c!Jm;l!.k4&!!.mr`W-$[M!G&8!!.mrirFZ2Y5eTDLt2R8!!.mr
c2dY?!HO!T!1ElgL2uS[g].@qL8b16!!.gpT`BZEnGiT1L6M]6!!.gp`W-$[L<0FI!8IPT4rD9>!>n#_
!2fet4rE,VJcN.X!>n#J!5&:44rDBArVus95*5im!!3tK(WZRX(V:LR!7q2O],/Ng!Z/Hbl2]]A!Z/Hb
VZ;;Km/R2(],/Ng!Z/HbeH#4A!Z/Hba8c8X],/`mqZ$[6],."<!YDCDnc78A!YDCD`rH.@&F0>Q!!3_4
&BFhQ&??B'!.k3T!!3_4&CpjQ!!3_4&BFhQ&??Ag!;ZZs&??A`!!3_4&BFk&!!3e3'$(%S&uZH0!8IPT
W"R/O!YVFEjT+?A!YVFEU&]cFnc/_(W"R/O!YVFEciEkA!YVFEa8c8SW"R2P!rrt4&tAq%e*I(h!!(Kf
!!(L0!9*tYe&D@fe(t(V!42_+e'J*h!!(Kf!!(Ki!<)rue&D@fe'%g>!!8^aT#^m4SVZb8f)Pi,T#^m5
SY2S>!8dbWSVX-CJcP-;!Jd8f!!8^aT%*i5!!/XH`W-$pT$@?5!!8^aSt,i_Ll7,\!7q2OLiUK8!HEt^
!8[\WLl7,2!!.mrirFZ2Y5eTCM:M[u!!7t7M9#YtLiUc@q#CG8M9#YuLl7,2!7h,OL5C],!!.gplN#]?
!HEn9!!7n3LZJNs!!.gpT`BZEnGiT0LWBGsL5C]4!;QTqL2t96!HEn:!!<4UM2.W%!^9(=m/YoA!Bq@?
!!*m$joFEA!^9(=a8c6)(u>7E!42_,(I6@Jp](@Z7R5#p!Bq@B!<)s!(I6%A!^9(=blH/l">74n\h;,*
!\V"in,V&?!XZFjaoDPs\I?&%lN#iC!\V"iV>u2Jli7(n\h;,*">74n\h;P6o`,%G\I$7U!XZFjcN*kC
">74n\h9TT"='oQW[%*8fDkstWWpHC!X>YLli>oC"='oQW[#Xd![F]LirFZ2Y5eV.W[$*qoDf"=WX5[M
aoDJfWWp`Kq#CI#W[#Xd"='oQW[#Ucf)Pq!V[97HaoDJgVZuGeg].B[V^0Cb"=0lOV^1C)jT#?-VZrgp
JcP<@!X>PJaoDPiV[97Hd/a"C![OZJ`W-&EV^0Cb"=0lOV^.i6!m1Mdm/YoA!6W4[!6aL)irB/'!6`F`
!6X*tJcN+W!6`aip](B<!6`F`!6W@_r;Zi@a8c:a!6`UedJsEND?+RTaoDICDXRSV!!-u<aoDRFD?+RT
lN#iC!NU+7!.k4:!!-u<aoDRFD?+RTec>@C!NU+V!!-u<cN*kC"KQD?DQBB0"I`Ko>+5$_fDkr@>/UCA
>+4dXhZ*eJ=o_`paoDI2>2fO6!3Q;&>+4%CoDf#_=o_`paoDI2>0R'B!!-8laoDR5=o_`paT0om"IE<m
>F3J4!LI$U!8@JS>F3J4"IE<m>F4IPjT#=J>G(tJ!:Tsh>F3J4"IE<m>F3_;q>^P_>JpLB>F3J4"IE<m
>F1r^"EOYF"*<l1h#IIs"2k0?"*<W*j8]=(!rrFEaoDH`"5Ns/!4)Y+"*;ljq#CP=!rrFEaoDH`"3:K@
!!*1CaoDQc!rrFEc2c;n##2H*!!0H$bQ%]=ZiTUqec5aPZq\aE##2H*!!0H$li>uE!_p$&V#Z)IlMpte
Zq\aE##2H*!!0H$f)YLE!_p$&_uKi>Zq\mIr;[$rZiL.-Zq[4o!Bm:Y!!/oZoDmPE!Bm9r!!/oZm/Z&E
!Bm:Y!!/oZbQ%Z,V;VE+!3H5%V*3H2o`,"UV>^GqV*3$&!Bm:'!;?HoV*3$&!Bm:Y!!/oZaoL&o!C!7W
!!/fXbQ%Z-U?M[3!!/fXbQ%Z-UAb,nU-@`?jo>EGU7VF;!:KmgU-?d$!C!7W!!/fXdK'.E!C!6p!!/fX
bQ%W,!2BGm!MVcN!!')!!!'(f!8RVTX24i:X60KD!!')!!!'(B!!'(T!.k3V!!'(J!;QTpX8W)!X3(DB
X2b5<!!'(B!!')!!!'(F!7UuM!OPT#!!5m%!R:ZH!OPSh!7_&N9sarH!!32.:&Y+o9sarg!9*t[!OPRs
!.k49!!5m%!R:ZH!OPT#!!5m%!S@DH!!32.9u6l39sarK!<)s"!OPT#!!5m%!MTPpV*4eX!Bm:O!8.>Q
V*2Zq!Bm:H!8mhXV*4eX!Bm:'!!/oZi;eH0XT/AbV:Ye@!!/oZrVus^V9Ao?V*3$&pAb4WV9Ao?V*4eX
!Bm:%!8%8PU-APV!C!7%!!/fXklBE;!C!7%!!/fXrVus_U?;O=!!/fXT)aHCmf3APU<ET<U-APV!C!7+
!;c`sU-?Eo!C!7%!!&_n55kN_5,+_N!3?"t!3>Pgh>dPV^]4A8kQ']E!3?"t!3=<D!3=iSJcN%U!3=QK
q>^Mrqu?_tbQ%XD`W5l9!3=<D!3?"t!3=EGe,TMeX8DquX)?2_!H+t*!7UuLX)?2_!H+t9!!0-<m/Z,G
!H+s5!.k48!!0-<c2[l_X8DquX)?PipAb53X2"]9X)?;brVut:X8DquX)=[4!Etri!!/Nlo`3\G!Etr-
!!/NlmJu2G!Etri!!/Nlc2[lKRc"0t!3?/$RTeAEp&G+sRf!-dRTdu:!Etr8!;6BnRTdu:!Etri!!/Nl
b5g2q!F(og!!/Ejc2[lLQfnG&!!/Ejc2[lLQi$gaQWrYRk5YNeQ_"2/!:BgfQWq`8!F(og!!/EjdfB:G
!F(o+!!/Ejc2[lLQi$gaQWp3b!<[E@!!.-Cn,V>G!<[DY!!.-CklBiG!<[E@!!.-Cc2[kIF5$\H!3lM)
Es'nlqZ$X!F8Q"=Es'\f!<[D_!;c`sEs'\f!<[E@!!.-CciDSr!XZFjqu?dN\I$U_!XZFjm/YW9!\V"i
ci=+R\h<m\!\V"imJu8I!XZFjUB#lGkl:c;\I$U_!XZFjqu?dN\I$php](@%\h:bu!\V"idJsCM!"$4h
qu?dN\I#)4!X>YLqu?dCWWr.sgAh9ZW[#:Z![F]Lmf;>I!X>YLqu?dCWWpfM!X>YLhuJ?/X8i;HWWq/W
pAb7!W[%EA![F]Lci=+OW[#[ep&G.=WWpfM!X>YLqu?dCWWpZIg&M0YV^20?![OZJci=+OV^1I+f`2(!
VZtKJ!X>PJqu?dDVZuAckPtYgV^.i6JcP3=![OZJci=+OV^20?![OZJe,]FI!X>PJ^]4E]VZtKJ!X>PJ
qu?dDVZrps!6b3=!6Xd2hZ*Z"^&S/UklBiG!6b3=!6WRe!6a'rJcN"T!6WdkqZ$W>q>^N<c2[jf`;o`7
!6WRe!6b3=!6WXgeGoW+Sb`<eSVYVm!Jm<5!7LoKSVYVm!Jm<C!!/XHmJu8I!Jm;@!.k47!!/XHci=*&
Sb`<eSVYr!p](>NS\>()SVY\o!rr=WSb`<eSVX*B!HO"m!!.mrp&NhI!HO"1!!.mrmf;>I!HO"m!!.mr
ci=)eLu/2a!36)#LiV2LpAb57M#%)PLiUiB!HO"=!;-<mLiUiB!HO"m!!.mrbQ->s!HNqk!!.gpci=)e
L?AQh!!.gpci=)eLAClNL2uMYkPtX(L7J<r!:9aeL2tW@!HNqk!!.gpe,]FI!HNq/!!.gpci=,fL&h)N
!JYWk!!*p#q>^O[)"@Ua!!*p#^&S0t)!V+a!!*p#q>^O[(si6`(d?XRJcN"T!Bq@N!;lft(d@cr!Bq@I
!!*p#`;o`7!Bq@I!!*p#q>^O[(sr?A!!*MApqHjC$2OW&$,-,K!PJp(!!*MApqHjC$1%Z@!!*D>pqHjC
%-@Nj%))GN!PJg9!!*D>pqHjC%/Bnk!!*MApqHjC$).EO!9aC`$,-,K!PJp(!!*MApqHjC$2OW&$,-,K
!PJp(!!*M/pqHjC$,-B?$,-,K!PJp(!!*MAqS*-I^V'sM!!*D>pqHgB\c;a;XSAmuX9SM$!=#Y#XT>L0
jo>DgXSAmuX9QB=!=#Y#XT>L0q>fm_!=>k&XT>L-q>^O#XSAmuX9n"h!=>k&XT>L-hZ/6.WrN/)XSAmu
X9n"h!!rY,poORu#5S<##-@U%!NZUi!!*CopoORu#0Hr=!!*;*poORu$0D3g$*<p(!NZM%!!*;*poOOt
ec=e3!=>b#Wr]1(q>^O#WVELpW<q\e!=>b#Wr]1(k5a-7!=#OuWr]1+jo>DgWVELpW<W2!!=#OuWr]1+
oDnI_!=>b#Wr]1(SH+6Am/R.kWVELpW<q\e!=>b#Wr]1(q>^O#WVELpW<q\e!=>(iX8T("W<U':!=#Ou
Wr]1+jo>DgWVELqW<NA"!!*;'po=Co\GuWapuVS3p](<LpuVS2qZ,m]!8I;2!8P3e!8RA3!8I,GnGiRD
puVS3p](<LpuVS2j8]27puVS3f`6U(Y5eRXpuVS2j8]27rT=%?!8R>L!8RA3!8HQ7!,qYp!8PKmq#CEM
puVS2j8]27puVS3p](<LpuVS2gAp+2!IUm/!!0'Ij8]4.WT!p"!!0'Ij8]4.WTF0]WI=OAm/R07WL*[;
!8[\VWI<h-!IUm/!!0'Ij8]1-!3)su!NCM.!!.JHqZ,s_!NCLX!!-`!jo>ILBE7,o!G@b!!!/F"q#Ka]
!G@b]!!/F"j8]3nQdl(f!20AnQY>F[!G@b]!!/F"j8]3nQbWUe!!/F"j8]3nQf\8KQY=qMj8]3nPNDiG
PA'"W!G@VP!6tQFPA'"W!G@VY!!/9so)S=]!G@U[!.k42!!/9sj8]3nPNDiGPA'"W!G@Vp!3Q;&PA'"W
!G@Vi!:^$iPA%K,!=NQ&!!-X>qZ,m]!=NP?!!-X>oDnC]!=NQ&!!-X>j8]2gB@$X1!2]_sAIRW"!=NQ>
!9jIaAIRW"!=NPP!:TshAIRW"!=NQ&!!-X>gAp+2!Wo]4kPtZfZNB1f!Wo]4irI4%!a;o3j8]5_ZWlVn
!a;o3p]0[]!Wo]4R/hg=hZ*^]ZNB1f!Wo]4kPtZfZNB1f!!32->H@f+>-e:k!!35.>PnKg!!6?1!kA:4
!M`9N!!>cf!<D3]!Wf&gX8i;mU]L8kli7(fUIs_M!_B*fj8]5^UIs);JcMMF!_B*fj8]5^UIs_M!_B*f
j8]5^UIr?&li7)XU]KNV!Wf&gkPtZTU]K$Hj8]5^ThFSL!_T-ej8]5^ThF5BcN"#=T`O3S!WeufkPtZV
T`O`bnc/^lThCUMJcOj3!_T-ej8]5^ThFSL!_T-ej8]5^ThG@bY5eVrT`O3S!WeufpAjaa!_T-e\,ZN'
jo>CWq>fa[!2?In!2T2dn,NH_jo>CWiW&tQciAXtV>pUliW&tQrW)0_!2STS!2@(*n,NHaiW&tQjo>CW
g&Tt0!]RXtl2Ukn\MrLJ!]RXtj8d@'!XlOtiW'$=\I7[&!XlOtpAjO[!]RXtRK.p>huEfd\MrLJ!]RXt
l2Ukn\MrLJ!]RXtXoJM2\MrLJ!]RXtr;c6c!XlOt[f?I[WX.ki":2"X!!)'[!\:8VXoJM/W[miElMpu:
WX.ki!XPeViW'$1WX.2VJcMPG!XPeVirB/]/#im?!!3G+/)gO1/#ill!:9af#c]E7!!4[N#jMBk#c]E*
!94%\/>`^<!!3G'/E-X2/>`^1!71]I#c904!!4^K#jMBk#c90D!:^$j/>`]<!.k44!!3G'/E-X2/>`^<
!!3G'/E-X4/>`[Q!3cG)#c904!!4^K#l"Dk!!3G'/@GNYali^)anYr#!!(-B!!(.3!:Kmfali^)al!.!
ajC*?!2fesal!.#aT)>+!!(.!!!(-R!:^$hal!.!ali^)ak6[M!!/CPl2UjNQf%iEQC$Y4b5_R/Qf%iE
QC$k:!LB)G!:'UcQC"$?JcO^/!LB)1!!/CPl2UjNQf.oG!1&tS!!/CPhuEeDQi-pP!!/CP[/g5Xl2^j8
rW(sYs+.<Qs+0nEl2^j8l2^j8huNe.f)UC&UB(=FiW/uYs+0G8s+0).s+/#em/[0;huNe.l2^j8e,\J.
!IoXb!!.S"huEe-JDU@R!!.S"huEe-JEd+8It7%hn,NK=J<^+d!9F1]It6GW!IoXb!!.S"huEk/J,fSR
!!.S"huEe-JG9-9!!.S"[/^4\1$S`>0/<8&kPtW:0s1KW0/<"tmf3AA1$S`>0/;Ab!A?1U!.k3L!!+`-
huEg30`^M>!A?1c!!+`-]`@U'!A?1c!!+`-l2Ui<1"cQ_!!3P=2s^MG2n9=S!!3P=2rt%`!!5*i$fD!d
$b84_!!5*i$haSd!!3P=2k'f!!9!nZ2n9=S!!3P=2s^MG2n9=T!!<3/\Mp_m!]RXthuEfd\MsKfmf3DJ
\I5eF!XPeVli7);WX/S(irB,dW[k:R!\:8VpAjIY!XPeVli7);WX.M_!XPeVfDpL'U]:HHWX.Sa"98E-
W[mE9!\:8VhuEfaW[ksemJm;=WX.M_!XPeVli7);WX.)SiW'#cVC_'6!\C2ShuEfaVC^X*d/X5!V?l)[
!XPYSli7)<V?l\ln,NLqVC\#5JcOp5!\C2ShuEfaVC_'6!\C2ShuEibVCV_P!!4^K#iG[a#c90K!;$6m
/>`][!!(.+!!(.9!9X=^afYUDamfB!!!(.+!!(-t!!(-h!.k3L!!(-t!!11AlMpq,h>dPt]`@U'!6O't
!6OL+!6Njng].CZZNBOp!Wo]4h>dU\ZNB7hbl@eHZWl8d!a;o3mJm:iZWm)&l2UlhZN?WsJcOd1!Wo]4
h>dU\ZNBOp!Wo]4huEl[!*Z]1Z2aq-ZWl8d"Br,5!!)Kg!Wo]4ZN(%tU]Kl`!Wf&gr;bgW!_B*fZ2aq,
UIt4[kl:cUU]Kl`!Wf&gh>dUJU]K-KJcMVI!Wf&gi;iiW!_B*fmJm:hUIsAC!_B*f_uT6+!Wf&gh>dUJ
U]Kl`!Wf&gdfA>,!_T-emJm:hThF5B!_T-ei;h:+!Weufh>dULT`OQ]!Weufn,VnW!_T-eQN2U;k5YPa
ThF5B!_T-emJm:hThF5B!_T-eZ2aq,ThF5B!_T-eq>g0g!WeufZ2am#li7$[pAj=U!2Qh!!2Ar_m/R-^
li7$[g].>Mdf=t"W;lpmg].>Mli7$[g].>M^&[a)!2A6K!2Sr]!2A'FgAh8RII7(9I&Ym$!NCM0!6kKE
I&Ym$!NCM8!!.JHoDn+U!NCL;!.k41!!.JHg].ASII7(9I&Z!'rVutuIBihRI&Ym$"0$\K!:TshI&X@N
!LIKf!!-`!quG[U!LIK*!!-`!o`41U!LIKf!!-`!g].AAB\<B;!2TYrB:%NVr;ZkbB^Pj$B:%BR!LIK<
!:KmgB:%BR!LIKf!!-`!dK&2*!L%3b!!-_rg].A=B]/s>!!-_rg].A=B^Pj$B9VcamJm9OBU8^N!9X=_
B9V*N!L%3b!!-_rg].A=BX.U=B9V*N!L%3n!;-<mB9TS#!G)]-!!*I?pAj=U!G)\F!!*I?n,VhU!G)]-
!!*I?g].@d%+G9/!3-#"$YS5p!+c-=mJm7qBA<IfAIQ<RoDen"BA<IfAIRu,!=NPl!:Kmh(V:LQ!!4(N
)Xm_.)S6pW!!3tK([qD+)S6pN!6tQG)S6pW!!3tK([qD+)S6pW!!4(N)Y=%.!!3tK([qD+)S6oY!.k42
!!4(N)Xm_.(V:LQ!!4(N)Xm_.)S6pW!!3tK(\7Y+!!+"MZN(%F],L/=!Z/Hbn,NP/],C\>!!4(N)Xm_.
(V:L:!!3_4&F]Z$'<;f9!!3h7'Dqk'!!3_4&F]Z$'<;eR!!3h7'D2A'!!3_4&F]Z$'<;f9!!3h7'CYu'
&??B3!!3h7'A<G<!2]_t'<;f9!!3_4&G,u$!!3h7'CYu''<;f9!!3_4&F]Z#'<B%On,NM'WtXt&!YDCD
n,NM'WtXt&!Y_UJn,NM$Wt=CnoDeq*W"SS"!YhRIn,NM(W"e_$!YVFEn,NM(W"e4kdf9F`W"e_$!YVFE
n,NM(W"e_$!YhRIn,NG$!N6Y#!!3k5'USlP!9aCa'W;`8!!3e3'(>l&'W;`8!!3k5'^u)(&uZH4!!*e4
ZN(%@W"e_$!YVFEn,NM(W"f+/p&G..W"e_$!YVFEfDkp#mJm77mJm77p&Omg!7U?9!7A(P!7C68!<CU:
!!(F7!!(F7!!(L9!!(Er!.k3N!!(F7!!(L9!!(F7!!(F7!!(L9!!(E]!;$6kdI$u7e*[29dI$u7dI$u7
e*6r%!!8^aT'u^\SVZ\6!Jd99!!8^aT'u^\SVZD.bl@d"T'u^]SY2SD!!/XHmJm9CT(E$]!!8^aT'u^\
SVWd9JcOd1!Jd99!!8^aT'u^\SVZ\6!Jd99!!8^aT(;s]!!/XHZ2ao\T'u^]SY2SD!!AdJ!!)Kg!Jd99
!!8^aT%O)FLl7,Z!!.mrmJm9-M>RAH!!7t7M=:KGLiTd$!HEth!;lfuLl7,Z!!.mrmJm9-M=:KHLl7,Z
!!.mrf`6U(V#UO9M=:KHLl7,^!;uluLiVn`!HEtc!!7t7M=:KGLiUE6mf3B.M=:KHLl7,Z!!.mrmJm9-
M=:KHLl7,P!;$6mL5C]T!!.gpmJm9-L[Y9FL5C]T!!.gpi;h:+!HEna!!7n3L[Y9EL2u\^!HEna!!%`S
M21R#!JYW]!.k46!!.(pn,NNEM21R#!JYX_!!.(pn,NNEM21R#!JYX#!!.(pn,NNEM21R#!JYXk!;-<m
EJO#`!euPef`2(;7R6GC!Bq@g!!*m$pAk$i!^9(=n,NJQ(pX,B(I7Hi!^9(=n,NJQ)"%A)(I7Hi!^9(=
n,NJQ(t8P;!3-#"(I7Hi!^9(=n,NGP!#Y,(!>e#j!!5>R5k"aS4rD$7oDen.5k"aT5"7g,!!,8#mJm8(
5k"aT5"7g'!:Tsk0"DD%0(JuD0"D;V!!3J<0(JuF0"DD%0(JuD0"D;N!6kKF$+_b[!!Fpb%(\(^!!4d`
$17cp$+_b^!<)s$0"DD%0(JuD0"D:Y!.k41!!3J<0(JuF0"DD%0(JuD0"D;V!!3J<0(JuF0"DD%0(],H
!!"X^$*jO4$+_b[!!Fpb%(\(^!!Fpb#ljtp!!3J<0(JuF0"DD%0&$@/,H;'M,Otg9,H:t9!!3A),Q.W9
!!FOH$*#6@!!4CF#-n41#-&pA!;um#,H;'M,Otg9,H:t9!!3A),Otg;,H;'M,Otg9,H:t$!.k3I!!3A)
,Otg;,H;'M,P;'9!!4CF#4;Hm#-&p=!!FOH$*#6@!!4CF#/gN1!!3A),Otg;,H;'M,Otg9,H:t9!!3A)
,Otg;,H;'M,Nf("!!FRF$)]'>!!4FD#4;Hm#,`a;!!FRF$)]'>!!4FD#2oR1!!3A&,k:p<,c:sH,k:p:
,c:k7!!3A&,k:p9,c:\MV^1g5![OZJQN2U;k5YPfV^1g5"=0lOV^1g5![OZJmJm:mV^1g5"=0lOV^1g5
![OZJZ2aq1V^1g5"=0lOV^1g5![OZJq>g0g!X>PJnc/e<V[97Hg&M2s!6aj3!6XX.!6b*:q>^T>!6aj3
!6VMG!6aj3!m1Mdn,NI2li7%/n,NO4!6aj3!6WajJcMbM!6aj3!m1Mdn,NI2li7%/n,NO4!6aj3!6W"U
o)Jd6n,NO4!6aj3!6XX.!6aj3!m1MdlN$DS"KQD?DQE=.!NU,)!!-u<nc/fnD?+RTnc/]kDWLlB!!-u<
nc/fnD?+RTnc/]kDX7?(DQEF1rW!)%D?+RTnc/]kDOUWX!9!nYDQE=."KQD?DQE=.!NU,)!!-u<nc/fn
D?+RToDesn!3:"A!!-u<nc/fnD?+RTnc/]kDZ0Y)!!-u<nc/fnD?+RTgAhAF=o_`pnc/]Z>3l4i>+5Bi
p&G5a=o_`pnc/]Z>-Iu->+5-br;Zth=o_`pnc/]Z>3l4i>+5!^"I`Ko>+5!^!Ld3E!.k3H!!-8lnc/f]
=o_`po`4sk!Ld3Y!!-8lnc/f]=o_`pnc/]Z>/L@.!!-8lnc/f]=o_`pnc/]Z>3l4i>+5!^"I`Ko>+4US
o`,,]>6%lonc/]W>O2=j>F4m\"IE<m>F4m\!LI$K!7:cI>F4m\"IE<m>F4m\!LI$W!!-;jnc/]W>64e/
Qgt+WQWoaUJcOp5!F(o]!!JWm!*bf\!!/Ejli7&jQgt+ZQWjGoQgt+XQWjHp!!-;jnc/fZ>6%lonc/]W
>PS9k!!-;jnc/fZ>6%logAh@t!rrFEnc/]3"7-!g"*=5;qZ$b?!rrFEnc/]3"0_b+"*=#5!-85E!!@<5
!!.-Cli7%gF7K;6EruCEF7K;3Es'kkJcMbM!<[E6!!I?F!!@<5!!.-Cli7%gF7K;6EruCEF7K;3Es',V
o)JdnF7K;6EruCEF7K;3Es(b/!<[E6!!I?F!!@</!:^$n9sap$!OPSn!!5m%!UKdf!OPSn!!Z0)!<</-
:%SDe9sar_!6bEE!OPSn!!Z0)!<</-:%SDe9sarf!!32.:%ePm!!#a#!<</-:%SDe9saqj!.k40!!32.
:%SDi9sap$!OPSn!!5m%!UKdf!OPSn!!Z0)!<</-:%\Jg!)9g$YQ+_*Zq^/m##2H*!!0H$oDeqeZiU.+
mf3CiZq^/m##2H*!!0H$h#II=V>^GqV*4GN!Bm:E!!/oZrW)Zm!Bm:Y!!/oZoDenTV60e!V*4PQrVus^
V>^GqV*4GN!Bm:E!!/oZoDenTV>^GqV*4GN!Bm:2!.k3G!!/oZoDenTV>^GqV*4MP!rr<aV<S$]V*4GN
!Bm:Y!!/oZoDenTV8<6"!!/oZoDenTV>^GqV*4GN!Bm:E!!/oZoDenTV>^GqV*4#Bp&G+WUAb,nU-A2L
!C!7C!!/fXoDenUUAb,nU-A2L!C!78!71]HU-A2L!C!7W!!/fXoDenUU?V^ZU-A2L!^<=Y!rr=q54egU
5,+;BJcOm4!MVdM!!,9XrVutn54egU5,.<B!MVdM!!,9XrVutn54egW5,&#WYQ+]u54egU5,/#V!MVdM
!!,9Xp]0mc!MVdM!!,9XrVutn526,<X8W)!X7?5jX6KZbX7u\l!!')!!!'(j!!'(&!!'(j!!')!!!'(j
!!'(b!!'(j!!')!!!'(j!!'(J!.k3L!!'(j!!')!!!'(j!!0,#lMppcnc/ZjrVur!nc/Zj]`@U'!3>Yj
!3?)!!3>Yj!3>Ab!3>Yj!3?)!!3>Gdnc/^lZq^N"!_p$&p&G-pZq]fc!_p$&p&G-pZq^N"!_p$&p&G-p
Zq]T]b5_T<ZiTk#!WfZ&rW!!oZiTk#!WfZ&l2Ul[ZiTn$!rrA/:&Y+o9sarp!!32.9pu'6!8mhY9sarp
!!32.:&Y+o9sarp!!32.:$M][9sarp!!32.:&Y+o9sarp!!32.9s+Ht9sarp!!32.:&Y+o9sarp!!32.
:&P([!!5m%!VQKp!OPT#!!5m%!T!eWV*4eX!Bm:O!!/oZl2UiJV>^Jh!!/oZrVus^V=X`gV*1s]!Bm:R
!<)s!V*4eX!Bm:O!!/oZl2UiJV=X`gV*4eX!Bm:O!!/oZf)UC&UAt<XV=X`gV*4eX!Bm:Q!!<3$V*4)D
!Bm:O!!/oZrVus^V=X`gV*2Zqm/R/MV=X`gV*4eX!Bm:O!!/oZl2UiJV=X`gV*4eX!Bm:C!;6BnU-APV
!C!7M!!/fXl2UiKU@\EdU-APV!C!7M!!/fXhZ2"'!C!7M!!/fXrVus_U@\EdU-@iB!C!7M!!8lY!!<3$
5,.ZL!MVcC!.k44!!,9XoDeod55kN_5,.ZL!MVdC!!,9XoDeod55kN_5,.ZL"/7sZ!3cG(5,.ZL!MVdW
!!,9XoDeod555-L!!,9XoDeod55kN_5,-j5!3?"t!3>_l!3>;`!3>nqqu?_tqu?_toDellX8i7$oDeom
!;ultX7QAlX69N`X7QAlX8DqtX7QAlX3gp!!2fesX7QAlX8DqtX7QAnWrN.b!!'(l!!'(t!!'(l!!'(4
!:^$hX7QAlX8DqtX7QAlX69N`X7QAlX8DqtX6foX!!-u<qu?buDY=&2DQDt$!NU,3!!-u<qu?buDY=&2
DQDdtaoDICDY=&2DQE[8!NU,3!!-u<kPtXaDYF,4!,ek8!!0-<p&G,2X-is>!8dbWX)@V2!H+t9!!0-<
p&G,2X69NaX)@V2!H+t9!!0-<p&G,2X/l:%X)@V2!H+t9!!0-<p&G,2X8Dtb!!0-<p&G,2X8DquX)?ep
!Etri!!/Nlp&G+sRcj_RRT][kp](=uRf!-dRTfCb!Etqn!!/Nlp](Br!*Yih!!/Nlp&G+sRcj_PRTfCb
!Etri!!/Nlp&G+sRaqIj!29GoRTfCb!Etri!!/NlpAb6p>+4XT!Ld3c!!-8lqu?bd>4qps>+38-li7'T
>4qps>+5?h!Ld3c!!-8lkPtXP>4qps>+5?h!Ld3V!;?Ho>F56f!LI$a!!-;jkPtXM>P8$t>F56f!LI$a
!!-;jh>kk%!LI$a!!-;jqu?ba>P8$t>F4OR!LI$a!!?Gl!!)uu!LI$a!!-;jPQ6:8j8]4I>P8$t>F56f
!LI$a!!-;jkPtXM>P8$t>F56f!LI$a!!-;jrW',%!LI$a!!-;jqu?ba>P8$t>F5'anc/]W>P8$t>F56f
!LI$J!!*1Cqu?b="82]q"*<Z+!HSA>!;ulu"*=A?!HSA:!!*1CX8i9B"82]r"*4J@!!.-Cp&G*qF6ET)
Es)+9!<[E@!!.-Cp&G*qF3su>!2fetEs)+9!<[E@!!.-Cp&G0sErZ4*!!.-Cp&G*qF8Q"=Es)+9!<[DU
!:^$iEs)+9!<[E@!!.-Cp&G*qF6ET)Es)+9!<[E@!!.-CmJuhY!XZFjqu?dN\I&$2!XZFjkPtZ:\I&$2
!XZFjqu?dN\I&$2!XZFjirI4%!\V"ip](@%\h<m\!\V"ip](@%\h<1H!\V"ip](@%\h<m\!\V"ip](@%
\h9BNJcO[.!\V"ip](@%\h<m\!\V"ip](@%\h<1H!\V"ip](@%\h<m\!\V"ip](:#!P0nb!!4d`$2=K%
$+_be!!4d`$2=K%$+_be!:9af0"D;`!!3J<0)P\N0"D;I!!3A),Q%NC,H:tC!!3A),No+0,H:qJq#CI#
W[%EA![F]Lp](@"W["SF![F]Lq#CKs#-&pG!!4CF#5A0"#-&p3!!4CF#5A0"#-&pG!!4CF#5A0"#-&p!
!.k3F!!4CF#5A0"#-&pG!!4CF#5A0"#-&p3!!4CF#5A0"#-&pG!!4CF#5A0"#-&oa!:0[e,H:tC!!3A)
,Q%NC,H:tC!!3A),No+/,H:tC!!3A),Q%NC,H:t5!;HNq#,`aE!!4FD#5A0"#,`a1!!4FD#5A0"#,`aE
!!4FD#5A0"#,`a'!7(WH,c:kA!!3A&,l@WD,c:kA!!3A&,j540,c:kA!!EM(,QIiD!!4FD#5A0"#,``2
!.k43!!4FD#5A0"#,`aE!!4FD#5A0"#,`a1!!4FD#5A0"#,`aE!!4FD#5A0"#,`aG!3ZA(,c:kA!!3A&
,l@WD,c:kA!!3A&,kh<0!!4FD#5A0"#,`aE!!4FD#2fI]bPD2=b4Yf8bN8d)b5),:!!(4=!!(18!!(3B
!!(18!!:=D!;lfsb4Yf8bN8d)b4Yf8bPD2=b4Yf8bKp6@!2]_rb4Yf8bPD2=b4Yf8bPhM+!!(18!!(4=
!!(18!!(3S!:Tsgb4Yf8bPD2=b4Yf8bN8d)b4Yf8bPD2=b3f9$!!.nHq>^PeM"grNLn3Z.!M,&A!!.nH
q>^PeM"grNLn3N*aT)@4M"grNLn4AB!M,&A!!.nHjo>FQM"grNLn4AB!M,&A!!.nHQiM^<h>dSIM"grN
Ln4AB!M,&A!!.nHjo>FQM"grNLn4AB!M,&A!!%fTSZ2YjSV[%@!Jm<C!!/XHp](>NSbiER!!/XHp](>N
Sb`<eSVZ5)!HO"m!!.mrp](>8Lun[=LiNLk!!.+rq>^PPEqfV8Eep^q!Jkdl!!3.@M#%)PLiW7j!HO"Y
!!.mrp](>8M#%)PLiW7j!HO"H!.k3E!!.mrp](>8M#%)PLiW7j!HO"Y!!.mrp](>8M#%)PLiW7j!HO"3
!:'UcLiW7j!HO"m!!.mrp](>8Lun[<LiW7j!HO"m!!.mrl2^SZ!HNqk!!.gpp](>8L?8I:L3!%h!HNqk
!!.gpp](>8L>;jT!!.gpp](>8LAClNL3!%h!HNqW!!.gpp](>8LAh2O!!.gpp](>8L6DUh!94%[L3!%h
!HNqk!!.gpp](>8L?8I:L3!%h!HNqk!!.gpp](>8LA_+T!!.gpp](>8LAClNL3!%h!HNqg!:^$iL3!%h
!HNqk!!.gpi;`lq55G6[4rF%p!>n#_!!,8#qZ-Tq!>n#s!!,8#p](=35,nS`4rF%p!uO3%!;lft4rF%p
!>n#_!!,8#p](=355G6[4rF%p!>n#I!.k3J!!,8#p](=355G6[4rF%p!>n$"!9jIa4rF%p!>n#s!!,8#
p](=35.^ga!!,8#p](=355G6[4rF%p!>n#_!!,8#p](=355G6[4rE_gr;ZhNpqHjC$2OW&$,-,K!PJg%
!!*D>pqHjC$2OW&$,-,K!PJg!!6G3A$,-,K!PJg9!!*D>pqHjC$0D3g$,-,K!PJg9!!*D>pqHjC$((^E
!8[\V$,-,K!PJg9!!*D>pqHjC$0D3g$,-,K!PJg9!!*D>pqHgB!"#Y*!=?I7^B)"Sq>^O&^%f>C]a=Q9
li7%mX8'F1]a=N8!=?I7^Arr[!!$p3XT>L-q>^O#XSAmuX9Ree!X>a.q5j\!#5S<##-@U%!NZL*!!*;*
q5j_#X9SM$!=#Y#XT>L-jo>DdXSAmuX9SM$!=#Y#XT>L-eGt1$T`>)tXSAmuX9SM$!=#Y#XT>L-jo>Dd
XSAmuX9SM$!=#Y#XT>L-^]<[#!=#Y#XT>L-q>^O#XSAmuX9Ree!="teXT>L-q>^O#XSAmtDY3u0DYU75
W<W2!!=#OuWr]1(jo>DdWVELpW<W2!!=#OuWr]1(h#P_#!=#OuWr]1(q>^O#WVELpW<VJb!=#OuWr]1(
rW)ls!=#OuWr]1(P5p17irB)aWVELpW<W2!!=#OuWr]1(jo>DdWVELpW<W2!!=#OuWr]1(r;`u#!=#Ou
Wr]1(q>^O#WVELpW<W%rnGiRoQM@K]W<W2!!=#OuWrR&1!!!]-joF33!!(gLjoF2t!!(gOk5OKCh"UjL
h"^"3go(2Qh"^"3h#7<N!!(gLjoF2t!!(gLjoF33!!(gLjoF2_!.k3I!!(gLjoF33!!(gLjoF38!9aC_
h"^"3h"UjLh"^"3gq!LS!!(gLjoF33!!(gLjoF2t!!$s4joF33!!(gLjo?(j!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k30!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k30!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k30!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k30
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k30!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k30!.Y~>

%%EndBinary
grestore
np
grestore
gsave
0 0 mo
359.996 0 li
359.996 156.778 li
0 156.778 li
0 0 li
clp
7.09375 8.02588 mo
6.89111 8.24121 6.69336 8.39502 6.49951 8.48779 cv
6.30615 8.58008 6.09717 8.62646 5.87354 8.62646 cv
5.41992 8.62646 5.02393 8.43701 4.68506 8.05859 cv
4.34619 7.68018 4.17676 7.19336 4.17676 6.59912 cv
4.17676 6.00488 4.36426 5.46143 4.73926 4.96826 cv
5.11426 4.4751 5.59668 4.22803 6.18652 4.22803 cv
6.55273 4.22803 6.85498 4.34521 7.09375 4.5791 cv
7.09375 3.81055 li
7.09375 3.33936 7.08252 3.04932 7.05957 2.94141 cv
7.03711 2.8335 7.00146 2.75977 6.95264 2.7207 cv
6.77051 2.66162 li
6.69189 2.66162 6.58691 2.68604 6.45654 2.73438 cv
6.39697 2.56738 li
7.64111 2.05713 li
7.84619 2.05713 li
7.84619 6.854 li
7.84619 7.33789 7.85791 7.63281 7.88037 7.73975 cv
7.90332 7.84619 7.93994 7.92041 7.98975 7.96289 cv
8.16504 8.02588 li
8.24707 8.02588 8.35645 8.00049 8.49316 7.94922 cv
8.54297 8.11621 li
7.30371 8.62646 li
7.09375 8.62646 li
7.09375 8.02588 li
cp
7.09375 7.70898 mo
7.09375 5.5835 li
7.07568 5.375 7.021 5.18652 6.93018 5.01807 cv
6.83936 4.84912 6.71924 4.72119 6.56885 4.63525 cv
6.41895 4.54932 6.27295 4.50635 6.13037 4.50635 cv
5.86377 4.50635 5.62646 4.62549 5.41699 4.86377 cv
5.1416 5.17773 5.00391 5.63623 5.00391 6.23926 cv
5.00391 6.84814 5.13721 7.31494 5.40381 7.63916 cv
5.67041 7.96338 5.9668 8.12549 6.29395 8.12549 cv
6.56982 8.12549 6.83643 7.98682 7.09375 7.70898 cv
cp
false sop
0 0 0 1 cmyk
f
9.5 5.91699 mo
9.49707 6.53076 9.64648 7.01172 9.94922 7.36084 cv
10.2515 7.70947 10.6069 7.88428 11.0151 7.88428 cv
11.2876 7.88428 11.5239 7.81006 11.7251 7.66211 cv
11.9263 7.51416 12.0952 7.25684 12.231 6.89111 cv
12.3706 6.98193 li
12.3071 7.3999 12.1226 7.77881 11.8179 8.11768 cv
11.5127 8.45703 11.1304 8.62646 10.6714 8.62646 cv
10.1729 8.62646 9.74658 8.43262 9.3916 8.04492 cv
9.03662 7.65723 8.85889 7.13623 8.85889 6.48193 cv
8.85889 5.77295 9.04102 5.21973 9.40479 4.82324 cv
9.76904 4.42676 10.2261 4.22803 10.7754 4.22803 cv
11.2407 4.22803 11.623 4.38135 11.9219 4.68799 cv
12.2212 4.99414 12.3706 5.40381 12.3706 5.91699 cv
9.5 5.91699 li
cp
9.5 5.65723 mo
11.4229 5.65723 li
11.4077 5.3916 11.376 5.20459 11.3276 5.09619 cv
11.252 4.92725 11.1396 4.79443 10.9897 4.69775 cv
10.8403 4.60107 10.6836 4.55322 10.5205 4.55322 cv
10.2695 4.55322 10.0449 4.65039 9.84668 4.84473 cv
9.64893 5.03955 9.5332 5.31006 9.5 5.65723 cv
cp
f
12.6309 4.75732 mo
13.9077 4.24658 li
14.0801 4.24658 li
14.0801 5.20947 li
14.2949 4.84619 14.5107 4.59229 14.7271 4.44678 cv
14.9438 4.30127 15.1714 4.22803 15.4111 4.22803 cv
15.8286 4.22803 16.1772 4.39111 16.4556 4.71729 cv
16.7979 5.11621 16.9692 5.63525 16.9692 6.27539 cv
16.9692 6.99121 16.7632 7.58301 16.3511 8.05127 cv
16.0122 8.43457 15.585 8.62646 15.0703 8.62646 cv
14.8462 8.62646 14.6523 8.59473 14.4888 8.53174 cv
14.3677 8.48682 14.2314 8.39697 14.0801 8.26221 cv
14.0801 9.52637 li
14.0801 9.81201 14.0972 9.99365 14.1323 10.0713 cv
14.3145 10.2559 li
14.4009 10.3018 14.5581 10.3247 14.7861 10.3247 cv
14.7861 10.4917 li
12.603 10.4917 li
12.603 10.3247 li
12.7168 10.3247 li
12.8838 10.3276 13.0269 10.2959 13.145 10.23 cv
13.2793 10.0698 li
13.3115 9.99609 13.3276 9.80859 13.3276 9.50781 cv
13.3276 5.56445 li
13.3276 5.29834 13.3154 5.12988 13.291 5.05811 cv
13.1758 4.89648 li
13.123 4.86035 13.0513 4.84229 12.9609 4.84229 cv
12.8887 4.84229 12.7964 4.86328 12.6851 4.90576 cv
12.6309 4.75732 li
cp
14.0801 5.47754 mo
14.0801 7.03125 li
14.0801 7.36719 14.0933 7.58838 14.1206 7.69434 cv
14.1631 7.86963 14.2671 8.02441 14.4321 8.15771 cv
14.5972 8.29053 14.8052 8.35742 15.0566 8.35742 cv
15.3599 8.35742 15.605 8.23926 15.793 8.00293 cv
16.0381 7.69385 16.1606 7.25928 16.1606 6.69922 cv
16.1606 6.06348 16.0215 5.57422 15.7427 5.23193 cv
15.5488 4.99561 15.3188 4.87793 15.0522 4.87793 cv
14.9067 4.87793 14.7627 4.91406 14.6206 4.98682 cv
14.5117 5.0415 14.3311 5.20459 14.0801 5.47754 cv
cp
f
18.79 2.98486 mo
18.79 4.34912 li
19.7603 4.34912 li
19.7603 4.65527 li
18.79 4.66455 li
18.79 7.35742 li
18.79 7.62646 18.8281 7.80762 18.9053 7.90137 cv
18.9824 7.99512 19.0815 8.04199 19.2021 8.04199 cv
19.3018 8.04199 19.3984 8.01074 19.4917 7.94775 cv
19.5854 7.88525 19.6582 7.79297 19.7095 7.6709 cv
19.8862 7.6709 li
19.7803 7.96924 19.6304 8.19385 19.4365 8.34473 cv
19.2427 8.49561 19.0425 8.5708 18.8369 8.5708 cv
18.6973 8.5708 18.561 8.53223 18.4277 8.45459 cv
18.2949 8.37744 18.1963 8.2666 18.1328 8.12256 cv
18.0693 7.979 18.0376 7.75684 18.0376 7.45654 cv
18.0376 4.65527 li
17.3779 4.65527 li
17.3779 4.51074 li
17.5449 4.44482 17.7153 4.3335 17.8896 4.17627 cv
18.0645 4.01953 18.2202 3.83252 18.3579 3.61475 cv
18.4277 3.5 18.5254 3.29004 18.6504 2.98486 cv
18.79 2.98486 li
cp
f
21.3818 2.05713 mo
21.3818 5.09326 li
21.7178 4.7251 21.9844 4.48877 22.1812 4.38428 cv
22.3779 4.28027 22.5747 4.22803 22.7715 4.22803 cv
23.0078 4.22803 23.2104 4.29346 23.3804 4.42334 cv
23.5498 4.55322 23.6753 4.75781 23.7573 5.03613 cv
23.8149 5.22998 23.8433 5.58398 23.8433 6.09814 cv
23.8433 7.56885 li
23.8433 7.83008 23.8647 8.0083 23.9067 8.10449 cv
24.0596 8.27588 li
24.1318 8.31787 24.2642 8.33887 24.4565 8.33887 cv
24.4565 8.50586 li
22.4224 8.50586 li
22.4224 8.33887 li
22.5171 8.33887 li
22.71 8.33887 22.8438 8.30957 22.9189 8.25098 cv
22.9946 8.19238 23.0474 8.10596 23.0776 7.99219 cv
23.0864 7.94385 23.0908 7.80273 23.0908 7.56885 cv
23.0908 6.09717 li
23.0908 5.64307 23.0674 5.34521 23.0205 5.20264 cv
22.9736 5.06006 22.8984 4.95361 22.7954 4.88232 cv
22.6924 4.81104 22.5684 4.77588 22.4229 4.77588 cv
22.2744 4.77588 22.1196 4.81494 21.959 4.89355 cv
21.7983 4.97217 21.606 5.13135 21.3818 5.37012 cv
21.3818 7.56885 li
21.3818 7.85107 21.3975 8.02637 21.4292 8.0957 cv
21.6055 8.26904 li
21.6914 8.31543 21.8398 8.33887 22.0508 8.33887 cv
22.0508 8.50586 li
19.9976 8.50586 li
19.9976 8.33887 li
20.1812 8.33887 20.3252 8.31006 20.4307 8.25342 cv
20.5752 8.08203 li
20.6113 7.99805 20.6294 7.82666 20.6294 7.56885 cv
20.6294 3.81055 li
20.6294 3.33936 20.6177 3.04932 20.5952 2.94141 cv
20.5728 2.8335 20.5381 2.75977 20.4912 2.7207 cv
20.3037 2.66162 li
20.2402 2.66162 20.1377 2.68604 19.9956 2.73438 cv
19.9326 2.56738 li
21.1733 2.05713 li
21.3818 2.05713 li
cp
f
27.9126 2.95703 mo
29.4155 2.2334 li
29.5659 2.2334 li
29.5659 7.42041 li
29.5659 7.76563 29.5806 7.98096 29.6094 8.06592 cv
29.6382 8.15088 29.6982 8.21582 29.7896 8.26123 cv
29.8809 8.30713 30.0664 8.33252 30.3462 8.33887 cv
30.3462 8.50586 li
28.0239 8.50586 li
28.0239 8.33887 li
28.3145 8.33252 28.502 8.30762 28.5864 8.26367 cv
28.7637 8.08643 li
28.7969 8.01221 28.8135 7.79004 28.8135 7.42041 cv
28.8135 4.09814 li
28.8135 3.65088 28.7983 3.36377 28.7681 3.23682 cv
28.7466 3.14014 28.708 3.06885 28.6519 3.02393 cv
28.4497 2.95557 li
28.3374 2.95557 28.1812 3.00244 27.9805 3.09619 cv
27.9126 2.95703 li
cp
f
32.7896 4.22803 mo
32.9282 4.22803 33.0464 4.27734 33.1445 4.375 cv
33.2422 4.47266 33.2915 4.59082 33.2915 4.72949 cv
33.2915 4.86768 33.2422 4.98584 33.1445 5.0835 cv
33.0464 5.18164 32.9282 5.23047 32.7896 5.23047 cv
32.6509 5.23047 32.5327 5.18164 32.4351 5.0835 cv
32.3369 4.98584 32.2881 4.86768 32.2881 4.72949 cv
32.2881 4.59082 32.3369 4.47266 32.4351 4.375 cv
32.5327 4.27734 32.6509 4.22803 32.7896 4.22803 cv
cp
32.7783 7.62451 mo
32.9189 7.62451 33.0381 7.67383 33.1357 7.77246 cv
33.2334 7.87158 33.2822 7.98975 33.2822 8.12744 cv
33.2822 8.26514 33.2324 8.38281 33.1333 8.48047 cv
33.0347 8.57764 32.916 8.62646 32.7783 8.62646 cv
32.6401 8.62646 32.5225 8.57764 32.4248 8.48047 cv
32.3276 8.38281 32.2788 8.26514 32.2788 8.12744 cv
32.2788 7.98975 32.3276 7.87158 32.4248 7.77246 cv
32.5225 7.67383 32.6401 7.62451 32.7783 7.62451 cv
cp
f
grestore
7.09375 21.7642 mo
6.89111 21.98 6.69336 22.1338 6.49951 22.2261 cv
6.30615 22.3188 6.09717 22.3652 5.87354 22.3652 cv
5.41992 22.3652 5.02393 22.1758 4.68506 21.7974 cv
4.34619 21.4185 4.17676 20.9321 4.17676 20.3379 cv
4.17676 19.7437 4.36426 19.1997 4.73926 18.7065 cv
5.11426 18.2134 5.59668 17.9668 6.18652 17.9668 cv
6.55273 17.9668 6.85498 18.084 7.09375 18.3179 cv
7.09375 17.5493 li
7.09375 17.0781 7.08252 16.7881 7.05957 16.6802 cv
7.03711 16.5723 7.00146 16.4985 6.95264 16.4595 cv
6.77051 16.4004 li
6.69189 16.4004 6.58691 16.4248 6.45654 16.4731 cv
6.39697 16.3062 li
7.64111 15.7954 li
7.84619 15.7954 li
7.84619 20.5928 li
7.84619 21.0767 7.85791 21.3716 7.88037 21.478 cv
7.90332 21.585 7.93994 21.6592 7.98975 21.7017 cv
8.16504 21.7646 li
8.24707 21.7646 8.35645 21.7388 8.49316 21.6875 cv
8.54297 21.855 li
7.30371 22.3652 li
7.09375 22.3652 li
7.09375 21.7642 li
cp
7.09375 21.4478 mo
7.09375 19.3218 li
7.07568 19.1138 7.021 18.9253 6.93018 18.7563 cv
6.83936 18.5874 6.71924 18.46 6.56885 18.374 cv
6.41895 18.2881 6.27295 18.2451 6.13037 18.2451 cv
5.86377 18.2451 5.62646 18.3643 5.41699 18.6025 cv
5.1416 18.9165 5.00391 19.3745 5.00391 19.978 cv
5.00391 20.5869 5.13721 21.0537 5.40381 21.3774 cv
5.67041 21.7017 5.9668 21.8638 6.29395 21.8638 cv
6.56982 21.8638 6.83643 21.7251 7.09375 21.4478 cv
cp
false sop
0 0 0 1 cmyk
f
9.5 19.6558 mo
9.49707 20.269 9.64648 20.7505 9.94922 21.0991 cv
10.2515 21.4482 10.6069 21.6226 11.0151 21.6226 cv
11.2876 21.6226 11.5239 21.5488 11.7251 21.4009 cv
11.9263 21.2524 12.0952 20.9956 12.231 20.6299 cv
12.3706 20.7207 li
12.3071 21.1387 12.1226 21.5171 11.8179 21.8564 cv
11.5127 22.1953 11.1304 22.3652 10.6714 22.3652 cv
10.1729 22.3652 9.74658 22.1714 9.3916 21.7837 cv
9.03662 21.396 8.85889 20.875 8.85889 20.2202 cv
8.85889 19.5112 9.04102 18.9585 9.40479 18.562 cv
9.76904 18.165 10.2261 17.9668 10.7754 17.9668 cv
11.2407 17.9668 11.623 18.1201 11.9219 18.4263 cv
12.2212 18.7329 12.3706 19.1426 12.3706 19.6558 cv
9.5 19.6558 li
cp
9.5 19.396 mo
11.4229 19.396 li
11.4077 19.1304 11.376 18.9434 11.3276 18.8345 cv
11.252 18.6655 11.1396 18.5332 10.9897 18.4365 cv
10.8403 18.3398 10.6836 18.2915 10.5205 18.2915 cv
10.2695 18.2915 10.0449 18.3892 9.84668 18.5835 cv
9.64893 18.7778 9.5332 19.0488 9.5 19.396 cv
cp
f
12.6309 18.4956 mo
13.9077 17.9854 li
14.0801 17.9854 li
14.0801 18.9478 li
14.2949 18.585 14.5107 18.3306 14.7271 18.1851 cv
14.9438 18.0396 15.1714 17.9668 15.4111 17.9668 cv
15.8286 17.9668 16.1772 18.1299 16.4556 18.4561 cv
16.7979 18.8545 16.9692 19.374 16.9692 20.0142 cv
16.9692 20.73 16.7632 21.3218 16.3511 21.7896 cv
16.0122 22.1733 15.585 22.3652 15.0703 22.3652 cv
14.8462 22.3652 14.6523 22.3335 14.4888 22.2705 cv
14.3677 22.2256 14.2314 22.1357 14.0801 22.0005 cv
14.0801 23.2651 li
14.0801 23.5508 14.0972 23.7324 14.1323 23.8101 cv
14.3145 23.9946 li
14.4009 24.0405 14.5581 24.063 14.7861 24.063 cv
14.7861 24.23 li
12.603 24.23 li
12.603 24.063 li
12.7168 24.063 li
12.8838 24.0659 13.0269 24.0347 13.145 23.9683 cv
13.2793 23.8081 li
13.3115 23.7344 13.3276 23.5474 13.3276 23.2466 cv
13.3276 19.3032 li
13.3276 19.0371 13.3154 18.8682 13.291 18.7964 cv
13.1758 18.6348 li
13.123 18.5986 13.0513 18.5806 12.9609 18.5806 cv
12.8887 18.5806 12.7964 18.6021 12.6851 18.644 cv
12.6309 18.4956 li
cp
14.0801 19.2163 mo
14.0801 20.7695 li
14.0801 21.106 14.0933 21.3267 14.1206 21.4326 cv
14.1631 21.6084 14.2671 21.7627 14.4321 21.896 cv
14.5972 22.0293 14.8052 22.0962 15.0566 22.0962 cv
15.3599 22.0962 15.605 21.978 15.793 21.7417 cv
16.0381 21.4326 16.1606 20.998 16.1606 20.438 cv
16.1606 19.8018 16.0215 19.313 15.7427 18.9707 cv
15.5488 18.7344 15.3188 18.6162 15.0522 18.6162 cv
14.9067 18.6162 14.7627 18.6528 14.6206 18.7256 cv
14.5117 18.7798 14.3311 18.9434 14.0801 19.2163 cv
cp
f
18.79 16.7236 mo
18.79 18.0874 li
19.7603 18.0874 li
19.7603 18.3936 li
18.79 18.4028 li
18.79 21.0957 li
18.79 21.3647 18.8281 21.5464 18.9053 21.6401 cv
18.9824 21.7339 19.0815 21.7808 19.2021 21.7808 cv
19.3018 21.7808 19.3984 21.749 19.4917 21.6865 cv
19.5854 21.624 19.6582 21.5317 19.7095 21.4092 cv
19.8862 21.4092 li
19.7803 21.7075 19.6304 21.9326 19.4365 22.083 cv
19.2427 22.2339 19.0425 22.3096 18.8369 22.3096 cv
18.6973 22.3096 18.561 22.271 18.4277 22.1934 cv
18.2949 22.1162 18.1963 22.0054 18.1328 21.8613 cv
18.0693 21.7173 18.0376 21.4951 18.0376 21.1953 cv
18.0376 18.3936 li
17.3779 18.3936 li
17.3779 18.2495 li
17.5449 18.1836 17.7153 18.0723 17.8896 17.915 cv
18.0645 17.7583 18.2202 17.5708 18.3579 17.3535 cv
18.4277 17.2388 18.5254 17.0288 18.6504 16.7236 cv
18.79 16.7236 li
cp
f
21.3818 15.7954 mo
21.3818 18.832 li
21.7178 18.4634 21.9844 18.2275 22.1812 18.123 cv
22.3779 18.019 22.5747 17.9668 22.7715 17.9668 cv
23.0078 17.9668 23.2104 18.0317 23.3804 18.1621 cv
23.5498 18.292 23.6753 18.4966 23.7573 18.7749 cv
23.8149 18.9683 23.8433 19.3223 23.8433 19.8364 cv
23.8433 21.3071 li
23.8433 21.5684 23.8647 21.7471 23.9067 21.8433 cv
24.0596 22.0142 li
24.1318 22.0562 24.2642 22.0776 24.4565 22.0776 cv
24.4565 22.2446 li
22.4224 22.2446 li
22.4224 22.0776 li
22.5171 22.0776 li
22.71 22.0776 22.8438 22.0483 22.9189 21.9897 cv
22.9946 21.9312 23.0474 21.8447 23.0776 21.7305 cv
23.0864 21.6826 23.0908 21.5415 23.0908 21.3071 cv
23.0908 19.8359 li
23.0908 19.3818 23.0674 19.0835 23.0205 18.9414 cv
22.9736 18.7988 22.8984 18.6919 22.7954 18.6211 cv
22.6924 18.5498 22.5684 18.5142 22.4229 18.5142 cv
22.2744 18.5142 22.1196 18.5537 21.959 18.6323 cv
21.7983 18.7109 21.606 18.8696 21.3818 19.1089 cv
21.3818 21.3071 li
21.3818 21.5894 21.3975 21.7651 21.4292 21.8345 cv
21.6055 22.0078 li
21.6914 22.0542 21.8398 22.0776 22.0508 22.0776 cv
22.0508 22.2446 li
19.9976 22.2446 li
19.9976 22.0776 li
20.1812 22.0776 20.3252 22.0488 20.4307 21.9917 cv
20.5752 21.8208 li
20.6113 21.7368 20.6294 21.5654 20.6294 21.3071 cv
20.6294 17.5493 li
20.6294 17.0781 20.6177 16.7881 20.5952 16.6802 cv
20.5728 16.5723 20.5381 16.4985 20.4912 16.4595 cv
20.3037 16.4004 li
20.2402 16.4004 20.1377 16.4248 19.9956 16.4731 cv
19.9326 16.3062 li
21.1733 15.7954 li
21.3818 15.7954 li
cp
f
31.0894 21.0503 mo
30.6587 22.2446 li
27.0298 22.2446 li
27.0298 22.0737 li
28.0977 21.1021 28.8491 20.3086 29.2847 19.6929 cv
29.7197 19.0771 29.9375 18.5142 29.9375 18.0034 cv
29.9375 17.6143 29.8184 17.2944 29.5791 17.0439 cv
29.3403 16.793 29.0542 16.668 28.7217 16.668 cv
28.4194 16.668 28.1479 16.7554 27.9072 16.9297 cv
27.667 17.1045 27.4893 17.3604 27.374 17.6978 cv
27.2065 17.6978 li
27.2822 17.1421 27.4766 16.7153 27.79 16.418 cv
28.1035 16.1206 28.4951 15.9722 28.9644 15.9722 cv
29.4644 15.9722 29.8813 16.1323 30.2163 16.4526 cv
30.5508 16.7729 30.7183 17.1509 30.7183 17.5864 cv
30.7183 17.8979 30.6455 18.209 30.5 18.52 cv
30.2764 19.0093 29.9131 19.5273 29.4106 20.0742 cv
28.6577 20.895 28.1875 21.3862 28.0005 21.5483 cv
29.5991 21.5483 li
29.9243 21.5483 30.1523 21.5366 30.2832 21.5122 cv
30.4141 21.4883 30.5322 21.439 30.6377 21.3652 cv
30.7432 21.291 30.835 21.186 30.9131 21.0503 cv
31.0894 21.0503 li
cp
f
32.7896 17.9668 mo
32.9282 17.9668 33.0464 18.0156 33.1445 18.1138 cv
33.2422 18.2114 33.2915 18.3296 33.2915 18.4678 cv
33.2915 18.6064 33.2422 18.7246 33.1445 18.8223 cv
33.0464 18.9199 32.9282 18.9692 32.7896 18.9692 cv
32.6509 18.9692 32.5327 18.9199 32.4351 18.8223 cv
32.3369 18.7246 32.2881 18.6064 32.2881 18.4678 cv
32.2881 18.3296 32.3369 18.2114 32.4351 18.1138 cv
32.5327 18.0156 32.6509 17.9668 32.7896 17.9668 cv
cp
32.7783 21.3628 mo
32.9189 21.3628 33.0381 21.4126 33.1357 21.5112 cv
33.2334 21.6099 33.2822 21.7285 33.2822 21.8662 cv
33.2822 22.0039 33.2324 22.1216 33.1333 22.2192 cv
33.0347 22.3164 32.916 22.3652 32.7783 22.3652 cv
32.6401 22.3652 32.5225 22.3164 32.4248 22.2192 cv
32.3276 22.1216 32.2788 22.0039 32.2788 21.8662 cv
32.2788 21.7285 32.3276 21.6099 32.4248 21.5112 cv
32.5225 21.4126 32.6401 21.3628 32.7783 21.3628 cv
cp
f
7.09375 57.8872 mo
6.89111 58.1025 6.69336 58.2563 6.49951 58.3491 cv
6.30615 58.4414 6.09717 58.4878 5.87354 58.4878 cv
5.41992 58.4878 5.02393 58.2983 4.68506 57.9199 cv
4.34619 57.5415 4.17676 57.0547 4.17676 56.4604 cv
4.17676 55.8662 4.36426 55.3228 4.73926 54.8296 cv
5.11426 54.3364 5.59668 54.0894 6.18652 54.0894 cv
6.55273 54.0894 6.85498 54.2065 7.09375 54.4404 cv
7.09375 53.6719 li
7.09375 53.2007 7.08252 52.9106 7.05957 52.8027 cv
7.03711 52.6948 7.00146 52.6211 6.95264 52.582 cv
6.77051 52.5229 li
6.69189 52.5229 6.58691 52.5474 6.45654 52.5957 cv
6.39697 52.4287 li
7.64111 51.9185 li
7.84619 51.9185 li
7.84619 56.7153 li
7.84619 57.1992 7.85791 57.4941 7.88037 57.6011 cv
7.90332 57.7075 7.93994 57.7817 7.98975 57.8242 cv
8.16504 57.8872 li
8.24707 57.8872 8.35645 57.8618 8.49316 57.8105 cv
8.54297 57.9775 li
7.30371 58.4878 li
7.09375 58.4878 li
7.09375 57.8872 li
cp
7.09375 57.5703 mo
7.09375 55.4448 li
7.07568 55.2363 7.021 55.0479 6.93018 54.8794 cv
6.83936 54.71 6.71924 54.5825 6.56885 54.4966 cv
6.41895 54.4106 6.27295 54.3677 6.13037 54.3677 cv
5.86377 54.3677 5.62646 54.4868 5.41699 54.7251 cv
5.1416 55.0391 5.00391 55.4976 5.00391 56.1006 cv
5.00391 56.7095 5.13721 57.1763 5.40381 57.5005 cv
5.67041 57.8247 5.9668 57.9868 6.29395 57.9868 cv
6.56982 57.9868 6.83643 57.8481 7.09375 57.5703 cv
cp
f
9.5 55.7783 mo
9.49707 56.3921 9.64648 56.873 9.94922 57.2222 cv
10.2515 57.5708 10.6069 57.7456 11.0151 57.7456 cv
11.2876 57.7456 11.5239 57.6714 11.7251 57.5234 cv
11.9263 57.3755 12.0952 57.1182 12.231 56.7524 cv
12.3706 56.8433 li
12.3071 57.2612 12.1226 57.6396 11.8179 57.979 cv
11.5127 58.3184 11.1304 58.4878 10.6714 58.4878 cv
10.1729 58.4878 9.74658 58.2939 9.3916 57.9063 cv
9.03662 57.5186 8.85889 56.9976 8.85889 56.3433 cv
8.85889 55.6343 9.04102 55.0811 9.40479 54.6846 cv
9.76904 54.2876 10.2261 54.0894 10.7754 54.0894 cv
11.2407 54.0894 11.623 54.2427 11.9219 54.5493 cv
12.2212 54.8555 12.3706 55.2651 12.3706 55.7783 cv
9.5 55.7783 li
cp
9.5 55.5186 mo
11.4229 55.5186 li
11.4077 55.2529 11.376 55.0659 11.3276 54.9575 cv
11.252 54.7886 11.1396 54.6558 10.9897 54.5591 cv
10.8403 54.4624 10.6836 54.4146 10.5205 54.4146 cv
10.2695 54.4146 10.0449 54.5117 9.84668 54.7061 cv
9.64893 54.9009 9.5332 55.1714 9.5 55.5186 cv
cp
f
12.6309 54.6187 mo
13.9077 54.1079 li
14.0801 54.1079 li
14.0801 55.0708 li
14.2949 54.7075 14.5107 54.4536 14.7271 54.3081 cv
14.9438 54.1626 15.1714 54.0894 15.4111 54.0894 cv
15.8286 54.0894 16.1772 54.2524 16.4556 54.5786 cv
16.7979 54.9771 16.9692 55.4966 16.9692 56.1367 cv
16.9692 56.8525 16.7632 57.4443 16.3511 57.9126 cv
16.0122 58.2959 15.585 58.4878 15.0703 58.4878 cv
14.8462 58.4878 14.6523 58.4561 14.4888 58.3931 cv
14.3677 58.3481 14.2314 58.2583 14.0801 58.123 cv
14.0801 59.3877 li
14.0801 59.6733 14.0972 59.855 14.1323 59.9326 cv
14.3145 60.1172 li
14.4009 60.1631 14.5581 60.186 14.7861 60.186 cv
14.7861 60.353 li
12.603 60.353 li
12.603 60.186 li
12.7168 60.186 li
12.8838 60.189 13.0269 60.1572 13.145 60.0913 cv
13.2793 59.9312 li
13.3115 59.8574 13.3276 59.6699 13.3276 59.3691 cv
13.3276 55.4258 li
13.3276 55.1597 13.3154 54.9907 13.291 54.9194 cv
13.1758 54.7578 li
13.123 54.7217 13.0513 54.7036 12.9609 54.7036 cv
12.8887 54.7036 12.7964 54.7246 12.6851 54.7671 cv
12.6309 54.6187 li
cp
14.0801 55.3389 mo
14.0801 56.8921 li
14.0801 57.2285 14.0933 57.4497 14.1206 57.5557 cv
14.1631 57.731 14.2671 57.8857 14.4321 58.019 cv
14.5972 58.1519 14.8052 58.2188 15.0566 58.2188 cv
15.3599 58.2188 15.605 58.1006 15.793 57.8643 cv
16.0381 57.5552 16.1606 57.1206 16.1606 56.5605 cv
16.1606 55.9248 16.0215 55.4355 15.7427 55.0933 cv
15.5488 54.8569 15.3188 54.7393 15.0522 54.7393 cv
14.9067 54.7393 14.7627 54.7754 14.6206 54.8481 cv
14.5117 54.9028 14.3311 55.0659 14.0801 55.3389 cv
cp
f
18.79 52.8462 mo
18.79 54.21 li
19.7603 54.21 li
19.7603 54.5161 li
18.79 54.5259 li
18.79 57.2188 li
18.79 57.4878 18.8281 57.6689 18.9053 57.7627 cv
18.9824 57.8564 19.0815 57.9033 19.2021 57.9033 cv
19.3018 57.9033 19.3984 57.8716 19.4917 57.8091 cv
19.5854 57.7466 19.6582 57.6543 19.7095 57.5317 cv
19.8862 57.5317 li
19.7803 57.8306 19.6304 58.0552 19.4365 58.2061 cv
19.2427 58.3569 19.0425 58.4321 18.8369 58.4321 cv
18.6973 58.4321 18.561 58.3936 18.4277 58.3159 cv
18.2949 58.2388 18.1963 58.1279 18.1328 57.9839 cv
18.0693 57.8398 18.0376 57.6182 18.0376 57.3179 cv
18.0376 54.5161 li
17.3779 54.5161 li
17.3779 54.3721 li
17.5449 54.3062 17.7153 54.1948 17.8896 54.0376 cv
18.0645 53.8809 18.2202 53.6938 18.3579 53.4761 cv
18.4277 53.3613 18.5254 53.1514 18.6504 52.8462 cv
18.79 52.8462 li
cp
f
21.3818 51.9185 mo
21.3818 54.9546 li
21.7178 54.5864 21.9844 54.3501 22.1812 54.2456 cv
22.3779 54.1416 22.5747 54.0894 22.7715 54.0894 cv
23.0078 54.0894 23.2104 54.1548 23.3804 54.2847 cv
23.5498 54.4146 23.6753 54.6191 23.7573 54.8975 cv
23.8149 55.0913 23.8433 55.4448 23.8433 55.9595 cv
23.8433 57.4302 li
23.8433 57.6914 23.8647 57.8696 23.9067 57.9658 cv
24.0596 58.1372 li
24.1318 58.1792 24.2642 58.2002 24.4565 58.2002 cv
24.4565 58.3672 li
22.4224 58.3672 li
22.4224 58.2002 li
22.5171 58.2002 li
22.71 58.2002 22.8438 58.1709 22.9189 58.1123 cv
22.9946 58.0537 23.0474 57.9673 23.0776 57.853 cv
23.0864 57.8052 23.0908 57.6641 23.0908 57.4302 cv
23.0908 55.9585 li
23.0908 55.5044 23.0674 55.2061 23.0205 55.064 cv
22.9736 54.9214 22.8984 54.8149 22.7954 54.7437 cv
22.6924 54.6724 22.5684 54.6372 22.4229 54.6372 cv
22.2744 54.6372 22.1196 54.6763 21.959 54.7549 cv
21.7983 54.8335 21.606 54.9922 21.3818 55.2314 cv
21.3818 57.4302 li
21.3818 57.7124 21.3975 57.8877 21.4292 57.957 cv
21.6055 58.1304 li
21.6914 58.1768 21.8398 58.2002 22.0508 58.2002 cv
22.0508 58.3672 li
19.9976 58.3672 li
19.9976 58.2002 li
20.1812 58.2002 20.3252 58.1714 20.4307 58.1147 cv
20.5752 57.9434 li
20.6113 57.8594 20.6294 57.688 20.6294 57.4302 cv
20.6294 53.6719 li
20.6294 53.2007 20.6177 52.9106 20.5952 52.8027 cv
20.5728 52.6948 20.5381 52.6211 20.4912 52.582 cv
20.3037 52.5229 li
20.2402 52.5229 20.1377 52.5474 19.9956 52.5957 cv
19.9326 52.4287 li
21.1733 51.9185 li
21.3818 51.9185 li
cp
f
27.2993 53.3936 mo
27.4751 52.979 27.6968 52.6587 27.9648 52.4331 cv
28.2329 52.2075 28.5669 52.0947 28.9668 52.0947 cv
29.4604 52.0947 29.8389 52.2544 30.1021 52.5747 cv
30.3022 52.813 30.4023 53.0679 30.4023 53.3394 cv
30.4023 53.7861 30.1206 54.248 29.5566 54.7251 cv
29.936 54.873 30.2231 55.084 30.4175 55.3589 cv
30.6118 55.6333 30.7085 55.9565 30.7085 56.3276 cv
30.7085 56.8589 30.5391 57.3193 30.1997 57.7085 cv
29.7578 58.2158 29.1172 58.4692 28.2783 58.4692 cv
27.8638 58.4692 27.5811 58.4175 27.4312 58.3149 cv
27.2813 58.2119 27.2065 58.1016 27.2065 57.9839 cv
27.3135 57.7524 li
27.3848 57.686 27.4702 57.6528 27.5703 57.6528 cv
27.8022 57.6895 li
27.854 57.7046 27.9707 57.7607 28.1523 57.8569 cv
28.3345 57.9531 28.46 58.0107 28.5298 58.0288 cv
28.6421 58.0625 28.7617 58.0796 28.8892 58.0796 cv
29.1987 58.0796 29.4678 57.96 29.6963 57.7212 cv
29.9253 57.4824 30.04 57.2002 30.04 56.8735 cv
30.04 56.6348 29.9868 56.4023 29.8804 56.1753 cv
29.8018 56.0063 29.7153 55.8779 29.6211 55.7905 cv
29.4907 55.6694 29.312 55.5601 29.0845 55.4614 cv
28.8569 55.3633 28.6245 55.3145 28.3882 55.3145 cv
28.2427 55.3145 li
28.2427 55.1753 li
28.4814 55.145 28.7212 55.0591 28.9619 54.917 cv
29.2026 54.7749 29.3774 54.6045 29.4863 54.4053 cv
29.5952 54.2061 29.6499 53.9868 29.6499 53.7485 cv
29.6499 53.4375 29.5518 53.186 29.3564 52.9946 cv
29.1611 52.8027 28.918 52.707 28.627 52.707 cv
28.1572 52.707 27.7646 52.96 27.4492 53.4663 cv
27.2993 53.3936 li
cp
f
32.7896 54.0894 mo
32.9282 54.0894 33.0464 54.1382 33.1445 54.2363 cv
33.2422 54.334 33.2915 54.4521 33.2915 54.5903 cv
33.2915 54.729 33.2422 54.8472 33.1445 54.9448 cv
33.0464 55.0425 32.9282 55.0918 32.7896 55.0918 cv
32.6509 55.0918 32.5327 55.0425 32.4351 54.9448 cv
32.3369 54.8472 32.2881 54.729 32.2881 54.5903 cv
32.2881 54.4521 32.3369 54.334 32.4351 54.2363 cv
32.5327 54.1382 32.6509 54.0894 32.7896 54.0894 cv
cp
32.7783 57.4858 mo
32.9189 57.4858 33.0381 57.5352 33.1357 57.6338 cv
33.2334 57.7329 33.2822 57.8511 33.2822 57.9888 cv
33.2822 58.1265 33.2324 58.2441 33.1333 58.3418 cv
33.0347 58.439 32.916 58.4878 32.7783 58.4878 cv
32.6401 58.4878 32.5225 58.439 32.4248 58.3418 cv
32.3276 58.2441 32.2788 58.1265 32.2788 57.9888 cv
32.2788 57.8511 32.3276 57.7329 32.4248 57.6338 cv
32.5225 57.5352 32.6401 57.4858 32.7783 57.4858 cv
cp
f
7.09375 152.708 mo
6.89111 152.923 6.69336 153.077 6.49951 153.17 cv
6.30615 153.262 6.09717 153.309 5.87354 153.309 cv
5.41992 153.309 5.02393 153.12 4.68506 152.741 cv
4.34619 152.362 4.17676 151.875 4.17676 151.282 cv
4.17676 150.687 4.36426 150.143 4.73926 149.651 cv
5.11426 149.157 5.59668 148.911 6.18652 148.911 cv
6.55273 148.911 6.85498 149.028 7.09375 149.261 cv
7.09375 148.493 li
7.09375 148.022 7.08252 147.732 7.05957 147.624 cv
7.03711 147.516 7.00146 147.442 6.95264 147.403 cv
6.77051 147.344 li
6.69189 147.344 6.58691 147.368 6.45654 147.417 cv
6.39697 147.25 li
7.64111 146.739 li
7.84619 146.739 li
7.84619 151.536 li
7.84619 152.02 7.85791 152.315 7.88037 152.422 cv
7.90332 152.528 7.93994 152.603 7.98975 152.645 cv
8.16504 152.708 li
8.24707 152.708 8.35645 152.682 8.49316 152.631 cv
8.54297 152.798 li
7.30371 153.309 li
7.09375 153.309 li
7.09375 152.708 li
cp
7.09375 152.391 mo
7.09375 150.266 li
7.07568 150.057 7.021 149.869 6.93018 149.7 cv
6.83936 149.531 6.71924 149.404 6.56885 149.318 cv
6.41895 149.232 6.27295 149.189 6.13037 149.189 cv
5.86377 149.189 5.62646 149.308 5.41699 149.546 cv
5.1416 149.86 5.00391 150.319 5.00391 150.921 cv
5.00391 151.53 5.13721 151.997 5.40381 152.321 cv
5.67041 152.645 5.9668 152.807 6.29395 152.807 cv
6.56982 152.807 6.83643 152.668 7.09375 152.391 cv
cp
f
9.5 150.599 mo
9.49707 151.213 9.64648 151.694 9.94922 152.043 cv
10.2515 152.392 10.6069 152.567 11.0151 152.567 cv
11.2876 152.567 11.5239 152.493 11.7251 152.344 cv
11.9263 152.196 12.0952 151.939 12.231 151.573 cv
12.3706 151.665 li
12.3071 152.083 12.1226 152.46 11.8179 152.799 cv
11.5127 153.139 11.1304 153.309 10.6714 153.309 cv
10.1729 153.309 9.74658 153.115 9.3916 152.727 cv
9.03662 152.339 8.85889 151.819 8.85889 151.165 cv
8.85889 150.456 9.04102 149.902 9.40479 149.505 cv
9.76904 149.109 10.2261 148.911 10.7754 148.911 cv
11.2407 148.911 11.623 149.063 11.9219 149.37 cv
12.2212 149.676 12.3706 150.086 12.3706 150.599 cv
9.5 150.599 li
cp
9.5 150.339 mo
11.4229 150.339 li
11.4077 150.074 11.376 149.887 11.3276 149.778 cv
11.252 149.61 11.1396 149.477 10.9897 149.379 cv
10.8403 149.284 10.6836 149.235 10.5205 149.235 cv
10.2695 149.235 10.0449 149.333 9.84668 149.527 cv
9.64893 149.721 9.5332 149.993 9.5 150.339 cv
cp
f
12.6309 149.44 mo
13.9077 148.929 li
14.0801 148.929 li
14.0801 149.891 li
14.2949 149.528 14.5107 149.274 14.7271 149.129 cv
14.9438 148.983 15.1714 148.911 15.4111 148.911 cv
15.8286 148.911 16.1772 149.074 16.4556 149.399 cv
16.7979 149.798 16.9692 150.317 16.9692 150.958 cv
16.9692 151.673 16.7632 152.265 16.3511 152.733 cv
16.0122 153.117 15.585 153.309 15.0703 153.309 cv
14.8462 153.309 14.6523 153.277 14.4888 153.213 cv
14.3677 153.168 14.2314 153.079 14.0801 152.944 cv
14.0801 154.208 li
14.0801 154.495 14.0972 154.676 14.1323 154.753 cv
14.3145 154.938 li
14.4009 154.984 14.5581 155.006 14.7861 155.006 cv
14.7861 155.174 li
12.603 155.174 li
12.603 155.006 li
12.7168 155.006 li
12.8838 155.01 13.0269 154.978 13.145 154.913 cv
13.2793 154.752 li
13.3115 154.678 13.3276 154.491 13.3276 154.19 cv
13.3276 150.247 li
13.3276 149.981 13.3154 149.812 13.291 149.741 cv
13.1758 149.579 li
13.123 149.542 13.0513 149.524 12.9609 149.524 cv
12.8887 149.524 12.7964 149.545 12.6851 149.588 cv
12.6309 149.44 li
cp
14.0801 150.16 mo
14.0801 151.713 li
14.0801 152.049 14.0933 152.27 14.1206 152.376 cv
14.1631 152.552 14.2671 152.707 14.4321 152.84 cv
14.5972 152.973 14.8052 153.04 15.0566 153.04 cv
15.3599 153.04 15.605 152.921 15.793 152.685 cv
16.0381 152.376 16.1606 151.942 16.1606 151.381 cv
16.1606 150.746 16.0215 150.256 15.7427 149.915 cv
15.5488 149.678 15.3188 149.56 15.0522 149.56 cv
14.9067 149.56 14.7627 149.596 14.6206 149.668 cv
14.5117 149.723 14.3311 149.887 14.0801 150.16 cv
cp
f
18.79 147.667 mo
18.79 149.032 li
19.7603 149.032 li
19.7603 149.337 li
18.79 149.346 li
18.79 152.04 li
18.79 152.309 18.8281 152.49 18.9053 152.583 cv
18.9824 152.677 19.0815 152.724 19.2021 152.724 cv
19.3018 152.724 19.3984 152.693 19.4917 152.629 cv
19.5854 152.567 19.6582 152.475 19.7095 152.353 cv
19.8862 152.353 li
19.7803 152.651 19.6304 152.875 19.4365 153.027 cv
19.2427 153.178 19.0425 153.252 18.8369 153.252 cv
18.6973 153.252 18.561 153.214 18.4277 153.137 cv
18.2949 153.059 18.1963 152.949 18.1328 152.805 cv
18.0693 152.661 18.0376 152.439 18.0376 152.139 cv
18.0376 149.337 li
17.3779 149.337 li
17.3779 149.193 li
17.5449 149.127 17.7153 149.016 17.8896 148.859 cv
18.0645 148.702 18.2202 148.514 18.3579 148.297 cv
18.4277 148.182 18.5254 147.972 18.6504 147.667 cv
18.79 147.667 li
cp
f
21.3818 146.739 mo
21.3818 149.776 li
21.7178 149.407 21.9844 149.17 22.1812 149.067 cv
22.3779 148.962 22.5747 148.911 22.7715 148.911 cv
23.0078 148.911 23.2104 148.975 23.3804 149.106 cv
23.5498 149.236 23.6753 149.44 23.7573 149.718 cv
23.8149 149.913 23.8433 150.266 23.8433 150.78 cv
23.8433 152.25 li
23.8433 152.512 23.8647 152.691 23.9067 152.787 cv
24.0596 152.958 li
24.1318 153 24.2642 153.021 24.4565 153.021 cv
24.4565 153.188 li
22.4224 153.188 li
22.4224 153.021 li
22.5171 153.021 li
22.71 153.021 22.8438 152.992 22.9189 152.933 cv
22.9946 152.875 23.0474 152.788 23.0776 152.674 cv
23.0864 152.625 23.0908 152.485 23.0908 152.25 cv
23.0908 150.78 li
23.0908 150.325 23.0674 150.027 23.0205 149.885 cv
22.9736 149.743 22.8984 149.635 22.7954 149.565 cv
22.6924 149.494 22.5684 149.458 22.4229 149.458 cv
22.2744 149.458 22.1196 149.497 21.959 149.576 cv
21.7983 149.655 21.606 149.813 21.3818 150.052 cv
21.3818 152.25 li
21.3818 152.534 21.3975 152.708 21.4292 152.778 cv
21.6055 152.952 li
21.6914 152.998 21.8398 153.021 22.0508 153.021 cv
22.0508 153.188 li
19.9976 153.188 li
19.9976 153.021 li
20.1812 153.021 20.3252 152.993 20.4307 152.936 cv
20.5752 152.764 li
20.6113 152.68 20.6294 152.509 20.6294 152.25 cv
20.6294 148.493 li
20.6294 148.022 20.6177 147.732 20.5952 147.624 cv
20.5728 147.516 20.5381 147.442 20.4912 147.403 cv
20.3037 147.344 li
20.2402 147.344 20.1377 147.368 19.9956 147.417 cv
19.9326 147.25 li
21.1733 146.739 li
21.3818 146.739 li
cp
f
31.1548 150.924 mo
31.1548 151.564 li
30.3276 151.564 li
30.3276 153.188 li
29.5752 153.188 li
29.5752 151.564 li
26.9834 151.564 li
26.9834 150.987 li
29.8262 146.916 li
30.3276 146.916 li
30.3276 150.924 li
31.1548 150.924 li
cp
29.5752 150.924 mo
29.5752 147.872 li
27.4263 150.924 li
29.5752 150.924 li
cp
f
32.7896 148.911 mo
32.9282 148.911 33.0464 148.959 33.1445 149.057 cv
33.2422 149.155 33.2915 149.273 33.2915 149.412 cv
33.2915 149.549 33.2422 149.668 33.1445 149.766 cv
33.0464 149.864 32.9282 149.913 32.7896 149.913 cv
32.6509 149.913 32.5327 149.864 32.4351 149.766 cv
32.3369 149.668 32.2881 149.549 32.2881 149.412 cv
32.2881 149.273 32.3369 149.155 32.4351 149.057 cv
32.5327 148.959 32.6509 148.911 32.7896 148.911 cv
cp
32.7783 152.307 mo
32.9189 152.307 33.0381 152.356 33.1357 152.455 cv
33.2334 152.553 33.2822 152.672 33.2822 152.809 cv
33.2822 152.948 33.2324 153.065 33.1333 153.163 cv
33.0347 153.26 32.916 153.309 32.7783 153.309 cv
32.6401 153.309 32.5225 153.26 32.4248 153.163 cv
32.3276 153.065 32.2788 152.948 32.2788 152.809 cv
32.2788 152.672 32.3276 152.553 32.4248 152.455 cv
32.5225 152.356 32.6401 152.307 32.7783 152.307 cv
cp
f
grestore
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (010x018.eps)%%CreationDate: 27/05/15 11:05 AM%%Canvassize: 16383%AI9_DataStream%Gb",kfl(Y/SaR)KKW#9E&0Ou2-Td/@a7G\OZ/a("4NC$@&t_.l@ljkElFp*C<>Qr&>G?5%)F66&;0Ce'?2u.?)kIV%nBAXemok)*%fmC)M&te4QkNFn6p[VM&oiq%W>Kc?'.6j'"$Dm'VnomRZ_-k,#NlTq;Gg[TALL"6THsng<;nMQ'@Y#YEkR3+i$0%D$'91#R:I;d+%0GGbHbEOY%mdd4NHF8-gYLV(_@_#Y]Ff4-CQ/!n#C[rb650+Ouj_qbDMRgo7QT);`4j+Uuq/!TfQ`H<XHia(T0Q]5E:afYP529H)%X/#*%1.f4jT5e3*e;.JM>Paq>]hl9k5$[4$M5U0MKfek87N]Rp\G'5'HC[HW8.m17VH47nj8tK_q1&?5S,)A:X^99&$g#gY!$>aZ%>e/$XDop<-jBjGTElX@ep1ug?="3:sGtplg5h$SrU2mHcHep'*,j-Wk,7fA\G;MTk`.a"=Wlr.YaFAQd4eL&+jf;'BWG6j^n1Q'0%_+5g_@'Aq=k!Lk1h'j*(7(P)N.`kYs;SL9i8RUQHZc1]W*s:MRoZA.ikGm/03_AsanU\].e=@.;+A&f-HTtkKg7n\M<V!!Rnh)<O%81YI!#6Wp5<F@SDE7=i\(t4_=A/$c:T_-AhVVY-F"Q/5bD:V9nX]5b\L!jYO4VEXX7%C:nY,!n5LYN40_F;8,OSqr^s-]Z.de.q#%`(Ni\<I.+)-P5dLCp<uKDb*&BjU+Cc_,.uhNO]]jQl2&)8srpI2sQD+U(NP4hf6uT?`.$W5R</0CFhq^P=bV>:(,s6_t7k,9V7'W%oP$;/Sn>>$fBcSD(j-ROd8."aFVTg3=0Yjc/,5N+;E)]CFd#MIgd;$==32_17GlKol7/@%Y0q%\bB01:8Z/PWCmI90An*RllYMkN%cXtjKR)D[)-4^KH4f,n-T$s-Z^/A#h:@sg_U2^fTb+?utd9#Uf`e_@WGRKsJ^SPqEYOiKf&UgK>0g.7`BoM7+NApf/^SPqE@5;]*%n>RoV0D\;sA@(ni+ap<M9ZKhb9M>#CrK>-i8^Cp[ZE_cUj?aak/f<(QN?<SF5-Yf4Z"D<aMUB2g'oeiI_FuKH[krR+Q%#I4A*Hcr%RH3uZqFY&@psE0/MCb)J]s@-ALdE/UOph(U82DS7dlMWjoHrdU`LKLq-"h8'E1,$=H8-3;e.%D.O>CV;kc\-jfi&eRqFY%ur(Z4l%FM`K"?`=t_4-s$ifg=A#RU[MFgb%Sq+g20^NCqK:$HifD\Id2Rl((Dd[*HO"HD?W2.3c]ia\H+JTekTZn(DadPFRn3QCD$G1Yj`,%Z5bFq8u8*W`oRq-X&QA-4\9pkj_c7!9DOYJ>093!8XE=Xd'AlG<$FVlo[f6a"BbnRKlEHpm$GOrJ:mi4[:54F'Ojk6^C8h<;5Cr8%QT#gohai57nMpCsrFI5eluO?oKUq$mV:ZIG04SUKI?sjf>i&//I3\]%bg*N?dU,I/K[o6BmH?&n=8#el`;YqpKd,bP1n+fiZe8;%%Ru+&Kfk;e!LhGq$qO5[K1ZTGN5rP!=mUENpf@35G'MV%aoPYp?h9r3P.!<M>bB!$M+.5BI^8'R4'(jf**Tncggi36?fK7AAk;jNU%TAhTbNXM=J-%sP@QGO@9$K9$m+4Mn<cUg`Y9n19qN\E[$$!?uX09bs&aV:p#0&Gs(_QO*U8Np&:isD_W-7/PTl'7"J4V%iBPJ9CL%P#R%D,L=8THr=5Ikq=53Co3Wm$qgafp+\<"33PLEDcH3rppK$4_+PkLk`#t2rf&6mc%VSZLsBW:l,4:%F=ksB5gY6:muSG9`G7"<%TlSIWR92WtD?[#Xe._BTo81XBBmIi./gVTNcdG^]d]"d[4M\SPdX!,ObfX3aWR%K=.RlgA6.)f.5,F59Do6T)cnqNj(S=/gmN"mb%QlmJXlF?I[EOh+\D(1e-JZP6q]Xo#Q>H'/)k6NA#oK=@Gb=\_/UKBe($*pq\nG,M1=XKT7hm$P36V7N]r:(3GBjaDl71)CgDpT2V%Z8/6$@D"_H#NCWeiUhOHaPO7J7sQ\@Gl8#UESgqQ1l:ddORMs"`J#n0aA>tGLW,"%($+oeXd-D:OqQbMF)$TUjhVYo+tD2NE(3G-%qR[kW,=Zpg>i)-@Z\!S9"aRe9_ig&!BDh4N;&6V$+uH@M)g/uN3$\#@,VOrNY;;lZr*)I26L!P'Sn4lO`05m,QCqAl]dWi2`'R!b%+V[\hHqqr-A'3m`WFf,+PMh4X><%tFFG(8ncB@;SL0o"NVks$O\J4U9<aJ.t>VD#/=AQ48.[;b<B.7Urc+ciIF.p&#lZ:`t\2'80%Zm`,+H-,k[SXr]E?SU^KKb>fq<q[J965;59aAXr=[XIcSC\^;:.7Z,7=W33Easthujg-'O]:cgfFEti)P^Y'"6"N5O/S0fXh1_BA%ifT&D1=+Pu8PssL+i]+/\9]MHjVAb)REMO.g4`^.b.G;^,Th"haqX;..h>#($3ZU$KpX?af#55U=RU8ZQ3k\0(4lpf2%]Ag=GnYE%F?uO0`'7J;U>p[q/mZ2d'/DFR-=FMj/s`]o1\!X&A1M#:W3Ai&mdo+HRCFl6kX:&=Q$\ZR>;&1%7s!5O6Y2t`ZL$jP?'R)6md4cW%OuRNd?+e<eed("/r"menXbT5+n&lFq",7k.Mn*TZboW#iF!$+Nk.f4&?^@a:da-UUZ_dEe`H"E0XnYVnFQMB&<@d3<Y8;8V>h.)I%0D`=dG`Ou/&KOGl9A`nA1gd@bLr-ZoE)'@5(c[U?Z4Kj8IcI"Kk"Ac5d;S_U.6.4MgqTsa3[IdKcVu!$2t$'R\L;d)HmJR6J'EC7%h7#lkleE"CCF,jN`fPEMlB"ooHJ=-?>jI/1*k&EDl!1Jq\?=sD2hao,!&U:*+gG['1=l>H(Zf,"FslB!ff/6-C;"Rhb\t1%X68r1%I&#D?=X[R<N6'OeP-j>_$=.goDr'J(H-Xb49pTk2-$gCk,;l^<NZAulY'cH"$(XMg^L,4:>lLQtq:d4`K6u+uIme%dgdA>q1>ql0%k3hg.@@)JEE*"2[iLL,,CT[Y%Q$l<^D7YC7m3S)QSK;b=^J@$EOuKSc=5S0+"7?oud7M-%7D@X9FOAe1r@=5,<I84.\"A=Hrc/X7%-qWut7WLXnb`e"38[3a'dTaM[1=]V=b8T]5Y4WYe&A^"].U4=Wan=3r#L5UkBb_&\7kA.IDdMp?'9?+"l?LUt.]fSQ(B)H1HmZs,%58>fM2KI@B\^(;cIt9`I-QrZLU._XtG;&,Of+5E-;V@9bZiM$kmXoEW$n3t0&([fW>/!U4RdL#slL*?+69TNi-l2+:1WP+1F<rA9%c0%u0gV]V:"6A]Y50%r6FK[jW.h?dsAr[S!C>iO0'QZq51@-su7k=D9_S_r2!R82;V8?g>MWEG?m8.IcKjPB7jc1"bm\\[.Go@;Q%OE?\f;Q<_fa.[VN^AGKF\8p1.s,n0C,E)A_i;[YnI!JpCU0k6-<ol1&Y)i]j-2u[_'Q[/OFF5U#Gie49pB>D6\_[m?m,)/Q?6q>e%;QRW;E)!&Z`;)K=`=d/E6=3>oe?kj_QRb8h%[)4pjcA`r=88]m<4/0)fgI:*?+uoB,.Xas!J8Q&n6W8$a:TGT`3$G"&C2uH;ef`7%EcZM)-si%a_Ri[q/M`*WoMl88%s9Ac0__M#?b\O'bL*bReltq?Ya2&[PaMHi>g33(;XNiATiNi(NTiEgaW,W\A.[bIQlOn6dJ'_2%O6"2^]1.h#@G"1qCbcfg\<H:%)AFu5>nje`4kP4`P/j:O1DED*QbP;:?`@;Ye&!o\9p#?/F+K=^TUcIK73sDC?@2M8B57N``PU_@%dJRtrfd]3c0D!s/['kpW.aOTA-uP[;]DCoXe[=\PpJ#-BmK%.-fY"C&Rr9+Gl8Ri[MC*bnA?=$"`67!SWLJ:oqSp1W*K8!cFJD6n%78&`V0jY[X3p@Y;k?lfn-:%/>$H'nBM-=Blg8(hs:"('<e2l4<3$c.Qr^#D^d(,0A[=1uu<Nk2EF>#7n*XtP)$!fLXOS_@<##hF"%TbeN'7`/)OQU*^)?<?`M,##Zb"UN,bM6Q2AQu,IY9(1kV>N208][rn+1#5ULc[`-a$`3]3^:7J*A>P'imJZA4>(Q['HQ!N>c"aWY%e>B5i=K&'@@JS#:W@QjZ4E1TFB?MQ5_JEMT:ob:On#tfP\*QCCObgR.nRPTG/ghjP$!U`o"*B=.j[]PTR8XZ\;jqmT%#[h[-$R<U%79h7S=-\A5N!e%V?*;1;6:b.?P#[e4C6`gFot+J6+D(>tJiiX%08l$X@On4@_-G+6DG91G9s^0;/'95C"7DN8r+/<aE\5%mY?'lb%0/%!g0^9&@!j]u:2RSWp-l.N\\XTeRLa_=5?g5Nr_$D]RCh\uK3^9Asq4&^(5Y%446bQSMjk[=j[<sK(&Kr/Z\&A\S05d,q6A=WT%:',j!'X_^#Xl-+QCULYCAYSX6BjTB##,?L)e+mH-9mYDhH>C.9(<bh)g<5hj]K0]hBV:ssNY$G#2Q&0O>35=paEo0LP1US]@]jf%%e5;'5,&!&P1Lb2:eeOTB9r`JP<\s5a;lIb/ou]/SQ/&2qS$2:FBhRkP*/_er3oP._70-(f8o]n['61\ob;kjLfP&,U@^FskM[c&)%dnQ:/jDG&\_,Eu@+`@V9eYLphen)#*7k#K,bs3J?2#RjuH8enTe8@h)k+".:aDZn?Obb:ok`,d$\>3Cf[28A/%5505("r'KF<Wd'%/^t,D=_Ok-X65Il`?h>YT?3OrL!j!#44us.Ag3lD-X6DiE_0qCP#7t)E%km,-a`ZjF%RVl\!F=)*c!3=3?MEu>KICei`[+LVNK60%o>O_E>Z()?&m<Z3W(WC`7(:aE9$ZQOo;U/\dF9le':!@h/0Mr91UAAO@;ED=njf5[!q)1a+CP'C4C&nR0@+3YXh:<6pMrPMl<\`h%6drGFpDU&#f&dfKd@=-<]fS^F]I[-fnlLek34FCF>ZX%R2lfeid<<4mSU?P&ooe&J`nERYB.Fg@c`V2sQYF?12j2NN=kj@k]#,hR%:&(?^WB*b24rgPZ8QTi5R_(%G+fMTG;lB1d.1>kp9;74sjaOMTpDgX&I4#\N$1[OY__Q`'qX2pY;9\4,atI,u*botp`>SNWVG(Or%D_CL+69hb\^WBO^FFBLd]Y&Uk<nYAh3@&@aM`J41>pe[sb+2h-gJ!<bmc4;#XYk;V'T9n"6DL5>+EBTk3#ZK:])8j1bSuF`7t.V4%&!]5U?<(c)[f"-<AfNAb5$'5!V=?-1lNTjGf</_YC$+oYFD9_[?_Y`RI(?VmcU%!>G:L=)_a$uYTNo$R0QBoFoAR!VT,,?GmD'Z&%.$mI2XL%GK@9C08=hd"tj,sh>1s2_^bGs9-4K@dFd5fh&!#:gt`edJ2OTC-`SZMBY42%>BcZs%#MEs9eb1-qA&`)!JKfDFYGI1c0%j?$8Hgm.H^3GI**Nh_L6Xg.X,l3Nu20436'jCP=YX$'^dqeU!p=2df)AQc%IFe)+36;1>6[*n#ogM*M+AhP_tY=^$6$a/gWMIj7c%da:pO9_GH4\^VCbbG;T)>*R`m>D:S\m1VFpEKR:?AT$e9.bh2*T>[8K9(&.T2D5Lh,SkF.CeuEL&`EobKqc-j^<43d/[fJ<67X+\%aqpj9eF.DmF_tX:n8Mft?e5[.TujY3$eD[Vc(qL[CNP'#M(04aOClpJ<j-mmlD^/Opti@@c9PU`=e52sKro6]NBD2Z]=][4<=[5I%V0MgMC_fKEWYun,$aQ85].o4Rp"EX]`6F9^)H,su_G?+/a,oAsb"]GC0>bZ*T"B$.p0_qg*Yte?E>%en*_Tu/<bT)qjgn=@P.6`+%?]tmlbDL;SKt?1FbgfghZJ\^5B@Q4GMXE+lATf:/YO]*<Fid=@PtKTIm2\(,#h76r=ZNCYj6YOOSB2Q]%6Tj>X8Yfl-)n_`g_]Fk%1KDl'=%t.]noH7.&cqC&&91[Ba3?#9UhDl.lr_g["V\mN`Q$!CU!s]$+sB+IEihcog=<l7D49!$EH9$!=q'\%ilK-dUK0&=c7>/1%rLg,G5%r?7"eUWU=tkl?'iGE(U'2iM<NJ;%$H1^-iu"28J^I#l>V,$JENc_f2(!2q-Q]itJn$_[+KIQliolu9^A)p*%/Z!r'<a3f%;X>:!?5RJm=)Q^RAeXq_r3eFQd<23$k0$3V-3FZ%DjWLTdoDPf^Ikd\?R6$BbqV`j2DN$5X23M,TgG3(d]IsFOD=&id:bYf\Kcfn%<0u4f>7"`;9_Ktm+bZJTeF5<d2,#[(*EC5FV-;&@79-bdk@47=>560ZB2Fl1%5Uch3CQ/<Q*XH6[J;YEH'[Ur1W])P\K+&:/1iln%$RK\]NcnUUV5%I.pnmuVq8/ENb6DUU>bgu1<pm[!$E65s6mjEpEfN"h?HJp4B`^YE`_9lU3=qdmr:G@32mbiG[aGNkM.e531F)R8%BJOlT+.Cosn-AkY/&O_Q2t\kQ(Q+/iN/#:V)r`sI_,tqs]0;F(R@Lm[n(sSUAR5QN-H2mVTo%%HNFs@r5N*LMpMILSStX9\ER2Gc%@F?rZ;]q.H?hulP&#3@#iKaA#B-a\o$MYtYqRPOZT(KffU_]u4&E,CROf>b[am_tJS;83*mLI9-cElX-?8umM4UoW-jjPi#[5p<f%OW(C(/l"&GCQjVNnNC6fHl1P-XWAPg15FP8mHd5Ui\EK\MO4*7_EIUe7Pr+/=04qS_n2fSSrpr^_D?;ugS1rFd-kR0_e3%JcTpHt%kS^>F'PPu#jACgDD[--%X\CN\(3)MjkMDrV93kTne<i4O0X]2jCTHeBs23q:&L0XEfY<EHSPV&Aa17t$0>*g"(n-udoL_aKq.kgI%QT+PUE.1*eQn&BDH4McODoZVieWYR.$5HM`*`4fjmEf:;.l9:XIMV!D\L%^VA1*\*!d/cg_+$B#[oL+,c`8Gfoc9Sgdhf:6gdjsd%:m1[_`*Q7nY4IdO2g)/Ak]g0IXfnX-d0d8WE:3&V^Za?5joT,Y+q$;j%8;cI"<-Uo8W:>VC'PY;3"BK.B/[*uFa7b.fug7;Xg#+1%("^6+GBm=Md([K\aGQR8GH/]MTg]m`!6N=l$LZUUH_^6to#"#/+]V$Z-M]pYqta9+)VL.s'tHS$iOYDA!i;`6XEIK)ftH>7r'4bb%UM%uFX)#I^TVj$hX1El%r@bYV\3O>+<Nm`K8J/(a%b7og?&tUIp2?7P[0!K'9caGF!d/c[YgJqk^7"nh<a9@=*X&dj^oD">?.nOg%cfSMH9e4RUp>dLB"\S)kF^/G4hV6IN=te6-?uGae=$+d>5cQKp+$WR*b1C.RHM?nC+4l.-IT<)0>)c2qZTr/aDmP<d&'"dqnW=q'%FKcq8q0\S\W@fh12I98$Fnt5TV\<aF4+;OA4k0os'3H,78ZDh<Ts.o@mRO0^<ED+:"5Om]$gS#.PhufQF94TD$#H.AFHKBVj17(>%?TgFikgp5b\$'nU)sGkt#%.7"J^RBi@-7U'99jMa5aTCFSa?"DKQa#R`@ft3GL,E_l<Ls)):u:3hUGFm44'87fsB.eP7u2+:Y'D"%<.T(`nA2h"LgFY8!^09]:27`[m6F`[<USG$M6LTbB+#r[:=bD?e[m^"d0]GQ-SSc7>LX'<Yr^=pR6DLV-%V*5F+KKT9WF@!cJiJa%TGQPf<M:9i>g<e!JVO"Jqra5!>n3A8Ni$K__[S3BfrKId[l:gA[S;@EW2co8>.Jj/&%"MXUl).,2"Ul$d$]OEK!HR?Y1@bC4Z#tW%(FY,u]N/2Q&`T7^Wra:[S*u6>5c93,,Dna]2oCp%l8]Yo\7[Y3U^XVcf)3(:&e-alNb^M;0+7T"dA*joUT[."pcq>.Hn+f4Q1O1n%XEi"Pc=3g17<F!VpU!%44]ad0fEg@$l92hSIBNmXVgQ`bWnpFQcEBeXoF@_2r6naC\E[cZ&Ng`fY2(GS:J3WPq_#)?oD&1!kcsR)%6tgQ2>lX%_m^,c9WmY"N3u.$D][ZoQnka$MV#U'rmH'_d;bgi-m^94@Mg:k#-g#d=a*2:bl-$g<Urr.sTu,G4rb8TP<;lGuEN:?u%9]PqdAk;,sC-:>D?MH\[:QI<,'@P>6NLbDlj#sugIT9aYbj.I+h$qVFBKbH7G'BFH4Os<dM=/Ac<;5Wd-o/?:qt.19Z*g[:Z!L5p%_XX;ee(N6n7:,`Q@VDblW3<Ij-e'q+Wq5Q?Hsh,,:l+^Vs-W*9d.TqGMLV)gNN5_6r:]sA?qT`F=(V\aVM+BAf$gV9kr&981,P2S%%+?GRC"e@,4%`.u1\oBKHPSIURYC#iFQAqbN%?:daN4,+2LY,Cn$8PDb\!<Xm#e;#fgC,Hr*YW:0RS,Ubo*53XEK<o-It]^efa1A%[h+bZ@9UScn(;$'%*`=ZahNueooW\DrWB9da`*#gpi9UJYM3EO\/6?2>LtDHmYiPDCO)R?j.YcJSNp]@h)gn]OhBM:Ju-`ZTl-O!%$$m?9%5a/p\[nUP-sp:oK6aF2<uU:f4OD/MO"AYrlHGPFd&Z$[DCNq9pJ$*8f'\;n$D+p!\N:E*SLZ/k*B;CTPc/dMU_P<8)s>3N%@U-f#"k0`oWD9)k-i,Rbb17boG$c+gDX=#8-lkD)BEpTdnS&0LNQ&D8Qhtk>bk4MK"/YsYD+0oUP="co4$N=/B.JCTF_C'(\N>5L%/"*u,Fl/h:m]X`J(`esj)a<0Lou.>ro5SM92BsL_h"1M,j_PI,rj*,8Y&Y\#fp_'hAEemK6MK]JoJ0S6^Y7h*qV6H5;<h\'@([\Q%5GB2m-Kf_^EAC37kDh<ng<.[gOMeqk:F<m<XI"DS?7GIHE#iU8!(e(A[>>63U6mCi._Q`"9g7SP?T+/o$\$669luu#U!1WRHbMHc%LqL&h55*F@gr#eX*S0CT:"4$!A)psa$<<N*/4R<ZmY,8p4Yr4<P7(P<\\,ROB+KD9l`LYOqPF<%dYs0#U68H$ki?/a8Q*..b399e%HDJdIPghF`Er[6hn`*qLdr1/'?HlEQ>E%I4DZ"1gG=OUjkXaK4$I\PsX)b/<Z?WQdn"S49i8Dh[XI3^%1Af^[f^?5=Zf[;:NV2_F%Y'JGQ3c)+_.*FeO<bUVL\_*^`PZ?%[<;#bJ5*>#M<gg>RAlE45GbHTg+Rr5EM(>lL03@u5kjEOn<3M<=_m@8IL"DkLe(^7*%n;e[%;I43UQV)-J:GZ_jW_t:CL7P8sVfoONN"o(9AT"K6b.Xc!8nQ.:XRb\k?9\$$1A`U=b&4cO#go@(^.\a9&1VI_o7:3lhL7pAR>*6.%>Yj7i=UrqY$Oqek9L)Z6rgWK*KTLDrSBO\5C$RaWnk,F-Z0%I[g^Q/"q73S-WT.S)m?Y@hfD^D28p1GpGCma)jbSs*^Y7%r0hBRA%5J*_\TL*\I(Qt<:,^*\SaO*'e<4/CSZaC6>.%+Tk0(h5!\L-JlC0H`F3LN"%%clq;re=aH6';X6-HXf.DB%d0l;g+&H29Ere*R_1%p)(cW;N\\h2fhqWCm``:X-^D=<$V"W*iuAMZJ9f<RT%edl=S/WZED^H)@0?8>1=-uD3L;U7jRoc"VXMC9.)'WV=[FSW;?E$*=Lmk%^EWVK`Z7++IUk!A,mEJ_momgAZ5/jS[T.>tB.98_<faZHfn&Z9`h(1DqK;KgG#i`ZA+CP?$&qq!)\M)[L4O,g;I'UN>;84Qj*<^R%_+gJHChE^e@s)1S>q5/=?&k2mRJm"($NjtkkMI8BXlaA3B.CEuCfNQ#d^Zr`R=h[!(:>r$':WRh3a(`HBQjpKbprr26"hZ7'^J+K%I6e9V!LME<:6^0"H\/KY`OpK$=,dWDFBZrTGrg(rUrk18=A3LHa;-Y08a]<pa3[EF_C(hu-LV^`Nh82!+]/K[[Mh!dNq<IV9PVWu%%pD*jSLVdh>i7Xa2TEZ2,'BB7pFTGH-ZuW74GtbO)-6eGFt*K7r"S1>'#Qp19%R+SU8O[;^8Q(S?=3]^!aQAmZOf?ff/*Xep#,1.%D9i!*7cTl++7YKKIhR!!=UbO>F7-o.Z8@HKDJ%gIZ9h^:+s-/DhYNL+Hr41f2$[iQfd31,&s@%B>+J;gPbquf2%-6CQ3S.KMou%2%mL4q];H>GcIB>nsebk>I=2Tp[Gh?\U@k,"`TPTq3b-o`?JqF`)jFd>+P7`u>jMcjS[>B1$]1':bI%XAq7Or)N(pgb:<E2<(o@eUc%Wh#L\mDu:/`Ctoi.m<jHp5d<Wdj-#;R7oI+8hWbABta(H6$K(C?=R]FAl+l(e8#?-;`jM5o,M2e%'oH0Ui$I-MV<Sue6H=<[F.sj%5hSUjQZ@+X8_rqp'd8XDajZgH1TUSRG.^]L'nBa01p<9&oe_(qI9E9`Z(Wttak$<oFKqiA^3bLPML7@U)Y#[hma=KAT9U:4@Do&a%lhrF.&nH'c*S25XSiJ[c9"esjH?SUb>%fH<;Q+W9Ed,*VDRth!eJup2+q5cNh&T5dUJV*#Hso0?"+OKVWK;KNj*fZ6T<;hLog.Ej%Kr(%AC/-J<YO$2)\Ljtq-&5hB[5dW?k-hGHDf.DPQ.3.%cfQ.<Xt!f?#O+@0N\YaC\IE>]g?h-mNE3Y3Ega;j<bjOdR-As]F><7/%mI.D[UT%k`M._k!BKK+OepL8Mc:_BDd1"2^8N-lh1bSHd;e+)K@pGe>XS^KCg+2?I_0XJt9Y\)tj4>hBaokY&TXf2UfqOREkto!Y%_Jf&ZFs3"\:W(sIrD'm'g[q'f\d32Q&u%NFg)JZ3ZDL2R?Sei&/Q]5'O3Ja7H<Tae$Z[80l*%d(*&R*P2E@((V@-*We[D>e.L#*q%U15jK;7,MIi>)]a07#][3.Dj%eBLN?g4*eG_J@dM=*nO9OeoI8bc!BEnJbB8L?,rYj-&H.hAYOf2DqrLfGa;ImlAk3B3m%A6JXb9%V)@&73ja'UNO$Xq^&@qY6[_I&c/ifU25L3g[tWC:1!Ul!rHk;?N:Wt/r]TpCX">%+qt=42j*RP1f[(D>R4H2+n>pW+R!r[\'-L!c%h:?PPhr6gNBcDeMm($D:B2sR0OfMBX0-Do8qc[Q83C^G`](^(7FBQ3=QL9/oV;&B2ju$bMLmno-8P8id9"Ee224]1*dH@[i>)k;/%l/dT(Qm8sGQa0bg]@>9CObST>mF)m)efZP$Z[_Y@^N\2Mc8DG'qPsU<`+PiiEB@!egMKSH1LIi#Z?AUKEd>Pc@nXuTAE'sLDJ;:;%Df%b-Q=j6EqTLJG1%KnSk$(97YU!+;[3fd4j!uXi;L:;>>q'KJ/B"j?fuqpK4X6e_1NnSs81K!Z/a$`Jg<b\uWG+Z=SJ'k2%@sa-%S]g>X%:)>o$4Amq>IJE:B5Bk(XTb9"TjqY.c[q0!=gW!4B5BlS>77lU6`1g#BL/P-/_H!kSZr?hE-=aP2KZqSFHZ#qCGp:S(3Ho)%F2EZ,>t$4:6Yil,g:*bkCs(hnOgu>B4\MI@^9#un>!?QI[f`@u(iORp#\>-AdJbR2h_hcO0pSjYDL0a'@T'BTB%6cd;a'C<IZH6^%>;,>CBMqX+.Ak,Pm7^/*F#1J65t-OYfOm*^d;Nh.`i\c.1V?fb?"`_leikYXpr-]+(`T^p5M>m+UTp;/k"8G6js'V$.jN:eSJTCa%k/p4C?)'Er$ZhLl/ruE5fNIm]C>6(Dgdlh&DKRaknQ$4W8RqEeYD$]N=o2Dh1i,Sk7_2e^G15(Mfpo=:SZO$G2Mo>:<i2lbq_Z&R%TAPB4oXBFnL*8/WA#!14$S@9HRYl,%_0N8)c/p3lDjJ_Oe]GA'rF)mQEaFDV2c'i;MRJI;F'U;2X$bp(1G8@n`qDf'#&Dm--I.9Y%6_Qr?]M2@)dj4#+3t@[rY`n_O\m8ok?n*Z\h+h#bG'jg4/WpQ)^'eHJQYsd<Q+gs9Qba_f$cc*m7(VX6'5:W^@qEcTa^bppNElZg%F35@oNUEJ$oW(S?R(@]=)kNIW0kRt;HEDI)Ag1_1QZ?)jH=f(^YT?AMHIW%U)4QK:e<nod#UUHg=jP=Y+,hVW3mHtocWKSX$FU7_%f%4A>f50K,Xl[Kb-qq:`m4sg_4EML;0BZMM>IJHthQaoRot5<S=6lq,ENlA,Kj")qi.7n_\Xk`D*(?II2@S]s2C%?5F;D)AimB:R%eATVs,_M[P[>&XHj%=`BR$ks/XiY8Kq+665bIM(?^gJ\m.!MQXVTQn.;n"R,e@5'Il.ma8S!Y98S&Zsm*V%?^/Xs1P?+2u+eK8"g%EH.qq^KOI!Gcgt42*G*4hGJF&)tkXXb;$af=[3l>MRM'dK[LD\A3hKoc=%q*1g;akL)+qEL\,+lpM(t<E^n(#3$WLRW&l6!PK.cW%A/:Z)O\s[`_5/2cAn8bAUV:%bEu,U(A/:`g5t&BLGJIa.DZ-a"o9;e7S'T0cXI,]h4<m3pX-<8i-PU&uSC:m;DRA)N)X/]/SAd'+%6AqqN6_2r6#F(e@,r7V^UX$1C,`;*@c;8_CRA$p^25R)'WFBks65g_7VPE.8N^8RsU,L`_En%VeY,ptKO[H,DR/ZH8'HrgR?!YY:%L/jQ'XrA>7B(_>/A%Z$lddBE$QrZmNjeJUt_b!['j#Zj&]li!hWgK"7\)rSZ:"mM<5Hh7.HT9ih,Y.7\BIKu$URKrT=gYMKd2l&i%ZVXcB2/PLN@h35$,.1!h3,NFsVsWHeCJ-&AiP]&0o;3EAm,9Lf6dh,\S4:*&aq$OM&#VO`?*G>aH!,p3@r'o+Si1Lf(Peg:C:u&h%l<107,,L`X[qobSUm]2'=A.D..oo-qJ99fUM5IB%3Iccfm5CkBgDLFd`6J7#`0-&HA^DGVgH(7Wp;a+OSc4;0h&XhKk;B1fKWICM%Oq8CeiNDSS>'U17W@_&4CU>!9MUXG[[O*(q\3ehODk(Rsb%T1u2kG3R1gjoIQn^>6Z;Q(+0D`Z.o%>$tBn(b`Bk0BZ[.09o[W[,#%NWdosHdKbE1BYOSF'-ra9JN3kYSXXSQ\s)g=]V1m4_FS)@3^][>h>C@)/0a"WO]/>bm=K!(9)Z+=JR"q4(47DI<!+JQ.h-V@?F1\%C#'tuqP(DheN3uhgjX%B@=530YWutsdqqRs@Q:)Z%/5bE[B/i*D8d2aWtf^4'M^Sm*&WG6c@NG[E,X;A:0V4'S&/;J=12cLkHZX<%/#I7p4!L+MKer-6b&"*hN##L]SHtigD3.StN7bV?di9.&<bu#I$YqZM1J9*<l0SdVSC1(nCMA)mXtdm-_tn.?k)0V;$(I4Oe[kSL%8tG,'U1UccA%ckiVeI/.SFp`C&#t!]k_@n22ls]JKMM^<K$;?ES%7NrmOZh8oe;k0p.V)j[jTd?Vu?;&FEW!\I_]6%SiN=C:8d5a%gPb;6hdni3j'SOI&8Y@"`lM@`cb]0n:.f:Q"1tmZc]S4OD2F8"FleRVdb&F'Ec"6/r@A=5H8Fb*pQY?0h=_:/ltThZ/&/`IW/TQ@%BCmeBkbZun]g0mQ/aVUhP-R@'pR.!Ne\j`'`btFKC%54k\H*PZO0@H^fIc=9%<Q92lqYmD0%Sj,++#uu[BM_P19s!R1U=58Df9Cp%.br(RSA2V_Z`qUlfb/2hlN]J_H8HugMl@HH;[SSVklnZGOHi@Vjb)aQnbIQ3,PAHMN`kp-EkH5TNeYF*40CB+I+,VGe*)Yr"ZQ<T%<&^^EB;nVKG2$1_p4'$jYYBS[[qr]i_e%M]`mQ$uZ<7j9H`ZXpKsE7mni1jB4]f(1P1/^pZF83'S)gpp7(/+lEp1)74m?jH['q,(%A)YE>70h<2hR=gbOjilYbF4;P9XFQ1oWf(_LM;^@VGJU`%2apIC\KW.2cCWNUma;]TtJV29s,Y&2S7*`+Io^6dumP@RaAW'SX(j5%_jr5.>LR:\GR8S63bM0bAP6\#j@NS,FSb<g:0Q-2eX"Kae$V#JD:t@QC[e$[P?YDk;fiXs><6?KGJ]eDbEbo(L2"o$:2AYOEnm*Y%bEbn.HZdQ$Npdf7D!?W/[a&%)C"^p+o.WpBdqPX22f%fZ24aH@W70=>=sCLfni1,RVj2_"-QBO*9rDPqBA?F#`gTZG/!iuVbcU+\%Y4/l59rI]Bk'3d\B&"c@WA+e3FOi>#MD^rj/KJ&DF4-LPbEbp#VS#s2l*NQdZl*T.RSK^qEOA3\Au']f3j$-&977pcbLUc=[WEkj%MDem;Vj0RQB66(H9dc")?qY-L>cFb6Mrltp/+:_ddqM6AIAX\0CHA:_"p7*mMcAd<:h.K;eUl>HRnQ:C$YJ!i>-l0l)EXqSRh^+W%qT\H/e*^L$I:&Q,HP9*AX0ZQI<ZgU*mXo@W:RSe6a.i)l*J:EJPQhJ<72#Ip<j&I/C>RWg"g,M8Y_erFHN:'Ec4#BShb%<Q,[+N5%k<HAS9]_(D._&SZ9pLK\Oqh!/hmi^-au#KVC[Ui\j@.*!#/=AACTQe!LkaO:=e<6=l'a]=]GOprBA#sMn!Z=bqidM_k"^%kJG)EU%p86Y&Y.6@'BgQI%JurhVKXT=uU-&&-OngkY<mQK#/@@Sr(S9=eHBmkjdi/jb/6E[u/9\TT9<IQukArD8gr)J$L31!g%rL[@jp^LC%1Fc:*EI(itJ6gUW_I;=ONS[Agg4*d:E#"k`o^56rg9G/kA'LU$b@B@VC5X9^BWCSl>>+9FF6e&8nOo&M@OA_'D=!!$Slsd*ChYgB%n]].9DWC]W>g;GfjeLWn-H/*Ep8;Jk>0[quaj[FF/c)6WM9=C4M,%;4.GU-NW+#(ZHIE"@Do,PsWD`hs<uV$!%JraJ(+2LR/!ZOn%V?u(LHeT<9.3D)qF<RHJX+A+,&O!P@C]8,M[Io^cQ7;*?O#>3_Y\_HI4Bj_PMQh)Q+aLG4@?K4/#!]BmhO<Q$<C6uN4,0[uXkoL>%I<"82!-Xp';(#](SSmkVZ5D<+PcjPJ6pjlWgP-,(I-N5?iN=uU:j'Z]oCeGmDRe^od4^67gi1<b/G/D@ZVq;*Dn*,fq:MK+OiC+@%XV\m0)t$n>.F6"9g@1t%rF0I3L-'SUO8_`0-D%3=-Zj791Y[%^dBIf?G^GY)HL1F@Q#9?Lm@.U?[E&%,>6(,)IEh=7l,K$M.h:4.%'46-hn%%HU0c<?hXSUDon4BQ1)`H;)D;WXAb;7kIB]$OP["#TZ(ln<j/X&'coiWc!qmMHN1hYd3(1F,PSOq!o9]?M9U](&@K@sFG%U0ag3EuHlIok8F3R?^[L5B!ON=NSG-EL+V0qc:t/N/X.LWk.RK(Q(?pf7!Nc9Uot-Ib.EV\4"VAb%A[jmlnImYP!<eJh$#uDpI%G%*pBcZM#B'o2Qd;YO/C>ikN]jNlQ1bLnf4rT:&Fk"$TKbWK4fKgXps,>FE9j&8<%6n;5"u>mZF+BU<0VZVfC*^K$a1c(2rdXgR6f(%HH*_0Qg)dKDIo]"[^IR+k<gupDJl#up?`r7Y<mZ$>oD5_E"fj(N=#%gApC@TS+8fZp2IG-h1KkG<0d"q[aF`pJ]]$/As]<3L0&d_%*t@K>)TW*eodp,Ph*(;QJJ7kC<GA[[XD`(1Q*#`4".eaAgee6tebm9IC^V&nCV>)I"q42Set`*8E4*E)DcO6t3ioW-*9a"U.dECu%%2dq]QW%,fEB@,g"YYk=lNA-lp-r(=kBci@B*Nq4ou%R+7=ES>7e`TOTS[rJBr*l;9i[j&hh@GIQZi$(SXnTY.T<a14rkErnKsV6%K+i^!4/T8PQf3&%JrbKS_9nJNG=5r9jnc(.9TiL"7+Aga`8qnsVDE'CI$1$/AoZiV;/12<\Jg^;\o#m4/S5[9VG.LU,T>5uXO!ND%\[>%:UpT9u2VH2(<_]&up@j_cpL+seFKKD^d^513mCL9-O=#;-1>.1ih($[degd_$BdS0`XlLkG/,>?padufpX#l6O["OQqJPZgQ%[-W^h=`O/$D=,e-&kRG9\;BcS2V=kF9;?LUKW;VP4e<Wm<`cUZcS>$d=5rt+K`sgW]/&3rg%O5t#9tR"@C1d(3]2iue'"Yq;Eqq\%q(Z(Y`p(g1brW+?I6,Qr//t0HABA;e@c7l%QNb>b4)30caVg"h@Omp;e-iAU*HmG_".aRRN1A)FT+';?kGJN.#5p)W'*5X[j#k*4%PD>BD.ZsU_;\s<b<V+s</K9l?)kD"]IR]"-'[Wr=VO>#!4&rHG9^UT:=u%BeP-psJEt7iEgPels[Eojo#c5:=hh!#EI!1`foX;d`%;blGC,.G_DZmh[DV,tkkfe#!LSf-F$Catc^O\.cP]\0gJ82dPN[cEjE/WUp3RB0ZIe!S8"V6*9@7uh^LemL,34.*EuURnQ8Bu15(%WXYVq<8+b^Cm76?##N\d[qu:^YjuUI51u)6TN)prdi6s4]WcORT&so=b>s-oD#guil*Y70BN:[.D5DA*5cZen(<4E"<e+4f!)6MO%N3*)XR5Bo.;I@Sep*_C!%j'\-51?$<@^Te7;EhFN.%Ii4O4>olO*iCKlFs&a\s-"RIUn3ejg-`NfDMImlEet]k>FK4/,!YCnnIf^%XQh6Hd!+WJ0g?W"hS"C3cA$*-?9`]MeTe-%dq;%Ime&Bm]P(dID#%C%_l37;^/&IjRBrS<h<S^"2O#H\qAJ2UB>_Hh"^;6AS&D2l%p!`319=ObsDD?3?e$.E*Ia(u8g#&p1DolSZ?9dISrE?qMP/#VP[<YEGp\Gb3h/T,JE3Go(IXPun<6an)ZYEk#g:_rmo$Cc!UR@=8%\CXM3gs^$%N;@%-me&A28Nj+2LWnTM>Q$+so38fXca^Bh\dR6Y?9dcMn[33)Y'[3V;toh8DXt1'j(kIo9"mi=\)E40NI1WJCJ-&C%oeSL%@5IDThs4pfWBbor;4rVir>JY7\CJnZ?">HCB(u->hs.+V0kC;j5ND1)R8o\3k+-m(l'U:Zp8rePbJ)98I`C1Dc27:)\CXNo%QXR5M[stTRYqIHunQETXchLO*K/Gi>Fq8kn>Q)'Xb^k->N,SB1H0l;5rHnKZ>,=5kAM([IcY>UTG->7g]lC+IqH:@iYP!8@N,SBq%G9:1u`CG=u?aKM'.=G&8o;?Gn@fKb!XiWD(-gFgFf?\\,c(/Y;^qG3:\,)MO?EG0a)rBj-]=GGJHi7cOg=5c.IO]D,eTt9fp[Qq)%bqcqmYB=?"r`6d7pKS%!qWU[do,DH>SLQ5KlY#>Go[`L(1S32rhT==G]ma/IA("IPUD7S0?9dIY452dNqRq?t_fg1%D"_1"/WEog%$#/F+5E"RE(@Uq&[!T%=Hi4jDL5K46`)'XMf2#(Bc!1-WVp2\mYFi'cXNPFaC[k^qitWN$``ft*:FVWVEjFpnN9X_6j2D1cdt'(-%lXtUG+$6s0om?W?OgGR,fp]GLZVp]>NPhH-j1oJUGH;cn3]VE5E2"QNSc0P)YjoHtSjX%*79+eG3g&R/-7::K3g]<@nNlgu>Hr6V%=].r/^Qsq;M7fi*M_<V]ePPYQ6^j9/cd:'S:Va_p)eVpE4dDpXATGU'kV%5ZQUd<3\9bKK,oS;*,WBlNqa^&YqI]/.!qY$EWUBY=%R@*.sG82IncDQ"%@h5oZ.r4mKdJM[NUNk9)\P0)8pO,]KW[GA?(HJ,@]\T!eg00@#h/)7UU\DD!q3O6kWI[V&<S-s,P0826=rcEQ%kGS/LpLj#CDfrW*>P7?b:A+:5qr_GFQU_Dk!tR?H8!3@^I[!K/cE_M3B7"FGiu:%Mp4TU;GDF2UIFEc6bgK0-qsnb^0Gj'2XB*Z2%rRG(\O-Gu7pM&ug(;2\2(JOq>LF2pDHbSuiZ:cluHf_H^Nm%(#\R`2CWis:NFR3uB/=F*)W6f:"X!4DK]he4X4QmeZ9eS/7.>q+0%M/L#9=q14N$tFV4TBj\(GOHSj:\L$QIZc=sTucmoGO`gs7;YU4"liG*_f-p-9)#BgPW5.#:F`uim1&^KYK1qRAS$Y1U+/>PC?oSJ%AsJuaAo4C2IS3S@Bk_$3k"S'N%^YtZmeY0"akZ$-Cc-Xk2=7T.02DC[=(Boop[.hDhK8OWW3%m:=5;UrG'R$X1!^$nBD5a%Q<g0:%*uqkO;e*h"e*4,K:R-i<lE7d)9.fPuSINj3ma'@+,eE;1+#VamAqTs%kWtIQ3<f?RI_$?SX=fHorD?pon1NA>boIIg`(T0$I#t]3%,o+]lKm]C-k!"r/m&3N?VL?>-ZMs3,BI,sWSIZ-?L:n,NrqV8%i,ISuREI)d\hkOZPcX&d#=J%eb<qWUK+[p3ds,2Hi0Q[,Up"@'%"D*YVB'uXH_<R]k]:Jp/_=?fpr5!O:8poRWmPbR"pIkg*PL'u5+3B8JG(2BjL'[dhSIed+;,OKf9G_aK@),S/$8m,LjqYD?0I#TV%LI&X8>$puC::Q;QjPshpFAf^VP*[]qEBhB:d2WQjD3Oli_[[.Jp]gN34':FhJ:s'qNq%ZAXSKA&_D@$f@P!!in1oD*bHB)('AWuJ%BOc(rpQ"PgnM?'&7U7mS-JiY:m<dT,P>S*a3s!IXfZqEK3jmEuG+QF)03(p)WR;i)%?dEQUVYFGftc!5B]*pG+Jd2(=N]X!T3RfC%<']4:MreBP*99X;p>(l"2H^Wb'-RJE?*7seKR65=^GX*hboDK$Ble>,3dDQLi8007P';'._0(u')<&^[%HVbgFC)TAJg:L5IG?(,%GH.:KbOqYYpa!DpKg]W-8,t_M_Lq01:fIq"@U(P&;`e-n+7D<Xo2t?u,id41pPrRHqKB1)Z]S;u7_<a=)uM[]^%<e?#=?Vonm#<^%nl#j/^.WHcp2REXMaQi8RG@K$0_ZUPFq)]:njq3I%e&P<R?udap@S.0IO)>.+6ZaJ(R4lN?<(hk<b=7)bL)N]ErYL_bf\qh5d<qB%-A]pmbQ`IL>.(4']&>hRFG7(?i5[sUdcW-`rS&Jr_IiL;8`@;Ko(`Z!lb+kB"9#sfm,dV_P,fbj9b[C/,MXh#q'%T0))i3\:=G9!%6_p`,2+]=6@51cCaY.f>oK+/HQ_PL;HsD7,k>$GIIUV*:=tk#S1J.2nes3U%-.FG-=R)f2?LNNaJ^V)2l&f.eU3mn":4"M(aHP(X%76sFBS#!?Y>jqum(J@`^9D$^\7J.P>/<6&!`6habbdF?"EEJX"Rhuk![lVI(02;$U)@\_FYr]aRT<!q!mcQ'FM=8a%]]o%B<1^;G%ju-e"PO.^_:j*)mo%AGSI^1"78Vf+W*ZVl(3)kra#$)7uStSg71jte^%#;-hm,PnVlDS??pN45-ipYXo$uL+Zd\g<@O]6Rg^0Gr<%=8(f?"4c\@B@q:^8$g1;P_o5+$`V/nL1nKJT,02.S@o`NMdpk4dI_8CI.h`pFRMGdhX0&[88XF$lH_"$`>2BV&,fe0ct%Q6B"s\D%D#PAlH!%bK^k/s*BY';mXci2In#+A#eV!5An9fFpm<X.?[@N0HA6s0'2S#D\c#_="$!_aK)60ru_euXC&B\7\9dp<-<^Y`b]^2bB%O+u,O$PN!Q1KANgMeis`;O.$e'iC%eBJ-%&_0tZD"9)DXPnGZa,>>ti5YiR8W+ARWC[9Fs/oNW]NLnm$2&Gh'dT4FU\o;)50$aa"%a,Y)`1;;$)CAR$[l,&&#-'a6a<DQ(Wjc>hM-?m`>B,bHcfV'pnIn1+&>eK)-b/g0rY&7mSFSG"ik4IkR^+aW_hnLm-^Kq1@hl$CO%bedYZQH^+r1]1o9OsuKMGI,ReAY1V2T=SeeV%'h,C4:SZ:Q97r6-SCWY=CJB[M<eFPO1bD&TR+SNP!HRHIT&bHtmK'=5GjumRJ0I%;rg;SUM=nTYC#%\Hs^$Re`\b/1,"ap,?7omDL$sAVFaKD3&Bn=8W91N]Uj[@O]8K[NFVhN!-LIoL$DNok\V)Y<Db-CDlKtM;U+Rj%8a>as9e9i$lJ%o`o@VcVjhfkr%AO`uQKpHfg`F?=>E(8[B_8b._ulJZ)8*+t)u!XFR`HCe-C*8%%m(*1l-a1OXH>WrC:.rQ;C=UR%gTA!a2Os+)45XadVA3km\t#MFG<T22[@QNE*\<Z.'H(bbYK;lKj4r"=BpPh9o,)39NVdL7l4l4EP:"SN_&U3F_Yl/OisUO]d-Y3u%2-^G]V_0o/Z^Iedk[J;:4PE<FH1_h+E'%EtI^r`%S#r8eX@8$`V`gH'h"oa3^KU)o3F<54AWtrta_\7qo.#0ofKDImE'65Jo$7"S%e_O'ZeDQj3IS;`FbKh2ejl9r#KN%6I_/+=4G,TA)PM4mLX,c;*eQWZ5cV==dIWKcmQg=7f*aX!Fn>C!Bd_K'N8^e_ILl@:F$]8%j%%CrBloHWdbBaPF5Vb`Aac3.igbdnIq<W:4J-3E!2AUM5^4jm+iX.KNm`tiSPXn?,45a@lGe)$;3gN(?^6@I/H<Nstr2q)fRhUBYf%jj%;HqR3D@B3R)p4f.to\uiBu8R*8"58]1Bo%G05fWSX(F!OM4O0A.l,tj'kT"F)"'Ac"C>3u\NJ/J2]bB!Y9YBd1c*V-`h'XW]k%Fe_F(J[hHd<#(G#IRM5A;qLQePP(1dBfokRjCN^n1_ecHgrJsTOnq%O60=J)_m?a5mB9;;V<4O75186QDNU!2ltC;t1RdRBM?P&t%IBd)Zd(!ag\?-6B<Rn5%p8,0Y?/A\--(UX<m402iI.=q>ERUq&=J*$M0l,Ip5$1``gP@J]@4FF?ad<:E,j-Ob8>YbFNg*!G7>%!/%]>9O[ojj(=F)r#(UfIfZEtRTh(J?458f*@h)6ql/g<\b2YCk;3\fp\DAF!sd<8hkCD&'6$UT7=S[?/G9U2,k2[#.omopC`ueR[Vo%aCADmX3&5tp5^68pQ$c4T5m.9c>87!PhrEQkcfQj1K9<D4i:o6MtCMOBDCW>$(\n:V<]I<FE2<E1N<=K5o3L4WB1`MB4N`B+AMhq%3V=cnlH&2>iRrCVcAg$5oK5RK1F+<*/&q2Y>X"hHQ-G=gRiEY71/FSYEK^0QF+MUF@d*T`WMrEm_4/`d2EgF\mnYl*5@uFdduh.H%?f&?T7%M`+nPJ3Wk?p0%:Wlr5A#)ZgcSmdI<iT-*gJa5_DFfpbG!3cda!t7;'t+Y(]U\`hV[K)k!NV3=ZmTg+]F`h-4]m"[=g$W"%Qo3N_YGZ<u-[Fa`NOS$]l8`_m?hA7)BY/JHmW09-[uK,0@SCVK*iHGj?Cb7>-#rCZB--V]Cm`JfaX0<UjYjQ>T?D/Pm+H5q0UjQS%?<J]4gcONA:q#MS3"^=3jmIP#e[opu_':6gQgELVR)_mFfaPtI-9RX][!d5LK]eMhhIZ;W#qrCN4Dr#WakkMcT:LY%b5Plt4I>DV%&':Rn4I>DV#2ZV<k<&D1W?Kgk.;9;TgHd.Rh5>V.A_1tD@PFIr9#6D_B=GuKjY$LFj(XM<SVb5/Bs*F7Rb4(B&j"%!^%.i+Q?7Lg%:MNHgl0XCbr"_*Vg[=sk_i!Bk\QA1;_o;JcX:O$3(g<0CJG[VJEH!:c:3RCrqXC93"8R%XDmZ$7HP'RDP.]FV?LW\?6mpdP2n%a*%He&uO\=8=RZ\/88h!&s3jo\L2q/:?KKD`3f>si_oYI"W.WaUEGj36=s,[TId35%8<j0Ai6_!Sg>02&eO\<IaA_u4u1*P:'*h"2hU%l*96n.M]=K4ucAFG181AbJ'n@T4QdAX"suNZ;PtsJ'kTJ*6`Ook31*>AZb#D$Q=B]cp0`fQ''ctY>DC3CRpXEOu/?Y\U1DEAO-XO%@@7b@j.:<X#naqJ"=hZum)35uMB&LF9PmF%_6Kd;'$AkEd@.!:eMU:C\k8&`&>%bBn)m]4Rp&ah@'h9KL>mjYaHOPA$1sn")P?b:%#*qXlbb+[A?L=]^!@ohGH_,mhcr_WTYMJbA#X&=Pq;?:175#bTZ20_W*P1*hh8seKfaCqh,[OUBJ/_S4]jOnJg$qDr!I))0Z95@5%Z!&?M)8t<lI2QR28U^.\fi0f\.F]9TRa[Y#B[Br'f;&hVk3i]P,]EX`A1HVE8Mk&E7DCrllBH2(ZJEj/,E)B'.50bmZFLmN?_/q4%?<GGarEQK>1oB_q>R%SP;QeMFcDf4G&l!f:`Lp<"Ke-RhPHk"]>Y3r'S/5)+1sgkO10E4Jn3Y?cJbdO@Km7B<8a1+Xb'\d,p5CEc%_26=*`B7`DWrWSc+3e;M?KgH)X8.-.T#[9MnH2g-4t2OMH6LIA9gqF@a-qsA?67R[J`SVo'Gak_:LE7/K9m`\4&pS\W2fZ(/[AAN%$qe(YWXS/.H-en6B.SZt<sgrSUI@(3NBsO42QjPheX!:**c/8Rk([.:=*["p1_VNG'Lou-ba,.sDQ/sc3tk;2f#rXcfN':XI!n0"%%5)oV5AH!BIk)E]q72RYd$B.[h5`ZGCn.Et-?(-Bm(9/?hYA>oj(L[E(!_m0+."4b(GBu%l[i-c69mBL3K`'S9u[F6#Ft^6G*G.Y%(m7%F=cQ4R8#-B1Mmpe3^[rZ(1No<%*iQ0"fY$>$`1Zb)>^(8R@G(`caE%_QR[j[Tol/,X[*`pnl@C`OU'JOD"m;dAl0r,6R=UN`%3+r#.EBQ^&*B&Z*q!G@750Be]n4K,%2dMG;d)"=gT:8CY?;<*!"PX4Q^Y%2t]VY@`Nd#PVRIh\*QL&_32\MfuYV!1j%1Q!*O,9&%%RkmLjojDP5o&Xn(Bu.,%fu('=XtTj>c30RB%ErJ*ATLJgqm3Oi+\FO(XfqK[k=uL#f;Ym-T#0jQeN1*EgCBB/-<a]0:**0."iJg<%Y`O^N,I0jPVW+<ZmiKZ'U!,upNn!e#Jj&ZGnb_<VJA)DKkE&++3$YU^I2<[V7@4mt@s9ZunW<M8lnV5aJ*7]mq@3Ve4.-[7]ra]0%+$C%UD;R\CRG/ds0\jC"MM@NRq/T/Kb<%eU*&sK1$gdQqagNFbp[^o2Z3X#T/2#@*C6R$YT+ktKG@6E1on9stm*T888PjdNP.Or/%NmR5=)U`G4cZ]oJ/oP>M0p'Z*Y3[L2<$h3PIRZLY`cSM2`u@0RcN[LjPj;N63\j'S'2njlK&i]ST[Fh3kYo5IooI32nLA0!cHIBp%-*.G8nZ<((c&DAR$e<Jn#WF8'/"o=.\9<-bo_a$*Y=;*SFJQR%><LF'jluEB>/Bh3[4S<P8SqF%lbK>?;;`,EFIgoVS2DQ@Q)"q0%4&bJqAX+%m!R>;>=tEuOL;fqu)',Bl]ttde6*ug]1>U4BoI!2O\R$67XN6h*j)p#U.'#PG:8ZV&IbqGPDCrY(:%AXQ)3E>-"`A)T%HdWX),\$101_Fs/2]mqQl<:T7>q!7=?"5L:C*=GL.:&4FeU2g-s.+J5I/.`J0@emRDLZCO]s*TSB(D;MX1Xq6&1i,KQd&sC#)]%W%P98/FfFPd_JBZ3th!KL`k!Uin12nqHhCUDmStFs--qOYYB_$>:faA8H'Q3-C!2!of@<@E2"D'\?JX$d`'fF<EP0M,j`pO>W8'\I&%pg,q!,qiX'G/).UMpu]WF`D^V=dr+/O72nMjho1-D"[QWO?(N+ChG+n':7MHRq7LUl'N"WnaHlaW*X3u)PM0,V(p5>H85dkZZ@>J%/^jS/X))DOGq^PN,9=GcY0qU0"M+^&f,`e,+>l=mpt)F3cRpkpF9Z[9]q4?0V?`qiPh'+H>5T&0/m0Dj]>!E?#<9rohtN4n4$e$r%"$88Gr@%#>ft+"3e+SmQ1#N7foLsjhAP"W>67?k1HW-\hnQ<($U]7.594TTM*V<46H8MjnfLR@O8-`n@0>F&\\=2mmLH=c,`L]=c%hVBWPFn=;P+;^.\clgM<(MiA*#(?dT@`L,A:uT1A%g4PO(C%smUEJHA?(?WrP7&Os<Yr<NnEqdCH,1lqmH+[9[XfJ?7R$8;q;:$M%"b_)t6!<J[K_hR3-\Wc`Y/7KN)brQT1Nj8Iq9$BPkUbN./00_4I44[01.%0P]WbnQUf0#5q`Za]90TE+:BSGDi,h2/QO=/hY,$[r%/pZ4NqPsmOPa>XHBRMg$3&!?.h]:rbae#\\PO]BhFAH#u=*nP4'-QKF;SnTWG[MB'$_hRH[iC:Lm`jPU:Aa@0RA".J1+jP`;jlX*%D;`W`aFf<uC#]9(AO=I@g>*HE'-.hbh%Y0XWni\mrGDto,2;I_f^G]AV*B;I't`99ks.kC;j-3)hM.4MeX^<k&R<ebjYt0L1A>We%3n5N/_!S/QnE>&uE\E.TZRQK?dQLO8ZDGS?j?Zn^>fM3HeMT?E-S.-@#?=EV[B==Hg5Id/aEL)O.M)7If2JCKKmn"\-9M6<Y/hn@%;u5kNfLWMrlmPC;4u5l.dU6]/Eo58s6[\74PM00,bMkkeH<+,2SY$4'G1*`nN"Eb4aIenY&X$2)k_ddp\&(T1@h$V/6`!hLq</RF%-.N>=^[S;3`hg)[-!utC0bG_$"<*FPiM[[/&<su4]F%8%+'tKF/"K'H\I*"UUS@lkO&723p;iIPQ+eopQhgJ6<VstQntknX=(M4E%<]XMmUZL?`I[Lt^'j?TuAE^kFOL4,I8M::Mb/!\71qaa3<?a7^O;<h4`gVh*Lb2VAQ-',7X3pF;ADf?]fo&>86DdY+TJF,!#ho#>%iPG#6<nZUlB!l^k%lRQR8=OUR>HM=gLNP_H#[,uD0g)2rKoQR^&%G!kL4'h8_e;9QYW>^^ADkYF@5J%ob(bWU6.qQ%"&0VsNT#uW%6*+9?>d^`FV6ij)r^"Y;:FSE7cF_<WKbQ`IX^i!F=@me^5MVuBr-B5k1ap[[7bQ:0-%kF(^bfYd7EhM=0NP$S9u\S"Xk#Q4ODZ,G%>2oKhEuF+3l;+LWLR8n.a_4f87B"a?-T!AiOnGP)PX.N4WFV)oA@3,c(3;l7f"#dGS#Wtbp1bUnMp)X:aae3=`b+B=;o^?_Y]jug%T+)1(iSj.fkVtg%>0E9-dHUYt8EamhC7%*'8Q]F_WSMOR75g;::[N7D-XQKQo/YWTg`83+JV@q,.iqg6IH5#PaN0]r4K7Gq)6`"j%naU[<hLgiN:T(D8&ZAr2eJX%G#ALAdaQerdOO`<\TQnQCP&+-O?Dha*nPV9jQ$tO;ZZ%-1bW<NM@@+UEo4(k`kJr`OPIU=n.R-.@%Xtgo'#IoX!7]QQuXu@G,VTH?jAo!#8Vd@d>N?RHFU(X7^H"08/1&!C!%e?0O?QG*%W@o2I'\]5k?I#`o?guoY*ZbK=;d?XriZoZd%PD9?OUS;5+I23Tk\Csik"P#1\+V)Q%rQQm-nV_GA4pL(0]D^QnnY)MYC2@o<ZC6ZC>kR[rN/(UY@K,^dR^kJGZ<(_tiTaH)^3=Kt%^5b0;6-K8!O'b49>[Wa6oYdLQs/rjFinlm=S[&n3Ad<?hr4C<uP^3o&%h8o:*DTNT%t36qda2-:R2t`83d]N?rB;=U(N\?)HnP#<%m-9l2+<inZ<JnuqSgQ*Gnh=14'lN56*Ur;nXjDg9%h%CXc\\9Zo%q_gKO7HHZNX5*>p^pOF.S&1Qb.Gj[5;[`m?;@`fQEV9gck.q%]bm0o'@M!!UcL_?>dJD/"BF:L;s>.PYnL)ZcVKgd<d!='<Sd7F?![b3:t7]nPqMrl-`E@2pS;S`KY%d(T$<S(jNE0.YEsXCQ*3DO%W.X<e9`DV">0agRYI]='p+J]1dFWWk*=O7LTkK[<Lsg4.03nIG>Bb&%]hCI^BDtl<Sgdpq$ft9hqS%<@I^Qqr]X*]>O1Lb61ZET%%h+sgQS.XB6d/[I94<kK1\H;15q7lrHf7WC\q\O@P.]rb)"aTZ&q63EH]HU^2gDp^4=56:n!V[?-eL$2@[SY2/b$q]FX49d`q?P);%p?,][9`D`BANmeJYiOYJFWJ!p^2P83$aC9<pVBtI(Q/EKmV"TDM^9TVpPCsOG6\d\L)V'rU<hL'fk\GFTh8$u0oD'B_uWF4:=)\;%Sf;g-@^3FYJ)Pmj!!$-\h628*`U@16iihum]C;HMs7aX-r8=@:O$EJ[qRL12pptfYr:]_Xs7FichKeY'cTh@arVYH`rmAcodc&Ri%l$N8nIXY%;<[K/#r9!17]`&!4RJs%Tl1`MT?MJ7qT+[o@P,IJAn]mK8A=0!CHr&Q](#Q2qs-]1&,<,6TFk:A1s//im`ZK^'qB'>L%s7"4XrbeS8qOG.'iZAW=<S>4[oD\f(9=V5U*>H'XkLk*?I-*q?X)t:BECiO#:rF.\7jIF`="k]c,pUfjo\Hh>4(2g2ltRNC'fGnn%G29\%>UA!V/*SBJaSe81;#1H-bu!%/#_\CPfU*rE`NZbTVXu,0SGeP_RZB=YTk$->_'T-^3);V29QVKG2Asu#[,V9g-dlmrDOj>1%9f.#;m5VZ1M6u#jE[T:qPN\RY;_B&3)RSDtLL5N(\*$jEU#FGh!TROjYJ9Y]a8^/XP[TaEo)ElSo@9`IZebGT07;`tYQ*pdT,]F8%4\9mRo8>8NrNi-qN.q_)`.s(=)uJOmo9CtYq,,&'rmPh"GX.`?IdgYC`uf[^pnii:VXrGcor6*hgV@=Lh+ui2]a[(n?fjBFA5A36%lS7;n`]'lHJ"_AHdD'j1Ir]iujtXlo+5Ynil_Jpq[f5@[HH]mD&Xgm<=f#EUT:B5KH-A9IVr_]\od?Zh@ift+_.i`!@K"=4opDY7%PLK(cp\L*&lS21<`grFa\^mCC?B9*+%CM)BnibV$PLJhP<r@"WVr`!*YPh_G.ouRh)Q2\LYmpclD;r*#NW9%Zz5f2*G"MoUA%'T!%YT`iJj0,dG0V!jU\h[)4=nj<_:mtr%_4lr@?J[d?K,B$?4Tm5"V$sG`X5l)4DcMs(-A)U[E5VO+q_#s`<zzz%z!!!"L[t8cda9;S5B%)cq'*/*iCteQt/HESU9fjC?#69"TBubi<!<@$rm<[D4!8u,!*=o@X!5.!ll_2N&J2\EPF:/)Q$8-6$%!'D%,O;n8i(d.Hpa,b@?1B=*HGcFF'WW+dp)BJmO1\fo6ht;Ks_=rP"H5HX4p>W@S'Mm7<!W]SLO#7aEe8mYNJG/"Xeo73j/IDL)%)GZpPoW<%ZPPY"iqR7LD_jOI(4:P&XdI\9&CHoJHJ(I9fE$c;"O,MJ"1d..!OI7\`<H'9"!)J6rB/DcK/[NpsiCk^$*XAUhBR9#$%=IbZfB2Scg4AMNroMjr%C&)]p'`cP=oGLA!3PKH95+G1JJ29057[$dBXB'=E5+G1JJ29057["SeSAo:=E$c;"g=SMdaltUM9`9%$%kDo!E72(3[^rcOd5TB?65UZ-Po,aG,k%-e*KDf2=#M,)(-\MA*Ns#*l!.]+J1oRSYO?ij%3AA_]5Q^P;c@G_1!#i\"C$Rn%^-D\P%*N.5!lSP8!!49SuK<9cIH3$io]*Fl-pBpsDJ\)/X"ns2A^qecYc3'Vh:'YY&j++idk[ZA+n@2j9$Zmk#ds-8Ep'*PeHJd!iIeh[S%g@["pG/qn]:p9of&'N9N0*(AFcB)cDH^FhI*SAF]JaF0Pc2l[+$.t1=i#F_?KRpII!-"N)03>)Z!I-^fGs$Us+TRQnVp8d]4r]$m%V\@ZhETRpZ%c70<fBJ\gJ#.WVJPM+VV3BonM<Wctd.ZfR5PQY].Jq:LZ/<u$qZf275IW/[qubbBh[/=_bdV[`qK>J[DJ/%r-CqB$%J9@U38`*:!DnDb#n+!jTJ&)&Lc:[!'4hg<@T&/AUnqVV4kd9u1>N=J`)"e^&`c2+W`tFr/^2IM/gD.&?]shjmZW$!@XjUqJqmOJQ%S[#J]l>9_&`P/TH3\>d;VYE>4:7oF9k?Kb\/e.h0_7=Whd:qk"mdY.<T&]b$k<)NTkN+lkSX-uL+'>#1555&ec[j+ss,TgNV=/KG%\(u>0qg-uXrYjQfoJgqrqR0%EgRY7P'<dtph.nB@hA4g:Vk'-GgR6*bKA3N3J2YGN3\>d7/\^Vt@uVM`FcHQ6AS:56oPN4T[QBO)%kM=F!1RR3@SPDi8G)ibi3.7[K\%_B,lJGt4hfeXqh;d7(FB\OLH[MC&kqd/t@kXR?B+2H[na/.o/UcA6^/!YZR5U+;6fF8HcC5I(%:8?:d[pA%[,YjtGo9ctY:<V8Wna/.o/UcA.^/!YZR5U+SAqe_)[<m9_ND<.(G)NP&3.7[K;oQpoq:\!GSOTNRDnEs>8Xqunjsg1;%:<V8Wna/.o/Uc@s^/!YZR5Rih#*RI+[<m9_ND<.(kDla03.7[KF.@gB[!_6^hbKrqde>c^CPDde.Xg?FcEqlf1Q\,mYMJ6nBlmPT%5%f7W^%"M<"98E%z!!)4brZ;+?zzzzzzzzzzzzzz%!!!!pL"ACj]#s+!3S48CbF;[kSrq?g\QV.'Ffi4VmSq.?N!4U68207f`'_704:u_n\O*QS0,fWoV!jVGn&UD?(*c%GQ@:?5=4H_X%flc?/F-TuLY,&[Z^qIMG\p"<ld%!AS68:^IhTk2c$RK+?i\9TQT6'faq=b5_q=MhGP'_]/FlX&-_MMAGj:9Odr-MS66!l#QNk8*B%M,;P>MSt=Or>Q\?UX+XdMLXFo,"s[V?392)KK=.!]puT3\YJQq;+rP/g0aV^c[@q`zzzzzzz%zzzzz!!!"BH1u)]J+<Ef^\B>X$NL/,zD]8ZOrI:I;aU^SXrqN6!Vk70/z!!!#'K<MoM`G\!@%oM8hBkFEF(qu"o-e'A!oz!:ZlTqF;XZ8r#oDV!mPTqY@[5!WW3#z/$)E<^A,t!5C*22r\OLG5L]'%z!!&[_d2Tj!%a#O,"z!76`Cm5'sp7fr_kzJ9KtD07Ct3494?q!9t$oz!!(`4moQRi9[@W8E^QHtG>BLuz!!&[uTk?*prkCZK%s7'0os'bX$&&8&/mq->hoJq&,dD*HDn,WLhzTG@J!qYD_7IJb2=:DkJc0E5rL2d_!U0ED.RzD^YSWKeL+6omcr4PG?*n%-OK6\IdtC\J+h?`d;T*dz!5Jp#6c1R+qtYaAcW@jYj[Tc8qG5#&i;ioYzJ<Tp#KCAY$rnr.>2a%QLz!'k2ffP;m2%[2&lFz!9dZ/bLYdSD0>mZz!1h;CS4WDoB<)%5z!8\.@rS#k1r;Q@Br_!2O_7./K:$UVC*:Z_b+8tL.:<+.Nz%!:[Z!kP,")ng?Zs./W%c5+Hf=^[G7)s6PDG![$:V^[%\C:<"(Mz!:YC2\pIc]p@D)[o[S0BH1AMm5Q*D:m"BlWI-F968][S(%3@US!nHAmmz4>3mfoPq!TGk=H$T)PRYSat*@S<hJ-rr<$!zcc=2HjGVpnr0,aL$"``^rCjtM_EXr<>/"&9!rr<$!!!!]%++!n]B#c2n2*Pt_^;h:M!<<*"!!!!?#GZ]Kc0QO!b'dMibP.D$jT#8\zc=:I)DqE:l.JnOo3%a#tSSJ3*z!-fLI3Qq%W%@j<pUc==<BT@5bOhd`0@%0-A.!!!#'%UET>__47Oq]C=\qB'>LWB7FD$)d`CRSJboz!!&R?PP7rVD6TT6z!5RXbe93F7%#4-4-z!-im1O6#>Po?dO<zG^OIkjPtc;C]FG8!!!"D3mdnM(5rn-z!-igo:Wb]%T+:o%!!!"LV[)q^c@BsPz%!!%7-E:.]24NDlEz!!!#=\%_CW(VbIuMndWR^cp*ez!!(?gB-7.DrnhU2^A?W*]ZL*;p%;CB*j;2?%KHJ/!!!![NPkS2%(Vft&:Oi(6?bko=X[)RRli6hG-V'(fcRfJ(z!$/sY^AR(/^]")Fs!Kuer7n$Z'i7%kI8[`[z!!"(4++E]bs2Q4/0DO=C%]M1Yhz!!#+j=AsGaYkA5#z^uGOOO2hD^8cShk!!!!]/i]Wln\J@Kz!!#+k?[_+.(Ou5AB7Kg=Y?q7Hlp#LapNO@D%V<8W)Xe>N`HEjE`^JTC]z!!&UG&+AuErUEB":-Z3-mDOL's5,3=?`j>!F3=Raz!&0228c8#J:]KeImWi\Ig&e:0hgYRh%T<NJBz!5P'kl1!npYCH1amCD=l#H/]B5+Ysgz!!%OlkfI,Fq=uDA=!f8d>EicS`h2Ms-^au8znE/-_rHX@fz%!!%98l/[7ofRF,+z^me,tg;i6D"98E%!!!#U*]ig2@iA\mn)ou=z!.`,Jh628*`U@16iihum-\2!+h/lhJ!<<*"!!$64%prO%1b'(q@Pb#<Zdn0:oG$9>!zk]?t)P-;Uk:.Nr@^n.DZd^N0G1B7CT!!#ie"4deA@c?+Kc:QngLbA`.!!#9^UV<qnD83gg%pX=4bqS)@e"TSN&!9eOsqKm-r^E<DY7]3*OgDXE!z@(\/UD;:b;I7P!AQG.9IHiX3I!!#&#1OJZ$c&TM:m,P4rC$GN'`>8LS%!!!"$]79?f3q!p[9fCF6l2*BX(B=F8!8q^JSmD5K?[h^X5Q9s@5Ks*?GCMQ@Z_l'J4,a+:NJ@It3$$mOUXRZ#h;\kCz)#no1%rKY\mrf?BC%$Q@2s0nJeY<HNb!m_J9:8?:dpGq7Az!+*>5V_<GV`NT=-Vk4q\/j2dNL\$EWIf6UFreuU/*'A@k4,m!.hrg"Q%z!+<a#L0slPoDef^YC-/hNuAN$T8#_NHVU.^^7@`kV/Nua(B=F8!!"^%pq_1Q++Ndni0tdB<SC$1[tT"RBrC'*z!:]c)%cL&%uJiS!el*U)"\+g")z`ad[+[&XWDCa#=Be'b^2isPhe!!!!9O)]nQ4.eBb1TO]We'b^risPhe!!)L8o'Y,Dro3[UJ+6V:%f*T1aNGh_pr^-XnUOVYPhbKrqd^S&m$NL/,!:V=%mlLKj%mJ/8pnJ@tSat+k]@0!W^OOj,q:\!GSOTNRD`buUzi(_,@h=KX8%T7?\bH@PbZ56(9$oWo51RGG&a([@WVo!Ngl4,m!.hfau4z^miF2++7BE*?KWk^8HJFB;bZK)Q2\4p\8nMSX."W(gd7C!!%O.%NKo@B(VfeA-a/4;S`jGWR==UXIno%2I-i!4:8?:d\)$$Ozn>;o2s(Sn`pJh)?Vr_^gpi[RHQG2`!?N:'+!.[!?UO=W:m'h8_%I4n@=fC&1r1cd4:gEF92zD]36]a`d'GS[*IJMUV.(H[Io7:.sL-N\:A4!!'g(#X+N?T)WQd`m4Cf<r@"WVr_^gpi[RHQG1Z_%?N:'+!.]7P&&8&/msk8cl[P<#Vs_dkE9VEkrGrmTj_OVcFrHp;^<[hW-]05N!!!"L.8Ja[#69#G_0QRk!!!#Q%G5q+!3?76)ZTj<%!4479Nsbqq"e:VX!!!"LFp7W;!!(6Y4Z39?!!$\VcsHeRk^e!iz]I@5q#lm3ulq[cb!!'g(!pkC;!,?J5#QOi)!8]PO:+H<0%%do5Y!!!#7S&VqOn]_lbJ,P;?d(]R2c3EqBzhF'R)pcn?LG'!9*kEZ2MclW,Np%;BW]l<r*EW?(>!!$-[E.7>rYCH8pTDd4T%E;CFPJ3iLR?iS_R5<2nPH>ZR[z%/J&4^\m*#TE"Zc`.s)>>8.'&RmH?D>!LA[!WW3#!2*Wni<S95J,I.WK$Q"R!2)J@*<?-?%!.]4sF0GWE1U*/Q!!!"LFp36S!<?/OboHca!!(^bS7r*+YQN0?"98E%5eHQA?[h^X5Q9s@5Ks*?GCQObM$!b7:2'I#jkO<nn@.SH%(B=F8!5L3/hVZ*Fj,ZBoIVq.G!0>$IIfJ:Q^L+,Bo5i(Uzn6"$tgu!PZl(<C[4jP\e!5N#V\c2!ZTDf.4YlFb(!-m6I*?KY!%ooD;>4guC2!,&"eR[3F*Q3.*e!!(r^TdLlZk3&AL?C@1.DG^B6%RJ8o/_;u($ig8-!1a2f56/>Z@%IE"!!!"i$MLG!n90?\U]:Ap%!9dBi:CP%.&'k+R!!!!aVh9%t!I1rEjd2:nkEZ2M!!!#W\Tmja?[qVCf>%)2r<iUMZU"<iz^cDo)D`YBu(B=F8!1aPbB`NDL%JNXGB!!!![)4Z$X^tSn84TbZa!'ho`qe6%THbfS:zkVUZd!T<>Io+V0)!!)4.YYPFQ[hJ*U"TSN&5UQPY@K>7kE:*r2!!!![%!Sl!+^tT=DB*SD:nGh6)QXA";1VFms#mcQ%fp7FV.`k.Pg@"N<HgPqpfWoS0/N5;[P:3PN_4ZLr-:O.#)K7']ABRH"66d!m;6m$#%#%IaX@"]o[6B#cB/.Z15^QGVlZ7c#ZW%.Sfq(DR?U!ho4B4'6O?15AkB<Mc[Y4D"MDnQ,,>K7iBmU&0G"0CG_YeO$3VKREDn_j@?%V\]=5!!&\]rTi)(J)fZeY&??A!.`lJa,@ufnAGtNCcWR:zKhpNGcb\ANI/0$t+9'Q_P6(a:EZY&M_Zt+pqXU[$2ZNgX!!'Ha%nE$hn]Q<Dj^VBg*HT.K0!5OmenU][&`<uYG!!%OdjJD$hpskk[s2]";*<:WW">KrX!!!#R%b>"g!9\oG\GuU0!8&$ZPm7;Z"Rk+H%!!!",f>*tI!.Z-WN<fLa!.\A8$_R=o_=*CkrtG>6!%])-!rr<$!:1p)Q8el;kCmQ?H19uM^@7+VVZQo!!!(qP\GF/t*P?IZ[6N%4%_uTjgTQot\>He!fiWB/\!!'gCF8WA6cTUsBUS$Cb3WK07"iUY&&"?<!z^dmqNYC6B-2ns\#(d";i!)>k#J`6dN#ljr*!.\nh%itVR0mD-:<z[Me:$!!%3EoVhfj!!(Y@nGY'@i(h*P+ohTC!8'bShe(TWH.2!X!:0pBmi;B.!!(cn]5PFR_0^)@IsASTFPQ97%B'Jc.HG/@2^@X85H3*g9geE.-M"Z0ef`V9T!!$+?GOjS']32nfGPhI9A?<DViV<i]!!!#mS_Li%F142W]Z1,ia(O5q%I_C=!!!",%.=BYEBHLkO,j_uE^rKs@m1&r\!<<*"?n%W?*Li,eh$SNG#CsF!h<b[/SH/]j!5R#B3WAiMo+I"[!4[+$h;5B=zJ>L][<7[`b%KC/nn4(I+6%Jij#!!!!MQ1@-/"8CW\QM:=IIPLo4B3kCLXLnE4zlmfC2lS!_bij[M3]h[o=$c#9=cL9er]DVd2!!!#c+qK.b%ZNn6,If7UbEufYeF.]ArrJ>t)!9UApIB:'Z!WW3#!.]]S2fAWUnK0m`_ulK(#6<N$pTIr=5IZjBRna1gz36`]*Ie_jg='pFL%;tj\o1B>^Qg;hs_I/0$t+9'Q_P6(^a!!!![m_AMQK6M53qY/sl?eKO!!8)UrSPX[,Foq^E!!!#-K9r20iE'q]s!+l7F9&NqTZmH:%!!!"8%p3lWi9nFf9`P.n!.aG:mfid]n\I;#z!1O4?3!&Nj^g;QlzRtJF^rpH7o]`6hm`uj1+?U!l[qL1I*97d#3r;I2\%a8=AXz!5S=!_DBM#q"#;/pr92[!Pi::J,f3AI/REEIJ2Q73ZS2#!!!",4j]YjDf<>_a/`SFd\`30^kG.)rm%Xtrd\XFz%!;j`6O$*:'j.G.TDU[hMi1_AZ-\(#q3WK-[!!'f\Tq.a'o;brQ^\bFBD`T<I>SuPZjQG1;$ig8-!+8%-GRs-sR(!.t!!!!M"6ad@%^&i^/z^bW_&dpO964r=8"!!!#B!rLc)I=qHcr-HiVz[[@@bo@\cR*P_Sdq?as?;uCpikl>*s+?kF+!TOUh^dUTUJ%tdK%Mr2Bq$c,#Wk;6T(^isA+^4>_X!8sS"miOZ2hgNjeK:N89dsuiLn'cf8!94Lg^dZ]?'8:jW^oi<<cbR8Hp^D<dN&L_:(WFMbH/SQ)%@$e_(Btuobp^D<`N&L_:(WC[i"QMhQMkGP&9*"K"llm9b!!"X7O*^4%r=7I;TORsp!V%&o)AmAm!%s/`]l/f&XMHN?pSYij5^WdJ%"NDA\J;`J`^>F\DE5A]-mh(/JJbTXs"cPA?!-\h<NVMq2DnQ,,>K7iBmU&0GKA3Mbd,4)t41sGIFFO;A`Oc!cJ:.Lh)/KqE2ZNgo%c1eDK^]0:_5Il62pWWAYr!-"[n\A_m'.ec1pbMpI"QD5I-nsKX!*geA]'#Z;[t"5E.uumlSP-NN,N!tFi9aTQI[0=/^q.'mIg0;Q%5^WbP$-!naJ;Yb%q'u^=h"p^4n%\VR$b['VTC,)@"5oo`/:Rk3T0Rc.QN>)F!.^!iV<<@'eXOnbaR&ad!$L38!8JT.1Z5RSGQRqb%O^.OI#1h)9AV)d#!:CiFB5j8H]E&#BBJ)o(MK^&U-@hC#JD5_O$oS.+)ZYDHjs'L)_-U)K;ddoj!'V=>B<Wg=h>dQJ4SY>j*rPI$%ofppOFmt+2I@dV9-i1B5f3<HJ_03*NrX?S+JbTZAL2E!tn7M`E)u>lg07NiY[sn>9$f>(<p"'(YhA;c/k.u2;Dk6\-gVkf?1B@:T%i\S)CFs0&eT)mS=Y(#n6#OgGom18i;gu$t7m>po:3j,s[n#Oq1esX6pjVM_L]Ah-:lk>3$i(hpip^DWV?oL+Fg!/]OHK<ILe,Rlm%qL)Z$>;tkCh`@nF[YnG^B)qW3`+O$NFt#VmT)mRr^AG=A+8k8&Y8ilL6g,or:A/g8Dr%KVI@p.X@(Y&KIg0;Q5^WbX`NI0mpbMo^%_g1Y8j2Qr!C9Qqu+3(G[_63Vj!;coY1H::uNR.*,!-X!UH4KdkT''GBF4GE2&,N$VB:&Q7J:.Lh)4Y6(j"pTNJF2KBn%[]GH["e%%TC,HWGP^eMphmG(rX?S+JbTY"G!/%,T)mS^B\u22?gshN\XWO0n)Sf\B&2^hI_EA:556o6qZPn7.-s<KL-GcZ\^6lHh)F6di4ZU[%5J5f:3pq0,"REeY]%M1S0.EBKA^g=12)G:s5%q_.c][Q0rX?U(Zd/#-J[<2hb2iYR"p!EfLsMCmiq(+kIg/OMmf?ZEd(s$@n7Ma:%SV$Wa\KF(C/F[9PY[>jJK)J:o+8@Vli(cOb^3gKa0+Rb5!;N_:7=fmK2Zrsq!,t"2T/Ql3o>L]Z#,$P@Y[.mM2[fO$!,s!8c^P+.%H+h"c!B:O[>HSK!?f+!8B)o_M+?j]b`96doIg4gfGe\&Xi'#0K!<*B,3!nU9G(BA#*oP?ES.G;or8cf5Mq\@3)$&$9pq/a45(@V2%cN'K](I%ThKAR]ar[7OKmN.VMG(KJi!#,tT[L:U*-NiH8^dn"9c(@,tK.!78@+4AmA\NZmqYdrEYAZHB!<*B,R"P1H4Wlq<Eo>7D%SBW;9Ie_jg='pFL;tjZYP"u.EhqPnnq3=Glrm%C)Z=r1B!.^7U5&U[^cg(W2%)?TF^\?T;GAdBUpYj;&flU-c!\-\i:F]Fbq7rU'%!9\q.]NGf<f*hKoJ2o8Gs22%sI/ZWJe*5L4:o9]aAIee9-kIU]#KhMoTM,@t0ZUpFYSOVai6MCRgO].4)%`Dn#5BtScsg<<cjX86%n7Ma:SV$Wa\KF(C/F[;VFKfDt`Ikj0/e@_5!8q`[I(h]ST._8\1KZ+;giqYl]5PFRrd/Q(IsASTq7$t)^#(hL*`Ob9;LZYNIHfuj%Vg%$L56ClmG8$StDG^62(CT6o`s;SP_"r<7R:dT=q26nRA(0\p-L_K*h$*cd^j^q2]Xo:MT*G9'_"s]]K&>F2m>k>`pn^\4ALjEo%Gj!XnJ&#79D?>:l@"1IihJEgrkJ3\j=?fSEo'!!4Is1Fo9rDJ?TQ6^rfQ90i`s;SP^j^n1]_`g82rN!^X<6.fj#=`!jnQGpqtd1R%Z;E%M<"@P`A@I+S"0d7t548`4cN="^J;[q%m0doW^KA'3"0bQD549:\O3d<.!%sih56o1!nGQk=rX?S+JbZm-/3,o3T)lHHQMS<6%hHSc2QKlcrlk>3$qoMar1]/,@b@?D+$;u=%hj[@G=?fINB)qW3`97)1M=DJ_$oZ4[TD@iimuCcT1]:P[9?SunV#2jII[?@-!;;8G%[9r!=^Hm=bVP3hX07NiY\!HTUW$SU9/Eo6(n7Ma:/qNf1^FV*'_k4cB.!j2Em^mBLqFBaRQVkNeB)o`MJG?dL/2]W/T>@DgpZ5Mo%4r)_*A3'=p[/9t*G*f&EX/4p%Be6B8Q]U*AkN)X,qnA[^p5<9Yr@T\:!.`m:C%5qPq-=n3X5A?On$[:Dq<r)\KYIgdX5Bc8(BC\O%/1k0[/\aqgC%]*Aq:u3<l8dN]4tjlr_8apgGA6jV!:2=2McWQpn'Y<ArU+0E\"29e^U8"K[4UKg[6%r6ot.U/!W[D1V8]L3j`bDi%Xa^!r^Uq:PHk0q`p)h6IT2)`"qH[9R!<BaTdc/g*o"-`E<knNrhb?C`ah@T6)t1Q9f("O)qj3B@i-'04qE#^ALY$mFmXLY+424Eu%C%]*FquQkAQ_h[%?-)L):LADdnbM4M$h_,'J%h^pmMt-!If97)DZ8_nA_o6#n*qJ^n\bNrH-a>So"-`E<kh;N0*#C(=^&IA>(2gX%dcu%?q:u3<FjE2UDu]Ci<uueb4-t!&8&"rk_:u0-r$pNH'3o^0Qc@J=GA6jV!:2=2McWQpn'Y<ArGF[2]0c;`<t=)tp$:MmJ+(&e%H69^^h1tF-8M2O.94M]/]<qJ;!-X^*`N,isGA/V1I^^W<]>@4es7!'JTDt&,om>ICgQ\"P@@PCRrX8c,NGXObLsP"CZ;"oA1k4?c%/p\#;D/0lRo<+FVeaLrW$NSgbQ56ZiQJ\OD[//Uer9an.V:F=$9e!H+lX=N#]<qJ;!-X^*`N,isGA/V1I^_2L]>@#'WNaWoIp`eD%:X7DRGA6jV!:2=2McWQpn'Y<ArGH\*07jEno@\cR*P_SdqRI*Mn@?lop&7?D\++e!T&6BL[/+'3IK9G\bL5D#Y2jdY(L&#o;SPlp%kDOl)4o1'Y^\Fq'^\GZ)eoeZKJ'7J<B:aBfSa"o&r%<u*eaLrW$NSgbQ56ZiQJ\OD[//V@r2uNi?i8?g41APn"+AMf\$o]@,Q5?:%l`L&2[WK3*VJk5\]/5gS^Iua'!+:"R>.e$BI[A(&l??J(HP%7tm,i@b4n@g7l2TuqrP#H#XdaI2Dqjlq1mV1W9?Ssg@!>aW]NSKf%Qc@J=G8p.cDSH"UY93])=0EU1*>[idrD*'/>]8H"4+5kThkdTbqH[9R!<BaTdc/g*o"-`E<kmCThfX!HH9Q5W?<7'VS\Asen'Y<A%r@T\:!.`m:C%5qPq-=n3X5@d9mmZ_Cc](-6o<6>b%^k`sD0p_u`mX-rC&%o4ln1qh=%ga*dTB]ODF8m)c0a@(]%ctDf(K$iS[.\U%D0p_u`mX-rC&%o4ln1qh=%ga*dTB]ODE>NK!UUOjqltS!0mBsrgmq\gh5i\dgRd<!Z*a@5>(-JP]?AX^e^F$#1mV1WS':?Wn@tTA%l>uF-Fo:4crk83k)^!jQ:.9Z1j48@dFgLN.D0p_u`mX-rC&%o4ln1qh=%ga*dTB]Odf#2UqU3i^a=ke:/h*7izzz%zzzzzz!!'MorZ;+?zzzzzzzzzzzz%zzzzzzzzzzzzzzzzzzzz%zzzzzzzzzzzzzzzzzzzz%zzzzzzzzzzzzzzzzzzzz%zzzzzzzzzzzzzzzzzzzz%zzzzzzzzzzzzzzzzzzzz%zzzzzzzzz!!'6I4S7!-5P7g%p"9![48akP+$T>A^N':@J,diU4nlY1T0<)_LVoBq%rpuiR_c8o=F2\?5e^u<WH1Gn]n`o%;BXV^$2?e/ES8?9TH>^.H39,>:%\G`Yqno<As3kDfno+QaQ%/T+_e0JZia32?Q+tHjptP_-%r\IXTqk4n`<T@o.iq!,.KCq5RSLn*S@kr-6ZIt`^ZFP@T.qBN,^+!4%kY8KZ=&U#,[_t#5/#u%C`K[69bB`X/nPLGTb8-;c`"kSW%`0N+\X632C9\*Fk#?`Qi:&.+l0PQoCL!Hu*e&WuA8(jq,H7.=)_6@JX_+9H\)"kO]0Ts%UVo2(7IU^23r6uV^<?H%f>;>63NfPnD%=>!:66BI[^S"t<#Q1_Ll#>.lHY:5I$Q!s<A/O:#;F6f]8O:q(n3cRti?8".HGia$a*Zb73>habYf4dDtqS;co:NL,YRh&[9_-+=P%1L/-!IpDP\RDp[j9!%c-T!b?CWGt3TA+W[Aa]dRQP4:!HNu=\IC^Q2?2I6iV1Qk9VKf)IkEfTKGnNirCP/gt?po;;?[Fn4G]P:(A%=2d]JY[""<AXdV)P$$-hPr^d2;EqKR.b-U&f](p:AMR$;2iH7I)<:XnAAn$/ku1qLO^-T$b3<a,WYrh1e;DKS43Eu?kh-TF2.VV:%@S%_UB#WpBM(6=O=,2lr1f7%_a;0tX.i'oFYp>Mil,c^7gIA72GbDK7#,dJn#@@p\;K1[_&3n9Za3gsJ(bb'>&4b#_Y%T0ffdWPA%N>!<:,8Z6_3OL09o<W8_fNe&P:oX5E$WH!M-)9lMP2nPr*$fQUKe[:%-#^a\G])9qV^[U)f_G_MMPYS&4se8"@1^IYDorh3a4?j'%160>!aWfp$+di(&P::A"N.rq0=h,0Cl\NmYK9`=*lUD7)#K!Y>>am\;ZYY$4CH2Oq`SZsMD^^)36,N?ZE[.>EOE/5Y;mY9kRh*pR%3)4*EE.cFZEesY*NBq#c1gX@$[Me<0&iF&PR$=E:(_]EJB^t58Cc%g'>cJ^bXYJ>h@ZCRlcEf,tCiOIabp)?4rlNKI14r&Cca=Y3%7tUG!5obDq+M!KJnhDb"M$&4bG]pBS=raYoa`/UekqBBf"gQ`oiYB!+f.so#O>p\EVu!DL-/4qoNRiiFnsnA!R:EU%>27D\714AJ%-]W4ESQsU8EYkFING`]]>)M$;Cs%MPNXAN4hGO;=XZ&g@E\QJYPtb3N@EAlTcOI<c+6<!Q_?jR!E\jG0Jee%$hP&b*DF^.Kge3HA%:6$QJ.\1hO'QVH&doiK>EpQU#;7YrrYMG?UG`M#S]\\F:eN>*/9s-m!<]N95D]GQSY8/eEPX_^^ORnVt?el,OeF@6HE^)dF(CsBV%0rIT806\G!]Ak<]m5frg,H70p>t;'D@@20X.K>Hoo3C_2Y"7Xl*?pJ`*`Z5tg3oCQY&nfO4`Z@`\#?n[S`.F5,(ptXDkkTBfc8D2%ltn@FQ$h%"F.8YtI*(BL]%B!%@YsA5UCmON[W/ZphN5?Q1>&j$aXF&]'TC^jS2a<Qq(ft2:##/7H"\RkgeH.@\bA!G1^fk@7ib(>%:%]p<+de%*A;JNGFI.f%o8kMiGY'k0AbNf7Zf3!t<\6?()]@H([Q%,39NR,,b4B<#EkBN()b-eR+3!Im9nPK414]tA5mPA]SUtHk%[*9eKP.ZkS;7TNC;;uaklkQ;NKe5,TPk/q6MAcSV'W+T93)B)CPT/*hR%;Bt6'B4gKH.qkKEQF,:Hm<7i!^:T`#<bCl^S/m04*^k%[Ki;^,$T<1b:UnQ%eAOtY`]91N7?i8Oe]9.WqsO0;/:#JpbDK[3N=hRUg+p/4gI'-UgGju=fp??JlE<Uaa'PIK;8u!H.p\LErU!/%\6lZ*pc6bFS$"U%;-QVT']eMJ2?7[<rJ!"`;s&q0GjXS'(eFX6LO#[@IukgN4Xue(*dFs/R[aC2?^g_n,n?bk9k09>1\"Fr>,dHf%[4o27bO*:Y4A]b#m&i(h$#[t(H.8X&9%+e,['CutWj963VSr_AjdbC:I$04$eM:g%[t.1\PYnugh6T1TRo.f1-Hc9le3)p*mOXOp%C7E4jJSX9!hO8M&I'2+B#EkNMHGq`2aGXlq7OGTl?P5i'^MFbm-^XDR?`pp#jIo2-9H#O06_d,S"d.k<etu>MA(:*d0O>.;lVTD]%UOo-#L-,g'S86T.D0Cfb"?W)3*0TRG:4cLf]M$[o&<NcYLN]gG6#)?&MjO$UNQES'`Bb+o>,MtTW0`t..qnr@3#\ZV`>FSO@?<!:%NE="i$Wrn$*^gYEYH&%0&rTL.Bu&i*%UnMi8io.FF,Y;/WO[@%pOBKXdCd`pjMOmA51jpnA"KR&XZLafAXLd(V"_DS[qR)[ddbEb%cESP=lm6E-ObZ>f4J'Z3;n=DF;q#P;PEA^=%,B9_N-hTocElBGq,%fNW-!82Z%Y]E1's(?H+)gb,K&!c?!0?@:ab\RoTLlfTq%As%pKL.8?CK$$SSU6\ZmM?kj@1opRD+XXJon4W<Ct5Q:5A,!G3LJ*6jCd(TS6c$)J`:)V9fW$0&YZ>SKHo_NNbG*9l.qc<5tZo2!Kkf%r@JNoEkh$!RX4BO4GBmmW7>t[i(UGm$Q`grOq,ftN2et_jLjG<Wj^3$nt1&Qi!e(&'m5.'?DfbF5pJ`&3i7!]n$c&(Y)Wb9Z8BQ-%S`IGNX>o#Q\PD]@,7\1NN%@)MWTI!7.8TtWU.c==q0%V7@:BOTQs):,3hpCdS'.SkX4'JSfJ9d_ZEs'`1<IlucX29a-;5[dT8)_1%PHOW,&g(8^GE(<nbKt8JC2nNg4&7VV48!+LCrrBkc,KmMOh"nE</t-J9A(76dqkGLZJ:fT:s[<*O02COr%hPD);cB'1QuX3-;6JK%nkRN+9Zd'JPhX<;$a7([R3`ZFR<U44CjFr(q7JGk%?]e%A/TN\/b/V)/2Bc?!?dFl2$p6=[QsB99Of\`SZl\?$>e*YVJNNcfodp)%*DNG'NoI<->CmTJ/H$:+dG`;-%D47.[2!gtEgD^2'q5Rl5@E4T[cqa"ml=3)802L0KFK4d\aqE'lm=_CN5N^_@tl[Oa`o9/*+S&s%1_,_@B;VtHj.fSREC80!SNU@miOY0J;B+/[/?:TH7Hu/kQ)A0P+L4g7l'/"SMROnnf'6Fs)l5\C$/mnu\g2alauJ)bV)\Z;W]0(c%=5(P/eO!99"eM/OcEgP]76N,]*OY4pQ#18t3[#MS*AKM,.*E/f(>['k^#gR1&A;lFNr$&V^AU!omVTUgaVG\g%O)?=fb0JOk@f67%JfD[+!]<1<4VSEe<)9#0%J$+AZfJ4Gb#"F*:cU&*bSc=g))K4A:Ns8,^Qq>G_4PKnrbH##?KD[M@`p<%<hZg18qZo5G=_u>3S6@*%B?lVZj\dRr-6KZ1rU`^pDCao?'#+hr-9Whnf0)NBU#&[p\CoR;F`3HIC;)a<R^,1Q(0OjV$e1\!R[Ve2C/-i"nEU-5kKhf6!]AYc%IY!ppVK=&qqJ;oZNj]++1(Al,*Fi!'h%I-Ga(tVd2%<m?3+&H+hCr+pc.8Xcojljm9tB9nUQe,dZ8srKH+H:3k"^Z7Qu.:7gI,NS%>5G``1Du4[1a!`ZXkIf:c5*UYO5+YFj/%<lY"T(=jLjEFH<(M`Cl)))(X>^#?>d.h0lsndUN23N)YY3^&>iR$`cS>UZdgJlgQS2W%VAd@#REX4IkHT_)=J@M[rU*>>c(e21L2<muKX)FbQD>&@BX*d1H%rH%JU'AZVramEdVb2A'3TA--frMRRGPfGE-0acU3+=4H<^(O%.:QXn?]rO=U`mk\a9NSjP"et/Bm_^/#(tO&iah/`?o[d)=f@GRG^Yn6.M$3hTVC9r3CuL(<amr-=Z-FB4%<^T2OHc;C7#2cK\,^S%cL>86/cEk$m^@-md:Hp]Q9WJLl"/CUSE\VL//:R]R,k!Qn\C,?gW$#m4\TmbSTM7a(OVZUGV*,pX#<2iY`LN6dt+%IE]\]&3SC[m%DFiLOdt9SN[[3@11U*1U[[<4p@2R#[;(e0fLL+Z:/ST[CU!0BLR]&H1WD@_NWO_>2=pFXlV3pQ8]!ADOW[2!#?#/P4e^7PA>Got6%a4(HUd5Dp[kb*!5mT-jELIod$/V$mH0Zn'VZ:QRn)1=J#RQ.eGr*Rc#[N+?#4Ll(X.`D=8]#$)_RIYkl=NR9aS-RT5BuurMZq?;f%^Zn\,CQ5Y.:!&h!h$.UdI?Fe;4R&$b=_d([Rhe<#:bAMi\#q8tP%oj*ACk!F=a*BIVI=-UPpThE'M&nG:0UV5f?Vm8e8q\X`YmAi%XY%)CZG[T*<miKkN6PKFi_3L<D'?mN.8-rmaV27[/28D,n3nKEb*$SIUDl:+M4lBskW<@4TdbC@:[34oA*@ipCW[8Fpu"2E8[7p1%P'0f%QI*%;BKKc3V8s'6o,u0gb"F4a#BF'!!ZQL(8AX-Vaq@'_.i16X8M86BdA0N?OtF=Md47kqD)D1CYp`8NKuGZE=],[AZD9]U%PU4?5r;0H1SlV0(YrOkiPU.Zc8ujfmaq@&T2natp9<s6ZZ<*>/C'$;:aqD!R@Hs('`R9tsr@pFeTUV&NUa\qbO[`!E84t@(M8F$C%NF[sK?8ftT&qaLoP&&EhY)=JU+W!%HlD,`Z'ulri?US'a/sKJJ;PYUn<lJ>1Ua=".92#,VG\Q$]n0\"GG'$dA91t3W$.Y$G/_\<h%dLr>@6VUaI/ZcJHV'Xf,BcXBK9+7p?9r=,?ON#nI&eSgafk=LDZmFCg$[(gS-,n<39DX9C?=J":Wl[oT@[$->-&0n_<Abrj&ef;g%6BReZ1QjP2\]'sNBCZ[MF-\.D7:&;T:9uM:'(V^DFGm`KnD^qoFU9orErW!h.8@0NQ]Q9G6PX_M\#GHMF\/k1lB;,p;4!@jE;M*L%'"ZuA:[tHrKUP!I97(eQBgTLrj@l%$p@Hc[']#^:H?Dfap$*0)0l\2&]S,:?:Lg:U1%Z_b<iq7nKNcn?9W'P;O;lWtkt@rg#ZX)3%q@[Na@>pbkKR3`03djT)o_OaM.+Xa3Kgr5kU+bJ384EtU?UC<K<HWm!9QK9i\+.W*E]Pd+aaY2!O#)>Yp.er$BEFB60n(sM^kBA.%Lu=0+7"Y-^"=E1=WKW[in%H6,*Pq=cnn,):%[!&R,KS,B-8!=tmqH6.V'QgI9k_Z^6]^lZ0N48S>uU*T-2G1bD!I62P_.t$V^u9V%Q.]GCQ;GLY_03taegV;E8`+M%AP"t`-qibrP8QH!$2OK9MhFX.-!UeYG:T\US=;eIZCSr^%A_ND:ZTaLBhQP;-)qYr$+Z:ajdW8%%0so"8I&AQ1]gC,4oR06WQF*EE[Y1fJ<%K<K&o'/KQUbne/Kl45Ktje!/?QS1IV1l.3l?0f;jQLZq]$npaqF8sWCd6AAoq1a.SH_Q%A[/6`9?=T#VEo;Mj=,_]:ZV<s8#qk8@0u`>eQX[XaYfZ&&@N7<ON%!o':'>*0.c@K@UTS(H;oD+[2#(%:YL`27+0lo,MZ1S*b!QA%O^6D]A0j(pOD!?;<l.5gj?$KNH.&K]B15k<obb_E=$eVue\$mM=aF@F40%L:aPp+aF<u%r=<>G>XFrsu(ctklNU*L4i3]Z*aMY_u%<^QdI8mgC,E0ebko?0m2_N?kR:09j1>@g9u/"sC*b!<`,8n`/YH<EgV6<.(727+h`Bh&n@$!gdWTbgi<cVJ)i>@f,1bIM:I&W'0m%HuI,L5g$cH<^P&cT-73;#rRj@/g@S6%U='T$'1%/D6f<C!3<2s$^4RkdZ,f_'!fS^DNU42G^^Qh*(=Ba4N7o&Wl1idU8tgj"L5Y?%A4X"4Eas"Ia4X0eOtA[.N1HtZ8Fi"T=-[<#2GKaBA;E!?CT8#QQkE(\<0Bs1W:WJG-"NF,mmJJ@dYg_P.*qU5!Qd>[5.;>n'O*4?%@@M"&6rh)Q@rY.=Pu.$Oa'MalA.-4rWY-ce42alo_St%N*NU_6RfnZo%cN"`-S4-ORAtoYooQ&=We<i),UR6*&or/ARbLdf'JPL<%j],;)EQ*(#&g$e8d&BXY6;NJc<=)I9VbU3#pcX>..FI%"8P)(@-q\"[mlElDh'u3"B8R=]<2TjF1n2WR[b$`4A5+-o'^`t%2J:H3%4$k8tgn!,W4S?9?[lL#b<':Nug\f\18n_HGZtU4?$$T0"FFk.2=;*b^8[7o>P5ZjAPjf+$qG'l(o+%&a'L@T'qJ:`r8gd3XR\5?)%15Hj_$;-2X(R,bZr['%e5gmhIW-bC=HnQk@GZ8b.H4mNfUe'SmqKoCmkme:[#tI&:4#%$P5P7U=W_(8W4_R]V:]cD+G&e3:adT*U%82B1:m9u39d"ju05FmKu]=jl5o,e^.S8$sGe&b1k$V[+[KRAu]qGg6V?!EI<b,QdC1a/B*V^A,!L8)4e22NL<PK\th3B<8Z`_K5p%.hY]2U*e8GFEG)sc*\g.)W,=%.)=2GY1Jh5>NOJ=Wg8<q+d2:n/ID1%i[[Gj6KO<1n$F@JMm$<IDBMc`,jhP)-(uioP?0=Bh+m)-%<D12Mc,"U-&e6\2PEPG!8jr)99#>)P,5)jqY*k%G-S2e1(hZ_ZR^(8X^)M-_SYiZUP&RaNY*5$1a82ff8Yr+ls"L".KIj2-W)=7C%N&lWk;A,`Z[n0046B>3JC.&NEOG"Mo:GJ;MjD7a/_-U-(W2YVElJ7>PKFE=p6mS"X;'s@a7)EBP9V%!XB[o$R#qqp27D^2l&dhaL%'9!drER!:UFj`oRV!c)n6G`iC+a+J2l=iag.uAq4r'DL?<tPc5[47j_&W+p"78o?<\DOfaMM/Q/5K6Ge65G$8UoHtCV,rfO7u<+V%B=9NP'a`\KC:GiN&mdW\c<b'-4DO([,a@+NSjGA?F6MIm7ltlD&m6r1SVi(M:KNsAMM+YjZCQr-lJ0o8Blm.'c9I5GK`*o+SW'B9%0N!dNrnNpkH)k94Cm-nu<KNH'<riW>YDo*'K`-+n@LB%-95Y$+J;!M5@OE9A9,S9W!=98P>jUMq*&#/g[hK?j[^HV#gLM25$:sG;%F;9mZbKs6S;O=)XJ>=eb<rkn%$sa#^FW%b?8EpP'Q&p+2crEH]+!i+o\e&.9,i(e/'p3Sgd8`T_XZE*>_F-eTBX'lr3r4t?8Z!m[%ffm@%;mLMJ.FOu%d443[P/O).<)f"#Y2hQf7`3'1Pi.`Xjd9"H,U"F9T]K0"eq^'ZqrZ[:pkl'q&Y$rEKV"'`eg*ZJiHYLD$5L_j%aOT`h\_f6.?D"(5':$\8%PUU$cc@[p1lI/0E_k`X7u`/N&5Ng>d,9P89N'@gmV'IU,RG`Q,`A.Te`"Y!k=m51i2dbmcY(u\Yt/^j%fI!U$6UN4RiHts4%k%.W*EhY5-J**+3ffQJ(6YUN=<^KEm5FPAI8n6uMj0HqfgNA\`"F8<q,-!PkM+,'U:_G]8`H)jaJD5QA;c8?%Ze-Ikl"gGT:Q]58<K&V6Z08J8H,`tSB<=A[jA?)Y10@\RiA`.+-sc%GH%H`&*mr+4[t3F%B@TV93Je]g#^6KVO#\fbdmp-YEbT>J%d8+=<SXPP]792"=e!6``8]Ns[J!0FQ9Y*PLl=p(JH;r6BH\hj%/s9aL/pp5WSfc$N,od+iS5$8QJMunj1Re1i]a`jD`EmI]9MKFm%Q;286q%7%:(#/5h-q1nNUZ(ab9Rjs@J:0FRD:HVFd&Cl,:1H>i%E4uNb@r0/iFfYWpT/,!\pDl3f%-4gC8F-ePV)j!7/t]mYD?_(%U5Fu.V7TpBgiYM,K6j4p:A&d9C">[DJ_*lQ)ECr;F0/0)(A(e"3`W,Y(7oW$:AVi.p%#W,$=pXIdM%KfU>^f#4#c5g:-G`3m,5o7%ZO<0<kB@l.%*)P7XE82_ZE:jad5%Vc<N!4gNtPSgIjG]Ao_2:<9MJI5d'R>-QC>A0-7."kULhs2X-R9j;(:q%kZT2Ylg<oS"&F=f%RKo&)>+Y(t6(W+?.MoDdi,)E'O<s`P1mJGaF*)u5W*ID%%RirT.MoBm4.)mc+j4DBOUG=I0NO/@s3>Y]U2d/u<R\I"8#aL^Y:Mbo%W5aNB]K!B8)Ag[jYc^T%\,]5&3sjl(<2E^heTY$':dOY6.okOpQH>(S6bs*GZ46_D?W">oLf$&r&VWk8XI@";Fq?0/pd0Gp'J?d?%:FTQDf[7qX/p,'GZkcd&65K$3LDj4'OG.$\>;_*Bg%Z^W<Of8ES75F,<6M9i>\;$<_M)pJDsS3m$YPT*f;^9)3(lBS/D:iEn8jB1%6K;W/j_>/90<;sD/2!gP'JAaREOL&uq[Y88<.PE[pu+UU\5^YO$!_(4dH$K"@IU.t*9s%_RG2P'BKaJ_"MKe+ZrQ$>`B;Zj`hmYt%"2DIQCAJ^ON@)T@Ddc9oY3B03@T?E8oIXnNaZ"VU>G>;'hbl&,Wc+:G6m4guUKTQ^k$SS!o,^n[$^ml*;m1*_>9XMTVe%m;(3Drj%UUSW?3d.P"(27a821Z,sOHJXT,&e]pXLqHq#)[=dC'#2cTs6`QAq:?E-J`ls"YR2S<ImfNXI?q9Fqb<hf]%W\i5-o[`a7T?9nD/+%mfY8N"^UGbjXcnXnf32g2$A5KdcjtnWKXf1[!1$+W4[gO,X99tneSMVkB_C]a4@NM4b\O'o<G9!3;C+cnmHSJ[ge2fWbu6<MG;l(%%'-7Bl&RQOL3hOY7&;K`or(,OUb1Bc8c2G^/X25EQ^F&b.:inc+hO62PqD'`DB)n[[ZG'^h)A<d6<1lQr2Z]2O^N$8<OT+NB_es@%V&36-gX72(U3a,@?,\CCfpIZ(KZ,NRF-`+NMn"H[:7A&[DW0/8qNmtSDW,tfIB?As/Y!JeVP\7i,Qnk;n5DJi?<_RY@<Ds%,\\0d%\u"^(<8B=q1fW;Z*Mr$:kr3'bl5"R<ZAk<Q>IYMJ[nR2I,T'Pa]s/aH^s,@G+[k(l/aW/]\>F+OT9As$MmS13IWS<;dWGepCmfDa%Wbgp[;Ip5CaJ[OP/_jOBSLIc2!3OeN2&0)]hcn`3O3[7OF0mOS6dc>p:\H^#:M6%Xa(?FOGt68jE7jhnVetD`GJ<Fj_!2\YhIq:8%[n*IgS[sL[--=H^/S#6<#Yj-l5/8AsU2Hrr<E$BNNq1sZ-Q^2@EJjtm=QK]C)jQ)3WJOcRXc0rESr]jETX,qI<E"#JO!$eD:#3\#%AAmMc\tt;;X1F!PB\D-oeLf=WC?h,Q-rma\`J1Xs>PQp$.Tun>\$0^?S\1f<oi$<Y9&@G!T5<fc/aUHo'RD@Sff$F&l1HV@St0Tl%(?l*&e$j:S-kH)QhnikRfAnNc*>NimhqEt#V)q<2/^i@-Z,p3\@T%BeiDCqGEgA!OW`tUbJaX&>*^$<+g`j"E0MU=HD'[g^DOEi=%dBKiD!h0^#f[=59&[q<DZ3X[GUK#m_(?\s:[W(jrWH\IP>@_D3\Ya2*iP08GUiiOF'p&3;['Y^Wjq30E,2&i0+U]t#=(P#Gqd)uk%mDa9A=Vu#)[?)\0\do/6>0%>>.oIE([]jU@XpJ=b1AXbu;CtCo1E4YT3YBP\2EnS`[T$HYC_7UZ##s6l(>c6q#[98YUR;Emf]K&+%fHMV=,V(d<dZSaB,&EAsm:@hRmShg!Uf_XP\mF(,%NBi_Pq>,^EFWb+(3]>tUo%s:9<p?bMoM"2PV!l!Gb9P]Cgi6kB$(mtV'.^1%M_tE4V(Lg'<Kjku6hE+69\j2W[]j1\Y#i']+E^T9_Xf20VlA.Ra?31N9r_\`cXpnBI;OG9NV]Ak[5mJmDTltO6<2eb__usd>/`)K%2bp@=*5^\NR45?C7`?r7dRgm(>H28b`%A<j=PP)@SS?dnR<$rSV."5!N%I,*$`B/SUl)NJ#+%^BV(L6K8R#^02)]"RpUnqTWj[UK%M[n!i[Y7)3FG?f4iD:;4>FCjF1T[%VATeX.>;Y1oFc-YmFjhY?S^5f=*3=%?BK(XBDNRAS=AE@K$g3M7pdM[/jWoKCc;It\Bsu<>%7*K\3a\=hQ&q,[[J\#\7$XD=MNGbE+!Z1:[Jue.sa@Ti$':QXh<u[t2Lq\QOH"pDUdum>o'XI".GX939Z0>J-6TR9'EQo1MFX#]l%>\)P*H[uP@"?j2m!Z*HoYM2M8$qGX0ZH5H_.ir(5Gt[J_MnGl.#S_PWGEg6SA3^`9PIJVh4quZQb?O7RZ`%(bd'tE@OiaFMWX5[;%*qiD8:dljVD7-_2-pS;jNt+7@'-5/R\SW<\-Z>-%h//Cn*h.p&]t/n:+*FG\h')s[d&C7%pOes7>M)E_TrN!=$d\:"QDIcF%VI]V%<O#K/S7gl'4,HV<<K0Xq:DLFEKsd-pEoH?n6]q#Fa@.:J9MORl7H81t\O_6FAVV!9\O^8\]hDP0,/H=O\V5*DFP,9Z]EE5L\'^u0%3&[04GInR^Wm!nd`Nek%@]_8a,Vq?H$ThDB]S'iKh",gI=$U=Lm#][M2OOqWK'Qr"eZrpFQe>4eF(#G0AZO$DqK*<e'q#FW8d*Wf%F-.W!DP'h]\u."/;;_ABBD8isf/S]67Abf<C-!065C0A[<HTp!ah0WRdCHJmXD-*BcgPSMRa+>agVp%2R<][N>%XA^fnpR^?-@N%%il+@QddBr]0'^Je;nK91CgX#R(WfN*>E5MBCM0-jKo<t&D,sd+,0jK&3/Q@9o+%iX96'$)CMVA3:"H+ug81rD(U6WJ-=+PBD,%Tt%?.t`h&\I[NdRENNete5VV(FVBYtMhY?,SA%UKHm2<i(`,V-fK?@[DOH\qjYg-0S:@=kPN`GL#1he*rlpeJ#SZO`X5R;JXYM-YM4;%g%'doRVs*T:.@R$,j>h%+/Wm21guMj^196X:X)eu'SDks'iU?l4MN71)kkVOG#HP1*YmW^[i:J;.e3^6Z4a&abUpJ)NiEJENH\I_%X-](UceH[+R)/"/CO+"@_AZ\p)iB/UN'&HtqAM%<(UUfumM(QJ,FGbdQUK(04O6#9fQo?_:nX'%WbHE1W!FRb*L9i.;`J(J+),7:%alH?aAL$#H`e<o1M]W)N`["S,?;::+Qp`uF=c8WA>kuac,Yr;\OHVL,nE1Ne._[VU"pUAIW^K@gB/;K2EG2[=Gn5ie1mGNNYBQ+_%Sn?-,IMh`?IcN%W5gOLp.-(4NkBX*=:"UZQnUmpr;'B*`p[T8OU_.'sibOHmNJ`F#D,S<X4Uf*<_271!3OugS=?(#b/)C%j(I+'U%,5T_65M>Og2ipTL(o&\;dtFE:#Yt-SM5/In\B;L4ZD&23`q0,*5DE@+:)=O]_n[3&kq%TSq4[d="(N7U&),1K;^1TtWeI&K(j4&;%j#93D1/)$+U<T?/,8l$[?9t811WmAUbE@oWgmed#AFJSNqcR7c*QR0dg4KNsD2N_cL/B%3aC]6FZ^c-Fd[@Du:ss"9X=N=E6lU9Q%,t09=lq:ip*(eD?APT[>S(fna,3s<6/s$8ZW]EmE`mIqeiGR.rOEC:s.'"^m7W0ipZ9a3u<g7Qf@U1@#6S1IcT]Cs2>[1>cjFMXQ%4\%A:6\/E]N>ddk3akoH<%(Q6;L._g&if.Y:#/r*(Sl4@,O*LL+@@qukbn.t\q>$5)L2ITMA&$sM+/h2e)[XRq.@=d8a2Kk3r!$-%<D?J>,u<,qYb^P7H(%[^3]t)ah[c\b?]"Ej\DAu4'O2[(CdBs$;Y:c[<ZbV2?ZA?,Q/>T*?\uS6qBislCRcu'D'cOpR:\sodV3kN%ejI^M2jC_SROV<<FXcc121O.W9;,[kQ;kP)=.V9L[FB!7CX&BN^6o,):0fpf<h%AM]p$ZuVl?Yi\:5"&W1pZ.+K7a#9le2d>aEq6%(-@QL]OE\EqCAm&jb>Y)?]^$FX2?Pi,dA5urJm]J+$-B![B,f(CN^D-Sn;'`rcNBKO\^+V;Lqi7nBOq<f@dMBg4co(lJ9&"XD+\G%?IN3Gj^dbL,K-lJ"Rn&3:\M4op6"Zo=CgGP?km/(BPA>,2'E`<7Pg@6jKK2RD#08)'k3:o^:$jk=DUR?>Dsu8aMcDgMA1sWZL2"o%=Oj]l;QT:7Q"'9;#6!6i58rPrH!b)^/B-V]\1ptI'kLHje0tSHe)SteDp$,>-H;ds9ZB"C(721YlCu6AgZ\<?;*;S$*5%iC>-)I@%2(dDG+P(#lKr1i5qp`bNV8]_QktSA#Z4uV=P$>=rAC7M`</X220\'H@\D50F)qn@F(0^uCZLJp1>#n(M2*6Q"=FBA_8[1715sMZN%;Cp+U#Zju97AW2PY+W7K4-]?d7aHGR,?ZS:,)bdt?_gfjY$STu:b<GEOE7C8Z#X5O+d>U(MIG&"=T's2dA3h]35rUDX@O1gqDt&*%RIQ9I/Z-?C+]b2BbC$3;Z,i)tNTl^1AE-\GWl-(hbJgLpM_+d4m&DM>fN.^Miq5LDpc(,W<jf$/&o2Y%.C%qpWg)QJ3PL!+h7H[D%74*K9eL@b>oWn-bVn+qD7ZWKp0>o'lLhZK]LaB/TKI4V]bERbP]e:.1=e;j=j`pT48A5D8C@b[f+VrhNRoG1im:e=MLfH%--H)>n%`BuSmfYKEg(0bGpH;oT#g^jm0-E7WX2P3`dFf)8toQ,[f*8#l8k!b,,D4MB!j1UGO9!L?DNr"kf*dEd#2sa[I.2Ks)eq+\i(0Mub%qp9!WdsH>>8l7/U2if\jVT!";i4;lB<jf#t)JaM\)5QB9hP`l',or'tT/\#T(+26/DDF=5Vq`V_dZr;CF@qT_J)S`9Fa>SK6*a"K%Y-jE]SpM/7(;$VCFf-KpS-J>r<BV,pj5`6e<jf#t,&;?9XbsEV)qFG^,`Aj2)QcW;a;0_q9p3I9(6;HqP/Y\iVV"PI3%MR1Lao\i%0.`tQMC_Lgq=#7PZG_Z<q$%WcZ8gtO>I8^oe9;;#aI75lWlXIc;FQoD*[*C0(>gdVU:Xo((70W#'2[4[gjLI(lDn*?H>tg%=/C.A%Oi>UaL<pW;m+6l;Z_g:!3:,*%Q;s.!3X1j[oppjfZJ%#_aPtD4NYt9I`Ek^PoN9monR?dEVGVO*SQXTDO3[7OF7`Si:!tio-[Qe,%SC6b>2<)lhW%Y7IP+P5$oN5Ap[XMqG(MVNEH)Os>=;%n2gH2LW+q(GM<_\XoK,(H`$eAhX?mQN/&ll@Y<_\S(+%'Kg^.R\?=;';V%-AEkG2;(uC--]s+]uA'j``@kcD%rOO;.K,UR\fC?NQ#la'u:`FZ(rSAWJRl>@ducV&S"haWen!lUK!2k(8I?0H)Uco,K*Rq@r_!r%>*(;TC6AIZ':]\FZ.m`Na.4'*Can);(LEYFj3QdD0pVrTeIh<cR3T;n]l.#4`C$q5F]GN_ildB31d+lV77E6e[Bu[JC<*7iMd%*D%E^br+/^;r=9f#g[EJ_eMIT0u,ZNJbe</[`]jPHa8-'_t3'+(h`Z"2)5^7e#&0;4@/Bqi^adB@5hqA<?l=kurTa^U0NTkUgbP4Y0%%C9hB+YKBId:*S/;hB/]Ld$G`4]%Z5AX_G3ERH6AB]"Ni7IABpY=dG]EeJ,57bOR_,A!:H._%[t#>Qj[[jA[Cn/BMAUW34"#/@Gt5%4-j5RbL,:mQ:I:MQX?:rj)[:R<jd(5/?t2C8[?tm4.<,obLSh#GWjH?=-fj)9?KN/-XnqKQ^"YJ(H%MCBA!TI#@[P1;,L.)9,Mft%^ga'0UdDB4,eN%P0c'YsI"4o0=DZA&=V5/oQr:n*Ce82N-$mGMc.WpRR44\qjn4h3`KIYO6PX*2_lB]@\q<tB-.DTB2E_g[81AM"%7[uN=a5Y4ij@uhuP3JEa]hGh8kLj+erJ.t*S_&):X)6d$kJl;QNDnq@4CI/cbDR?u]11TiZcKC^^>Pk8a-'k+FA7cq/ZU5=RN9@f%/A@9=U$8gmk$cHRZ<31<7[?K)`Tac+q(/+&bFDf@ROZCY[SDo11F`80PtsF]PIZ$;A9"Qqd<ST"EBk-a=%*m[/J66b,-)V_9p%:p%L_X&*mGcbD=YftUAZ&))3!E&mL*]t8m;-O#/6R<+jYW96EUNJ"=0.SCJdVH(Xa%K!m*mPkAj.L2X)gsc.]Y#(U`8A6WZm@,Piqs5%Oi8?250,:</@*C[ejY`j(B'u08@$=pFdM8p;K7l]W[c+7MghQn-!@W-*M(TlAs05VUOTSY=nu5rVob+062`tXCU,qSdl96[Q4/g[%0?W;5J1DNP4*?2@,0K2*"%AF(N_r@`?\Vk"8?ubomu("s-!<"doUR>0#+MX7Or<C]`'O#hg;ZmJ<EE:8(>],`kchBj:GeMHNl><O%hr@NnQ4.1rBR24Qf<HTij]L=/S:5=4j]F8Pp85s:fV2lC,0+.3Is8NGZ+.L:,%m$E<QieKbSEbCd7LOeZgkSs*37en*36]Lb-<p3%/CRTZ()r.:6022]DPCic/1DIge6!>jA#UkW@nBo6h%i?jX$`7Y\8%$64.B:0NO_bIWEI_Q4AC_d1c:SXMaLL-=^D"\r)-9e@rX0F%T1pnP/FN80:`9D9Z.KeNDAC*)/@IOo[7cj5e?Wh(XP$H5+I+JQ.`RW8h9S8j`G&cjUPc<9/$cd%D<3T[e$#BE>P%1;`j;9e`bLEE%7?#3nBC"tODNoTM5D-"G/@GsE9cDuS+%j[YN$Wr?RMK]$@][21\TMO8/mNL"kLk_#(G/\"6d]@7,#W/Z/Fd1VKh60<I>1^!,+1'q%r`C1%nG_FJVSs2"<p^\RW[)bPcV5-IET:YHbL4'uQDKKTX"?s\0il%??,Ti^=h9Eog9Pf4A+e$n7?#c_V2H1kXZ.+O<kg1k`)s@@%=H(cGVMc:l?^NHTXF=`lLp?eVkYqF^H1F[NA)<iuko>eV0g=:F6j,0T%8G5oLL!"%e8&X44XJc8B6M\JAkB^^9lsAjS3OpB#Ma?t%ZY]TNXR1/ng/u$2kONiY."f0jh(1-jft(F\bZhOl<LuY&J6>']WD\=_W_rm9FaDr@"L8Fr;\F%[iNGrkNIX,N)ofFb]UDZ6*&a\H%PQ]cn.H"5Q!LICYMff0nE,;mU8'pD[2/h=;]f_:H*Q:h@B34*UqVBt^<l:@MeH^2q/s\\>SP;bM>cEud\Q`.",tY5O9<qcmS?05g%LnK^73Xn@qI[,]]15`E84jrNPQZKQ<L/E\TU73gq!*M'LIVs/udok5>n$L@m,SSl1G!#ii'Emuk>Ba,qFPA<O^<.+7If<[Q`fK:q%Vt*4Qfa["6J!UKW"*?!Z/1!BK8b:`?UW([;X;5-/,VA#Ei_g.3C?jjbP3PPtSilUS88!?-l1E#XDOb^[diV-7`'+.'rnk,5J,%AL%s2P#t?U+3Zf,jfrO$EN.IsLh96iZ\]l];(4B-7"h2]dJBnG73erK#"&4SI9':Ohi<mlgZrq(GgP5Pt4shg>4Qa0.W"`7+aM/GYNN%pd5Sjp"t5anG`U9H],W~>%AI9_PrivateDataEnd