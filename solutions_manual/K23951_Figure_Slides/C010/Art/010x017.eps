%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 010x017.eps
%%Creator: Adobe Illustrator(R) 15.0
%%For: Rajesh Tyagi
%%CreationDate: 27/05/15
%%BoundingBox: 0 0 307 297
%%HiResBoundingBox: 0 0 306.0024 296.7109
%%CropBox: 0 0 306.0024 296.7109
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.0.0 x399 R agm 4.5188 ct 5.1874%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 124 8%%BeginData: 22636 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD07FFAFFD05FFA8FD05FFA8FFFFFFA8FD05FFA9FD09FFA8FD05FF%A8FD05FFA8FFFFFFA8FD0FFFA8FD05FFA8FD05FFA8FFFFFFA8FD0FFFA8FD%05FFA8FD05FFA8FFFFFFA8FD0FFFA87DFD04FFA8A8FFFFFFA8A8A8FFFFFF%7DFFFFFFA87DA8FD08FFA87DFD04FFA8A8FFFFFFA8A8FFFFFFA87DFFFFFF%A87DA8FD08FFA87DFD04FFA8A9FFFFFFA8A8FFFFFFA87DFFFFFFA87DFD09%FFA87DFFFFFFA8A8FD04FFA8A8FFFFFFA87DFFFFFFA87DFD09FFA8A8A8FF%FFFFA8FD05FFA8FFFFFFA87EA8FFFFFF7DFD09FFA8A8FD04FFA8FD04FFAF%A8FFFFFFA87DA8FFFFFF7DFD09FFA8A8FD04FFA8FD04FFA9A8FFFFFFA87D%FFFFFFA87DFD09FFA8A8FD04FFA8FD04FFA8A8FFFFFFA8A8FFFFFFA87DFD%0AFFA8FFFFFFCAFFA8FD07FFA8FFA8FD05FFA8FD09FFA8FFFFFFCAFFA8FD%07FFA8FFA8FD05FFA8FD09FFA8FD05FFA8FFFFFFA8FFFFFFA8FFA8FD05FF%A8FD09FFA8FFFFFFA8FFA8FFFFFFA8FFFFFFA8FFA8FD05FFA8FD06FF2752%275227527DA87DA852272752272752A87DA87D7D7DA87DA87DFD05FF2752%275227527DA87DA852272752272752A87DA87D7D7DA87DA87DFD05FF2752%275227527DA87DA852272752272752A87DA87D7D7DA87DA87DFD05FF2752%275227527DA87DA852272752272752A87DA87D7D7DA87DA87DFFFFA8FFFF%FD06F8FD04FF52FD05F852FD04FF52FD04FF7DA8FFFFFFA8FD06F8FD04FF%52FD05F852FD04FF52FD04FF7DA8FFFFFFA8FD05F827FD04FF52FD05F852%FD04FF52FD04FF7DA8FFFFFFA8FD05F827FD04FF52FD05F852FD04FF52FD%04FF7DFFFFA8A8FFF8F8F805F827FD04FF52FD05F852FD04FF7DFD04FF7D%FD05FFF8F8F805F827FD04FF52FD05F852FD04FF7DFD04FF7DFD05FFF8F8%F805F84BFD04FF52FD05F852FD04FF7DFD04FF7DFD05FFF8F8F805F84BFD%04FF52FD05F852FD04FF7DFD04FF7DFFFF7DA8A827FD04F827FD04FF52FD%05F852FD04FF52FD04FF7DA8FFFFFFA827FD04F827FD04FF52FD05F852FD%04FF52FD04FF7DA8FFFFFFA827FD04F827FD04FF52FD05F852FD04FF52FD%04FF7DA8FFFFFFA827FD04F827FD04FF52FD05F87DFD04FF52FD04FF7DFD%05FFF8F8F827F827FD04FF5205F800F80052FD04FF7DFD04FF7DFD05FFF8%F8F827F827FD04FF5200F800F80052FD04FF7DFD04FF7DFD05FFF8F8F827%F852FD04FF5200F800F80052FD04FF7DFD04FF7DFD05FFF8F8F827F852FD%04FF5200F800F80576FD04FF7DFD04FF7DFD04FFA827FD04F8277D527D7C%51FD05F8527D7D527D277D527D7D52A8FFFFFFA827FD04F8277D527D7C2D%FD05F8527D7D527D277D527D7D52A8FFFFFFA827FD04F8277D527D7C2DFD%05F8527D7D527D277D527D7D52A8FFFFFFA827FD04F8277D527D7C27FD05%F8527D7D527D277D527D7D52FD05FF7DFFFFFFA8523334335E2DF8F805F8%F852FFA8A8A87DA8A8A8FF7DFD05FF7DFFFFFFA8523334335E2DF8F805F8%F852FFA8A8A87DA8A8A8FF7DFD05FF7DFFFFFFA8523334335E2DF8F805F8%F852FFA8A8A87DA8A8A8FF7DFD05FF7DFFFFFFA8523334335E2DF8F805F8%F852FFA8A8A87DA8A8A8FF7DFFFF7DFFA8A1FD04FF2D3A335E332DFD05F8%52FD04FF52FD04FFA8A8FFFFFFA8A1FD04FF2D3A335E332DFD05F852FD04%FF52FD04FFA8A8FFFFFFA8A1FD04FF2D3A335E332DFD05F852FD04FF52FD%04FFA8A8FFFFFFA8A1FD04FF2D3A335E332DFD05F876FD04FF52FD04FF7D%FFFFFFA8FF7DFD04FF58335E335E2DF8F827F8F852FD04FF7DFD04FF7DFD%05FF7DFD04FF58335E335E2DF8F827F8F852FD04FF7DFD04FF7DFD05FF7D%FD04FF58335E335E2DF8F827F8F852FD04FF7DFD04FF7DFD05FF7DFD04FF%58335E335E2DF8F827F8F852FD04FF7DFD04FF7DFFFFA8FFA8A8FD04FF51%5E335E332DFD05F852FD04FF52FD04FFA8A8FFFFFFA8A8FD04FF515E335E%332DFD05F852FD04FF52FD04FFA8A8FFFFFFA8A8FD04FF2D5E335E332DFD%05F852FD04FF52FD04FFA8A8FFFFFFA8A8FD04FF2D5E335E332DFD05F876%FD04FF52FD04FFA8FD05FF7DFFA8FFCB521158333A27FD05F852FFA8FFA8%7DA8FFA8FF7DFD05FF7DFFA8FFCB52335E575E27FD05F852FFA8FFA87DA8%FFA8FF7DFD05FF7DFFA8FFA852335E575E2DFD05F852FFA8FFA876A8FFA8%FF7DFD05FF7DFFA8FFA852335E575E2DFD05F852FFA8FFA876A8FFA8FF7D%FFFFA8FFA827FD05F87D527D585227FD045227FD05F87D527D7752A8FFFF%FFA827FD04F8002E282E282851FD045227FD05F87D527D7752A8FFFFFFA8%27FD04F8052E282E2828052827282727FD04F8277D527D7652A8FFFFFFA8%27FD04F8052E282E282827FD045227FD04F8277D527D7D52FFFFA8A8FFF8%F8F827F827FD04FF7DFD05FFF8F8F827F827FD04FF7DFD05FFF8F8F827F8%282F542F2F28FD05FFF8F8F827F827FD04FF7DFD05FFF8F8F827F8282F54%2F5428542F542F5405F8F827F852FD04FF7DFD05FFF8F8F827F8282F542F%2F28FD05FFF8F8F827F852FD04FF7DFFFF7DA8A827FD04F827FD04FF7DA8%FFFFFFA827FD04F827FD04FF7DA8FFFFFFA827FD04F8272F292F292FA8FF%FFFFA827FD04F827FD04FF7DA8FFFFFFA827FD04F8272F292F292E292F29%2F2927FD04F827FD04FF7DA8FFFFFFA827FD04F8272F292F292FA8FFA8FF%A827FD04F827FD04FF7DFD05FFFD05F827FD04FF7DA8FD04FFF800F8F8F8%27FD04FF7DFD05FFFD05F8282F2F2F302EFD05FFF800F8F8F827FD04FF7D%FD05FFFD05F8282F2F2F54282F2F542F53F804F8F8F852FD04FF7DFD05FF%FD05F8282F2F2F3028A9A9FFFFFFF800F8F8F852FD04FF7DFD04FFA8FD06%F8FFA8FFFF7DA8FFFFFFA8FD05F820FD04FFA8A8FFFFFFA8FD05F8002F29%2F072FA8FFFFFFA8FD05F820FD04FFA8A8FFFFFFA8FD05F8052F292F072E%292F292F2900FD04F827FD04FFA8A8FFFFFFA8FD05F8052F292F292FA8FF%A8FFA8FD05F827FD04FF7DFD05FF274B274B204B527D527DFD0727522752%FD0727FD05FF274B274B204B52535253FD0727522752FD0727FD05FF274B%274B264C52535253272705FD0427522752FD0727FD05FF274B274B264C28%2F2853FD0727522752FD05274B27FFFF7DFFA8998DB593B54BFD04FF76FD%05F852FD04FF27FD04F827A8FFFFFFA8998DB593B54BFD04FF52FD05F852%FD04FF27FD04F827A8FFFFFFA8998DB593B54BFD04FF52FD05F852FD04FF%27FD04F827A8FFFFFFA8998DB593B54B2F292F2928FD05F876FD04FF27FD%05F8FFFFA87DFF6FB593B59376FD04FF52FD05F852FD04FF51F805F8F8F8%FD05FF6FB593B59376FD04FF52FD05F852FD04FF51F805F8F8F8FD05FF6F%B593B59376FD04FF52FD05F852FD04FF27F805F8F8F8FD05FF6FB593B593%522F542F2F28FD05F852FD04FF27F805F8F8F8FFFF7DA8A8758DB592B54B%FD04FF52FD05F852FD04FF27FD04F827A8FFFFFFA8758DB592B54BFD04FF%52FD05F852FD04FF27FD04F827A8FFFFFFA8758DB592B54BFD04FF52FD05%F852FD04FF27FD04F827A8FFFFFFA8758DB592B54B2F292F2928FD05F87D%FD04FF27FD05F8FD05FF6FB593B5B576FD04FF52FD05F852FD04FF52F827%F8F8F8FD05FF6FB593B5B576FD04FF52FD05F852FD04FF52F827F8F8F8FD%05FF6FB593B5B576FD04FF52FD05F852FD04FF27F827F8F8F8FD05FF6FB5%93B5B5520D542F3028FD05F876FD04FF27F827F8F8F8FD04FFA8756F6F4B%6F277D527D7D52F827F8F8F8527D7D527D27FD04F827A8FFFFFFA8756F6F%4B6F277D527D7D52F827F8F8F8527D7D527D27FD04F827A8FFFFFFA8516F%6F4B6F277D527D7D52F827F8F8F8527D7D527DFD05F827A8FFFFFFA8516F%6F4B6F272E28522827F827F8F8F8527D7D527DFD06F8FD05FF7DFFA8AFA8%7DA8A8A8FF52A8FFFFFFA852FFA8A8A84BF8F8F800F8FD05FF7DFFA8AFA8%7DA8A8A8FF52A8FFFFFFA852FFA8A8A84BF8F8F800F8FD05FF7DFFA8AFA8%7DA8A8A8FF52A8FFFFFFA852FFA8A8A827F8F8F800F8FD05FF7DFFA8AFA8%7DA8FFA8FF52A8FFFFFFA852FFA8A8A827F8F8F805F8FFFFA8A8A8A1FD04%FF52FD04FF7DA8FFFFFFA87DFD04FF27FD04F827A8FFFFFFA8A1FD04FF52%FD04FF7DA8FFFFFFA87DFD04FF27FD04F827A8FFFFFFA8A1FD04FF52FD04%FF7DA8FFFFFFA87DFD04FF27FD04F827A8FFFFFFA8A1FD04FF52FD04FF7D%A8FFFFFFA87DFD04FF27FD05F8FFFFA8A8FF7DFD04FF7DFD04FF7DA8FFFF%FFA87DFD04FF52F800F827F8FD05FF7DFD04FF7DFD04FF7DA8FFFFFFA87D%FD04FF52F800F827F8FD05FF7DFD04FF7DFD04FF7DA8FFFFFFA87DFD04FF%27F800F827F8FD05FF7DFD04FF7DFD04FF7DA8FFFFFFA87DFD04FF27F800%F827F8FFFFA8FFA8A1FD04FF52FD04FF7DA8FFFFFFA87DFD04FF27FD04F8%27A8FFFFFFA8A1FD04FF52FD04FF7DA8FFFFFFA87DFD04FF27FD04F827A8%FFFFFFA8A1FD04FF52FD04FF7DA8FFFFFFA87DFD04FF27FD04F827A8FFFF%FFA8A1FD04FF52FD04FF7DA8FFFFFFA87DFD04FF27FD05F8FD05FF7DFFA8%FFA852A8FFA8FF52A8A8FFA8A852FFA8FFFF27FD05F8FD05FF7DFFA8FFA8%52A8FFA8FF52A8A8FFA8A852FFA8FFFF27FD05F8FD05FF7DFFA8FFA852A8%FFA8FF52A8A8FFA8A852FFA8FFA827FD05F8FD05FF7DFFA8FFA852A8FFA8%FF52A8A8FFA8A852FFA8FFA827FD05F8FD04FFA8A87D7D7DA17D7D7DA87D%7D7DA8FD077DA87D7D527D527DA8FFFFFFA8A87D7D7DA17D7D7DA87D7D7D%A8FD077DA87D7D527D527DA8FFFFFFA8A87D7D7DA17D7D7DA87D7D7DA8FD%077DA8767D527D527DA8FFFFFFA8A87D7D7DA17D7D7DA87D7D7DA8FD077D%A8767D527D527DFDF4FFA8FD1CFFA8A8FFFFA8FD1BFFA8A8A8FFA8FD1BFF%A8FFFFA8A8FD1BFFA8FFA87DA8FD1BFF7D7E7D7D7DA8FD1AFFFD057DA8FD%1AFF7D7D7EA87DA8FD1AFFFD047D84A8FD1AFF7DA8527E7DFD1BFF7DA87D%A87DFD1BFF7DA87DA87DFD1BFF7DA853A87DFD1BFFA97DFFA8A8FD1BFFA8%84FFA8A8FD1BFFA87EFFA8A8FD1BFFA87EFFA8A8FDFCFFFDFCFFFDFCFFFD%FCFFFD21FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8%FD07FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD07%FFA8FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD07FFA8%FFFFFFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA827FD%04F827A17DA87D52FD05F852FD047D527D7DA87D7DA8FFFFFFA827FD04F8%27A17DA87D52FD05F852FD047D527D7DA87D7DA8FFFFFFA827FD04F827A8%7DA87D52FD05F852FD047D527D7DA87D7DA8FFFFFFA827FD04F827A87DA8%7D52FD05F852FD047D527D7DA87D7DFFFFA8AFFFF8F8F827F827FD04FF52%FD05F852FD04FF7DFD04FF7DFD05FFF8F8F827F827FD04FF52FD05F852FD%04FF7DFD04FF7DFD05FFF8F8F827F852FD04FF52FD05F852FD04FF7DFD04%FF7DFD05FFF8F8F827F852FD04FF52FD05F852FD04FF7DFD04FF7DFFFF7D%A8A827FD04F827FD04FF52FD05F876FD04FF52FD04FF7DA8FFFFFFA827FD%04F827FD04FF52FD05F876FD04FF52FD04FF7DA8FFFFFFA827FD04F827FD%04FF52FD05F876FD04FF52FD04FF7DA8FFFFFFA827FD04F827FD04FF52FD%05F87DFD04FF52FD04FF7DFFA8A8A8FFFD05F827FD04FF52F8F805F8F852%FD04FF7DFD04FF7DFD05FFFD05F827FD04FF52F8F805F8F852FD04FF7DFD%04FF7DFD05FFFD05F852FD04FF52F8F805F8F852FD04FF7DFD04FF7DFD05%FFFD05F852FD04FF52F8F805F8F852FD04FF7DFD04FF7DFFFFA8FFA8FD06%F8CBA8A8A852FD05F852FD04A852FD04A87DA8FFFFFFA8FD06F8CBA8A8A8%52FD05F852FD04A852FD04A87DA8FFFFFFA8FD05F827FFA8A8A852FD05F8%52FD04A852FD04A87DA8FFFFFFA8FD05F827FFA8A8A852FD05F852FD04A8%52FD04A87DFD05FF5276FD04522D582D5827F8F827F8F827A87D7D7652FD%047D52FD05FF5276FD04522D582D5827F8F827F8F827A87D7D7652FD047D%52FD05FF4B76FD04522D582D5827F8F827F8F827A87D7D7652FD047D52FD%05FF4B76FD04522D582D5827F8F827F8F827A87D7D7652FD047D52FFFFA8%FFA8A8FD04FF523A335E332DFD05F852FD04FF52FD04FFA8A8FFFFFFA8A8%FD04FF523A335E332DFD05F876FD04FF52FD04FFA8A8FFFFFFA8A8FD04FF%2D3A335E332DFD05F876FD04FF52FD04FFA8A8FFFFFFA8A8FD04FF2D3A33%5E332DFD05F87DFD04FF52FD04FFA8FFFFA8A9FF7DFD04FF58335E575E2D%FD05F852FD04FF7DCAFFFFFF7DFD05FF7DFD04FF58335E575E2DFD05F852%FD04FF7DCAFFFFFF7DFD05FF7DFD04FF52335E575E2DFD05F852FD04FF7D%CAFFFFFF7DFD05FF7DFD04FF52335E575E2DFD05F852FD04FF7DCAFFFFFF%7DFFFF7EFFA8A8FD04FF5134335E332DFD05F852FD04FF52FD04FF7DA8FF%FFFFA8A8FD04FF5134335E332DFD05F852FD04FF52FD04FF7DA8FFFFFFA8%A8FD04FF2D34335E332DFD05F852FD04FF52FD04FF7DA8FFFFFFA8A8FD04%FF2D34335E332DFD05F87DFD04FF52FD04FF7DFD05FFA8FD04FF58335E5D%5E2DFD05F852FD04FF7DFD04FF7DFD05FFA8FD04FF58335E5D5E2DFD05F8%52FD04FF7DFD04FF7DFD05FFA8FD04FF58335E5D5E2DFD05F852FD04FF7D%FD04FF7DFD05FFA8FD04FF58335E5D5E2DFD05F87DFD04FF7DFD04FF7DFD%04FFA8FD0552272E2D522D27F827F8F8F8FD0552277D527D7D52A8FFFFFF%A8FD0552272E2D522D27F827F8F8F8FD0552277D527D7D52A8FFFFFFA8FD%0552272E2D522D27F827F8F8F8FD0552277D527D7D52A8FFFFFFA8FD0552%272E2D522D27F827F8F8F8FD0552277D527D7D52FD05FFFD05F828292F29%5328A8A8FFA8A9FD05F827A8A8A8FF7DFD05FFFD05F828292F295328A8A8%FFA8A9FD05F827A8A8A8FF7DFD05FFFD05F828292F295328A8A8FFA8A9FD%05F827A8A8A8FF7DFD05FFFD05F828292F295328A8A8FFA8A9FD05F827A8%A8A8FF7DFFFF7DFFCA27FD04F8002F292F292FA8FFA8FFA827FD04F827FD%04FFA8A8FFFFFFA827FD04F8002F292F2953A8FFA8FFA827FD04F827FD04%FFA8A8FFFFFFA827FD04F8052F292F2953A8FFA8FFA827FD04F827FD04FF%A8A8FFFFFFA827FD04F8052F292F2953A8FFA8FFA827FD04F827FD04FF7D%FFFFA8FFFFF827F800F8282F542F542EA9A9FFFFFF2727F800F827FD04FF%7DFD05FFF827F800F8282F542F542EA9A9FFFFFF2727F800F827FD04FF7D%FD05FFF827F8F8F82E2F542F542EA9A9FFFFFF2727F800F852FD04FF7DFD%05FFF827F8F8F82E2F542F542EA9A9FFFFFFF827F800F852FD04FF7DFFFF%A8FFCF27FD04F8052F292F2953A8FFA8FFA827FD04F827FD04FFA8A8FFFF%FFA827FD04F8052F292F2953A8FFA8FFA827FD04F827FD04FFA8A8FFFFFF%A827FD04F8272F292F2953A8FFA8FFA827FD04F827FD04FFA8A8FFFFFFA8%27FD04F8272F292F2953A8FFA8FFA827FD04F827FD04FFA8FD05FFFD05F8%272F532F2F28A8A8A9A8CB05FD04F827A8FFFFFF7DFD05FFFD05F8272F53%2F2F28A8A8A9A8CB05FD04F827A8FFFFFF7DFD05FFFD05F82829532F2F28%A8A8A9A8CB05FD04F827FD04FF7DFD05FFFD05F82829532F2F28A8A8A9A8%A9F8F8F805F827FD04FF7DFD04FFA84B4A4B4A6F272F282F2828FD05F84B%5252527D20FD04F827A8FFFFFFA84B4A4B4A6F272F282F2827FD05F84B52%52527D20FD04F827A8FFFFFFA84B4A4B4A6F272F282F2827FD05F84B5252%527DFD05F827A8FFFFFFA84B4A4B4A6F272F282F2827FD05F8FD04282EFD%06F8FFFFA8A8FF93B593B5B5760D542F3028FD05F852FD04FF52F827F8F8%F8FD05FF93B593B5B5760D542F3028FD05F852FD04FF52F827F8F8F8FD05%FF93B593B5B5522F542F3028FD05F852FD04FF27F827F8F8F8FD05FF93B5%93B5B5522F542F3028FD04F82728302F542F27F827F8F8F8FFFF7DA8A899%8DB593B54B2F292F2928FD05F876FD04FF27FD04F827A8FFFFFFA8998DB5%93B54B2F292F2928FD05F876FD04FF27FD04F827A8FFFFFFA8998DB593B5%4C2F292F2928FD05F876FD04FF27FD04F827A8FFFFFFA8998DB593B54C2F%292F2928FD05F82F292F292F00FD05F8FFFFA8A8FF6FB5B5B593522F2F2F%5428F8F805F8F852FD04FF52FD05F8FD05FF6FB5B5B593522F2F2F5428F8%F805F8F852FD04FF52FD05F8FD05FF6FB5B5B593522F2F2F5428F8F805F8%F852FD04FF27FD05F8FD05FF6FB5B5B593522F2F2F5428F8F805F8F82854%2F2F2F27F8F8F805F8FD04FFA86F8C938C93272F292F2928FD05F852FD04%A827FD04F827A8FFFFFFA86F8C938C93272F292F2928FD05F852FD04A827%FD04F827A8FFFFFFA86F8C938C93272F292F2928FD05F852A8CFA8CF20FD%04F827A8FFFFFFA86F8C938C93272F292F2928FD05F828292F292FFD06F8%FD05FF527D767D7652282F285327FD05524BFD047D27F800F827F8FD05FF%527D767D7652282F28532828282E282827A17D7D7D27F800F827F8FD05FF%527D767D7652282F28532828282E282828532E532827F800F827F8FD05FF%527D767D7652282F28532828282E28282853282F2827F800F827F8FD04FF%A8A8FD04FF522F292F2953FD05FF7DFD04FF27FD04F827A8FFFFFFA8A8FD%04FF522F292F292F292F292F297DFD04FF27FD04F827A8FFFFFFA8A8FD04%FF2E2F292F292F292F292F2F2F292F292F00FD04F827A8FFFFFFA8A8FD04%FF2E2F292F292F292F292F292F292F292F00FD04F827FFFFA8A8FF7DFD04%FF5329542F2F28FD04FFCA7DFD04FF4BF805F8F8F8FD05FF7DFD04FF5329%542F2F2853FD042F53FD04FF4BF805F8F8F8FD05FF7DFD04FF5329542F2F%28532F2F2F53282F2F542F27F805F8F8F8FD05FF7DFD04FF5329542F2F28%532F2F2F53282F2F542F27F805F8F8F8FFFF7DA8A8A8FD04FF522F292F29%28A8FFFFFFA87DFD04FF27FD04F827A8FFFFFFA8A8FD04FF522F292F2928%282F292F067DFD04FF27FD04F827A8FFFFFFA8A8FD04FF282F292F292828%2F292F282F292F292F00FD04F827A8FFFFFFA8A8FD04FF282F292F292828%2F292F282F292F292F00FD05F8FD05FF7DFD04FF5329302F2F28FD05FF7D%FD04FF52F827F8F8F8FD05FF7DFD04FF5329302F3028532F30292F77FD04%FF52F827F8F8F8FD05FF7DFD04FF5329302F3028532F302F5328302F302F%27F827F8F8F8FD05FF7DFD04FF5329302F3028532F302F5328302F302F27%F827F8F8F8FD04FFA8FD047DA7285328532E2E7DA87DA87D767D7D7DA827%27F827F827A8FFFFFFA8FD047DA7285328532E2E28532E5328527D7D7DA8%2727F827F827A8FFFFFFA8FD047DA7285328532E2E28532E5328522E5328%532727F827F827A8FFFFFFA8FD047DA7285328532E2E28532E5328522E53%28532727F827F827FD05FFA8FFA8FFA8FFCFFFA8FFFFFFA8FFA8FFA8FFA8%FFA8FD0BFFA8FFA8FFA8FFCFFFA8FFFFFFA8FFCFFFA8FFA8FFA8FD0BFFA8%FFA8FFA8FFCFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FD0BFFA8FFA8FFA8FFCF%FFA8FFFFFFA8FFCFFFA8FFCFFFA8FDB9FFA8A8FD5CFFA87DFFA8A8FD1BFF%A87D7D53FD1CFFA8A8FFA87EFD1BFFA87D7DA8A8FD1BFF7DA852A87DFD1B%FF7DA87DA87DFD1BFF7DA852A87DFD1BFF7DA852A87DFD1BFFA87D7D7DA8%FD1BFFA87DA87DA8FD1BFFA87D527DA8A8FD1AFFA87D7D7DA8A8FD1BFFA8%FFFFA8FD3CFFA87DA8A8FD1CFFA8FFFFA8FDFCFFFDFCFFFDFCFFFDFCFFFD%1EFFA87DFD0552A17DA87D7D5276525252FD047DA87D7D7DA87D7DA8FD04%FF7D527D527D527D7DA87D7D527D527D52FD047DA87D7D7DA87D7DA8FD04%FF7D527D527D527D7DA87D7D527D527D52FD047DA87D7D7DA87D7DA8FFFF%FFA87DFD0552A17DA87D7D5276525252FD047DA87D7D7DA87D7DFD05FFFD%05F827A8FFA8FF52FD05F852FFA8FFA87DA8FFA8FF7DFD05FF27FD04F827%A8FFA8FFA8FD05F827FFA8FFFF7D7DFFA8FF7DA8FD04FFFD05F827A8FFA8%FF52FD05F852FFA8FFA87DA8FFA8FF7DFD05FFFD05F827A8FFA8FF52FD05%F852FFA8FFA87DA8FFA8FF7DFFFF7DA8CA27FD04F827FD04FF7DFD05F852%FD04FF52FD04FFA8A8FD04FF27FD05F8FD05FFFD05F852FD04FF52A8FFFF%FFA87DFFFFFFA827FD05F8FD04FF7DFD05F852FD04FF52FD04FFA8A8FFFF%FFA827FD04F827FD04FF52FD05F852FD04FF52FD04FF7DFFA8A8A8FFF827%F800F827FD04FF52F8F827F8F852FD04FF7DFD04FF7DFD05FF2727F800F8%27FD05FF27F827F8F852FD04FF7DA8FFFFFFA8A8FD04FFF827F800F827FD%04FF52F8F827F8F852FD04FF7DFD04FF7DFD05FFF827F800F827FD04FF52%F8F827F8F852FD04FF7DFD04FF7DFFFFA8FFFF27FD04F827FD04FF7DFD05%F852FD04FF52FD04FFA8A8FD04FF27FD05F8FD05FFFD05F852FD04FF52A8%FFFFFFA8A8FFFFFFA827FD05F8FD04FF7DFD05F852FD04FF52FD04FFA8A8%FFFFFFA827FD04F827FD04FF7DFD05F852FD04FF52FD04FFA8FD05FFFD05%F8277DA87DA827FD05F851A87DA87D527DA87DA852FD05FF27FD04F827A8%FFA8FFA827FD04F852FFA8CAA87D7DFFA8FF7DA8FD04FFFD05F827A8FFA8%FF52FD05F852FFA8FFA852A8FFA8FF7DFD05FFFD05F8277DA87DA827FD05%F851A87DA87D527DA87DA852FD04FFA8527D7D767D272D2D332D2DFD05F8%52FD047D27FD047D52A8FFFFFFA8FD04527D272D2D512D2DFD05F84B7D7D%527D2752527D76527DFFFFFFA8FD04527D272D2D522D27FD05F8527D7D52%7D277D527D7752A8FFFFFFA8527D7D767D272D2D332D27FD05F852FD047D%27FD047D52FFFFA8FFFFA8FD04FF58335E5D5E2D05F800F80552FD04FF7D%FD04FF7DFD05FFA8FD04FF7D335E395E3327F800F8F852FD04FF7DA8FFFF%FFA8A8FD04FFA8FD04FF7D335E395E2D05F800F80052FD04FF7DFD04FF7D%FD05FFA8FD04FF58335E5D5E2D27F800F80552FD04FF7DFD04FF7DFFFF7D%A8A8A8FD04FF5234335E332DFD05F876FD04FF52FD04FF7DA8FFFFFFA8A8%FD04FF5233335E3358FD05F852FD04FF76A8FFFFFFA87DFFFFFFA8A8FD04%FF5233335E332DFD05F876FD04FF52FD04FF7DA8FFFFFFA8A8FD04FF5234%335E332DFD05F876FD04FF52FD04FF7DFD05FF7DFD04FF58335E335E2DF8%F805F8F852FD04FF7DFD04FF7DFD05FF7DFD04FF7D335E335E5704F805F8%F852FD04FF7DA8FFFFFFA8A8FD04FF7DFD04FF7D335E335E2DF8F805F8F8%52FD04FF7DFD04FF7DFD05FF7DFD04FF58335E335E2DF8F805F8F852FD04%FF7DFD04FF7DFD04FFA87DFD04FF2D333357332DFD05F852FD04FF52FD04%A87DA8FFFFFFA87DFD04FF5233335D3358FD05F852FD04FF52A8FFFFA8A8%7DFFFFFFA8A8FD04FF5233335D332DFD05F852FD04FF52FFA8FFFF7DA8FF%FFFFA87DFD04FF2D333357332DFD05F852FD04FF52FD04A87DFD05FFFD04%27F8272E2E285328FD0552FD0427F827FD047D52FD05FFFD06272E522E53%2E2727522727274BFD0427527D527D52A8FD04FF2752275227282E522E52%FD0727522752274B527D527D52FD05FFFD0427F8272E2E285327FD0552FD%0427F827FD047D52FFFF7DFFFFFD05F8052F292F2953A9FFA9FFFF27FD04%F827FD04FFA8A8FD04FF27FD05F82F292F292F53FFA8FFA927FD05F8FD04%FFA8A8FFFFFFA8FD05F8002F292F2953A8FFA8FFA827FD04F826FD04FFA1%A8FFFFFFA8FD05F8052F292F2953A9FFA9FFFF27FD04F827FD04FFA8FFFF%A8A8FFF8F8F805F8282F542F2F28A9CBFFA9FF27F8F805F827FD04FF7DFD%05FF27F8F805F8272F542F2F297DFFFFA9FF27F8F805F827FD04FFA8A8FD%04FFF8F8F805F8272F542F2F28FFFFFFA9FF27F8F805F827FD04FF7DFD05%FFF8F8F805F8282F542F2F28A9CBFFA9FF27F8F805F827FD04FF7DFFFF7D%FFA827FD04F8052F292F292FA8FFA8FFA827FD04F827FD04FF7DA8FD04FF%27FD04F8002F292F292F52FFA8FFA827FD05F8FD04FFA87DFFFFFFA827FD%04F8002F292F292FA8FFA8FFA827FD04F827FD04FF7DA8FFFFFFA827FD04%F8052F292F292EA8FFA8FFA827FD04F827FD04FF7DFD05FFF8F8F827F828%2F542F3028FD05FF27F8F827F827FD04FFA8FD05FF27F8F827F8272F542F%54297DFD04FF27F8F827F827FD04FFA8A8FD04FFF8F8F827F8272F542F30%28FD05FF27F8F827F827FD04FFA8FD05FFF8F8F827F8282F542F3028FD05%FF27F8F827F827FD04FFA1FD04FFA827F820F820272F282F282827FD0452%FD0627FD0552A8FD04FF27F820F820002E282F2828277752525227F827F8%27F852527652527DFFFFFFA827F820F820002E282F2828FD055227F827F8%27275252765252A8FFFFFFA827F820F820272F282F282827FD0452FD0627%FD0552FD05FF6FB593B593522F2F295428FD05F853FFA9FFA952FD05F8FD%05FF75B593B59376292F29532FFD05F852FFA9FFFF52FD05F87DFD04FF6F%B593B59376072F295428FD05F852FFA9FFA952FD05F8FD05FF6FB593B593%522F2F295428FD05F853FFA9FFA952FD05F8FFFF7DA8A8758CB593B54B2F%292F2928FD05F87DA8FFA8FF27FD04F827A8FFFFFFA8758CB593B54B2F29%2F292FFD05F852A8FFA8FF52FD05F87DFFFFFFA8758CB593B54B2F292F29%28FD05F87DA8FFA8FF27FD05F8A8FFFFFFA8758CB593B54B2F292F2928FD%05F87DA8FFA8FF27FD05F8FFFFA8A8FF6FB5B5B593762F542F5428F8F827%F8F87DFFA9FFA952F800F827F8FD05FF75B5B5B593762F542F542F27F827%F8F852FFA9FFFF77F800F827F8A8FD04FF6FB5B5B593760D542F5428F8F8%27F8F87DFFA9FFA952F800F827F8FD05FF6FB5B5B593762F542F5428F8F8%27F8F87DFFA9FFA952F800F827F8FFFFA8FFA8998DB593B54B2F292F2928%FD05F87DFFFFCBFF27FD04F827A8FFFFFFA8758DB593B54B2F292F292FFD%05F852CBFFA8FF52FD05F87DFFFFFFA8758DB593B54B2F292F2928FD05F8%7DA9FFA9FF27FD04F827A8FFFFFFA8998DB593B54B2F292F2928FD05F87D%FFFFA9FF27FD04F827FD05FF4B6F6F936F4C2853282F2704F8F8F80052A8%7D7E7D27F805F8F8F8FD05FF75FD04936F07532F2F2927FD04F852FFA8A9%A952F805F8F8F8A8FD04FF6F938D93937007532F5327FD05F852FFA8A9A8%27F805F8F8F8FD05FF6F936F996F4C2853282F2704F8F8F80552A87DA27D%27F805F8F8F8FD04FFA87CFD047D2729282F2828282F282F2828282F282F%00FD05F8A8FFFFFFA876767D527D2728282F2828272F282806527D7D7DA8%27FD05F87DFFFFFFA852767C527D2728282F2828527D527D5252FD047D27%FD05F8A8FFFFFFA82E282F282F272F282F282E7DA87DA87D7D7D7E7DA827%FD05F8FFFFFFA8FFA8FD04FF5329542F5428532F542F5428302F542F27F8%27F8F8F8FD05FFA8FD04FF7D29542F542F532F542F2F53FFA9FFFF52F827%F8F8F8A8FD04FFA8FD04FF7E29542F3028FD05FF7DFFA9FFFF52F827F8F8%F8FD05FF2F302F542F2F2F542F302EFD05FF7DFFA9FFFF52F827F8F8F8FF%FF7DA8A8A8FD04FF522F292F2928282F292F292F292F292F05FD04F827A8%FFFFFFA8A8FD04FF532F292F292F282F292F287DFFFFA8FF52FD05F87DFF%FFFFA8A8FD04FF532F292F292EA8FFA8FFA27DA9FFA8FF27FD05F8A8FFFF%FFA853292F292F282F292F2952A8FFA8FFA27DA9FFA8FF27FD05F8FFFFA8%A8FF7DFD04FF532F2F2F54282F2F542F2F28542F2F2F27FD05F8FD05FF7D%FD04FF7D292F2F542F2F2F542F2F52FFA9FFFF52F8F8F805F8A1FD04FF7D%FD04FF7D292F2F3028A8A9FFCBA87DFFA9FFA952F8F8F805F8FD05FF2830%2F2F29FD042F302ECBA9FFCBA87DFFA9FFA952F8F8F805F8FD04FFA87DA8%FFA8A8282F292F0728282F062F2828072F292FFD06F8A8FFFFFFA87DA8FF%A8FF52290729062F062F062F0652A8A8A8FF27FD05F87DFFFFFFA87DFD04%FF5229292F072EA2CBA8FF7E7DA8A9A8FF27FD05F8A8FFFFFFA828062F29%29052F292F072E7DA87EA87D7DFD04A8FD06F8FD05FF7DA87DA8FD057D7E%537D7D7E7D7D537EFD047D527D527D52FD05FF7DA87DA87D7D537D537D59%7D53FD047DA87DA87D7DFD0552A8FD04FF7DA87DA87D7D537D537D527D7D%A87D7D7DA87DA87D522752275252FD05FF7D7EFD077D7E7DA87DA87DA87D%A87DA87D7D527D527D52FD46FFA8FD07FFCFFFFFFFCFFFFFFFA8FDBBFFA8%FFA8FD1FFFA8FD1DFF7EA8FD1EFF7DA8A8FD1CFFFD04A8FD1DFFA8A8A8FD%1CFFA8A853FF7DFD1BFFA8A884A8A8FD1BFFA87D847DA8FD1BFFA87DA87D%A8FD1BFF7DA827A87EA8FD1AFF7DA8A87DA8FD1BFF7DA87EA8A8FD1BFF7E%A87EA8A8FD1BFFA8A87DA87DFD1BFFFD04A8FD1DFF7EFFA8FD1DFF7D7EA8%FD1DFFA8FD1FFFA8FFA8FD0AFFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreateDate>2015-05-27T11:04:01+05:30</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS5</xmp:CreatorTool>
         <xmp:ModifyDate>2015-05-27T11:04:01+05:30</xmp:ModifyDate>
         <xmp:MetadataDate>2015-05-27T11:04:01+05:30</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>248</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA+AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qhtUW7bTbtbMkXbQy&#xA;C3IIB9QqeNCdhv44qo6Gl2lhS6EisZJTEkz+pKsRkJjDtVqkLTucVdFBfLrdxMzu1jJbxCNCy8Fl&#xA;Vn58VG+68SScVUfMkWpS2KLp3rC49VTygeNCFoas3qFAyjrxqKmldq4qj7kStZyiPkJTGwTiVV+R&#xA;XahIKg1+jFUB5ZXVU0lE1MOLpXkA9VlZ/T5kx8irPvxoPtE++Kt2EeuLrV/JeFDYSLGLII5PHiXB&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <pdfx:PTEX.Fullbanner>This is pdfTeX, Version 3.14159265-2.6-1.40.15 (TeX Live 2014) kpathsea version 6.2.0</pdfx:PTEX.Fullbanner>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>pdfTeX-1.40.15</pdf:Producer>
         <pdf:Trapped>False</pdf:Trapped>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:29CC7A02122068118083FCD562228612</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:29CC7A02122068118083FCD562228612</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:b55c2958-5e9c-5944-b46d-24e468c2fde7</stRef:instanceID>
            <stRef:documentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:documentID>
            <stRef:originalDocumentID>uuid:39ac3a3d-59f8-8246-ab76-e3fb9f563385</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:29CC7A02122068118083FCD562228612</stEvt:instanceID>
                  <stEvt:when>2015-05-27T11:04:01+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>51.000000</stDim:w>
            <stDim:h>66.000000</stDim:h>
            <stDim:unit>Picas</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -296.711 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 296.711 li
306.002 296.711 li
306.002 0 li
cp
clp
[1 0 0 1 0 0 ]ct
gsave
0 296.711 mo
306.002 296.711 li
306.002 0 li
0 0 li
0 296.711 li
cp
clp
25.2388 23.4336 mo
37.9766 23.4336 li
37.9766 36.1714 li
25.2388 36.1714 li
25.2388 23.4336 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.691 0 1 0 cmyk
f
.70766 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
25.2388 23.4336 mo
37.9766 23.4336 li
37.9766 36.1714 li
25.2388 36.1714 li
25.2388 23.4336 li
cp
.746 .676 .668 .898 cmyk
@
12.501 10.6953 mo
25.2388 10.6953 li
25.2388 23.4336 li
12.501 23.4336 li
12.501 10.6953 li
cp
f
12.501 10.6953 mo
25.2388 10.6953 li
25.2388 23.4336 li
12.501 23.4336 li
12.501 10.6953 li
cp
@
25.2388 10.6953 mo
37.9766 10.6953 li
37.9766 23.4336 li
25.2388 23.4336 li
25.2388 10.6953 li
cp
@
37.9766 10.6953 mo
50.7144 10.6953 li
50.7144 23.4336 li
37.9766 23.4336 li
37.9766 10.6953 li
cp
f
37.9766 10.6953 mo
50.7144 10.6953 li
50.7144 23.4336 li
37.9766 23.4336 li
37.9766 10.6953 li
cp
@
50.7144 10.6953 mo
63.4521 10.6953 li
63.4521 23.4336 li
50.7144 23.4336 li
50.7144 10.6953 li
cp
@
63.4521 10.6953 mo
76.1899 10.6953 li
76.1899 23.4336 li
63.4521 23.4336 li
63.4521 10.6953 li
cp
@
63.4521 23.4336 mo
76.1899 23.4336 li
76.1899 36.1714 li
63.4521 36.1714 li
63.4521 23.4336 li
cp
@
50.7144 23.4336 mo
63.4521 23.4336 li
63.4521 36.1714 li
50.7144 36.1714 li
50.7144 23.4336 li
cp
@
63.4521 36.1714 mo
76.1899 36.1714 li
76.1899 48.9092 li
63.4521 48.9092 li
63.4521 36.1714 li
cp
@
50.7144 36.1714 mo
63.4521 36.1714 li
63.4521 48.9092 li
50.7144 48.9092 li
50.7144 36.1714 li
cp
f
50.7144 36.1714 mo
63.4521 36.1714 li
63.4521 48.9092 li
50.7144 48.9092 li
50.7144 36.1714 li
cp
@
37.9766 36.1714 mo
50.7144 36.1714 li
50.7144 48.9092 li
37.9766 48.9092 li
37.9766 36.1714 li
cp
@
12.501 48.9092 mo
25.2388 48.9092 li
25.2388 61.647 li
12.501 61.647 li
12.501 48.9092 li
cp
0 .938 1 0 cmyk
f
12.501 48.9092 mo
25.2388 48.9092 li
25.2388 61.647 li
12.501 61.647 li
12.501 48.9092 li
cp
.746 .676 .668 .898 cmyk
@
12.501 36.1714 mo
25.2388 36.1714 li
25.2388 48.9092 li
12.501 48.9092 li
12.501 36.1714 li
cp
f
12.501 36.1714 mo
25.2388 36.1714 li
25.2388 48.9092 li
12.501 48.9092 li
12.501 36.1714 li
cp
@
25.2388 36.1714 mo
37.9766 36.1714 li
37.9766 48.9092 li
25.2388 48.9092 li
25.2388 36.1714 li
cp
@
25.2388 48.9092 mo
37.9766 48.9092 li
37.9766 61.647 li
25.2388 61.647 li
25.2388 48.9092 li
cp
@
37.9766 48.9092 mo
50.7144 48.9092 li
50.7144 61.647 li
37.9766 61.647 li
37.9766 48.9092 li
cp
f
37.9766 48.9092 mo
50.7144 48.9092 li
50.7144 61.647 li
37.9766 61.647 li
37.9766 48.9092 li
cp
@
50.7144 48.9092 mo
63.4521 48.9092 li
63.4521 61.647 li
50.7144 61.647 li
50.7144 48.9092 li
cp
@
63.4521 48.9092 mo
76.1899 48.9092 li
76.1899 61.647 li
63.4521 61.647 li
63.4521 48.9092 li
cp
f
63.4521 48.9092 mo
76.1899 48.9092 li
76.1899 61.647 li
63.4521 61.647 li
63.4521 48.9092 li
cp
@
12.501 61.647 mo
25.2388 61.647 li
25.2388 74.3848 li
12.501 74.3848 li
12.501 61.647 li
cp
@
25.2388 61.647 mo
37.9766 61.647 li
37.9766 74.3848 li
25.2388 74.3848 li
25.2388 61.647 li
cp
@
37.9766 61.647 mo
50.7144 61.647 li
50.7144 74.3848 li
37.9766 74.3848 li
37.9766 61.647 li
cp
@
50.7144 61.647 mo
63.4521 61.647 li
63.4521 74.3848 li
50.7144 74.3848 li
50.7144 61.647 li
cp
@
63.4521 61.647 mo
76.1899 61.647 li
76.1899 74.3848 li
63.4521 74.3848 li
63.4521 61.647 li
cp
f
63.4521 61.647 mo
76.1899 61.647 li
76.1899 74.3848 li
63.4521 74.3848 li
63.4521 61.647 li
cp
@
12.501 23.4336 mo
25.2388 23.4336 li
25.2388 36.1714 li
12.501 36.1714 li
12.501 23.4336 li
cp
@
37.9766 23.4336 mo
50.7144 23.4336 li
50.7144 36.1714 li
37.9766 36.1714 li
37.9766 23.4336 li
cp
f
37.9766 23.4336 mo
50.7144 23.4336 li
50.7144 36.1714 li
37.9766 36.1714 li
37.9766 23.4336 li
cp
@
44.5962 90.5293 mo
44.5962 90.7178 li
44.1079 90.4727 43.7012 90.1855 43.3745 89.8569 cv
42.9097 89.3896 42.5508 88.8379 42.2988 88.2031 cv
42.0469 87.5679 41.9209 86.9082 41.9209 86.2246 cv
41.9209 85.2251 42.168 84.3135 42.6626 83.4897 cv
43.1567 82.666 43.8013 82.0767 44.5962 81.7222 cv
44.5962 81.9302 li
44.1978 82.1489 43.8706 82.4482 43.6147 82.8281 cv
43.3589 83.208 43.168 83.6895 43.0415 84.272 cv
42.9155 84.8545 42.8521 85.4629 42.8521 86.0972 cv
42.8521 86.7856 42.9058 87.4121 43.0127 87.9756 cv
43.0967 88.4194 43.1987 88.7759 43.3184 89.0449 cv
43.4385 89.3135 43.5996 89.5718 43.8018 89.8198 cv
44.0044 90.0674 44.269 90.3042 44.5962 90.5293 cv
cp
0 0 0 1 cmyk
f
47.6274 87.9629 mo
47.1729 88.3159 46.8877 88.52 46.7715 88.5752 cv
46.5972 88.6563 46.4121 88.6968 46.2153 88.6968 cv
45.9087 88.6968 45.6563 88.5918 45.458 88.3818 cv
45.2598 88.1719 45.1606 87.896 45.1606 87.5537 cv
45.1606 87.3374 45.209 87.1504 45.3057 86.9922 cv
45.438 86.7725 45.668 86.5659 45.9951 86.3721 cv
46.3223 86.1782 46.8667 85.9429 47.6274 85.665 cv
47.6274 85.4912 li
47.6274 85.0503 47.5576 84.748 47.4175 84.584 cv
47.2778 84.4194 47.0742 84.3374 46.8076 84.3374 cv
46.605 84.3374 46.4438 84.3926 46.3252 84.502 cv
46.2031 84.6118 46.1416 84.7378 46.1416 84.8799 cv
46.1514 85.1606 li
46.1514 85.3091 46.1133 85.4238 46.0371 85.5044 cv
45.9609 85.585 45.8613 85.6255 45.7378 85.6255 cv
45.6177 85.6255 45.5195 85.5835 45.4434 85.4995 cv
45.3672 85.4155 45.3291 85.3008 45.3291 85.1553 cv
45.3291 84.8774 45.4712 84.6221 45.7554 84.3896 cv
46.0396 84.1567 46.439 84.04 46.9521 84.04 cv
47.3462 84.04 47.6694 84.1064 47.9214 84.2388 cv
48.1118 84.3389 48.2524 84.4956 48.3428 84.7085 cv
48.4009 84.8472 48.4302 85.1309 48.4302 85.5605 cv
48.4302 87.0659 li
48.4302 87.4888 48.438 87.7476 48.4546 87.8428 cv
48.4707 87.938 48.4971 88.002 48.5347 88.0342 cv
48.5718 88.0664 48.6147 88.0825 48.6636 88.0825 cv
48.7153 88.0825 48.7607 88.0713 48.7993 88.0488 cv
48.8677 88.0068 48.9985 87.8892 49.1929 87.6963 cv
49.1929 87.9663 li
48.8301 88.4531 48.4834 88.6968 48.1528 88.6968 cv
47.9937 88.6968 47.8677 88.6411 47.7734 88.5303 cv
47.6792 88.4194 47.6309 88.2305 47.6274 87.9629 cv
cp
47.6274 87.6484 mo
47.6274 85.9624 li
47.1377 86.1558 46.8213 86.2925 46.6787 86.373 cv
46.4224 86.5146 46.2388 86.6631 46.1284 86.8179 cv
46.0186 86.9722 45.9634 87.1416 45.9634 87.3252 cv
45.9634 87.5566 46.0327 87.7495 46.1724 87.9023 cv
46.312 88.0557 46.4727 88.1318 46.6543 88.1318 cv
46.9009 88.1318 47.2251 87.9707 47.6274 87.6484 cv
cp
f
49.4307 81.9302 mo
49.4307 81.7222 li
49.9219 81.9639 50.3306 82.249 50.6567 82.5781 cv
51.1187 83.0488 51.4756 83.6011 51.7275 84.2344 cv
51.9795 84.8682 52.1055 85.5283 52.1055 86.2148 cv
52.1055 87.2148 51.8594 88.126 51.3667 88.9502 cv
50.874 89.7739 50.2285 90.3633 49.4307 90.7178 cv
49.4307 90.5293 li
49.8291 90.3076 50.1567 90.0073 50.4141 89.6289 cv
50.6714 89.251 50.8628 88.7695 50.9873 88.1855 cv
51.1118 87.6011 51.1743 86.9917 51.1743 86.3579 cv
51.1743 85.6719 51.1211 85.0459 51.0142 84.4795 cv
50.9331 84.0352 50.832 83.6797 50.7104 83.4126 cv
50.5889 83.1455 50.4282 82.8877 50.2271 82.6396 cv
50.0264 82.3921 49.7607 82.1553 49.4307 81.9302 cv
cp
f
121.021 90.5293 mo
121.021 90.7178 li
120.533 90.4727 120.125 90.1855 119.799 89.8569 cv
119.334 89.3896 118.975 88.8379 118.723 88.2031 cv
118.471 87.5679 118.345 86.9082 118.345 86.2246 cv
118.345 85.2251 118.593 84.3135 119.087 83.4897 cv
119.581 82.666 120.226 82.0767 121.021 81.7222 cv
121.021 81.9302 li
120.622 82.1489 120.295 82.4482 120.039 82.8281 cv
119.784 83.208 119.592 83.6895 119.466 84.272 cv
119.34 84.8545 119.277 85.4629 119.277 86.0972 cv
119.277 86.7856 119.33 87.4121 119.437 87.9756 cv
119.521 88.4194 119.623 88.7759 119.743 89.0449 cv
119.863 89.3135 120.024 89.5718 120.226 89.8198 cv
120.429 90.0674 120.693 90.3042 121.021 90.5293 cv
cp
f
122.764 84.9414 mo
123.192 84.3408 123.654 84.04 124.15 84.04 cv
124.604 84.04 125 84.2344 125.338 84.623 cv
125.676 85.0117 125.845 85.543 125.845 86.2168 cv
125.845 87.0034 125.584 87.6367 125.062 88.1172 cv
124.614 88.5298 124.114 88.7363 123.563 88.7363 cv
123.305 88.7363 123.042 88.6895 122.776 88.5952 cv
122.511 88.5015 122.239 88.3604 121.961 88.1724 cv
121.961 83.5947 li
121.961 83.0923 121.949 82.7832 121.925 82.6675 cv
121.901 82.5518 121.863 82.4727 121.811 82.4307 cv
121.759 82.3887 121.694 82.3677 121.617 82.3677 cv
121.526 82.3677 121.413 82.3936 121.277 82.4453 cv
121.208 82.2671 li
122.545 81.7222 li
122.764 81.7222 li
122.764 84.9414 li
cp
122.764 85.25 mo
122.764 87.8926 li
122.928 88.0532 123.099 88.1748 123.274 88.2568 cv
123.45 88.3389 123.63 88.3799 123.813 88.3799 cv
124.107 88.3799 124.38 88.2188 124.633 87.8975 cv
124.886 87.5762 125.013 87.1079 125.013 86.4941 cv
125.013 85.9282 124.886 85.4932 124.633 85.1895 cv
124.38 84.8857 124.092 84.7339 123.77 84.7339 cv
123.599 84.7339 123.428 84.7773 123.257 84.8643 cv
123.128 84.9282 122.964 85.0566 122.764 85.25 cv
cp
f
126.41 81.9302 mo
126.41 81.7222 li
126.901 81.9639 127.31 82.249 127.636 82.5781 cv
128.098 83.0488 128.455 83.6011 128.707 84.2344 cv
128.959 84.8682 129.085 85.5283 129.085 86.2148 cv
129.085 87.2148 128.838 88.126 128.346 88.9502 cv
127.853 89.7739 127.208 90.3633 126.41 90.7178 cv
126.41 90.5293 li
126.808 90.3076 127.136 90.0073 127.394 89.6289 cv
127.651 89.251 127.842 88.7695 127.967 88.1855 cv
128.091 87.6011 128.154 86.9917 128.154 86.3579 cv
128.154 85.6719 128.1 85.0459 127.994 84.4795 cv
127.913 84.0352 127.811 83.6797 127.69 83.4126 cv
127.568 83.1455 127.407 82.8877 127.207 82.6396 cv
127.006 82.3921 126.74 82.1553 126.41 81.9302 cv
cp
f
197.445 90.5293 mo
197.445 90.7178 li
196.958 90.4727 196.55 90.1855 196.223 89.8569 cv
195.758 89.3896 195.4 88.8379 195.148 88.2031 cv
194.896 87.5679 194.77 86.9082 194.77 86.2246 cv
194.77 85.2251 195.017 84.3135 195.511 83.4897 cv
196.005 82.666 196.65 82.0767 197.445 81.7222 cv
197.445 81.9302 li
197.046 82.1489 196.719 82.4482 196.463 82.8281 cv
196.208 83.208 196.017 83.6895 195.89 84.272 cv
195.764 84.8545 195.702 85.4629 195.702 86.0972 cv
195.702 86.7856 195.754 87.4121 195.862 87.9756 cv
195.946 88.4194 196.047 88.7759 196.167 89.0449 cv
196.288 89.3135 196.449 89.5718 196.651 89.8198 cv
196.853 90.0674 197.118 90.3042 197.445 90.5293 cv
cp
f
201.745 86.9219 mo
201.625 87.5073 201.391 87.9561 201.043 88.2681 cv
200.695 88.5801 200.309 88.7363 199.887 88.7363 cv
199.383 88.7363 198.945 88.5254 198.571 88.103 cv
198.197 87.6807 198.009 87.1099 198.009 86.3906 cv
198.009 85.6943 198.216 85.1284 198.63 84.6934 cv
199.045 84.2578 199.542 84.04 200.123 84.04 cv
200.557 84.04 200.915 84.1558 201.195 84.3862 cv
201.476 84.6172 201.616 84.8564 201.616 85.105 cv
201.616 85.2275 201.577 85.3271 201.498 85.4028 cv
201.418 85.4785 201.308 85.5166 201.167 85.5166 cv
200.976 85.5166 200.834 85.4546 200.741 85.3311 cv
200.683 85.2632 200.645 85.1333 200.627 84.9419 cv
200.61 84.75 200.544 84.604 200.431 84.5034 cv
200.319 84.4063 200.163 84.3574 199.962 84.3574 cv
199.64 84.3574 199.38 84.4771 199.184 84.7158 cv
198.922 85.0327 198.792 85.4512 198.792 85.9717 cv
198.792 86.5015 198.922 86.9692 199.182 87.375 cv
199.442 87.7808 199.793 87.9834 200.236 87.9834 cv
200.551 87.9834 200.835 87.877 201.087 87.665 cv
201.265 87.5171 201.438 87.2466 201.606 86.854 cv
201.745 86.9219 li
cp
f
202.28 81.9302 mo
202.28 81.7222 li
202.771 81.9639 203.179 82.249 203.505 82.5781 cv
203.967 83.0488 204.325 83.6011 204.577 84.2344 cv
204.829 84.8682 204.955 85.5283 204.955 86.2148 cv
204.955 87.2148 204.708 88.126 204.215 88.9502 cv
203.723 89.7739 203.078 90.3633 202.28 90.7178 cv
202.28 90.5293 li
202.678 90.3076 203.005 90.0073 203.263 89.6289 cv
203.52 89.251 203.711 88.7695 203.836 88.1855 cv
203.961 87.6011 204.023 86.9917 204.023 86.3579 cv
204.023 85.6719 203.97 85.0459 203.863 84.4795 cv
203.782 84.0352 203.681 83.6797 203.559 83.4126 cv
203.438 83.1455 203.277 82.8877 203.076 82.6396 cv
202.875 82.3921 202.61 82.1553 202.28 81.9302 cv
cp
f
273.87 90.5293 mo
273.87 90.7178 li
273.381 90.4727 272.974 90.1855 272.648 89.8569 cv
272.183 89.3896 271.825 88.8379 271.572 88.2031 cv
271.321 87.5679 271.195 86.9082 271.195 86.2246 cv
271.195 85.2251 271.442 84.3135 271.936 83.4897 cv
272.43 82.666 273.075 82.0767 273.87 81.7222 cv
273.87 81.9302 li
273.471 82.1489 273.144 82.4482 272.888 82.8281 cv
272.632 83.208 272.441 83.6895 272.315 84.272 cv
272.189 84.8545 272.125 85.4629 272.125 86.0972 cv
272.125 86.7856 272.179 87.4121 272.286 87.9756 cv
272.37 88.4194 272.472 88.7759 272.592 89.0449 cv
272.711 89.3135 272.873 89.5718 273.075 89.8198 cv
273.278 90.0674 273.542 90.3042 273.87 90.5293 cv
cp
f
277.525 88.0947 mo
277.309 88.3252 277.098 88.4893 276.891 88.5884 cv
276.685 88.687 276.462 88.7363 276.224 88.7363 cv
275.74 88.7363 275.317 88.5342 274.956 88.1299 cv
274.595 87.7256 274.415 87.2065 274.415 86.5718 cv
274.415 85.9375 274.614 85.3569 275.014 84.8301 cv
275.415 84.3037 275.928 84.04 276.557 84.04 cv
276.948 84.04 277.27 84.165 277.525 84.415 cv
277.525 83.5947 li
277.525 83.0913 277.513 82.7817 277.489 82.6665 cv
277.464 82.5508 277.426 82.4727 277.375 82.4307 cv
277.323 82.3887 277.258 82.3677 277.18 82.3677 cv
277.096 82.3677 276.985 82.3936 276.845 82.4453 cv
276.782 82.2671 li
278.109 81.7222 li
278.328 81.7222 li
278.328 86.8442 li
278.328 87.3604 278.339 87.6758 278.364 87.7896 cv
278.388 87.9033 278.427 87.9824 278.481 88.0278 cv
278.534 88.0728 278.596 88.0952 278.667 88.0952 cv
278.755 88.0952 278.872 88.0679 279.017 88.0132 cv
279.071 88.1914 li
277.749 88.7363 li
277.525 88.7363 li
277.525 88.0947 li
cp
277.525 87.7568 mo
277.525 85.4873 li
277.505 85.2646 277.448 85.0635 277.351 84.8833 cv
277.253 84.7031 277.125 84.5669 276.965 84.4751 cv
276.805 84.3833 276.65 84.3374 276.498 84.3374 cv
276.213 84.3374 275.959 84.4648 275.737 84.7192 cv
275.443 85.0537 275.296 85.5435 275.296 86.1875 cv
275.296 86.8379 275.438 87.3359 275.722 87.6821 cv
276.006 88.0283 276.324 88.2012 276.672 88.2012 cv
276.966 88.2012 277.25 88.0532 277.525 87.7568 cv
cp
f
279.259 81.9302 mo
279.259 81.7222 li
279.75 81.9639 280.159 82.249 280.485 82.5781 cv
280.947 83.0488 281.304 83.6011 281.556 84.2344 cv
281.808 84.8682 281.934 85.5283 281.934 86.2148 cv
281.934 87.2148 281.687 88.126 281.195 88.9502 cv
280.702 89.7739 280.057 90.3633 279.259 90.7178 cv
279.259 90.5293 li
279.657 90.3076 279.985 90.0073 280.243 89.6289 cv
280.5 89.251 280.691 88.7695 280.816 88.1855 cv
280.94 87.6011 281.002 86.9917 281.002 86.3579 cv
281.002 85.6719 280.949 85.0459 280.842 84.4795 cv
280.761 84.0352 280.66 83.6797 280.539 83.4126 cv
280.417 83.1455 280.256 82.8877 280.055 82.6396 cv
279.855 82.3921 279.589 82.1553 279.259 81.9302 cv
cp
f
44.5859 192.436 mo
44.5859 192.624 li
44.0981 192.378 43.6909 192.092 43.3647 191.763 cv
42.8994 191.295 42.541 190.744 42.2891 190.109 cv
42.0371 189.474 41.9111 188.814 41.9111 188.13 cv
41.9111 187.131 42.1582 186.219 42.6523 185.396 cv
43.147 184.572 43.7915 183.982 44.5859 183.628 cv
44.5859 183.836 li
44.188 184.055 43.8608 184.354 43.605 184.734 cv
43.3491 185.114 43.1582 185.595 43.0317 186.178 cv
42.9053 186.76 42.8423 187.369 42.8423 188.003 cv
42.8423 188.692 42.896 189.318 43.0024 189.881 cv
43.0869 190.325 43.189 190.682 43.3086 190.951 cv
43.4282 191.219 43.5894 191.478 43.792 191.726 cv
43.9941 191.974 44.2588 192.21 44.5859 192.436 cv
cp
f
45.854 187.749 mo
45.8511 188.404 46.0107 188.918 46.333 189.291 cv
46.6558 189.663 47.0347 189.85 47.4702 189.85 cv
47.7603 189.85 48.0127 189.771 48.2271 189.612 cv
48.4419 189.454 48.6216 189.18 48.7671 188.79 cv
48.9155 188.886 li
48.8477 189.333 48.6514 189.737 48.3257 190.099 cv
48.0005 190.461 47.5933 190.642 47.1035 190.642 cv
46.5718 190.642 46.1167 190.435 45.7383 190.021 cv
45.3599 189.607 45.1704 189.051 45.1704 188.352 cv
45.1704 187.595 45.3647 187.005 45.7529 186.582 cv
46.1411 186.158 46.6284 185.946 47.2144 185.946 cv
47.7104 185.946 48.1182 186.11 48.437 186.437 cv
48.7559 186.764 48.9155 187.201 48.9155 187.749 cv
45.854 187.749 li
cp
45.854 187.472 mo
47.9048 187.472 li
47.8887 187.188 47.855 186.989 47.8032 186.873 cv
47.7227 186.692 47.6025 186.551 47.4429 186.448 cv
47.2832 186.345 47.1167 186.293 46.9424 186.293 cv
46.6748 186.293 46.4355 186.397 46.2241 186.604 cv
46.0132 186.813 45.8896 187.102 45.854 187.472 cv
cp
f
49.4209 183.836 mo
49.4209 183.628 li
49.9116 183.87 50.3203 184.155 50.647 184.484 cv
51.1089 184.955 51.4658 185.507 51.7178 186.141 cv
51.9697 186.774 52.0957 187.434 52.0957 188.121 cv
52.0957 189.121 51.8496 190.032 51.3569 190.856 cv
50.8643 191.68 50.2188 192.269 49.4209 192.624 cv
49.4209 192.436 li
49.8188 192.213 50.147 191.913 50.4043 191.535 cv
50.6616 191.157 50.853 190.675 50.9775 190.091 cv
51.1021 189.507 51.1646 188.898 51.1646 188.264 cv
51.1646 187.578 51.1108 186.952 51.0044 186.385 cv
50.9233 185.941 50.8218 185.585 50.7007 185.318 cv
50.5791 185.051 50.418 184.793 50.2173 184.546 cv
50.0166 184.298 49.751 184.061 49.4209 183.836 cv
cp
f
121.01 192.436 mo
121.01 192.624 li
120.522 192.378 120.116 192.092 119.79 191.763 cv
119.324 191.295 118.965 190.744 118.713 190.109 cv
118.461 189.474 118.335 188.814 118.335 188.13 cv
118.335 187.131 118.583 186.219 119.077 185.396 cv
119.571 184.572 120.216 183.982 121.01 183.628 cv
121.01 183.836 li
120.612 184.055 120.285 184.354 120.029 184.734 cv
119.773 185.114 119.583 185.595 119.456 186.178 cv
119.33 186.76 119.267 187.369 119.267 188.003 cv
119.267 188.692 119.32 189.318 119.427 189.881 cv
119.511 190.325 119.613 190.682 119.733 190.951 cv
119.853 191.219 120.014 191.478 120.216 191.726 cv
120.419 191.974 120.684 192.21 121.01 192.436 cv
cp
f
123.27 186.422 mo
123.27 189.344 li
123.27 189.755 123.315 190.015 123.405 190.124 cv
123.525 190.265 123.686 190.335 123.887 190.335 cv
124.29 190.335 li
124.29 190.513 li
121.635 190.513 li
121.635 190.335 li
121.833 190.335 li
121.962 190.335 122.08 190.303 122.186 190.239 cv
122.292 190.175 122.366 190.088 122.406 189.979 cv
122.447 189.87 122.467 189.659 122.467 189.344 cv
122.467 186.422 li
121.605 186.422 li
121.605 186.075 li
122.467 186.075 li
122.467 185.786 li
122.467 185.346 122.538 184.974 122.68 184.669 cv
122.823 184.364 123.04 184.117 123.333 183.93 cv
123.625 183.742 123.955 183.647 124.32 183.647 cv
124.66 183.647 124.972 183.756 125.257 183.974 cv
125.444 184.118 125.538 184.279 125.538 184.458 cv
125.538 184.554 125.496 184.645 125.412 184.729 cv
125.328 184.814 125.238 184.856 125.141 184.856 cv
125.066 184.856 124.988 184.83 124.905 184.777 cv
124.823 184.725 124.722 184.611 124.603 184.438 cv
124.483 184.263 124.373 184.146 124.273 184.085 cv
124.173 184.025 124.061 183.995 123.938 183.995 cv
123.79 183.995 123.664 184.034 123.56 184.112 cv
123.457 184.191 123.382 184.313 123.337 184.479 cv
123.292 184.644 123.27 185.07 123.27 185.757 cv
123.27 186.075 li
124.409 186.075 li
124.409 186.422 li
123.27 186.422 li
cp
f
124.746 183.836 mo
124.746 183.628 li
125.237 183.87 125.645 184.155 125.972 184.484 cv
126.434 184.955 126.791 185.507 127.042 186.141 cv
127.294 186.774 127.42 187.434 127.42 188.121 cv
127.42 189.121 127.174 190.032 126.682 190.856 cv
126.189 191.68 125.543 192.269 124.746 192.624 cv
124.746 192.436 li
125.144 192.213 125.472 191.913 125.729 191.535 cv
125.986 191.157 126.178 190.675 126.302 190.091 cv
126.427 189.507 126.489 188.898 126.489 188.264 cv
126.489 187.578 126.436 186.952 126.329 186.385 cv
126.248 185.941 126.147 185.585 126.025 185.318 cv
125.904 185.051 125.743 184.793 125.542 184.546 cv
125.341 184.298 125.076 184.061 124.746 183.836 cv
cp
f
197.435 192.436 mo
197.435 192.624 li
196.947 192.378 196.541 192.092 196.213 191.763 cv
195.749 191.295 195.39 190.744 195.138 190.109 cv
194.886 189.474 194.76 188.814 194.76 188.13 cv
194.76 187.131 195.007 186.219 195.501 185.396 cv
195.996 184.572 196.64 183.982 197.435 183.628 cv
197.435 183.836 li
197.037 184.055 196.709 184.354 196.454 184.734 cv
196.198 185.114 196.007 185.595 195.88 186.178 cv
195.754 186.76 195.691 187.369 195.691 188.003 cv
195.691 188.692 195.745 189.318 195.851 189.881 cv
195.936 190.325 196.038 190.682 196.158 190.951 cv
196.278 191.219 196.438 191.478 196.641 191.726 cv
196.843 191.974 197.108 192.21 197.435 192.436 cv
cp
f
199.146 188.888 mo
198.875 188.755 198.668 188.571 198.524 188.334 cv
198.379 188.098 198.307 187.836 198.307 187.55 cv
198.307 187.112 198.471 186.735 198.801 186.419 cv
199.131 186.104 199.553 185.946 200.068 185.946 cv
200.49 185.946 200.855 186.048 201.164 186.253 cv
202.1 186.253 li
202.238 186.253 202.319 186.257 202.341 186.266 cv
202.364 186.273 202.379 186.287 202.389 186.307 cv
202.409 186.335 202.418 186.387 202.418 186.461 cv
202.418 186.545 202.411 186.604 202.394 186.636 cv
202.384 186.652 202.368 186.665 202.343 186.675 cv
202.319 186.685 202.238 186.689 202.099 186.689 cv
201.523 186.689 li
201.704 186.921 201.794 187.218 201.794 187.579 cv
201.794 187.991 201.636 188.344 201.322 188.637 cv
201.006 188.93 200.583 189.077 200.053 189.077 cv
199.834 189.077 199.611 189.044 199.382 188.98 cv
199.241 189.103 199.145 189.21 199.095 189.303 cv
199.045 189.395 199.02 189.473 199.02 189.538 cv
199.02 189.593 199.046 189.646 199.1 189.698 cv
199.153 189.75 199.257 189.787 199.413 189.81 cv
199.502 189.824 199.728 189.836 200.089 189.846 cv
200.754 189.864 201.185 189.888 201.381 189.919 cv
201.681 189.961 201.921 190.072 202.1 190.253 cv
202.279 190.434 202.369 190.656 202.369 190.921 cv
202.369 191.285 202.198 191.627 201.856 191.947 cv
201.354 192.418 200.698 192.653 199.889 192.653 cv
199.267 192.653 198.742 192.513 198.313 192.232 cv
198.071 192.071 197.95 191.903 197.95 191.729 cv
197.95 191.651 197.968 191.574 198.003 191.496 cv
198.058 191.376 198.17 191.21 198.341 190.997 cv
198.364 190.968 198.529 190.794 198.834 190.475 cv
198.667 190.374 198.549 190.284 198.48 190.204 cv
198.411 190.125 198.376 190.035 198.376 189.934 cv
198.376 189.82 198.422 189.688 198.513 189.535 cv
198.605 189.382 198.816 189.167 199.146 188.888 cv
cp
199.988 186.184 mo
199.75 186.184 199.55 186.279 199.39 186.468 cv
199.229 186.658 199.149 186.948 199.149 187.34 cv
199.149 187.848 199.258 188.242 199.477 188.521 cv
199.644 188.733 199.856 188.839 200.113 188.839 cv
200.358 188.839 200.558 188.748 200.715 188.564 cv
200.874 188.381 200.952 188.094 200.952 187.702 cv
200.952 187.191 200.841 186.791 200.62 186.502 cv
200.456 186.29 200.245 186.184 199.988 186.184 cv
cp
199.1 190.513 mo
198.95 190.678 198.836 190.831 198.759 190.972 cv
198.682 191.114 198.644 191.244 198.644 191.364 cv
198.644 191.518 198.737 191.653 198.923 191.77 cv
199.246 191.969 199.71 192.069 200.318 192.069 cv
200.897 192.069 201.325 191.966 201.599 191.762 cv
201.875 191.557 202.012 191.338 202.012 191.106 cv
202.012 190.938 201.93 190.819 201.766 190.748 cv
201.598 190.677 201.267 190.635 200.771 190.623 cv
200.047 190.604 199.49 190.567 199.1 190.513 cv
cp
f
202.825 183.836 mo
202.825 183.628 li
203.316 183.87 203.724 184.155 204.05 184.484 cv
204.512 184.955 204.87 185.507 205.122 186.141 cv
205.374 186.774 205.5 187.434 205.5 188.121 cv
205.5 189.121 205.253 190.032 204.76 190.856 cv
204.268 191.68 203.623 192.269 202.825 192.624 cv
202.825 192.436 li
203.223 192.213 203.55 191.913 203.808 191.535 cv
204.065 191.157 204.256 190.675 204.381 190.091 cv
204.506 189.507 204.568 188.898 204.568 188.264 cv
204.568 187.578 204.515 186.952 204.408 186.385 cv
204.327 185.941 204.226 185.585 204.104 185.318 cv
203.983 185.051 203.822 184.793 203.621 184.546 cv
203.42 184.298 203.155 184.061 202.825 183.836 cv
cp
f
273.86 192.436 mo
273.86 192.624 li
273.372 192.378 272.964 192.092 272.638 191.763 cv
272.173 191.295 271.814 190.744 271.562 190.109 cv
271.31 189.474 271.184 188.814 271.184 188.13 cv
271.184 187.131 271.431 186.219 271.926 185.396 cv
272.42 184.572 273.065 183.982 273.86 183.628 cv
273.86 183.836 li
273.461 184.055 273.134 184.354 272.878 184.734 cv
272.623 185.114 272.431 185.595 272.305 186.178 cv
272.179 186.76 272.116 187.369 272.116 188.003 cv
272.116 188.692 272.169 189.318 272.276 189.881 cv
272.36 190.325 272.462 190.682 272.582 190.951 cv
272.702 191.219 272.863 191.478 273.065 191.726 cv
273.268 191.974 273.533 192.21 273.86 192.436 cv
cp
f
275.692 183.628 mo
275.692 186.87 li
276.05 186.477 276.334 186.224 276.544 186.113 cv
276.754 186.002 276.964 185.946 277.174 185.946 cv
277.426 185.946 277.643 186.016 277.824 186.154 cv
278.004 186.293 278.138 186.512 278.225 186.809 cv
278.287 187.016 278.318 187.394 278.318 187.942 cv
278.318 189.513 li
278.318 189.792 278.34 189.982 278.385 190.085 cv
278.417 190.162 278.471 190.223 278.548 190.268 cv
278.625 190.313 278.766 190.335 278.971 190.335 cv
278.971 190.513 li
276.802 190.513 li
276.802 190.335 li
276.903 190.335 li
277.109 190.335 277.251 190.304 277.332 190.241 cv
277.413 190.179 277.468 190.086 277.5 189.965 cv
277.51 189.914 277.515 189.763 277.515 189.513 cv
277.515 187.942 li
277.515 187.457 277.49 187.139 277.44 186.986 cv
277.39 186.834 277.31 186.721 277.2 186.645 cv
277.09 186.569 276.958 186.531 276.802 186.531 cv
276.644 186.531 276.479 186.573 276.308 186.657 cv
276.136 186.741 275.931 186.91 275.692 187.166 cv
275.692 189.513 li
275.692 189.814 275.709 190.001 275.743 190.076 cv
275.777 190.149 275.839 190.211 275.931 190.261 cv
276.022 190.31 276.181 190.335 276.406 190.335 cv
276.406 190.513 li
274.216 190.513 li
274.216 190.335 li
274.412 190.335 274.566 190.305 274.678 190.244 cv
274.743 190.211 274.793 190.151 274.833 190.061 cv
274.871 189.971 274.89 189.789 274.89 189.513 cv
274.89 185.5 li
274.89 184.997 274.877 184.688 274.854 184.572 cv
274.83 184.457 274.792 184.378 274.743 184.336 cv
274.693 184.295 274.626 184.273 274.542 184.273 cv
274.475 184.273 274.366 184.299 274.214 184.351 cv
274.147 184.173 li
275.47 183.628 li
275.692 183.628 li
cp
f
279.249 183.836 mo
279.249 183.628 li
279.74 183.87 280.149 184.155 280.475 184.484 cv
280.937 184.955 281.294 185.507 281.545 186.141 cv
281.798 186.774 281.924 187.434 281.924 188.121 cv
281.924 189.121 281.677 190.032 281.185 190.856 cv
280.692 191.68 280.047 192.269 279.249 192.624 cv
279.249 192.436 li
279.647 192.213 279.975 191.913 280.232 191.535 cv
280.49 191.157 280.681 190.675 280.805 190.091 cv
280.93 189.507 280.993 188.898 280.993 188.264 cv
280.993 187.578 280.939 186.952 280.833 186.385 cv
280.751 185.941 280.65 185.585 280.529 185.318 cv
280.408 185.051 280.247 184.793 280.045 184.546 cv
279.844 184.298 279.58 184.061 279.249 183.836 cv
cp
f
101.666 23.4336 mo
114.404 23.4336 li
114.404 36.1714 li
101.666 36.1714 li
101.666 23.4336 li
cp
.691 0 1 0 cmyk
f
101.666 23.4336 mo
114.404 23.4336 li
114.404 36.1714 li
101.666 36.1714 li
101.666 23.4336 li
cp
.746 .676 .668 .898 cmyk
@
88.9282 10.6953 mo
101.666 10.6953 li
101.666 23.4336 li
88.9282 23.4336 li
88.9282 10.6953 li
cp
f
88.9282 10.6953 mo
101.666 10.6953 li
101.666 23.4336 li
88.9282 23.4336 li
88.9282 10.6953 li
cp
@
101.666 10.6953 mo
114.404 10.6953 li
114.404 23.4336 li
101.666 23.4336 li
101.666 10.6953 li
cp
@
114.404 10.6953 mo
127.142 10.6953 li
127.142 23.4336 li
114.404 23.4336 li
114.404 10.6953 li
cp
f
114.404 10.6953 mo
127.142 10.6953 li
127.142 23.4336 li
114.404 23.4336 li
114.404 10.6953 li
cp
@
127.142 10.6953 mo
139.879 10.6953 li
139.879 23.4336 li
127.142 23.4336 li
127.142 10.6953 li
cp
@
139.879 10.6953 mo
152.618 10.6953 li
152.618 23.4336 li
139.879 23.4336 li
139.879 10.6953 li
cp
@
139.879 23.4336 mo
152.618 23.4336 li
152.618 36.1714 li
139.879 36.1714 li
139.879 23.4336 li
cp
@
127.142 23.4336 mo
139.879 23.4336 li
139.879 36.1714 li
127.142 36.1714 li
127.142 23.4336 li
cp
@
139.879 36.1714 mo
152.618 36.1714 li
152.618 48.9092 li
139.879 48.9092 li
139.879 36.1714 li
cp
@
127.142 36.1714 mo
139.879 36.1714 li
139.879 48.9092 li
127.142 48.9092 li
127.142 36.1714 li
cp
f
127.142 36.1714 mo
139.879 36.1714 li
139.879 48.9092 li
127.142 48.9092 li
127.142 36.1714 li
cp
@
114.404 36.1714 mo
127.142 36.1714 li
127.142 48.9092 li
114.404 48.9092 li
114.404 36.1714 li
cp
@
88.9282 48.9092 mo
101.666 48.9092 li
101.666 61.647 li
88.9282 61.647 li
88.9282 48.9092 li
cp
0 .938 1 0 cmyk
f
88.9282 48.9092 mo
101.666 48.9092 li
101.666 61.647 li
88.9282 61.647 li
88.9282 48.9092 li
cp
.746 .676 .668 .898 cmyk
@
88.9282 36.1714 mo
101.666 36.1714 li
101.666 48.9092 li
88.9282 48.9092 li
88.9282 36.1714 li
cp
f
88.9282 36.1714 mo
101.666 36.1714 li
101.666 48.9092 li
88.9282 48.9092 li
88.9282 36.1714 li
cp
@
101.666 36.1714 mo
114.404 36.1714 li
114.404 48.9092 li
101.666 48.9092 li
101.666 36.1714 li
cp
.855 .73 0 0 cmyk
f
101.666 36.1714 mo
114.404 36.1714 li
114.404 48.9092 li
101.666 48.9092 li
101.666 36.1714 li
cp
.746 .676 .668 .898 cmyk
@
101.666 48.9092 mo
114.404 48.9092 li
114.404 61.647 li
101.666 61.647 li
101.666 48.9092 li
cp
@
114.404 48.9092 mo
127.142 48.9092 li
127.142 61.647 li
114.404 61.647 li
114.404 48.9092 li
cp
f
114.404 48.9092 mo
127.142 48.9092 li
127.142 61.647 li
114.404 61.647 li
114.404 48.9092 li
cp
@
127.142 48.9092 mo
139.879 48.9092 li
139.879 61.647 li
127.142 61.647 li
127.142 48.9092 li
cp
@
139.879 48.9092 mo
152.618 48.9092 li
152.618 61.647 li
139.879 61.647 li
139.879 48.9092 li
cp
f
139.879 48.9092 mo
152.618 48.9092 li
152.618 61.647 li
139.879 61.647 li
139.879 48.9092 li
cp
@
88.9282 61.647 mo
101.666 61.647 li
101.666 74.3848 li
88.9282 74.3848 li
88.9282 61.647 li
cp
@
101.666 61.647 mo
114.404 61.647 li
114.404 74.3848 li
101.666 74.3848 li
101.666 61.647 li
cp
@
114.404 61.647 mo
127.142 61.647 li
127.142 74.3848 li
114.404 74.3848 li
114.404 61.647 li
cp
@
127.142 61.647 mo
139.879 61.647 li
139.879 74.3848 li
127.142 74.3848 li
127.142 61.647 li
cp
@
139.879 61.647 mo
152.618 61.647 li
152.618 74.3848 li
139.879 74.3848 li
139.879 61.647 li
cp
f
139.879 61.647 mo
152.618 61.647 li
152.618 74.3848 li
139.879 74.3848 li
139.879 61.647 li
cp
@
88.9282 23.4336 mo
101.666 23.4336 li
101.666 36.1714 li
88.9282 36.1714 li
88.9282 23.4336 li
cp
@
114.404 23.4336 mo
127.142 23.4336 li
127.142 36.1714 li
114.404 36.1714 li
114.404 23.4336 li
cp
f
114.404 23.4336 mo
127.142 23.4336 li
127.142 36.1714 li
114.404 36.1714 li
114.404 23.4336 li
cp
@
178.093 23.4336 mo
190.831 23.4336 li
190.831 36.1714 li
178.093 36.1714 li
178.093 23.4336 li
cp
.691 0 1 0 cmyk
f
178.093 23.4336 mo
190.831 23.4336 li
190.831 36.1714 li
178.093 36.1714 li
178.093 23.4336 li
cp
.746 .676 .668 .898 cmyk
@
165.355 10.6953 mo
178.093 10.6953 li
178.093 23.4336 li
165.355 23.4336 li
165.355 10.6953 li
cp
f
165.355 10.6953 mo
178.093 10.6953 li
178.093 23.4336 li
165.355 23.4336 li
165.355 10.6953 li
cp
@
178.093 10.6953 mo
190.831 10.6953 li
190.831 23.4336 li
178.093 23.4336 li
178.093 10.6953 li
cp
@
190.832 10.6953 mo
203.569 10.6953 li
203.569 23.4336 li
190.832 23.4336 li
190.832 10.6953 li
cp
f
190.832 10.6953 mo
203.569 10.6953 li
203.569 23.4336 li
190.832 23.4336 li
190.832 10.6953 li
cp
@
203.569 10.6953 mo
216.307 10.6953 li
216.307 23.4336 li
203.569 23.4336 li
203.569 10.6953 li
cp
@
216.307 10.6953 mo
229.044 10.6953 li
229.044 23.4336 li
216.307 23.4336 li
216.307 10.6953 li
cp
@
216.307 23.4336 mo
229.044 23.4336 li
229.044 36.1714 li
216.307 36.1714 li
216.307 23.4336 li
cp
@
203.569 23.4336 mo
216.307 23.4336 li
216.307 36.1714 li
203.569 36.1714 li
203.569 23.4336 li
cp
@
216.307 36.1714 mo
229.044 36.1714 li
229.044 48.9092 li
216.307 48.9092 li
216.307 36.1714 li
cp
@
203.569 36.1714 mo
216.307 36.1714 li
216.307 48.9092 li
203.569 48.9092 li
203.569 36.1714 li
cp
f
203.569 36.1714 mo
216.307 36.1714 li
216.307 48.9092 li
203.569 48.9092 li
203.569 36.1714 li
cp
@
190.832 36.1714 mo
203.569 36.1714 li
203.569 48.9092 li
190.832 48.9092 li
190.832 36.1714 li
cp
.855 .73 0 0 cmyk
f
190.832 36.1714 mo
203.569 36.1714 li
203.569 48.9092 li
190.832 48.9092 li
190.832 36.1714 li
cp
.746 .676 .668 .898 cmyk
@
165.355 48.9092 mo
178.093 48.9092 li
178.093 61.647 li
165.355 61.647 li
165.355 48.9092 li
cp
0 .938 1 0 cmyk
f
165.355 48.9092 mo
178.093 48.9092 li
178.093 61.647 li
165.355 61.647 li
165.355 48.9092 li
cp
.746 .676 .668 .898 cmyk
@
165.355 36.1714 mo
178.093 36.1714 li
178.093 48.9092 li
165.355 48.9092 li
165.355 36.1714 li
cp
f
165.355 36.1714 mo
178.093 36.1714 li
178.093 48.9092 li
165.355 48.9092 li
165.355 36.1714 li
cp
@
178.093 36.1714 mo
190.831 36.1714 li
190.831 48.9092 li
178.093 48.9092 li
178.093 36.1714 li
cp
.855 .73 0 0 cmyk
f
178.093 36.1714 mo
190.831 36.1714 li
190.831 48.9092 li
178.093 48.9092 li
178.093 36.1714 li
cp
.746 .676 .668 .898 cmyk
@
178.093 48.9092 mo
190.831 48.9092 li
190.831 61.647 li
178.093 61.647 li
178.093 48.9092 li
cp
@
190.832 48.9092 mo
203.569 48.9092 li
203.569 61.647 li
190.832 61.647 li
190.832 48.9092 li
cp
f
190.832 48.9092 mo
203.569 48.9092 li
203.569 61.647 li
190.832 61.647 li
190.832 48.9092 li
cp
@
203.569 48.9092 mo
216.307 48.9092 li
216.307 61.647 li
203.569 61.647 li
203.569 48.9092 li
cp
@
216.307 48.9092 mo
229.044 48.9092 li
229.044 61.647 li
216.307 61.647 li
216.307 48.9092 li
cp
f
216.307 48.9092 mo
229.044 48.9092 li
229.044 61.647 li
216.307 61.647 li
216.307 48.9092 li
cp
@
165.355 61.647 mo
178.093 61.647 li
178.093 74.3848 li
165.355 74.3848 li
165.355 61.647 li
cp
@
178.093 61.647 mo
190.831 61.647 li
190.831 74.3848 li
178.093 74.3848 li
178.093 61.647 li
cp
@
190.832 61.647 mo
203.569 61.647 li
203.569 74.3848 li
190.832 74.3848 li
190.832 61.647 li
cp
@
203.569 61.647 mo
216.307 61.647 li
216.307 74.3848 li
203.569 74.3848 li
203.569 61.647 li
cp
@
216.307 61.647 mo
229.044 61.647 li
229.044 74.3848 li
216.307 74.3848 li
216.307 61.647 li
cp
f
216.307 61.647 mo
229.044 61.647 li
229.044 74.3848 li
216.307 74.3848 li
216.307 61.647 li
cp
@
165.355 23.4336 mo
178.093 23.4336 li
178.093 36.1714 li
165.355 36.1714 li
165.355 23.4336 li
cp
@
190.832 23.4336 mo
203.569 23.4336 li
203.569 36.1714 li
190.832 36.1714 li
190.832 23.4336 li
cp
f
190.832 23.4336 mo
203.569 23.4336 li
203.569 36.1714 li
190.832 36.1714 li
190.832 23.4336 li
cp
@
254.52 23.4336 mo
267.258 23.4336 li
267.258 36.1714 li
254.52 36.1714 li
254.52 23.4336 li
cp
.691 0 1 0 cmyk
f
254.52 23.4336 mo
267.258 23.4336 li
267.258 36.1714 li
254.52 36.1714 li
254.52 23.4336 li
cp
.746 .676 .668 .898 cmyk
@
241.783 10.6953 mo
254.52 10.6953 li
254.52 23.4336 li
241.783 23.4336 li
241.783 10.6953 li
cp
f
241.783 10.6953 mo
254.52 10.6953 li
254.52 23.4336 li
241.783 23.4336 li
241.783 10.6953 li
cp
@
254.52 10.6953 mo
267.258 10.6953 li
267.258 23.4336 li
254.52 23.4336 li
254.52 10.6953 li
cp
@
267.258 10.6953 mo
279.997 10.6953 li
279.997 23.4336 li
267.258 23.4336 li
267.258 10.6953 li
cp
f
267.258 10.6953 mo
279.997 10.6953 li
279.997 23.4336 li
267.258 23.4336 li
267.258 10.6953 li
cp
@
279.997 10.6953 mo
292.734 10.6953 li
292.734 23.4336 li
279.997 23.4336 li
279.997 10.6953 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 10.6953 mo
305.472 10.6953 li
305.472 23.4336 li
292.734 23.4336 li
292.734 10.6953 li
cp
@
292.734 23.4336 mo
305.472 23.4336 li
305.472 36.1714 li
292.734 36.1714 li
292.734 23.4336 li
cp
@
grestore
279.997 23.4336 mo
292.734 23.4336 li
292.734 36.1714 li
279.997 36.1714 li
279.997 23.4336 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 36.1714 mo
305.472 36.1714 li
305.472 48.9092 li
292.734 48.9092 li
292.734 36.1714 li
cp
@
grestore
279.997 36.1714 mo
292.734 36.1714 li
292.734 48.9092 li
279.997 48.9092 li
279.997 36.1714 li
cp
f
279.997 36.1714 mo
292.734 36.1714 li
292.734 48.9092 li
279.997 48.9092 li
279.997 36.1714 li
cp
@
267.258 36.1714 mo
279.997 36.1714 li
279.997 48.9092 li
267.258 48.9092 li
267.258 36.1714 li
cp
.0859999 .0859999 0 0 cmyk
f
267.258 36.1714 mo
279.997 36.1714 li
279.997 48.9092 li
267.258 48.9092 li
267.258 36.1714 li
cp
.746 .676 .668 .898 cmyk
@
241.783 48.9092 mo
254.52 48.9092 li
254.52 61.647 li
241.783 61.647 li
241.783 48.9092 li
cp
0 .938 1 0 cmyk
f
241.783 48.9092 mo
254.52 48.9092 li
254.52 61.647 li
241.783 61.647 li
241.783 48.9092 li
cp
.746 .676 .668 .898 cmyk
@
241.783 36.1714 mo
254.52 36.1714 li
254.52 48.9092 li
241.783 48.9092 li
241.783 36.1714 li
cp
f
241.783 36.1714 mo
254.52 36.1714 li
254.52 48.9092 li
241.783 48.9092 li
241.783 36.1714 li
cp
@
254.52 36.1714 mo
267.258 36.1714 li
267.258 48.9092 li
254.52 48.9092 li
254.52 36.1714 li
cp
.855 .73 0 0 cmyk
f
254.52 36.1714 mo
267.258 36.1714 li
267.258 48.9092 li
254.52 48.9092 li
254.52 36.1714 li
cp
.746 .676 .668 .898 cmyk
@
254.52 48.9092 mo
267.258 48.9092 li
267.258 61.647 li
254.52 61.647 li
254.52 48.9092 li
cp
.855 .73 0 0 cmyk
f
254.52 48.9092 mo
267.258 48.9092 li
267.258 61.647 li
254.52 61.647 li
254.52 48.9092 li
cp
.746 .676 .668 .898 cmyk
@
267.258 48.9092 mo
279.997 48.9092 li
279.997 61.647 li
267.258 61.647 li
267.258 48.9092 li
cp
f
267.258 48.9092 mo
279.997 48.9092 li
279.997 61.647 li
267.258 61.647 li
267.258 48.9092 li
cp
@
279.997 48.9092 mo
292.734 48.9092 li
292.734 61.647 li
279.997 61.647 li
279.997 48.9092 li
cp
@
292.734 48.9092 mo
305.472 48.9092 li
305.472 61.647 li
292.734 61.647 li
292.734 48.9092 li
cp
f
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 48.9092 mo
305.472 48.9092 li
305.472 61.647 li
292.734 61.647 li
292.734 48.9092 li
cp
@
grestore
241.783 61.647 mo
254.52 61.647 li
254.52 74.3848 li
241.783 74.3848 li
241.783 61.647 li
cp
@
254.52 61.647 mo
267.258 61.647 li
267.258 74.3848 li
254.52 74.3848 li
254.52 61.647 li
cp
@
267.258 61.647 mo
279.997 61.647 li
279.997 74.3848 li
267.258 74.3848 li
267.258 61.647 li
cp
@
279.997 61.647 mo
292.734 61.647 li
292.734 74.3848 li
279.997 74.3848 li
279.997 61.647 li
cp
@
292.734 61.647 mo
305.472 61.647 li
305.472 74.3848 li
292.734 74.3848 li
292.734 61.647 li
cp
f
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 61.647 mo
305.472 61.647 li
305.472 74.3848 li
292.734 74.3848 li
292.734 61.647 li
cp
@
grestore
241.783 23.4336 mo
254.52 23.4336 li
254.52 36.1714 li
241.783 36.1714 li
241.783 23.4336 li
cp
@
267.258 23.4336 mo
279.997 23.4336 li
279.997 36.1714 li
267.258 36.1714 li
267.258 23.4336 li
cp
f
267.258 23.4336 mo
279.997 23.4336 li
279.997 36.1714 li
267.258 36.1714 li
267.258 23.4336 li
cp
@
25.2388 125.336 mo
37.9766 125.336 li
37.9766 138.074 li
25.2388 138.074 li
25.2388 125.336 li
cp
.691 0 1 0 cmyk
f
25.2388 125.336 mo
37.9766 125.336 li
37.9766 138.074 li
25.2388 138.074 li
25.2388 125.336 li
cp
.746 .676 .668 .898 cmyk
@
12.501 112.599 mo
25.2388 112.599 li
25.2388 125.336 li
12.501 125.336 li
12.501 112.599 li
cp
f
12.501 112.599 mo
25.2388 112.599 li
25.2388 125.336 li
12.501 125.336 li
12.501 112.599 li
cp
@
25.2388 112.599 mo
37.9766 112.599 li
37.9766 125.336 li
25.2388 125.336 li
25.2388 112.599 li
cp
@
37.9766 112.599 mo
50.7144 112.599 li
50.7144 125.336 li
37.9766 125.336 li
37.9766 112.599 li
cp
f
37.9766 112.599 mo
50.7144 112.599 li
50.7144 125.336 li
37.9766 125.336 li
37.9766 112.599 li
cp
@
50.7144 112.599 mo
63.4521 112.599 li
63.4521 125.336 li
50.7144 125.336 li
50.7144 112.599 li
cp
@
63.4521 112.599 mo
76.1899 112.599 li
76.1899 125.336 li
63.4521 125.336 li
63.4521 112.599 li
cp
@
63.4521 125.336 mo
76.1899 125.336 li
76.1899 138.074 li
63.4521 138.074 li
63.4521 125.336 li
cp
@
50.7144 125.336 mo
63.4521 125.336 li
63.4521 138.074 li
50.7144 138.074 li
50.7144 125.336 li
cp
@
63.4521 138.074 mo
76.1899 138.074 li
76.1899 150.812 li
63.4521 150.812 li
63.4521 138.074 li
cp
@
50.7144 138.074 mo
63.4521 138.074 li
63.4521 150.812 li
50.7144 150.812 li
50.7144 138.074 li
cp
f
50.7144 138.074 mo
63.4521 138.074 li
63.4521 150.812 li
50.7144 150.812 li
50.7144 138.074 li
cp
@
37.9766 138.074 mo
50.7144 138.074 li
50.7144 150.812 li
37.9766 150.812 li
37.9766 138.074 li
cp
.0859999 .0859999 0 0 cmyk
f
37.9766 138.074 mo
50.7144 138.074 li
50.7144 150.812 li
37.9766 150.812 li
37.9766 138.074 li
cp
.746 .676 .668 .898 cmyk
@
12.501 150.812 mo
25.2388 150.812 li
25.2388 163.55 li
12.501 163.55 li
12.501 150.812 li
cp
0 .938 1 0 cmyk
f
12.501 150.812 mo
25.2388 150.812 li
25.2388 163.55 li
12.501 163.55 li
12.501 150.812 li
cp
.746 .676 .668 .898 cmyk
@
12.501 138.074 mo
25.2388 138.074 li
25.2388 150.812 li
12.501 150.812 li
12.501 138.074 li
cp
f
12.501 138.074 mo
25.2388 138.074 li
25.2388 150.812 li
12.501 150.812 li
12.501 138.074 li
cp
@
25.2388 138.074 mo
37.9766 138.074 li
37.9766 150.812 li
25.2388 150.812 li
25.2388 138.074 li
cp
.855 .73 0 0 cmyk
f
25.2388 138.074 mo
37.9766 138.074 li
37.9766 150.812 li
25.2388 150.812 li
25.2388 138.074 li
cp
.746 .676 .668 .898 cmyk
@
25.2388 150.812 mo
37.9766 150.812 li
37.9766 163.55 li
25.2388 163.55 li
25.2388 150.812 li
cp
.855 .73 0 0 cmyk
f
25.2388 150.812 mo
37.9766 150.812 li
37.9766 163.55 li
25.2388 163.55 li
25.2388 150.812 li
cp
.746 .676 .668 .898 cmyk
@
37.9766 150.812 mo
50.7144 150.812 li
50.7144 163.55 li
37.9766 163.55 li
37.9766 150.812 li
cp
f
37.9766 150.812 mo
50.7144 150.812 li
50.7144 163.55 li
37.9766 163.55 li
37.9766 150.812 li
cp
@
50.7144 150.812 mo
63.4521 150.812 li
63.4521 163.55 li
50.7144 163.55 li
50.7144 150.812 li
cp
@
63.4521 150.812 mo
76.1899 150.812 li
76.1899 163.55 li
63.4521 163.55 li
63.4521 150.812 li
cp
f
63.4521 150.812 mo
76.1899 150.812 li
76.1899 163.55 li
63.4521 163.55 li
63.4521 150.812 li
cp
@
12.501 163.55 mo
25.2388 163.55 li
25.2388 176.288 li
12.501 176.288 li
12.501 163.55 li
cp
@
25.2388 163.55 mo
37.9766 163.55 li
37.9766 176.288 li
25.2388 176.288 li
25.2388 163.55 li
cp
.855 .73 0 0 cmyk
f
25.2388 163.55 mo
37.9766 163.55 li
37.9766 176.288 li
25.2388 176.288 li
25.2388 163.55 li
cp
.746 .676 .668 .898 cmyk
@
37.9766 163.55 mo
50.7144 163.55 li
50.7144 176.288 li
37.9766 176.288 li
37.9766 163.55 li
cp
@
50.7144 163.55 mo
63.4521 163.55 li
63.4521 176.288 li
50.7144 176.288 li
50.7144 163.55 li
cp
@
63.4521 163.55 mo
76.1899 163.55 li
76.1899 176.288 li
63.4521 176.288 li
63.4521 163.55 li
cp
f
63.4521 163.55 mo
76.1899 163.55 li
76.1899 176.288 li
63.4521 176.288 li
63.4521 163.55 li
cp
@
12.501 125.336 mo
25.2388 125.336 li
25.2388 138.074 li
12.501 138.074 li
12.501 125.336 li
cp
@
37.9766 125.336 mo
50.7144 125.336 li
50.7144 138.074 li
37.9766 138.074 li
37.9766 125.336 li
cp
f
37.9766 125.336 mo
50.7144 125.336 li
50.7144 138.074 li
37.9766 138.074 li
37.9766 125.336 li
cp
@
101.666 125.336 mo
114.404 125.336 li
114.404 138.074 li
101.666 138.074 li
101.666 125.336 li
cp
.691 0 1 0 cmyk
f
101.666 125.336 mo
114.404 125.336 li
114.404 138.074 li
101.666 138.074 li
101.666 125.336 li
cp
.746 .676 .668 .898 cmyk
@
88.9282 112.599 mo
101.666 112.599 li
101.666 125.336 li
88.9282 125.336 li
88.9282 112.599 li
cp
f
88.9282 112.599 mo
101.666 112.599 li
101.666 125.336 li
88.9282 125.336 li
88.9282 112.599 li
cp
@
101.666 112.599 mo
114.404 112.599 li
114.404 125.336 li
101.666 125.336 li
101.666 112.599 li
cp
@
114.404 112.599 mo
127.142 112.599 li
127.142 125.336 li
114.404 125.336 li
114.404 112.599 li
cp
f
114.404 112.599 mo
127.142 112.599 li
127.142 125.336 li
114.404 125.336 li
114.404 112.599 li
cp
@
127.142 112.599 mo
139.879 112.599 li
139.879 125.336 li
127.142 125.336 li
127.142 112.599 li
cp
@
139.879 112.599 mo
152.618 112.599 li
152.618 125.336 li
139.879 125.336 li
139.879 112.599 li
cp
@
139.879 125.336 mo
152.618 125.336 li
152.618 138.074 li
139.879 138.074 li
139.879 125.336 li
cp
@
127.142 125.336 mo
139.879 125.336 li
139.879 138.074 li
127.142 138.074 li
127.142 125.336 li
cp
@
139.879 138.074 mo
152.618 138.074 li
152.618 150.812 li
139.879 150.812 li
139.879 138.074 li
cp
@
127.142 138.074 mo
139.879 138.074 li
139.879 150.812 li
127.142 150.812 li
127.142 138.074 li
cp
f
127.142 138.074 mo
139.879 138.074 li
139.879 150.812 li
127.142 150.812 li
127.142 138.074 li
cp
@
114.404 138.074 mo
127.142 138.074 li
127.142 150.812 li
114.404 150.812 li
114.404 138.074 li
cp
.0859999 .0859999 0 0 cmyk
f
114.404 138.074 mo
127.142 138.074 li
127.142 150.812 li
114.404 150.812 li
114.404 138.074 li
cp
.746 .676 .668 .898 cmyk
@
88.9282 150.812 mo
101.666 150.812 li
101.666 163.55 li
88.9282 163.55 li
88.9282 150.812 li
cp
0 .938 1 0 cmyk
f
88.9282 150.812 mo
101.666 150.812 li
101.666 163.55 li
88.9282 163.55 li
88.9282 150.812 li
cp
.746 .676 .668 .898 cmyk
@
88.9282 138.074 mo
101.666 138.074 li
101.666 150.812 li
88.9282 150.812 li
88.9282 138.074 li
cp
f
88.9282 138.074 mo
101.666 138.074 li
101.666 150.812 li
88.9282 150.812 li
88.9282 138.074 li
cp
@
101.666 138.074 mo
114.404 138.074 li
114.404 150.812 li
101.666 150.812 li
101.666 138.074 li
cp
.855 .73 0 0 cmyk
f
101.666 138.074 mo
114.404 138.074 li
114.404 150.812 li
101.666 150.812 li
101.666 138.074 li
cp
.746 .676 .668 .898 cmyk
@
101.666 150.812 mo
114.404 150.812 li
114.404 163.55 li
101.666 163.55 li
101.666 150.812 li
cp
.855 .73 0 0 cmyk
f
101.666 150.812 mo
114.404 150.812 li
114.404 163.55 li
101.666 163.55 li
101.666 150.812 li
cp
.746 .676 .668 .898 cmyk
@
114.404 150.812 mo
127.142 150.812 li
127.142 163.55 li
114.404 163.55 li
114.404 150.812 li
cp
f
114.404 150.812 mo
127.142 150.812 li
127.142 163.55 li
114.404 163.55 li
114.404 150.812 li
cp
@
127.142 150.812 mo
139.879 150.812 li
139.879 163.55 li
127.142 163.55 li
127.142 150.812 li
cp
@
139.879 150.812 mo
152.618 150.812 li
152.618 163.55 li
139.879 163.55 li
139.879 150.812 li
cp
f
139.879 150.812 mo
152.618 150.812 li
152.618 163.55 li
139.879 163.55 li
139.879 150.812 li
cp
@
88.9282 163.55 mo
101.666 163.55 li
101.666 176.288 li
88.9282 176.288 li
88.9282 163.55 li
cp
@
101.666 163.55 mo
114.404 163.55 li
114.404 176.288 li
101.666 176.288 li
101.666 163.55 li
cp
.855 .73 0 0 cmyk
f
101.666 163.55 mo
114.404 163.55 li
114.404 176.288 li
101.666 176.288 li
101.666 163.55 li
cp
.746 .676 .668 .898 cmyk
@
114.404 163.55 mo
127.142 163.55 li
127.142 176.288 li
114.404 176.288 li
114.404 163.55 li
cp
.855 .73 0 0 cmyk
f
114.404 163.55 mo
127.142 163.55 li
127.142 176.288 li
114.404 176.288 li
114.404 163.55 li
cp
.746 .676 .668 .898 cmyk
@
127.142 163.55 mo
139.879 163.55 li
139.879 176.288 li
127.142 176.288 li
127.142 163.55 li
cp
@
139.879 163.55 mo
152.618 163.55 li
152.618 176.288 li
139.879 176.288 li
139.879 163.55 li
cp
f
139.879 163.55 mo
152.618 163.55 li
152.618 176.288 li
139.879 176.288 li
139.879 163.55 li
cp
@
88.9282 125.336 mo
101.666 125.336 li
101.666 138.074 li
88.9282 138.074 li
88.9282 125.336 li
cp
@
114.404 125.336 mo
127.142 125.336 li
127.142 138.074 li
114.404 138.074 li
114.404 125.336 li
cp
f
114.404 125.336 mo
127.142 125.336 li
127.142 138.074 li
114.404 138.074 li
114.404 125.336 li
cp
@
178.093 125.336 mo
190.831 125.336 li
190.831 138.074 li
178.093 138.074 li
178.093 125.336 li
cp
.691 0 1 0 cmyk
f
178.093 125.336 mo
190.831 125.336 li
190.831 138.074 li
178.093 138.074 li
178.093 125.336 li
cp
.746 .676 .668 .898 cmyk
@
165.355 112.599 mo
178.093 112.599 li
178.093 125.336 li
165.355 125.336 li
165.355 112.599 li
cp
f
165.355 112.599 mo
178.093 112.599 li
178.093 125.336 li
165.355 125.336 li
165.355 112.599 li
cp
@
178.093 112.599 mo
190.831 112.599 li
190.831 125.336 li
178.093 125.336 li
178.093 112.599 li
cp
@
190.832 112.599 mo
203.569 112.599 li
203.569 125.336 li
190.832 125.336 li
190.832 112.599 li
cp
f
190.832 112.599 mo
203.569 112.599 li
203.569 125.336 li
190.832 125.336 li
190.832 112.599 li
cp
@
203.569 112.599 mo
216.307 112.599 li
216.307 125.336 li
203.569 125.336 li
203.569 112.599 li
cp
@
216.307 112.599 mo
229.044 112.599 li
229.044 125.336 li
216.307 125.336 li
216.307 112.599 li
cp
@
216.307 125.336 mo
229.044 125.336 li
229.044 138.074 li
216.307 138.074 li
216.307 125.336 li
cp
@
203.569 125.336 mo
216.307 125.336 li
216.307 138.074 li
203.569 138.074 li
203.569 125.336 li
cp
@
216.307 138.074 mo
229.044 138.074 li
229.044 150.812 li
216.307 150.812 li
216.307 138.074 li
cp
@
203.569 138.074 mo
216.307 138.074 li
216.307 150.812 li
203.569 150.812 li
203.569 138.074 li
cp
f
203.569 138.074 mo
216.307 138.074 li
216.307 150.812 li
203.569 150.812 li
203.569 138.074 li
cp
@
190.832 138.074 mo
203.569 138.074 li
203.569 150.812 li
190.832 150.812 li
190.832 138.074 li
cp
.0859999 .0859999 0 0 cmyk
f
190.832 138.074 mo
203.569 138.074 li
203.569 150.812 li
190.832 150.812 li
190.832 138.074 li
cp
.746 .676 .668 .898 cmyk
@
165.355 150.812 mo
178.093 150.812 li
178.093 163.55 li
165.355 163.55 li
165.355 150.812 li
cp
0 .938 1 0 cmyk
f
165.355 150.812 mo
178.093 150.812 li
178.093 163.55 li
165.355 163.55 li
165.355 150.812 li
cp
.746 .676 .668 .898 cmyk
@
165.355 138.074 mo
178.093 138.074 li
178.093 150.812 li
165.355 150.812 li
165.355 138.074 li
cp
f
165.355 138.074 mo
178.093 138.074 li
178.093 150.812 li
165.355 150.812 li
165.355 138.074 li
cp
@
178.093 138.074 mo
190.831 138.074 li
190.831 150.812 li
178.093 150.812 li
178.093 138.074 li
cp
.855 .73 0 0 cmyk
f
178.093 138.074 mo
190.831 138.074 li
190.831 150.812 li
178.093 150.812 li
178.093 138.074 li
cp
.746 .676 .668 .898 cmyk
@
178.093 150.812 mo
190.831 150.812 li
190.831 163.55 li
178.093 163.55 li
178.093 150.812 li
cp
.855 .73 0 0 cmyk
f
178.093 150.812 mo
190.831 150.812 li
190.831 163.55 li
178.093 163.55 li
178.093 150.812 li
cp
.746 .676 .668 .898 cmyk
@
190.832 150.812 mo
203.569 150.812 li
203.569 163.55 li
190.832 163.55 li
190.832 150.812 li
cp
f
190.832 150.812 mo
203.569 150.812 li
203.569 163.55 li
190.832 163.55 li
190.832 150.812 li
cp
@
203.569 150.812 mo
216.307 150.812 li
216.307 163.55 li
203.569 163.55 li
203.569 150.812 li
cp
@
216.307 150.812 mo
229.044 150.812 li
229.044 163.55 li
216.307 163.55 li
216.307 150.812 li
cp
f
216.307 150.812 mo
229.044 150.812 li
229.044 163.55 li
216.307 163.55 li
216.307 150.812 li
cp
@
165.355 163.55 mo
178.093 163.55 li
178.093 176.288 li
165.355 176.288 li
165.355 163.55 li
cp
@
178.093 163.55 mo
190.831 163.55 li
190.831 176.288 li
178.093 176.288 li
178.093 163.55 li
cp
.855 .73 0 0 cmyk
f
178.093 163.55 mo
190.831 163.55 li
190.831 176.288 li
178.093 176.288 li
178.093 163.55 li
cp
.746 .676 .668 .898 cmyk
@
190.832 163.55 mo
203.569 163.55 li
203.569 176.288 li
190.832 176.288 li
190.832 163.55 li
cp
.855 .73 0 0 cmyk
f
190.832 163.55 mo
203.569 163.55 li
203.569 176.288 li
190.832 176.288 li
190.832 163.55 li
cp
.746 .676 .668 .898 cmyk
@
203.569 163.55 mo
216.307 163.55 li
216.307 176.288 li
203.569 176.288 li
203.569 163.55 li
cp
.855 .73 0 0 cmyk
f
203.569 163.55 mo
216.307 163.55 li
216.307 176.288 li
203.569 176.288 li
203.569 163.55 li
cp
.746 .676 .668 .898 cmyk
@
216.307 163.55 mo
229.044 163.55 li
229.044 176.288 li
216.307 176.288 li
216.307 163.55 li
cp
f
216.307 163.55 mo
229.044 163.55 li
229.044 176.288 li
216.307 176.288 li
216.307 163.55 li
cp
@
165.355 125.336 mo
178.093 125.336 li
178.093 138.074 li
165.355 138.074 li
165.355 125.336 li
cp
@
190.832 125.336 mo
203.569 125.336 li
203.569 138.074 li
190.832 138.074 li
190.832 125.336 li
cp
f
190.832 125.336 mo
203.569 125.336 li
203.569 138.074 li
190.832 138.074 li
190.832 125.336 li
cp
@
254.52 125.336 mo
267.258 125.336 li
267.258 138.074 li
254.52 138.074 li
254.52 125.336 li
cp
.691 0 1 0 cmyk
f
254.52 125.336 mo
267.258 125.336 li
267.258 138.074 li
254.52 138.074 li
254.52 125.336 li
cp
.746 .676 .668 .898 cmyk
@
241.783 112.599 mo
254.52 112.599 li
254.52 125.336 li
241.783 125.336 li
241.783 112.599 li
cp
f
241.783 112.599 mo
254.52 112.599 li
254.52 125.336 li
241.783 125.336 li
241.783 112.599 li
cp
@
254.52 112.599 mo
267.258 112.599 li
267.258 125.336 li
254.52 125.336 li
254.52 112.599 li
cp
@
267.258 112.599 mo
279.997 112.599 li
279.997 125.336 li
267.258 125.336 li
267.258 112.599 li
cp
f
267.258 112.599 mo
279.997 112.599 li
279.997 125.336 li
267.258 125.336 li
267.258 112.599 li
cp
@
279.997 112.599 mo
292.734 112.599 li
292.734 125.336 li
279.997 125.336 li
279.997 112.599 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 112.599 mo
305.472 112.599 li
305.472 125.336 li
292.734 125.336 li
292.734 112.599 li
cp
@
292.734 125.336 mo
305.472 125.336 li
305.472 138.074 li
292.734 138.074 li
292.734 125.336 li
cp
@
grestore
279.997 125.336 mo
292.734 125.336 li
292.734 138.074 li
279.997 138.074 li
279.997 125.336 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 138.074 mo
305.472 138.074 li
305.472 150.812 li
292.734 150.812 li
292.734 138.074 li
cp
@
grestore
279.997 138.074 mo
292.734 138.074 li
292.734 150.812 li
279.997 150.812 li
279.997 138.074 li
cp
f
279.997 138.074 mo
292.734 138.074 li
292.734 150.812 li
279.997 150.812 li
279.997 138.074 li
cp
@
267.258 138.074 mo
279.997 138.074 li
279.997 150.812 li
267.258 150.812 li
267.258 138.074 li
cp
.0859999 .0859999 0 0 cmyk
f
267.258 138.074 mo
279.997 138.074 li
279.997 150.812 li
267.258 150.812 li
267.258 138.074 li
cp
.746 .676 .668 .898 cmyk
@
241.783 150.812 mo
254.52 150.812 li
254.52 163.55 li
241.783 163.55 li
241.783 150.812 li
cp
0 .938 1 0 cmyk
f
241.783 150.812 mo
254.52 150.812 li
254.52 163.55 li
241.783 163.55 li
241.783 150.812 li
cp
.746 .676 .668 .898 cmyk
@
241.783 138.074 mo
254.52 138.074 li
254.52 150.812 li
241.783 150.812 li
241.783 138.074 li
cp
f
241.783 138.074 mo
254.52 138.074 li
254.52 150.812 li
241.783 150.812 li
241.783 138.074 li
cp
@
254.52 138.074 mo
267.258 138.074 li
267.258 150.812 li
254.52 150.812 li
254.52 138.074 li
cp
.855 .73 0 0 cmyk
f
254.52 138.074 mo
267.258 138.074 li
267.258 150.812 li
254.52 150.812 li
254.52 138.074 li
cp
.746 .676 .668 .898 cmyk
@
254.52 150.812 mo
267.258 150.812 li
267.258 163.55 li
254.52 163.55 li
254.52 150.812 li
cp
.855 .73 0 0 cmyk
f
254.52 150.812 mo
267.258 150.812 li
267.258 163.55 li
254.52 163.55 li
254.52 150.812 li
cp
.746 .676 .668 .898 cmyk
@
267.258 150.812 mo
279.997 150.812 li
279.997 163.55 li
267.258 163.55 li
267.258 150.812 li
cp
f
267.258 150.812 mo
279.997 150.812 li
279.997 163.55 li
267.258 163.55 li
267.258 150.812 li
cp
@
279.997 150.812 mo
292.734 150.812 li
292.734 163.55 li
279.997 163.55 li
279.997 150.812 li
cp
.855 .73 0 0 cmyk
f
279.997 150.812 mo
292.734 150.812 li
292.734 163.55 li
279.997 163.55 li
279.997 150.812 li
cp
.746 .676 .668 .898 cmyk
@
292.734 150.812 mo
305.472 150.812 li
305.472 163.55 li
292.734 163.55 li
292.734 150.812 li
cp
f
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 150.812 mo
305.472 150.812 li
305.472 163.55 li
292.734 163.55 li
292.734 150.812 li
cp
@
grestore
241.783 163.55 mo
254.52 163.55 li
254.52 176.288 li
241.783 176.288 li
241.783 163.55 li
cp
@
254.52 163.55 mo
267.258 163.55 li
267.258 176.288 li
254.52 176.288 li
254.52 163.55 li
cp
.855 .73 0 0 cmyk
f
254.52 163.55 mo
267.258 163.55 li
267.258 176.288 li
254.52 176.288 li
254.52 163.55 li
cp
.746 .676 .668 .898 cmyk
@
267.258 163.55 mo
279.997 163.55 li
279.997 176.288 li
267.258 176.288 li
267.258 163.55 li
cp
.855 .73 0 0 cmyk
f
267.258 163.55 mo
279.997 163.55 li
279.997 176.288 li
267.258 176.288 li
267.258 163.55 li
cp
.746 .676 .668 .898 cmyk
@
279.997 163.55 mo
292.734 163.55 li
292.734 176.288 li
279.997 176.288 li
279.997 163.55 li
cp
.855 .73 0 0 cmyk
f
279.997 163.55 mo
292.734 163.55 li
292.734 176.288 li
279.997 176.288 li
279.997 163.55 li
cp
.746 .676 .668 .898 cmyk
@
292.734 163.55 mo
305.472 163.55 li
305.472 176.288 li
292.734 176.288 li
292.734 163.55 li
cp
f
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.734 163.55 mo
305.472 163.55 li
305.472 176.288 li
292.734 176.288 li
292.734 163.55 li
cp
@
grestore
241.783 125.336 mo
254.52 125.336 li
254.52 138.074 li
241.783 138.074 li
241.783 125.336 li
cp
@
267.258 125.336 mo
279.997 125.336 li
279.997 138.074 li
267.258 138.074 li
267.258 125.336 li
cp
f
267.258 125.336 mo
279.997 125.336 li
279.997 138.074 li
267.258 138.074 li
267.258 125.336 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
44.5962 295.636 mo
44.5962 295.824 li
44.1079 295.578 43.7012 295.292 43.3745 294.963 cv
42.9097 294.496 42.5508 293.944 42.2988 293.309 cv
42.0469 292.674 41.9209 292.014 41.9209 291.33 cv
41.9209 290.331 42.168 289.42 42.6626 288.596 cv
43.1567 287.771 43.8013 287.183 44.5962 286.828 cv
44.5962 287.036 li
44.1978 287.255 43.8706 287.555 43.6147 287.934 cv
43.3589 288.314 43.168 288.795 43.0415 289.378 cv
42.9155 289.961 42.8521 290.568 42.8521 291.203 cv
42.8521 291.893 42.9058 292.518 43.0127 293.082 cv
43.0967 293.525 43.1987 293.882 43.3184 294.15 cv
43.4385 294.42 43.5996 294.678 43.8018 294.926 cv
44.0044 295.174 44.269 295.41 44.5962 295.636 cv
cp
0 0 0 1 cmyk
f
46.2578 286.828 mo
46.3931 286.828 46.5083 286.875 46.603 286.971 cv
46.6982 287.065 46.7456 287.181 46.7456 287.316 cv
46.7456 287.451 46.6982 287.567 46.603 287.664 cv
46.5083 287.761 46.3931 287.809 46.2578 287.809 cv
46.1226 287.809 46.0068 287.761 45.9097 287.664 cv
45.8135 287.567 45.7651 287.451 45.7651 287.316 cv
45.7651 287.181 45.8125 287.065 45.9072 286.971 cv
46.0024 286.875 46.1191 286.828 46.2578 286.828 cv
cp
46.6567 289.146 mo
46.6567 292.713 li
46.6567 292.988 46.6768 293.172 46.7173 293.264 cv
46.7578 293.355 46.8174 293.423 46.8965 293.468 cv
46.9756 293.513 47.1201 293.535 47.3306 293.535 cv
47.3306 293.713 li
45.1807 293.713 li
45.1807 293.535 li
45.3955 293.535 45.54 293.515 45.6138 293.473 cv
45.6875 293.432 45.7461 293.362 45.7891 293.266 cv
45.8325 293.17 45.854 292.985 45.854 292.713 cv
45.854 290.999 li
45.854 290.521 45.8398 290.213 45.8105 290.071 cv
45.7881 289.969 45.7529 289.897 45.7046 289.857 cv
45.6563 289.816 45.5903 289.797 45.5068 289.797 cv
45.4165 289.797 45.3071 289.821 45.1787 289.869 cv
45.1113 289.691 li
46.4443 289.146 li
46.6567 289.146 li
cp
f
47.7861 287.036 mo
47.7861 286.828 li
48.2773 287.07 48.686 287.355 49.0122 287.684 cv
49.4741 288.154 49.8311 288.707 50.083 289.341 cv
50.335 289.975 50.4609 290.635 50.4609 291.321 cv
50.4609 292.32 50.2148 293.232 49.7222 294.057 cv
49.2295 294.88 48.584 295.469 47.7861 295.824 cv
47.7861 295.636 li
48.1846 295.414 48.5122 295.113 48.7695 294.735 cv
49.0269 294.357 49.2183 293.875 49.3428 293.291 cv
49.4673 292.707 49.5298 292.098 49.5298 291.464 cv
49.5298 290.778 49.4766 290.152 49.3696 289.586 cv
49.2886 289.142 49.1875 288.785 49.0659 288.519 cv
48.9443 288.252 48.7832 287.994 48.5825 287.746 cv
48.3818 287.498 48.1162 287.262 47.7861 287.036 cv
cp
f
grestore
25.2388 227.239 mo
37.9766 227.239 li
37.9766 239.978 li
25.2388 239.978 li
25.2388 227.239 li
cp
.691 0 1 0 cmyk
f
25.2388 227.239 mo
37.9766 227.239 li
37.9766 239.978 li
25.2388 239.978 li
25.2388 227.239 li
cp
.746 .676 .668 .898 cmyk
@
12.501 214.502 mo
25.2388 214.502 li
25.2388 227.239 li
12.501 227.239 li
12.501 214.502 li
cp
f
12.501 214.502 mo
25.2388 214.502 li
25.2388 227.239 li
12.501 227.239 li
12.501 214.502 li
cp
@
25.2388 214.502 mo
37.9766 214.502 li
37.9766 227.239 li
25.2388 227.239 li
25.2388 214.502 li
cp
@
37.9766 214.502 mo
50.7144 214.502 li
50.7144 227.239 li
37.9766 227.239 li
37.9766 214.502 li
cp
f
37.9766 214.502 mo
50.7144 214.502 li
50.7144 227.239 li
37.9766 227.239 li
37.9766 214.502 li
cp
@
50.7144 214.502 mo
63.4521 214.502 li
63.4521 227.239 li
50.7144 227.239 li
50.7144 214.502 li
cp
@
63.4521 214.502 mo
76.1899 214.502 li
76.1899 227.239 li
63.4521 227.239 li
63.4521 214.502 li
cp
@
63.4521 227.239 mo
76.1899 227.239 li
76.1899 239.978 li
63.4521 239.978 li
63.4521 227.239 li
cp
@
50.7144 227.239 mo
63.4521 227.239 li
63.4521 239.978 li
50.7144 239.978 li
50.7144 227.239 li
cp
@
63.4521 239.978 mo
76.1899 239.978 li
76.1899 252.715 li
63.4521 252.715 li
63.4521 239.978 li
cp
@
50.7144 239.978 mo
63.4521 239.978 li
63.4521 252.715 li
50.7144 252.715 li
50.7144 239.978 li
cp
f
50.7144 239.978 mo
63.4521 239.978 li
63.4521 252.715 li
50.7144 252.715 li
50.7144 239.978 li
cp
@
37.9766 239.978 mo
50.7144 239.978 li
50.7144 252.715 li
37.9766 252.715 li
37.9766 239.978 li
cp
.0859999 .0859999 0 0 cmyk
f
37.9766 239.978 mo
50.7144 239.978 li
50.7144 252.715 li
37.9766 252.715 li
37.9766 239.978 li
cp
.746 .676 .668 .898 cmyk
@
12.501 252.715 mo
25.2388 252.715 li
25.2388 265.453 li
12.501 265.453 li
12.501 252.715 li
cp
0 .938 1 0 cmyk
f
12.501 252.715 mo
25.2388 252.715 li
25.2388 265.453 li
12.501 265.453 li
12.501 252.715 li
cp
.746 .676 .668 .898 cmyk
@
12.501 239.978 mo
25.2388 239.978 li
25.2388 252.715 li
12.501 252.715 li
12.501 239.978 li
cp
f
12.501 239.978 mo
25.2388 239.978 li
25.2388 252.715 li
12.501 252.715 li
12.501 239.978 li
cp
@
25.2388 239.978 mo
37.9766 239.978 li
37.9766 252.715 li
25.2388 252.715 li
25.2388 239.978 li
cp
.855 .73 0 0 cmyk
f
25.2388 239.978 mo
37.9766 239.978 li
37.9766 252.715 li
25.2388 252.715 li
25.2388 239.978 li
cp
.746 .676 .668 .898 cmyk
@
25.2388 252.715 mo
37.9766 252.715 li
37.9766 265.453 li
25.2388 265.453 li
25.2388 252.715 li
cp
.855 .73 0 0 cmyk
f
25.2388 252.715 mo
37.9766 252.715 li
37.9766 265.453 li
25.2388 265.453 li
25.2388 252.715 li
cp
.746 .676 .668 .898 cmyk
@
37.9766 252.715 mo
50.7144 252.715 li
50.7144 265.453 li
37.9766 265.453 li
37.9766 252.715 li
cp
f
37.9766 252.715 mo
50.7144 252.715 li
50.7144 265.453 li
37.9766 265.453 li
37.9766 252.715 li
cp
@
50.7144 252.715 mo
63.4521 252.715 li
63.4521 265.453 li
50.7144 265.453 li
50.7144 252.715 li
cp
.0859999 .0859999 0 0 cmyk
f
50.7144 252.715 mo
63.4521 252.715 li
63.4521 265.453 li
50.7144 265.453 li
50.7144 252.715 li
cp
.746 .676 .668 .898 cmyk
@
63.4521 252.715 mo
76.1899 252.715 li
76.1899 265.453 li
63.4521 265.453 li
63.4521 252.715 li
cp
f
63.4521 252.715 mo
76.1899 252.715 li
76.1899 265.453 li
63.4521 265.453 li
63.4521 252.715 li
cp
@
12.501 265.453 mo
25.2388 265.453 li
25.2388 278.191 li
12.501 278.191 li
12.501 265.453 li
cp
@
25.2388 265.453 mo
37.9766 265.453 li
37.9766 278.191 li
25.2388 278.191 li
25.2388 265.453 li
cp
.855 .73 0 0 cmyk
f
25.2388 265.453 mo
37.9766 265.453 li
37.9766 278.191 li
25.2388 278.191 li
25.2388 265.453 li
cp
.746 .676 .668 .898 cmyk
@
37.9766 265.453 mo
50.7144 265.453 li
50.7144 278.191 li
37.9766 278.191 li
37.9766 265.453 li
cp
.855 .73 0 0 cmyk
f
37.9766 265.453 mo
50.7144 265.453 li
50.7144 278.191 li
37.9766 278.191 li
37.9766 265.453 li
cp
.746 .676 .668 .898 cmyk
@
50.7144 265.453 mo
63.4521 265.453 li
63.4521 278.191 li
50.7144 278.191 li
50.7144 265.453 li
cp
.855 .73 0 0 cmyk
f
50.7144 265.453 mo
63.4521 265.453 li
63.4521 278.191 li
50.7144 278.191 li
50.7144 265.453 li
cp
.746 .676 .668 .898 cmyk
@
63.4521 265.453 mo
76.1899 265.453 li
76.1899 278.191 li
63.4521 278.191 li
63.4521 265.453 li
cp
f
63.4521 265.453 mo
76.1899 265.453 li
76.1899 278.191 li
63.4521 278.191 li
63.4521 265.453 li
cp
@
12.501 227.239 mo
25.2388 227.239 li
25.2388 239.978 li
12.501 239.978 li
12.501 227.239 li
cp
@
37.9766 227.239 mo
50.7144 227.239 li
50.7144 239.978 li
37.9766 239.978 li
37.9766 227.239 li
cp
f
37.9766 227.239 mo
50.7144 227.239 li
50.7144 239.978 li
37.9766 239.978 li
37.9766 227.239 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
121.539 295.803 mo
121.539 295.99 li
121.051 295.746 120.644 295.459 120.318 295.13 cv
119.853 294.662 119.494 294.111 119.242 293.476 cv
118.99 292.841 118.864 292.182 118.864 291.498 cv
118.864 290.498 119.111 289.586 119.605 288.763 cv
120.1 287.939 120.744 287.35 121.539 286.995 cv
121.539 287.203 li
121.141 287.422 120.813 287.721 120.558 288.102 cv
120.302 288.48 120.111 288.962 119.984 289.545 cv
119.858 290.127 119.795 290.736 119.795 291.37 cv
119.795 292.059 119.849 292.686 119.956 293.248 cv
120.04 293.692 120.142 294.049 120.261 294.317 cv
120.381 294.586 120.542 294.845 120.745 295.093 cv
120.947 295.341 121.212 295.577 121.539 295.803 cv
cp
0 0 0 1 cmyk
f
123.191 286.995 mo
123.33 286.995 123.447 287.043 123.543 287.141 cv
123.64 287.236 123.689 287.354 123.689 287.492 cv
123.689 287.628 123.64 287.744 123.543 287.841 cv
123.447 287.938 123.33 287.986 123.191 287.986 cv
123.056 287.986 122.939 287.938 122.843 287.841 cv
122.746 287.744 122.698 287.628 122.698 287.492 cv
122.698 287.354 122.746 287.236 122.843 287.141 cv
122.939 287.043 123.056 286.995 123.191 286.995 cv
cp
123.609 289.313 mo
123.609 293.778 li
123.609 294.537 123.448 295.1 123.124 295.469 cv
122.801 295.836 122.38 296.021 121.863 296.021 cv
121.568 296.021 121.35 295.967 121.208 295.86 cv
121.065 295.754 120.994 295.645 120.994 295.531 cv
120.994 295.418 121.034 295.32 121.113 295.24 cv
121.192 295.159 121.286 295.119 121.393 295.119 cv
121.477 295.119 121.563 295.14 121.65 295.182 cv
121.705 295.204 121.811 295.285 121.968 295.425 cv
122.125 295.564 122.256 295.634 122.363 295.634 cv
122.44 295.634 122.516 295.604 122.589 295.545 cv
122.664 295.485 122.718 295.385 122.754 295.245 cv
122.789 295.105 122.807 294.802 122.807 294.335 cv
122.807 291.186 li
122.807 290.697 122.792 290.384 122.764 290.245 cv
122.741 290.139 122.706 290.064 122.657 290.024 cv
122.609 289.984 122.543 289.964 122.459 289.964 cv
122.37 289.964 122.26 289.988 122.131 290.037 cv
122.064 289.857 li
123.401 289.313 li
123.609 289.313 li
cp
f
124.729 287.203 mo
124.729 286.995 li
125.22 287.236 125.629 287.521 125.955 287.852 cv
126.417 288.322 126.774 288.874 127.026 289.508 cv
127.278 290.141 127.404 290.801 127.404 291.488 cv
127.404 292.487 127.158 293.398 126.665 294.223 cv
126.172 295.047 125.527 295.636 124.729 295.99 cv
124.729 295.803 li
125.127 295.58 125.455 295.28 125.712 294.902 cv
125.97 294.523 126.161 294.043 126.286 293.459 cv
126.41 292.874 126.473 292.265 126.473 291.631 cv
126.473 290.945 126.419 290.318 126.313 289.752 cv
126.231 289.309 126.13 288.953 126.009 288.686 cv
125.887 288.418 125.726 288.16 125.525 287.912 cv
125.325 287.665 125.059 287.428 124.729 287.203 cv
cp
f
grestore
102.181 227.406 mo
114.919 227.406 li
114.919 240.145 li
102.181 240.145 li
102.181 227.406 li
cp
.691 0 1 0 cmyk
f
102.181 227.406 mo
114.919 227.406 li
114.919 240.145 li
102.181 240.145 li
102.181 227.406 li
cp
.746 .676 .668 .898 cmyk
@
89.4434 214.668 mo
102.181 214.668 li
102.181 227.406 li
89.4434 227.406 li
89.4434 214.668 li
cp
f
89.4434 214.668 mo
102.181 214.668 li
102.181 227.406 li
89.4434 227.406 li
89.4434 214.668 li
cp
@
102.181 214.668 mo
114.919 214.668 li
114.919 227.406 li
102.181 227.406 li
102.181 214.668 li
cp
@
114.919 214.668 mo
127.657 214.668 li
127.657 227.406 li
114.919 227.406 li
114.919 214.668 li
cp
f
114.919 214.668 mo
127.657 214.668 li
127.657 227.406 li
114.919 227.406 li
114.919 214.668 li
cp
@
127.657 214.668 mo
140.395 214.668 li
140.395 227.406 li
127.657 227.406 li
127.657 214.668 li
cp
@
140.395 214.668 mo
153.133 214.668 li
153.133 227.406 li
140.395 227.406 li
140.395 214.668 li
cp
@
140.395 227.406 mo
153.133 227.406 li
153.133 240.145 li
140.395 240.145 li
140.395 227.406 li
cp
@
127.657 227.406 mo
140.395 227.406 li
140.395 240.145 li
127.657 240.145 li
127.657 227.406 li
cp
@
140.395 240.145 mo
153.133 240.145 li
153.133 252.883 li
140.395 252.883 li
140.395 240.145 li
cp
@
127.657 240.145 mo
140.395 240.145 li
140.395 252.883 li
127.657 252.883 li
127.657 240.145 li
cp
f
127.657 240.145 mo
140.395 240.145 li
140.395 252.883 li
127.657 252.883 li
127.657 240.145 li
cp
@
114.919 240.145 mo
127.657 240.145 li
127.657 252.883 li
114.919 252.883 li
114.919 240.145 li
cp
.0859999 .0859999 0 0 cmyk
f
114.919 240.145 mo
127.657 240.145 li
127.657 252.883 li
114.919 252.883 li
114.919 240.145 li
cp
.746 .676 .668 .898 cmyk
@
89.4434 252.883 mo
102.181 252.883 li
102.181 265.62 li
89.4434 265.62 li
89.4434 252.883 li
cp
0 .938 1 0 cmyk
f
89.4434 252.883 mo
102.181 252.883 li
102.181 265.62 li
89.4434 265.62 li
89.4434 252.883 li
cp
.746 .676 .668 .898 cmyk
@
89.4434 240.145 mo
102.181 240.145 li
102.181 252.883 li
89.4434 252.883 li
89.4434 240.145 li
cp
f
89.4434 240.145 mo
102.181 240.145 li
102.181 252.883 li
89.4434 252.883 li
89.4434 240.145 li
cp
@
102.181 240.145 mo
114.919 240.145 li
114.919 252.883 li
102.181 252.883 li
102.181 240.145 li
cp
.855 .73 0 0 cmyk
f
102.181 240.145 mo
114.919 240.145 li
114.919 252.883 li
102.181 252.883 li
102.181 240.145 li
cp
.746 .676 .668 .898 cmyk
@
102.181 252.883 mo
114.919 252.883 li
114.919 265.62 li
102.181 265.62 li
102.181 252.883 li
cp
.855 .73 0 0 cmyk
f
102.181 252.883 mo
114.919 252.883 li
114.919 265.62 li
102.181 265.62 li
102.181 252.883 li
cp
.746 .676 .668 .898 cmyk
@
114.919 252.883 mo
127.657 252.883 li
127.657 265.62 li
114.919 265.62 li
114.919 252.883 li
cp
f
114.919 252.883 mo
127.657 252.883 li
127.657 265.62 li
114.919 265.62 li
114.919 252.883 li
cp
@
127.657 252.883 mo
140.395 252.883 li
140.395 265.62 li
127.657 265.62 li
127.657 252.883 li
cp
.0859999 .0859999 0 0 cmyk
f
127.657 252.883 mo
140.395 252.883 li
140.395 265.62 li
127.657 265.62 li
127.657 252.883 li
cp
.746 .676 .668 .898 cmyk
@
140.395 252.883 mo
153.133 252.883 li
153.133 265.62 li
140.395 265.62 li
140.395 252.883 li
cp
f
140.395 252.883 mo
153.133 252.883 li
153.133 265.62 li
140.395 265.62 li
140.395 252.883 li
cp
@
89.4434 265.62 mo
102.181 265.62 li
102.181 278.357 li
89.4434 278.357 li
89.4434 265.62 li
cp
@
102.181 265.62 mo
114.919 265.62 li
114.919 278.357 li
102.181 278.357 li
102.181 265.62 li
cp
.855 .73 0 0 cmyk
f
102.181 265.62 mo
114.919 265.62 li
114.919 278.357 li
102.181 278.357 li
102.181 265.62 li
cp
.746 .676 .668 .898 cmyk
@
114.919 265.62 mo
127.657 265.62 li
127.657 278.357 li
114.919 278.357 li
114.919 265.62 li
cp
.855 .73 0 0 cmyk
f
114.919 265.62 mo
127.657 265.62 li
127.657 278.357 li
114.919 278.357 li
114.919 265.62 li
cp
.746 .676 .668 .898 cmyk
@
127.657 265.62 mo
140.395 265.62 li
140.395 278.357 li
127.657 278.357 li
127.657 265.62 li
cp
.0859999 .0859999 0 0 cmyk
f
127.657 265.62 mo
140.395 265.62 li
140.395 278.357 li
127.657 278.357 li
127.657 265.62 li
cp
.746 .676 .668 .898 cmyk
@
140.395 265.62 mo
153.133 265.62 li
153.133 278.357 li
140.395 278.357 li
140.395 265.62 li
cp
f
140.395 265.62 mo
153.133 265.62 li
153.133 278.357 li
140.395 278.357 li
140.395 265.62 li
cp
@
89.4434 227.406 mo
102.181 227.406 li
102.181 240.145 li
89.4434 240.145 li
89.4434 227.406 li
cp
@
114.919 227.406 mo
127.657 227.406 li
127.657 240.145 li
114.919 240.145 li
114.919 227.406 li
cp
f
114.919 227.406 mo
127.657 227.406 li
127.657 240.145 li
114.919 240.145 li
114.919 227.406 li
cp
@
197.61 294.633 mo
197.61 294.82 li
197.122 294.576 196.714 294.289 196.388 293.96 cv
195.923 293.492 195.564 292.941 195.312 292.306 cv
195.06 291.67 194.934 291.012 194.934 290.328 cv
194.934 289.328 195.182 288.416 195.676 287.593 cv
196.17 286.77 196.815 286.18 197.61 285.825 cv
197.61 286.033 li
197.211 286.252 196.884 286.551 196.628 286.932 cv
196.373 287.311 196.181 287.792 196.055 288.375 cv
195.929 288.957 195.866 289.566 195.866 290.199 cv
195.866 290.889 195.919 291.515 196.026 292.078 cv
196.11 292.522 196.212 292.879 196.333 293.147 cv
196.452 293.416 196.613 293.675 196.815 293.923 cv
197.018 294.17 197.283 294.407 197.61 294.633 cv
cp
0 0 0 1 cmyk
f
199.453 285.825 mo
199.453 290.238 li
200.576 289.209 li
200.814 288.99 200.953 288.852 200.992 288.793 cv
201.017 288.755 201.03 288.716 201.03 288.678 cv
201.03 288.613 201.003 288.557 200.95 288.51 cv
200.897 288.463 200.809 288.438 200.686 288.431 cv
200.686 288.271 li
202.613 288.271 li
202.613 288.431 li
202.349 288.438 202.13 288.479 201.956 288.553 cv
201.78 288.628 201.588 288.762 201.379 288.954 cv
200.239 290 li
201.378 291.434 li
201.691 291.834 201.9 292.088 202.004 292.198 cv
202.161 292.346 202.298 292.441 202.416 292.484 cv
202.497 292.517 202.638 292.532 202.84 292.532 cv
202.84 292.711 li
200.686 292.711 li
200.686 292.532 li
200.809 292.529 200.892 292.511 200.935 292.477 cv
200.979 292.443 201 292.396 201 292.336 cv
201 292.262 200.936 292.143 200.807 291.98 cv
199.453 290.242 li
199.453 291.71 li
199.453 291.997 199.472 292.186 199.512 292.275 cv
199.552 292.366 199.61 292.431 199.683 292.469 cv
199.757 292.508 199.918 292.529 200.166 292.532 cv
200.166 292.711 li
197.917 292.711 li
197.917 292.532 li
198.142 292.532 198.31 292.505 198.423 292.45 cv
198.491 292.415 198.542 292.361 198.578 292.287 cv
198.625 292.182 198.65 291.999 198.65 291.74 cv
198.65 287.697 li
198.65 287.189 198.638 286.879 198.616 286.766 cv
198.593 286.652 198.556 286.574 198.505 286.531 cv
198.454 286.488 198.386 286.466 198.302 286.466 cv
198.235 286.466 198.133 286.493 197.999 286.549 cv
197.917 286.369 li
199.23 285.825 li
199.453 285.825 li
cp
f
202.999 286.033 mo
202.999 285.825 li
203.49 286.066 203.899 286.352 204.225 286.682 cv
204.687 287.152 205.044 287.704 205.296 288.338 cv
205.548 288.971 205.674 289.631 205.674 290.318 cv
205.674 291.317 205.427 292.229 204.935 293.053 cv
204.442 293.877 203.797 294.466 202.999 294.82 cv
202.999 294.633 li
203.397 294.41 203.725 294.11 203.983 293.732 cv
204.24 293.354 204.431 292.873 204.556 292.288 cv
204.68 291.704 204.743 291.095 204.743 290.461 cv
204.743 289.775 204.689 289.148 204.583 288.582 cv
204.501 288.139 204.4 287.783 204.279 287.516 cv
204.158 287.248 203.997 286.99 203.795 286.742 cv
203.594 286.495 203.33 286.258 202.999 286.033 cv
cp
f
178.252 227.537 mo
190.991 227.537 li
190.991 240.274 li
178.252 240.274 li
178.252 227.537 li
cp
.691 0 1 0 cmyk
f
178.252 227.537 mo
190.991 227.537 li
190.991 240.274 li
178.252 240.274 li
178.252 227.537 li
cp
.746 .676 .668 .898 cmyk
@
165.514 214.799 mo
178.252 214.799 li
178.252 227.537 li
165.514 227.537 li
165.514 214.799 li
cp
f
165.514 214.799 mo
178.252 214.799 li
178.252 227.537 li
165.514 227.537 li
165.514 214.799 li
cp
@
178.252 214.799 mo
190.991 214.799 li
190.991 227.537 li
178.252 227.537 li
178.252 214.799 li
cp
@
190.991 214.799 mo
203.728 214.799 li
203.728 227.537 li
190.991 227.537 li
190.991 214.799 li
cp
f
190.991 214.799 mo
203.728 214.799 li
203.728 227.537 li
190.991 227.537 li
190.991 214.799 li
cp
@
203.728 214.799 mo
216.466 214.799 li
216.466 227.537 li
203.728 227.537 li
203.728 214.799 li
cp
@
216.466 214.799 mo
229.204 214.799 li
229.204 227.537 li
216.466 227.537 li
216.466 214.799 li
cp
@
216.466 227.537 mo
229.204 227.537 li
229.204 240.274 li
216.466 240.274 li
216.466 227.537 li
cp
@
203.728 227.537 mo
216.466 227.537 li
216.466 240.274 li
203.728 240.274 li
203.728 227.537 li
cp
@
216.466 240.274 mo
229.204 240.274 li
229.204 253.012 li
216.466 253.012 li
216.466 240.274 li
cp
@
203.728 240.274 mo
216.466 240.274 li
216.466 253.012 li
203.728 253.012 li
203.728 240.274 li
cp
f
203.728 240.274 mo
216.466 240.274 li
216.466 253.012 li
203.728 253.012 li
203.728 240.274 li
cp
@
190.991 240.274 mo
203.728 240.274 li
203.728 253.012 li
190.991 253.012 li
190.991 240.274 li
cp
.0859999 .0859999 0 0 cmyk
f
190.991 240.274 mo
203.728 240.274 li
203.728 253.012 li
190.991 253.012 li
190.991 240.274 li
cp
.746 .676 .668 .898 cmyk
@
165.514 253.012 mo
178.252 253.012 li
178.252 265.75 li
165.514 265.75 li
165.514 253.012 li
cp
0 .938 1 0 cmyk
f
165.514 253.012 mo
178.252 253.012 li
178.252 265.75 li
165.514 265.75 li
165.514 253.012 li
cp
.746 .676 .668 .898 cmyk
@
165.514 240.274 mo
178.252 240.274 li
178.252 253.012 li
165.514 253.012 li
165.514 240.274 li
cp
f
165.514 240.274 mo
178.252 240.274 li
178.252 253.012 li
165.514 253.012 li
165.514 240.274 li
cp
@
178.252 240.274 mo
190.991 240.274 li
190.991 253.012 li
178.252 253.012 li
178.252 240.274 li
cp
.855 .73 0 0 cmyk
f
178.252 240.274 mo
190.991 240.274 li
190.991 253.012 li
178.252 253.012 li
178.252 240.274 li
cp
.746 .676 .668 .898 cmyk
@
178.252 253.012 mo
190.991 253.012 li
190.991 265.75 li
178.252 265.75 li
178.252 253.012 li
cp
.855 .73 0 0 cmyk
f
178.252 253.012 mo
190.991 253.012 li
190.991 265.75 li
178.252 265.75 li
178.252 253.012 li
cp
.746 .676 .668 .898 cmyk
@
190.991 253.012 mo
203.728 253.012 li
203.728 265.75 li
190.991 265.75 li
190.991 253.012 li
cp
f
190.991 253.012 mo
203.728 253.012 li
203.728 265.75 li
190.991 265.75 li
190.991 253.012 li
cp
@
203.728 253.012 mo
216.466 253.012 li
216.466 265.75 li
203.728 265.75 li
203.728 253.012 li
cp
.0859999 .0859999 0 0 cmyk
f
203.728 253.012 mo
216.466 253.012 li
216.466 265.75 li
203.728 265.75 li
203.728 253.012 li
cp
.746 .676 .668 .898 cmyk
@
216.466 253.012 mo
229.204 253.012 li
229.204 265.75 li
216.466 265.75 li
216.466 253.012 li
cp
f
216.466 253.012 mo
229.204 253.012 li
229.204 265.75 li
216.466 265.75 li
216.466 253.012 li
cp
@
165.514 265.75 mo
178.252 265.75 li
178.252 278.488 li
165.514 278.488 li
165.514 265.75 li
cp
@
178.252 265.75 mo
190.991 265.75 li
190.991 278.488 li
178.252 278.488 li
178.252 265.75 li
cp
.855 .73 0 0 cmyk
f
178.252 265.75 mo
190.991 265.75 li
190.991 278.488 li
178.252 278.488 li
178.252 265.75 li
cp
.746 .676 .668 .898 cmyk
@
190.991 265.75 mo
203.728 265.75 li
203.728 278.488 li
190.991 278.488 li
190.991 265.75 li
cp
.0859999 .0859999 0 0 cmyk
f
190.991 265.75 mo
203.728 265.75 li
203.728 278.488 li
190.991 278.488 li
190.991 265.75 li
cp
.746 .676 .668 .898 cmyk
@
203.728 265.75 mo
216.466 265.75 li
216.466 278.488 li
203.728 278.488 li
203.728 265.75 li
cp
.0859999 .0859999 0 0 cmyk
f
203.728 265.75 mo
216.466 265.75 li
216.466 278.488 li
203.728 278.488 li
203.728 265.75 li
cp
.746 .676 .668 .898 cmyk
@
216.466 265.75 mo
229.204 265.75 li
229.204 278.488 li
216.466 278.488 li
216.466 265.75 li
cp
f
216.466 265.75 mo
229.204 265.75 li
229.204 278.488 li
216.466 278.488 li
216.466 265.75 li
cp
@
165.514 227.537 mo
178.252 227.537 li
178.252 240.274 li
165.514 240.274 li
165.514 227.537 li
cp
@
190.991 227.537 mo
203.728 227.537 li
203.728 240.274 li
190.991 240.274 li
190.991 227.537 li
cp
f
190.991 227.537 mo
203.728 227.537 li
203.728 240.274 li
190.991 240.274 li
190.991 227.537 li
cp
@
274.054 294.324 mo
274.054 294.512 li
273.566 294.268 273.159 293.98 272.833 293.651 cv
272.368 293.184 272.009 292.633 271.757 291.997 cv
271.505 291.361 271.379 290.703 271.379 290.02 cv
271.379 289.02 271.626 288.107 272.121 287.284 cv
272.615 286.461 273.259 285.871 274.054 285.516 cv
274.054 285.725 li
273.656 285.943 273.329 286.242 273.073 286.623 cv
272.817 287.002 272.626 287.483 272.5 288.066 cv
272.374 288.648 272.31 289.258 272.31 289.891 cv
272.31 290.58 272.364 291.206 272.47 291.77 cv
272.555 292.214 272.657 292.57 272.777 292.839 cv
272.897 293.107 273.057 293.366 273.26 293.614 cv
273.462 293.861 273.727 294.099 274.054 294.324 cv
cp
0 0 0 1 cmyk
f
276.115 285.516 mo
276.115 291.401 li
276.115 291.677 276.135 291.859 276.175 291.949 cv
276.215 292.039 276.277 292.107 276.361 292.154 cv
276.444 292.2 276.6 292.224 276.829 292.224 cv
276.829 292.402 li
274.659 292.402 li
274.659 292.224 li
274.862 292.224 275 292.203 275.075 292.161 cv
275.149 292.119 275.208 292.051 275.25 291.954 cv
275.292 291.857 275.312 291.674 275.312 291.401 cv
275.312 287.369 li
275.312 286.875 275.301 286.57 275.279 286.457 cv
275.256 286.344 275.22 286.267 275.17 286.225 cv
275.121 286.184 275.057 286.162 274.979 286.162 cv
274.896 286.162 274.79 286.188 274.662 286.24 cv
274.58 286.061 li
275.897 285.516 li
276.115 285.516 li
cp
f
277.245 285.725 mo
277.245 285.516 li
277.735 285.758 278.144 286.043 278.47 286.373 cv
278.932 286.844 279.29 287.396 279.542 288.029 cv
279.793 288.662 279.919 289.322 279.919 290.01 cv
279.919 291.009 279.672 291.92 279.18 292.744 cv
278.687 293.568 278.042 294.157 277.245 294.512 cv
277.245 294.324 li
277.642 294.102 277.97 293.802 278.228 293.424 cv
278.485 293.045 278.676 292.564 278.801 291.979 cv
278.925 291.396 278.988 290.786 278.988 290.152 cv
278.988 289.467 278.934 288.84 278.828 288.273 cv
278.747 287.83 278.645 287.475 278.524 287.207 cv
278.403 286.939 278.242 286.682 278.041 286.434 cv
277.84 286.186 277.575 285.949 277.245 285.725 cv
cp
f
254.697 227.228 mo
267.434 227.228 li
267.434 239.965 li
254.697 239.965 li
254.697 227.228 li
cp
.691 0 1 0 cmyk
f
254.697 227.228 mo
267.434 227.228 li
267.434 239.965 li
254.697 239.965 li
254.697 227.228 li
cp
.746 .676 .668 .898 cmyk
@
241.958 214.489 mo
254.697 214.489 li
254.697 227.228 li
241.958 227.228 li
241.958 214.489 li
cp
f
241.958 214.489 mo
254.697 214.489 li
254.697 227.228 li
241.958 227.228 li
241.958 214.489 li
cp
@
254.697 214.489 mo
267.434 214.489 li
267.434 227.228 li
254.697 227.228 li
254.697 214.489 li
cp
@
267.434 214.489 mo
280.172 214.489 li
280.172 227.228 li
267.434 227.228 li
267.434 214.489 li
cp
f
267.434 214.489 mo
280.172 214.489 li
280.172 227.228 li
267.434 227.228 li
267.434 214.489 li
cp
@
280.172 214.489 mo
292.911 214.489 li
292.911 227.228 li
280.172 227.228 li
280.172 214.489 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.911 214.489 mo
305.648 214.489 li
305.648 227.228 li
292.911 227.228 li
292.911 214.489 li
cp
@
292.911 227.228 mo
305.648 227.228 li
305.648 239.965 li
292.911 239.965 li
292.911 227.228 li
cp
@
grestore
280.172 227.228 mo
292.911 227.228 li
292.911 239.965 li
280.172 239.965 li
280.172 227.228 li
cp
@
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.911 239.965 mo
305.648 239.965 li
305.648 252.703 li
292.911 252.703 li
292.911 239.965 li
cp
@
grestore
280.172 239.965 mo
292.911 239.965 li
292.911 252.703 li
280.172 252.703 li
280.172 239.965 li
cp
f
280.172 239.965 mo
292.911 239.965 li
292.911 252.703 li
280.172 252.703 li
280.172 239.965 li
cp
@
267.434 239.965 mo
280.172 239.965 li
280.172 252.703 li
267.434 252.703 li
267.434 239.965 li
cp
.0859999 .0859999 0 0 cmyk
f
267.434 239.965 mo
280.172 239.965 li
280.172 252.703 li
267.434 252.703 li
267.434 239.965 li
cp
.746 .676 .668 .898 cmyk
@
241.958 252.703 mo
254.697 252.703 li
254.697 265.441 li
241.958 265.441 li
241.958 252.703 li
cp
0 .938 1 0 cmyk
f
241.958 252.703 mo
254.697 252.703 li
254.697 265.441 li
241.958 265.441 li
241.958 252.703 li
cp
.746 .676 .668 .898 cmyk
@
241.958 239.965 mo
254.697 239.965 li
254.697 252.703 li
241.958 252.703 li
241.958 239.965 li
cp
f
241.958 239.965 mo
254.697 239.965 li
254.697 252.703 li
241.958 252.703 li
241.958 239.965 li
cp
@
254.697 239.965 mo
267.434 239.965 li
267.434 252.703 li
254.697 252.703 li
254.697 239.965 li
cp
.855 .73 0 0 cmyk
f
254.697 239.965 mo
267.434 239.965 li
267.434 252.703 li
254.697 252.703 li
254.697 239.965 li
cp
.746 .676 .668 .898 cmyk
@
254.697 252.703 mo
267.434 252.703 li
267.434 265.441 li
254.697 265.441 li
254.697 252.703 li
cp
.855 .73 0 0 cmyk
f
254.697 252.703 mo
267.434 252.703 li
267.434 265.441 li
254.697 265.441 li
254.697 252.703 li
cp
.746 .676 .668 .898 cmyk
@
267.434 252.703 mo
280.172 252.703 li
280.172 265.441 li
267.434 265.441 li
267.434 252.703 li
cp
f
267.434 252.703 mo
280.172 252.703 li
280.172 265.441 li
267.434 265.441 li
267.434 252.703 li
cp
@
280.172 252.703 mo
292.911 252.703 li
292.911 265.441 li
280.172 265.441 li
280.172 252.703 li
cp
.0859999 .0859999 0 0 cmyk
f
280.172 252.703 mo
292.911 252.703 li
292.911 265.441 li
280.172 265.441 li
280.172 252.703 li
cp
.746 .676 .668 .898 cmyk
@
292.911 252.703 mo
305.648 252.703 li
305.648 265.441 li
292.911 265.441 li
292.911 252.703 li
cp
f
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.911 252.703 mo
305.648 252.703 li
305.648 265.441 li
292.911 265.441 li
292.911 252.703 li
cp
@
grestore
241.958 265.441 mo
254.697 265.441 li
254.697 278.179 li
241.958 278.179 li
241.958 265.441 li
cp
.855 .73 0 0 cmyk
f
241.958 265.441 mo
254.697 265.441 li
254.697 278.179 li
241.958 278.179 li
241.958 265.441 li
cp
.746 .676 .668 .898 cmyk
@
254.697 265.441 mo
267.434 265.441 li
267.434 278.179 li
254.697 278.179 li
254.697 265.441 li
cp
.855 .73 0 0 cmyk
f
254.697 265.441 mo
267.434 265.441 li
267.434 278.179 li
254.697 278.179 li
254.697 265.441 li
cp
.746 .676 .668 .898 cmyk
@
267.434 265.441 mo
280.172 265.441 li
280.172 278.179 li
267.434 278.179 li
267.434 265.441 li
cp
.0859999 .0859999 0 0 cmyk
f
267.434 265.441 mo
280.172 265.441 li
280.172 278.179 li
267.434 278.179 li
267.434 265.441 li
cp
.746 .676 .668 .898 cmyk
@
280.172 265.441 mo
292.911 265.441 li
292.911 278.179 li
280.172 278.179 li
280.172 265.441 li
cp
.0859999 .0859999 0 0 cmyk
f
280.172 265.441 mo
292.911 265.441 li
292.911 278.179 li
280.172 278.179 li
280.172 265.441 li
cp
.746 .676 .668 .898 cmyk
@
292.911 265.441 mo
305.648 265.441 li
305.648 278.179 li
292.911 278.179 li
292.911 265.441 li
cp
f
gsave
0 0 mo
306.002 0 li
306.002 296.711 li
0 296.711 li
0 0 li
cp
clp
292.911 265.441 mo
305.648 265.441 li
305.648 278.179 li
292.911 278.179 li
292.911 265.441 li
cp
@
grestore
241.958 227.228 mo
254.697 227.228 li
254.697 239.965 li
241.958 239.965 li
241.958 227.228 li
cp
@
267.434 227.228 mo
280.172 227.228 li
280.172 239.965 li
267.434 239.965 li
267.434 227.228 li
cp
f
267.434 227.228 mo
280.172 227.228 li
280.172 239.965 li
267.434 239.965 li
267.434 227.228 li
cp
@
7.50342 118.771 mo
7.50342 120.141 7.14551 120.966 6.35889 120.966 cv
5.57275 120.966 5.21484 120.141 5.21484 118.771 cv
5.21484 117.4 5.57275 116.576 6.35889 116.576 cv
7.14551 116.576 7.50342 117.4 7.50342 118.771 cv
cp
8.23535 118.771 mo
8.23535 117.634 7.93164 115.96 6.35889 115.96 cv
4.78662 115.96 4.48291 117.634 4.48291 118.771 cv
4.48291 119.907 4.78662 121.581 6.35889 121.581 cv
7.93164 121.581 8.23535 119.907 8.23535 118.771 cv
cp
0 0 0 .575 cmyk
f
6.98975 128.789 mo
6.45264 128.789 li
6.23438 129.684 5.86865 129.77 4.98145 129.832 cv
4.98145 130.377 li
6.25781 130.377 li
6.25781 134.261 li
6.98975 134.261 li
6.98975 128.789 li
cp
f
5.22266 142.442 mo
5.24609 142.061 5.29248 141.096 6.32813 141.096 cv
7.12988 141.096 7.41016 141.648 7.41016 142.084 cv
7.41016 142.801 6.98975 143.026 6.40576 143.361 cv
5.68213 143.781 li
4.9502 144.209 4.43652 144.817 4.39746 145.953 cv
8.1416 145.953 li
8.1416 145.307 li
5.16797 145.307 li
5.19922 145.097 5.36279 144.669 6.10986 144.256 cv
6.67822 143.945 li
7.49561 143.509 8.1416 143.097 8.1416 142.116 cv
8.1416 141.096 7.37891 140.481 6.4292 140.481 cv
5.8374 140.481 4.5376 140.66 4.5376 142.442 cv
5.22266 142.442 li
cp
f
5.93896 156.361 mo
6.04004 156.361 6.14893 156.353 6.25 156.353 cv
6.71729 156.353 7.52686 156.438 7.52686 157.357 cv
7.52686 157.988 7.03613 158.416 6.33594 158.416 cv
5.31592 158.416 5.19141 157.723 5.16797 157.209 cv
4.45996 157.209 li
4.50635 157.84 4.66992 158.47 5.27686 158.79 cv
5.54199 158.93 5.88428 159.031 6.28906 159.031 cv
7.68262 159.031 8.2583 158.167 8.2583 157.271 cv
8.2583 156.54 7.87695 156.166 7.34766 155.995 cv
7.34766 155.979 li
7.64355 155.886 8.04834 155.551 8.04834 154.851 cv
8.04834 154.018 7.41797 153.411 6.35889 153.411 cv
4.91895 153.411 4.59229 154.399 4.59229 155.201 cv
5.26172 155.201 li
5.29248 154.819 5.35498 154.025 6.32813 154.025 cv
7.14551 154.025 7.33984 154.563 7.33984 154.89 cv
7.33984 155.575 6.82617 155.785 6.29688 155.785 cv
6.18018 155.785 6.05566 155.777 5.93896 155.77 cv
5.93896 156.361 li
cp
f
8.26611 171.423 mo
8.26611 170.832 li
7.46436 170.832 li
7.46436 167.282 li
6.896 167.282 li
4.38965 170.754 li
4.38965 171.423 li
6.7793 171.423 li
6.7793 172.754 li
7.46436 172.754 li
7.46436 171.423 li
8.26611 171.423 li
cp
6.76367 168.349 mo
6.7793 168.349 li
6.7793 170.832 li
5.02002 170.832 li
6.76367 168.349 li
cp
f
20.9468 4.41211 mo
20.9468 5.78223 20.5889 6.60742 19.8027 6.60742 cv
19.0161 6.60742 18.6582 5.78223 18.6582 4.41211 cv
18.6582 3.04199 19.0161 2.2168 19.8027 2.2168 cv
20.5889 2.2168 20.9468 3.04199 20.9468 4.41211 cv
cp
21.6787 4.41211 mo
21.6787 3.27539 21.375 1.60205 19.8027 1.60205 cv
18.23 1.60205 17.9268 3.27539 17.9268 4.41211 cv
17.9268 5.54883 18.23 7.22217 19.8027 7.22217 cv
21.375 7.22217 21.6787 5.54883 21.6787 4.41211 cv
cp
f
33.5806 1.60205 mo
33.0435 1.60205 li
32.8257 2.49707 32.46 2.58301 31.5723 2.64502 cv
31.5723 3.18994 li
32.8491 3.18994 li
32.8491 7.07422 li
33.5806 7.07422 li
33.5806 1.60205 li
cp
f
45.1016 3.56348 mo
45.1245 3.18213 45.1714 2.2168 46.2065 2.2168 cv
47.0083 2.2168 47.2886 2.76953 47.2886 3.20557 cv
47.2886 3.92188 46.8687 4.14746 46.2847 4.48242 cv
45.5605 4.90234 li
44.8291 5.33057 44.3149 5.93799 44.2764 7.07422 cv
48.0205 7.07422 li
48.0205 6.42822 li
45.0469 6.42822 li
45.0781 6.21826 45.2417 5.79004 45.9888 5.37744 cv
46.5571 5.06592 li
47.3745 4.62988 48.0205 4.21777 48.0205 3.23682 cv
48.0205 2.2168 47.2578 1.60205 46.3081 1.60205 cv
45.7163 1.60205 44.4165 1.78125 44.4165 3.56348 cv
45.1016 3.56348 li
cp
f
57.8989 4.55225 mo
58 4.55225 58.1089 4.54443 58.21 4.54443 cv
58.6772 4.54443 59.4868 4.62988 59.4868 5.54883 cv
59.4868 6.1792 58.9961 6.60742 58.2959 6.60742 cv
57.2759 6.60742 57.1514 5.91455 57.1279 5.40088 cv
56.4199 5.40088 li
56.4663 6.03125 56.6299 6.66162 57.2368 6.98096 cv
57.5015 7.12109 57.8442 7.22217 58.249 7.22217 cv
59.6426 7.22217 60.2183 6.3584 60.2183 5.46289 cv
60.2183 4.73145 59.8369 4.35742 59.3076 4.18652 cv
59.3076 4.1709 li
59.6035 4.07715 60.0083 3.74268 60.0083 3.04199 cv
60.0083 2.20898 59.3779 1.60205 58.3188 1.60205 cv
56.8789 1.60205 56.5522 2.59082 56.5522 3.39258 cv
57.2217 3.39258 li
57.2524 3.01074 57.3149 2.2168 58.2881 2.2168 cv
59.1055 2.2168 59.2998 2.75391 59.2998 3.08105 cv
59.2998 3.76611 58.7861 3.97607 58.2568 3.97607 cv
58.1401 3.97607 58.0156 3.96826 57.8989 3.96045 cv
57.8989 4.55225 li
cp
f
72.4321 5.74316 mo
72.4321 5.15137 li
71.6304 5.15137 li
71.6304 1.60205 li
71.062 1.60205 li
68.5552 5.07373 li
68.5552 5.74316 li
70.9453 5.74316 li
70.9453 7.07422 li
71.6304 7.07422 li
71.6304 5.74316 li
72.4321 5.74316 li
cp
70.9297 2.66846 mo
70.9453 2.66846 li
70.9453 5.15137 li
69.186 5.15137 li
70.9297 2.66846 li
cp
f
7.97021 16.3608 mo
7.97021 17.731 7.6123 18.5562 6.82617 18.5562 cv
6.04004 18.5562 5.68213 17.731 5.68213 16.3608 cv
5.68213 14.9907 6.04004 14.166 6.82617 14.166 cv
7.6123 14.166 7.97021 14.9907 7.97021 16.3608 cv
cp
8.70215 16.3608 mo
8.70215 15.2246 8.39844 13.5508 6.82617 13.5508 cv
5.25391 13.5508 4.9502 15.2246 4.9502 16.3608 cv
4.9502 17.4976 5.25391 19.1709 6.82617 19.1709 cv
8.39844 19.1709 8.70215 17.4976 8.70215 16.3608 cv
cp
f
7.45654 26.3794 mo
6.91943 26.3794 li
6.70166 27.2744 6.33594 27.3604 5.44824 27.4224 cv
5.44824 27.9673 li
6.7251 27.9673 li
6.7251 31.8516 li
7.45654 31.8516 li
7.45654 26.3794 li
cp
f
5.68945 40.0327 mo
5.71289 39.6514 5.75977 38.686 6.79492 38.686 cv
7.59668 38.686 7.87695 39.2388 7.87695 39.6748 cv
7.87695 40.3911 7.45654 40.6167 6.87305 40.9512 cv
6.14893 41.3721 li
5.41699 41.7998 4.90332 42.4072 4.86475 43.5435 cv
8.60889 43.5435 li
8.60889 42.8975 li
5.63525 42.8975 li
5.6665 42.6875 5.82959 42.2593 6.57715 41.8467 cv
7.14551 41.5352 li
7.96289 41.0996 8.60889 40.6865 8.60889 39.7061 cv
8.60889 38.686 7.8457 38.0713 6.896 38.0713 cv
6.30469 38.0713 5.00488 38.2505 5.00488 40.0327 cv
5.68945 40.0327 li
cp
f
6.40576 53.9512 mo
6.50684 53.9512 6.61621 53.9434 6.71729 53.9434 cv
7.18408 53.9434 7.99365 54.0288 7.99365 54.9473 cv
7.99365 55.5781 7.50342 56.0063 6.80273 56.0063 cv
5.7832 56.0063 5.65869 55.3135 5.63525 54.7998 cv
4.92676 54.7998 li
4.97363 55.4302 5.13721 56.0605 5.74414 56.3799 cv
6.00879 56.52 6.35156 56.6211 6.75635 56.6211 cv
8.14941 56.6211 8.72559 55.7568 8.72559 54.8618 cv
8.72559 54.1304 8.34424 53.7563 7.81494 53.5854 cv
7.81494 53.5698 li
8.11035 53.4766 8.51514 53.1416 8.51514 52.4409 cv
8.51514 51.6079 7.88477 51.001 6.82617 51.001 cv
5.38623 51.001 5.05908 51.9893 5.05908 52.7915 cv
5.72852 52.7915 li
5.75977 52.4097 5.82178 51.6157 6.79492 51.6157 cv
7.6123 51.6157 7.80713 52.1528 7.80713 52.48 cv
7.80713 53.165 7.29346 53.375 6.76367 53.375 cv
6.64697 53.375 6.52246 53.3672 6.40576 53.3594 cv
6.40576 53.9512 li
cp
f
8.7334 69.0137 mo
8.7334 68.4219 li
7.93164 68.4219 li
7.93164 64.8726 li
7.36328 64.8726 li
4.85693 68.3442 li
4.85693 69.0137 li
7.24658 69.0137 li
7.24658 70.3447 li
7.93164 70.3447 li
7.93164 69.0137 li
8.7334 69.0137 li
cp
7.23096 65.939 mo
7.24658 65.939 li
7.24658 68.4219 li
5.4873 68.4219 li
7.23096 65.939 li
cp
f
97.2246 4.47461 mo
97.2246 5.84424 96.8667 6.66943 96.0806 6.66943 cv
95.2944 6.66943 94.936 5.84424 94.936 4.47461 cv
94.936 3.10449 95.2944 2.2793 96.0806 2.2793 cv
96.8667 2.2793 97.2246 3.10449 97.2246 4.47461 cv
cp
97.9565 4.47461 mo
97.9565 3.33789 97.6528 1.66406 96.0806 1.66406 cv
94.5083 1.66406 94.2046 3.33789 94.2046 4.47461 cv
94.2046 5.61084 94.5083 7.28467 96.0806 7.28467 cv
97.6528 7.28467 97.9565 5.61084 97.9565 4.47461 cv
cp
f
109.859 1.66406 mo
109.322 1.66406 li
109.104 2.55957 108.738 2.64502 107.85 2.70752 cv
107.85 3.25244 li
109.127 3.25244 li
109.127 7.13672 li
109.859 7.13672 li
109.859 1.66406 li
cp
f
121.379 3.62598 mo
121.403 3.24463 121.449 2.2793 122.485 2.2793 cv
123.287 2.2793 123.567 2.83203 123.567 3.26758 cv
123.567 3.98389 123.146 4.20996 122.563 4.54443 cv
121.838 4.96484 li
121.107 5.39307 120.593 6 120.554 7.13672 cv
124.298 7.13672 li
124.298 6.49023 li
121.325 6.49023 li
121.356 6.28027 121.52 5.85205 122.267 5.43945 cv
122.835 5.12842 li
123.652 4.69238 124.298 4.27979 124.298 3.29883 cv
124.298 2.2793 123.536 1.66406 122.586 1.66406 cv
121.994 1.66406 120.694 1.84326 120.694 3.62598 cv
121.379 3.62598 li
cp
f
134.177 4.61426 mo
134.278 4.61426 134.387 4.60645 134.488 4.60645 cv
134.955 4.60645 135.765 4.69238 135.765 5.61084 cv
135.765 6.24121 135.274 6.66943 134.574 6.66943 cv
133.554 6.66943 133.429 5.97656 133.406 5.46289 cv
132.698 5.46289 li
132.744 6.09375 132.908 6.72412 133.515 7.04297 cv
133.78 7.18359 134.122 7.28467 134.527 7.28467 cv
135.92 7.28467 136.497 6.42041 136.497 5.52539 cv
136.497 4.79346 136.115 4.41992 135.585 4.24854 cv
135.585 4.23291 li
135.881 4.13965 136.286 3.80469 136.286 3.10449 cv
136.286 2.27148 135.656 1.66406 134.597 1.66406 cv
133.157 1.66406 132.83 2.65283 132.83 3.45459 cv
133.5 3.45459 li
133.531 3.07324 133.593 2.2793 134.566 2.2793 cv
135.383 2.2793 135.578 2.81641 135.578 3.14355 cv
135.578 3.82813 135.064 4.03857 134.535 4.03857 cv
134.418 4.03857 134.293 4.03076 134.177 4.02295 cv
134.177 4.61426 li
cp
f
148.71 5.80566 mo
148.71 5.21387 li
147.908 5.21387 li
147.908 1.66406 li
147.34 1.66406 li
144.833 5.13623 li
144.833 5.80566 li
147.223 5.80566 li
147.223 7.13672 li
147.908 7.13672 li
147.908 5.80566 li
148.71 5.80566 li
cp
147.208 2.73047 mo
147.223 2.73047 li
147.223 5.21387 li
145.464 5.21387 li
147.208 2.73047 li
cp
f
173.518 4.70801 mo
173.518 6.07813 173.161 6.90332 172.374 6.90332 cv
171.587 6.90332 171.23 6.07813 171.23 4.70801 cv
171.23 3.33789 171.587 2.5127 172.374 2.5127 cv
173.161 2.5127 173.518 3.33789 173.518 4.70801 cv
cp
174.25 4.70801 mo
174.25 3.57129 173.947 1.89795 172.374 1.89795 cv
170.801 1.89795 170.499 3.57129 170.499 4.70801 cv
170.499 5.84424 170.801 7.51807 172.374 7.51807 cv
173.947 7.51807 174.25 5.84424 174.25 4.70801 cv
cp
f
186.152 1.89795 mo
185.615 1.89795 li
185.397 2.79297 185.032 2.87842 184.144 2.94092 cv
184.144 3.48584 li
185.42 3.48584 li
185.42 7.37012 li
186.152 7.37012 li
186.152 1.89795 li
cp
f
197.672 3.85938 mo
197.696 3.47803 197.743 2.5127 198.778 2.5127 cv
199.58 2.5127 199.86 3.06543 199.86 3.50146 cv
199.86 4.21777 199.44 4.44336 198.856 4.77783 cv
198.132 5.19824 li
197.401 5.62646 196.886 6.2334 196.848 7.37012 cv
200.592 7.37012 li
200.592 6.72412 li
197.619 6.72412 li
197.65 6.51367 197.813 6.08594 198.56 5.67334 cv
199.128 5.36182 li
199.946 4.92578 200.592 4.51318 200.592 3.53223 cv
200.592 2.5127 199.829 1.89795 198.879 1.89795 cv
198.288 1.89795 196.988 2.07666 196.988 3.85938 cv
197.672 3.85938 li
cp
f
210.47 4.84814 mo
210.572 4.84814 210.68 4.84033 210.782 4.84033 cv
211.249 4.84033 212.058 4.92578 212.058 5.84424 cv
212.058 6.4751 211.568 6.90332 210.868 6.90332 cv
209.847 6.90332 209.723 6.21045 209.7 5.69629 cv
208.991 5.69629 li
209.038 6.32715 209.202 6.95752 209.808 7.27686 cv
210.073 7.41699 210.416 7.51807 210.821 7.51807 cv
212.213 7.51807 212.79 6.65381 212.79 5.75879 cv
212.79 5.02734 212.409 4.65332 211.879 4.48242 cv
211.879 4.4668 li
212.175 4.37305 212.58 4.03857 212.58 3.33789 cv
212.58 2.50488 211.95 1.89795 210.89 1.89795 cv
209.451 1.89795 209.124 2.88623 209.124 3.68799 cv
209.793 3.68799 li
209.824 3.30664 209.886 2.5127 210.86 2.5127 cv
211.676 2.5127 211.872 3.0498 211.872 3.37695 cv
211.872 4.06201 211.358 4.27197 210.829 4.27197 cv
210.711 4.27197 210.587 4.26416 210.47 4.25635 cv
210.47 4.84814 li
cp
f
225.003 6.03906 mo
225.003 5.44727 li
224.202 5.44727 li
224.202 1.89795 li
223.633 1.89795 li
221.126 5.36963 li
221.126 6.03906 li
223.517 6.03906 li
223.517 7.37012 li
224.202 7.37012 li
224.202 6.03906 li
225.003 6.03906 li
cp
223.501 2.96436 mo
223.517 2.96436 li
223.517 5.44727 li
221.757 5.44727 li
223.501 2.96436 li
cp
f
249.726 4.62207 mo
249.726 5.99219 249.368 6.81738 248.582 6.81738 cv
247.795 6.81738 247.438 5.99219 247.438 4.62207 cv
247.438 3.25244 247.795 2.42725 248.582 2.42725 cv
249.368 2.42725 249.726 3.25244 249.726 4.62207 cv
cp
250.458 4.62207 mo
250.458 3.48584 250.155 1.81201 248.582 1.81201 cv
247.009 1.81201 246.706 3.48584 246.706 4.62207 cv
246.706 5.75879 247.009 7.43262 248.582 7.43262 cv
250.155 7.43262 250.458 5.75879 250.458 4.62207 cv
cp
f
262.36 1.81201 mo
261.823 1.81201 li
261.605 2.70752 261.239 2.79297 260.352 2.85547 cv
260.352 3.40039 li
261.628 3.40039 li
261.628 7.28467 li
262.36 7.28467 li
262.36 1.81201 li
cp
f
273.88 3.77393 mo
273.904 3.39258 273.951 2.42725 274.986 2.42725 cv
275.788 2.42725 276.068 2.97998 276.068 3.41602 cv
276.068 4.13184 275.648 4.35742 275.064 4.69238 cv
274.34 5.11279 li
273.608 5.54102 273.094 6.14795 273.055 7.28467 cv
276.8 7.28467 li
276.8 6.63867 li
273.827 6.63867 li
273.858 6.42822 274.021 6 274.768 5.5874 cv
275.336 5.27637 li
276.154 4.84033 276.8 4.42773 276.8 3.44678 cv
276.8 2.42725 276.037 1.81201 275.087 1.81201 cv
274.496 1.81201 273.196 1.99121 273.196 3.77393 cv
273.88 3.77393 li
cp
f
286.678 4.7627 mo
286.78 4.7627 286.888 4.75488 286.99 4.75488 cv
287.457 4.75488 288.266 4.84033 288.266 5.75879 cv
288.266 6.38916 287.776 6.81738 287.075 6.81738 cv
286.055 6.81738 285.931 6.12451 285.908 5.61084 cv
285.199 5.61084 li
285.246 6.24121 285.41 6.87207 286.016 7.19092 cv
286.281 7.33105 286.624 7.43262 287.029 7.43262 cv
288.421 7.43262 288.998 6.56836 288.998 5.67334 cv
288.998 4.94141 288.617 4.56787 288.087 4.39648 cv
288.087 4.38086 li
288.383 4.2876 288.788 3.95313 288.788 3.25244 cv
288.788 2.41943 288.157 1.81201 287.098 1.81201 cv
285.659 1.81201 285.332 2.80078 285.332 3.60254 cv
286 3.60254 li
286.032 3.22119 286.094 2.42725 287.067 2.42725 cv
287.884 2.42725 288.08 2.96436 288.08 3.29102 cv
288.08 3.97607 287.566 4.18652 287.037 4.18652 cv
286.919 4.18652 286.794 4.17871 286.678 4.1709 cv
286.678 4.7627 li
cp
f
301.211 5.95313 mo
301.211 5.36182 li
300.41 5.36182 li
300.41 1.81201 li
299.841 1.81201 li
297.334 5.28418 li
297.334 5.95313 li
299.724 5.95313 li
299.724 7.28467 li
300.41 7.28467 li
300.41 5.95313 li
301.211 5.95313 li
cp
299.708 2.87842 mo
299.724 2.87842 li
299.724 5.36182 li
297.965 5.36182 li
299.708 2.87842 li
cp
f
7.69775 220.519 mo
7.69775 221.889 7.33984 222.714 6.55371 222.714 cv
5.76758 222.714 5.40967 221.889 5.40967 220.519 cv
5.40967 219.148 5.76758 218.324 6.55371 218.324 cv
7.33984 218.324 7.69775 219.148 7.69775 220.519 cv
cp
8.42969 220.519 mo
8.42969 219.383 8.12598 217.709 6.55371 217.709 cv
4.98145 217.709 4.67773 219.383 4.67773 220.519 cv
4.67773 221.655 4.98145 223.329 6.55371 223.329 cv
8.12598 223.329 8.42969 221.655 8.42969 220.519 cv
cp
f
7.18408 230.537 mo
6.64697 230.537 li
6.4292 231.432 6.06348 231.518 5.17578 231.58 cv
5.17578 232.125 li
6.45264 232.125 li
6.45264 236.01 li
7.18408 236.01 li
7.18408 230.537 li
cp
f
5.41699 244.19 mo
5.44043 243.809 5.4873 242.844 6.52246 242.844 cv
7.32422 242.844 7.60449 243.396 7.60449 243.832 cv
7.60449 244.549 7.18408 244.774 6.60059 245.109 cv
5.87646 245.529 li
5.14502 245.957 4.63086 246.564 4.59229 247.701 cv
8.33643 247.701 li
8.33643 247.055 li
5.36279 247.055 li
5.39404 246.846 5.55713 246.417 6.30469 246.004 cv
6.87305 245.693 li
7.69043 245.258 8.33643 244.845 8.33643 243.863 cv
8.33643 242.844 7.57324 242.229 6.62354 242.229 cv
6.03223 242.229 4.73242 242.408 4.73242 244.19 cv
5.41699 244.19 li
cp
f
6.1333 258.109 mo
6.23438 258.109 6.34375 258.102 6.44482 258.102 cv
6.91162 258.102 7.72119 258.188 7.72119 259.105 cv
7.72119 259.736 7.23096 260.164 6.53027 260.164 cv
5.51074 260.164 5.38623 259.471 5.36279 258.957 cv
4.6543 258.957 li
4.70117 259.588 4.86475 260.219 5.47168 260.537 cv
5.73633 260.678 6.0791 260.779 6.48389 260.779 cv
7.87695 260.779 8.45313 259.915 8.45313 259.02 cv
8.45313 258.288 8.07178 257.914 7.54248 257.743 cv
7.54248 257.728 li
7.83789 257.635 8.24268 257.299 8.24268 256.599 cv
8.24268 255.766 7.6123 255.158 6.55371 255.158 cv
5.11377 255.158 4.78662 256.147 4.78662 256.949 cv
5.45605 256.949 li
5.4873 256.568 5.54932 255.773 6.52246 255.773 cv
7.33984 255.773 7.53467 256.311 7.53467 256.638 cv
7.53467 257.322 7.021 257.533 6.49121 257.533 cv
6.37451 257.533 6.25 257.525 6.1333 257.518 cv
6.1333 258.109 li
cp
f
8.46094 273.172 mo
8.46094 272.58 li
7.65918 272.58 li
7.65918 269.03 li
7.09082 269.03 li
4.58447 272.502 li
4.58447 273.172 li
6.97412 273.172 li
6.97412 274.502 li
7.65918 274.502 li
7.65918 273.172 li
8.46094 273.172 li
cp
6.9585 270.097 mo
6.97412 270.097 li
6.97412 272.58 li
5.21484 272.58 li
6.9585 270.097 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 15.0%%AI8_CreatorVersion: 15.0.0%%For: (Rajesh Tyagi) ()%%Title: (010x017.eps)%%CreationDate: 27/05/15 11:04 AM%%Canvassize: 16383%AI9_DataStream%Gb"-6kB\>adP,ubJ9q:N3#am`B;0GaVfB/Mc.F(I^jt%jli$?Zqb\fLe@?NcrN>TOBBCqqC6_aJPtG%&Q'BU]45]Flp\&C5o:P-G%XQ`kfZEp"&A.?Z%jR_-p-dB@a:I-`]R:_]2K;,-rHGPgl)hCsMcekA>p>EI4H#E?QPtnC/lRum$s"rH_K>oEfe&YiQ>HQ3.flF.`%r/o*fG4^RdH`L<<oKF4HXGk;T6s4d`J%rI!%_k6#R_@gaC>4iO52[X2qku&F/Gpj:4724^pIk)p(#"&gq*_F`nA9Rg^JC>O!GV_R%6q0^J%^,Ln"ApZI5C7J"I!tGoHB#afVgUKoX6au?T8h\4!gh8`6WULiXcRa>c-L:.0kb%eW/)"@Lc57n^M-Hm8=W=-cjSOJl5&G7%=i35`RX`"0s'Eug2]FEp*hcE02`Q6cT-j2\-;!9^]K,e*21+NRpAr-+Kd<.Lkb.OqCn\ukpj0"28m?fQi1D:4=ek`F*2*<![(`7$%b?9bRJ@].'nP?J]W!=%WFdqd)c3;4.ajA85V<^B2>I(R(V\k(`=]s:F$>'3.b(W`d$s'lp]&jiPekto7otA%TAX=+%o\ij>rIoHh%WFRUOJakBq_Oo*P#bn9BK0ch<&P"r`3T0!i;W6Pu<,hPcfW<nR7g,"j<3Ds,/VHh90giS,(c2dE'gjiTQi&48rau5D-)#gg$D3%R%T=,3$PmU/a<VTTpGcRk6<`R8rH6&XbP[Qg0_gj,PJ6[g0\I>6>B4]dTjKWRCA)"dOn-upE)fibJpk2n;$KS3d!4#LR2jFa2WRp*G%]l"Ye?*D0CHC_h_N![3$+&X>/$]s_gMAQac+W%Kl4s:`LM7&S\K,29NjFJ)_-a]@?K"s^Bi"M]T7IUU0&NZ&;TgeGWm=oOMKf25f%KUS]ca9Cs_:WQJ<6Q584^mrc=:m"Q\4p`KK3Ph<F:2hGc"6Q\G=:Xm4E^BT\'1sH386SaEOWK-na9Cs@4\Ve@@%i#<#uAo/df8f.%0S^A;KNukfpa!OD\:i4oe.4Dl*WXD%s0+[3p^sMn/j_Kd(Xd>U4^_%S,5%+^=auPRllY;>ehPI'ec@UA20fSsK29QWp`%pWBL6+c%'CnES13pmmD!V_UOW"LL1EL/@_RL%/-_*MJJW1&gVhFI@4$n'f0;0=mc?b/ONSk;W=RDo+!`.[:IfsgJ1'on'4t!]\-.MHL_S:K*%':;IbNE/6K(nEYT'CKI[chS*E3=iBWc?ksVRJ-ek`$br=S/Mf;L+fToPY3-1=i13sRn,u9r_jO%L4>D:0R(>tr_<B'o"%Ropc&"]%RcKldPCJleSh5lND:*j0&p_C0ahMka4S*L^09`S?8IGJEs(XF^beM7aan\Hf3V4>>P("_'m"p+bp*j06e*C#UXOg*foW=m,bPB0X%S7`dhg\_p`<'`P1XqF(Y,7Gf<QrWcOK4"Nss..9,pGCF%@ON`HMW\NsThonl'[;F/=\QfrB[JLRH[lT@[om4U70lpLr?a?;gDpN-%Mtos#?E?7#@?cBc.rgLu,mn.F1fp=(rd4u44K"MNS8SqAftOqh&GR3d"i\uR`X/:,#;h&tGTpkk8^bg4r+Ec9.K<I93tt!Z%5a_@%X"1\b$\,Kq%CjG9qOII+*>1Z2*/a!_"4s(VL-Ho#_(Yp4>4=``Nf@MlkEpj8?oS:@`\:RV3=LZcQq+sA#q\aX-PpZ&.RqiJ#`?G(%Ff0c\dQAS.[74sQOlqB5.),`a&89'LJ)M(EReu$=GW5a.d(C[HiS7CRi,mERJCE9f0rluT9r&`m18?.S6MPZZ<ag[XWQAN_`i2>A%Ec+GX$Rn-1=qE6Y&td'`"fZp=Wp2H@/*1nGF#pK:NeTS4NW628-?CWKO\(Ta<ODtVWiD/d/LhJ=mWZpCTl;89beV-3M'Fhp*91Hk%#5IQ23Eilt'Vc1tM-rnF`cl_g!p.W1.H-eb-n1[]"Yb?oQP"<kS>H<J%tu6)@,n/9;lX;D_=B]0NqAug%V<3\iDHCTQ$#N]JMq8"%N+p;bn-;!0duqY3_'#F0h*_tM5lr%RErD)19Mrm2&(4j.%h$K>PrpkhLih(MrWCZChp*1iA293RcD2MennO&9s"#_#,9R<T%]%An%d;Mu.rpr`\,9GQmYm:`C<mYg`Z_2ff$@d]n[ZnA+.<Y:?8e+@a&2_1+!)NTE6@>)XJlV(9mB9H=$e9P?Y6A\]_:f0pb9h_57?nLo%7_UV>p+Z0&\qB:EFDts)eDA]*5+lHu9eupl_L5Nf&aqKD1)LM[BXo`4kX52Pf2VsO&NF\N1<i1b$X(6groNfuALt(u0W.f!,=&T%%r,Rh16)0Rj>V_Rj$94U'*C1j*b^)PU:QgY0iK0R6"=qmOB8W[RnXlVBZ+Ns')j=E5Qtdt5+.h9!$@cN&DdMXGPhXP7/2tW`$2cG[%(^u$n/2G4m2<Z;%f3N4IWg7d3/aLW4!F<K('60W*o^]oqXgtfXD#THIF8EsuCG,ZX0IJR$6DI;KCt5BBM"@]A1d,Tu@9TO\@PF3t%*#-IS0,0$>?-smZKAdg7B^1s3$IH^KqoA?"#fgUB*#sMB/ZLci?f+jhgnK/[;V"3^5[i66T:0ar%#3uFnPF=&o[K,I'.@B#<h\D9%.f),&K[U2a$j7#&B%1+-]9?1#Z\#,i?s_=)_nkXo5Q_5\n4`8(6%d1/\CM;Il%1hY/hOHkBUV?_MV8WNZ4M3l08]>YLM!XoLF+f[%%(%73n:.N2MUn:W$aR;uW3;T-`arn2865J(O@49uJJ;;PpOBFD*"TP8rd_GE;D,T+$V-im\X!RtQqN0a,>]Le0O3G='7I4oV^^+9%7FgVYi*(#%85AcpOLgq5#rLU[`p:iDAi<aF,_7!P&ood$1'j&tG<q<!o2nP`q,'Adbl-KS^8^731/BpZlU2]I%gi:#Wl#C0-+`)e%;iJ)F!/K1)"NYns::5#N_Y%13>\6lj5I9lSr!ObTZg>diWiO-TPY6.87ki0G)8E:60I2Ec<\9:oPP#20LQtGE:3_o!\=[o/5F619%M]F?)GtW4VR'j0]3iiCp4qY9^Dae9.a]]b`m/A6`r@j<5a7qb[,ieLGOH**THNlc:aFr8bD22g.KZA>Z0"EkS,`ul[65&$;)No+q%Hj-T'E<!Im#,m=P5Q'gndAm@8\g)b;I9]?P\1[tS8]1soc[4uT+RAK<:^k@W7[4[FjWX>"^`&:ZKp[nBkBU\*Lg#jpl4G^4VpJo`%N+`G!_/KZB`mVZPKs?A\*gJKpUUt_CcF89TPsKZ^Ytu9(Kt=l;[d&qaMWNsHN,iTbiEf$CIT<lHT?7&sA8Dn9-D<G,'hSQ7E)+$-%I?>#fiO*):lWiaaP#>AUelKH?,<?bH_KeXFO?Xi/eCZXHi,o$M,&7r(>h'3P@;PCi%.UIsV.-8hlLD$YLenM7O3g_%+@!SM=UYDO%@+`1750%/(RB5A$pDb%[bS-K^NcC!(#:\R:'\)N*$X,!GF?Y%MqSO]fTLq$LLYus2a^N+/9+'^gZhTt7jM8B*:i7,J?N1AFo<1oq%4_3e#WJ3P],eO5]-Q/^qL9fICJZ^J_erBFD;88!8/_UZQ@&RU.$,p;n%%J)j_%=jY>jnh[K[hj8)FonW+A+7N/84fEY[it$_WpZq%KNj1b'iu,9?ZWjc(0g6*C4,s^YOaJ%"0J'YH>-g,*D)45&EcL!HF07HYT,;n-Y'SmV4N]RN7+<Je5W[/os&VCibE4+=E,>=nQeY[%!.3Vn=KtLi+!^)'U5-snK)u`nD+OtFiA$+]#cE"-giCsV`F'7ac+T,i38@-.XHh]SqePMB"j^Y,C@FRU$N)i`MWD`9"P.+f+;KZe%-."qAjsWd!#?Ju%T,XO)OfY8g0>?$[n+ZhAFTY=jFDq?ipmf7,FW3Q8J)()Ippu"aNc;.TT#`CC#[:qW5-RC<fh.X@5KF0MWI#IQ%K"4o"%MI]i[9.$n33rirR<<e=@=8=YgF?#+rZc;H4n#kqR/Kp,en*WU"H)Tq9FL%;"if;b&.V/\fe%dTMlQr%FFqnQX7.M'(iXJW%>:O[I`^?'5qH-?\,_bOQ#@lKX'IA?B\qC.5b2B>"AEO?*\]AH=[;;QtOd/>I;W[Gt'C"G-Zg`IU;hk*8LOt9D)GV4eRRnh<RVNt/%bP5=AG?HnVCG-It\+%e]s5IFcAPihcXa<NA3bUS\RZCM;j$H_MKf*ZUoL4KlXNX8=eSiLf;6c-Ti@q+LNg'Zc":FiYd@%77HcD2B%ENh,!a20kMf\a#32lC26+1Z]am_lu,23Pa)>]*_eT80P)W=f)u(g7HE(<fI0ZZF='2Wp[n]ML<"!JSo[Wkieaqc&ZeDeL%pfc(Ee%ll$FCR5Tl^:rst-)e=S!j!taE(19?_5dS$j$4"Cg)+1Jmikm*hHWk[bNB),pGWJG"pc>b@S\Ic[Cd!?P=]D5<1do:l8b98'O!ofV%4fekVHANH4m)1:9'fl]fHl\$E1*Psg'j&?Cl4@/IWfka]X?7qJjb^+2qpqX/n7TI%#GZsKLhg`OMllQ8kR&2_iH]YNQs*p0PalkZ%p<LF]`E'M0RNn$CCs1CHE6SU7r$gM/EC"F8+_`l>;\[hdGhO6jY.JidUqiJQ9&/SqW$M/J.8Tb`4*-hUm.t3M,5%7c3In4m$[X_2%@VsCSO-oe!:nG@"5u;Y-ir0aTN>N3s--1M$f'9Y\4>`t2be7W6CC-r7m^<"G<mWtCc+:4_7.aHF(PJlt.$6Uj\c7<9rjlc_KmR1m%U/sfhiJObb%7d)d54#4J+d'OX1>U>KBmWS,-"<_>[A]YG@8IpW15@WQ`bO%8-Ki;q7.1BpB*4Gl\@tjM/%Oob(uKPs*Fit<1!RW*%e4</AN<h'CV5dM28+6,CZe]afDm;cTh>r9^F#^9qG);<i`,>^_N/on./FbRG2A4[JIRV</CqBA6"^l/(]a/b%N&b6+3iV&R#:L5@%(@V&XX*>As`[_oRgC*EiII>WC5HI[o5U7DW,_L&IFc*\dUQ;OKF5>T[mLle%m981ABj?e@b<r"$8:KEbHkte)a_Km]69J+%>huOX%\g!dE4qFhZj3J-/2^Q`;o*E4Z&'La1U/m\6EHPdVm$;U91*,\ZMWni0XggA'qn,_C*j#3bOGtO6hqgO2+TlJ$1^!MbqH?d%q'nJB%SBP?#mS;B#i16XHCT^Ya"*-KWI>u9o_bP[_a7V#JYE4P?*2Q&rSS/3#L;u+V[:p][9SOY5TcOX.C]ooE]2f#!>IXF08F<[DfoOmb%8:N"mhA0`amlD&_07&>/NhhghmV\$)e?sa%(KQs6#@<4e.bU(BJLC;Ff0`?bC;b<+XA*hm5ZlE4,l7Lopjm`N['7;V(p*%>I4T'.%-Yt*UOWsRe&G[ZS+mPc52;L;BnOgg)5'eLkk;<:t=qiOLHbM/WU60BLf2$,!H(SkDiYr[/L-A$ZSe%!"W*WS+!p`"P:(^PdVV&B@%LQ`T<:'JmC'%_t24t7Q]2Vs-"8muDo,_[sI@\YYpSB*Rho,'me&c*cG"B(-`9f47+mHW()S-d2'G@31ba4jF?]oE!`6o(frlUs-C%)k`>;3fiWIf#tTf:*g$q@f>VQ#a.kWD2Q(d2hiS%-l0iao1YUa<T,GqhUNBZ9*TYXh69YMUXM]9--^e`$ctN*J[M5:n2_GqCsSaj%d[?;Q<>X.,Ciu4f5-`/4"i9E`N<%<-TW.$DTR!/uJp3i,]i[@!0k@[*5*)j0*;:<63g3LYZ#FM$([2g!i$&'cLTU0(^IgM\T0q3N%nZH3QR595u7RljO]b\%hNl?A@+P+Y8NB5!7;VsUf;";1D&K@,(:07@bI_:sVd#q!!qbHK1R;5E6cm#/=L#dYuX&dbO;(kKDRV=i'%QL6d&7J&m*[N0t+:=%lrW')IoPI[hoVq*0fdF[W_;r.<iTA&BI;$Mp[^m^f=&';:k\@p8G*X;FT<kQda$flIaj#'+8f,Pd@,Sp@A%<ROOcRNrp"JtGb>PJONc.N]\jRQ)64N8E>2EFA)@Q>2@P3a4^QctA3d#W/1*fdI9c2*b4X1ki(-$Lu_6OEG:WKWQCpH@+8tKO#iU%?OrnIccr,:1S)H=m+^pK@CZT<cr'.neheRAp!m[GR3;j)e4DK5@<KR+H]D2+-nX7=0@B5RehKU^;k;=02:GTo<o\tTOm@6F/F9cf%93Pb@*dZJU)Ae\Xf^cjAN1f0<WQ*))'KbW-FAsEcKT&FMR:?]X.&N:UksNEZq.tT?IjE$*UpM8Bq-#>$AT@2c"`OZ0`uJatcc@4R%kko:U;=o)Af,PkoNp.-c45%1L_uuJc=JK?c*S+J'Q%_YAM"[Vm*<60@ff6u=,nU!f>OMuR<*0hM?P+F[4_E16H8.l9P=YV4Gn.Kf%'Uh<6Kh5=8n-iNFjB&`?Y&IBPROVBihY:03NI8$P_e:H>00$&`d$6&A=aV6hA3gW(8Q[jU2"rI4_jmnuiEblIk)uJ[<lH'Jep4FW%G1XZ9goF^)^1=]1rJb=$n-W7IeTO9]&s441>5JJ`+XXrRSPM3m]$Cj7543PsSQGC-q2O:%2@&,FEnE-rIQ6\eh!])>!',+VhcLE0%X`*iHX4R18m^.Id1:*gDc;QNGen[CCCtYS]hp(?#>]uD[n6`*Nmt55Gn_Tgp/?%E?oU8qR&cq#_p)OZLD>rhm4ukSoXgS1D[Q7]f%==9rmI`_S*oXaQ]+1E0U7PB\KSW`a)s$CWBLdo$nSsH%rB!:)\"N)?AMl2/_%)T%J'f?26flF.HId&q*P=IRk,V?aCdq:Wi]9b,D%^ADj%ZVIF['^L50PYRE^.cgVRe8^EJg.-!H+Fd*BK=@^UDt's2"m$5t!PSCiQX4C5>48Z.7ec<K3N.O[pJ+HD>oL`ZkOY\%HLH?(%IM,P=)nj)bF/sT_:OgahN%,:8na!meJf#(m2i_b<ZO7QmA5D)$h'Oaqn5dRi:RqR[#:+jh)8!6i/UVF+"qLALr6oES1W@%NkO1<X%a=_+;DijU,I('<(F4oP]j0P.ZbS3k15J*jC1lIS]b"2/\r=APd,f>Yshoi6&rh\uC5NlMlrV2A8rm&Yap)n^'-Y6X]o&WFI:?B6<%aV9Ta>KLE6W*]+U0gnaqpr,/^\C#%8`lD1$5@q_"<</Qc);f9=a3U16Z;V&[.h)gZ;/mf9Hu6Y:L?U3k,-M8^5r&BM9h#;3&jm#(%\?_#6aGg*pAC%29iT^:YW6si-K:euVE<j1G75`1i-RYM<ZhoaUlZ_A($(F[+-BLZ\?d9G1BZO##j'K(Lm%Kj0XSJJS[eB8UBKWu;%h?X(BbcGcni1e_:2G/5^+n&A:]fg'fE)CfPk^1\T*b8%bBF+:frs/:#Q<tFo?tO<eRP4-eT>CtDh=L@;F6<_sC_%5;^o#J:)UQ"3%-kEW!m\E[uTn&\&XO?N\OlF`:r[7TsH[j02huBV=1e)0S$S27Ph0K"`+Ojc?/F1DmB=hhBpJ<lBhlR*$8k<[bW*PBK1]%<].b9=s%F7Jg/rt)RLpXngXbDht9gAISh<Z>UPJrd@h[,C\.2-SloK2()Q^)m4$V/M9g?EZZI`/VTGF3o.tgbh+ono+m4e`a\*&<0NLpAYRm%r3,/Mhk\*rch%).hKhJ_L$%pH(*On@ID,BQmf=QBLgTuRqQK"0"6LYd>Q<fF:#%!Q`W-[5k3R3%s7#sB+*9\J68Ap./-"FC?u>CW%#C`rU=0gs354&;R)[C4^9YufWEWKo:@TP=Y`6ml7*K,(9ha]0$'n0b.Th2E_'&UEHV]A6\s2DE$m/J=IUlYc[k/!4B8FEq\J,T>\%2?WYWn'D$+R/V%l:-7@Hk9dnVmpF`p&'r:jkZm=A<W.CTWs?bVIpuUa[hA\P)Y-[#6iMOa)8%8/N)>Z^7JiFZLa);+eQ_YDodsM!%<bqkF(ATV!(;o"dY,BPFBnlN0?NY='@JlL%VW5FeC&S>79BKA6/cB$?c&Q_F)&)Rmmm3IO^sCEl%A#V?hFmP[Xp69AF[]61cobGW%qrDidCt9ZVi!`mmp$eJlRR1A.9h'rk@N>S^6a]l@-hB/p)XY9XrDUaD,\ekO)T*#feGFCDH#F3gR]WpA#oPl[YKn86qX4E7h^T,<%M*sEXSTk:R:;92ZV2e-M`m:qL=kW6mj4TftY57#D[Mo/c1jU8)KkX[Zehh5L5Sp2OmtDJ]]EFSP->o(7@8;P(-<`*9WWo4`\+)es%_ITG9V>FS<RR3tDg$$mSY\llmg%1<.hsCh7E/iF1BDBnM[e)`H30$QWK6<OTnt=ZcMt()mZBr@aU6AU"rc3CQ?06%lr71.V_=pS7%SX#>+<KI>lpJKYDJ%&U?3A6i75!fFdV*`L)A;t%C/.9<`\.9_([l?-@#Vqt>60l5?bk;:Tc3G!p8k>@_N^+%hgN2\oMeE,$T`:[Y%p56(cATCt$Mr!eDH?\)t_W334@@8Xj<i^g/CYmsbq<G(WVg%e!=24"]N"?=)Rf?f]97fB6bhBtIZ1Jj4#'KW<UXa$B1DscWQ5n9e%AOi2gTdW:W\E!ZkM^\(Jag#frilSjfG]l4FiE6Jp`4RSd;@BHGkB7Dmc,n_Cl'<4,YW/]!Z+:\'YhFR2c3+oFo`TM3bU\BH&!pc^%hNkiad[U()\^@-G1/0S7=L&qT"%ZcUg@+u!1ph6\;?2;;"__)6!amqg1+Y^ko+kcg.>g+NF9VFnRQ/tRhYZbP8a(9C(c8"]E(?c1%';hLpp.P!Ap%McW#!Xc^C%JmaAoij3,I4>TOdIILr'X;b$o;&4@NHJfCN0Y*p+7r8h78B)J3IEU3utK_isMr"7u]s+`deF_/Q?He%OmA"iAuYa_MTq)ailN4`!`#cuREa10A6cpnnZm_1?.(#J(;:+@Jq#X4o*=eP\Eq17]4A+DAH_.=A8`_rKK1DH7,tA#gg'qCT0'`Q%k)3Stb8(UM"4q=.>1NG#mIC('ROqLh0>&lqb^4rI--OuqnS*.g-=5=m!rK7llEaRNijK-s3V"Rm/fbFY@\i:+oboLPJ-;*/PWDU>%DHnkl,#k(u@ZVh73Lku<;[g3=H]$T0.s>8a5712gB(MkjlW<&WhaCEp_dhT[aWet#B7]<0S\\O:2]#Z/ORr;>T+ADckK/P$g2o;t%[aIJ%kTsFtg,^[^G4p*&kO^/Q.u%Xg.EdSoBt&/4CW':skLY'])2[2t!r)OX`@S]h?GAakhC*!`e`-LdG.YZZ>LM-;9MDk[7o5Xb%r,+a>A8/J\$($[qA:#<71B,`S[!d\!-UXg/nf<pf+'6=#-bM*/##O6Q1N_>a":g7$&6Tgo.Ho<.85<\P"cUd#S3:dc;\.1;;U,@^%TM)j\](8cGA3dZr$,XTLor[c4lntQ]CWTs+2$T22&FB[H&M>ib-Of@U\/Q_B?b?-fi&c*K1-N='`1d\L6+m"pZP?ffYP+X9s*jP(%Cu-]rX`!T/LPtWJCg8G,J`I$/q:Xt[oKd.'mq(MF4`4s\a?Aa/'Ba3U7E8o+L5U?ilNGlEX:sZ<YYL;3Klun_KH2%.NF!<?6b].r%=YIFGERo$f(!SYO+p8OX\^uZL8\?2\Z%A^*2Ya-E$YF3`FX!b)^H55)4:FCm?*CVlR<WZk#^Yu(?rLAE#VrgXBekp]IFt#+6OMF%%'\N*)]pAf1Sm%+kiNIq1,,b[u#"\2pgY;iXH'G6,r7m;F%O=iZp&'m/KaGc!&*>gg4Z;2%>T8$nnT7$AhV<!>DjE"uN(18fnR)$m%e,(6Lp^G?tl%'&nLafRY.l^;BVcMjR,<@KI]=XV"P\Q%qEo@tT^bAf`obPW"&T%*]TLt;Gcl%Hm<@?Z;?"/jEn>4ffIr35'ZJ4a]%n@m9u7Y"0N*Oeg!,hq4uZAAsH&VY4M2-Xqs65&W2qt*[mg-`2m01N`"E8EgF'W_Y89^eTE)S9T,h)(l_$hKKs7;$`iUUZ81-F,HS%/?;<!h$t4pDR'G'99eOlXL(C:?'Hdll-UT[B_H?<-+n!67]U_',q'YmKn7ni<_*l(_*D`.>V"-_#a,&/NY-jNU+EuQX4>.3040]B%EOM4/!ja2=3=?%s7sT<[Ha<KG]HA9hZDb]sQrL6ei_W%]-?8d'D<sui-N"`?;F9ubb^:"FljS]cgugYq^a_p0Y*,<2X!CT1O+AN8%KS'<D@/o9#Ml)=(7lV0$8_n,Mg#G%6)QZJ7^*]HufM\+;'o)noM37;CHp7;12cC5i0>2fJ#h9=BceZk[7/$uB.=6BnkBZW<8pJ+^%]i68$]ULCBjY:3V*&!4)%.+O3Em28,nN%[=/`+n6Et#g+rn`*RnJ:B4eo(7--VbV12%PfHGXjS>\[uq%cb)B/a;t6]1a?E`0FlaI%9G,^l'GqCXe&osrV,s/%N)8fV])H@qCg9(;V;fA.iki^i5_WR&[eaK:F^FubIc2(nlGhMM>lA5PI;D]NX>R#mUoSY$Xg50S@_Cgb%eEs[!;K:hEPKth^J#qep%^59TinHP@p%YSL>PMMgbq0uA<c^p^JKbi\Y%D\HHEK$t6gH9$",'qP6eaSH>Z]+7C)PXCkOn,gA%cCO%<2CE1<n`"9<\jJWDgh#P[+IOsh;#@6ldkdpcU,<dX^0G&\(=ON\ped&?Rr6AbO[$d9l!V(dPVJ2N&7]hdrL?_pH,o3CWX^N4;Ubd%<>MC\Ef1G]H>`0LUQq;fPi&0KF(3V*`=o5LSXqeuPD7Pp4Q]k94QPkWhH7D<#[,?ArZV)+!VcHsN@Lsdo#(*3!Ao/4N>o!mmT\QV%lW^o6:=MV8Df'(Vb4jHH'2$nl8MAOo<O(2ArakP9Y'L)(]$Ng?7^*9Pg4ZaoO2,:"as3V.]5sai/'[-<e`oBKO'YqbO1i0/_0JSJ%PpbUfZ(qM&ML*$UrKP4R\ujZ]dRS8QWtWt\RAiq?W7'Ps@ps-GC$Oap=%`<XW)fok)lk-I)O"+NatGid;XNaMWh5Q+"BCo4pF#7^%jo!O'_+@I-V6.kbIV>Q6]DL;J(jXGS\'N2L<'#dofgjtWT5%[SbTK0Qj6P7WWHDD/n]Zri:UN!"X+`&mKBoMV.tpj2d_G,(>s)Pe%TCZ-qr1K[s]G:T"]jEf^%'A#1r]6UdQ"KTYC/M1/+kg:0kQb18Cu/roDu5GYQ1ekAYN2?K1O2s%r\c]6DJfWc'mfOFWnYs1@&4P0%=**Zf;`P2b<3"j3eT%E.PJ(fj-M&>HK1]7B%;BVJnKPKk/ZCSUS2IK4Pu9Wn)b_l%d'd74c$BT=`hBha9.I("IahYg?EZuuk)p.<%cMK*IDKbM?c/_a0B%PegrL<+B8>X>%q=.@t&$*&e*R*EoSk;j3UtVBCjiu\r_iql.:KM/Xcq=&$VlCG/l-5B5qCjjZC'e_BhKJM[%k'Co'YgSGtp1n?<Vf+euo];?)/[X4`l!gj.)I2O@RQmuoY-%q0g>/;*Xn:U]CLVhWrP5i_8O#0-WkjrAXOeN]J)&i`<dJu^Z/_et%f0ZP:IAO^.6RodWUq;(k.CdgDhqcU'gJS,(IFq[h1-)_D^&7+]/u6prF/em4\JnYMFgs8jgUpajTh:ZdE2@4`j&5.=_0ho@5,iUp%5r3_uhjDHL.PpCsg[:Bq998\f-)bq52q'nerlX<"jkY\J<:*l8.gl0EkquZ/?t7%%dN"_>k=DH2.s]/e#T%jdoCX)&>/6Dt[YRgq%B8O%(1@S8SYd-E#O@hIm]d6aVqV,I\4++u3W`.*+4a3`$+ScsPD5^M+[^B1OFr:8Ik.L7ds1M[7PqN(bGfVtoBg/,Nl)iW`0Ke'C%^3r1nhc]+14`@NQaIa8WDr3hSq@7gE,sN$Ue`dWYe-FG1PrsKl]4lTJ)OC<:nEtd.hRDm]M9ARVoY#O_Z[<_gel(X+*lHmL2=>,P%>7\]3ac\E-r>Z0X^X1h6_V[NtrE9MRM^`73*_ea]D21A\gXFoXkC)ppf?BTK.JnMOIH<D9.o.^Ch`gG![Md$chHs4uR$JWZp1OB(%Qj\Cj>?tRqDg`=HbhnmgU!UOZa5-.0[iZDYq+&e99!Q^'qYGUW1huH>'g;3VY+i%*L;&(R5Fq4t;f"KR]lQ7WqR0EcG\VuIh,Q?[%jD^!AEluneEX9%d/_/G7=dtaj=$1C;c@5CEkhA^<eN57icQ9RX90r%:R%9l'@-V^XgPtOD,Om?@bll4oZ8>nh*G4H2_MpA!1oik)%&Z1sOQibI?P$?YJYE7lCq[>XqOB0[Z<_k47nIpa?HO@-"C((^]6gJNXPaU=n9dhf5a%LM4ORqH?Ys,/(&E!F3`XXcKK[Ea]YhCnS%N4f&mR>f?1<9(/^VnU:4qqBL=P&1ji0R&gf_HO$_@9%UO&Q5S_3I0Iuh2(YdY84"ild/8O'_GT>X]2>#3]mkOP`?QI0V=!O$C/>]%Q"m3q6D`7Aq,F<bAU8Zc=5'9oCRth'^?Qm2qUa6[%BFTOjf3Fj.^W)AhDHUX;Q>^dgVIU)l6.k6%eh-3?JU=EFJ@XD>k>\AXk7e&%XV>T,\)9k[F+p8ZYq:^2h4G!"0\/c].g:@^bgiUcRoPN!dG@C9<os2>1HHo*GQ7WpNm231IbiU.O$j9fP#Hk*Hq39e)7B:KZljUh%pqV<JrH*C5OSH#/pTSU&A3&JA1784[h^=a,q8[f*p>q7%qUf//Lq;H6>O;ds,:HsUhOaS'EEK]ZDQ66D2/5soat,^WJb<3<IOlO^%BE_LhAef9$:t+",,`BiEL4rsEpsuP/SW=GnAO0U.7o&b-e?UAYpMkD0TmV<J*iHiAqjqHM+ZdBY;>11IaO:1s4d;:Vom@g1!)*<M%6g;MF#sp))VarsucQLe%=B&ljU`Jm.nMi!Qd?V?4nfB0)0Zi:+U98Wp:W_?Xn,_S_Zk%Z)p>7=)?K6BOdV7TdB_t'b4V-pEYf)au%+S9$]_kF?RU.'WVi@dlr0E82q'paO+=-fA%Iq6jY])@M`HR:c7O_Su$jN)>%I7,W_Hu8<^8M%@7RH(#scMIm>qjP-4eR<g"G.Z3:%$&H`6QFMiqVm5^tU"t.A+`@WEMmZ"E6#"A%]md,t>&oZr;/?Ju9'j_/Ctb.e<'%^TVJ5>8`S!O6TqPi%p8.lZP7U]n$V=OP4>'=V%hY/aO%G,XJ)7`%@$=4'!3.oR0@34U/&UKeoOD\7gb)NBgm5PRa+Ucdd#pY-:VYJ_F=C]#(E&)SB"k-TI']o*uOqm+#GOte_^JPL[%FkEIVG2+r%0#&WXE`-4+QP\W@L:2f=2Y\*k8]KH;?>,,"mXu,#S_T(hkD]\92t)l\@UVbk*2E_]:g4-.JU";84nXFGM)ZBdhisR^%o:f"gMs-<-J![faL!F\+I&QN@k33DW+0#m*C5gGCl0;WOc.i^O-RNd3L@ssM:h8=__0RH*`7i\`Q<R+2Vkjf1>s@dJ+>qg(%707B%KOPUHP3BM#8;4*d:=gfW5C:PJoD95[BV"&2J*gp'Nq=F!`KKlOf(%oObTP-N:tTK/>b'oE:5Bl/Ts1S2,:4GM@e@6R'RT&'NFJVM%)hMO)f1#nLk;-?JlWt_[c=1Lpj6\\#i(8_E.pp$POr?6pUN3Rn0t'q^^AOEl?ml\Zs("Dtbmg>kL:k!fPWD+_AF`@gC1;KWlE'`N%BfT->F.FLW2;F3.$8I?%/I7X&-=/YU&Q0a8:J);0DOCtHU0VTU%ss@K\.CE2^2AShqSpE&g_L:'%EY=kGB0>F&s^*.;aGA8UL-*u%n[1muM73Ple\F[:U^8AfC'_ZYL'QP6ipOu1XE^PFLVluXN3i6l$\5iT5/tnmn6!$tfL[:f]^9dnql#3)l%pHTEgNX7359^J2GBJ;%]`SXo581CWPE5+Il9MN.os^+]1]0-k[J1=-^St]fQ>_9YqCWBm.q"0g1'?ZL(U;a_>b//bMXDY%lQ+u97[hN4']L9%>WX[?04C3Z%AGM[J)kY&<`TOC.Ih246\=Bj59q*#sBghO\_QJWG=F3$M]s/aLI_2LheNI!R3]Jh9L_%4a+WD\Gnucn3*Q%::\I/e_=!"XMb[Ri1%M=^Cc6ijUVK69h[NfeiQJgbS`)Vh@bju:sX-7[K#&!Amcj&P>,Y"FJ/QNX["rfN8]L/3HGD](GFWZ1-`9KYh`9S6lgm!0tqTpdkU%g9aO;TiBb;)9OE'S9&^pcTC_-eY&FZap[n871+R)o=UZ$!4[2<;o1YAh=O)!ZA:Ea6l3tea`LZfXI9`FDa:@"g764C)g:":&2o4f%*cGZ\"h4@!e@PiDgh_bREE(T#r2ie[J*<_oaY7B@/5g^Pe\+&8oipXUQ^$NM.GTkm]/t`u-X[&]PsR=[LiPseWSjTqHU%2I(L!2Q%I5"X48@27qi<5(FDLJjC\%%0Q*4dVgd-juN>?B9L2h?,u'W)RBY474/noo-rr%K;4$sD_QP\C#V3M/_*Ik5,>k3f#X%2!4D/#H\5%[COKP;'_UN"-3d.Rm]@$&oDkf$2i4C-!KB^8,Y=MM2$B7m2?qPS7mbF8RB^+CTk7<M"RF[nuT0X;[aX+mLJhjd!-R6=;2C6%YM/'%]$ZH'6:;TMcSl>JmKM7:pKYNYGTn:6RMff!_('4(NUroYad?2O+s*f@?K=T,l5<o0'B*`1$&usJM]lqOGJ?DXH+#R>,8?dbQXVUo%'[r<\\HTiK9%ZlR>`R^;*X8+qg$?]ohFNpe>?I+7.qnrbe80rp\)<ed;;+q?aN5^"%3#s.JQi7T=aZQ#a.qOUU>0fu.$#[B%=]]^%XY]c$(:jB9YM]6<*U:%+Ie;;)b))\tPKdRHS:p`ee1??t)-O_0;M+$ta50TN)r?$4%7B#X83Bt9Zf-OdV&7Y/C]]9=$(VNlB+s^N%inH/=>E=!-4nKr06mQ?"/g-1JbFl--[ZQc7m`SRu0'S_Ld=%ErFN98U9!LcO4PmS94]r%/j^GdN6M)0ac\l6fNemH%@\aWW7.B,T%:J7obX\r9l9h^g=36J4Z1o5Tqnf>Gg1s+$#2dYID!+>>n(g_Flb4p/76=KDb2bDS<TVtOjSQa_$*s30X$>(K3EnK)r].Y7hB_nO'%:`K3[Eq?Dk,8-]GGh0f3DL<`4Qd9=1qE[3iZ>dfINgK(Hk*F^c*loKS9-s6P,3N]4A*BHN%#gjsVZ_r%L+YN=/s@AQ%%XS"<s0P+%QD;LI77Y]j[,<oQkf?j6MkHi2`Q0cUd1LIW>&`O>]"gq/#eH[B_-pg:U*JmSfc?j-cp^IOn^t=u@d'O2kWk/f,DOJoU>5X>K@_X&%a3aX[13#B2p5jqr!ZfV:j"+lkAdaY%Jm+m-]=<r[5UgIJ</.E-M'Ah^rQ%]/i@ZJG8n->Os2NJ99`)N&o!t@Z<>^lo*Z(#iHTRp!%-9_iVA_tD1!W1*lSn=`b_=/?bK]2lI?AsZ3K(`Vum?`KRYd0LnIDYi=5M46J\I'R-4A&&gb/c8)V^TN0Y+h!b%@Ucq`.uQF*fF[`%RWi+]C9J_f`"rYM2hOM:"UT;iHTf%Kgr?bo><r="7B`"(7h0\MfEjQCYZmQu+JCNHMqq68<DIpF0gb&!6(%/D+G(Jo8RNLf66iiM%g,*+0/qQUH^Lm)5I)YW$17?prV`/sT]CST'gd&tDMQ)2$)\WJ5W5E;h)=IGWgE$qW@P'Zmj,CMXfo3TC@<F_N&d3VHVJmAmP$XO0%'c.,;M#n&b\qZ%$qi7/.;T/)g7E</:\sug[TkP/PHf,PW8)Zf!D))Nr9d.M+;*\((*r$G]#[Xsp*m=V,0QI-c\-Ffh[nKY$S;gC`%kO^)O/1s=;$8;.R-kmG0BI%LAGH[$X@aSVY.4H$V'LE5I4OGtHbGur`<i>?3kaA6X/;m4&YA_:o*]V218'<n?;8a1=0bK&UUN/$*%a(*KK(A<`+O3Q=(h0(l'K?h&JN4mR^il$JQ!0;eYh2XZ=7I97QJTBV7On]uDOHNd0@:LBGgla]9_WVkJ_M-[.iT,e&N=B'T$./KF%K4;m3b8V"tQ%'[D.=C-3Z)S;^R$loq4s%:*EH4bJ;07&Q9BnKL%L9t[o`q2^Gq+5Y#MLr1&c[3u1ZF&ZZ".rKkhbhXg:mO-&33c2%%h!?Od#"l"L/\.F8ck61S\n;:BW4*LOV)cjR-55'pDSaMgETYdHXo<a6Tm1J4;Qq=fcAKcj-DCihUHd41@!A0@6086,(W6rG8r]#%:_C$D#T;DYrZ(_r-.M,J*go]b0XQs*19ar!Iqdpc9LNi[0BPE4ZO6p#\VFG,/L>4&p;EYBS.-aQZFgtiLDm!?M^MB#)s7Tm,;MW1%0?C!MhPl[bC-e%WU<lcXV%YR.US]WhNncImmL!HR#S)RXZ#K.EDbqcEY&<<A_n(3!lR'TZfs#A:7ISf#[!N>i1J6l0BI3%73^I8.%lb"20NeMUTLQ`l=IdpjfGe!D/oaMQF(V5nhep'0QA^k,;pis<%E>Be=_`;]PY)'T]UIRZ1iDN.@%N,cn*%a/<Gdr!43KA>D8*_*X%<$O[k>iKfq7Z)s/ka12Oq/OHm\PHmOYsT`hld.W"d3IscH:th/`)j"W>aA4=W-]`!jM0n(g(P>?nYHFegV724V$9os)^L/q7`XUA%NiG!=4PL_til'm#)+u4klt$I1Ro>kH$MkSBf7c<)ddD>ac"l/l#`1_\dh)nAiC0[Km66(N2O8'u2;/%k+qur<XiXXM4:"I+`dui8%XMl#n]J>f%J4[+U2'rkbam_TmKFa]nB6R>MreC't#T@M*qFKOD423pK!XG>\R,Wpi\OF7D$UW0E#'E2D=L,V>i;ZGD^aM4/qInid%Lt'G_6XUbq&.tn$M5NUo6+Vm%TAtc!^&8j>6n4EVNegYj(E5k4.[2`86n4G\NCXL?#!+qsl_i(CG&:=]Bc4P-a?9ru!f#ZFZsP?Z%DVJ#TiIY[HnV=u8p<-Q*iV5G&8IY?%6fEVG2XXDOKQcI5Tl?F<8<"5hkM$S'A11]i@OT/q?UZQLUcT1&in5I5>o?3U<u5NcGue`:%q#kIk:fsHU]#+.D\kZs/KoP/b'Ii0*@Q8`e.=Q7;LTi'b?Ytt/=,'BZ:]74<SE,k93DJh^GLgul4fG([k`+@8[huc5K_>G\+ERMF%D6%g,Gc4BOI+RZWeE22XD#LlP=WGXbl=V'u'u%u+H<oiRQF;dZh+G6I>cEsGHZ0;-BpVO`q3KV;979S'BWR$"Zdmi*ps![,O6'l\%8'r@D[dnff+M+2!9(f[hr+`AJ(@62^&Rj:`W4s%c!TFE/4"H(VfYOE<NNc"s,9uQ`Q>E6mmsSfk$[npNDm10c2=916-jG3aqtOcu%K&,KSBVc*;/"^5^G/iV(QgoJC)I[i4',>`b)&6T33BIVKPhjBhhgBbWMm-td`=i0[%'R$]GdA^K@U9+3[FLOtYY'E?=:#F<>!;jR%q0Y2qpOdOi,Uu['h2fhd[Es0=A!3$NSbkm,.`qs5rO_0^:8?*4gD"hc-9V!OU$^S]IluPDhQr>9*(Q4V&9ks+&p98c=#<g3;0!cA%*kUSbohBHmg+SjEa*EkRd"Fs@O^el,:J.P3/X#Al_c.<)39!gi,O^%"ne/L+U+gAoFI6M4+SN)Qcsci($q)T-Y(8!cKR(>$Fu*\4%8fl=K#ifKs)066!hs;g^5`@(Z/dOi5C;T2^F@!0R^,o7_Ni!2)Gd4k?`tqGd'MFeVjN1BKFQ)PNj,BiCPEt6gVAmWmSN*&jaS6&!%j:S0O>Y5'WV/q^rECA7Z`R4o]R*hYmK'_XDfV@\_@d0Djf<Icn;8pls9?251N\?hR.$fnj@E'$V(Y$(LCH^6^]&6T9EC\I]Tp-/Y%),E(p;#^]jCckTP>u3(X[&,ZR1gNpTR?WEE8(/bhi>jYAc<D!%r4"-jXV7S-=Ft4tj:iOZRP$"SNi]sS1R]pEQ7hs0]MYEfJdV"f%N/SZL-]l;M/I@=Q)*XKA89`@(%jW)SRP$"S0'6Kf+en4QH77d3mNJ@i`9+@-\n#tq-ohophh82G%i\4Ze0+4Jp8OeNgaGT.J.WBm%D?DS#`V&t#d\E:@XJDDsCFYOe@NgWbotTJj]1Dq2qs&d@MfIWUQh]Ejf_ars`iKUbB&*8kLS[pl&?T(0:Xk62b0:s"O;9.>o-_)K%/noR.rsIKL8DtCH`G,CE;pHSK$K"I<%ODrFdJhH7Om0<12WW].a&T9;fj2q:n)&VZ`!r$pR_*O,]K<QS_*<.W'H;?_@cTCjM1$0b%?$#1fQ`,i1&r.oi?#u?MJ+Bhqgj)X$#eoLTS_GaSR_/?a-:5-iUq5]Kc'=D-h0BftiifmcH7iHHDe.1a\oB@ch=Jh:)\D`V6l'>H%.c&po;>/sI:.C4IRi=AL/p-8bMS7S#OD_S$,#8ncIcLde]q?qsl(c\bDS"r_laVN3g-c^"7k16.U*,h6nO/bb->0t'7;upToL@S'%lTJImT3hD+a8iK4h;B`*6_V@0m6sdW)[[=GA4Lk9rc0Rc`Y/*7p5V_"a1UMm*)hbgTi5:-ZqORspa3"?pEYdZU.KN(i`H:u:VE5E%n@].+m;\[(#Xnp\G6.6!8Kpn@[Rl.?qkf4sSU4uU8LYR@!@e6H>g:Oj/UE5l)uaXRDtMKq,#c/;*XA49O>rI*'t,2)'p7J[6hKY'%_'3mS%=X?:5$I#WdQiQN4,0Du;/a^5;T<]K!4biW8r;`Ce)SVk&&U5jdeW?'N!s8g*QYHMHf$sp0?,dV4ZD.*+((GuL-&R3pb3]2%%<l@-,5dJ51rD$FL:`\4O$go#"l,>$qCqQtE&YX.Gq!RoaIDb;LLJ=Em`=c[i?s?"']tCH#eAnHDV%V"^tPF.gRFAKZ.lHZe/Vi^%gXlRCDniro!"=/M>2ic7UE^ik`XnJs8h#_5k6dOh@magjQ8=^"`2'5JF3W)%mGtjkW'-%&j4fo5(Oa2?H.Eq&*3cV"d4i4,'uUgM%Kl]b;h1mJDM1_1c)[r'G_lj;<[G1mRH+c4%MBtF>*"#=o.`;4NDMkh8*$(BeY.RFH`Y90+o[!u:B5oNf@U(S8#;P2il>Y9-i4)/p%.[<md%(hS(;AahS*?ulcq_l/*f;m75)b1uC*ohR3rb/>$F0;[cF58(Q.;qm7Y*D=.F9*bQpD"GZj6GBR&]t\LPl,/*!E*F;mZDgG%TH!T!BM/mKR-FngDqf&?eIT2g0(/_?:,[;lWuDGEB5='Y"U"_W3[V+[QacW(AS-@b8gYVGfG,jTI_3Jd%Q@/$8mUt+rQ0tuA'n<<%^5$R9Ec^?!LD/[1_SbkhhiGs$BVeU4RLb>S1FB$DPIWd&H?BI/h1c.S:=QmjGbnW.fB8_tZ/fQlYjFOf?Gl2>Ru7PH44_=0iVG@m%FALP)Xa6]]k@QYj=s9SRF-/E,28#'$G_`:di4[\$O@kMS]QRD*%#]mfLo>E2b&E=VmmVFb-Efcd[C0A7Q/5,/4I)(X(CpK5?%c9_%X.@ku]fH=8(S+ni"S6thXm!ks.-AjT<hojE8rrSeV$-T*`KiT<)P8?RX04AKXp&IK-=H,?7$pcea^>E6:*QFtF7.SOC=6s_$#VJ%%M[jUpGt8"2Iu)BW9t@Y]*2Q9c^,Fs2QDC3KrUbHYK68$'6T<]LWk^#3R+E#>KT)VRC!6dgjABUt[T4]68rMAtR=q27;<!a?bb!\$%W4R_p[$YD:JWt)F<dL!L'^'QceNU)`P_-Te6]@@,`%EX!9u'I:*cY2l?(Z>!X4kWYAno#RZ?Hp4(rjLZKhCOXG<]@b`GC5714MY:%bS]-YpGK,:&+(H3F^SIaJ#kPg-0tFHp+/_*6'Nd,Z^]kag.VRb$u<6REH3q1;4M1GLj+E8hI/@/A"`-t[#l=#oZlAK5<f;+7HdmR%*!)&1hp7qgj<;!.7JlYH]'s/$ibpJE*(Y5jFimkb)%j#J^c9"ZY]k_CWk</e`j[=TA?p8==tn&Y#N='I;(&+cd)K?^Kl>O<&-s\1%7hJ0SVT'=ml!@<,X#rb)!leSn7>_^qR>ECEqHi2a]Qcgo'^!0`Gh>L^egj6?/2!59%E2dW0%3ZKB&tdJ,PSV#:l>(cKgUjQ<&a(K%o?.\BJ4X5N?)'/t'VHP'i#"_G2P)r:0Oj-(R6N]/'O]?+^t9UY_hq!-UL)krW5MP`8RhaQcfn.B"dkOG6$$W..);W5J-g&QLa^'7%0n;!ZDp_F4Rfj[[X1XeiOZeT)^k4jj.:4VRa$abj]9Fu:,`;+sb"!`$c6'cbcZ<IA+1d[ijF6/E?cn_T$TJ![I,;3Zrlh3dY$(+P%?-3t^.4(gS&YV9rCuWcq8p@IG]!J)b^"6$o;>seuL-?R!F0AsCk/E^dkJ[,k75f"+oR0?Dj#J&.dCk"6B1%[??GG].rDLR8NXuR1%&<f*']m`6S429=lF,S]g2@ToIl8MB^=8La1iK7C0me)LPeSjOG/*X`rU\QL*hWksuFba`M_nCNHqt60?:lW6A055gqB_VA6`e,pR%-BOFH\CZcHmKH=,;>OC`Hi9[c1+Xnl9]>F3<kecdr^?MW7F--KG<s:*l^.N5^6)p^6Z;W:l9;r3;dSsAI%uWc?4*%TOXjH]me)L)%QK,L,0024LGi2*,f.VGKJU!B@1r?qT5#St0oo&/Q@AP==?GG].rIQ8Kdbj@,XU`?>V2Zk8PKoG'MgG`DeM$UJ&%U:F=q(bMO)Ki$%r;oSoN9gH7p\I=F&p#.%id:WuDtT#jj%C3_d#>Qd&'M44h!5c)X'[3GAf-9[l^'@VD/<)#iiRZ$j]L<OI\UW;8al=FEZa3&p\I>9%lBgp&^0ueXpHH<"n+Cagi]ZEW3&2fY]m`8mZrAF<,eDS\g7ZIK>*%WK^Z\o#@]\2B_=3Srq?](sO*%R4W`,CA^=U[ENp'Wl)ZDq7%1u>=TqtNVkL8VNWNOn;1h<Pm:cDDOqkY@D*n+B=oG5CFsqF1:hgimcJJ$33Up_^KJ!bS^2me)JrgW@b"dI6ad2VYp?EnGa;Jgcq(%-Y/*]r=[hL,MqaQB_UH+p\O\"6eAGh:+[^IlfWA+i2qIFC%ES*lPCQQRu&qE'Ai$k]j`3_CnuFVgj"+8P=+XiSpUF1(DgOU#>0BI%?hCILjP6?Sn+C0="UDu/2=^<OV%a"YL[3=/J].&L-TT+eII#.%U*<>??c-Cnn,;u+"p?Q)pkd@NqlnZ'\q8/&.N>L)eiepS(-7s>%;Xp]"31YH\Z:4Nb]q3Z%bFrW]2n*aI3$f:m5>74Dii-rs#O=GTBssQ_52UH>[J.+67hfapfg!dFB9tgFB$+IlC&@S-2#6fM2KH9d%(DZmpgmkZN^2)1&7pdY?f>lF$W>DpSl_&]0fIQT7qYlfS=?cO?hfq.E0Rga,2%TA`MqR6rWLp"IXnmD(lsqc5s&a0@??VbVZgFq$%o./_QC`A/?T8+@A;sN_8OoKR1ZSV@S2L2'?DO\hZCN3nJqYAh/7BWk6^R8#,^Fg:&eX9.2?J[2*oj?%WdZuV9dd''MZb=*G'9/@X%jLt*5f:Qr@SP[,.Ksfpgc[r`H:U%(4ho/q%[KDl@fos7Q^96\JQ0\AR]Cc#r$Y&\6lgtS?-i*]hkN>L-qn#/4_W3u,*DH3Rl;TCA%V/N]"RHF&#`V%p\<4c4"rA(KgYMYPGQeVteP4#X6d+nA)=$)*6C'SSqPF*lNcd)+0<:^9i*I$9GHe1'$:t(FTgp9WOa^hOgm^GSn%/Vk&*7_\G!]rj:Inb&<8]<.8ij08)0Yur'JmVWg;0.V0lo&I7RF&TbBA8AAe[4X(M1\oJ-OaBFV>^WecaT\->o"p.g_2MIiRk+BH%*c>!BZa8OBmJZtYYY_sAgkK17\]:fR"RRfSUOHL`l=%k-.Lp'!0>bVWfuQUq0Z/@]Ze0J\BO\EtUH+CqIZ_G!l(Z5+7JqsRZ'ue\%X:uLR]i_He#8Se4>?[sXk.g5ggH.Lfilp.E-I37ZRhK/^K8/u,6%#rPnEdei&msF`:$4rBI*o(/$FRslX0(q/`"sE=MeV@\:Fu+r%UA3_JHZ<@+nGS+4p=,rB;o4d3]i8)']RM=C';;pYXoLHnM&HK.o%ke;;A&F+"?eA8!Zpe]1#Dr%VrHob^OWZKNUZ0%6rNIL:GVck%J]CE;S>&$IDO_l!Kt<P[WPTYB]W3(.#H3rG]L"-^3\'&ke?YoS/'[t%?^3RFIT12fPEoTnX<15f@SM]*'KqYka0%nNSeTWilat9[%?gP>AM`&f3Q7Jg'l'9<3S%7-&SX%nn@5b?To$.)\rF,,+:RQRDHtWCuVK*GBH?-KR8HAA]e,H't%N:.[$_Jj7KF@m#KZoQcNJWQ>%r!SYeFIrC[?`Vp8h-;CQhlAj6QTA]-%T!203b2C1it#o#3(M-W`0Q@.d$heS:t_[JnuFKF=ef9nd81g!SkoUR)skPE`eMXDm^2(I%h)MUUI_8/YGg*[(WYQPSe'"r^RIg8i:&F;cg>0@<61%eF1$r-c;"dsZXrQ42!CPeW&oMakHf9,a8?.47i)Ra18F9TZ@=1$m`qAM<%X84@(5MKH!\C=,tQdV["?#]*7diN5f#dY5nEr#.%1L'`Z51hI5[<cdKJ[&L`8VOJnC$E<KG_QW4elQqBk!;>+$EhR5"Z!s;QhP1_%I7t?4mh<ajV"^_=6GN6lnRZ2:#rbR`?7fS=.n\1NE,[V-i[-c?0-F-^HQ<7IU=60P#i\1&Zi\h?@)G\>GF6$c?NC,CG1!X(Q>o#Y%gN`$V`Gl2YZPRtpYik[P?Bj0)NmL-kDQWLR037XLMXpTj()1.NSKM@K^/L9gV`g^H*h:sF&t`'EGI8Zh9LlD+[J-J<aI(deRqM+M%>ep:GI9qY?J2?2(M,_7?>mBun&:Ko^gR3HNnY=U0Jo0gA-l]F<mb=iR<^cC?l9@Re6QNEEWklNr`QH!;boL-F\V94`-@D&!Mb<r0%4O1&M0'=!'mWW\E`L2qF_N0OfG^Gl`.]Mb'nWI*=\D5BSom2P,`SBJ^Yf-cY@VWY#3OZ?r'/)L%TQXQ>En&&CfP@isCHU032VVTX%a3BO1PH3-bb4"$KcAf)53rPY@5_Gq?E1$T^X),baHtUj=RR!lI:hf%)52AU!?%-X6[X2*KLW/Z&da@CGId*r69iZ]Akau8-X.R"n%WCei>FqlF6G!1[^#Gq9E[,Eo`P1KQ+qJ3Z(\ZAi3:T36u&"_pX)*+G-m2dbI<:a:@^dYII4@@CNTZ9)5Zsg$f&IbMH.8,j#eTUcP%Gk3POY?,lF0a4Orc*qkrRT[D`\s;H6q9>2Z[te_WjKVe^[FTe!5]fbA[FEB"K1PthH#3HW@D:mq>`hBZOF@H?D!lc#K/2^&_U\$a%QC_@<5M9;E2;cS!Za2l2gW/dRk#\NaWpY8KpZp@q>c-):<ddJipLHNYj\.tp/q&c0dui-LP!>Jn)p:I%&[VI"Sb&6*W>^dV3DIt.%%8Y8_pbn>s9i'4,NKs0NEGfZA/bpVi6rQ';N6]aCY3$M7])*U>pVCCs6SFaO+?WG@MfY@Yda"0qF%b*4I3tSUHZ((dgAZ("ck9mH%!2QJs(4F?AmMY;gpCe#0;8g[I'D;@DhV(a'@;qO54W6h/M$Nq)&gj]r,KhugDGOeqP;X3o%;q*5^59%(rjABmn%0FEP69NtK\=<Y%3=1)sd?\mU+W_S&X="SE85i,DMl32bZ-GR_V.H#sCm='k6@80K9MF_.bs`O%Ai1C"Q"PiQ3OI&F=Y+N&NQ>UChN-7>d`</4b]1Z@%2s0>H#R7Ap$^-*8\#[Ep@TV874o[LC=#Uoeh9obFGm;rIK0*VR4W\M?3pWruH?W.THL'gEWqtO252%R]##jX(6fk[m:[77gHg9[g%Ejn-@^%2-5^6m$/$X3!cRG!tbo(^8X@9uBM/62du-eKkkfU/5rf,!5Hhb%Mt5C4nT]D$k[T6iB/[SQU4NQ+YcG5X2d7ShJGqB4\+%X+5qt+NmmDEO@iAbu7P3O8-;?*^IZIgtuRP!mNB<l9tZ6Slms>V*C5[Ts4A,l,aHg4*bmYpZ!Ne%YH9S.hT&?;^O`7ig<!&j1PeV%k3cYiDPB;m>'99R:.t&Oe/n'0Q:b*0p<0nlW^gnDMuF8nF!dO9:.R$Fs.gs$W]-"'>Y.!9C[,tj`/]nOHdM[W&TFbb);,7VaiD^W%plNg-2UL#M]TX8DJacMB*eD5\O2.pRGVtiVNXoq_Go3%7A$q7BMTJ6`\@T7.=@G$eeioOI:A6]*K8mRm[XMOJe'5i\HBd^<e",cE%Fn3M5rlG##>Q@#n!X.qik,Lr,-CnL5X#ZA&-G,O8q.$:M>:l3urTL621U6q'kEi]HNU2:W-$>+-+pl_hni1-,ECo27`ZUtHaY1&g%XB(!e+Dpd%HW/JLlIOP?#EgS%(N)4(?P<&(-n5p;)+cj'VJ#EmIZ/0Kd$gr*S@m1')I/\XWo5gGF$o$@#WrmPg^"r/)I=Z0YnY)k%aMAV-@mS"JaMC==O'RV>a5#EF1#QO66iiY2@;b%MFu-VSdd"B^LR2:kSB3@srOr@EhBAtiXFPB\-o^nqbCTn_)WX8njHauV/+3<S%VsD[VlB(["AoE$XEg+V+gJ9Q*LEpJO-/-\+q#JtrLUC*:[#rDgV[.#slMX7\i-:1tY[<-*7Ad(Ked":DgL&I.L\?e*icq]G_fY_E%/LQ9TYL05c+8!ARQr!TFr\67*B"*QeO0uU5qUpUHM+s/E4n3BDg+#CS$J>Y'5L*nR/+:$<\YPDth\3N(qJQ3V)D%CNeeeg(ZcY)K%606A(CIZK*)U6+Z*8\T2J,[)@Rm)OS0$A@kBPJ8lj(/.tFE[Z\5,"6pJ(5W]kh!s$n](r2ct(p$p@DdC/(G_*>4_DbX789fkf1A6%3=GM/DXEJOUhY8lK#BacdGPOX4RRC*+6H@B]\jt/K,p#b*Ti\Qg@;]-i@^Tag@9!EkKe<6me3@*psO7H+8^Pnj)MQG*g/bAn[R>i%"$a5SVi(F\A&5L$MXQ*D4/e[_qlj^;\<]Kq_46FKjK8d^@F)Q0l0J>t)SJ3Gg!4:oa"=B`em=_Qr&cQ3KkJia]q9[!<@VWWRWs`.%:7_;<^(4<XO*PXUhbV:"JdshiXm?BH^hL?eX&$bs4a5`H6`nrjd2b?OGO"$/e=@Ob`$m-e"sP4Zi6?1Na)Cob7[a-)Rh0`s.rX7Y%9#([F<79:9f/ue+Qrnlu^O-^YMpFY?2WNPOS4e7l2h0+30O(1dGjjI.LYqN`ECWPNcI/Dunp06+l%b8_Q.GaS+?BNVY2#?ac16=o%b]Se#ZCS^2^:FnGjkK.NeB+iJR*`9LB>7Y#'fq:_h`7Vl7nBWPDl23t_Ugj%P8kN:GC5I:dU>Pr<!=K,=*'F]#[3?(!O2A2:@,r$%j:Dr'qkjo1DE/#"/M#^;7h-+nf1[cN&qQ63h>Auh91dL_3-(-h\aSm>U=JDE/r:kU*;%g[]O.8bF%EN`=.&c2mbn7'?JP9;YuB!T%':VK6PR,F@/FpXKd6STkbRjSBYZ>([#^:=F,q_OB78u[,!jGrZ(.#)98lLDP!.;>4HT[C=8NJ%<$t<uq4V#>4dYu816T'Ld66.b]%0uXb_"/J\#80!HHT2DNQO5_Q](!W#"@^/AGML69s\g,8h/7(hipi<;W7'7M)_T[mb.2J&1,A&Z315^c%+l_E3JobLJGA\s][%[4c%&bC9d&HZ;L_q;;c.oBN*.tVhR"<H.9+Cj;1KYs/)G4kLL\M^PWc8We3:TC%P*F,f94S]W\=@B4P&kG4EZ,e+UGUt;9c\XbBgk_Rq%.eu&bq25f/CoCs%4>p_+_K[UC#JstW//$1J\XDaM%uQ"f^NUJJmu`"7N1?+Fo:.=pio$Aik7bqNBH0FCA/l18,=hCG4J.b2"d__q%#rD/MYVS$m\XL:&7;A8O(G.CXG_*g(9SnmXonNbfZ?+f0EF>\MH1CQM*?1>%aq"Q9!7hHE.cNrXZt5R&qV?hG`bi4E!S@*^jpN`s%m03?r4:>?Op(Df/f4Yc2cBebeWbFtD6?;M4Gd2C4Nk`C)K6NQm>$DPE$'A``PpQDrN-JRa.In;?eB2Q`^$nE/&\mGYg,r.GBt%)F%'OD&&Ds\6hS`c,[\A]%s0[>/tj,bKF&8"5bhDbQ-i<KYk7@#nCI!U*E!3a;$7:O"p:RTD5#8[n3,eiMgBap$)+%>NfOe4RUTYl6"%']R.n/f*js?(JoBR;``hl#s<+Q8IfX1EhWURG6A!EL[(Xj]:>_^3';NCVRHiP<7mrE+Fd:!l4T!5\4ME]=ociP_LjSa8VN[9j&PX%:GoWLY-$=(l1`\SmJ>o]U=[\$`+)QlV/l<Y^W?OQmo@BGB:@2glA"QAnGX[QW)S7G^f(&4AF[`*;;"`hF7;hGc6:SbiZPE7r)0(m%)C_DhnnFc;CKf`8Eui>O?"@Alf95_u#Qfb88t>\(CK6=A;]_t];fj^@r77FS9LE'FBq=C%MtYs)k)+78[309UHCUg%h3&!4&(25B%N7tjl=5]@DdrS#EeiWMDob5R945'G+M"qNe2+Z0tYk_.G]XXtPo$mnZY$S:P>ZeX?O^)ah7FrBMamLMcHE9?T&])tafYr`l!m?2V%%iRtBBEhjcgP<7,U%`J&K%\%]i["F6/n&nAM4\N^bUh(h0ep#FKY:h;KW`_\\tFW<c!urp;'_?Cgim^!LYD^<hn8Up(g]ID3Ui4k%W#T@+hL^CL*=Z:EdKrE2U/?bhJ<+_dU0Vt5PY3uJ&L%utG[N7h+j4rRh$<_2$:Gn--FDMgT=*%eGs,?H;<0##nPo[BE`eti)5>00%1ph;h8A_)m'S%HZ*0(h[li3UMN+lEaf$Z-+><M_!21%j,pXf._Ftp=d.@,-fq7Q[SWV;k+ZfZ`Ae^!d\B<sbB/n^*=e&osrV,s/4%SX3q(?O3MnRXu'&9Mj5I-Q^Xng(-GZ5kUJWos$Z*ZIYuRP-3BL]*7?Hm55kRM%lnBooE)c0=:NJrW_*Y$FtlZj\ps@WofVC!sN;U%_"3lqYO&[eH+gf]=RVVA<Tupl?Z`p;qV"k^Z$X!m\S(ZgXmOZ2KmMoc];YC?YGLN,rT^Ju<a'jim^L+HV>Q\knT]:[.+C'VNbZql%$YX632c[8C,gH^mmD==.6aAKL^"<nU8E[`7Hf4(nrdT(KhkptB+UGp);Xo!qPaokUUGHRkpMh4/:![l($F7j,iGTlBEeM$tpo$^n%E%#(B9qfUKR@MkoNXRn];2Y[W+##LA/TAZ/)hN#U_::^sbTj/W%'u!(qKIrGo*,*IR68?k>o@./Y19;X?0d8_D'9'tF/F4`h0E/H%YsTNaAOdD17!5F#0M0s`WhB_(1^NI@F@8l7TH<a'o--8hUA/gZa\VdqF6M589W,(lHY)$i;,CU_2,s;87DhR@Y5L=_,0)UWd:)8/%Z:JCgDC"rA?5@ke8X\8a?Y;kc]Vr^#%JMmUJXf*tGjpu2b/1'=k\,qOGDe)sYUPW]OCPZmW>L92JlCniAX1*F,]CeoZfkIXB"q[I%_%P'N[X[dNUITTdpum?gqY].FMKuH`EDV-IaP5^2<hUlldFFgD3roCXOCCjDc@KDG(W=PgF@X_n5KdCMS&N3kFhuY:<Hb`DG68rA%JAZZZMmX#.E<1!G@%7t5VIYEX<77frE-5o!74#X9JnO//MFr1PKe32!;cM2F.JuHRTMq"ANRrApVH7JT*Po/J=akED0B:Q=8nl.F%J@k<PiBc1f=N'3Gbu;DEASRte/2b`,=/rc8L/THHei1%i;Ia@rZddX"W7UiWP\mB[Tbfiq>[AJ<S-%P[SSabTr0+5umTMsLg?m%G%3k]PYUQ2N1_FY[,bX7m)#DX!ag0O_E`@T<qlbgM,GNoJQenI2*1l/:ddSmL''Y_Ef.nY#1Ka[-T^1G$4p*e+3E5ctSZbf-IIY64]%Jl]D"AXO6m.)?4s+;!M/V`lgZi0@A5KZ`u24^7/=fSCdQ=VF+',0,3>o2>]&2C`&SELCaRg.T39.k[*J\ft'HYgSr]7kOJ\bmIFg%/$o>Y'Nr6,!oNQ)A.eE)EPS#@?kEdG7RTKBI*id.Cq+(.V'9KtW15Asg5Ma2#J@;i>r/8Z9][_='6ZA`V_>ne^uAVGfZ"Uu3k?-j%LD18H1X>!Y&nZ,<Ujt<Kl#r$)V9gDQE"EDmLXIai'(eZCIY^EG;gE>T@m@7:;Q?u6:k1*5.?0ug`7S0k=96De+'ec$XhBUI@`<Va%F/l@F*7LGN:W6=C0aWI8[>OQXEH+C`'Z1bu=Vc96MG9"#(aKe#6Eq@CM/S+_9hMig-E7rY8tD[hb%""5Hr5mD@2nn=g-K;$'[^.:%<EBdTW)?,g'P?EF/0]'>B.=E%Hq*g=;&GE?'LB:OjG+@Q8iiprcH+Y^7L%OXT6TP^9=H4pm+qLu9?[HT*nKbG=/k_4e8/(Lo^ZK`%H.[RK`90+b-)S<R)n$Q>-)YXN:Z)m>B:(nrEX(DUK+BLY[]aa[+b$4."D%=ka1HeaSFNUSXfais^B`E4pRA@H"Y(_]3J1.Q;9:nT%XR:q#X=g*fc6968_Q!lHVsq:k9<`ItbgP"dRr^:L*&V1!-_0d<&&n-MOjW6k4WTFCa)6$d-$"O:ZX@l'O`e?S@ir;POEbR&Vu+,*%p5]B?jf'a4-i[:h2!-5"hgs2_FEPs/5Uepj(/X5VkNsLa5`:')^6.(tY4Vt=8P!Z<A^4D$#]j$;YQ0BRV0`NkkEp54n[%4/93QF7%0"=;@gt>u'm&r%3YOmeHF7$2BhS%.]"iflW*:s3dE6m&ZB.miaqrNGPhtqIl>Y!RUK<bH_5aN%cGDK0":-?thYL^6NIsp50P7n(6%F,^G$96o']!1b/NU-)\!6Aa:t]X_!eB^M#DI?fTV'3b+ignho*f:jqiETQ;ko0O,9DWP_\r0aSk5opX(ZL!<0cN0Y`cO-eCs5%ac%5BfOOb,:MGNNOUY[m6k+WXWU/o1l,B00W$8ClTuXGP,]dijj/OFurWL>2&nrqXgHJ3Bu%sZP^^hWhJURJrMn$'3%?F:ZY*INo:,k%d.:0lq(\J6)L?i^/GhLVW-80dH=d?2]-GK0[J#Ng4IF7R;9ETonD/d,qEqghqVL(Ir6t"Dj=L*[U&XUrg0%R`ZAPf[#9?_:T/*`4%DcWIQmN]^8TigRhWpe8dpJ/?Jq^8ua8XB\Zk<%5\EgGd75^?G:ZNqN7!TceSk$UpS!FbbbOg6;*GPQIF$[j%,Uk3$u[/,iB7$0bQ%r]q(,kf7V+oQO?%Z3T'P4":%.^aC#QPR<:b=]sQY$ArPtg!>UnW<GjN%%am\U`">A=)A&f**ANX$7KgWo*\Q@Je0ar,E'o*nY]fh%:Wp2PHPm"V/!uKVMZ<RgJl//'//Y,m9JIE(dER8\aB@?M$^.S1J;R8F9A9uY_?"4>/UqK68b8k-km*G#;I?@IW(27.[K>tl9RU9]%#T*-^1c<O3Mj"pp*<Ihom7>n2rrnAX!@<2,'ZhigZD*.8H(%QfYNAk.LAcW8;([Z1:iobZ1kjQ>YI,+$>sBIpB2Ek1Ko][Qa%(,G%>PeH'r=$p702\O0+=dNiXWIQA)2'kAd>\3*i[e05/?KYC8`K9u_tZ$l4Fb%RCH4$HnktO(rrP[g!(m2.R+#E:39l0#!bMqr#H2LJ%C,qKVB,4lDLgjGab":'hJn/Phe>4TGIp#.b!Ik<Ae2*lH-,.KF58Z7rXY#$:6W<)BU!jN#mk\&NnSqf1]raQtq>iT@K1g=7GlN*%%]G9)UoWt`O8^I`adPrR[jB@+O(j>?G;u#teb52U3>s++uiN9O'Lg<pDqeQ-=RUKleK7si@<ZqD+.0!q"l2(V4B;"m;P#Sub.Y],W%?'a"2Q/s&c]Rk[mj!4pGpaU+aiR[aipDM&-:6JG-YM*"gG("jcT0[;7PCtE5e[C(69@'%H&RXGE"HJ-WYuVG8_fFl]5c*p.RQc@@%X.Ym#4,('>V%"Z-"\aMaN$,7D2b17WXg_`8nXm_?dE/Us6_oHB0Q]\,lEX`X/Xai$:7>4fD3YMS]-*ja5W2'=e?!Ih"k/PJS>%OF%L/ToD[2;dmPjjX)b^s]a-;$$)GK9br((=?OE/J4i"BDpIP^p>E1+`h[9*V1p"^+c8PfkK-QAcJ.8MPo%]:`:4=+I#:MM..7$Q#on%W%,`nWbq#\_,LuQXrtS0#^Ls+$4:[=JuGP\2K":]+C$)/:c6%N&HnpQk-VFZN%</[,`<:,d7mN)NlD,7AZLuN'@>YkEJe1>(.Q-G%'T8]YaZoolVFq7^JRGVp,Xp:(Jh3VPJ[T6lc"LnX#&^W@)]EUc/LuJUMIm/$Le=U7N4(PPiMPh7#Acc:E!dY5:n(u^rMWLcQ$+Ij%5W;B,VUuS17CPfhg8Zdc'\0QIS73TFUi!FiST"Sn"@N9]nq=*u$6qN=0$BPl$tk4VcuGMJW<Vbn'ig2k1s%GXIbq3"OZ3<2OgA%E%=HnDGR6#5NA0@lE.Akd3Ca,ra3)-iTcVU(5lNeM87QgkP&%j3`>``Ep(<N>O-71rLdk!r*BsN`&J.s3=:l;'"h\)cY`Xs1A>EpWW%ic5.!iBhOAU1uXk%:dqZU0>.Mi)lGLCG_APHc\0VNF8DgS4kb5/;(g=-LPe/noUG<l)I'r;E#1VEVj9@j!b,V2C)MNKa*O5.tfE0%8]ggC>f!/\7=E6m;;rh]8:dd8W+p)p_-aVs68(us$'_MPm5B'Me10^OM0!C.6;qESoU'+Q)G^AnA:>G_-0@N<=2sTY8saOU,W&A$%KJo4,#b3C!":b`;P"SXt68(t9$,KQ502,E=PGY'?6ZQ$IVAg.>:f1Fff-A;.@%'g0*jV)'-8P3)>A8a_P)cLO]OrtU;_<]B..0]$%9>r#]VI@S5h]Q>MBt=a/92&7qf2MZmdL8Ju#c):*35md@*2+(k`-Dn]/#6A`1(k^dL]\Jb+>'k.,m6KhC#FSV$LLSUGA#>MPn^%:%(?&^j#uZj/Ym)]_RYW(XZ73sHP"^up<DNt]+rN<VV9*C]5am_5_$q1.1eFR^e5TF7(<_s,ciU(s'Zn^m!D%mEX;JIBCk\0"_0h$M%cGh]7.AVG*#u#Oq1nG+ZO@`@r<MS@o1H8*;(t]N4F[&IFA4^d=+OOaUp17s(9%ab)B7ue<AJ+XDA/HpaEgW,+lYN%a0Y1!aQ"H5/%0hdFCJV;Q7Q9s4(a^Wekb<uW"'M0O.J`^NA*?M]jV]q;I[+@T+6&I-B":e.O.S`9-L<SP<UhCH;_bpf0B7P=8;J_1&!SKd,'NpbZ%bQoa/NAHr&>4*X>rM+m:SuN](5WXum7_W:cb]Qp[F/+R^#>3B<,"2bD:]cer7-()i8AP^7-=DR_aeD[-!)aMh<+d\\_,CW0a[DV^%b>K_i#&&BD"]\)k$q7%4[UP[>.1O@MP]>NRNDX3oV^T,C,a8H!"@>+_+Lj:];Tc9kdQjnki"g(-/db[Ui5cVX&]%#5dT'5iV/WMt%JnO$VbbeJj>8!,OVJ</`WW=<cVN[-S8UArH_;M<m*93*+e`:JuV`P?gD_7K6R*m>W1d'oC1bD9':=0J$(Nc#uLcQoa6s$^WdUHBJ%KuC?Q'OA\((_V@4%,hnbKdpjbd=Z8b@$Qau92hMFW53.6->[F*M8E.UnN\lkKqi>t8V>H.RJ+(LB++m!$A7PNVEmePUZk/kb*&lq%\1NSL&`m7d_E?#@_R05u5UiR-&P?2.U0tZ-<Cp?;(bd8_bts:0ip$pt@hae$'$EZZe4:?Z_$kqbf<D\mJ=8kFU/5iD:q6Q^.jHB=%HSdctK"B$%d#=p('T=;gPU2O%!=_lhZppu>R2V2oMFrT(:0LDg(RPUhBV8JM,@LgTP8ISg:2C-h;CS-00nnH!_ANs$Z;dRL,;k5h%*2EYg'rK45OB/7;1f_!*&0ulG/-Z[EIKg#%<XbY%A;FidOQMpEMLg^@U(^Ed%8r8tX)g?s0f140R%4FQWi^7s%2'p$CE:>e6aJG_%7TDi4%FW>A_TXi-d3N#ZG++NP(hu0m=_a%-kb>$\#frIX;M-5^P@\X26/.JjC2ch*dtCq?Xu'mm!@3ikZ=Bk"Jr0dX2:N`LCDqeu%L+0%"(,s_s::d0?9+=d@`R"`\NDS68\YY$Z<5Wl124hT82'Ir_C8;tDk*?p]BJu?,<2VNp9:!-``)n4KLg+W(-'G86Q5V#/"-iK[%YcGbQ2*u4K((E,ldk&]%L)QkT\uKa;c-O(TTr&Y\*GJKVJ[t_X8AcpdL&IPjc,N*Z)_r`S$ei'Y%2m]XEJgc2A6.'!N?AM`.#G`J%<<H,-bGLR2BSqm\R<04].0'So%o^]*3*;B#][@@jE!io&W4aKe"W,U'c(K\UKt]F,9JTVJHQY_0"IfZp"=C"6(1og4&Cq1_9;i>"%*FLd'*C1$W$dIHdQV:Ko1h2`X:6f@]6E#L;E5eB+MD//B_]=T4.@[\\bqLRd0kjK'`R=n+PjkuPj$Dnr;.^TThO'&"j1Y^VJjQkB%;^.S?F-J,=cmD2IKG;jT_gjbfaTXLX,alujOJ:Hp7Wi'S\3l^a;S!c)YVf%XR66)hi!FWP->^WL/F_HZ30uoY-9SV"!n*.O^sd-]%L_5rM8r[)CODt5]'JpZC6\tV+;%0$_kc>\kl->!iI]@H$;1kgH)B(JHFj`K^X]+Tu),DLoF\@7_9epYp/qAm"bJ6H-V1BC,'0iXe%B#p90+=3M5406N>d'bN3UI(@Y!J@rn5]>)Ui%V*G!V&dZ-(%c40NX>aU2WXL,;(iR;+N=8r6bmM;b7<sWLX_)LD1odSI8R=-CngE%%B!$Z$NaWnker"M8i8eolhe3:aB$pg"L9\$D,;/4jF*bQ.OOYVUkfAV.uc$OOQI)\/"ju;6X=R;$7M\e2YAe&"]R4-VO#(6:e3m(%<TXW:UmQlc$j;)J1V.CDr=]gZ_;M8a:'0$2GnO+@Tk"NA.&qY]!h.;<asWj!b:6RW+[Ih6R4Fo",$apXdN%?^d]h]l.%a<OG.0KS%-_tFeC'_s0,akrK1Z]9[KNlce:V^0YhAJiZ,c$\_Y'`PC;MT(kHjV;rq;b+@q8<FS&m%8:D:fK\asY2cn0h:#+bbp_WdNfL\5Z8J%&djq<<;"2S7j<\gSqPmR+f_,q-5gWYJEht_.nM3l4oMGiEa.'Zf?nD3ob>goeJ$@Vfeg5(M<kcBokRh*KG9,RO\GFI22TQHNp[3&%RdpDYpNF0Wm7<\m'C9qq2^JK&0DYY2&f-I[Zm7m<20UIVam)>6ZO1F_+Pn0[(L]DF[.EWALGVb;?f]<l^GThW%bor]3,B,KPCE5e%Xr*be\#Bto5MbfSKVu=tGUd5@SeLFE-Y72$N"d*lKZ%]?[QKDT8OLV-H4qL24m^HCOD/p10X3\GZURsqA9T5m/34;r-Qs(^hJ%4$%DCMJtG_-PA(W2Gmf4^[04<`I^UgSE[P*7lIaRG_81cuL"L*npC-j!'h.*^GF%8UpuYti3#&8Q<RL*p`qE`@c@5u7p+n:V(+ln#sC%A9jZE/Pj6<RXsQ,l,)-)/^LirEgNXDo,s(GQ6!PYj&9K^m0n#N\g(DKG=T#dULV59%)K3-,QEmSeqUnrUrVkm]%bAl4Pa=>n:\20%-_.q,VWU?H>0gs>9ACR_[rQbrT>\YhA)iQh=!gp#p8,/8Tfj&_XqN$3AQ-HI/giA$S*e;Y<ACg6QC4Z4$.4p)[G[I3Gj8[];2m;a%..`D%eq`&V.o_a=N6sq_%^L^311[1RCs0/cf,&f<rQ)Z3`%s_4CJHd\:jh2^I,_<ce.H?CoGma9]I?n0Ke2pKp.bn`QuZkLX;K`P%VFtVISB`h5nJ1^jR8=o@9*$c%3VcoMG6qSlA(pk]@Nt!bQ8JuiE61&nU.[;a&e\dY&/2u0:Re26KPJKD5o(rJo=9[1WQPt7S4l"]%!fK=&PP,-rXe(M#'DX-MKa(7[^&i9taKhO0/%r#n=,^=[XUidV8p">i[4$]o3ooJaF9@0K3ch#M)Jk`1*3Z-MO&^EkkE3s=)i'JH%PTcK$k3BK,=p[agSCX=I.Q)7XhL05(HWrd.UF@ZJ"5E]bhnBE((dP8t]XucPDT+a-WboJCK4nCjMma9pR+R7K@5h]KM/>u?)F1/.%fSP:"5!OmpkX03h.V8_J6pc9`X_4"[KZF]BFs:@sj?*mj[Urq9n?<TS1/12kM60</jWk=KZ5!\-D7X.+'(t$3!jWOIY[2E2VM-Ia%Be(ZLfSY>n?i78G.5.:%]<+V[GN/@)>7n_&`cbPuN3\Gl<[=Kj'Xb'aijEd[MEm&kVW%`iV)XQS-j&nX%muJ:P(h=<'N'7^AK$H!%(p'3]+sG'c[n9=__U(6RV23:c)FuDJ(3[pU;C"!JmL"TC8;JZ9YnYg89@IX+\PSRcpn=s$.2!DJ%F\2`R*1'g-4/>5.*>@3`!'j9%(lEkq7!*)s'aY_H/7L+Bk)3*A,_YZgdqqO-$sR^\h,YesgK-(-#cKU`D(5bbL;\h$W>N2gBGcY+-IZ'Z@:Cc#-9HEf/-_Ig_+nL&%MQ9$DK46AEQDt>A=:>arZ5!IH@8WGM/7%A3%,D3RQJr%EV5Q)Q'TnFm@g&)AapKk=9+b(]?6PUY.!k'RV2/m%O#8IWFG`7=V$X*,%MX(D2iY;-o'E]\@>c4D8?n/]H/]G-h.N`4E8JY>,Q/%7X$'BIGe*^V"eM,88XW%9q=UZ%69aD'Vnt]D.9J"%CGn51qZ[GT)#es+%%D-@6Z\_(QP#iRjK)b9.SPSG?i/OSC=!(0C;U1=@tYVn(do2fdG/3C%P6>6^BA;bfG<h#5sE+`W=?Sh$SnPSXCRo$YU:g=((@5sfc%Ka4TH&J&1\2+)pB<T?]TRRuMl8i5W@![E_\FtHtP*p`r]-#$TkqC@`2iMM7ZG\P@hSCE$Zj8n:1(/mD<+:_QZmMG0!c=ZREI@4Kb%NQ:s<Ln"t#;)AH8XD[I$+\H^";8@de7=Rb',7bJ]I]ibC4n`#YqKM&J*n7/SI9,'`j4UpoJ5/YsOi$>eQDme*-TEL$Ck7MfI0j%a%g7nh`+WlYb"np2bA"RL[2ZKUrGVkA_.#LDT[ZQNM3NOc9D4bR=%F:i)g9d2+);OCo9TgG>,a8nm(PG%qi_G/Z#/d^%LQ/2U64h*q%*L!.!S2_P21!/7O.*!SV/r8L'a!>jEaaJPj=^a9:d='[C4<0P%ff\:*a(,23U-&jCq3(=jU[aXJL:@p%(GLqS`Hb/sI>#!-8b@YA%/2&JZ3dWTLdtNssiERRg(aQbq+N+^cofYX8E97e47q2qeaKshg&5L8c.Jg+1X[GQbnod=s*gl%Ek0A_7^.aP&^/u"),2gI3qGIEC%"3HoH0.pi#].7'do+NJ%3FQc$UhQA)8"8PempM\"&pp++FWOdD5><WV3[_kDi2:]m#WO:!S?UEXVm+GQWDuu-Q;qKdVKK$qZ-EXV%iGP2"+@a_^cAB,WK%N+3^g^Dil[2<9>3?53ei@0L#7\I0Vn@7*FR,G.Dd6>o3J82alIIs476?KM!YB-%D=c]61s7',jPmPi("*Q_%$$FF])lT!0R8Z,jY4L@&8(l12[7<,!dBb]+b8_7q-#(Pm0Su\@MZG]E.883\,orO7bt3Z?.a+?4'Pa#$q:]h&H:+JZ8^D]hJNZbi%.67#;DjoDdo512E6/Jib4>/?!cHFe3B>[XlMIRrB/2Z*.Eh#!,;1qmUHq0EF+M!X=AiN2X@0j/kWU19*:'8s#;JOb_F]-*h`<2<X%)reL^Q4_X*D<=*%lZi9sFp'KtHmU;o)0Xg3&R,mDbD&]hnQLC6;bEjJF6kX<J^"_(1rOW#RIWHlq%;SUfWpY,<liNbSgbmaRcD[$%gI'W+6e$7d"kAE'r`ur]b*o#lOrUSur=DG8;ihpV23T<O&4.Aa7YqpG^3XZgFEqV`ibB"TVP"<K@-rIiehH//Wa&]!8k."dA:1Rb%JbVSKJ)P9:M"<fdX<%&2g(+Ef$L$U>QFZspo]q6"[-UH#4U$'hl.TNj<CBIiN\R[Ch,?!;E,@b'/UWpn5d9B!F<#hKd[Cc`1+bZ'%g[Y8$[>&CdN^M)).9NmKP/KT.!ip?hWW^=NW[I1s&q@lt)on.`+=4u_G(@I`S,H@;2\^ZX\M2oN]*kE7Gmg=dP'\5WfTq.d6HugO%WIgYY1h3o5?P#G.+[EmqA%nAh*"#?PML&$`i,nT6!ZIIJTA.q.r/lZH[lRRS9/oWH@?Ia'+=sVR1kqA`MLQtKP.qTkKbR(3]W21C%HS!-]Oe+NT1!rCA766-8EgWXJK0@+LTK"\-rBgKq%W8?pZP*=o(D(UY;7N9\K>aY(qR>r5p4,n*;;HmsVeQ=!X("ucB!r#(9gL'&%g"W79ZFtHMlJkm]L^WCq/3XP-2CrWQM(K!$Q[?VV#b7ehL`ECVW-$%:BGgpgb7McB=U>>q%VoA;*Qo>DSLm;;0M`DW&J/=kGW<2a%.gmITBX0XH7=i1,F2FH_;7:-TEX2/<Q3tfrSL)o;;,(&8-)V==Y+M19r2%7qM]I-@Tb,fB&d"M5"kUt8NqN"_"Bd]S%\(ZtBfO/5%S0A?_&BA5h1B9jo]#]]f=PG`7EY_ZH=\VcsW2hIo%`rN[\emk=Oe5u(1u6\+aTQCU<5Z[T;l)EN/1Mi//LtE')G"D6$`oO^*2C]O%>=1Z#X%9$j!1uJ4"FVfZT<s6$F>\+b-RM_hgGO&B/=bTsR*DlAJaA&R`03^JY!^g=J6@P9qOD(unIu,j3q:X@=ZR@0cs!URg4d]p%!0jb*2E"'g)X^K`(.N8=#V+BD&LUe1n&.2N'']$!0=3=e3eXLYF97=HE_4\*0Cu`55-jE4=doMg#TO<b9-Ls2Wi`#*3sFq1.%AfW%YU2\:N?TBe"Fk#sa^MoS0X9LHr)k_MMuACg:Y;N"JE%3\R^<*NYehTT"U5s`5M6Jr"ruVefg@G%35g<P4&HDG69OY0F9>8=_gk[Q%(iTc\$o50+JjB+/:K\WULgjnYg8]D9*:'uiVHAQZVk@qF+o4",0TA&FIg.HV`JER4`u;<"#N9qMV\R6,W@gmq%agV$=`)-;\BSI$%!TD^'X>koU/+*P&'upbPqPd\=M#V#;pTWYm+Bq(T33^VTDB_0&&=Uh.)2Iu_*hT,b6=f!"0]Q9nn.#sb%KW65:+HhET>B]!`NB**%HSoZZ<,QfuS+$c[eM*L0$B&`<!m*Rr,!64+Mej]g#fo\t3`kAP$YM$-$:Em58F6sbK1rr]Hm2hALH<3G3^YkUpk:nsC++QFlU_a3%qs.(>WH3q!71DfU_.8S2@kTAVHsDC[+2q?K86>AT-SZ7TlNeaBP1pmOdR>B</AW$J'e/PWel5$KX$RqMNWp1kg.(@oino>#D'OJ"%;spk^[`>'q)W2=n#c&7+5''5WF,"W=LFrjKF'tLBN'LS1)qLDG3h^mclD,.%LHcsC2mTd%VTN>7fWTt*BM<uuln8X"De:AW6N2jo%9PL8RrOtRL9PkCoj>2Qq)0*8D.h;E@lHu2]9kOTADBrN.E82372Li;6S.P<#p:<jM)9"QL`h7QrN]sds&MsO,a>=*SP?B8+eaX@_%psAuQLdT2?l>aWkQF>cdXC-!Ip>Q<)#K\qh='YLPEStpQ+Uf4k$#+:8-#(%,\2`sQPN61k"IpG8<]Fm\AD4ta:(65fi^C<$H)f>#%iIDXub0kX")ni0Ad+`6?@/N_)10]!d.JL'jV'0M?!d:ic76;[RZn!bFrg<?LV"-!h/:O2@i#".B.]JZIM2h'"W^=In=BjgQR$I3B%TPj^K#E`=#lPG-"'SnNG?O@'T`oG2=7?AY(!lb(++<`h3`V`/`VK#J&^PHce+V+)[EJm8O-89oa1<a*ZM><(n7N]K(Iu-ESgV3lr%j!++d8r=>RELOX@-I_rW@:B6.\-[<s^_i4G9=KEp\l,Z=J0DRe_R+hZb3(N3?p]6]?<b2VE(OVE^kBX&rNLee0J$UcM$;*TQ0bl.%;-^(q>JS$JZ-raY:!jV.J5MLSRmCK`,9/oC3XoI`GW3<?^asOE&o7S9G8V?s"Ul.,V74;E?M\T$64GfPV9.bVM%,Cl<1`Wu#"B<,%0ko@WLd>QUG1aTdE2<Ga@07__Q(8=m!u#-ZES:Ud-n;ZO]+']A;taq0%BP(g""R&]?pp`Pg))_%,#OP`g'1$&AW4ciM9&44P9au&%.@+BE/#_4<&6+q&8E+SGb8k!C^kfn81=jDKL@CogFC52lFDMH9#"EQF0L=I/,D:0k^^)`Uaon;$[t$>F&EmXaP\M&N.#K$G_Z0mA%`I`[B%#Qq*B`OnH(1V>d^^*@$\P<O"OAO+WJ6CUWB`f2lW7]J\(,4`Edr]*&SQGVA&R^I/aDOX7IW-]Km@(mb(gTl&A1qJi!3t@7%pP%]t]24ObX>Gt#j1hN+pL8ilKT^EtZPE#LSjNLN6"<Y&O>fXgKI4)X]"USK#TR@c&Ctrh_dTl&&:e`t?'Ssk;<$4bc7!Z(/Ij1K%EKt69Ce3JMME<L?&BSJ'6L^CPdkjDj3K@bk:n.,<J@&>pgJ)U-EQ+b<g0G6`92W]UCPBthGst1qUWDDY#gWTN8s%aMl5;0Gs$2r\%OS6&4JTITmP)Eds+atV8kmH'O*#R[RXc0F@*Co1JWhR`EQ_eC9:J'VZpY7U.4%)'VHicL$*pq,^*I+L?5AFW\kf-Sc.VBF.X@d?/%4Ub9c%rKU2Z7>:pP,/uIm-6u@:;N7f8')P?lf&%2Jn).*K/IGX#B.HhKqFQ`4G%RTj_uV9*@R`Q5+[GoFpud=[%djjDkRip&lY8M%qu#7U@uaUfnA4eeDUq+K6!g%_]@^8VZL*6\]a'>6HL[-IB%liY_d9p>`?6=$K\fad;2/cR2+elPa*miLH#p(3ISh?7#"Z0mj:3`l%b0f/R.mq!k@KbP3e@XEU!Sf"p#mi>]hoX.JS@`H6-P[F60EfC$?%']H/[?MWG\SleNL8[=N66Y^Muu+d%F[&M*O7K,nsLRdfUs?4%`#caN:^.s`P"p[3q+j8-QpPYi)X4hih3(@@>e8,*k;1O;bcY:WL;WkH)"&WC!TZKqL1?7HV[L>a&4P%Zo.6A+'G&+S';6Z/SC7or%+Pc3,.6.j#q<6X"3"S*m2CY:$:emV&7*AIB@CO]Qp$RbqbHco<$^Q'h$tWQT><1ndXOAbJZV?o+q\W"`4]p@.`gGeJ][Y9Ud*B,p%'B.f(i-P&rO;K/O&*snn:@e+%bYPNiK``#O+sW/iBFH8p0lh9-`rsSZ#M9nPE]R-Xm<2er,>`6IDIPN1Nl>lVr%0?cXnkU29kA/^%DmW,]IusFJ6Fb&?519eUQkB<]2K;BUq6q'CLEs+[nm3kaZ,mlAfPN?`$V=R5&A&f+Xc=N0\<Fr)Mm-\V15cqD,l,<P@n^Y]QJPbm%iMs^9cCMV(0c!.-#e;8%&/HP$a9.aq:,5@tQf9UOohEhUL;D#9NQjRpRb=hT1FB=d0bERr4K\Kpm,1W56=BCPO(L<@_DmC)YTpSc%N1@LgZ]1-7(Bhbrj<T`tWtOT\JN2=KDtZ)U#'U_3:E-lbB6eY/I**HWG^+EcoZlg83i$^6hg()?$tQ/FR9g4>GAQI=5.i9f47sg9%LsU_gm1\6-fMb9*3h[uT<k'$D0\1X4MG7ob[dbs;g78'Yao-aJ_?sSd!i3nV`m&-ENOQMu?Y+jgP(DnUZs8oVi#noJGn-.@@W8WI%814`?8JK\Q,RBj*fNPdVpr#L<dnN/+r79$!Tt!Z"Mm,4RRtM=U(_8P3*LX.EBg(5sKEX"@auBnD%0o--2i0kURm^]E-6WLX`PYE%%P9%<ulu!FU$#t[drcsS*;.SKY11`6>,UZ:`,WM)f4:a"<8bc,6i=uIm,WNr.U^N5!,\N_@@<.Q^PYKr8i$KUXkTY#15eqdp@<'_0%(:H]b9qm0s-;g/?8[tT@)b=q3TXZ8Z\)Jan__WbA*,ZCZAgn?E%6k/668oN*57()0"@(]f&4,2\KU[W`hBS6&fIPtSl>@5*fCl_L%:j'Au2p!abQ(-ifM44X3],0Q82[Kn((V$a.-K0"KV6@[,5MgpEn8OSqnZI$B1"A=/$MEE2ME-$@]-PITU"$/pi?_?gGY'SZ<s_R9%&fk"p8R?a86GFg]GY-99/l!e9'ZtBX.&]4!Gbng.FHRcA.P>Ns8b`QX3JDg6)7D.m&j@+@h/ngaSJ3BiJt41IoYb^3?qHG+8,us/%Klf8q#pMS?no7[Z,4@d.4u9,7,iHT],PLnubTTm%:P,#<b=caCPG$hZr`3`dbf?$(ULXXXqFOKc-d`*c4$hi[MRoQnmCqf6:n_b`%eRKd;pD!D,$oN07'siB,mX!RTB90'V/*S0snd!8c$7f5>8XFuN$Q+P?qfARV#TQ'WeT<cTpe='D*crj:%VZ;6:?Q7$6Elj[W5Yf.%(Pu1QQGu@_&;P73deP$K<$Z\Fr@4Y!Oq/i0ah,k@$;4XJTs;[?M'8tT(bt`1=>uOE]YE*u,7GGgHU.Aj=@p[.<s\FVV=2"l*_"A$%Dq*#[8e$@.lthM6\]XP#G@F@0CpEPf(\bBnhKJ!D5-^u1gD,kGWDlkA"n5_C-"e&5_Y,7/Zddc7\_Go%GQ$_25nD7]JPYpV*XJ'a%KNgO0d+NZh]Vd0a9Oq_7&8<"BlG-NAakoHQFAIp`,8*9DM8[DI#gZjqp.fc:d@m&J/4BXWEIC]fNj;L%R]IT5O?mE0'-FO)'(f;E%cR],67*`C]=l#+AE-j&G4p,3g>W&^.6Vh?1lE1C;H^[s/HZ=:6O7fs@$kQ?m<1iSTjQWIIbCUK`<OOlHZt8NBhfMG%iblT%XL*C*%->q=L+q%Aq-AbYT(lA-4I9G&o`K6gS.l]i.k9Bn"m$o(C>o/9<CnB=DIW7M[TW91gI1fV4nBmh)gL`(B_SO?-Y,gNY.91D?9u6(5%@l6agLbGi!=jo5S+#Ga"m_HoT,s?XG0e>dRGM+s09b.@W2GDXIGO@mXDRmrC]?K/AY4VSL(`RY)+bqKC`'NbTV?Y"uifK;FkPb\&%aeG-STCEX3SXbi'`5.J$p1opCpOMhuMhU:J'&tH?e^lR%I:5Ge[mZWmjUVgnPm:&X<&s2tV$G;38<8sJs#@"$ao_k`&7=*l*]R=)%B2)`Yi+NGo2o`uB7n_M!=QHOg=]U(SX?71P<ZVU3Pm:'MG_o#/aob.,fXoL3*dj!#(BWWeKK.4fiA!bV(EOqt(*8R$`$8aIJV,81%8mcd-E:pU)i);YA$HK^[PkmAZ\c_+WP%YS5GHc==lu<i=M/nOlJ[?(-lOJWj\q;e:nVJZr8eddH4+LJg")9?Y6cj)jJU/":8!QLJ%cBfg0UVj*a:Y)<u<uii1M2:+j#EG.<*hHg%Zk]a2*NP3slb_2#H8![.S&h.mH>!sd@mkMdWJACrVB32bC"79997CeDD=Ju-qY#gh%hTJbfoi0_f:H]K&.:]5Tcc%L3]e,d>J^JP&UM^06b-#$9P)h34Dn!P\mK8"eI!rNa19b%+;-Z$PGd@kY"@g^3NiePo#!Hg_kY_V^%8m+bM[LAdt**XjLb;JL`P_#f3QBI:\_rp1*a$.OpWA-QaW\M2do5djra'Lf"N`onlPYM$<2lRmGh?-\P7?+\>@DiVEDi]m3oj_@@%V-I;9`F[0[mBQ1/0R@VYs'trfR\LpTWg(b5nja38:9CK:"rfTuPr5fA.appL*sZ"j]07b#`TR1;;mjh).t?s>/`e%Cr3"6*5"8g=%A1geC1gY&t6<T1mm*1lnC[PjV>P_E\XSWht2d\cB3=]kKbL`>3C`DSd,=4-<.>NIK-ElKjD&odJ&9mYiDXr/@eaC4b)6_"#>B\ni%r_i#k5<TKm13k0iD!USfoP`pa>kRAlX*k5K?KiCXeLQ'O\XeN-/7LDu#,I,YMEQ.LSnie9D3l6(.Ujk#fWfe+q)u/LE^6X\V:]:u%mepHQM/55gJ/"-"gp*oteP:E(S`aTNpt.5>GLPY/%3D#:Y%VLfA[d3DR<d!"F_mDA=*=.`N4O,<9;YA#j$Ip=C)uahi'QN[Z!%'"%43M"&HWMD@#,CY\(N8Q"rFt(KZ^YaV>nJ=G>dc8q]e,\bkr^p#C$DZRFtL"aHYiM+>P]bcV@saQNH""?`gGCon$)&pA]aE.#5AiK%4Z>C0;Ng,Y8mTTT<%1J^a-P\*P@H+sDYM0d_Q&iOWD]%FO"J94k0(e/a+:5;4OU7W]W(LD;sVJ13_PK:@]GYeq`Qm;++)iHS$q$E%44c8M2W#Pp$gYjIG"]BW`eqs&hqMZ$:LNga-1DmLMS^^0[5^<3'nmsKlO)Z97XsJd)EN>M6)I+P71F&MDBn7FJh21QT"aV9oCeu_%RUiZB^@p&_90Lk]/kb:Y3klUj94<mpD)JP';^hninlIEYq\VIT?U"0D%W$=/f,f6SS*,2]7kr[GKRliE,O&aEjE=gCh8SQfamZL,%)$W"BGV/XAZMV*&QVnq&)15hUaXao3>DG/6Ilj:cU/)k8V)t?\l5p>qUAm*So@TK8Ckg>f;uoXca,\nqm:hVuIiOP"@\csl]]OD*%UU,bNG8u\o@O_$'Z$X6D:*Q1Y+-7\PO?7W.\Cs;gU@VWVX,m4ZFuN:4c@Es(gD/PGR-[jt4/6[JerEIRf<t3uN;h16<3*Zl1!:*9%?[b00R$]@QUfHM0q7SAB5Cq4kqb'M.$aX/>O8RM-H;hgWX&dbDIW%mB:LNhMjJ^g@I^s6\[H(i@n@NPAQMWoIS=tI[c"1:p4u0\8%lLA1"r#(HbRiGW]51?oW-f<7g<%1J^a-P]Ua8`QhZ^!nuc1"nl.VE.hS>GR^bON.=o!-M\?uo;nZu]48CAf-#`mT]l$@tr!o"/pA%RcOp>#PL#0O.RX7rB*!KI/Wh95Q8Q]J,8\"rMVs\MuWA2s8!holShJ;4SGnde5s,XP/4#FSQg3=\@-DufX)u<g:?4snbKYVocNFV%<C2b[,aTEal)Io?q7WmXrWG\rMc.X!r:`%_YI!;"S'P90el@UFB%FYq4munQLJG32j/EdHR%MlcCgb]t*_GOPCru)@N.)S8pT5It%WECdPY<BLoggcQ*FkPQjk][NEV7=RSbH5&k8*egU^M4nKa6;8ER=06[gr*fsII5%p[e6e\j=WXb>H<Y':6Q-'0NlI;gH&Ti[Wh7e%DXr/@kHofb11#l%[d:^[rMA#ahT?_gAF`@\f[f"'Rsjsqr,66?pMTXVPLO)(Pmp:[QUXU/?[Bua]NcIGCe"8S<"Vd.a,\tsc0qnX%1'<t6XMl5BG0`%\a*,B08/8BDHgKCu5DgeM:%oWh,-m:lG'1;YLi+F/T?e?P?G`7gB4i/82UAYMn&c':<j=_^a3LPhb`lV$ht9"t%5":%_6aaF=R8.uB_e58!q(5Co\YY.2.4f%ZQha:NmF\\cmp1eJ)2u;a?Ymq.GaXFqMQmZ;30!8cp9cJ],jis`k4Z5sm\]U2jJSiX%b1O,C;XUgOpMK.JjZ`J,(*%L!>R%Y&*K&%;*cEsPT>9[$amno=)7oU60):lA:/$qYP^I9b4uYL1;K/VOW=2()$#?N\QJHWRj^XXL%+EJ7CFE8/blMB;cp9FR:bu%,+l&&3I4ZB>^44]!O\dbsp;lLd![S4Cu*YubVD1692]!dgGRbul[iD3kR4"oPR%m7;rXQA\$WAn_V%Q)e*J5":%_,ohfUB;)40<Reg'-+L@/Rcr,'k&u%$\r4kgZajh:`F/JpPC"nS=ED)*Qb2JZ`Y#Wpp=L<a9:+Fr3k"+QRXXucqR04"%Dqu-e0\'Bo*dhd.n#B4PA+[K(VRZ!"fYA2fL#9/;a&QDl+/A!Ga2`?uS!Y[:.J_UOr:\7;V;0,:p(1d*=LfI,3kT`Qlt/0%FUiZ_%Vi$$c\ff1ee7=>p27GM$Jg.E<CBIK<(/i2=r)J_q+/A!Ga2`WC%8<%mP^I9b4uYJc[\IMFWg'@@A'=B?OeoRh4]d`eA*%lMlYpuW%h8ABcq?.jdf>5`\H*oPj27G*bMINkq6LTls`BH7>q-BUnmUPlZDRj`i=YFUgJQfak*LL#HNO3Hr]]=;4$B5uB]m]4(G$U()Pk/?_%`_<Gg(JB4DDdBo9d;tMHD?En]Y$I?VO"J8Y&$Th%rFi_'19b%+;-Z$P\9NQ&7Rk]uNp6ZN?-9r^.8.e'QJlnKUUgq$QSL6pb#7f8%Abb&.q:Oji0K#^t=uE09Fae4CrRabUa\b])Q*P,=k9fk3c[0'B4<8.$UMe!3m<cu4QX0!EEcm?VQR0DipQXLTk]`&uF_5l7o3'8c%j&9sMbVWBY`dNf[Fg%6?4:Rj_ar6X&r'jktJ6MNU5*+O?kl"Xj[E`5QI-p_]jW9ohY"RqA7c1m`9iK]4>YFhHd5n`.Y8W/i1&A=T%<3P*m2_`ctQ_&S@g[D.=mUPn'V5Cch1to_ZQ\F>%XiFGTHQT$G-HF/UIN+Y(AL[H-148u)/^7j>M%!'t=nj#lH<e+$lUF@ic(+:U%cQ**dNf9*$3AQouhG=]>_J\!89Mno**F&AAQ,A$/IOCAV\As'*%89W$BH:=R=*;B.N1QLY+8bRm0NH7no!)d$^.qL0G,&n^MT`m*%f[f)_::QA4F5u_6m/8+ibA+;LN_Ot(k!m=$k9&?Y$5OlLf]77)*8JTu>M&ADo#LD/.Z]G2nn6ZZrgMa+93?(Bo^7]%at5EUS$&#^%&L6Q4at1)/]s6`Y3mUNL>5G7X?&L8q*a=)3?\+l\oZICpQ[ujD%XSPt>P#IS"i?7XSsp_Mr?&V8JZ2P5P)h34k9`]ARt`P,@&fHf%jC?C&\bYg$cZ*?-1lo"Y1iM[Wgsl2*Qd1bhQC'.5dsfV;lGoLj^nts2e'=fYNm6>1n7aMeg+DFO)CmF5I[@7s]91M0I#`81.1Vhp%f(/J.<#h5%Y%s!n(k(Qg5.0aH.TmKDY\C\.UiY(qjE>eQ]8Oth1V7Cf`H_13PC"nS=ED)*Qb2I/pF\X(?tWjVCtDdH_1qkf1[mRt%h\M+7Xh3QsVL%RVK9'm8>ntM1N8D%h'UP@+)joV?dOHkBIb/`0I>jbe*$>&<D.'B.V;u.0nEp,+1mad+0egRXiHK,(EUepp)]:fj%\_s`b1'TWW(F/2:>:d=uTc"Pqh3].K,-[.i[cFW,LAMg9pC_"2@5l[?VC7D1MSbP6FbOcVUYcAh.IOIm$j0EB(0\bEr`)&Y5">#,%0?%M#)$ZtJ/GtNF4g+(Rq\VItDp2_[[+UjtYI<8lk&t;K=%me_MqsP-=c+2gr2u+6q\XbIQ:Y*U3+]5_R$]@QUfHM0q-C]hk!hgY%hn,\T7O(.Z1tn0Kdjh9CP2GAJQYp@+guPEg@",Y%QaPmabOFn'%5aE#?\%8oY[&?=>^#eMGcSZ?N1QLYeZC(-P_#f3QBI:\_pb00%\t"4XLG!4IWgopPA'=DQq=:f:EF<ieca7ammqVgqITOVE.Z]#D/bRXGWar?u?fr2q^4`Un#<!A;1[Xf\m.gK!h_M0H]p%MT6S2SD%lQs<h[nPZ"khER?C(?_\f(-2N;B.U$mT&Y"+/<c119$W,@t%<Kp44YKGbe>4p*IK>F8C<DhR@`o+*+Wd^@qJjEfWqDf;3O1U[MNh%W4VDngTB:Q8*egU^M5%Oa6;8ERD!cFgr*0q?$c(HD83,<\W>/8<ib5cdqAiQ>ZQ<o[N8NCmX:%Cdq.+i*rF&t@#Dffle'Y#3^qrH%kj?Rl1mabi2DE*]iHK,(EVY'u)`dl1S*fMUqq+]`"&hChO]M;!QMfUd[?JI&MbQlB=D/^ZqH%h,I>iWQ9pXc[Hf[,h8R\H<D!>;,%Z1g!L[Ye'!G04T.MS_^Gf[@O7@ddh!^5>oqG,f=cMT`m*f[f)oMS5)"Im,>_H,4\GbamS)f^m-1^FPV>o$ZkeH+Ps"@Y,\kr3!)c%q\VKDCU%Kk*eD&>U4/o*r(l$j0f_;+/7N"aIZu%C5h+B@$9kf1aki?SOcsoPH,HN(on3J*l:a_Yjl`h5.Y#rIF+`h7Z[n8sU=L#$%9`PKUO"J%``.N&9dTMb>UUqnZD-s-#=tG2iTiXMSn>5eT9%BWf.UFX2G)j^;+0JfFcH[#mQG7:%V*q.76d7@kr"Dtk-'=FQkR*S4%K[g!#>)o4>:0=7UZB/>8"^%E*74>A)9a5(kF$f@VQ'^`u>NPnt''<t=%\5WIpX!hoC]`OCQVl!^Tt37YEn*4R^'u]/,^`"D7uK(`%572NHDPL<af]iPG1E!#NhNhW.NIM.EBmKj"=L]XbMmkOR[k%iB9mQB2eIoCta@@[OQS@:./oU/^\O`c#\fs0:Mqe?uLSkOdn]$fc%CY/N$6gqed^OOni\e[5=C-:PYP_$B+>1$Ll6FQsS"c8i'&jhS2c5F.")HL\:%dP?rJrlK)&6B4:X"d%4Jk)B3CDB<k2%eEfC0jJt%`\EW\)\D!XU1#1:587]qSZZib/Q\/1OJG!hKc$$!^SrDERN<HI58',Bf@fu:25C8C3Lss7%DF</`o&n5Or+MUMI^0l=/t;&0j&g&%D6P5DR*Gsls88R`cl0i'@4k[Jb_8M4nu`]ulVS($_u2gI%FRQcL^M4?b2f`[Q6Z>mkEAj&A0q*)lYD]3<<I`9U'X(MKTN'ZlU3^<%+>&'=$9R=iWDp$>'5M$PNH2#'br25I)I*"qSi11S#d`!/D)sFH/qeQ=J"hq4Habo;'173TK<ZR`<Zij52n<X+l-$29L_^B30:U$$%.sg7%LaVH.)!I?FQ-1+,g#1>i4;1VXFMb%lSS6eS`Om@ir`/n"iH2N$B;r'C\&ZS3oZ9Rf8"IRgc)Mp>3mCnQUOEO`.8WcI0I0*K%AcF5U2QX:8>@lU#A^9ZJ^%K-JTU1bqS5LD@$m3sVn8/ZV6)YX#PUC7!74fu<O:GoD`ei\idsqr=,)]u(&5oN>i>^g6/kmC#N],9q%_qhuMV`"%<o$A8Z9oM3WRMFis5a/G]`=@1E?3IbXA=d^c*i8&Z*4/h*TlY=?""Eokrd_R+N!iO&NjU3lUmia(>"g[fYaAZ,Hc3=`%JZL%'V%)RU1QXM=nMch0R=ZmO=fnBlB;.#RDqj-KJSZ(PR_dS/`TtkmHl$B^aQA-*@_LAab;*V_drha<a3>71k`ltm,Ae0Wd4Ej;%8Hqo5b+Wk<Nn&<Z)B@7TBOCA0Bd*ntG-#=s)gEou'"hk0KX;1]]FVHhQ<_<oX!eJtlStH[@K;*YFi3kN9-*oUhEfY20]W#=AsTef%B2=l"%SU/TjqDlW:N'1UZlM4dq-C`7n4#n9hC74gSI]@.G8kbiCKnSFfV)fslfs2@pMbD\\S8=p!d60#'RK,U]mX7\,18.(;a^hs%lOo)r>)/$&"l;]2\`Tf-adh6_8/8BDHgKBJfDNX2PH"T`B(g#&a,\hooAO2GSKN!hc?+-CmcsW'eF^$EEm7HS8Z@D<K0;/m+$8&*%6o*-<klT=b*Esk/56dd+D":fRe[:rQf).-b#&kf^Da+H!3:-3=bL;)@ES*r.=-^[ON5"m#^rSjg$EC%U"iL<U2(`q6=ED):8)6Vs%m>5%)b@2E<mE*&-HE=Y_QHNQU^3e&2-EshKQ7f]mF_o0,[IW`qoPL;#hRY4T@&g[g4o![<hGp9)a67q%9QAa"Z%4>V$bp1UO/okc%5"<;XJX5jJgDOp=MSm<sf^cd<0Ajh6m46aFQdo+LAF`j5*SWV[]OLgd2U?NkHL.Q<J[tKf3&>p0%NT>&DeLgn@&FqJV?e`KN\1(-%)XKXW^D"afggdN##,We"[#Qa:X,?4,7_]VZ;VYc_&LOA'/@:EhrMt815">#,/]D;O$\D%n/%9"mLT>ae*]D?p,P9VMNclc7X6k26%\QppF'U,(8A[eI=XMn\5ht=7#+/?RkCZ&+eLpb*rqb^(]=G%9QSUh<K@FeVB5Cide;3<3pjtCSp&E#A<:s;E\QMfr!"kq\mI8U^c%,mteLHJTucV'I2?fY6)XK;:;s10/)3_^5=[SS,]cFOb.PYksp<%4j8(3ONa)LR4T_KO*O.;+#=o'gF8<J(+D3NMoK)62$p!n6cTW%G*X\&JPR+@o3"o889BD5eT,!/hj)qiDHKfYAhGa))MEb+*V\?b@$ni>:7F'CQlt.G2PhSS_YZU'"OsU$AeR'TW!AoU2COJ/'?ks%%kWHRoc(B9V`5TNg=kT_`8]9Af=rD*MQLGWl%E*]mEa2o=/8rc-lBA"O_/^4k2aW^YE?%VJ>.Q?V%&D!rgEh8);=`S*k?cN2Rs@ZK%H=)-(rDs%1>Uk_/ARYC<i'!Nrj^"G;N7j.@V(nAEg:hsed^qR-G7h=>Lf;Y/m<E3B;JpWQmHFhNC'(nF$5"3_="1]Nnl;oK\'E_&%Q:d=o5h==.8S<;nk+fqTDbLSF\X$,Q,<!$f/->/TO-p2OcZR,@+>V6&7r;p38WpInc22iB=r+FT1!;2?+<e<Q&Pa^#AEp5VqH$h>%;.`C/'Q^:EU0o<fWfeqYJMtbD\Ah+0\<<r#5\h+[gP3X@d$d&;NaoNQ-r+L^K[[p3-S\9EXFVYOW!nrtl/R_sPe??e;U>OXhL@B[%RQ>bJj]$e_GGLE*$'7_*1<#EP#?Oip7bW*$XoA,`6*u%XiM2t]ND#m(@<=X*gC2;+.1WpHSgYGn)A*pj@%JW7.<W2/M1T4h;Fsa6%[7Q9d.roD;(5q^gk8_(sCfLb=P?h&YQ$:5@:6(asC,qFZJM(2?lPMqoa;9SC8>6)=KYKF_Rc[g@>u\D'a1CG.CVaOd93anp5Ut:_%OpuWTp9cWVp]Kj.o"ePk[#L]q$#m>;Sk:,(=CF`QZs.l0/+\G6WItiU--o^%C$KV73nI%*:1e@eqBMG2C=F+E,bplfb<90FOD:E^%fJr#qJ5J7ZM#^"76Umh1--8GfMHb>+(-+7A"C8Oe1h"f'lJmi^A%F7[P_&@^840o9((O2V_h)JT(1;t]eM\u>ba:&#dNbQ4mSq0'%2V$qJ^U;C=[(ZqD29br&AL+Zm$,KoWQu#?LT+FM@S^Ro-)s.gJE]17Hj"VW6!guL)\.qDZ&a$`>iMPQcC)8l;66[nV<4](&q;[-:%8n:LrR\b8g1mR[<U3-Ql6P>Q'T9IA1`>ji;*)MG"^rfdd&><]QJ4pC^G$l,j`6a?'/VR*/GnHK%1d[lVgd<q''u`1iL@GttL>k2T%-aoGIG!T-O-68g\$*i$"K;.t3,,t'^J:7"s6E*8j+(e$+5Y9`c@PgM!*]Yu#<uqn^o-MJVTl:H3f1OqB`Tq^34o!nqm)"HWa'a2U%dZ^BDQc)tjclMtO:c$-9R2''YA]Kg*DXUq9IlF"g^C*Dk\=RoJ:#Mr#H?K@<D+g6F4*I^9^&KM)c#fOmIS07=KM>r-KcW<nmp)0]%bN+T'3Oj+X(so-Y-lNKnpTI0'O3;UhNSXtT7Tp3l(GHt3^f'C$j7ZaLUW`?=`L*3bF[2s_V:]:um^`/_Z-RAsC=nQRC=mFhqqT]r%Z'W[tUR%2qA^bJA:$TcjpV:7-bZqENOumi'ft?plgR7_E?b<.>?":ibam[@SDg+#6c3%u4h>c,>ZPKH.V.-[S,SsJ!?$-)@Bt(7c%HPUp2:aHQ%1m']^mkc\>m+CBCI@e$2dJHkPC7E19ptG=DauqZY?'iibN.1Y#d;*`_XZ?(.2g;'X/buF_hd(WD/J-HB2l1Xfp"-#N%+5<*n.Zh:;]PWKS,!.Y?0Lb)gh6F#u788+FS_q^T950Ic9K+ZE?t"1ofjC;2mpl"gLSeD$II+)3JLN2Z^LLK/G9<9bT@%^9CH_Bt%gV@(V_^\ifGO3uCpP'#R'K5f]6]/ZGlI_97Wl"2`o8SOg:5(k)C11M-_(2Kp8,]1E\r4l.24%dVdg6+T$l2maQMjh.FW[CQ24*=.%dg6+T>S_e/[N8L-f6rUL)pcl@mm5Z1W/Kb_D">2GCFCYo^WLG.okH'"CMoJ/ls4_QWpV2(_?WRm=a[$mjMH,]%uf-Zg7Te:(<[j8%es"uO=G[0SblUB?!#lP!Q2rp(7.R0QqcDY'E4hH'89,."<&qD-B/pJ@%$$5ZAt@mjUPS@-X[Z;cJi@F>,Or\#n^j(C@YlgmrrhN'%\K87>j/=FcB6]3(La1Q'Y_i^;?pAn2U4,L+@0BLUFL3mQ(<6a!bE4>'QS#*\Y<:oG6gt(lU@!bkUf+_0S?!G1_93_U?jnjL5sY<X%\,rBJ\=*I<7NS$//Do`(MnsK5E5E:I)'MD-ZlW[nmcbPrc*X-rYCuBd8)X"=<1`G?q2aT>_Sh#+ls"t48e=eTYG#5;Y+?_*r=b4=%'8D[t%Cd:E&9u*bmQNo2B,>jZ4EON=0*i5>&lC^>Y(?!XE4ceD%IGl'rKjrPHjCGcQ"Okq1tImiG5N<p>n@SCn1:+E56-s"HT&6r%jTD'lGPhpDmXR^K,3G6p5eNMOk^!KW+7\%?L=CH71>d!nklsW?Ne&J/U:#+8)2ODng7[AG&HN`!0Gkbp<-cg2AQX#Y+8jEs4o+p6%KEY`YK)+1@@ZM]"!A'W'F:#KrDe7TGCkr5[&GOUg=F@;\iTd48=Mg=u#87aF(cc`u<.laAi7YBK`8;<tU5nZu3.U*=Q^3I&Y]JX3%/:)I,[tT'ErElL[6d*mYoL&d2i1cXTH_[[,>&F'B("t6.oEAY_)pd-0"O9/1-p0Q\9Q<^V[\-?^aQF(n8Y;29Gl>`5U^qK]HI9<;%Dc)Z-HhrCpWHjs>6gm`UdW+U`HB[=a2mL=<,fcLX6\/GeEjRdDL0GN\.<AKFl,q>=&OkHC?Q,]gjS\SpJ6GhY*>S?A.up@!ND2b7%r-b?u,L^D-h?qh_A:0ZRp>IUtL1Ik`"UN.:&QW_6etcSm6>A.C/5HDqSD%[dW/5;HddH:7-Ruo7h>X!5`40XIJQ<qc!NAd%pH[%D%]>,n.$/ZuTW34X&$1V0lW[X<se"n5hF,4$E,[6D4Xnm7dL2/)+iHUn\,HXI)/r=pp&ImTI*/dLG1*]_RT''h3d)?)P/E/>:`'u[Z%TiqcWe@!>G!OJ@T0gZHpOH;FL(F"dYA$gE4e+#i"^VV9b5S1EO&>k&YeQJ<(V3u'3V!WTYWL<Y59*b0OG\^gML\^jf`pb9="VWmI%[*f*l,f5-]!#3RS7,qAn$cb5pj"#m/61W)Q)LbrqX^g8oBuWtCXA_:Mjrc&id?h@:KTPOH!Y[j-$BY;l:+'0%#Y79KO_ZA6S]3KT%M6q!(/*r.mODhK3W*>+Hm6#*>+VV*k5II"l*bIEP8;?5QR0^kb'hal&,nMb]UGO\l\U7I)kSB:EKS4)e+:"4,[J)i1O`asB`eiio%d]><o&RE>I:F(D!?J7Xo.3?ci@r<L-+/lDml%S4lY99WOH'W']73pu(%#9\<FTpZTJ84F65U((Q#IC0(4K"E]DNl1Vg\Ol!4RNU7%K#1eXZ6U_aX3)_K9BRTgkT#":&+(LdLDC)M18WU/aI"\n@UBJ;LtVKoT3j'ba,WlC=5NP[S'a<9A[_"r0a*5L6@5[/3qfs5A#AYG%Z,uIWF.%5.H>[cQD4jMS[EDJ=Z"<_/LRMPmAJL.-J`\_l>oupK2YD=hTr.])4Z>ClCLto@>bF\,QmuYrq:IHMDK=f>^KdK>>*Uis%<Q\51Z"<^cI/2FX3&!4e7p7dI2g'ReCAldXB?="D9U2nt^ZQs:A']L0dBS0fQe\iUbN>A)Yg9Bmqq<X`l5D0*97Bt!fXmX#n))!2%SJ`L'I+Il\pf&4k1X/pZE?Ct5]nO^7^?;2&%9:upaDI5:Il<P?G3mlBGC:OEO4!j2]P="VP5*c&>KT)eq-B?4I>ko1d-J6Pa55l\%]'#+)Z))s#0YEIo[tUQ&mB3sMWF!4/jC?qn=+tZ:U\?>t`FYsp#,\m]r/PVWY3Oj?)#\V9>0;3YB>9!H%L]IMbQ$iII355.hSD@A%qq,+J"&iG?I`Jl<n%XL%2l#PJ%X[R*\q.E9c8)N\4*GH2HUF2M$9L+"0L]EDF_p;L<G(t[qS)Ku3:,/4^_DQXf<OFe<JfPPkkdtG%ES.7GJLM':Y@GcUWY2q)dJHO0ES7=HJLN2Z^LLK/X%M_B7aI&]l*5Fpm7c-N,X"']>qnMWQ^n4j\*R;"aCCFkol5=#UV@P]&SV'Z%MAP(bGna(`Q>PPF7ptEoN"CC3)>a/4m((TB?D-nhIIl;`gt,8&J4l@io][906;4D"T/AY+"7;*B4ZD`t;7b8dK*(LU&JFqgiJ,W&%Src?qYrUXm%L,B.%YXFJ'qT^),55:EQ\t9spG;$<%FhQZPJ-,2Jt>;KL4/Wb>#;?-QfLS338@//VPZjiV=93O[Q4`2F!oW!.Cfcf%CdM(s2Jg0bH./N/R<ch$8#rn;,kCW"0c[\3f_dHD9`XXr6K1LT38/bsE13(s9(!m[-8:$ElEMQN7)&<?8sISaRQ5S;9u)6\\i(Te%nVP.>$:X,s\gf(DV%G,--M+q[2J=6\5%NQ^:JD_KBV3[l?q90n5[tpX=9j"of,dVT(W"L)(t>4l\K2*Q:=Y5pk0fWjC[?UK!e^_F%Rt0Et(Ne#W+;eKhY`s"D=5M-d10d=>_+fXrm/D(;B]LRa[&k,WOq?B#SM_<0%4O_`1'-tAj+M]HGJDN'1(V2aL9q2iMBJs&Jsj7E%38@.4LLq,b)jJ:kHjoicWr`9p!E;MI9F)mMdDXOuq.Prt&:ta->(IdP3?cK%o7t0iDnd?+%!Ub7iHKCDoJ]*][uA<ZlOUl-*f\<<%B7N(9Zu;_$JuX??jAnW]oQ!"?%9<$8+l#p66MLLFGT8.Ua=e;`6?gFNUc<tmZ:,"X8I+%QkQ0OK-Od2;@-<N@#5J<*N0W7@^G`e$%$[pfMLu(rm%u'[0%q)s:LKCDW7hGrVl-dL<J;j0D<s4U9g9@bUp@_XDU5[Jd2?k:\?P"E(A\!^(DKb4hQ<<A@@>S!X6Ken+`$Hi`%1sB*MQ21E0f"3C60$(;F>QDSsAS^)k$Uo_N,?b1.2(;,=N;!)-K_ZgqUH:)r2jnGH?A8Vnq6gsX%^Rj\jh[3*&7:N#-rOL]&h3&?%Af!epr?qFTCK$C8l*FW]BB(930i2tX6KHZ$QBYd6*i%Wt*RTeTGR!7E\Y1HkYRW@N\?uZ,DZu_%0!K:_(fc\'?D+5V)=KO0kg4?]%jMEDR;.,e2m`:D1TH\)Bn5A@E*C>o"I<)]mQB=ADfm9fdFURU>/%G>>hBNE,E6#[,Q6\*J9;V%.Z,uIW99scXqYog8R4kk_h=Akb%\#qa+NdYcfQt\X*D";rQp$MVo4Z>Cd2OIk>g1;l3fJ7j;rP*Ear7W2^2C^<]g\$]NAQOrehuC<Xd;tKr^XJ&70jVr;<%1J^a-In)%r3th1mp0OHC9@T:;O3K,/]6c6bJuNY%a>SK;pGugX7>*EMjeF>4SCA9e5s,VP/4#6SQiFMqq-e66dbLW:RBkAA'=#l7acd^.9?7,%p2XDQW+E#E^#XD!NSV2arQ\WWcB"$'5&5FI9.:@?q=^iF]T:G^DSV=DY32MAc<8`:k`e^!d//s6A&fq2la-D8N8D$dB'ZPleCU;L%;XUg3n%*W/A+Yb9hTs/([bYigSi^,rQMsnUpc_1)(<Z!O]Ab07HL9.EO)=c"(!:r`hR?Q$Q^pSbf]9@/41=glWd!oAo\8&4.IXO6%r<B,Y/A-ups/U55I>knrB9mQ[>8+,+MTNa'f[f%(EQ@emd^bpr^RZD@U=RnPoWb$-#=eI@dkN:7c#i=)jEH%3]8t@KFo8&>e".4O%'GalmQMsl)IikHSgXM+u:2:>UE`dT->Q.]HqgFF;YM0eIS^ndJiiqo5[f!>opA5]?YM0eYNS<`\@^<4"[^EWJg[AVDp[4#D4e[pr%hf@mUrn=FtN_Ot(lp^"Rg3F0P/*4b>5;r=Cf.$GKHI=;Pp?-q+6742J,bEjd`$*q*1DDm3DX\q/`!SY<Spsp+J47'jL"a\fL=hPP%(GcK\=6i,YA!lmiFAe3D.Rur1OO?*'6hL5.kAMUbHD\;T?'l`dfq^I=)ROid9BEB:df`":EBV4=g&mP^`<gN2-BsYWo]M'&k0po-%cDXVpK_ij\S*hc(J]s!IN&Dn(e<(E8.ZXKZAft?"@5Yb;bXYF3oojaYkmr$h-03!kl;VcH#D*2(!-:"#@)gSEnW@_6TWQN[.8*-(%T\ZtKf1%T_T0H(QIm(k2;Ru3=MT2Xn@eF-;_h8m:1C1,phaFBbRmqW&o5l->@4>/fkNQi<5d/F/a9P<h`D)#>g#QB1=,q2o-Nr.$%+`ssjhI]TOj*Tr:f7kPs'Ea=b:I#JCD.f/1VPF!)e@$8qI[IahbdLhE=>Z>a:&DX^E?ac^(nd!1@cc@o5C&XE].X9`;HQR/N+\++%b:"%`&m_;=c\<`=:-:QY9kT<>"2295jDiiZ!P$G='?uhk@A6JUn[kU!Vo>$#8_aQD3&Eot@#I?"&46Rb0J.NF"d6l8knS0UD]UU/%Oq?[^dN!@G#lR6*QpRT]Hu=7'mmE@T7jjRkb[hVn]!YsS(^-^cPZ\U+nRX*=MhOLp`TetoDZgW'lX:K*pmNW!6%\'('?`P;;BHBh%?Ot;STV2k"&Enr`oaS;TNB"LaUCG,5UVZ2n5'<c!<jHTe#:">#&gbGM4!CO,h5Xp>%j2C7(joV%,t'Z<eK`&=B#>?JKVW'fR*ggB%"6%D2DP-T''Id1pr(-4XOMW_kge.dNr"9\85".kIg'A*D\r=]D(2&S8'tC"s<LeRS(O181FL_Ah@<d1bKTm`sH=6Fkd2`WXp7$FS%D>bEUV)uQC)I5]f5GFA6oZgB#-^%=Z#edfJMtC'=-rd0U4BbmO@0"ruUQq:<.+.$pWj[rOH")6Q\=hGP=/ThI'[j:a-_iZW^oU>e%U8=Mm;BT$")Z(pg*!d&X`3u2M_K-qeI,LEt%m*2?IBFgbMdMN3U%FKXftOs>K84.1'\1X:09$.,KimHqDMSu"RNM/%Muh8N#LV.?%L.btX%;b)j+eU"V%?+aN99t_P9;O@@i&%E1g):b5`P,;``>mtYcc,<+Q1hV#?Yft/JEbIZenLSdDu$u<LW1<@770WC#H\=7NIs.I%kiK,2b!]FfPA[N!)b7^uVgJ[mV,=7D)8=!VnqiWJf_3Q<CEUB@$qBN__0Y26>.7r9iBafWe/DGjQ#.M1kZt&`JQRe`<(mE<-@sBE%Vn\r3i&3s&S-1k&HXMk@GT&Rgj4TAm;AOr6#qP]!W6NEJ[=6s&C[6R?iJ++i*l,R<@.a;1k.=ru&4b-lKLD]gX@2oUa@u7l9T$(O%-:Y\1?gQ&XE41=rkn79ko/1g\Ye^]W[8Q>EKFD_(-E.3&Og2lZ:hQ^@("lR0'G<i+:f*VsATdV^c06`6dL,.?h/l!;E[F=<_(7f(%6b/tg$%^>q#U4lJ"Kl,6Y&s7WC*YJ0cngf+Wt#8#ce5\YL(K5aUY_4!%Pe$uc-es=Pa*WXFr&`K.U+uA//j`;`"'e7i>rqQ_[&OR%*;<R(@B7$S$!Q1AI0s$#9U2ap4!9BW<EKlghO5E0#RT$CNR3n=Orp'W4KSgbqB-*Ai_Cu#&^<<>oi7\><,#FddL)*Xo""!BGcluD%3EAsn2?WB;6uRh[6SLiC.e4=f=@n=loCjo6b&gdKqBe&B,h4=\Knt2PFFoY1A#hf-C=BT=-Br_DA[TZ(hRNP]I70Dpg;'8Vdc5UP%dGB=_Xa[]hA5#e[!.o8EPUt41<J2W$$5(]e17khTM=iSI+pl*95D2GqCI!u'Mp]nk?u;po3h,Ec<_H#6eSP"3RM+2r5_p^TN`%V9%+gdOjC23gj(5=XHD%+MTUZq7=`u2dkTS>'po@u2:?EH&h.f`4D%=*qh/nG)O:!gjUPYmq$B.$)aF/caOOsI*3qBLjiB,sUJBMQLN%L&228\mk9L%W61m2kK((m"".VLCY5T@^UM,RVfJmI21shY0-#]jti+OWM2(OgrYQ/e>m)-kCZad9(rP,K)c_ZS\?j>EYH7Zf-:dN%U!IimMWs<f3\##Y:Q&(JoT$*O+rreM09$i5=[Ero==8I8?M!K[T;1%J$5&'e9Dm">a%eW?IO]H#NCh:OKj/39R-+W*FJmG[A#!:/%RlrZOr?ulNWO/jO;mp&/K-9fqU=R("X+lZK&/&HGdI-f+f!,i)Loa.@J&Y"<cVPL%U_idkLVi6t(=lKK;+WTZB3G/%QX\1:Ikb[m%Z?WM'o_:utr(E"QUSTbI6RfWth_p4`3=,1kq?bYQim\kAN8LPu1.Ll&'3T?>eb5j+OKK_=)IlP6X3Q%RoNF38m>LUaC<U3YfI1M`%W7$7%[h$mQOdsI6#d8Rr#k7KcXi5UNoQ@#9p4d?OYY6uQp;IQF\_CVcDit"He973Ul`QZrLbP73)=M&;,6KCSH/6X@MJ^4kGc.uC%1WB`W0\^OE&\A])T9,U*!P"S">g7dCSZ1Xu_E>s1<5i'B)rl[[M(ZqKT"RVsiHPm:jRMSJUdq_m3*g964dQ`;h;:1Od7f*LT%JdS%SnFjMI@[WPI?\kmU,+S-j"g.L/<sV5N3bkFk7J?$c(GTl6qBncM[p!ZK8A^&,C:U_$cdD,]?H.$,`)_bOR<al%nt1&6uFUs+<%<C%JacKOeo0,HdD<$%3<f!#-q(YekGHFA7hU;fV#EoE,ei_8-;MT(MqjO4&DG,A*km2]F+k+,W3>DO:?j0F[tl8.O@G#N*j[*rL*Mr#%<?K=aA]/N29?iKQmk]3l^G:15NcO^O(7hR'/f!YWm.eI2HXPiOp;4W\_[=T<bdlaJ(WmseE5Yb:ek0`9!DgS$=ku#KRVbb)Y&X_j%3k%#/mcpoOJ)s6FE4Qs?<<t'XXeZW32,Z.[irER&SHVo1\2ZR5+5b$c*Hsb7C.q^Yde$)Tk,"D6HG27'r7,Qc2EmH\#YjHocN:/'%J8CLbk24rf\DMFV+jZ<LVDpZ8&DB+Bh$'*9V%/G'M=k#i;'dm5eoL#Pb(^*W>R0nC0gB]+pl.%dZ.LklHrk:h20%!nmI11?JP?DN%*5d=c&93/gI/YN0-cprn5Ll]RI&um[1D5JlO&d5p3$&H8fp2/NjJtXT)PS1^WtikqgC!P2SMSao^0IXPSuegU]CEek.6Y*V[od=G%iCffOK#?62(j0Xdl;PhQ84l%qA;<TGlHW(HQqI6ZZYAtj\hMb`?39)]gd>Q]2t"7BD_-\lcd;74dA?Tn'a(8"qnDX?f^l.u[)Ji`%BED'M-PO_.jYJ[/ZB/>2UUYl^FIeZmC@LXO/[ao!+/O.WHXhB8"XDL+;"IMoeVOYF)jlM>+N/pqnKFp9nEL)"=sKr*][U1?3^-;S%oUZ^3BPfo/"YC"F-`kg!UGa?pfD>.f]OTm/'1OK8J9fQd"$;$9?5kgT)4LZpd#E(:%R(\?QP0Wf447/J'6@uUIrSd@miZi`kfSge%a_Z_AB)J[A>_bQ^RY$596-8Z.2'hGrM;Bna?:cSW[["6Ol!\cC.o9U#Pn6V)mX,K%NX/CF`8d%ee*)$1]ubqU$e4dh1iY-B#LFhX%[X!n"M\;[KQppP"]j6Y7'=q0`NZ3kb!Fj$7!kIf!ijbRebA(LODtEuqp373s?sI6Hgk5ENEKX;(N0K,JBA+J9>'R[>P@(;EbRNn/%"(Gq2OM)qG_AO?Om.8eBUl!F'QYU&&kcquZcufR"0UrjdR>EXXrD@AE7Gs+3q0!Ih?/p"n/a,N</^]:V42c+j_ZL_cM%>Q,2KA=i%\<`YH(uuVYNE7k4Pl:N[(u@rVJshGY-;FdS/Wn--<lhardNlB/B1hJ/nq1/+3CNU@kqlqm!26s1]?QcaB^%qd!?F3$YrtVF54[bI%!j;TH/=;6X'AGV0=@bjdi:[`S5.XL>BNh]ZV_TSbPuLO/]?o"X-E=8,jXVV'5F^n%&I=9g/5KB;h"WDT*5MFh(6V<6nc0*jRa1)W%1R@k835]'MN72U2Ja]bCC=3D#A]bDaoA#`^-gWA0c:CYEZTE;4=r,k7qML#i@DA<U_b2.IB1Jn8#b;a8"$7?pLSMYChEaCsLe^_K%`5/!WMdfe*c&[b@oMBO-qWgE#)Ce9=_8r3bV%D'F402#\EKtDOj;/"taQ<=39L^/3aaY4UWGpaB*KJt?<up2C!='qDSHiZs.`9'9%1hQLe(W$Sd;,PZlCOX1c=53AeA$MKDO)tJL8I_lm*ZJ#l@G!-_)"$Wgc^hSFm&[HhWiF/^S*I_S]>mn)F1nI<LJ'?M/dt'*%[U^#%XK@]_'csZ'kfJ/o2_Ttu:_4Us.sU7nM#!%clCbF#L_RkNJ.4;KA/*(jC;%!*r;&,rWNUu`b3?<Sh=ST"&@pG7[0;1,j?&;-:RG*N%0fbem!$N]]E_h_lX2KA8,G2o$i2Y@[YY@6cJ>'rCN[Oo1q=S7E;.#;toSd,B,plu'W7,'L*N_]<$6$VqW^@#a&6T1`XZ5t-<6OR(%of]lhYk%H:fQFu&.N3:Znt#R:hN]/SMNO9R0ROPHYhENV(;E/pppq.f,$HJeHYb]3QD3tq2T#!b'iRBBpb,t?eLj=;0#uS>^EO&l%Dg2DtG+fIl-odc*ZAFG4;L&&s=,"_<-SlIIr:l\Jei@;c^q0L\>+k3A#W!dr@pp+d!AX^s(;pnG"iCl@+=Kbg94O?h^\Ic8/9Wm)%/i.RpL,T@#b$6&Rk!ANqLA+.G7?R+%7X3)bFt#FX%[:U"AFBA-8S8%@VrIZCJN/,XkLU5u.@K5IVkG_6H>K;bPsR.^KWMq.Hoh`;%abLNR*TM4i=jVk3jElE]cV@6B#I*9+R2@)l/d4eC>@/:H6N;cOH:0+MX]4Sdbg5EG_/s4d,>+jfkNOJ(Q;aO)M5`U@H$Cf-Wu,"A%RI'QITbSe.6o9#9;\]6eRa<60P;%YS%d[T)b&#uD?&KK_!^t3Xk(pLk.E"Wc?gu]-,[PF_''<j@P7YA22H;HQMD!f6ME8ntB^2YB%pIE&CNHDpt7e!&eVZV[uZ/Sp+\7?)l/OBfDpR)UhEQ6'3HS>[H\OXHJ-Ua2LfI.)Hj,K`p2$H3KeIXi(2gQaW<g;^Lo\(/WqQou,%%4'7[_q70sE1:oQ't05-j0gGV9<]+:"JVJQWaZG`@_c_mWjnGkN[FE68O[)/;R6"TGV!PDA3$09&FTE2&\-W3'%.D?Q%":RPOpdh%R9<iVWM)6pL=bB4et/dN@'[)Ah3RT@e<Hi<Ca\qQ0uNa0&gm?)T!6iE]!^_-iAUp#d)#8VTn8hUW'!9;=J)Fg+@LcqW3,DZl72Fb%ND`b^p=N@=^!o2'dk3LV(13p$/p!*!6*uuqAA0D/fkqd/l3`fnkA?YYCO<ulM17t.U.p\nb%Vtr*i0NdN;&GJZjR%\N:I2Dlc3D0%^(TQXVq:bSUT]j+'`Zpd\R=c=U"]_i&r-D)"(@W)&?\%MUJbIH0q4mn@c15S%Z(j8A-39>nD9*:1QYs."srrmW633G[;oaP"k0hj%f+2Pi8&Grmk6?)098T(PO%02e"M6N.9P!T$oN9%tapE^&rP^e%iNQd$g&EptmBFD8f)amM4X2+1T'sRkGJLlDcj0cP'g^H`O:n]P%%'aPM&lq=_I:YEb&IJS@#V&)klP2laK?EpNB#DmZqc/_*7i:-7LhCL3rmbKTFgE<uQ,9$T^<d_L(o(Y+?Q^iT(<Aosa\4%OA2UVm%o8L1j8mCN!^O^B]<T<fK]E@S6[Ct&LMH#I\0<@jL6Y%8kR]N6r&C8C@MB_V4(d<QTVH^>s'LM-Pi'_sE.B-g>58kI2l\cl_0Z4?3%8EO!\#`@'-9s\DjE9I"$q[5HIQSU+qcNBmF#_Nq/@"dG[5WDeKNpdCPnaa!3YJ-0El7&-].&5pXEAYFSI/E)',_Y*i;Pe8ee`[Y:%'a;W^0`VS%f,u>qD\)9T-4!C;5`3Dg@(r%)e)a++rdiiR+G%\!pgs$a#m8C2R!Nf7Dd\n@AIM-Fn_T2HVAb5!KDm@)onM!&DRJiP%=FF",L#GI:b,Hu!`"<qNbM786"4+K+r]"CoC@&S0bOU*%+ef,k4%'f-)O7j/>u<1p&78c4O47@<\5TU(Z2q/CU9Pu`(:H\-#YpM0%6H6OIG$kPbI0gr%>0F4cQt(t432P'5KAuB[qT,uZB%TBs"A5#]CqEu3GWj1uaX5"e=<Jhi&FLPE*E$7lg+*FqB9h$B6gWptAjhLc%)!LqP,d&Be*?L0)i$S/o0j14`7Zf)3qDYY1r43>.ViJ!l!EC!4U5b2(EelhGp=Pb5W2+/R`dD1T#n3P!*>[lA)s+*Rm'3PaHb"Js%V1#K#3Qr#Iad:'iMMK4*o%"P9]th0n3i+?XC"RRl^or$bF*rUm<TFB%\P,E6i^6Ood5[3_Vom*N:8B@6&34e87cU70H=ZYO21;nL%E]@'F@%O!<+/bX-N*7Nr@h8Yb@5fedrKV%nQ.&!1`?uuCWN)IDhq"jN'1AD);I9mq,H'/iWG"LIKmf![)ZCeN0d$u"_\NlV7*&BR%BotD@Loh:6`h!Q)k^ELl8BD_)YT*J5.Xk$8LS`-p,C_.W403Mhd=)@`j+eIFP\<;TIaFck,;Md!LJJPm1'15U,18$LSt9<:\sT(h%V'EN-QRKfC0!GK+FH"NZ:&a5HP5r^ha<sAGBT;ELOSC&/G\UHCg>[]nSC47o1_aFgd8P_VC?9FHYXt0%%ik-F]51k^B.V$_-1D'C%G6]I'L(SW"dDa_"6ZTHt7qKQ>1ICEC$[6lW+@`)DBQ5>r-DTNLiAU[,K$G^@j>:=k-N0d>Sj`&3&a^hS0LLM4q/f#6bc9-!OUe@(%=:0_%=X2?`4u_;p8,Vn`g%8C[Yt7Cf:::ZA"+h"P1K'VYSe)a[08Z1+=b#Q.$nNRLq%M0l6=q4T'J-[$,\E$Z1't`.&/83*T*T4o%aHqU>Y9^Q81<2](g%KM+QhhI&r+1fO$-$V+F.tUh",3ZM).Q:,,=WZlH.5RnUP(2IJJ.a1]pFiB[[LdR\JNrXo^4tV]WCr8n"@!+%3S.@jP5<WD$Hl[+9EX@c,p_*\;/,r-I$!0"Nq]"[hiNb@[Yi,2$_+ZiOEg)[:)@+@cP2$R@#uVq$H)2u,G:&<&<G4Q^"j89'r3b&%lF0mbCY:mdUi<]K6r7*.3HjbVTkrXUQ8>/EQC$.&cV\DgNp+#`IcYh+(@Q;`'@)EU^2$<VjIHf$7&Q:p+dS_K7X5T:=:cMb=>6>\%_XSfmrEQW:^r$-Hg^Hdir5TVdG_q(3M&WX%%.$VsSgPnrj8^j"C[<oC*<?F!&hWV:-%q&*:?gNee,9^a#MJu+'s7C[_XMG(mJ;&1%^RcStoi.1sAp_s/l3:-8?`GE<+KQc8g!A^O.\PU760iqaa#TLZHD%JAk/T^afDg9shu<R=rU4*Cq>^Hj0E:ItrV2.tp`KP,+921%%s3"dKO5mGDo&Dqus763fp#f]]l(@tN?iT]#J,MUd?[i!pJ,/F%?iTq/rqc6^TDnZd-);jOTDuenr;6NQ^\dR$"2@;P'*~>%AI9_PrivateDataEnd